// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type LifecycleEnvironmentManagedInstanceId struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// LifecycleEnvironmentManagedInstanceIdInput is an input type that accepts LifecycleEnvironmentManagedInstanceIdArgs and LifecycleEnvironmentManagedInstanceIdOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentManagedInstanceIdInput` via:
//
//	LifecycleEnvironmentManagedInstanceIdArgs{...}
type LifecycleEnvironmentManagedInstanceIdInput interface {
	pulumi.Input

	ToLifecycleEnvironmentManagedInstanceIdOutput() LifecycleEnvironmentManagedInstanceIdOutput
	ToLifecycleEnvironmentManagedInstanceIdOutputWithContext(context.Context) LifecycleEnvironmentManagedInstanceIdOutput
}

type LifecycleEnvironmentManagedInstanceIdArgs struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LifecycleEnvironmentManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (i LifecycleEnvironmentManagedInstanceIdArgs) ToLifecycleEnvironmentManagedInstanceIdOutput() LifecycleEnvironmentManagedInstanceIdOutput {
	return i.ToLifecycleEnvironmentManagedInstanceIdOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentManagedInstanceIdArgs) ToLifecycleEnvironmentManagedInstanceIdOutputWithContext(ctx context.Context) LifecycleEnvironmentManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentManagedInstanceIdOutput)
}

// LifecycleEnvironmentManagedInstanceIdArrayInput is an input type that accepts LifecycleEnvironmentManagedInstanceIdArray and LifecycleEnvironmentManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentManagedInstanceIdArrayInput` via:
//
//	LifecycleEnvironmentManagedInstanceIdArray{ LifecycleEnvironmentManagedInstanceIdArgs{...} }
type LifecycleEnvironmentManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToLifecycleEnvironmentManagedInstanceIdArrayOutput() LifecycleEnvironmentManagedInstanceIdArrayOutput
	ToLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(context.Context) LifecycleEnvironmentManagedInstanceIdArrayOutput
}

type LifecycleEnvironmentManagedInstanceIdArray []LifecycleEnvironmentManagedInstanceIdInput

func (LifecycleEnvironmentManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (i LifecycleEnvironmentManagedInstanceIdArray) ToLifecycleEnvironmentManagedInstanceIdArrayOutput() LifecycleEnvironmentManagedInstanceIdArrayOutput {
	return i.ToLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentManagedInstanceIdArray) ToLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentManagedInstanceIdArrayOutput)
}

type LifecycleEnvironmentManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (o LifecycleEnvironmentManagedInstanceIdOutput) ToLifecycleEnvironmentManagedInstanceIdOutput() LifecycleEnvironmentManagedInstanceIdOutput {
	return o
}

func (o LifecycleEnvironmentManagedInstanceIdOutput) ToLifecycleEnvironmentManagedInstanceIdOutputWithContext(ctx context.Context) LifecycleEnvironmentManagedInstanceIdOutput {
	return o
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LifecycleEnvironmentManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentManagedInstanceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o LifecycleEnvironmentManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentManagedInstanceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LifecycleEnvironmentManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (o LifecycleEnvironmentManagedInstanceIdArrayOutput) ToLifecycleEnvironmentManagedInstanceIdArrayOutput() LifecycleEnvironmentManagedInstanceIdArrayOutput {
	return o
}

func (o LifecycleEnvironmentManagedInstanceIdArrayOutput) ToLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentManagedInstanceIdArrayOutput {
	return o
}

func (o LifecycleEnvironmentManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) LifecycleEnvironmentManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecycleEnvironmentManagedInstanceId {
		return vs[0].([]LifecycleEnvironmentManagedInstanceId)[vs[1].(int)]
	}).(LifecycleEnvironmentManagedInstanceIdOutput)
}

type LifecycleEnvironmentStage struct {
	// The CPU architecture of the managed instance(s) in the lifecycle environment.
	ArchType *string `pulumi:"archType"`
	// The OCID of the tenancy containing the lifecycle environment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// The OCID of the lifecycle environment for the lifecycle stage.
	LifecycleEnvironmentId *string `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds []LifecycleEnvironmentStageManagedInstanceId `pulumi:"managedInstanceIds"`
	// The operating system type of the managed instance(s) in the lifecycle environment.
	OsFamily *string `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank int `pulumi:"rank"`
	// Identifying information for the specified software source.
	SoftwareSourceIds []LifecycleEnvironmentStageSoftwareSourceId `pulumi:"softwareSourceIds"`
	// The current state of the lifecycle environment.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified *string `pulumi:"timeModified"`
	// The software source vendor name.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VendorName *string `pulumi:"vendorName"`
}

// LifecycleEnvironmentStageInput is an input type that accepts LifecycleEnvironmentStageArgs and LifecycleEnvironmentStageOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentStageInput` via:
//
//	LifecycleEnvironmentStageArgs{...}
type LifecycleEnvironmentStageInput interface {
	pulumi.Input

	ToLifecycleEnvironmentStageOutput() LifecycleEnvironmentStageOutput
	ToLifecycleEnvironmentStageOutputWithContext(context.Context) LifecycleEnvironmentStageOutput
}

type LifecycleEnvironmentStageArgs struct {
	// The CPU architecture of the managed instance(s) in the lifecycle environment.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the tenancy containing the lifecycle environment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The OCID of the lifecycle environment for the lifecycle stage.
	LifecycleEnvironmentId pulumi.StringPtrInput `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds LifecycleEnvironmentStageManagedInstanceIdArrayInput `pulumi:"managedInstanceIds"`
	// The operating system type of the managed instance(s) in the lifecycle environment.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank pulumi.IntInput `pulumi:"rank"`
	// Identifying information for the specified software source.
	SoftwareSourceIds LifecycleEnvironmentStageSoftwareSourceIdArrayInput `pulumi:"softwareSourceIds"`
	// The current state of the lifecycle environment.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// The software source vendor name.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (LifecycleEnvironmentStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentStage)(nil)).Elem()
}

func (i LifecycleEnvironmentStageArgs) ToLifecycleEnvironmentStageOutput() LifecycleEnvironmentStageOutput {
	return i.ToLifecycleEnvironmentStageOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentStageArgs) ToLifecycleEnvironmentStageOutputWithContext(ctx context.Context) LifecycleEnvironmentStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentStageOutput)
}

// LifecycleEnvironmentStageArrayInput is an input type that accepts LifecycleEnvironmentStageArray and LifecycleEnvironmentStageArrayOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentStageArrayInput` via:
//
//	LifecycleEnvironmentStageArray{ LifecycleEnvironmentStageArgs{...} }
type LifecycleEnvironmentStageArrayInput interface {
	pulumi.Input

	ToLifecycleEnvironmentStageArrayOutput() LifecycleEnvironmentStageArrayOutput
	ToLifecycleEnvironmentStageArrayOutputWithContext(context.Context) LifecycleEnvironmentStageArrayOutput
}

type LifecycleEnvironmentStageArray []LifecycleEnvironmentStageInput

func (LifecycleEnvironmentStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentStage)(nil)).Elem()
}

func (i LifecycleEnvironmentStageArray) ToLifecycleEnvironmentStageArrayOutput() LifecycleEnvironmentStageArrayOutput {
	return i.ToLifecycleEnvironmentStageArrayOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentStageArray) ToLifecycleEnvironmentStageArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentStageArrayOutput)
}

type LifecycleEnvironmentStageOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentStage)(nil)).Elem()
}

func (o LifecycleEnvironmentStageOutput) ToLifecycleEnvironmentStageOutput() LifecycleEnvironmentStageOutput {
	return o
}

func (o LifecycleEnvironmentStageOutput) ToLifecycleEnvironmentStageOutputWithContext(ctx context.Context) LifecycleEnvironmentStageOutput {
	return o
}

// The CPU architecture of the managed instance(s) in the lifecycle environment.
func (o LifecycleEnvironmentStageOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the tenancy containing the lifecycle environment.
func (o LifecycleEnvironmentStageOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LifecycleEnvironmentStageOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LifecycleEnvironmentStageOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LifecycleEnvironmentStageOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o LifecycleEnvironmentStageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of the lifecycle environment for the lifecycle stage.
func (o LifecycleEnvironmentStageOutput) LifecycleEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.LifecycleEnvironmentId }).(pulumi.StringPtrOutput)
}

// The list of managed instances specified lifecycle stage.
func (o LifecycleEnvironmentStageOutput) ManagedInstanceIds() LifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) []LifecycleEnvironmentStageManagedInstanceId {
		return v.ManagedInstanceIds
	}).(LifecycleEnvironmentStageManagedInstanceIdArrayOutput)
}

// The operating system type of the managed instance(s) in the lifecycle environment.
func (o LifecycleEnvironmentStageOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
func (o LifecycleEnvironmentStageOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) int { return v.Rank }).(pulumi.IntOutput)
}

// Identifying information for the specified software source.
func (o LifecycleEnvironmentStageOutput) SoftwareSourceIds() LifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) []LifecycleEnvironmentStageSoftwareSourceId {
		return v.SoftwareSourceIds
	}).(LifecycleEnvironmentStageSoftwareSourceIdArrayOutput)
}

// The current state of the lifecycle environment.
func (o LifecycleEnvironmentStageOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LifecycleEnvironmentStageOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
func (o LifecycleEnvironmentStageOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
func (o LifecycleEnvironmentStageOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.TimeModified }).(pulumi.StringPtrOutput)
}

// The software source vendor name.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o LifecycleEnvironmentStageOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStage) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type LifecycleEnvironmentStageArrayOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentStage)(nil)).Elem()
}

func (o LifecycleEnvironmentStageArrayOutput) ToLifecycleEnvironmentStageArrayOutput() LifecycleEnvironmentStageArrayOutput {
	return o
}

func (o LifecycleEnvironmentStageArrayOutput) ToLifecycleEnvironmentStageArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentStageArrayOutput {
	return o
}

func (o LifecycleEnvironmentStageArrayOutput) Index(i pulumi.IntInput) LifecycleEnvironmentStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecycleEnvironmentStage {
		return vs[0].([]LifecycleEnvironmentStage)[vs[1].(int)]
	}).(LifecycleEnvironmentStageOutput)
}

type LifecycleEnvironmentStageManagedInstanceId struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// LifecycleEnvironmentStageManagedInstanceIdInput is an input type that accepts LifecycleEnvironmentStageManagedInstanceIdArgs and LifecycleEnvironmentStageManagedInstanceIdOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentStageManagedInstanceIdInput` via:
//
//	LifecycleEnvironmentStageManagedInstanceIdArgs{...}
type LifecycleEnvironmentStageManagedInstanceIdInput interface {
	pulumi.Input

	ToLifecycleEnvironmentStageManagedInstanceIdOutput() LifecycleEnvironmentStageManagedInstanceIdOutput
	ToLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(context.Context) LifecycleEnvironmentStageManagedInstanceIdOutput
}

type LifecycleEnvironmentStageManagedInstanceIdArgs struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LifecycleEnvironmentStageManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (i LifecycleEnvironmentStageManagedInstanceIdArgs) ToLifecycleEnvironmentStageManagedInstanceIdOutput() LifecycleEnvironmentStageManagedInstanceIdOutput {
	return i.ToLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentStageManagedInstanceIdArgs) ToLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(ctx context.Context) LifecycleEnvironmentStageManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentStageManagedInstanceIdOutput)
}

// LifecycleEnvironmentStageManagedInstanceIdArrayInput is an input type that accepts LifecycleEnvironmentStageManagedInstanceIdArray and LifecycleEnvironmentStageManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentStageManagedInstanceIdArrayInput` via:
//
//	LifecycleEnvironmentStageManagedInstanceIdArray{ LifecycleEnvironmentStageManagedInstanceIdArgs{...} }
type LifecycleEnvironmentStageManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToLifecycleEnvironmentStageManagedInstanceIdArrayOutput() LifecycleEnvironmentStageManagedInstanceIdArrayOutput
	ToLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(context.Context) LifecycleEnvironmentStageManagedInstanceIdArrayOutput
}

type LifecycleEnvironmentStageManagedInstanceIdArray []LifecycleEnvironmentStageManagedInstanceIdInput

func (LifecycleEnvironmentStageManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (i LifecycleEnvironmentStageManagedInstanceIdArray) ToLifecycleEnvironmentStageManagedInstanceIdArrayOutput() LifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return i.ToLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentStageManagedInstanceIdArray) ToLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentStageManagedInstanceIdArrayOutput)
}

type LifecycleEnvironmentStageManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentStageManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (o LifecycleEnvironmentStageManagedInstanceIdOutput) ToLifecycleEnvironmentStageManagedInstanceIdOutput() LifecycleEnvironmentStageManagedInstanceIdOutput {
	return o
}

func (o LifecycleEnvironmentStageManagedInstanceIdOutput) ToLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(ctx context.Context) LifecycleEnvironmentStageManagedInstanceIdOutput {
	return o
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LifecycleEnvironmentStageManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStageManagedInstanceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o LifecycleEnvironmentStageManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStageManagedInstanceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LifecycleEnvironmentStageManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentStageManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (o LifecycleEnvironmentStageManagedInstanceIdArrayOutput) ToLifecycleEnvironmentStageManagedInstanceIdArrayOutput() LifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return o
}

func (o LifecycleEnvironmentStageManagedInstanceIdArrayOutput) ToLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return o
}

func (o LifecycleEnvironmentStageManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) LifecycleEnvironmentStageManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecycleEnvironmentStageManagedInstanceId {
		return vs[0].([]LifecycleEnvironmentStageManagedInstanceId)[vs[1].(int)]
	}).(LifecycleEnvironmentStageManagedInstanceIdOutput)
}

type LifecycleEnvironmentStageSoftwareSourceId struct {
	// (Updatable) User specified information about the lifecycle environment.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// LifecycleEnvironmentStageSoftwareSourceIdInput is an input type that accepts LifecycleEnvironmentStageSoftwareSourceIdArgs and LifecycleEnvironmentStageSoftwareSourceIdOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentStageSoftwareSourceIdInput` via:
//
//	LifecycleEnvironmentStageSoftwareSourceIdArgs{...}
type LifecycleEnvironmentStageSoftwareSourceIdInput interface {
	pulumi.Input

	ToLifecycleEnvironmentStageSoftwareSourceIdOutput() LifecycleEnvironmentStageSoftwareSourceIdOutput
	ToLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(context.Context) LifecycleEnvironmentStageSoftwareSourceIdOutput
}

type LifecycleEnvironmentStageSoftwareSourceIdArgs struct {
	// (Updatable) User specified information about the lifecycle environment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (LifecycleEnvironmentStageSoftwareSourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (i LifecycleEnvironmentStageSoftwareSourceIdArgs) ToLifecycleEnvironmentStageSoftwareSourceIdOutput() LifecycleEnvironmentStageSoftwareSourceIdOutput {
	return i.ToLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentStageSoftwareSourceIdArgs) ToLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(ctx context.Context) LifecycleEnvironmentStageSoftwareSourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentStageSoftwareSourceIdOutput)
}

// LifecycleEnvironmentStageSoftwareSourceIdArrayInput is an input type that accepts LifecycleEnvironmentStageSoftwareSourceIdArray and LifecycleEnvironmentStageSoftwareSourceIdArrayOutput values.
// You can construct a concrete instance of `LifecycleEnvironmentStageSoftwareSourceIdArrayInput` via:
//
//	LifecycleEnvironmentStageSoftwareSourceIdArray{ LifecycleEnvironmentStageSoftwareSourceIdArgs{...} }
type LifecycleEnvironmentStageSoftwareSourceIdArrayInput interface {
	pulumi.Input

	ToLifecycleEnvironmentStageSoftwareSourceIdArrayOutput() LifecycleEnvironmentStageSoftwareSourceIdArrayOutput
	ToLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(context.Context) LifecycleEnvironmentStageSoftwareSourceIdArrayOutput
}

type LifecycleEnvironmentStageSoftwareSourceIdArray []LifecycleEnvironmentStageSoftwareSourceIdInput

func (LifecycleEnvironmentStageSoftwareSourceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (i LifecycleEnvironmentStageSoftwareSourceIdArray) ToLifecycleEnvironmentStageSoftwareSourceIdArrayOutput() LifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return i.ToLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(context.Background())
}

func (i LifecycleEnvironmentStageSoftwareSourceIdArray) ToLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleEnvironmentStageSoftwareSourceIdArrayOutput)
}

type LifecycleEnvironmentStageSoftwareSourceIdOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentStageSoftwareSourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (o LifecycleEnvironmentStageSoftwareSourceIdOutput) ToLifecycleEnvironmentStageSoftwareSourceIdOutput() LifecycleEnvironmentStageSoftwareSourceIdOutput {
	return o
}

func (o LifecycleEnvironmentStageSoftwareSourceIdOutput) ToLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(ctx context.Context) LifecycleEnvironmentStageSoftwareSourceIdOutput {
	return o
}

// (Updatable) User specified information about the lifecycle environment.
func (o LifecycleEnvironmentStageSoftwareSourceIdOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStageSoftwareSourceId) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LifecycleEnvironmentStageSoftwareSourceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStageSoftwareSourceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o LifecycleEnvironmentStageSoftwareSourceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStageSoftwareSourceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o LifecycleEnvironmentStageSoftwareSourceIdOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleEnvironmentStageSoftwareSourceId) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type LifecycleEnvironmentStageSoftwareSourceIdArrayOutput struct{ *pulumi.OutputState }

func (LifecycleEnvironmentStageSoftwareSourceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (o LifecycleEnvironmentStageSoftwareSourceIdArrayOutput) ToLifecycleEnvironmentStageSoftwareSourceIdArrayOutput() LifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return o
}

func (o LifecycleEnvironmentStageSoftwareSourceIdArrayOutput) ToLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) LifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return o
}

func (o LifecycleEnvironmentStageSoftwareSourceIdArrayOutput) Index(i pulumi.IntInput) LifecycleEnvironmentStageSoftwareSourceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecycleEnvironmentStageSoftwareSourceId {
		return vs[0].([]LifecycleEnvironmentStageSoftwareSourceId)[vs[1].(int)]
	}).(LifecycleEnvironmentStageSoftwareSourceIdOutput)
}

type ManagedInstanceGroupSoftwareSource struct {
	// (Updatable) Details about the managed instance group.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name for the managed instance group. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// ManagedInstanceGroupSoftwareSourceInput is an input type that accepts ManagedInstanceGroupSoftwareSourceArgs and ManagedInstanceGroupSoftwareSourceOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupSoftwareSourceInput` via:
//
//	ManagedInstanceGroupSoftwareSourceArgs{...}
type ManagedInstanceGroupSoftwareSourceInput interface {
	pulumi.Input

	ToManagedInstanceGroupSoftwareSourceOutput() ManagedInstanceGroupSoftwareSourceOutput
	ToManagedInstanceGroupSoftwareSourceOutputWithContext(context.Context) ManagedInstanceGroupSoftwareSourceOutput
}

type ManagedInstanceGroupSoftwareSourceArgs struct {
	// (Updatable) Details about the managed instance group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) A user-friendly name for the managed instance group. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (ManagedInstanceGroupSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceGroupSoftwareSourceArgs) ToManagedInstanceGroupSoftwareSourceOutput() ManagedInstanceGroupSoftwareSourceOutput {
	return i.ToManagedInstanceGroupSoftwareSourceOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupSoftwareSourceArgs) ToManagedInstanceGroupSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceGroupSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupSoftwareSourceOutput)
}

// ManagedInstanceGroupSoftwareSourceArrayInput is an input type that accepts ManagedInstanceGroupSoftwareSourceArray and ManagedInstanceGroupSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceGroupSoftwareSourceArrayInput` via:
//
//	ManagedInstanceGroupSoftwareSourceArray{ ManagedInstanceGroupSoftwareSourceArgs{...} }
type ManagedInstanceGroupSoftwareSourceArrayInput interface {
	pulumi.Input

	ToManagedInstanceGroupSoftwareSourceArrayOutput() ManagedInstanceGroupSoftwareSourceArrayOutput
	ToManagedInstanceGroupSoftwareSourceArrayOutputWithContext(context.Context) ManagedInstanceGroupSoftwareSourceArrayOutput
}

type ManagedInstanceGroupSoftwareSourceArray []ManagedInstanceGroupSoftwareSourceInput

func (ManagedInstanceGroupSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (i ManagedInstanceGroupSoftwareSourceArray) ToManagedInstanceGroupSoftwareSourceArrayOutput() ManagedInstanceGroupSoftwareSourceArrayOutput {
	return i.ToManagedInstanceGroupSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceGroupSoftwareSourceArray) ToManagedInstanceGroupSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceGroupSoftwareSourceArrayOutput)
}

type ManagedInstanceGroupSoftwareSourceOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceGroupSoftwareSourceOutput) ToManagedInstanceGroupSoftwareSourceOutput() ManagedInstanceGroupSoftwareSourceOutput {
	return o
}

func (o ManagedInstanceGroupSoftwareSourceOutput) ToManagedInstanceGroupSoftwareSourceOutputWithContext(ctx context.Context) ManagedInstanceGroupSoftwareSourceOutput {
	return o
}

// (Updatable) Details about the managed instance group.
func (o ManagedInstanceGroupSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceGroupSoftwareSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) A user-friendly name for the managed instance group. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ManagedInstanceGroupSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceGroupSoftwareSource) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o ManagedInstanceGroupSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceGroupSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o ManagedInstanceGroupSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceGroupSoftwareSource) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type ManagedInstanceGroupSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceGroupSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (o ManagedInstanceGroupSoftwareSourceArrayOutput) ToManagedInstanceGroupSoftwareSourceArrayOutput() ManagedInstanceGroupSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceGroupSoftwareSourceArrayOutput) ToManagedInstanceGroupSoftwareSourceArrayOutputWithContext(ctx context.Context) ManagedInstanceGroupSoftwareSourceArrayOutput {
	return o
}

func (o ManagedInstanceGroupSoftwareSourceArrayOutput) Index(i pulumi.IntInput) ManagedInstanceGroupSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceGroupSoftwareSource {
		return vs[0].([]ManagedInstanceGroupSoftwareSource)[vs[1].(int)]
	}).(ManagedInstanceGroupSoftwareSourceOutput)
}

type ManagementStationMirror struct {
	// (Updatable) Directory for the mirroring
	Directory string `pulumi:"directory"`
	// (Updatable) Port that the proxy will use
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Port string `pulumi:"port"`
	// (Updatable) Local path for the sslcert
	Sslcert *string `pulumi:"sslcert"`
	// (Updatable) Default sslport for the mirror
	Sslport string `pulumi:"sslport"`
}

// ManagementStationMirrorInput is an input type that accepts ManagementStationMirrorArgs and ManagementStationMirrorOutput values.
// You can construct a concrete instance of `ManagementStationMirrorInput` via:
//
//	ManagementStationMirrorArgs{...}
type ManagementStationMirrorInput interface {
	pulumi.Input

	ToManagementStationMirrorOutput() ManagementStationMirrorOutput
	ToManagementStationMirrorOutputWithContext(context.Context) ManagementStationMirrorOutput
}

type ManagementStationMirrorArgs struct {
	// (Updatable) Directory for the mirroring
	Directory pulumi.StringInput `pulumi:"directory"`
	// (Updatable) Port that the proxy will use
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Port pulumi.StringInput `pulumi:"port"`
	// (Updatable) Local path for the sslcert
	Sslcert pulumi.StringPtrInput `pulumi:"sslcert"`
	// (Updatable) Default sslport for the mirror
	Sslport pulumi.StringInput `pulumi:"sslport"`
}

func (ManagementStationMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementStationMirror)(nil)).Elem()
}

func (i ManagementStationMirrorArgs) ToManagementStationMirrorOutput() ManagementStationMirrorOutput {
	return i.ToManagementStationMirrorOutputWithContext(context.Background())
}

func (i ManagementStationMirrorArgs) ToManagementStationMirrorOutputWithContext(ctx context.Context) ManagementStationMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorOutput)
}

func (i ManagementStationMirrorArgs) ToManagementStationMirrorPtrOutput() ManagementStationMirrorPtrOutput {
	return i.ToManagementStationMirrorPtrOutputWithContext(context.Background())
}

func (i ManagementStationMirrorArgs) ToManagementStationMirrorPtrOutputWithContext(ctx context.Context) ManagementStationMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorOutput).ToManagementStationMirrorPtrOutputWithContext(ctx)
}

// ManagementStationMirrorPtrInput is an input type that accepts ManagementStationMirrorArgs, ManagementStationMirrorPtr and ManagementStationMirrorPtrOutput values.
// You can construct a concrete instance of `ManagementStationMirrorPtrInput` via:
//
//	        ManagementStationMirrorArgs{...}
//
//	or:
//
//	        nil
type ManagementStationMirrorPtrInput interface {
	pulumi.Input

	ToManagementStationMirrorPtrOutput() ManagementStationMirrorPtrOutput
	ToManagementStationMirrorPtrOutputWithContext(context.Context) ManagementStationMirrorPtrOutput
}

type managementStationMirrorPtrType ManagementStationMirrorArgs

func ManagementStationMirrorPtr(v *ManagementStationMirrorArgs) ManagementStationMirrorPtrInput {
	return (*managementStationMirrorPtrType)(v)
}

func (*managementStationMirrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationMirror)(nil)).Elem()
}

func (i *managementStationMirrorPtrType) ToManagementStationMirrorPtrOutput() ManagementStationMirrorPtrOutput {
	return i.ToManagementStationMirrorPtrOutputWithContext(context.Background())
}

func (i *managementStationMirrorPtrType) ToManagementStationMirrorPtrOutputWithContext(ctx context.Context) ManagementStationMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorPtrOutput)
}

type ManagementStationMirrorOutput struct{ *pulumi.OutputState }

func (ManagementStationMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementStationMirror)(nil)).Elem()
}

func (o ManagementStationMirrorOutput) ToManagementStationMirrorOutput() ManagementStationMirrorOutput {
	return o
}

func (o ManagementStationMirrorOutput) ToManagementStationMirrorOutputWithContext(ctx context.Context) ManagementStationMirrorOutput {
	return o
}

func (o ManagementStationMirrorOutput) ToManagementStationMirrorPtrOutput() ManagementStationMirrorPtrOutput {
	return o.ToManagementStationMirrorPtrOutputWithContext(context.Background())
}

func (o ManagementStationMirrorOutput) ToManagementStationMirrorPtrOutputWithContext(ctx context.Context) ManagementStationMirrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementStationMirror) *ManagementStationMirror {
		return &v
	}).(ManagementStationMirrorPtrOutput)
}

// (Updatable) Directory for the mirroring
func (o ManagementStationMirrorOutput) Directory() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementStationMirror) string { return v.Directory }).(pulumi.StringOutput)
}

// (Updatable) Port that the proxy will use
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagementStationMirrorOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementStationMirror) string { return v.Port }).(pulumi.StringOutput)
}

// (Updatable) Local path for the sslcert
func (o ManagementStationMirrorOutput) Sslcert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementStationMirror) *string { return v.Sslcert }).(pulumi.StringPtrOutput)
}

// (Updatable) Default sslport for the mirror
func (o ManagementStationMirrorOutput) Sslport() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementStationMirror) string { return v.Sslport }).(pulumi.StringOutput)
}

type ManagementStationMirrorPtrOutput struct{ *pulumi.OutputState }

func (ManagementStationMirrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationMirror)(nil)).Elem()
}

func (o ManagementStationMirrorPtrOutput) ToManagementStationMirrorPtrOutput() ManagementStationMirrorPtrOutput {
	return o
}

func (o ManagementStationMirrorPtrOutput) ToManagementStationMirrorPtrOutputWithContext(ctx context.Context) ManagementStationMirrorPtrOutput {
	return o
}

func (o ManagementStationMirrorPtrOutput) Elem() ManagementStationMirrorOutput {
	return o.ApplyT(func(v *ManagementStationMirror) ManagementStationMirror {
		if v != nil {
			return *v
		}
		var ret ManagementStationMirror
		return ret
	}).(ManagementStationMirrorOutput)
}

// (Updatable) Directory for the mirroring
func (o ManagementStationMirrorPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementStationMirror) *string {
		if v == nil {
			return nil
		}
		return &v.Directory
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Port that the proxy will use
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagementStationMirrorPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementStationMirror) *string {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Local path for the sslcert
func (o ManagementStationMirrorPtrOutput) Sslcert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementStationMirror) *string {
		if v == nil {
			return nil
		}
		return v.Sslcert
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Default sslport for the mirror
func (o ManagementStationMirrorPtrOutput) Sslport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementStationMirror) *string {
		if v == nil {
			return nil
		}
		return &v.Sslport
	}).(pulumi.StringPtrOutput)
}

type ManagementStationMirrorSyncStatus struct {
	// Total of mirrors in 'failed' state
	Failed *int `pulumi:"failed"`
	// Total of mirrors in 'queued' state
	Queued *int `pulumi:"queued"`
	// Total of mirrors in 'synced' state
	Synced *int `pulumi:"synced"`
	// Total of mirrors in 'syncing' state
	Syncing *int `pulumi:"syncing"`
	// Total of mirrors in 'failed' state
	Unsynced *int `pulumi:"unsynced"`
}

// ManagementStationMirrorSyncStatusInput is an input type that accepts ManagementStationMirrorSyncStatusArgs and ManagementStationMirrorSyncStatusOutput values.
// You can construct a concrete instance of `ManagementStationMirrorSyncStatusInput` via:
//
//	ManagementStationMirrorSyncStatusArgs{...}
type ManagementStationMirrorSyncStatusInput interface {
	pulumi.Input

	ToManagementStationMirrorSyncStatusOutput() ManagementStationMirrorSyncStatusOutput
	ToManagementStationMirrorSyncStatusOutputWithContext(context.Context) ManagementStationMirrorSyncStatusOutput
}

type ManagementStationMirrorSyncStatusArgs struct {
	// Total of mirrors in 'failed' state
	Failed pulumi.IntPtrInput `pulumi:"failed"`
	// Total of mirrors in 'queued' state
	Queued pulumi.IntPtrInput `pulumi:"queued"`
	// Total of mirrors in 'synced' state
	Synced pulumi.IntPtrInput `pulumi:"synced"`
	// Total of mirrors in 'syncing' state
	Syncing pulumi.IntPtrInput `pulumi:"syncing"`
	// Total of mirrors in 'failed' state
	Unsynced pulumi.IntPtrInput `pulumi:"unsynced"`
}

func (ManagementStationMirrorSyncStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (i ManagementStationMirrorSyncStatusArgs) ToManagementStationMirrorSyncStatusOutput() ManagementStationMirrorSyncStatusOutput {
	return i.ToManagementStationMirrorSyncStatusOutputWithContext(context.Background())
}

func (i ManagementStationMirrorSyncStatusArgs) ToManagementStationMirrorSyncStatusOutputWithContext(ctx context.Context) ManagementStationMirrorSyncStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorSyncStatusOutput)
}

// ManagementStationMirrorSyncStatusArrayInput is an input type that accepts ManagementStationMirrorSyncStatusArray and ManagementStationMirrorSyncStatusArrayOutput values.
// You can construct a concrete instance of `ManagementStationMirrorSyncStatusArrayInput` via:
//
//	ManagementStationMirrorSyncStatusArray{ ManagementStationMirrorSyncStatusArgs{...} }
type ManagementStationMirrorSyncStatusArrayInput interface {
	pulumi.Input

	ToManagementStationMirrorSyncStatusArrayOutput() ManagementStationMirrorSyncStatusArrayOutput
	ToManagementStationMirrorSyncStatusArrayOutputWithContext(context.Context) ManagementStationMirrorSyncStatusArrayOutput
}

type ManagementStationMirrorSyncStatusArray []ManagementStationMirrorSyncStatusInput

func (ManagementStationMirrorSyncStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (i ManagementStationMirrorSyncStatusArray) ToManagementStationMirrorSyncStatusArrayOutput() ManagementStationMirrorSyncStatusArrayOutput {
	return i.ToManagementStationMirrorSyncStatusArrayOutputWithContext(context.Background())
}

func (i ManagementStationMirrorSyncStatusArray) ToManagementStationMirrorSyncStatusArrayOutputWithContext(ctx context.Context) ManagementStationMirrorSyncStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationMirrorSyncStatusArrayOutput)
}

type ManagementStationMirrorSyncStatusOutput struct{ *pulumi.OutputState }

func (ManagementStationMirrorSyncStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (o ManagementStationMirrorSyncStatusOutput) ToManagementStationMirrorSyncStatusOutput() ManagementStationMirrorSyncStatusOutput {
	return o
}

func (o ManagementStationMirrorSyncStatusOutput) ToManagementStationMirrorSyncStatusOutputWithContext(ctx context.Context) ManagementStationMirrorSyncStatusOutput {
	return o
}

// Total of mirrors in 'failed' state
func (o ManagementStationMirrorSyncStatusOutput) Failed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementStationMirrorSyncStatus) *int { return v.Failed }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'queued' state
func (o ManagementStationMirrorSyncStatusOutput) Queued() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementStationMirrorSyncStatus) *int { return v.Queued }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'synced' state
func (o ManagementStationMirrorSyncStatusOutput) Synced() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementStationMirrorSyncStatus) *int { return v.Synced }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'syncing' state
func (o ManagementStationMirrorSyncStatusOutput) Syncing() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementStationMirrorSyncStatus) *int { return v.Syncing }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'failed' state
func (o ManagementStationMirrorSyncStatusOutput) Unsynced() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementStationMirrorSyncStatus) *int { return v.Unsynced }).(pulumi.IntPtrOutput)
}

type ManagementStationMirrorSyncStatusArrayOutput struct{ *pulumi.OutputState }

func (ManagementStationMirrorSyncStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (o ManagementStationMirrorSyncStatusArrayOutput) ToManagementStationMirrorSyncStatusArrayOutput() ManagementStationMirrorSyncStatusArrayOutput {
	return o
}

func (o ManagementStationMirrorSyncStatusArrayOutput) ToManagementStationMirrorSyncStatusArrayOutputWithContext(ctx context.Context) ManagementStationMirrorSyncStatusArrayOutput {
	return o
}

func (o ManagementStationMirrorSyncStatusArrayOutput) Index(i pulumi.IntInput) ManagementStationMirrorSyncStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementStationMirrorSyncStatus {
		return vs[0].([]ManagementStationMirrorSyncStatus)[vs[1].(int)]
	}).(ManagementStationMirrorSyncStatusOutput)
}

type ManagementStationProxy struct {
	// (Updatable) URL that the proxy will forward to
	Forward *string `pulumi:"forward"`
	// (Updatable) List of hosts
	Hosts []string `pulumi:"hosts"`
	// (Updatable) To enable or disable the proxy (default true)
	IsEnabled bool `pulumi:"isEnabled"`
	// (Updatable) Port that the proxy will use
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Port *string `pulumi:"port"`
}

// ManagementStationProxyInput is an input type that accepts ManagementStationProxyArgs and ManagementStationProxyOutput values.
// You can construct a concrete instance of `ManagementStationProxyInput` via:
//
//	ManagementStationProxyArgs{...}
type ManagementStationProxyInput interface {
	pulumi.Input

	ToManagementStationProxyOutput() ManagementStationProxyOutput
	ToManagementStationProxyOutputWithContext(context.Context) ManagementStationProxyOutput
}

type ManagementStationProxyArgs struct {
	// (Updatable) URL that the proxy will forward to
	Forward pulumi.StringPtrInput `pulumi:"forward"`
	// (Updatable) List of hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// (Updatable) To enable or disable the proxy (default true)
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// (Updatable) Port that the proxy will use
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (ManagementStationProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementStationProxy)(nil)).Elem()
}

func (i ManagementStationProxyArgs) ToManagementStationProxyOutput() ManagementStationProxyOutput {
	return i.ToManagementStationProxyOutputWithContext(context.Background())
}

func (i ManagementStationProxyArgs) ToManagementStationProxyOutputWithContext(ctx context.Context) ManagementStationProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationProxyOutput)
}

func (i ManagementStationProxyArgs) ToManagementStationProxyPtrOutput() ManagementStationProxyPtrOutput {
	return i.ToManagementStationProxyPtrOutputWithContext(context.Background())
}

func (i ManagementStationProxyArgs) ToManagementStationProxyPtrOutputWithContext(ctx context.Context) ManagementStationProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationProxyOutput).ToManagementStationProxyPtrOutputWithContext(ctx)
}

// ManagementStationProxyPtrInput is an input type that accepts ManagementStationProxyArgs, ManagementStationProxyPtr and ManagementStationProxyPtrOutput values.
// You can construct a concrete instance of `ManagementStationProxyPtrInput` via:
//
//	        ManagementStationProxyArgs{...}
//
//	or:
//
//	        nil
type ManagementStationProxyPtrInput interface {
	pulumi.Input

	ToManagementStationProxyPtrOutput() ManagementStationProxyPtrOutput
	ToManagementStationProxyPtrOutputWithContext(context.Context) ManagementStationProxyPtrOutput
}

type managementStationProxyPtrType ManagementStationProxyArgs

func ManagementStationProxyPtr(v *ManagementStationProxyArgs) ManagementStationProxyPtrInput {
	return (*managementStationProxyPtrType)(v)
}

func (*managementStationProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationProxy)(nil)).Elem()
}

func (i *managementStationProxyPtrType) ToManagementStationProxyPtrOutput() ManagementStationProxyPtrOutput {
	return i.ToManagementStationProxyPtrOutputWithContext(context.Background())
}

func (i *managementStationProxyPtrType) ToManagementStationProxyPtrOutputWithContext(ctx context.Context) ManagementStationProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementStationProxyPtrOutput)
}

type ManagementStationProxyOutput struct{ *pulumi.OutputState }

func (ManagementStationProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementStationProxy)(nil)).Elem()
}

func (o ManagementStationProxyOutput) ToManagementStationProxyOutput() ManagementStationProxyOutput {
	return o
}

func (o ManagementStationProxyOutput) ToManagementStationProxyOutputWithContext(ctx context.Context) ManagementStationProxyOutput {
	return o
}

func (o ManagementStationProxyOutput) ToManagementStationProxyPtrOutput() ManagementStationProxyPtrOutput {
	return o.ToManagementStationProxyPtrOutputWithContext(context.Background())
}

func (o ManagementStationProxyOutput) ToManagementStationProxyPtrOutputWithContext(ctx context.Context) ManagementStationProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementStationProxy) *ManagementStationProxy {
		return &v
	}).(ManagementStationProxyPtrOutput)
}

// (Updatable) URL that the proxy will forward to
func (o ManagementStationProxyOutput) Forward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementStationProxy) *string { return v.Forward }).(pulumi.StringPtrOutput)
}

// (Updatable) List of hosts
func (o ManagementStationProxyOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementStationProxy) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// (Updatable) To enable or disable the proxy (default true)
func (o ManagementStationProxyOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ManagementStationProxy) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Port that the proxy will use
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagementStationProxyOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementStationProxy) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type ManagementStationProxyPtrOutput struct{ *pulumi.OutputState }

func (ManagementStationProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementStationProxy)(nil)).Elem()
}

func (o ManagementStationProxyPtrOutput) ToManagementStationProxyPtrOutput() ManagementStationProxyPtrOutput {
	return o
}

func (o ManagementStationProxyPtrOutput) ToManagementStationProxyPtrOutputWithContext(ctx context.Context) ManagementStationProxyPtrOutput {
	return o
}

func (o ManagementStationProxyPtrOutput) Elem() ManagementStationProxyOutput {
	return o.ApplyT(func(v *ManagementStationProxy) ManagementStationProxy {
		if v != nil {
			return *v
		}
		var ret ManagementStationProxy
		return ret
	}).(ManagementStationProxyOutput)
}

// (Updatable) URL that the proxy will forward to
func (o ManagementStationProxyPtrOutput) Forward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementStationProxy) *string {
		if v == nil {
			return nil
		}
		return v.Forward
	}).(pulumi.StringPtrOutput)
}

// (Updatable) List of hosts
func (o ManagementStationProxyPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementStationProxy) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// (Updatable) To enable or disable the proxy (default true)
func (o ManagementStationProxyPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagementStationProxy) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Port that the proxy will use
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagementStationProxyPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementStationProxy) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

type ProfileLifecycleEnvironment struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// ProfileLifecycleEnvironmentInput is an input type that accepts ProfileLifecycleEnvironmentArgs and ProfileLifecycleEnvironmentOutput values.
// You can construct a concrete instance of `ProfileLifecycleEnvironmentInput` via:
//
//	ProfileLifecycleEnvironmentArgs{...}
type ProfileLifecycleEnvironmentInput interface {
	pulumi.Input

	ToProfileLifecycleEnvironmentOutput() ProfileLifecycleEnvironmentOutput
	ToProfileLifecycleEnvironmentOutputWithContext(context.Context) ProfileLifecycleEnvironmentOutput
}

type ProfileLifecycleEnvironmentArgs struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ProfileLifecycleEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileLifecycleEnvironment)(nil)).Elem()
}

func (i ProfileLifecycleEnvironmentArgs) ToProfileLifecycleEnvironmentOutput() ProfileLifecycleEnvironmentOutput {
	return i.ToProfileLifecycleEnvironmentOutputWithContext(context.Background())
}

func (i ProfileLifecycleEnvironmentArgs) ToProfileLifecycleEnvironmentOutputWithContext(ctx context.Context) ProfileLifecycleEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileLifecycleEnvironmentOutput)
}

// ProfileLifecycleEnvironmentArrayInput is an input type that accepts ProfileLifecycleEnvironmentArray and ProfileLifecycleEnvironmentArrayOutput values.
// You can construct a concrete instance of `ProfileLifecycleEnvironmentArrayInput` via:
//
//	ProfileLifecycleEnvironmentArray{ ProfileLifecycleEnvironmentArgs{...} }
type ProfileLifecycleEnvironmentArrayInput interface {
	pulumi.Input

	ToProfileLifecycleEnvironmentArrayOutput() ProfileLifecycleEnvironmentArrayOutput
	ToProfileLifecycleEnvironmentArrayOutputWithContext(context.Context) ProfileLifecycleEnvironmentArrayOutput
}

type ProfileLifecycleEnvironmentArray []ProfileLifecycleEnvironmentInput

func (ProfileLifecycleEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileLifecycleEnvironment)(nil)).Elem()
}

func (i ProfileLifecycleEnvironmentArray) ToProfileLifecycleEnvironmentArrayOutput() ProfileLifecycleEnvironmentArrayOutput {
	return i.ToProfileLifecycleEnvironmentArrayOutputWithContext(context.Background())
}

func (i ProfileLifecycleEnvironmentArray) ToProfileLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) ProfileLifecycleEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileLifecycleEnvironmentArrayOutput)
}

type ProfileLifecycleEnvironmentOutput struct{ *pulumi.OutputState }

func (ProfileLifecycleEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileLifecycleEnvironment)(nil)).Elem()
}

func (o ProfileLifecycleEnvironmentOutput) ToProfileLifecycleEnvironmentOutput() ProfileLifecycleEnvironmentOutput {
	return o
}

func (o ProfileLifecycleEnvironmentOutput) ToProfileLifecycleEnvironmentOutputWithContext(ctx context.Context) ProfileLifecycleEnvironmentOutput {
	return o
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ProfileLifecycleEnvironmentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileLifecycleEnvironment) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o ProfileLifecycleEnvironmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileLifecycleEnvironment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ProfileLifecycleEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ProfileLifecycleEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileLifecycleEnvironment)(nil)).Elem()
}

func (o ProfileLifecycleEnvironmentArrayOutput) ToProfileLifecycleEnvironmentArrayOutput() ProfileLifecycleEnvironmentArrayOutput {
	return o
}

func (o ProfileLifecycleEnvironmentArrayOutput) ToProfileLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) ProfileLifecycleEnvironmentArrayOutput {
	return o
}

func (o ProfileLifecycleEnvironmentArrayOutput) Index(i pulumi.IntInput) ProfileLifecycleEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileLifecycleEnvironment {
		return vs[0].([]ProfileLifecycleEnvironment)[vs[1].(int)]
	}).(ProfileLifecycleEnvironmentOutput)
}

type ProfileLifecycleStage struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// ProfileLifecycleStageInput is an input type that accepts ProfileLifecycleStageArgs and ProfileLifecycleStageOutput values.
// You can construct a concrete instance of `ProfileLifecycleStageInput` via:
//
//	ProfileLifecycleStageArgs{...}
type ProfileLifecycleStageInput interface {
	pulumi.Input

	ToProfileLifecycleStageOutput() ProfileLifecycleStageOutput
	ToProfileLifecycleStageOutputWithContext(context.Context) ProfileLifecycleStageOutput
}

type ProfileLifecycleStageArgs struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ProfileLifecycleStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileLifecycleStage)(nil)).Elem()
}

func (i ProfileLifecycleStageArgs) ToProfileLifecycleStageOutput() ProfileLifecycleStageOutput {
	return i.ToProfileLifecycleStageOutputWithContext(context.Background())
}

func (i ProfileLifecycleStageArgs) ToProfileLifecycleStageOutputWithContext(ctx context.Context) ProfileLifecycleStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileLifecycleStageOutput)
}

// ProfileLifecycleStageArrayInput is an input type that accepts ProfileLifecycleStageArray and ProfileLifecycleStageArrayOutput values.
// You can construct a concrete instance of `ProfileLifecycleStageArrayInput` via:
//
//	ProfileLifecycleStageArray{ ProfileLifecycleStageArgs{...} }
type ProfileLifecycleStageArrayInput interface {
	pulumi.Input

	ToProfileLifecycleStageArrayOutput() ProfileLifecycleStageArrayOutput
	ToProfileLifecycleStageArrayOutputWithContext(context.Context) ProfileLifecycleStageArrayOutput
}

type ProfileLifecycleStageArray []ProfileLifecycleStageInput

func (ProfileLifecycleStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileLifecycleStage)(nil)).Elem()
}

func (i ProfileLifecycleStageArray) ToProfileLifecycleStageArrayOutput() ProfileLifecycleStageArrayOutput {
	return i.ToProfileLifecycleStageArrayOutputWithContext(context.Background())
}

func (i ProfileLifecycleStageArray) ToProfileLifecycleStageArrayOutputWithContext(ctx context.Context) ProfileLifecycleStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileLifecycleStageArrayOutput)
}

type ProfileLifecycleStageOutput struct{ *pulumi.OutputState }

func (ProfileLifecycleStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileLifecycleStage)(nil)).Elem()
}

func (o ProfileLifecycleStageOutput) ToProfileLifecycleStageOutput() ProfileLifecycleStageOutput {
	return o
}

func (o ProfileLifecycleStageOutput) ToProfileLifecycleStageOutputWithContext(ctx context.Context) ProfileLifecycleStageOutput {
	return o
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ProfileLifecycleStageOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileLifecycleStage) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o ProfileLifecycleStageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileLifecycleStage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ProfileLifecycleStageArrayOutput struct{ *pulumi.OutputState }

func (ProfileLifecycleStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileLifecycleStage)(nil)).Elem()
}

func (o ProfileLifecycleStageArrayOutput) ToProfileLifecycleStageArrayOutput() ProfileLifecycleStageArrayOutput {
	return o
}

func (o ProfileLifecycleStageArrayOutput) ToProfileLifecycleStageArrayOutputWithContext(ctx context.Context) ProfileLifecycleStageArrayOutput {
	return o
}

func (o ProfileLifecycleStageArrayOutput) Index(i pulumi.IntInput) ProfileLifecycleStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileLifecycleStage {
		return vs[0].([]ProfileLifecycleStage)[vs[1].(int)]
	}).(ProfileLifecycleStageOutput)
}

type ProfileManagedInstanceGroup struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// ProfileManagedInstanceGroupInput is an input type that accepts ProfileManagedInstanceGroupArgs and ProfileManagedInstanceGroupOutput values.
// You can construct a concrete instance of `ProfileManagedInstanceGroupInput` via:
//
//	ProfileManagedInstanceGroupArgs{...}
type ProfileManagedInstanceGroupInput interface {
	pulumi.Input

	ToProfileManagedInstanceGroupOutput() ProfileManagedInstanceGroupOutput
	ToProfileManagedInstanceGroupOutputWithContext(context.Context) ProfileManagedInstanceGroupOutput
}

type ProfileManagedInstanceGroupArgs struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ProfileManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileManagedInstanceGroup)(nil)).Elem()
}

func (i ProfileManagedInstanceGroupArgs) ToProfileManagedInstanceGroupOutput() ProfileManagedInstanceGroupOutput {
	return i.ToProfileManagedInstanceGroupOutputWithContext(context.Background())
}

func (i ProfileManagedInstanceGroupArgs) ToProfileManagedInstanceGroupOutputWithContext(ctx context.Context) ProfileManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileManagedInstanceGroupOutput)
}

// ProfileManagedInstanceGroupArrayInput is an input type that accepts ProfileManagedInstanceGroupArray and ProfileManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `ProfileManagedInstanceGroupArrayInput` via:
//
//	ProfileManagedInstanceGroupArray{ ProfileManagedInstanceGroupArgs{...} }
type ProfileManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToProfileManagedInstanceGroupArrayOutput() ProfileManagedInstanceGroupArrayOutput
	ToProfileManagedInstanceGroupArrayOutputWithContext(context.Context) ProfileManagedInstanceGroupArrayOutput
}

type ProfileManagedInstanceGroupArray []ProfileManagedInstanceGroupInput

func (ProfileManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileManagedInstanceGroup)(nil)).Elem()
}

func (i ProfileManagedInstanceGroupArray) ToProfileManagedInstanceGroupArrayOutput() ProfileManagedInstanceGroupArrayOutput {
	return i.ToProfileManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i ProfileManagedInstanceGroupArray) ToProfileManagedInstanceGroupArrayOutputWithContext(ctx context.Context) ProfileManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileManagedInstanceGroupArrayOutput)
}

type ProfileManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (ProfileManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileManagedInstanceGroup)(nil)).Elem()
}

func (o ProfileManagedInstanceGroupOutput) ToProfileManagedInstanceGroupOutput() ProfileManagedInstanceGroupOutput {
	return o
}

func (o ProfileManagedInstanceGroupOutput) ToProfileManagedInstanceGroupOutputWithContext(ctx context.Context) ProfileManagedInstanceGroupOutput {
	return o
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ProfileManagedInstanceGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileManagedInstanceGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o ProfileManagedInstanceGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileManagedInstanceGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ProfileManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (ProfileManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileManagedInstanceGroup)(nil)).Elem()
}

func (o ProfileManagedInstanceGroupArrayOutput) ToProfileManagedInstanceGroupArrayOutput() ProfileManagedInstanceGroupArrayOutput {
	return o
}

func (o ProfileManagedInstanceGroupArrayOutput) ToProfileManagedInstanceGroupArrayOutputWithContext(ctx context.Context) ProfileManagedInstanceGroupArrayOutput {
	return o
}

func (o ProfileManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) ProfileManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileManagedInstanceGroup {
		return vs[0].([]ProfileManagedInstanceGroup)[vs[1].(int)]
	}).(ProfileManagedInstanceGroupOutput)
}

type ProfileSoftwareSource struct {
	// (Updatable) The description of the registration profile.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// ProfileSoftwareSourceInput is an input type that accepts ProfileSoftwareSourceArgs and ProfileSoftwareSourceOutput values.
// You can construct a concrete instance of `ProfileSoftwareSourceInput` via:
//
//	ProfileSoftwareSourceArgs{...}
type ProfileSoftwareSourceInput interface {
	pulumi.Input

	ToProfileSoftwareSourceOutput() ProfileSoftwareSourceOutput
	ToProfileSoftwareSourceOutputWithContext(context.Context) ProfileSoftwareSourceOutput
}

type ProfileSoftwareSourceArgs struct {
	// (Updatable) The description of the registration profile.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (ProfileSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSoftwareSource)(nil)).Elem()
}

func (i ProfileSoftwareSourceArgs) ToProfileSoftwareSourceOutput() ProfileSoftwareSourceOutput {
	return i.ToProfileSoftwareSourceOutputWithContext(context.Background())
}

func (i ProfileSoftwareSourceArgs) ToProfileSoftwareSourceOutputWithContext(ctx context.Context) ProfileSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSoftwareSourceOutput)
}

// ProfileSoftwareSourceArrayInput is an input type that accepts ProfileSoftwareSourceArray and ProfileSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `ProfileSoftwareSourceArrayInput` via:
//
//	ProfileSoftwareSourceArray{ ProfileSoftwareSourceArgs{...} }
type ProfileSoftwareSourceArrayInput interface {
	pulumi.Input

	ToProfileSoftwareSourceArrayOutput() ProfileSoftwareSourceArrayOutput
	ToProfileSoftwareSourceArrayOutputWithContext(context.Context) ProfileSoftwareSourceArrayOutput
}

type ProfileSoftwareSourceArray []ProfileSoftwareSourceInput

func (ProfileSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileSoftwareSource)(nil)).Elem()
}

func (i ProfileSoftwareSourceArray) ToProfileSoftwareSourceArrayOutput() ProfileSoftwareSourceArrayOutput {
	return i.ToProfileSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i ProfileSoftwareSourceArray) ToProfileSoftwareSourceArrayOutputWithContext(ctx context.Context) ProfileSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileSoftwareSourceArrayOutput)
}

type ProfileSoftwareSourceOutput struct{ *pulumi.OutputState }

func (ProfileSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileSoftwareSource)(nil)).Elem()
}

func (o ProfileSoftwareSourceOutput) ToProfileSoftwareSourceOutput() ProfileSoftwareSourceOutput {
	return o
}

func (o ProfileSoftwareSourceOutput) ToProfileSoftwareSourceOutputWithContext(ctx context.Context) ProfileSoftwareSourceOutput {
	return o
}

// (Updatable) The description of the registration profile.
func (o ProfileSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSoftwareSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ProfileSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSoftwareSource) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o ProfileSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o ProfileSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileSoftwareSource) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type ProfileSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (ProfileSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileSoftwareSource)(nil)).Elem()
}

func (o ProfileSoftwareSourceArrayOutput) ToProfileSoftwareSourceArrayOutput() ProfileSoftwareSourceArrayOutput {
	return o
}

func (o ProfileSoftwareSourceArrayOutput) ToProfileSoftwareSourceArrayOutputWithContext(ctx context.Context) ProfileSoftwareSourceArrayOutput {
	return o
}

func (o ProfileSoftwareSourceArrayOutput) Index(i pulumi.IntInput) ProfileSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileSoftwareSource {
		return vs[0].([]ProfileSoftwareSource)[vs[1].(int)]
	}).(ProfileSoftwareSourceOutput)
}

type SoftwareSourceCustomSoftwareSourceFilter struct {
	// (Updatable) The list of module stream/profile filters.
	ModuleStreamProfileFilters []SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter `pulumi:"moduleStreamProfileFilters"`
	// (Updatable) The list of package filters.
	PackageFilters []SoftwareSourceCustomSoftwareSourceFilterPackageFilter `pulumi:"packageFilters"`
	// (Updatable) The list of group filters.
	PackageGroupFilters []SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter `pulumi:"packageGroupFilters"`
}

// SoftwareSourceCustomSoftwareSourceFilterInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterArgs and SoftwareSourceCustomSoftwareSourceFilterOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterInput` via:
//
//	SoftwareSourceCustomSoftwareSourceFilterArgs{...}
type SoftwareSourceCustomSoftwareSourceFilterInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterOutput() SoftwareSourceCustomSoftwareSourceFilterOutput
	ToSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterOutput
}

type SoftwareSourceCustomSoftwareSourceFilterArgs struct {
	// (Updatable) The list of module stream/profile filters.
	ModuleStreamProfileFilters SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput `pulumi:"moduleStreamProfileFilters"`
	// (Updatable) The list of package filters.
	PackageFilters SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput `pulumi:"packageFilters"`
	// (Updatable) The list of group filters.
	PackageGroupFilters SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput `pulumi:"packageGroupFilters"`
}

func (SoftwareSourceCustomSoftwareSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (i SoftwareSourceCustomSoftwareSourceFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterOutput() SoftwareSourceCustomSoftwareSourceFilterOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterOutput)
}

func (i SoftwareSourceCustomSoftwareSourceFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutput() SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterOutput).ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(ctx)
}

// SoftwareSourceCustomSoftwareSourceFilterPtrInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterArgs, SoftwareSourceCustomSoftwareSourceFilterPtr and SoftwareSourceCustomSoftwareSourceFilterPtrOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterPtrInput` via:
//
//	        SoftwareSourceCustomSoftwareSourceFilterArgs{...}
//
//	or:
//
//	        nil
type SoftwareSourceCustomSoftwareSourceFilterPtrInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterPtrOutput() SoftwareSourceCustomSoftwareSourceFilterPtrOutput
	ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterPtrOutput
}

type softwareSourceCustomSoftwareSourceFilterPtrType SoftwareSourceCustomSoftwareSourceFilterArgs

func SoftwareSourceCustomSoftwareSourceFilterPtr(v *SoftwareSourceCustomSoftwareSourceFilterArgs) SoftwareSourceCustomSoftwareSourceFilterPtrInput {
	return (*softwareSourceCustomSoftwareSourceFilterPtrType)(v)
}

func (*softwareSourceCustomSoftwareSourceFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (i *softwareSourceCustomSoftwareSourceFilterPtrType) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutput() SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(context.Background())
}

func (i *softwareSourceCustomSoftwareSourceFilterPtrType) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterPtrOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterOutput() SoftwareSourceCustomSoftwareSourceFilterOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutput() SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return o.ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(context.Background())
}

func (o SoftwareSourceCustomSoftwareSourceFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftwareSourceCustomSoftwareSourceFilter) *SoftwareSourceCustomSoftwareSourceFilter {
		return &v
	}).(SoftwareSourceCustomSoftwareSourceFilterPtrOutput)
}

// (Updatable) The list of module stream/profile filters.
func (o SoftwareSourceCustomSoftwareSourceFilterOutput) ModuleStreamProfileFilters() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilter) []SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter {
		return v.ModuleStreamProfileFilters
	}).(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput)
}

// (Updatable) The list of package filters.
func (o SoftwareSourceCustomSoftwareSourceFilterOutput) PackageFilters() SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilter) []SoftwareSourceCustomSoftwareSourceFilterPackageFilter {
		return v.PackageFilters
	}).(SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput)
}

// (Updatable) The list of group filters.
func (o SoftwareSourceCustomSoftwareSourceFilterOutput) PackageGroupFilters() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilter) []SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter {
		return v.PackageGroupFilters
	}).(SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterPtrOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterPtrOutput) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutput() SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPtrOutput) ToSoftwareSourceCustomSoftwareSourceFilterPtrOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPtrOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPtrOutput) Elem() SoftwareSourceCustomSoftwareSourceFilterOutput {
	return o.ApplyT(func(v *SoftwareSourceCustomSoftwareSourceFilter) SoftwareSourceCustomSoftwareSourceFilter {
		if v != nil {
			return *v
		}
		var ret SoftwareSourceCustomSoftwareSourceFilter
		return ret
	}).(SoftwareSourceCustomSoftwareSourceFilterOutput)
}

// (Updatable) The list of module stream/profile filters.
func (o SoftwareSourceCustomSoftwareSourceFilterPtrOutput) ModuleStreamProfileFilters() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o.ApplyT(func(v *SoftwareSourceCustomSoftwareSourceFilter) []SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter {
		if v == nil {
			return nil
		}
		return v.ModuleStreamProfileFilters
	}).(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput)
}

// (Updatable) The list of package filters.
func (o SoftwareSourceCustomSoftwareSourceFilterPtrOutput) PackageFilters() SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o.ApplyT(func(v *SoftwareSourceCustomSoftwareSourceFilter) []SoftwareSourceCustomSoftwareSourceFilterPackageFilter {
		if v == nil {
			return nil
		}
		return v.PackageFilters
	}).(SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput)
}

// (Updatable) The list of group filters.
func (o SoftwareSourceCustomSoftwareSourceFilterPtrOutput) PackageGroupFilters() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o.ApplyT(func(v *SoftwareSourceCustomSoftwareSourceFilter) []SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter {
		if v == nil {
			return nil
		}
		return v.PackageGroupFilters
	}).(SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter struct {
	// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType string `pulumi:"filterType"`
	// (Updatable) Module name.
	ModuleName string `pulumi:"moduleName"`
	// (Updatable) Profile name.
	ProfileName *string `pulumi:"profileName"`
	// (Updatable) Stream name.
	StreamName *string `pulumi:"streamName"`
}

// SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs and SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput` via:
//
//	SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{...}
type SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput
	ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput
}

type SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs struct {
	// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// (Updatable) Module name.
	ModuleName pulumi.StringInput `pulumi:"moduleName"`
	// (Updatable) Profile name.
	ProfileName pulumi.StringPtrInput `pulumi:"profileName"`
	// (Updatable) Stream name.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (i SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput)
}

// SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray and SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput` via:
//
//	SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray{ SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{...} }
type SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput
	ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput
}

type SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray []SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput

func (SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (i SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return o
}

// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

// (Updatable) Module name.
func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ModuleName() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) string { return v.ModuleName }).(pulumi.StringOutput)
}

// (Updatable) Profile name.
func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.ProfileName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Stream name.
func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ToSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) Index(i pulumi.IntInput) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter {
		return vs[0].([]SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)[vs[1].(int)]
	}).(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterPackageFilter struct {
	// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType string `pulumi:"filterType"`
	// (Updatable) The package name.
	PackageName *string `pulumi:"packageName"`
	// (Updatable) The package name pattern.
	PackageNamePattern *string `pulumi:"packageNamePattern"`
	// (Updatable) The package version, which is denoted by 'version-release', or 'epoch:version-release'.
	PackageVersion *string `pulumi:"packageVersion"`
}

// SoftwareSourceCustomSoftwareSourceFilterPackageFilterInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs and SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterPackageFilterInput` via:
//
//	SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs{...}
type SoftwareSourceCustomSoftwareSourceFilterPackageFilterInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput() SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput
	ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput
}

type SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs struct {
	// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// (Updatable) The package name.
	PackageName pulumi.StringPtrInput `pulumi:"packageName"`
	// (Updatable) The package name pattern.
	PackageNamePattern pulumi.StringPtrInput `pulumi:"packageNamePattern"`
	// (Updatable) The package version, which is denoted by 'version-release', or 'epoch:version-release'.
	PackageVersion pulumi.StringPtrInput `pulumi:"packageVersion"`
}

func (SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput() SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput)
}

// SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterPackageFilterArray and SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput` via:
//
//	SoftwareSourceCustomSoftwareSourceFilterPackageFilterArray{ SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs{...} }
type SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput
	ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput
}

type SoftwareSourceCustomSoftwareSourceFilterPackageFilterArray []SoftwareSourceCustomSoftwareSourceFilterPackageFilterInput

func (SoftwareSourceCustomSoftwareSourceFilterPackageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageFilterArray) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageFilterArray) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput() SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return o
}

// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterPackageFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

// (Updatable) The package name.
func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterPackageFilter) *string { return v.PackageName }).(pulumi.StringPtrOutput)
}

// (Updatable) The package name pattern.
func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) PackageNamePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterPackageFilter) *string { return v.PackageNamePattern }).(pulumi.StringPtrOutput)
}

// (Updatable) The package version, which is denoted by 'version-release', or 'epoch:version-release'.
func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) PackageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterPackageFilter) *string { return v.PackageVersion }).(pulumi.StringPtrOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) Index(i pulumi.IntInput) SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SoftwareSourceCustomSoftwareSourceFilterPackageFilter {
		return vs[0].([]SoftwareSourceCustomSoftwareSourceFilterPackageFilter)[vs[1].(int)]
	}).(SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter struct {
	// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType string `pulumi:"filterType"`
	// (Updatable) List of package group names.
	PackageGroups []string `pulumi:"packageGroups"`
}

// SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs and SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput` via:
//
//	SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs{...}
type SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput
	ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput
}

type SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs struct {
	// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// (Updatable) List of package group names.
	PackageGroups pulumi.StringArrayInput `pulumi:"packageGroups"`
}

func (SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput)
}

// SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput is an input type that accepts SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray and SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput values.
// You can construct a concrete instance of `SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput` via:
//
//	SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray{ SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs{...} }
type SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput interface {
	pulumi.Input

	ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput
	ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput
}

type SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray []SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput

func (SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return i.ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(context.Background())
}

func (i SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return o
}

// (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

// (Updatable) List of package group names.
func (o SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) PackageGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter) []string { return v.PackageGroups }).(pulumi.StringArrayOutput)
}

type SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ToSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(ctx context.Context) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o
}

func (o SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) Index(i pulumi.IntInput) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter {
		return vs[0].([]SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)[vs[1].(int)]
	}).(SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput)
}

type SoftwareSourceVendorSoftwareSource struct {
	// (Updatable) User friendly name.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) The OCID of the resource that is immutable on creation.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Id string `pulumi:"id"`
}

// SoftwareSourceVendorSoftwareSourceInput is an input type that accepts SoftwareSourceVendorSoftwareSourceArgs and SoftwareSourceVendorSoftwareSourceOutput values.
// You can construct a concrete instance of `SoftwareSourceVendorSoftwareSourceInput` via:
//
//	SoftwareSourceVendorSoftwareSourceArgs{...}
type SoftwareSourceVendorSoftwareSourceInput interface {
	pulumi.Input

	ToSoftwareSourceVendorSoftwareSourceOutput() SoftwareSourceVendorSoftwareSourceOutput
	ToSoftwareSourceVendorSoftwareSourceOutputWithContext(context.Context) SoftwareSourceVendorSoftwareSourceOutput
}

type SoftwareSourceVendorSoftwareSourceArgs struct {
	// (Updatable) User friendly name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// (Updatable) The OCID of the resource that is immutable on creation.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Id pulumi.StringInput `pulumi:"id"`
}

func (SoftwareSourceVendorSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (i SoftwareSourceVendorSoftwareSourceArgs) ToSoftwareSourceVendorSoftwareSourceOutput() SoftwareSourceVendorSoftwareSourceOutput {
	return i.ToSoftwareSourceVendorSoftwareSourceOutputWithContext(context.Background())
}

func (i SoftwareSourceVendorSoftwareSourceArgs) ToSoftwareSourceVendorSoftwareSourceOutputWithContext(ctx context.Context) SoftwareSourceVendorSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceVendorSoftwareSourceOutput)
}

// SoftwareSourceVendorSoftwareSourceArrayInput is an input type that accepts SoftwareSourceVendorSoftwareSourceArray and SoftwareSourceVendorSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `SoftwareSourceVendorSoftwareSourceArrayInput` via:
//
//	SoftwareSourceVendorSoftwareSourceArray{ SoftwareSourceVendorSoftwareSourceArgs{...} }
type SoftwareSourceVendorSoftwareSourceArrayInput interface {
	pulumi.Input

	ToSoftwareSourceVendorSoftwareSourceArrayOutput() SoftwareSourceVendorSoftwareSourceArrayOutput
	ToSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(context.Context) SoftwareSourceVendorSoftwareSourceArrayOutput
}

type SoftwareSourceVendorSoftwareSourceArray []SoftwareSourceVendorSoftwareSourceInput

func (SoftwareSourceVendorSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (i SoftwareSourceVendorSoftwareSourceArray) ToSoftwareSourceVendorSoftwareSourceArrayOutput() SoftwareSourceVendorSoftwareSourceArrayOutput {
	return i.ToSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i SoftwareSourceVendorSoftwareSourceArray) ToSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(ctx context.Context) SoftwareSourceVendorSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceVendorSoftwareSourceArrayOutput)
}

type SoftwareSourceVendorSoftwareSourceOutput struct{ *pulumi.OutputState }

func (SoftwareSourceVendorSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (o SoftwareSourceVendorSoftwareSourceOutput) ToSoftwareSourceVendorSoftwareSourceOutput() SoftwareSourceVendorSoftwareSourceOutput {
	return o
}

func (o SoftwareSourceVendorSoftwareSourceOutput) ToSoftwareSourceVendorSoftwareSourceOutputWithContext(ctx context.Context) SoftwareSourceVendorSoftwareSourceOutput {
	return o
}

// (Updatable) User friendly name.
func (o SoftwareSourceVendorSoftwareSourceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareSourceVendorSoftwareSource) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the resource that is immutable on creation.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SoftwareSourceVendorSoftwareSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareSourceVendorSoftwareSource) string { return v.Id }).(pulumi.StringOutput)
}

type SoftwareSourceVendorSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (SoftwareSourceVendorSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (o SoftwareSourceVendorSoftwareSourceArrayOutput) ToSoftwareSourceVendorSoftwareSourceArrayOutput() SoftwareSourceVendorSoftwareSourceArrayOutput {
	return o
}

func (o SoftwareSourceVendorSoftwareSourceArrayOutput) ToSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(ctx context.Context) SoftwareSourceVendorSoftwareSourceArrayOutput {
	return o
}

func (o SoftwareSourceVendorSoftwareSourceArrayOutput) Index(i pulumi.IntInput) SoftwareSourceVendorSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SoftwareSourceVendorSoftwareSource {
		return vs[0].([]SoftwareSourceVendorSoftwareSource)[vs[1].(int)]
	}).(SoftwareSourceVendorSoftwareSourceOutput)
}

type GetLifecycleEnvironmentManagedInstanceId struct {
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetLifecycleEnvironmentManagedInstanceIdInput is an input type that accepts GetLifecycleEnvironmentManagedInstanceIdArgs and GetLifecycleEnvironmentManagedInstanceIdOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentManagedInstanceIdInput` via:
//
//	GetLifecycleEnvironmentManagedInstanceIdArgs{...}
type GetLifecycleEnvironmentManagedInstanceIdInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentManagedInstanceIdOutput() GetLifecycleEnvironmentManagedInstanceIdOutput
	ToGetLifecycleEnvironmentManagedInstanceIdOutputWithContext(context.Context) GetLifecycleEnvironmentManagedInstanceIdOutput
}

type GetLifecycleEnvironmentManagedInstanceIdArgs struct {
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetLifecycleEnvironmentManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentManagedInstanceIdArgs) ToGetLifecycleEnvironmentManagedInstanceIdOutput() GetLifecycleEnvironmentManagedInstanceIdOutput {
	return i.ToGetLifecycleEnvironmentManagedInstanceIdOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentManagedInstanceIdArgs) ToGetLifecycleEnvironmentManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentManagedInstanceIdOutput)
}

// GetLifecycleEnvironmentManagedInstanceIdArrayInput is an input type that accepts GetLifecycleEnvironmentManagedInstanceIdArray and GetLifecycleEnvironmentManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentManagedInstanceIdArrayInput` via:
//
//	GetLifecycleEnvironmentManagedInstanceIdArray{ GetLifecycleEnvironmentManagedInstanceIdArgs{...} }
type GetLifecycleEnvironmentManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentManagedInstanceIdArrayOutput() GetLifecycleEnvironmentManagedInstanceIdArrayOutput
	ToGetLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(context.Context) GetLifecycleEnvironmentManagedInstanceIdArrayOutput
}

type GetLifecycleEnvironmentManagedInstanceIdArray []GetLifecycleEnvironmentManagedInstanceIdInput

func (GetLifecycleEnvironmentManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentManagedInstanceIdArray) ToGetLifecycleEnvironmentManagedInstanceIdArrayOutput() GetLifecycleEnvironmentManagedInstanceIdArrayOutput {
	return i.ToGetLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentManagedInstanceIdArray) ToGetLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentManagedInstanceIdArrayOutput)
}

type GetLifecycleEnvironmentManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentManagedInstanceIdOutput) ToGetLifecycleEnvironmentManagedInstanceIdOutput() GetLifecycleEnvironmentManagedInstanceIdOutput {
	return o
}

func (o GetLifecycleEnvironmentManagedInstanceIdOutput) ToGetLifecycleEnvironmentManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentManagedInstanceIdOutput {
	return o
}

// Software source name.
func (o GetLifecycleEnvironmentManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentManagedInstanceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentManagedInstanceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentManagedInstanceIdArrayOutput() GetLifecycleEnvironmentManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentManagedInstanceId {
		return vs[0].([]GetLifecycleEnvironmentManagedInstanceId)[vs[1].(int)]
	}).(GetLifecycleEnvironmentManagedInstanceIdOutput)
}

type GetLifecycleEnvironmentStage struct {
	// The CPU architecture of the target instances.
	ArchType *string `pulumi:"archType"`
	// The OCID of the tenancy containing the lifecycle stage.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// The OCID of the lifecycle environment.
	LifecycleEnvironmentId *string `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds []GetLifecycleEnvironmentStageManagedInstanceId `pulumi:"managedInstanceIds"`
	// The operating system type of the target instances.
	OsFamily *string `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank *int `pulumi:"rank"`
	// Identifying information for the specified software source.
	SoftwareSourceIds []GetLifecycleEnvironmentStageSoftwareSourceId `pulumi:"softwareSourceIds"`
	// The current state of the lifecycle environment.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified *string `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName *string `pulumi:"vendorName"`
}

// GetLifecycleEnvironmentStageInput is an input type that accepts GetLifecycleEnvironmentStageArgs and GetLifecycleEnvironmentStageOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentStageInput` via:
//
//	GetLifecycleEnvironmentStageArgs{...}
type GetLifecycleEnvironmentStageInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentStageOutput() GetLifecycleEnvironmentStageOutput
	ToGetLifecycleEnvironmentStageOutputWithContext(context.Context) GetLifecycleEnvironmentStageOutput
}

type GetLifecycleEnvironmentStageArgs struct {
	// The CPU architecture of the target instances.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the tenancy containing the lifecycle stage.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The OCID of the lifecycle environment.
	LifecycleEnvironmentId pulumi.StringPtrInput `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds GetLifecycleEnvironmentStageManagedInstanceIdArrayInput `pulumi:"managedInstanceIds"`
	// The operating system type of the target instances.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank pulumi.IntPtrInput `pulumi:"rank"`
	// Identifying information for the specified software source.
	SoftwareSourceIds GetLifecycleEnvironmentStageSoftwareSourceIdArrayInput `pulumi:"softwareSourceIds"`
	// The current state of the lifecycle environment.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (GetLifecycleEnvironmentStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentStage)(nil)).Elem()
}

func (i GetLifecycleEnvironmentStageArgs) ToGetLifecycleEnvironmentStageOutput() GetLifecycleEnvironmentStageOutput {
	return i.ToGetLifecycleEnvironmentStageOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentStageArgs) ToGetLifecycleEnvironmentStageOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentStageOutput)
}

// GetLifecycleEnvironmentStageArrayInput is an input type that accepts GetLifecycleEnvironmentStageArray and GetLifecycleEnvironmentStageArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentStageArrayInput` via:
//
//	GetLifecycleEnvironmentStageArray{ GetLifecycleEnvironmentStageArgs{...} }
type GetLifecycleEnvironmentStageArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentStageArrayOutput() GetLifecycleEnvironmentStageArrayOutput
	ToGetLifecycleEnvironmentStageArrayOutputWithContext(context.Context) GetLifecycleEnvironmentStageArrayOutput
}

type GetLifecycleEnvironmentStageArray []GetLifecycleEnvironmentStageInput

func (GetLifecycleEnvironmentStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentStage)(nil)).Elem()
}

func (i GetLifecycleEnvironmentStageArray) ToGetLifecycleEnvironmentStageArrayOutput() GetLifecycleEnvironmentStageArrayOutput {
	return i.ToGetLifecycleEnvironmentStageArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentStageArray) ToGetLifecycleEnvironmentStageArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentStageArrayOutput)
}

type GetLifecycleEnvironmentStageOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentStage)(nil)).Elem()
}

func (o GetLifecycleEnvironmentStageOutput) ToGetLifecycleEnvironmentStageOutput() GetLifecycleEnvironmentStageOutput {
	return o
}

func (o GetLifecycleEnvironmentStageOutput) ToGetLifecycleEnvironmentStageOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageOutput {
	return o
}

// The CPU architecture of the target instances.
func (o GetLifecycleEnvironmentStageOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the tenancy containing the lifecycle stage.
func (o GetLifecycleEnvironmentStageOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetLifecycleEnvironmentStageOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Software source name.
func (o GetLifecycleEnvironmentStageOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetLifecycleEnvironmentStageOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentStageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of the lifecycle environment.
func (o GetLifecycleEnvironmentStageOutput) LifecycleEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.LifecycleEnvironmentId }).(pulumi.StringPtrOutput)
}

// The list of managed instances specified lifecycle stage.
func (o GetLifecycleEnvironmentStageOutput) ManagedInstanceIds() GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) []GetLifecycleEnvironmentStageManagedInstanceId {
		return v.ManagedInstanceIds
	}).(GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput)
}

// The operating system type of the target instances.
func (o GetLifecycleEnvironmentStageOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
func (o GetLifecycleEnvironmentStageOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *int { return v.Rank }).(pulumi.IntPtrOutput)
}

// Identifying information for the specified software source.
func (o GetLifecycleEnvironmentStageOutput) SoftwareSourceIds() GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) []GetLifecycleEnvironmentStageSoftwareSourceId {
		return v.SoftwareSourceIds
	}).(GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput)
}

// The current state of the lifecycle environment.
func (o GetLifecycleEnvironmentStageOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetLifecycleEnvironmentStageOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
func (o GetLifecycleEnvironmentStageOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
func (o GetLifecycleEnvironmentStageOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.TimeModified }).(pulumi.StringPtrOutput)
}

// The software source vendor name.
func (o GetLifecycleEnvironmentStageOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStage) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentStageArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentStage)(nil)).Elem()
}

func (o GetLifecycleEnvironmentStageArrayOutput) ToGetLifecycleEnvironmentStageArrayOutput() GetLifecycleEnvironmentStageArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentStageArrayOutput) ToGetLifecycleEnvironmentStageArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentStageArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentStage {
		return vs[0].([]GetLifecycleEnvironmentStage)[vs[1].(int)]
	}).(GetLifecycleEnvironmentStageOutput)
}

type GetLifecycleEnvironmentStageManagedInstanceId struct {
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetLifecycleEnvironmentStageManagedInstanceIdInput is an input type that accepts GetLifecycleEnvironmentStageManagedInstanceIdArgs and GetLifecycleEnvironmentStageManagedInstanceIdOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentStageManagedInstanceIdInput` via:
//
//	GetLifecycleEnvironmentStageManagedInstanceIdArgs{...}
type GetLifecycleEnvironmentStageManagedInstanceIdInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentStageManagedInstanceIdOutput() GetLifecycleEnvironmentStageManagedInstanceIdOutput
	ToGetLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(context.Context) GetLifecycleEnvironmentStageManagedInstanceIdOutput
}

type GetLifecycleEnvironmentStageManagedInstanceIdArgs struct {
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetLifecycleEnvironmentStageManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentStageManagedInstanceIdArgs) ToGetLifecycleEnvironmentStageManagedInstanceIdOutput() GetLifecycleEnvironmentStageManagedInstanceIdOutput {
	return i.ToGetLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentStageManagedInstanceIdArgs) ToGetLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentStageManagedInstanceIdOutput)
}

// GetLifecycleEnvironmentStageManagedInstanceIdArrayInput is an input type that accepts GetLifecycleEnvironmentStageManagedInstanceIdArray and GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentStageManagedInstanceIdArrayInput` via:
//
//	GetLifecycleEnvironmentStageManagedInstanceIdArray{ GetLifecycleEnvironmentStageManagedInstanceIdArgs{...} }
type GetLifecycleEnvironmentStageManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentStageManagedInstanceIdArrayOutput() GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput
	ToGetLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(context.Context) GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput
}

type GetLifecycleEnvironmentStageManagedInstanceIdArray []GetLifecycleEnvironmentStageManagedInstanceIdInput

func (GetLifecycleEnvironmentStageManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentStageManagedInstanceIdArray) ToGetLifecycleEnvironmentStageManagedInstanceIdArrayOutput() GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return i.ToGetLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentStageManagedInstanceIdArray) ToGetLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput)
}

type GetLifecycleEnvironmentStageManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentStageManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentStageManagedInstanceIdOutput) ToGetLifecycleEnvironmentStageManagedInstanceIdOutput() GetLifecycleEnvironmentStageManagedInstanceIdOutput {
	return o
}

func (o GetLifecycleEnvironmentStageManagedInstanceIdOutput) ToGetLifecycleEnvironmentStageManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageManagedInstanceIdOutput {
	return o
}

// Software source name.
func (o GetLifecycleEnvironmentStageManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStageManagedInstanceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentStageManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStageManagedInstanceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentStageManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentStageManagedInstanceIdArrayOutput() GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentStageManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentStageManagedInstanceId {
		return vs[0].([]GetLifecycleEnvironmentStageManagedInstanceId)[vs[1].(int)]
	}).(GetLifecycleEnvironmentStageManagedInstanceIdOutput)
}

type GetLifecycleEnvironmentStageSoftwareSourceId struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetLifecycleEnvironmentStageSoftwareSourceIdInput is an input type that accepts GetLifecycleEnvironmentStageSoftwareSourceIdArgs and GetLifecycleEnvironmentStageSoftwareSourceIdOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentStageSoftwareSourceIdInput` via:
//
//	GetLifecycleEnvironmentStageSoftwareSourceIdArgs{...}
type GetLifecycleEnvironmentStageSoftwareSourceIdInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentStageSoftwareSourceIdOutput() GetLifecycleEnvironmentStageSoftwareSourceIdOutput
	ToGetLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(context.Context) GetLifecycleEnvironmentStageSoftwareSourceIdOutput
}

type GetLifecycleEnvironmentStageSoftwareSourceIdArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetLifecycleEnvironmentStageSoftwareSourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentStageSoftwareSourceIdArgs) ToGetLifecycleEnvironmentStageSoftwareSourceIdOutput() GetLifecycleEnvironmentStageSoftwareSourceIdOutput {
	return i.ToGetLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentStageSoftwareSourceIdArgs) ToGetLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageSoftwareSourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentStageSoftwareSourceIdOutput)
}

// GetLifecycleEnvironmentStageSoftwareSourceIdArrayInput is an input type that accepts GetLifecycleEnvironmentStageSoftwareSourceIdArray and GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentStageSoftwareSourceIdArrayInput` via:
//
//	GetLifecycleEnvironmentStageSoftwareSourceIdArray{ GetLifecycleEnvironmentStageSoftwareSourceIdArgs{...} }
type GetLifecycleEnvironmentStageSoftwareSourceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput() GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput
	ToGetLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(context.Context) GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput
}

type GetLifecycleEnvironmentStageSoftwareSourceIdArray []GetLifecycleEnvironmentStageSoftwareSourceIdInput

func (GetLifecycleEnvironmentStageSoftwareSourceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentStageSoftwareSourceIdArray) ToGetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput() GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return i.ToGetLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentStageSoftwareSourceIdArray) ToGetLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput)
}

type GetLifecycleEnvironmentStageSoftwareSourceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentStageSoftwareSourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentStageSoftwareSourceIdOutput) ToGetLifecycleEnvironmentStageSoftwareSourceIdOutput() GetLifecycleEnvironmentStageSoftwareSourceIdOutput {
	return o
}

func (o GetLifecycleEnvironmentStageSoftwareSourceIdOutput) ToGetLifecycleEnvironmentStageSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageSoftwareSourceIdOutput {
	return o
}

// Software source description.
func (o GetLifecycleEnvironmentStageSoftwareSourceIdOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStageSoftwareSourceId) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetLifecycleEnvironmentStageSoftwareSourceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStageSoftwareSourceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentStageSoftwareSourceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStageSoftwareSourceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetLifecycleEnvironmentStageSoftwareSourceIdOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentStageSoftwareSourceId) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentStageSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput) ToGetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput() GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput) ToGetLifecycleEnvironmentStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentStageSoftwareSourceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentStageSoftwareSourceId {
		return vs[0].([]GetLifecycleEnvironmentStageSoftwareSourceId)[vs[1].(int)]
	}).(GetLifecycleEnvironmentStageSoftwareSourceIdOutput)
}

type GetLifecycleEnvironmentsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLifecycleEnvironmentsFilterInput is an input type that accepts GetLifecycleEnvironmentsFilterArgs and GetLifecycleEnvironmentsFilterOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsFilterInput` via:
//
//	GetLifecycleEnvironmentsFilterArgs{...}
type GetLifecycleEnvironmentsFilterInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsFilterOutput() GetLifecycleEnvironmentsFilterOutput
	ToGetLifecycleEnvironmentsFilterOutputWithContext(context.Context) GetLifecycleEnvironmentsFilterOutput
}

type GetLifecycleEnvironmentsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLifecycleEnvironmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsFilter)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsFilterArgs) ToGetLifecycleEnvironmentsFilterOutput() GetLifecycleEnvironmentsFilterOutput {
	return i.ToGetLifecycleEnvironmentsFilterOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsFilterArgs) ToGetLifecycleEnvironmentsFilterOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsFilterOutput)
}

// GetLifecycleEnvironmentsFilterArrayInput is an input type that accepts GetLifecycleEnvironmentsFilterArray and GetLifecycleEnvironmentsFilterArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsFilterArrayInput` via:
//
//	GetLifecycleEnvironmentsFilterArray{ GetLifecycleEnvironmentsFilterArgs{...} }
type GetLifecycleEnvironmentsFilterArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsFilterArrayOutput() GetLifecycleEnvironmentsFilterArrayOutput
	ToGetLifecycleEnvironmentsFilterArrayOutputWithContext(context.Context) GetLifecycleEnvironmentsFilterArrayOutput
}

type GetLifecycleEnvironmentsFilterArray []GetLifecycleEnvironmentsFilterInput

func (GetLifecycleEnvironmentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsFilter)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsFilterArray) ToGetLifecycleEnvironmentsFilterArrayOutput() GetLifecycleEnvironmentsFilterArrayOutput {
	return i.ToGetLifecycleEnvironmentsFilterArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsFilterArray) ToGetLifecycleEnvironmentsFilterArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsFilterArrayOutput)
}

type GetLifecycleEnvironmentsFilterOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsFilter)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsFilterOutput) ToGetLifecycleEnvironmentsFilterOutput() GetLifecycleEnvironmentsFilterOutput {
	return o
}

func (o GetLifecycleEnvironmentsFilterOutput) ToGetLifecycleEnvironmentsFilterOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsFilterOutput {
	return o
}

func (o GetLifecycleEnvironmentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLifecycleEnvironmentsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLifecycleEnvironmentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLifecycleEnvironmentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsFilter)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsFilterArrayOutput) ToGetLifecycleEnvironmentsFilterArrayOutput() GetLifecycleEnvironmentsFilterArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsFilterArrayOutput) ToGetLifecycleEnvironmentsFilterArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsFilterArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsFilterArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentsFilter {
		return vs[0].([]GetLifecycleEnvironmentsFilter)[vs[1].(int)]
	}).(GetLifecycleEnvironmentsFilterOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollection struct {
	Items []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem `pulumi:"items"`
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs{...}
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs struct {
	Items GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayInput `pulumi:"items"`
}

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollection)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput)
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArray and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArray{ GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs{...} }
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArray []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionInput

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollection)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollection)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput) Items() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollection) []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem {
		return v.Items
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollection)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentsLifecycleEnvironmentCollection {
		return vs[0].([]GetLifecycleEnvironmentsLifecycleEnvironmentCollection)[vs[1].(int)]
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem struct {
	// A filter to return only profiles that match the given archType.
	ArchType *string `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily *string `pulumi:"osFamily"`
	// User specified list of lifecycle stages to be created for the lifecycle environment.
	Stages []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage `pulumi:"stages"`
	// A filter to return only the lifecycle environments that match the display name given.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified *string `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName *string `pulumi:"vendorName"`
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs{...}
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayInput `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// User specified list of lifecycle stages to be created for the lifecycle environment.
	Stages GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayInput `pulumi:"stages"`
	// A filter to return only the lifecycle environments that match the display name given.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput)
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArray and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArray{ GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs{...} }
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArray []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemInput

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput {
	return o
}

// A filter to return only profiles that match the given archType.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the resources to list.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// Software source description.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of managed instances specified lifecycle stage.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) ManagedInstanceIds() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId {
		return v.ManagedInstanceIds
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput)
}

// A filter to return only profiles that match the given osFamily.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// User specified list of lifecycle stages to be created for the lifecycle environment.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) Stages() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage {
		return v.Stages
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput)
}

// A filter to return only the lifecycle environments that match the display name given.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.TimeModified }).(pulumi.StringPtrOutput)
}

// The software source vendor name.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem {
		return vs[0].([]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItem)[vs[1].(int)]
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId struct {
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs{...}
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs struct {
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput)
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArray and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArray{ GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs{...} }
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArray []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdInput

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput {
	return o
}

// A filter to return resources that match the given display names.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId {
		return vs[0].([]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceId)[vs[1].(int)]
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage struct {
	// A filter to return only profiles that match the given archType.
	ArchType *string `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// The OCID of the lifecycle environment.
	LifecycleEnvironmentId *string `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily *string `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank *int `pulumi:"rank"`
	// Identifying information for the specified software source.
	SoftwareSourceIds []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId `pulumi:"softwareSourceIds"`
	// A filter to return only the lifecycle environments that match the display name given.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified *string `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName *string `pulumi:"vendorName"`
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs{...}
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The OCID of the lifecycle environment.
	LifecycleEnvironmentId pulumi.StringPtrInput `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayInput `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank pulumi.IntPtrInput `pulumi:"rank"`
	// Identifying information for the specified software source.
	SoftwareSourceIds GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayInput `pulumi:"softwareSourceIds"`
	// A filter to return only the lifecycle environments that match the display name given.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput)
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArray and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArray{ GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs{...} }
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArray []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageInput

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput {
	return o
}

// A filter to return only profiles that match the given archType.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the resources to list.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string {
		return v.CompartmentId
	}).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A filter to return resources that match the given display names.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of the lifecycle environment.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) LifecycleEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string {
		return v.LifecycleEnvironmentId
	}).(pulumi.StringPtrOutput)
}

// The list of managed instances specified lifecycle stage.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) ManagedInstanceIds() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId {
		return v.ManagedInstanceIds
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput)
}

// A filter to return only profiles that match the given osFamily.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *int { return v.Rank }).(pulumi.IntPtrOutput)
}

// Identifying information for the specified software source.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) SoftwareSourceIds() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId {
		return v.SoftwareSourceIds
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput)
}

// A filter to return only the lifecycle environments that match the display name given.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The time the lifecycle environment was created. An RFC3339 formatted datetime string.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the lifecycle environment was last modified. An RFC3339 formatted datetime string.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.TimeModified }).(pulumi.StringPtrOutput)
}

// The software source vendor name.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage {
		return vs[0].([]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStage)[vs[1].(int)]
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId struct {
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs{...}
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs struct {
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput)
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArray and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArray{ GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs{...} }
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArray []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdInput

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput {
	return o
}

// A filter to return resources that match the given display names.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId {
		return vs[0].([]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceId)[vs[1].(int)]
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs{...}
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput)
}

// GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayInput is an input type that accepts GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArray and GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayInput` via:
//
//	GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArray{ GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs{...} }
type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput
	ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutputWithContext(context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArray []GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdInput

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput {
	return i.ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArray) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput {
	return o
}

// Software source description.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId) *string {
		return v.SoftwareSourceType
	}).(pulumi.StringPtrOutput)
}

type GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput() GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput) ToGetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId {
		return vs[0].([]GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceId)[vs[1].(int)]
	}).(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput)
}

type GetLifecycleStageManagedInstanceId struct {
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetLifecycleStageManagedInstanceIdInput is an input type that accepts GetLifecycleStageManagedInstanceIdArgs and GetLifecycleStageManagedInstanceIdOutput values.
// You can construct a concrete instance of `GetLifecycleStageManagedInstanceIdInput` via:
//
//	GetLifecycleStageManagedInstanceIdArgs{...}
type GetLifecycleStageManagedInstanceIdInput interface {
	pulumi.Input

	ToGetLifecycleStageManagedInstanceIdOutput() GetLifecycleStageManagedInstanceIdOutput
	ToGetLifecycleStageManagedInstanceIdOutputWithContext(context.Context) GetLifecycleStageManagedInstanceIdOutput
}

type GetLifecycleStageManagedInstanceIdArgs struct {
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetLifecycleStageManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStageManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleStageManagedInstanceIdArgs) ToGetLifecycleStageManagedInstanceIdOutput() GetLifecycleStageManagedInstanceIdOutput {
	return i.ToGetLifecycleStageManagedInstanceIdOutputWithContext(context.Background())
}

func (i GetLifecycleStageManagedInstanceIdArgs) ToGetLifecycleStageManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleStageManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStageManagedInstanceIdOutput)
}

// GetLifecycleStageManagedInstanceIdArrayInput is an input type that accepts GetLifecycleStageManagedInstanceIdArray and GetLifecycleStageManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleStageManagedInstanceIdArrayInput` via:
//
//	GetLifecycleStageManagedInstanceIdArray{ GetLifecycleStageManagedInstanceIdArgs{...} }
type GetLifecycleStageManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleStageManagedInstanceIdArrayOutput() GetLifecycleStageManagedInstanceIdArrayOutput
	ToGetLifecycleStageManagedInstanceIdArrayOutputWithContext(context.Context) GetLifecycleStageManagedInstanceIdArrayOutput
}

type GetLifecycleStageManagedInstanceIdArray []GetLifecycleStageManagedInstanceIdInput

func (GetLifecycleStageManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStageManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleStageManagedInstanceIdArray) ToGetLifecycleStageManagedInstanceIdArrayOutput() GetLifecycleStageManagedInstanceIdArrayOutput {
	return i.ToGetLifecycleStageManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleStageManagedInstanceIdArray) ToGetLifecycleStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStageManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStageManagedInstanceIdArrayOutput)
}

type GetLifecycleStageManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleStageManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStageManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleStageManagedInstanceIdOutput) ToGetLifecycleStageManagedInstanceIdOutput() GetLifecycleStageManagedInstanceIdOutput {
	return o
}

func (o GetLifecycleStageManagedInstanceIdOutput) ToGetLifecycleStageManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleStageManagedInstanceIdOutput {
	return o
}

// Software source name.
func (o GetLifecycleStageManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStageManagedInstanceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleStageManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStageManagedInstanceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetLifecycleStageManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleStageManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStageManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleStageManagedInstanceIdArrayOutput) ToGetLifecycleStageManagedInstanceIdArrayOutput() GetLifecycleStageManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleStageManagedInstanceIdArrayOutput) ToGetLifecycleStageManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStageManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleStageManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleStageManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleStageManagedInstanceId {
		return vs[0].([]GetLifecycleStageManagedInstanceId)[vs[1].(int)]
	}).(GetLifecycleStageManagedInstanceIdOutput)
}

type GetLifecycleStageSoftwareSourceId struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetLifecycleStageSoftwareSourceIdInput is an input type that accepts GetLifecycleStageSoftwareSourceIdArgs and GetLifecycleStageSoftwareSourceIdOutput values.
// You can construct a concrete instance of `GetLifecycleStageSoftwareSourceIdInput` via:
//
//	GetLifecycleStageSoftwareSourceIdArgs{...}
type GetLifecycleStageSoftwareSourceIdInput interface {
	pulumi.Input

	ToGetLifecycleStageSoftwareSourceIdOutput() GetLifecycleStageSoftwareSourceIdOutput
	ToGetLifecycleStageSoftwareSourceIdOutputWithContext(context.Context) GetLifecycleStageSoftwareSourceIdOutput
}

type GetLifecycleStageSoftwareSourceIdArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetLifecycleStageSoftwareSourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStageSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleStageSoftwareSourceIdArgs) ToGetLifecycleStageSoftwareSourceIdOutput() GetLifecycleStageSoftwareSourceIdOutput {
	return i.ToGetLifecycleStageSoftwareSourceIdOutputWithContext(context.Background())
}

func (i GetLifecycleStageSoftwareSourceIdArgs) ToGetLifecycleStageSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleStageSoftwareSourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStageSoftwareSourceIdOutput)
}

// GetLifecycleStageSoftwareSourceIdArrayInput is an input type that accepts GetLifecycleStageSoftwareSourceIdArray and GetLifecycleStageSoftwareSourceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleStageSoftwareSourceIdArrayInput` via:
//
//	GetLifecycleStageSoftwareSourceIdArray{ GetLifecycleStageSoftwareSourceIdArgs{...} }
type GetLifecycleStageSoftwareSourceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleStageSoftwareSourceIdArrayOutput() GetLifecycleStageSoftwareSourceIdArrayOutput
	ToGetLifecycleStageSoftwareSourceIdArrayOutputWithContext(context.Context) GetLifecycleStageSoftwareSourceIdArrayOutput
}

type GetLifecycleStageSoftwareSourceIdArray []GetLifecycleStageSoftwareSourceIdInput

func (GetLifecycleStageSoftwareSourceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStageSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleStageSoftwareSourceIdArray) ToGetLifecycleStageSoftwareSourceIdArrayOutput() GetLifecycleStageSoftwareSourceIdArrayOutput {
	return i.ToGetLifecycleStageSoftwareSourceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleStageSoftwareSourceIdArray) ToGetLifecycleStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStageSoftwareSourceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStageSoftwareSourceIdArrayOutput)
}

type GetLifecycleStageSoftwareSourceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleStageSoftwareSourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStageSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleStageSoftwareSourceIdOutput) ToGetLifecycleStageSoftwareSourceIdOutput() GetLifecycleStageSoftwareSourceIdOutput {
	return o
}

func (o GetLifecycleStageSoftwareSourceIdOutput) ToGetLifecycleStageSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleStageSoftwareSourceIdOutput {
	return o
}

// Software source description.
func (o GetLifecycleStageSoftwareSourceIdOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStageSoftwareSourceId) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetLifecycleStageSoftwareSourceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStageSoftwareSourceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleStageSoftwareSourceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStageSoftwareSourceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetLifecycleStageSoftwareSourceIdOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStageSoftwareSourceId) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type GetLifecycleStageSoftwareSourceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleStageSoftwareSourceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStageSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleStageSoftwareSourceIdArrayOutput) ToGetLifecycleStageSoftwareSourceIdArrayOutput() GetLifecycleStageSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleStageSoftwareSourceIdArrayOutput) ToGetLifecycleStageSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStageSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleStageSoftwareSourceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleStageSoftwareSourceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleStageSoftwareSourceId {
		return vs[0].([]GetLifecycleStageSoftwareSourceId)[vs[1].(int)]
	}).(GetLifecycleStageSoftwareSourceIdOutput)
}

type GetLifecycleStagesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLifecycleStagesFilterInput is an input type that accepts GetLifecycleStagesFilterArgs and GetLifecycleStagesFilterOutput values.
// You can construct a concrete instance of `GetLifecycleStagesFilterInput` via:
//
//	GetLifecycleStagesFilterArgs{...}
type GetLifecycleStagesFilterInput interface {
	pulumi.Input

	ToGetLifecycleStagesFilterOutput() GetLifecycleStagesFilterOutput
	ToGetLifecycleStagesFilterOutputWithContext(context.Context) GetLifecycleStagesFilterOutput
}

type GetLifecycleStagesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLifecycleStagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesFilter)(nil)).Elem()
}

func (i GetLifecycleStagesFilterArgs) ToGetLifecycleStagesFilterOutput() GetLifecycleStagesFilterOutput {
	return i.ToGetLifecycleStagesFilterOutputWithContext(context.Background())
}

func (i GetLifecycleStagesFilterArgs) ToGetLifecycleStagesFilterOutputWithContext(ctx context.Context) GetLifecycleStagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesFilterOutput)
}

// GetLifecycleStagesFilterArrayInput is an input type that accepts GetLifecycleStagesFilterArray and GetLifecycleStagesFilterArrayOutput values.
// You can construct a concrete instance of `GetLifecycleStagesFilterArrayInput` via:
//
//	GetLifecycleStagesFilterArray{ GetLifecycleStagesFilterArgs{...} }
type GetLifecycleStagesFilterArrayInput interface {
	pulumi.Input

	ToGetLifecycleStagesFilterArrayOutput() GetLifecycleStagesFilterArrayOutput
	ToGetLifecycleStagesFilterArrayOutputWithContext(context.Context) GetLifecycleStagesFilterArrayOutput
}

type GetLifecycleStagesFilterArray []GetLifecycleStagesFilterInput

func (GetLifecycleStagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesFilter)(nil)).Elem()
}

func (i GetLifecycleStagesFilterArray) ToGetLifecycleStagesFilterArrayOutput() GetLifecycleStagesFilterArrayOutput {
	return i.ToGetLifecycleStagesFilterArrayOutputWithContext(context.Background())
}

func (i GetLifecycleStagesFilterArray) ToGetLifecycleStagesFilterArrayOutputWithContext(ctx context.Context) GetLifecycleStagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesFilterArrayOutput)
}

type GetLifecycleStagesFilterOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesFilter)(nil)).Elem()
}

func (o GetLifecycleStagesFilterOutput) ToGetLifecycleStagesFilterOutput() GetLifecycleStagesFilterOutput {
	return o
}

func (o GetLifecycleStagesFilterOutput) ToGetLifecycleStagesFilterOutputWithContext(ctx context.Context) GetLifecycleStagesFilterOutput {
	return o
}

func (o GetLifecycleStagesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecycleStagesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLifecycleStagesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLifecycleStagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLifecycleStagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLifecycleStagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesFilter)(nil)).Elem()
}

func (o GetLifecycleStagesFilterArrayOutput) ToGetLifecycleStagesFilterArrayOutput() GetLifecycleStagesFilterArrayOutput {
	return o
}

func (o GetLifecycleStagesFilterArrayOutput) ToGetLifecycleStagesFilterArrayOutputWithContext(ctx context.Context) GetLifecycleStagesFilterArrayOutput {
	return o
}

func (o GetLifecycleStagesFilterArrayOutput) Index(i pulumi.IntInput) GetLifecycleStagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleStagesFilter {
		return vs[0].([]GetLifecycleStagesFilter)[vs[1].(int)]
	}).(GetLifecycleStagesFilterOutput)
}

type GetLifecycleStagesLifecycleStageCollection struct {
	Items []GetLifecycleStagesLifecycleStageCollectionItem `pulumi:"items"`
}

// GetLifecycleStagesLifecycleStageCollectionInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionArgs and GetLifecycleStagesLifecycleStageCollectionOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionArgs{...}
type GetLifecycleStagesLifecycleStageCollectionInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionOutput() GetLifecycleStagesLifecycleStageCollectionOutput
	ToGetLifecycleStagesLifecycleStageCollectionOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionOutput
}

type GetLifecycleStagesLifecycleStageCollectionArgs struct {
	Items GetLifecycleStagesLifecycleStageCollectionItemArrayInput `pulumi:"items"`
}

func (GetLifecycleStagesLifecycleStageCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollection)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionArgs) ToGetLifecycleStagesLifecycleStageCollectionOutput() GetLifecycleStagesLifecycleStageCollectionOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionArgs) ToGetLifecycleStagesLifecycleStageCollectionOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionOutput)
}

// GetLifecycleStagesLifecycleStageCollectionArrayInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionArray and GetLifecycleStagesLifecycleStageCollectionArrayOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionArrayInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionArray{ GetLifecycleStagesLifecycleStageCollectionArgs{...} }
type GetLifecycleStagesLifecycleStageCollectionArrayInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionArrayOutput() GetLifecycleStagesLifecycleStageCollectionArrayOutput
	ToGetLifecycleStagesLifecycleStageCollectionArrayOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionArrayOutput
}

type GetLifecycleStagesLifecycleStageCollectionArray []GetLifecycleStagesLifecycleStageCollectionInput

func (GetLifecycleStagesLifecycleStageCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollection)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionArray) ToGetLifecycleStagesLifecycleStageCollectionArrayOutput() GetLifecycleStagesLifecycleStageCollectionArrayOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionArrayOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionArray) ToGetLifecycleStagesLifecycleStageCollectionArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionArrayOutput)
}

type GetLifecycleStagesLifecycleStageCollectionOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollection)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionOutput) ToGetLifecycleStagesLifecycleStageCollectionOutput() GetLifecycleStagesLifecycleStageCollectionOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionOutput) ToGetLifecycleStagesLifecycleStageCollectionOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionOutput) Items() GetLifecycleStagesLifecycleStageCollectionItemArrayOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollection) []GetLifecycleStagesLifecycleStageCollectionItem {
		return v.Items
	}).(GetLifecycleStagesLifecycleStageCollectionItemArrayOutput)
}

type GetLifecycleStagesLifecycleStageCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollection)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionArrayOutput() GetLifecycleStagesLifecycleStageCollectionArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionArrayOutput) Index(i pulumi.IntInput) GetLifecycleStagesLifecycleStageCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleStagesLifecycleStageCollection {
		return vs[0].([]GetLifecycleStagesLifecycleStageCollection)[vs[1].(int)]
	}).(GetLifecycleStagesLifecycleStageCollectionOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItem struct {
	// A filter to return only profiles that match the given archType.
	ArchType *string `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// The OCID of the lifecycle environment for the lifecycle stage.
	LifecycleEnvironmentId *string `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds []GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily *string `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank *int `pulumi:"rank"`
	// The OCID for the software source.
	SoftwareSourceIds []GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId `pulumi:"softwareSourceIds"`
	// A filter to return only lifecycle stage whose lifecycle state matches the given lifecycle state.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the lifecycle stage was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the lifecycle stage was last modified. An RFC3339 formatted datetime string.
	TimeModified *string `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName *string `pulumi:"vendorName"`
}

// GetLifecycleStagesLifecycleStageCollectionItemInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionItemArgs and GetLifecycleStagesLifecycleStageCollectionItemOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionItemInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionItemArgs{...}
type GetLifecycleStagesLifecycleStageCollectionItemInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionItemOutput() GetLifecycleStagesLifecycleStageCollectionItemOutput
	ToGetLifecycleStagesLifecycleStageCollectionItemOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionItemOutput
}

type GetLifecycleStagesLifecycleStageCollectionItemArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The OCID of the lifecycle environment for the lifecycle stage.
	LifecycleEnvironmentId pulumi.StringPtrInput `pulumi:"lifecycleEnvironmentId"`
	// The list of managed instances specified lifecycle stage.
	ManagedInstanceIds GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayInput `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
	Rank pulumi.IntPtrInput `pulumi:"rank"`
	// The OCID for the software source.
	SoftwareSourceIds GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayInput `pulumi:"softwareSourceIds"`
	// A filter to return only lifecycle stage whose lifecycle state matches the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the lifecycle stage was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the lifecycle stage was last modified. An RFC3339 formatted datetime string.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (GetLifecycleStagesLifecycleStageCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItem)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionItemArgs) ToGetLifecycleStagesLifecycleStageCollectionItemOutput() GetLifecycleStagesLifecycleStageCollectionItemOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionItemOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionItemArgs) ToGetLifecycleStagesLifecycleStageCollectionItemOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionItemOutput)
}

// GetLifecycleStagesLifecycleStageCollectionItemArrayInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionItemArray and GetLifecycleStagesLifecycleStageCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionItemArrayInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionItemArray{ GetLifecycleStagesLifecycleStageCollectionItemArgs{...} }
type GetLifecycleStagesLifecycleStageCollectionItemArrayInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionItemArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemArrayOutput
	ToGetLifecycleStagesLifecycleStageCollectionItemArrayOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionItemArrayOutput
}

type GetLifecycleStagesLifecycleStageCollectionItemArray []GetLifecycleStagesLifecycleStageCollectionItemInput

func (GetLifecycleStagesLifecycleStageCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollectionItem)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionItemArray) ToGetLifecycleStagesLifecycleStageCollectionItemArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemArrayOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionItemArray) ToGetLifecycleStagesLifecycleStageCollectionItemArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionItemArrayOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItem)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) ToGetLifecycleStagesLifecycleStageCollectionItemOutput() GetLifecycleStagesLifecycleStageCollectionItemOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) ToGetLifecycleStagesLifecycleStageCollectionItemOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemOutput {
	return o
}

// A filter to return only profiles that match the given archType.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the resources to list.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return resources that match the given display names.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of the lifecycle environment for the lifecycle stage.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) LifecycleEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.LifecycleEnvironmentId }).(pulumi.StringPtrOutput)
}

// The list of managed instances specified lifecycle stage.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) ManagedInstanceIds() GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) []GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId {
		return v.ManagedInstanceIds
	}).(GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput)
}

// A filter to return only profiles that match the given osFamily.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// User specified rank for the lifecycle stage. Rank determines the hierarchy of the lifecycle stages for a given lifecycle environment.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) Rank() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *int { return v.Rank }).(pulumi.IntPtrOutput)
}

// The OCID for the software source.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) SoftwareSourceIds() GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) []GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId {
		return v.SoftwareSourceIds
	}).(GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput)
}

// A filter to return only lifecycle stage whose lifecycle state matches the given lifecycle state.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the lifecycle stage was created. An RFC3339 formatted datetime string.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the lifecycle stage was last modified. An RFC3339 formatted datetime string.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.TimeModified }).(pulumi.StringPtrOutput)
}

// The software source vendor name.
func (o GetLifecycleStagesLifecycleStageCollectionItemOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItem) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollectionItem)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionItemArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionItemArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionItemArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemArrayOutput) Index(i pulumi.IntInput) GetLifecycleStagesLifecycleStageCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleStagesLifecycleStageCollectionItem {
		return vs[0].([]GetLifecycleStagesLifecycleStageCollectionItem)[vs[1].(int)]
	}).(GetLifecycleStagesLifecycleStageCollectionItemOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId struct {
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs and GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs{...}
type GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput() GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput
	ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput
}

type GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs struct {
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput() GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput)
}

// GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArray and GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArray{ GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs{...} }
type GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput
	ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput
}

type GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArray []GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdInput

func (GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArray) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArray) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput() GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput {
	return o
}

// A filter to return resources that match the given display names.
func (o GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId {
		return vs[0].([]GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceId)[vs[1].(int)]
	}).(GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs and GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs{...}
type GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput() GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput
	ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput
}

type GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput() GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput)
}

// GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayInput is an input type that accepts GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArray and GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput values.
// You can construct a concrete instance of `GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayInput` via:
//
//	GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArray{ GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs{...} }
type GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayInput interface {
	pulumi.Input

	ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput
	ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutputWithContext(context.Context) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput
}

type GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArray []GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdInput

func (GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId)(nil)).Elem()
}

func (i GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArray) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput {
	return i.ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutputWithContext(context.Background())
}

func (i GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArray) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput() GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput {
	return o
}

// Software source description.
func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId) *string {
		return v.SoftwareSourceType
	}).(pulumi.StringPtrOutput)
}

type GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput struct{ *pulumi.OutputState }

func (GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId)(nil)).Elem()
}

func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput() GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput) ToGetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutputWithContext(ctx context.Context) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput {
	return o
}

func (o GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput) Index(i pulumi.IntInput) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId {
		return vs[0].([]GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceId)[vs[1].(int)]
	}).(GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput)
}

type GetManagedInstanceGroupAvailableModulesFilter struct {
	// The resource name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstanceGroupAvailableModulesFilterInput is an input type that accepts GetManagedInstanceGroupAvailableModulesFilterArgs and GetManagedInstanceGroupAvailableModulesFilterOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableModulesFilterInput` via:
//
//	GetManagedInstanceGroupAvailableModulesFilterArgs{...}
type GetManagedInstanceGroupAvailableModulesFilterInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableModulesFilterOutput() GetManagedInstanceGroupAvailableModulesFilterOutput
	ToGetManagedInstanceGroupAvailableModulesFilterOutputWithContext(context.Context) GetManagedInstanceGroupAvailableModulesFilterOutput
}

type GetManagedInstanceGroupAvailableModulesFilterArgs struct {
	// The resource name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstanceGroupAvailableModulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableModulesFilterArgs) ToGetManagedInstanceGroupAvailableModulesFilterOutput() GetManagedInstanceGroupAvailableModulesFilterOutput {
	return i.ToGetManagedInstanceGroupAvailableModulesFilterOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableModulesFilterArgs) ToGetManagedInstanceGroupAvailableModulesFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableModulesFilterOutput)
}

// GetManagedInstanceGroupAvailableModulesFilterArrayInput is an input type that accepts GetManagedInstanceGroupAvailableModulesFilterArray and GetManagedInstanceGroupAvailableModulesFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableModulesFilterArrayInput` via:
//
//	GetManagedInstanceGroupAvailableModulesFilterArray{ GetManagedInstanceGroupAvailableModulesFilterArgs{...} }
type GetManagedInstanceGroupAvailableModulesFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableModulesFilterArrayOutput() GetManagedInstanceGroupAvailableModulesFilterArrayOutput
	ToGetManagedInstanceGroupAvailableModulesFilterArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailableModulesFilterArrayOutput
}

type GetManagedInstanceGroupAvailableModulesFilterArray []GetManagedInstanceGroupAvailableModulesFilterInput

func (GetManagedInstanceGroupAvailableModulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableModulesFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableModulesFilterArray) ToGetManagedInstanceGroupAvailableModulesFilterArrayOutput() GetManagedInstanceGroupAvailableModulesFilterArrayOutput {
	return i.ToGetManagedInstanceGroupAvailableModulesFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableModulesFilterArray) ToGetManagedInstanceGroupAvailableModulesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableModulesFilterArrayOutput)
}

type GetManagedInstanceGroupAvailableModulesFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableModulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableModulesFilterOutput) ToGetManagedInstanceGroupAvailableModulesFilterOutput() GetManagedInstanceGroupAvailableModulesFilterOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesFilterOutput) ToGetManagedInstanceGroupAvailableModulesFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesFilterOutput {
	return o
}

// The resource name.
func (o GetManagedInstanceGroupAvailableModulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupAvailableModulesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstanceGroupAvailableModulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstanceGroupAvailableModulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableModulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableModulesFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableModulesFilterArrayOutput) ToGetManagedInstanceGroupAvailableModulesFilterArrayOutput() GetManagedInstanceGroupAvailableModulesFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesFilterArrayOutput) ToGetManagedInstanceGroupAvailableModulesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailableModulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailableModulesFilter {
		return vs[0].([]GetManagedInstanceGroupAvailableModulesFilter)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailableModulesFilterOutput)
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection struct {
	// List of module stream profile.
	Items []GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem `pulumi:"items"`
}

// GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionInput is an input type that accepts GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs and GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionInput` via:
//
//	GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs{...}
type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput
	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutputWithContext(context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs struct {
	// List of module stream profile.
	Items GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput {
	return i.ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput)
}

// GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayInput is an input type that accepts GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArray and GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayInput` via:
//
//	GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArray{ GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs{...} }
type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput
	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArray []GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionInput

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArray) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput {
	return i.ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArray) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput)
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput {
	return o
}

// List of module stream profile.
func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput) Items() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection) []GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem {
		return v.Items
	}).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput)
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection {
		return vs[0].([]GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput)
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem struct {
	// The resource name.
	Name *string `pulumi:"name"`
	// The OCID of the software source that provides this module.
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
}

// GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemInput is an input type that accepts GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs and GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemInput` via:
//
//	GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs{...}
type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput
	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutputWithContext(context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs struct {
	// The resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The OCID of the software source that provides this module.
	SoftwareSourceId pulumi.StringPtrInput `pulumi:"softwareSourceId"`
}

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput {
	return i.ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput)
}

// GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayInput is an input type that accepts GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArray and GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayInput` via:
//
//	GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArray{ GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs{...} }
type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput
	ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArray []GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemInput

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArray) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput {
	return i.ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArray) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput)
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput {
	return o
}

// The resource name.
func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The OCID of the software source that provides this module.
func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput) SoftwareSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem) *string {
		return v.SoftwareSourceId
	}).(pulumi.StringPtrOutput)
}

type GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput() GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput) ToGetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem {
		return vs[0].([]GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItem)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput)
}

type GetManagedInstanceGroupAvailablePackagesFilter struct {
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstanceGroupAvailablePackagesFilterInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesFilterArgs and GetManagedInstanceGroupAvailablePackagesFilterOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesFilterInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesFilterArgs{...}
type GetManagedInstanceGroupAvailablePackagesFilterInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesFilterOutput() GetManagedInstanceGroupAvailablePackagesFilterOutput
	ToGetManagedInstanceGroupAvailablePackagesFilterOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesFilterOutput
}

type GetManagedInstanceGroupAvailablePackagesFilterArgs struct {
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstanceGroupAvailablePackagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesFilterArgs) ToGetManagedInstanceGroupAvailablePackagesFilterOutput() GetManagedInstanceGroupAvailablePackagesFilterOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesFilterOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesFilterArgs) ToGetManagedInstanceGroupAvailablePackagesFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesFilterOutput)
}

// GetManagedInstanceGroupAvailablePackagesFilterArrayInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesFilterArray and GetManagedInstanceGroupAvailablePackagesFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesFilterArrayInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesFilterArray{ GetManagedInstanceGroupAvailablePackagesFilterArgs{...} }
type GetManagedInstanceGroupAvailablePackagesFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesFilterArrayOutput() GetManagedInstanceGroupAvailablePackagesFilterArrayOutput
	ToGetManagedInstanceGroupAvailablePackagesFilterArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesFilterArrayOutput
}

type GetManagedInstanceGroupAvailablePackagesFilterArray []GetManagedInstanceGroupAvailablePackagesFilterInput

func (GetManagedInstanceGroupAvailablePackagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesFilterArray) ToGetManagedInstanceGroupAvailablePackagesFilterArrayOutput() GetManagedInstanceGroupAvailablePackagesFilterArrayOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesFilterArray) ToGetManagedInstanceGroupAvailablePackagesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesFilterArrayOutput)
}

type GetManagedInstanceGroupAvailablePackagesFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesFilterOutput) ToGetManagedInstanceGroupAvailablePackagesFilterOutput() GetManagedInstanceGroupAvailablePackagesFilterOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesFilterOutput) ToGetManagedInstanceGroupAvailablePackagesFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesFilterOutput {
	return o
}

// Unique identifier for the package. NOTE - This is not an OCID.
func (o GetManagedInstanceGroupAvailablePackagesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupAvailablePackagesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstanceGroupAvailablePackagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstanceGroupAvailablePackagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesFilterArrayOutput) ToGetManagedInstanceGroupAvailablePackagesFilterArrayOutput() GetManagedInstanceGroupAvailablePackagesFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesFilterArrayOutput) ToGetManagedInstanceGroupAvailablePackagesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailablePackagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailablePackagesFilter {
		return vs[0].([]GetManagedInstanceGroupAvailablePackagesFilter)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailablePackagesFilterOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection struct {
	// List of available packages.
	Items []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem `pulumi:"items"`
}

// GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs and GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs{...}
type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput
	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs struct {
	// List of available packages.
	Items GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput)
}

// GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArray and GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArray{ GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs{...} }
type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput
	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArray []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionInput

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArray) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArray) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput {
	return o
}

// List of available packages.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput) Items() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection) []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem {
		return v.Items
	}).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection {
		return vs[0].([]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollection)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem struct {
	// The architecture for which this package was built.
	Architecture *string `pulumi:"architecture"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest *bool `pulumi:"isLatest"`
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name *string `pulumi:"name"`
	// List of software sources that provide the software package.
	SoftwareSources []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource `pulumi:"softwareSources"`
	// Type of the package.
	Type *string `pulumi:"type"`
	// Version of the installed package.
	Version *string `pulumi:"version"`
}

// GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs and GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs{...}
type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput
	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs struct {
	// The architecture for which this package was built.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest pulumi.BoolPtrInput `pulumi:"isLatest"`
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of software sources that provide the software package.
	SoftwareSources GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayInput `pulumi:"softwareSources"`
	// Type of the package.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Version of the installed package.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput)
}

// GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArray and GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArray{ GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs{...} }
type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput
	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArray []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemInput

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArray) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArray) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput {
	return o
}

// The architecture for which this package was built.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem) *string {
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) IsLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem) *bool {
		return v.IsLatest
	}).(pulumi.BoolPtrOutput)
}

// Unique identifier for the package. NOTE - This is not an OCID.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// List of software sources that provide the software package.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) SoftwareSources() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem) []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource {
		return v.SoftwareSources
	}).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput)
}

// Type of the package.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the installed package.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem) *string {
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem {
		return vs[0].([]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs and GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs{...}
type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput
	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput)
}

// GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayInput is an input type that accepts GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArray and GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayInput` via:
//
//	GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArray{ GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs{...} }
type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput
	ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArray []GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceInput

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArray) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput {
	return i.ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArray) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput {
	return o
}

// Software source description.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource) *string {
		return v.SoftwareSourceType
	}).(pulumi.StringPtrOutput)
}

type GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput() GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput) ToGetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource {
		return vs[0].([]GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection struct {
	// List of available software sources.
	Items []GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem `pulumi:"items"`
}

// GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionInput is an input type that accepts GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs and GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionInput` via:
//
//	GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs{...}
type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput
	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutputWithContext(context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs struct {
	// List of available software sources.
	Items GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput {
	return i.ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput)
}

// GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayInput is an input type that accepts GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArray and GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayInput` via:
//
//	GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArray{ GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs{...} }
type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput
	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArray []GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionInput

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArray) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput {
	return i.ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArray) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput {
	return o
}

// List of available software sources.
func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput) Items() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection) []GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem {
		return v.Items
	}).(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection {
		return vs[0].([]GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
}

// GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemInput is an input type that accepts GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs and GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemInput` via:
//
//	GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs{...}
type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput
	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutputWithContext(context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// unique identifier that is immutable on creation.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput {
	return i.ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput)
}

// GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayInput is an input type that accepts GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArray and GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayInput` via:
//
//	GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArray{ GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs{...} }
type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput
	ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArray []GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemInput

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArray) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput {
	return i.ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArray) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput {
	return o
}

// The OCID of the compartment that contains the resources to list.
func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem) *string {
		return v.CompartmentId
	}).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// unique identifier that is immutable on creation.
func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem {
		return vs[0].([]GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItem)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstanceGroupAvailableSoftwareSourcesFilterInput is an input type that accepts GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs and GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableSoftwareSourcesFilterInput` via:
//
//	GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs{...}
type GetManagedInstanceGroupAvailableSoftwareSourcesFilterInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput() GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput
	ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterOutputWithContext(context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput
}

type GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput() GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput {
	return i.ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput)
}

// GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayInput is an input type that accepts GetManagedInstanceGroupAvailableSoftwareSourcesFilterArray and GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayInput` via:
//
//	GetManagedInstanceGroupAvailableSoftwareSourcesFilterArray{ GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs{...} }
type GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput
	ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutputWithContext(context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput
}

type GetManagedInstanceGroupAvailableSoftwareSourcesFilterArray []GetManagedInstanceGroupAvailableSoftwareSourcesFilterInput

func (GetManagedInstanceGroupAvailableSoftwareSourcesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableSoftwareSourcesFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesFilterArray) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput {
	return i.ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupAvailableSoftwareSourcesFilterArray) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput() GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableSoftwareSourcesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableSoftwareSourcesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupAvailableSoftwareSourcesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupAvailableSoftwareSourcesFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput() GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput) ToGetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupAvailableSoftwareSourcesFilter {
		return vs[0].([]GetManagedInstanceGroupAvailableSoftwareSourcesFilter)[vs[1].(int)]
	}).(GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput)
}

type GetManagedInstanceGroupSoftwareSource struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetManagedInstanceGroupSoftwareSourceInput is an input type that accepts GetManagedInstanceGroupSoftwareSourceArgs and GetManagedInstanceGroupSoftwareSourceOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupSoftwareSourceInput` via:
//
//	GetManagedInstanceGroupSoftwareSourceArgs{...}
type GetManagedInstanceGroupSoftwareSourceInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupSoftwareSourceOutput() GetManagedInstanceGroupSoftwareSourceOutput
	ToGetManagedInstanceGroupSoftwareSourceOutputWithContext(context.Context) GetManagedInstanceGroupSoftwareSourceOutput
}

type GetManagedInstanceGroupSoftwareSourceArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetManagedInstanceGroupSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceGroupSoftwareSourceArgs) ToGetManagedInstanceGroupSoftwareSourceOutput() GetManagedInstanceGroupSoftwareSourceOutput {
	return i.ToGetManagedInstanceGroupSoftwareSourceOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupSoftwareSourceArgs) ToGetManagedInstanceGroupSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceGroupSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupSoftwareSourceOutput)
}

// GetManagedInstanceGroupSoftwareSourceArrayInput is an input type that accepts GetManagedInstanceGroupSoftwareSourceArray and GetManagedInstanceGroupSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupSoftwareSourceArrayInput` via:
//
//	GetManagedInstanceGroupSoftwareSourceArray{ GetManagedInstanceGroupSoftwareSourceArgs{...} }
type GetManagedInstanceGroupSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupSoftwareSourceArrayOutput() GetManagedInstanceGroupSoftwareSourceArrayOutput
	ToGetManagedInstanceGroupSoftwareSourceArrayOutputWithContext(context.Context) GetManagedInstanceGroupSoftwareSourceArrayOutput
}

type GetManagedInstanceGroupSoftwareSourceArray []GetManagedInstanceGroupSoftwareSourceInput

func (GetManagedInstanceGroupSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceGroupSoftwareSourceArray) ToGetManagedInstanceGroupSoftwareSourceArrayOutput() GetManagedInstanceGroupSoftwareSourceArrayOutput {
	return i.ToGetManagedInstanceGroupSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupSoftwareSourceArray) ToGetManagedInstanceGroupSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupSoftwareSourceArrayOutput)
}

type GetManagedInstanceGroupSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceGroupSoftwareSourceOutput) ToGetManagedInstanceGroupSoftwareSourceOutput() GetManagedInstanceGroupSoftwareSourceOutput {
	return o
}

func (o GetManagedInstanceGroupSoftwareSourceOutput) ToGetManagedInstanceGroupSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceGroupSoftwareSourceOutput {
	return o
}

// Software source description.
func (o GetManagedInstanceGroupSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupSoftwareSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetManagedInstanceGroupSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupSoftwareSource) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetManagedInstanceGroupSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetManagedInstanceGroupSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupSoftwareSource) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type GetManagedInstanceGroupSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceGroupSoftwareSourceArrayOutput) ToGetManagedInstanceGroupSoftwareSourceArrayOutput() GetManagedInstanceGroupSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupSoftwareSourceArrayOutput) ToGetManagedInstanceGroupSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupSoftwareSource {
		return vs[0].([]GetManagedInstanceGroupSoftwareSource)[vs[1].(int)]
	}).(GetManagedInstanceGroupSoftwareSourceOutput)
}

type GetManagedInstanceGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedInstanceGroupsFilterInput is an input type that accepts GetManagedInstanceGroupsFilterArgs and GetManagedInstanceGroupsFilterOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsFilterInput` via:
//
//	GetManagedInstanceGroupsFilterArgs{...}
type GetManagedInstanceGroupsFilterInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsFilterOutput() GetManagedInstanceGroupsFilterOutput
	ToGetManagedInstanceGroupsFilterOutputWithContext(context.Context) GetManagedInstanceGroupsFilterOutput
}

type GetManagedInstanceGroupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedInstanceGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupsFilterArgs) ToGetManagedInstanceGroupsFilterOutput() GetManagedInstanceGroupsFilterOutput {
	return i.ToGetManagedInstanceGroupsFilterOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsFilterArgs) ToGetManagedInstanceGroupsFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsFilterOutput)
}

// GetManagedInstanceGroupsFilterArrayInput is an input type that accepts GetManagedInstanceGroupsFilterArray and GetManagedInstanceGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsFilterArrayInput` via:
//
//	GetManagedInstanceGroupsFilterArray{ GetManagedInstanceGroupsFilterArgs{...} }
type GetManagedInstanceGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsFilterArrayOutput() GetManagedInstanceGroupsFilterArrayOutput
	ToGetManagedInstanceGroupsFilterArrayOutputWithContext(context.Context) GetManagedInstanceGroupsFilterArrayOutput
}

type GetManagedInstanceGroupsFilterArray []GetManagedInstanceGroupsFilterInput

func (GetManagedInstanceGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (i GetManagedInstanceGroupsFilterArray) ToGetManagedInstanceGroupsFilterArrayOutput() GetManagedInstanceGroupsFilterArrayOutput {
	return i.ToGetManagedInstanceGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsFilterArray) ToGetManagedInstanceGroupsFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsFilterArrayOutput)
}

type GetManagedInstanceGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupsFilterOutput) ToGetManagedInstanceGroupsFilterOutput() GetManagedInstanceGroupsFilterOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterOutput) ToGetManagedInstanceGroupsFilterOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedInstanceGroupsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedInstanceGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedInstanceGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsFilter)(nil)).Elem()
}

func (o GetManagedInstanceGroupsFilterArrayOutput) ToGetManagedInstanceGroupsFilterArrayOutput() GetManagedInstanceGroupsFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterArrayOutput) ToGetManagedInstanceGroupsFilterArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsFilterArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupsFilter {
		return vs[0].([]GetManagedInstanceGroupsFilter)[vs[1].(int)]
	}).(GetManagedInstanceGroupsFilterOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollection struct {
	Items []GetManagedInstanceGroupsManagedInstanceGroupCollectionItem `pulumi:"items"`
}

// GetManagedInstanceGroupsManagedInstanceGroupCollectionInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs and GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupCollectionInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs{...}
type GetManagedInstanceGroupsManagedInstanceGroupCollectionInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs struct {
	Items GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupCollectionOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput)
}

// GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupCollectionArray and GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupCollectionArray{ GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs{...} }
type GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionArray []GetManagedInstanceGroupsManagedInstanceGroupCollectionInput

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupCollection)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionArray) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionArray) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput) Items() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollection) []GetManagedInstanceGroupsManagedInstanceGroupCollectionItem {
		return v.Items
	}).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupCollection)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupsManagedInstanceGroupCollection {
		return vs[0].([]GetManagedInstanceGroupsManagedInstanceGroupCollection)[vs[1].(int)]
	}).(GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItem struct {
	// A filter to return only profiles that match the given archType.
	ArchType *string `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// The number of Managed Instances in the managed instance group.
	ManagedInstanceCount *int `pulumi:"managedInstanceCount"`
	// The list of managed instances OCIDs attached to the managed instance group.
	ManagedInstanceIds []string `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily *string `pulumi:"osFamily"`
	// The number of scheduled jobs pending against the managed instance group.
	PendingJobCount *int `pulumi:"pendingJobCount"`
	// The list of software sources that the managed instance group will use.
	SoftwareSourceIds []string `pulumi:"softwareSourceIds"`
	// The list of software sources that the managed instance group will use.
	SoftwareSources []GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource `pulumi:"softwareSources"`
	// A filter to return only resources their lifecycle state matches the given lifecycle state.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the managed instance group was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the managed instance group was last modified. An RFC3339 formatted datetime string.
	TimeModified *string `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName *string `pulumi:"vendorName"`
}

// GetManagedInstanceGroupsManagedInstanceGroupCollectionItemInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs and GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupCollectionItemInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs{...}
type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The number of Managed Instances in the managed instance group.
	ManagedInstanceCount pulumi.IntPtrInput `pulumi:"managedInstanceCount"`
	// The list of managed instances OCIDs attached to the managed instance group.
	ManagedInstanceIds pulumi.StringArrayInput `pulumi:"managedInstanceIds"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// The number of scheduled jobs pending against the managed instance group.
	PendingJobCount pulumi.IntPtrInput `pulumi:"pendingJobCount"`
	// The list of software sources that the managed instance group will use.
	SoftwareSourceIds pulumi.StringArrayInput `pulumi:"softwareSourceIds"`
	// The list of software sources that the managed instance group will use.
	SoftwareSources GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayInput `pulumi:"softwareSources"`
	// A filter to return only resources their lifecycle state matches the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the managed instance group was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The time the managed instance group was last modified. An RFC3339 formatted datetime string.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// The software source vendor name.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput)
}

// GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArray and GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArray{ GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs{...} }
type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArray []GetManagedInstanceGroupsManagedInstanceGroupCollectionItemInput

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupCollectionItem)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArray) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArray) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput {
	return o
}

// A filter to return only profiles that match the given archType.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the resources to list.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// Software source description.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The number of Managed Instances in the managed instance group.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) ManagedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *int { return v.ManagedInstanceCount }).(pulumi.IntPtrOutput)
}

// The list of managed instances OCIDs attached to the managed instance group.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) ManagedInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) []string {
		return v.ManagedInstanceIds
	}).(pulumi.StringArrayOutput)
}

// A filter to return only profiles that match the given osFamily.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// The number of scheduled jobs pending against the managed instance group.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) PendingJobCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *int { return v.PendingJobCount }).(pulumi.IntPtrOutput)
}

// The list of software sources that the managed instance group will use.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) SoftwareSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) []string {
		return v.SoftwareSourceIds
	}).(pulumi.StringArrayOutput)
}

// The list of software sources that the managed instance group will use.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) SoftwareSources() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) []GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource {
		return v.SoftwareSources
	}).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput)
}

// A filter to return only resources their lifecycle state matches the given lifecycle state.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The time the managed instance group was created. An RFC3339 formatted datetime string.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the managed instance group was last modified. An RFC3339 formatted datetime string.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.TimeModified }).(pulumi.StringPtrOutput)
}

// The software source vendor name.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItem) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupCollectionItem)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupsManagedInstanceGroupCollectionItem {
		return vs[0].([]GetManagedInstanceGroupsManagedInstanceGroupCollectionItem)[vs[1].(int)]
	}).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs and GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs{...}
type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput)
}

// GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayInput is an input type that accepts GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArray and GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayInput` via:
//
//	GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArray{ GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs{...} }
type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput
	ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutputWithContext(context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArray []GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceInput

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArray) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput {
	return i.ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArray) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput {
	return o
}

// Software source description.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource) *string {
		return v.SoftwareSourceType
	}).(pulumi.StringPtrOutput)
}

type GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput() GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput) ToGetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource {
		return vs[0].([]GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSource)[vs[1].(int)]
	}).(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput)
}

type GetManagementStationMirror struct {
	// Directory for the mirroring
	Directory *string `pulumi:"directory"`
	// Port that the proxy will use
	Port *string `pulumi:"port"`
	// Local path for the sslcert
	Sslcert *string `pulumi:"sslcert"`
	// Default sslport for the mirror
	Sslport *string `pulumi:"sslport"`
}

// GetManagementStationMirrorInput is an input type that accepts GetManagementStationMirrorArgs and GetManagementStationMirrorOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorInput` via:
//
//	GetManagementStationMirrorArgs{...}
type GetManagementStationMirrorInput interface {
	pulumi.Input

	ToGetManagementStationMirrorOutput() GetManagementStationMirrorOutput
	ToGetManagementStationMirrorOutputWithContext(context.Context) GetManagementStationMirrorOutput
}

type GetManagementStationMirrorArgs struct {
	// Directory for the mirroring
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// Port that the proxy will use
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Local path for the sslcert
	Sslcert pulumi.StringPtrInput `pulumi:"sslcert"`
	// Default sslport for the mirror
	Sslport pulumi.StringPtrInput `pulumi:"sslport"`
}

func (GetManagementStationMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirror)(nil)).Elem()
}

func (i GetManagementStationMirrorArgs) ToGetManagementStationMirrorOutput() GetManagementStationMirrorOutput {
	return i.ToGetManagementStationMirrorOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorArgs) ToGetManagementStationMirrorOutputWithContext(ctx context.Context) GetManagementStationMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorOutput)
}

// GetManagementStationMirrorArrayInput is an input type that accepts GetManagementStationMirrorArray and GetManagementStationMirrorArrayOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorArrayInput` via:
//
//	GetManagementStationMirrorArray{ GetManagementStationMirrorArgs{...} }
type GetManagementStationMirrorArrayInput interface {
	pulumi.Input

	ToGetManagementStationMirrorArrayOutput() GetManagementStationMirrorArrayOutput
	ToGetManagementStationMirrorArrayOutputWithContext(context.Context) GetManagementStationMirrorArrayOutput
}

type GetManagementStationMirrorArray []GetManagementStationMirrorInput

func (GetManagementStationMirrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirror)(nil)).Elem()
}

func (i GetManagementStationMirrorArray) ToGetManagementStationMirrorArrayOutput() GetManagementStationMirrorArrayOutput {
	return i.ToGetManagementStationMirrorArrayOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorArray) ToGetManagementStationMirrorArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorArrayOutput)
}

type GetManagementStationMirrorOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirror)(nil)).Elem()
}

func (o GetManagementStationMirrorOutput) ToGetManagementStationMirrorOutput() GetManagementStationMirrorOutput {
	return o
}

func (o GetManagementStationMirrorOutput) ToGetManagementStationMirrorOutputWithContext(ctx context.Context) GetManagementStationMirrorOutput {
	return o
}

// Directory for the mirroring
func (o GetManagementStationMirrorOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirror) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// Port that the proxy will use
func (o GetManagementStationMirrorOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirror) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Local path for the sslcert
func (o GetManagementStationMirrorOutput) Sslcert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirror) *string { return v.Sslcert }).(pulumi.StringPtrOutput)
}

// Default sslport for the mirror
func (o GetManagementStationMirrorOutput) Sslport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirror) *string { return v.Sslport }).(pulumi.StringPtrOutput)
}

type GetManagementStationMirrorArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirror)(nil)).Elem()
}

func (o GetManagementStationMirrorArrayOutput) ToGetManagementStationMirrorArrayOutput() GetManagementStationMirrorArrayOutput {
	return o
}

func (o GetManagementStationMirrorArrayOutput) ToGetManagementStationMirrorArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorArrayOutput {
	return o
}

func (o GetManagementStationMirrorArrayOutput) Index(i pulumi.IntInput) GetManagementStationMirrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationMirror {
		return vs[0].([]GetManagementStationMirror)[vs[1].(int)]
	}).(GetManagementStationMirrorOutput)
}

type GetManagementStationMirrorSyncStatus struct {
	// Total of mirrors in 'failed' state
	Failed *int `pulumi:"failed"`
	// Total of mirrors in 'queued' state
	Queued *int `pulumi:"queued"`
	// Total of mirrors in 'synced' state
	Synced *int `pulumi:"synced"`
	// Total of mirrors in 'syncing' state
	Syncing *int `pulumi:"syncing"`
	// Total of mirrors in 'failed' state
	Unsynced *int `pulumi:"unsynced"`
}

// GetManagementStationMirrorSyncStatusInput is an input type that accepts GetManagementStationMirrorSyncStatusArgs and GetManagementStationMirrorSyncStatusOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorSyncStatusInput` via:
//
//	GetManagementStationMirrorSyncStatusArgs{...}
type GetManagementStationMirrorSyncStatusInput interface {
	pulumi.Input

	ToGetManagementStationMirrorSyncStatusOutput() GetManagementStationMirrorSyncStatusOutput
	ToGetManagementStationMirrorSyncStatusOutputWithContext(context.Context) GetManagementStationMirrorSyncStatusOutput
}

type GetManagementStationMirrorSyncStatusArgs struct {
	// Total of mirrors in 'failed' state
	Failed pulumi.IntPtrInput `pulumi:"failed"`
	// Total of mirrors in 'queued' state
	Queued pulumi.IntPtrInput `pulumi:"queued"`
	// Total of mirrors in 'synced' state
	Synced pulumi.IntPtrInput `pulumi:"synced"`
	// Total of mirrors in 'syncing' state
	Syncing pulumi.IntPtrInput `pulumi:"syncing"`
	// Total of mirrors in 'failed' state
	Unsynced pulumi.IntPtrInput `pulumi:"unsynced"`
}

func (GetManagementStationMirrorSyncStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (i GetManagementStationMirrorSyncStatusArgs) ToGetManagementStationMirrorSyncStatusOutput() GetManagementStationMirrorSyncStatusOutput {
	return i.ToGetManagementStationMirrorSyncStatusOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorSyncStatusArgs) ToGetManagementStationMirrorSyncStatusOutputWithContext(ctx context.Context) GetManagementStationMirrorSyncStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorSyncStatusOutput)
}

// GetManagementStationMirrorSyncStatusArrayInput is an input type that accepts GetManagementStationMirrorSyncStatusArray and GetManagementStationMirrorSyncStatusArrayOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorSyncStatusArrayInput` via:
//
//	GetManagementStationMirrorSyncStatusArray{ GetManagementStationMirrorSyncStatusArgs{...} }
type GetManagementStationMirrorSyncStatusArrayInput interface {
	pulumi.Input

	ToGetManagementStationMirrorSyncStatusArrayOutput() GetManagementStationMirrorSyncStatusArrayOutput
	ToGetManagementStationMirrorSyncStatusArrayOutputWithContext(context.Context) GetManagementStationMirrorSyncStatusArrayOutput
}

type GetManagementStationMirrorSyncStatusArray []GetManagementStationMirrorSyncStatusInput

func (GetManagementStationMirrorSyncStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (i GetManagementStationMirrorSyncStatusArray) ToGetManagementStationMirrorSyncStatusArrayOutput() GetManagementStationMirrorSyncStatusArrayOutput {
	return i.ToGetManagementStationMirrorSyncStatusArrayOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorSyncStatusArray) ToGetManagementStationMirrorSyncStatusArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorSyncStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorSyncStatusArrayOutput)
}

type GetManagementStationMirrorSyncStatusOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorSyncStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (o GetManagementStationMirrorSyncStatusOutput) ToGetManagementStationMirrorSyncStatusOutput() GetManagementStationMirrorSyncStatusOutput {
	return o
}

func (o GetManagementStationMirrorSyncStatusOutput) ToGetManagementStationMirrorSyncStatusOutputWithContext(ctx context.Context) GetManagementStationMirrorSyncStatusOutput {
	return o
}

// Total of mirrors in 'failed' state
func (o GetManagementStationMirrorSyncStatusOutput) Failed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorSyncStatus) *int { return v.Failed }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'queued' state
func (o GetManagementStationMirrorSyncStatusOutput) Queued() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorSyncStatus) *int { return v.Queued }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'synced' state
func (o GetManagementStationMirrorSyncStatusOutput) Synced() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorSyncStatus) *int { return v.Synced }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'syncing' state
func (o GetManagementStationMirrorSyncStatusOutput) Syncing() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorSyncStatus) *int { return v.Syncing }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'failed' state
func (o GetManagementStationMirrorSyncStatusOutput) Unsynced() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorSyncStatus) *int { return v.Unsynced }).(pulumi.IntPtrOutput)
}

type GetManagementStationMirrorSyncStatusArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorSyncStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorSyncStatus)(nil)).Elem()
}

func (o GetManagementStationMirrorSyncStatusArrayOutput) ToGetManagementStationMirrorSyncStatusArrayOutput() GetManagementStationMirrorSyncStatusArrayOutput {
	return o
}

func (o GetManagementStationMirrorSyncStatusArrayOutput) ToGetManagementStationMirrorSyncStatusArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorSyncStatusArrayOutput {
	return o
}

func (o GetManagementStationMirrorSyncStatusArrayOutput) Index(i pulumi.IntInput) GetManagementStationMirrorSyncStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationMirrorSyncStatus {
		return vs[0].([]GetManagementStationMirrorSyncStatus)[vs[1].(int)]
	}).(GetManagementStationMirrorSyncStatusOutput)
}

type GetManagementStationMirrorsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagementStationMirrorsFilterInput is an input type that accepts GetManagementStationMirrorsFilterArgs and GetManagementStationMirrorsFilterOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorsFilterInput` via:
//
//	GetManagementStationMirrorsFilterArgs{...}
type GetManagementStationMirrorsFilterInput interface {
	pulumi.Input

	ToGetManagementStationMirrorsFilterOutput() GetManagementStationMirrorsFilterOutput
	ToGetManagementStationMirrorsFilterOutputWithContext(context.Context) GetManagementStationMirrorsFilterOutput
}

type GetManagementStationMirrorsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagementStationMirrorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsFilter)(nil)).Elem()
}

func (i GetManagementStationMirrorsFilterArgs) ToGetManagementStationMirrorsFilterOutput() GetManagementStationMirrorsFilterOutput {
	return i.ToGetManagementStationMirrorsFilterOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorsFilterArgs) ToGetManagementStationMirrorsFilterOutputWithContext(ctx context.Context) GetManagementStationMirrorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorsFilterOutput)
}

// GetManagementStationMirrorsFilterArrayInput is an input type that accepts GetManagementStationMirrorsFilterArray and GetManagementStationMirrorsFilterArrayOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorsFilterArrayInput` via:
//
//	GetManagementStationMirrorsFilterArray{ GetManagementStationMirrorsFilterArgs{...} }
type GetManagementStationMirrorsFilterArrayInput interface {
	pulumi.Input

	ToGetManagementStationMirrorsFilterArrayOutput() GetManagementStationMirrorsFilterArrayOutput
	ToGetManagementStationMirrorsFilterArrayOutputWithContext(context.Context) GetManagementStationMirrorsFilterArrayOutput
}

type GetManagementStationMirrorsFilterArray []GetManagementStationMirrorsFilterInput

func (GetManagementStationMirrorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorsFilter)(nil)).Elem()
}

func (i GetManagementStationMirrorsFilterArray) ToGetManagementStationMirrorsFilterArrayOutput() GetManagementStationMirrorsFilterArrayOutput {
	return i.ToGetManagementStationMirrorsFilterArrayOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorsFilterArray) ToGetManagementStationMirrorsFilterArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorsFilterArrayOutput)
}

type GetManagementStationMirrorsFilterOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsFilter)(nil)).Elem()
}

func (o GetManagementStationMirrorsFilterOutput) ToGetManagementStationMirrorsFilterOutput() GetManagementStationMirrorsFilterOutput {
	return o
}

func (o GetManagementStationMirrorsFilterOutput) ToGetManagementStationMirrorsFilterOutputWithContext(ctx context.Context) GetManagementStationMirrorsFilterOutput {
	return o
}

func (o GetManagementStationMirrorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagementStationMirrorsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagementStationMirrorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagementStationMirrorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorsFilter)(nil)).Elem()
}

func (o GetManagementStationMirrorsFilterArrayOutput) ToGetManagementStationMirrorsFilterArrayOutput() GetManagementStationMirrorsFilterArrayOutput {
	return o
}

func (o GetManagementStationMirrorsFilterArrayOutput) ToGetManagementStationMirrorsFilterArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorsFilterArrayOutput {
	return o
}

func (o GetManagementStationMirrorsFilterArrayOutput) Index(i pulumi.IntInput) GetManagementStationMirrorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationMirrorsFilter {
		return vs[0].([]GetManagementStationMirrorsFilter)[vs[1].(int)]
	}).(GetManagementStationMirrorsFilterOutput)
}

type GetManagementStationMirrorsMirrorsCollection struct {
	// List of mirrors
	Items []GetManagementStationMirrorsMirrorsCollectionItem `pulumi:"items"`
}

// GetManagementStationMirrorsMirrorsCollectionInput is an input type that accepts GetManagementStationMirrorsMirrorsCollectionArgs and GetManagementStationMirrorsMirrorsCollectionOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorsMirrorsCollectionInput` via:
//
//	GetManagementStationMirrorsMirrorsCollectionArgs{...}
type GetManagementStationMirrorsMirrorsCollectionInput interface {
	pulumi.Input

	ToGetManagementStationMirrorsMirrorsCollectionOutput() GetManagementStationMirrorsMirrorsCollectionOutput
	ToGetManagementStationMirrorsMirrorsCollectionOutputWithContext(context.Context) GetManagementStationMirrorsMirrorsCollectionOutput
}

type GetManagementStationMirrorsMirrorsCollectionArgs struct {
	// List of mirrors
	Items GetManagementStationMirrorsMirrorsCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagementStationMirrorsMirrorsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollection)(nil)).Elem()
}

func (i GetManagementStationMirrorsMirrorsCollectionArgs) ToGetManagementStationMirrorsMirrorsCollectionOutput() GetManagementStationMirrorsMirrorsCollectionOutput {
	return i.ToGetManagementStationMirrorsMirrorsCollectionOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorsMirrorsCollectionArgs) ToGetManagementStationMirrorsMirrorsCollectionOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorsMirrorsCollectionOutput)
}

// GetManagementStationMirrorsMirrorsCollectionArrayInput is an input type that accepts GetManagementStationMirrorsMirrorsCollectionArray and GetManagementStationMirrorsMirrorsCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorsMirrorsCollectionArrayInput` via:
//
//	GetManagementStationMirrorsMirrorsCollectionArray{ GetManagementStationMirrorsMirrorsCollectionArgs{...} }
type GetManagementStationMirrorsMirrorsCollectionArrayInput interface {
	pulumi.Input

	ToGetManagementStationMirrorsMirrorsCollectionArrayOutput() GetManagementStationMirrorsMirrorsCollectionArrayOutput
	ToGetManagementStationMirrorsMirrorsCollectionArrayOutputWithContext(context.Context) GetManagementStationMirrorsMirrorsCollectionArrayOutput
}

type GetManagementStationMirrorsMirrorsCollectionArray []GetManagementStationMirrorsMirrorsCollectionInput

func (GetManagementStationMirrorsMirrorsCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorsMirrorsCollection)(nil)).Elem()
}

func (i GetManagementStationMirrorsMirrorsCollectionArray) ToGetManagementStationMirrorsMirrorsCollectionArrayOutput() GetManagementStationMirrorsMirrorsCollectionArrayOutput {
	return i.ToGetManagementStationMirrorsMirrorsCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorsMirrorsCollectionArray) ToGetManagementStationMirrorsMirrorsCollectionArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorsMirrorsCollectionArrayOutput)
}

type GetManagementStationMirrorsMirrorsCollectionOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorsMirrorsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollection)(nil)).Elem()
}

func (o GetManagementStationMirrorsMirrorsCollectionOutput) ToGetManagementStationMirrorsMirrorsCollectionOutput() GetManagementStationMirrorsMirrorsCollectionOutput {
	return o
}

func (o GetManagementStationMirrorsMirrorsCollectionOutput) ToGetManagementStationMirrorsMirrorsCollectionOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionOutput {
	return o
}

// List of mirrors
func (o GetManagementStationMirrorsMirrorsCollectionOutput) Items() GetManagementStationMirrorsMirrorsCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollection) []GetManagementStationMirrorsMirrorsCollectionItem {
		return v.Items
	}).(GetManagementStationMirrorsMirrorsCollectionItemArrayOutput)
}

type GetManagementStationMirrorsMirrorsCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorsMirrorsCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorsMirrorsCollection)(nil)).Elem()
}

func (o GetManagementStationMirrorsMirrorsCollectionArrayOutput) ToGetManagementStationMirrorsMirrorsCollectionArrayOutput() GetManagementStationMirrorsMirrorsCollectionArrayOutput {
	return o
}

func (o GetManagementStationMirrorsMirrorsCollectionArrayOutput) ToGetManagementStationMirrorsMirrorsCollectionArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionArrayOutput {
	return o
}

func (o GetManagementStationMirrorsMirrorsCollectionArrayOutput) Index(i pulumi.IntInput) GetManagementStationMirrorsMirrorsCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationMirrorsMirrorsCollection {
		return vs[0].([]GetManagementStationMirrorsMirrorsCollection)[vs[1].(int)]
	}).(GetManagementStationMirrorsMirrorsCollectionOutput)
}

type GetManagementStationMirrorsMirrorsCollectionItem struct {
	// The architecture type supported by the Software Source
	ArchType *string `pulumi:"archType"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// OCID of a software source
	Id *string `pulumi:"id"`
	// The current log from the management station plugin.
	Log *string `pulumi:"log"`
	// The OS family the Software Source belongs to
	OsFamily *string `pulumi:"osFamily"`
	// A decimal number representing the completness percentage
	Percentage *int `pulumi:"percentage"`
	// Current state of the mirror
	State *string `pulumi:"state"`
	// Timestamp of the last time the mirror was sync
	TimeLastSynced *string `pulumi:"timeLastSynced"`
	// Type of the mirror
	Type *string `pulumi:"type"`
}

// GetManagementStationMirrorsMirrorsCollectionItemInput is an input type that accepts GetManagementStationMirrorsMirrorsCollectionItemArgs and GetManagementStationMirrorsMirrorsCollectionItemOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorsMirrorsCollectionItemInput` via:
//
//	GetManagementStationMirrorsMirrorsCollectionItemArgs{...}
type GetManagementStationMirrorsMirrorsCollectionItemInput interface {
	pulumi.Input

	ToGetManagementStationMirrorsMirrorsCollectionItemOutput() GetManagementStationMirrorsMirrorsCollectionItemOutput
	ToGetManagementStationMirrorsMirrorsCollectionItemOutputWithContext(context.Context) GetManagementStationMirrorsMirrorsCollectionItemOutput
}

type GetManagementStationMirrorsMirrorsCollectionItemArgs struct {
	// The architecture type supported by the Software Source
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// OCID of a software source
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The current log from the management station plugin.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// The OS family the Software Source belongs to
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// A decimal number representing the completness percentage
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
	// Current state of the mirror
	State pulumi.StringPtrInput `pulumi:"state"`
	// Timestamp of the last time the mirror was sync
	TimeLastSynced pulumi.StringPtrInput `pulumi:"timeLastSynced"`
	// Type of the mirror
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetManagementStationMirrorsMirrorsCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollectionItem)(nil)).Elem()
}

func (i GetManagementStationMirrorsMirrorsCollectionItemArgs) ToGetManagementStationMirrorsMirrorsCollectionItemOutput() GetManagementStationMirrorsMirrorsCollectionItemOutput {
	return i.ToGetManagementStationMirrorsMirrorsCollectionItemOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorsMirrorsCollectionItemArgs) ToGetManagementStationMirrorsMirrorsCollectionItemOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorsMirrorsCollectionItemOutput)
}

// GetManagementStationMirrorsMirrorsCollectionItemArrayInput is an input type that accepts GetManagementStationMirrorsMirrorsCollectionItemArray and GetManagementStationMirrorsMirrorsCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagementStationMirrorsMirrorsCollectionItemArrayInput` via:
//
//	GetManagementStationMirrorsMirrorsCollectionItemArray{ GetManagementStationMirrorsMirrorsCollectionItemArgs{...} }
type GetManagementStationMirrorsMirrorsCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagementStationMirrorsMirrorsCollectionItemArrayOutput() GetManagementStationMirrorsMirrorsCollectionItemArrayOutput
	ToGetManagementStationMirrorsMirrorsCollectionItemArrayOutputWithContext(context.Context) GetManagementStationMirrorsMirrorsCollectionItemArrayOutput
}

type GetManagementStationMirrorsMirrorsCollectionItemArray []GetManagementStationMirrorsMirrorsCollectionItemInput

func (GetManagementStationMirrorsMirrorsCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorsMirrorsCollectionItem)(nil)).Elem()
}

func (i GetManagementStationMirrorsMirrorsCollectionItemArray) ToGetManagementStationMirrorsMirrorsCollectionItemArrayOutput() GetManagementStationMirrorsMirrorsCollectionItemArrayOutput {
	return i.ToGetManagementStationMirrorsMirrorsCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagementStationMirrorsMirrorsCollectionItemArray) ToGetManagementStationMirrorsMirrorsCollectionItemArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationMirrorsMirrorsCollectionItemArrayOutput)
}

type GetManagementStationMirrorsMirrorsCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorsMirrorsCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollectionItem)(nil)).Elem()
}

func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) ToGetManagementStationMirrorsMirrorsCollectionItemOutput() GetManagementStationMirrorsMirrorsCollectionItemOutput {
	return o
}

func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) ToGetManagementStationMirrorsMirrorsCollectionItemOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionItemOutput {
	return o
}

// The architecture type supported by the Software Source
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// OCID of a software source
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current log from the management station plugin.
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// The OS family the Software Source belongs to
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// A decimal number representing the completness percentage
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

// Current state of the mirror
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Timestamp of the last time the mirror was sync
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) TimeLastSynced() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.TimeLastSynced }).(pulumi.StringPtrOutput)
}

// Type of the mirror
func (o GetManagementStationMirrorsMirrorsCollectionItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationMirrorsMirrorsCollectionItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetManagementStationMirrorsMirrorsCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationMirrorsMirrorsCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationMirrorsMirrorsCollectionItem)(nil)).Elem()
}

func (o GetManagementStationMirrorsMirrorsCollectionItemArrayOutput) ToGetManagementStationMirrorsMirrorsCollectionItemArrayOutput() GetManagementStationMirrorsMirrorsCollectionItemArrayOutput {
	return o
}

func (o GetManagementStationMirrorsMirrorsCollectionItemArrayOutput) ToGetManagementStationMirrorsMirrorsCollectionItemArrayOutputWithContext(ctx context.Context) GetManagementStationMirrorsMirrorsCollectionItemArrayOutput {
	return o
}

func (o GetManagementStationMirrorsMirrorsCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagementStationMirrorsMirrorsCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationMirrorsMirrorsCollectionItem {
		return vs[0].([]GetManagementStationMirrorsMirrorsCollectionItem)[vs[1].(int)]
	}).(GetManagementStationMirrorsMirrorsCollectionItemOutput)
}

type GetManagementStationProxy struct {
	// URL that the proxy will forward to
	Forward *string `pulumi:"forward"`
	// List of hosts
	Hosts []string `pulumi:"hosts"`
	// To enable or disable the proxy (default true)
	IsEnabled *bool `pulumi:"isEnabled"`
	// Port that the proxy will use
	Port *string `pulumi:"port"`
}

// GetManagementStationProxyInput is an input type that accepts GetManagementStationProxyArgs and GetManagementStationProxyOutput values.
// You can construct a concrete instance of `GetManagementStationProxyInput` via:
//
//	GetManagementStationProxyArgs{...}
type GetManagementStationProxyInput interface {
	pulumi.Input

	ToGetManagementStationProxyOutput() GetManagementStationProxyOutput
	ToGetManagementStationProxyOutputWithContext(context.Context) GetManagementStationProxyOutput
}

type GetManagementStationProxyArgs struct {
	// URL that the proxy will forward to
	Forward pulumi.StringPtrInput `pulumi:"forward"`
	// List of hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// To enable or disable the proxy (default true)
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Port that the proxy will use
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (GetManagementStationProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationProxy)(nil)).Elem()
}

func (i GetManagementStationProxyArgs) ToGetManagementStationProxyOutput() GetManagementStationProxyOutput {
	return i.ToGetManagementStationProxyOutputWithContext(context.Background())
}

func (i GetManagementStationProxyArgs) ToGetManagementStationProxyOutputWithContext(ctx context.Context) GetManagementStationProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationProxyOutput)
}

// GetManagementStationProxyArrayInput is an input type that accepts GetManagementStationProxyArray and GetManagementStationProxyArrayOutput values.
// You can construct a concrete instance of `GetManagementStationProxyArrayInput` via:
//
//	GetManagementStationProxyArray{ GetManagementStationProxyArgs{...} }
type GetManagementStationProxyArrayInput interface {
	pulumi.Input

	ToGetManagementStationProxyArrayOutput() GetManagementStationProxyArrayOutput
	ToGetManagementStationProxyArrayOutputWithContext(context.Context) GetManagementStationProxyArrayOutput
}

type GetManagementStationProxyArray []GetManagementStationProxyInput

func (GetManagementStationProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationProxy)(nil)).Elem()
}

func (i GetManagementStationProxyArray) ToGetManagementStationProxyArrayOutput() GetManagementStationProxyArrayOutput {
	return i.ToGetManagementStationProxyArrayOutputWithContext(context.Background())
}

func (i GetManagementStationProxyArray) ToGetManagementStationProxyArrayOutputWithContext(ctx context.Context) GetManagementStationProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationProxyArrayOutput)
}

type GetManagementStationProxyOutput struct{ *pulumi.OutputState }

func (GetManagementStationProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationProxy)(nil)).Elem()
}

func (o GetManagementStationProxyOutput) ToGetManagementStationProxyOutput() GetManagementStationProxyOutput {
	return o
}

func (o GetManagementStationProxyOutput) ToGetManagementStationProxyOutputWithContext(ctx context.Context) GetManagementStationProxyOutput {
	return o
}

// URL that the proxy will forward to
func (o GetManagementStationProxyOutput) Forward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationProxy) *string { return v.Forward }).(pulumi.StringPtrOutput)
}

// List of hosts
func (o GetManagementStationProxyOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementStationProxy) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// To enable or disable the proxy (default true)
func (o GetManagementStationProxyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagementStationProxy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Port that the proxy will use
func (o GetManagementStationProxyOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationProxy) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type GetManagementStationProxyArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationProxy)(nil)).Elem()
}

func (o GetManagementStationProxyArrayOutput) ToGetManagementStationProxyArrayOutput() GetManagementStationProxyArrayOutput {
	return o
}

func (o GetManagementStationProxyArrayOutput) ToGetManagementStationProxyArrayOutputWithContext(ctx context.Context) GetManagementStationProxyArrayOutput {
	return o
}

func (o GetManagementStationProxyArrayOutput) Index(i pulumi.IntInput) GetManagementStationProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationProxy {
		return vs[0].([]GetManagementStationProxy)[vs[1].(int)]
	}).(GetManagementStationProxyOutput)
}

type GetManagementStationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagementStationsFilterInput is an input type that accepts GetManagementStationsFilterArgs and GetManagementStationsFilterOutput values.
// You can construct a concrete instance of `GetManagementStationsFilterInput` via:
//
//	GetManagementStationsFilterArgs{...}
type GetManagementStationsFilterInput interface {
	pulumi.Input

	ToGetManagementStationsFilterOutput() GetManagementStationsFilterOutput
	ToGetManagementStationsFilterOutputWithContext(context.Context) GetManagementStationsFilterOutput
}

type GetManagementStationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagementStationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsFilter)(nil)).Elem()
}

func (i GetManagementStationsFilterArgs) ToGetManagementStationsFilterOutput() GetManagementStationsFilterOutput {
	return i.ToGetManagementStationsFilterOutputWithContext(context.Background())
}

func (i GetManagementStationsFilterArgs) ToGetManagementStationsFilterOutputWithContext(ctx context.Context) GetManagementStationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsFilterOutput)
}

// GetManagementStationsFilterArrayInput is an input type that accepts GetManagementStationsFilterArray and GetManagementStationsFilterArrayOutput values.
// You can construct a concrete instance of `GetManagementStationsFilterArrayInput` via:
//
//	GetManagementStationsFilterArray{ GetManagementStationsFilterArgs{...} }
type GetManagementStationsFilterArrayInput interface {
	pulumi.Input

	ToGetManagementStationsFilterArrayOutput() GetManagementStationsFilterArrayOutput
	ToGetManagementStationsFilterArrayOutputWithContext(context.Context) GetManagementStationsFilterArrayOutput
}

type GetManagementStationsFilterArray []GetManagementStationsFilterInput

func (GetManagementStationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsFilter)(nil)).Elem()
}

func (i GetManagementStationsFilterArray) ToGetManagementStationsFilterArrayOutput() GetManagementStationsFilterArrayOutput {
	return i.ToGetManagementStationsFilterArrayOutputWithContext(context.Background())
}

func (i GetManagementStationsFilterArray) ToGetManagementStationsFilterArrayOutputWithContext(ctx context.Context) GetManagementStationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsFilterArrayOutput)
}

type GetManagementStationsFilterOutput struct{ *pulumi.OutputState }

func (GetManagementStationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsFilter)(nil)).Elem()
}

func (o GetManagementStationsFilterOutput) ToGetManagementStationsFilterOutput() GetManagementStationsFilterOutput {
	return o
}

func (o GetManagementStationsFilterOutput) ToGetManagementStationsFilterOutputWithContext(ctx context.Context) GetManagementStationsFilterOutput {
	return o
}

func (o GetManagementStationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementStationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagementStationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagementStationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagementStationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementStationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagementStationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsFilter)(nil)).Elem()
}

func (o GetManagementStationsFilterArrayOutput) ToGetManagementStationsFilterArrayOutput() GetManagementStationsFilterArrayOutput {
	return o
}

func (o GetManagementStationsFilterArrayOutput) ToGetManagementStationsFilterArrayOutputWithContext(ctx context.Context) GetManagementStationsFilterArrayOutput {
	return o
}

func (o GetManagementStationsFilterArrayOutput) Index(i pulumi.IntInput) GetManagementStationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationsFilter {
		return vs[0].([]GetManagementStationsFilter)[vs[1].(int)]
	}).(GetManagementStationsFilterOutput)
}

type GetManagementStationsManagementStationCollection struct {
	Items []GetManagementStationsManagementStationCollectionItem `pulumi:"items"`
}

// GetManagementStationsManagementStationCollectionInput is an input type that accepts GetManagementStationsManagementStationCollectionArgs and GetManagementStationsManagementStationCollectionOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionInput` via:
//
//	GetManagementStationsManagementStationCollectionArgs{...}
type GetManagementStationsManagementStationCollectionInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionOutput() GetManagementStationsManagementStationCollectionOutput
	ToGetManagementStationsManagementStationCollectionOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionOutput
}

type GetManagementStationsManagementStationCollectionArgs struct {
	Items GetManagementStationsManagementStationCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagementStationsManagementStationCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollection)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionArgs) ToGetManagementStationsManagementStationCollectionOutput() GetManagementStationsManagementStationCollectionOutput {
	return i.ToGetManagementStationsManagementStationCollectionOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionArgs) ToGetManagementStationsManagementStationCollectionOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionOutput)
}

// GetManagementStationsManagementStationCollectionArrayInput is an input type that accepts GetManagementStationsManagementStationCollectionArray and GetManagementStationsManagementStationCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionArrayInput` via:
//
//	GetManagementStationsManagementStationCollectionArray{ GetManagementStationsManagementStationCollectionArgs{...} }
type GetManagementStationsManagementStationCollectionArrayInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionArrayOutput() GetManagementStationsManagementStationCollectionArrayOutput
	ToGetManagementStationsManagementStationCollectionArrayOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionArrayOutput
}

type GetManagementStationsManagementStationCollectionArray []GetManagementStationsManagementStationCollectionInput

func (GetManagementStationsManagementStationCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollection)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionArray) ToGetManagementStationsManagementStationCollectionArrayOutput() GetManagementStationsManagementStationCollectionArrayOutput {
	return i.ToGetManagementStationsManagementStationCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionArray) ToGetManagementStationsManagementStationCollectionArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionArrayOutput)
}

type GetManagementStationsManagementStationCollectionOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollection)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionOutput) ToGetManagementStationsManagementStationCollectionOutput() GetManagementStationsManagementStationCollectionOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionOutput) ToGetManagementStationsManagementStationCollectionOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionOutput) Items() GetManagementStationsManagementStationCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollection) []GetManagementStationsManagementStationCollectionItem {
		return v.Items
	}).(GetManagementStationsManagementStationCollectionItemArrayOutput)
}

type GetManagementStationsManagementStationCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollection)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionArrayOutput) ToGetManagementStationsManagementStationCollectionArrayOutput() GetManagementStationsManagementStationCollectionArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionArrayOutput) ToGetManagementStationsManagementStationCollectionArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionArrayOutput) Index(i pulumi.IntInput) GetManagementStationsManagementStationCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationsManagementStationCollection {
		return vs[0].([]GetManagementStationsManagementStationCollection)[vs[1].(int)]
	}).(GetManagementStationsManagementStationCollectionOutput)
}

type GetManagementStationsManagementStationCollectionItem struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Details describing the ManagementStation config.
	Description *string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Name of the host
	Hostname *string `pulumi:"hostname"`
	// The OCID of the management station.
	Id *string `pulumi:"id"`
	// The OCID of the managed instance for which to list resources.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// A decimal number representing the mirror capacity
	MirrorCapacity *int `pulumi:"mirrorCapacity"`
	// Status summary of all repos
	MirrorSyncStatuses []GetManagementStationsManagementStationCollectionItemMirrorSyncStatus `pulumi:"mirrorSyncStatuses"`
	// Information for a mirror configuration
	Mirrors []GetManagementStationsManagementStationCollectionItemMirror `pulumi:"mirrors"`
	// A decimal number representing the completeness percentage
	OverallPercentage *int `pulumi:"overallPercentage"`
	// Current state of the mirroring
	OverallState *string `pulumi:"overallState"`
	// OCID of the Profile associated with the Station
	ProfileId *string `pulumi:"profileId"`
	// Information for a proxy configuration
	Proxies []GetManagementStationsManagementStationCollectionItemProxy `pulumi:"proxies"`
	// OCID of the Scheduled Job for mirror sync
	ScheduledJobId *string `pulumi:"scheduledJobId"`
	// The current lifecycle state for the object.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// A decimal number representing the total of repos
	TotalMirrors *int `pulumi:"totalMirrors"`
}

// GetManagementStationsManagementStationCollectionItemInput is an input type that accepts GetManagementStationsManagementStationCollectionItemArgs and GetManagementStationsManagementStationCollectionItemOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemInput` via:
//
//	GetManagementStationsManagementStationCollectionItemArgs{...}
type GetManagementStationsManagementStationCollectionItemInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemOutput() GetManagementStationsManagementStationCollectionItemOutput
	ToGetManagementStationsManagementStationCollectionItemOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemOutput
}

type GetManagementStationsManagementStationCollectionItemArgs struct {
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Details describing the ManagementStation config.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Name of the host
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The OCID of the management station.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The OCID of the managed instance for which to list resources.
	ManagedInstanceId pulumi.StringPtrInput `pulumi:"managedInstanceId"`
	// A decimal number representing the mirror capacity
	MirrorCapacity pulumi.IntPtrInput `pulumi:"mirrorCapacity"`
	// Status summary of all repos
	MirrorSyncStatuses GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayInput `pulumi:"mirrorSyncStatuses"`
	// Information for a mirror configuration
	Mirrors GetManagementStationsManagementStationCollectionItemMirrorArrayInput `pulumi:"mirrors"`
	// A decimal number representing the completeness percentage
	OverallPercentage pulumi.IntPtrInput `pulumi:"overallPercentage"`
	// Current state of the mirroring
	OverallState pulumi.StringPtrInput `pulumi:"overallState"`
	// OCID of the Profile associated with the Station
	ProfileId pulumi.StringPtrInput `pulumi:"profileId"`
	// Information for a proxy configuration
	Proxies GetManagementStationsManagementStationCollectionItemProxyArrayInput `pulumi:"proxies"`
	// OCID of the Scheduled Job for mirror sync
	ScheduledJobId pulumi.StringPtrInput `pulumi:"scheduledJobId"`
	// The current lifecycle state for the object.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// A decimal number representing the total of repos
	TotalMirrors pulumi.IntPtrInput `pulumi:"totalMirrors"`
}

func (GetManagementStationsManagementStationCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItem)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemArgs) ToGetManagementStationsManagementStationCollectionItemOutput() GetManagementStationsManagementStationCollectionItemOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemArgs) ToGetManagementStationsManagementStationCollectionItemOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemOutput)
}

// GetManagementStationsManagementStationCollectionItemArrayInput is an input type that accepts GetManagementStationsManagementStationCollectionItemArray and GetManagementStationsManagementStationCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemArrayInput` via:
//
//	GetManagementStationsManagementStationCollectionItemArray{ GetManagementStationsManagementStationCollectionItemArgs{...} }
type GetManagementStationsManagementStationCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemArrayOutput() GetManagementStationsManagementStationCollectionItemArrayOutput
	ToGetManagementStationsManagementStationCollectionItemArrayOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemArrayOutput
}

type GetManagementStationsManagementStationCollectionItemArray []GetManagementStationsManagementStationCollectionItemInput

func (GetManagementStationsManagementStationCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItem)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemArray) ToGetManagementStationsManagementStationCollectionItemArrayOutput() GetManagementStationsManagementStationCollectionItemArrayOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemArray) ToGetManagementStationsManagementStationCollectionItemArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemArrayOutput)
}

type GetManagementStationsManagementStationCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItem)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemOutput) ToGetManagementStationsManagementStationCollectionItemOutput() GetManagementStationsManagementStationCollectionItemOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemOutput) ToGetManagementStationsManagementStationCollectionItemOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemOutput {
	return o
}

// The OCID of the compartment that contains the resources to list.
func (o GetManagementStationsManagementStationCollectionItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetManagementStationsManagementStationCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// Details describing the ManagementStation config.
func (o GetManagementStationsManagementStationCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetManagementStationsManagementStationCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetManagementStationsManagementStationCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// Name of the host
func (o GetManagementStationsManagementStationCollectionItemOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The OCID of the management station.
func (o GetManagementStationsManagementStationCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of the managed instance for which to list resources.
func (o GetManagementStationsManagementStationCollectionItemOutput) ManagedInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.ManagedInstanceId }).(pulumi.StringPtrOutput)
}

// A decimal number representing the mirror capacity
func (o GetManagementStationsManagementStationCollectionItemOutput) MirrorCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *int { return v.MirrorCapacity }).(pulumi.IntPtrOutput)
}

// Status summary of all repos
func (o GetManagementStationsManagementStationCollectionItemOutput) MirrorSyncStatuses() GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) []GetManagementStationsManagementStationCollectionItemMirrorSyncStatus {
		return v.MirrorSyncStatuses
	}).(GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput)
}

// Information for a mirror configuration
func (o GetManagementStationsManagementStationCollectionItemOutput) Mirrors() GetManagementStationsManagementStationCollectionItemMirrorArrayOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) []GetManagementStationsManagementStationCollectionItemMirror {
		return v.Mirrors
	}).(GetManagementStationsManagementStationCollectionItemMirrorArrayOutput)
}

// A decimal number representing the completeness percentage
func (o GetManagementStationsManagementStationCollectionItemOutput) OverallPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *int { return v.OverallPercentage }).(pulumi.IntPtrOutput)
}

// Current state of the mirroring
func (o GetManagementStationsManagementStationCollectionItemOutput) OverallState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.OverallState }).(pulumi.StringPtrOutput)
}

// OCID of the Profile associated with the Station
func (o GetManagementStationsManagementStationCollectionItemOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

// Information for a proxy configuration
func (o GetManagementStationsManagementStationCollectionItemOutput) Proxies() GetManagementStationsManagementStationCollectionItemProxyArrayOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) []GetManagementStationsManagementStationCollectionItemProxy {
		return v.Proxies
	}).(GetManagementStationsManagementStationCollectionItemProxyArrayOutput)
}

// OCID of the Scheduled Job for mirror sync
func (o GetManagementStationsManagementStationCollectionItemOutput) ScheduledJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.ScheduledJobId }).(pulumi.StringPtrOutput)
}

// The current lifecycle state for the object.
func (o GetManagementStationsManagementStationCollectionItemOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetManagementStationsManagementStationCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// A decimal number representing the total of repos
func (o GetManagementStationsManagementStationCollectionItemOutput) TotalMirrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItem) *int { return v.TotalMirrors }).(pulumi.IntPtrOutput)
}

type GetManagementStationsManagementStationCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItem)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemArrayOutput) ToGetManagementStationsManagementStationCollectionItemArrayOutput() GetManagementStationsManagementStationCollectionItemArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemArrayOutput) ToGetManagementStationsManagementStationCollectionItemArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagementStationsManagementStationCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationsManagementStationCollectionItem {
		return vs[0].([]GetManagementStationsManagementStationCollectionItem)[vs[1].(int)]
	}).(GetManagementStationsManagementStationCollectionItemOutput)
}

type GetManagementStationsManagementStationCollectionItemMirror struct {
	// Directory for the mirroring
	Directory *string `pulumi:"directory"`
	// Port that the proxy will use
	Port *string `pulumi:"port"`
	// Local path for the sslcert
	Sslcert *string `pulumi:"sslcert"`
	// Default sslport for the mirror
	Sslport *string `pulumi:"sslport"`
}

// GetManagementStationsManagementStationCollectionItemMirrorInput is an input type that accepts GetManagementStationsManagementStationCollectionItemMirrorArgs and GetManagementStationsManagementStationCollectionItemMirrorOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemMirrorInput` via:
//
//	GetManagementStationsManagementStationCollectionItemMirrorArgs{...}
type GetManagementStationsManagementStationCollectionItemMirrorInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemMirrorOutput() GetManagementStationsManagementStationCollectionItemMirrorOutput
	ToGetManagementStationsManagementStationCollectionItemMirrorOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemMirrorOutput
}

type GetManagementStationsManagementStationCollectionItemMirrorArgs struct {
	// Directory for the mirroring
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// Port that the proxy will use
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Local path for the sslcert
	Sslcert pulumi.StringPtrInput `pulumi:"sslcert"`
	// Default sslport for the mirror
	Sslport pulumi.StringPtrInput `pulumi:"sslport"`
}

func (GetManagementStationsManagementStationCollectionItemMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirror)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemMirrorArgs) ToGetManagementStationsManagementStationCollectionItemMirrorOutput() GetManagementStationsManagementStationCollectionItemMirrorOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemMirrorOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemMirrorArgs) ToGetManagementStationsManagementStationCollectionItemMirrorOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemMirrorOutput)
}

// GetManagementStationsManagementStationCollectionItemMirrorArrayInput is an input type that accepts GetManagementStationsManagementStationCollectionItemMirrorArray and GetManagementStationsManagementStationCollectionItemMirrorArrayOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemMirrorArrayInput` via:
//
//	GetManagementStationsManagementStationCollectionItemMirrorArray{ GetManagementStationsManagementStationCollectionItemMirrorArgs{...} }
type GetManagementStationsManagementStationCollectionItemMirrorArrayInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemMirrorArrayOutput() GetManagementStationsManagementStationCollectionItemMirrorArrayOutput
	ToGetManagementStationsManagementStationCollectionItemMirrorArrayOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemMirrorArrayOutput
}

type GetManagementStationsManagementStationCollectionItemMirrorArray []GetManagementStationsManagementStationCollectionItemMirrorInput

func (GetManagementStationsManagementStationCollectionItemMirrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItemMirror)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemMirrorArray) ToGetManagementStationsManagementStationCollectionItemMirrorArrayOutput() GetManagementStationsManagementStationCollectionItemMirrorArrayOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemMirrorArrayOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemMirrorArray) ToGetManagementStationsManagementStationCollectionItemMirrorArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemMirrorArrayOutput)
}

type GetManagementStationsManagementStationCollectionItemMirrorOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirror)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemMirrorOutput) ToGetManagementStationsManagementStationCollectionItemMirrorOutput() GetManagementStationsManagementStationCollectionItemMirrorOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemMirrorOutput) ToGetManagementStationsManagementStationCollectionItemMirrorOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorOutput {
	return o
}

// Directory for the mirroring
func (o GetManagementStationsManagementStationCollectionItemMirrorOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirror) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// Port that the proxy will use
func (o GetManagementStationsManagementStationCollectionItemMirrorOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirror) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Local path for the sslcert
func (o GetManagementStationsManagementStationCollectionItemMirrorOutput) Sslcert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirror) *string { return v.Sslcert }).(pulumi.StringPtrOutput)
}

// Default sslport for the mirror
func (o GetManagementStationsManagementStationCollectionItemMirrorOutput) Sslport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirror) *string { return v.Sslport }).(pulumi.StringPtrOutput)
}

type GetManagementStationsManagementStationCollectionItemMirrorArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemMirrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItemMirror)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemMirrorArrayOutput) ToGetManagementStationsManagementStationCollectionItemMirrorArrayOutput() GetManagementStationsManagementStationCollectionItemMirrorArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemMirrorArrayOutput) ToGetManagementStationsManagementStationCollectionItemMirrorArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemMirrorArrayOutput) Index(i pulumi.IntInput) GetManagementStationsManagementStationCollectionItemMirrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationsManagementStationCollectionItemMirror {
		return vs[0].([]GetManagementStationsManagementStationCollectionItemMirror)[vs[1].(int)]
	}).(GetManagementStationsManagementStationCollectionItemMirrorOutput)
}

type GetManagementStationsManagementStationCollectionItemMirrorSyncStatus struct {
	// Total of mirrors in 'failed' state
	Failed *int `pulumi:"failed"`
	// Total of mirrors in 'queued' state
	Queued *int `pulumi:"queued"`
	// Total of mirrors in 'synced' state
	Synced *int `pulumi:"synced"`
	// Total of mirrors in 'syncing' state
	Syncing *int `pulumi:"syncing"`
	// Total of mirrors in 'failed' state
	Unsynced *int `pulumi:"unsynced"`
}

// GetManagementStationsManagementStationCollectionItemMirrorSyncStatusInput is an input type that accepts GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs and GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemMirrorSyncStatusInput` via:
//
//	GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs{...}
type GetManagementStationsManagementStationCollectionItemMirrorSyncStatusInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput() GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput
	ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput
}

type GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs struct {
	// Total of mirrors in 'failed' state
	Failed pulumi.IntPtrInput `pulumi:"failed"`
	// Total of mirrors in 'queued' state
	Queued pulumi.IntPtrInput `pulumi:"queued"`
	// Total of mirrors in 'synced' state
	Synced pulumi.IntPtrInput `pulumi:"synced"`
	// Total of mirrors in 'syncing' state
	Syncing pulumi.IntPtrInput `pulumi:"syncing"`
	// Total of mirrors in 'failed' state
	Unsynced pulumi.IntPtrInput `pulumi:"unsynced"`
}

func (GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirrorSyncStatus)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput() GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput)
}

// GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayInput is an input type that accepts GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArray and GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayInput` via:
//
//	GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArray{ GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs{...} }
type GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput() GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput
	ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput
}

type GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArray []GetManagementStationsManagementStationCollectionItemMirrorSyncStatusInput

func (GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItemMirrorSyncStatus)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArray) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput() GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArray) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput)
}

type GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirrorSyncStatus)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput() GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput {
	return o
}

// Total of mirrors in 'failed' state
func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) Failed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirrorSyncStatus) *int { return v.Failed }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'queued' state
func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) Queued() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirrorSyncStatus) *int { return v.Queued }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'synced' state
func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) Synced() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirrorSyncStatus) *int { return v.Synced }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'syncing' state
func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) Syncing() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirrorSyncStatus) *int { return v.Syncing }).(pulumi.IntPtrOutput)
}

// Total of mirrors in 'failed' state
func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput) Unsynced() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemMirrorSyncStatus) *int { return v.Unsynced }).(pulumi.IntPtrOutput)
}

type GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItemMirrorSyncStatus)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput() GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput) ToGetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput) Index(i pulumi.IntInput) GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationsManagementStationCollectionItemMirrorSyncStatus {
		return vs[0].([]GetManagementStationsManagementStationCollectionItemMirrorSyncStatus)[vs[1].(int)]
	}).(GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput)
}

type GetManagementStationsManagementStationCollectionItemProxy struct {
	// URL that the proxy will forward to
	Forward *string `pulumi:"forward"`
	// List of hosts
	Hosts []string `pulumi:"hosts"`
	// To enable or disable the proxy (default true)
	IsEnabled *bool `pulumi:"isEnabled"`
	// Port that the proxy will use
	Port *string `pulumi:"port"`
}

// GetManagementStationsManagementStationCollectionItemProxyInput is an input type that accepts GetManagementStationsManagementStationCollectionItemProxyArgs and GetManagementStationsManagementStationCollectionItemProxyOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemProxyInput` via:
//
//	GetManagementStationsManagementStationCollectionItemProxyArgs{...}
type GetManagementStationsManagementStationCollectionItemProxyInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemProxyOutput() GetManagementStationsManagementStationCollectionItemProxyOutput
	ToGetManagementStationsManagementStationCollectionItemProxyOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemProxyOutput
}

type GetManagementStationsManagementStationCollectionItemProxyArgs struct {
	// URL that the proxy will forward to
	Forward pulumi.StringPtrInput `pulumi:"forward"`
	// List of hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// To enable or disable the proxy (default true)
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Port that the proxy will use
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (GetManagementStationsManagementStationCollectionItemProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemProxy)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemProxyArgs) ToGetManagementStationsManagementStationCollectionItemProxyOutput() GetManagementStationsManagementStationCollectionItemProxyOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemProxyOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemProxyArgs) ToGetManagementStationsManagementStationCollectionItemProxyOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemProxyOutput)
}

// GetManagementStationsManagementStationCollectionItemProxyArrayInput is an input type that accepts GetManagementStationsManagementStationCollectionItemProxyArray and GetManagementStationsManagementStationCollectionItemProxyArrayOutput values.
// You can construct a concrete instance of `GetManagementStationsManagementStationCollectionItemProxyArrayInput` via:
//
//	GetManagementStationsManagementStationCollectionItemProxyArray{ GetManagementStationsManagementStationCollectionItemProxyArgs{...} }
type GetManagementStationsManagementStationCollectionItemProxyArrayInput interface {
	pulumi.Input

	ToGetManagementStationsManagementStationCollectionItemProxyArrayOutput() GetManagementStationsManagementStationCollectionItemProxyArrayOutput
	ToGetManagementStationsManagementStationCollectionItemProxyArrayOutputWithContext(context.Context) GetManagementStationsManagementStationCollectionItemProxyArrayOutput
}

type GetManagementStationsManagementStationCollectionItemProxyArray []GetManagementStationsManagementStationCollectionItemProxyInput

func (GetManagementStationsManagementStationCollectionItemProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItemProxy)(nil)).Elem()
}

func (i GetManagementStationsManagementStationCollectionItemProxyArray) ToGetManagementStationsManagementStationCollectionItemProxyArrayOutput() GetManagementStationsManagementStationCollectionItemProxyArrayOutput {
	return i.ToGetManagementStationsManagementStationCollectionItemProxyArrayOutputWithContext(context.Background())
}

func (i GetManagementStationsManagementStationCollectionItemProxyArray) ToGetManagementStationsManagementStationCollectionItemProxyArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementStationsManagementStationCollectionItemProxyArrayOutput)
}

type GetManagementStationsManagementStationCollectionItemProxyOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemProxy)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemProxyOutput) ToGetManagementStationsManagementStationCollectionItemProxyOutput() GetManagementStationsManagementStationCollectionItemProxyOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemProxyOutput) ToGetManagementStationsManagementStationCollectionItemProxyOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemProxyOutput {
	return o
}

// URL that the proxy will forward to
func (o GetManagementStationsManagementStationCollectionItemProxyOutput) Forward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemProxy) *string { return v.Forward }).(pulumi.StringPtrOutput)
}

// List of hosts
func (o GetManagementStationsManagementStationCollectionItemProxyOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemProxy) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// To enable or disable the proxy (default true)
func (o GetManagementStationsManagementStationCollectionItemProxyOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemProxy) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Port that the proxy will use
func (o GetManagementStationsManagementStationCollectionItemProxyOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagementStationsManagementStationCollectionItemProxy) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type GetManagementStationsManagementStationCollectionItemProxyArrayOutput struct{ *pulumi.OutputState }

func (GetManagementStationsManagementStationCollectionItemProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementStationsManagementStationCollectionItemProxy)(nil)).Elem()
}

func (o GetManagementStationsManagementStationCollectionItemProxyArrayOutput) ToGetManagementStationsManagementStationCollectionItemProxyArrayOutput() GetManagementStationsManagementStationCollectionItemProxyArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemProxyArrayOutput) ToGetManagementStationsManagementStationCollectionItemProxyArrayOutputWithContext(ctx context.Context) GetManagementStationsManagementStationCollectionItemProxyArrayOutput {
	return o
}

func (o GetManagementStationsManagementStationCollectionItemProxyArrayOutput) Index(i pulumi.IntInput) GetManagementStationsManagementStationCollectionItemProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementStationsManagementStationCollectionItemProxy {
		return vs[0].([]GetManagementStationsManagementStationCollectionItemProxy)[vs[1].(int)]
	}).(GetManagementStationsManagementStationCollectionItemProxyOutput)
}

type GetProfileLifecycleEnvironment struct {
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetProfileLifecycleEnvironmentInput is an input type that accepts GetProfileLifecycleEnvironmentArgs and GetProfileLifecycleEnvironmentOutput values.
// You can construct a concrete instance of `GetProfileLifecycleEnvironmentInput` via:
//
//	GetProfileLifecycleEnvironmentArgs{...}
type GetProfileLifecycleEnvironmentInput interface {
	pulumi.Input

	ToGetProfileLifecycleEnvironmentOutput() GetProfileLifecycleEnvironmentOutput
	ToGetProfileLifecycleEnvironmentOutputWithContext(context.Context) GetProfileLifecycleEnvironmentOutput
}

type GetProfileLifecycleEnvironmentArgs struct {
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetProfileLifecycleEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileLifecycleEnvironment)(nil)).Elem()
}

func (i GetProfileLifecycleEnvironmentArgs) ToGetProfileLifecycleEnvironmentOutput() GetProfileLifecycleEnvironmentOutput {
	return i.ToGetProfileLifecycleEnvironmentOutputWithContext(context.Background())
}

func (i GetProfileLifecycleEnvironmentArgs) ToGetProfileLifecycleEnvironmentOutputWithContext(ctx context.Context) GetProfileLifecycleEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileLifecycleEnvironmentOutput)
}

// GetProfileLifecycleEnvironmentArrayInput is an input type that accepts GetProfileLifecycleEnvironmentArray and GetProfileLifecycleEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetProfileLifecycleEnvironmentArrayInput` via:
//
//	GetProfileLifecycleEnvironmentArray{ GetProfileLifecycleEnvironmentArgs{...} }
type GetProfileLifecycleEnvironmentArrayInput interface {
	pulumi.Input

	ToGetProfileLifecycleEnvironmentArrayOutput() GetProfileLifecycleEnvironmentArrayOutput
	ToGetProfileLifecycleEnvironmentArrayOutputWithContext(context.Context) GetProfileLifecycleEnvironmentArrayOutput
}

type GetProfileLifecycleEnvironmentArray []GetProfileLifecycleEnvironmentInput

func (GetProfileLifecycleEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileLifecycleEnvironment)(nil)).Elem()
}

func (i GetProfileLifecycleEnvironmentArray) ToGetProfileLifecycleEnvironmentArrayOutput() GetProfileLifecycleEnvironmentArrayOutput {
	return i.ToGetProfileLifecycleEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetProfileLifecycleEnvironmentArray) ToGetProfileLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) GetProfileLifecycleEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileLifecycleEnvironmentArrayOutput)
}

type GetProfileLifecycleEnvironmentOutput struct{ *pulumi.OutputState }

func (GetProfileLifecycleEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileLifecycleEnvironment)(nil)).Elem()
}

func (o GetProfileLifecycleEnvironmentOutput) ToGetProfileLifecycleEnvironmentOutput() GetProfileLifecycleEnvironmentOutput {
	return o
}

func (o GetProfileLifecycleEnvironmentOutput) ToGetProfileLifecycleEnvironmentOutputWithContext(ctx context.Context) GetProfileLifecycleEnvironmentOutput {
	return o
}

// Software source name.
func (o GetProfileLifecycleEnvironmentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileLifecycleEnvironment) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfileLifecycleEnvironmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileLifecycleEnvironment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetProfileLifecycleEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetProfileLifecycleEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileLifecycleEnvironment)(nil)).Elem()
}

func (o GetProfileLifecycleEnvironmentArrayOutput) ToGetProfileLifecycleEnvironmentArrayOutput() GetProfileLifecycleEnvironmentArrayOutput {
	return o
}

func (o GetProfileLifecycleEnvironmentArrayOutput) ToGetProfileLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) GetProfileLifecycleEnvironmentArrayOutput {
	return o
}

func (o GetProfileLifecycleEnvironmentArrayOutput) Index(i pulumi.IntInput) GetProfileLifecycleEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileLifecycleEnvironment {
		return vs[0].([]GetProfileLifecycleEnvironment)[vs[1].(int)]
	}).(GetProfileLifecycleEnvironmentOutput)
}

type GetProfileLifecycleStage struct {
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetProfileLifecycleStageInput is an input type that accepts GetProfileLifecycleStageArgs and GetProfileLifecycleStageOutput values.
// You can construct a concrete instance of `GetProfileLifecycleStageInput` via:
//
//	GetProfileLifecycleStageArgs{...}
type GetProfileLifecycleStageInput interface {
	pulumi.Input

	ToGetProfileLifecycleStageOutput() GetProfileLifecycleStageOutput
	ToGetProfileLifecycleStageOutputWithContext(context.Context) GetProfileLifecycleStageOutput
}

type GetProfileLifecycleStageArgs struct {
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetProfileLifecycleStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileLifecycleStage)(nil)).Elem()
}

func (i GetProfileLifecycleStageArgs) ToGetProfileLifecycleStageOutput() GetProfileLifecycleStageOutput {
	return i.ToGetProfileLifecycleStageOutputWithContext(context.Background())
}

func (i GetProfileLifecycleStageArgs) ToGetProfileLifecycleStageOutputWithContext(ctx context.Context) GetProfileLifecycleStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileLifecycleStageOutput)
}

// GetProfileLifecycleStageArrayInput is an input type that accepts GetProfileLifecycleStageArray and GetProfileLifecycleStageArrayOutput values.
// You can construct a concrete instance of `GetProfileLifecycleStageArrayInput` via:
//
//	GetProfileLifecycleStageArray{ GetProfileLifecycleStageArgs{...} }
type GetProfileLifecycleStageArrayInput interface {
	pulumi.Input

	ToGetProfileLifecycleStageArrayOutput() GetProfileLifecycleStageArrayOutput
	ToGetProfileLifecycleStageArrayOutputWithContext(context.Context) GetProfileLifecycleStageArrayOutput
}

type GetProfileLifecycleStageArray []GetProfileLifecycleStageInput

func (GetProfileLifecycleStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileLifecycleStage)(nil)).Elem()
}

func (i GetProfileLifecycleStageArray) ToGetProfileLifecycleStageArrayOutput() GetProfileLifecycleStageArrayOutput {
	return i.ToGetProfileLifecycleStageArrayOutputWithContext(context.Background())
}

func (i GetProfileLifecycleStageArray) ToGetProfileLifecycleStageArrayOutputWithContext(ctx context.Context) GetProfileLifecycleStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileLifecycleStageArrayOutput)
}

type GetProfileLifecycleStageOutput struct{ *pulumi.OutputState }

func (GetProfileLifecycleStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileLifecycleStage)(nil)).Elem()
}

func (o GetProfileLifecycleStageOutput) ToGetProfileLifecycleStageOutput() GetProfileLifecycleStageOutput {
	return o
}

func (o GetProfileLifecycleStageOutput) ToGetProfileLifecycleStageOutputWithContext(ctx context.Context) GetProfileLifecycleStageOutput {
	return o
}

// Software source name.
func (o GetProfileLifecycleStageOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileLifecycleStage) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfileLifecycleStageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileLifecycleStage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetProfileLifecycleStageArrayOutput struct{ *pulumi.OutputState }

func (GetProfileLifecycleStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileLifecycleStage)(nil)).Elem()
}

func (o GetProfileLifecycleStageArrayOutput) ToGetProfileLifecycleStageArrayOutput() GetProfileLifecycleStageArrayOutput {
	return o
}

func (o GetProfileLifecycleStageArrayOutput) ToGetProfileLifecycleStageArrayOutputWithContext(ctx context.Context) GetProfileLifecycleStageArrayOutput {
	return o
}

func (o GetProfileLifecycleStageArrayOutput) Index(i pulumi.IntInput) GetProfileLifecycleStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileLifecycleStage {
		return vs[0].([]GetProfileLifecycleStage)[vs[1].(int)]
	}).(GetProfileLifecycleStageOutput)
}

type GetProfileManagedInstanceGroup struct {
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetProfileManagedInstanceGroupInput is an input type that accepts GetProfileManagedInstanceGroupArgs and GetProfileManagedInstanceGroupOutput values.
// You can construct a concrete instance of `GetProfileManagedInstanceGroupInput` via:
//
//	GetProfileManagedInstanceGroupArgs{...}
type GetProfileManagedInstanceGroupInput interface {
	pulumi.Input

	ToGetProfileManagedInstanceGroupOutput() GetProfileManagedInstanceGroupOutput
	ToGetProfileManagedInstanceGroupOutputWithContext(context.Context) GetProfileManagedInstanceGroupOutput
}

type GetProfileManagedInstanceGroupArgs struct {
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetProfileManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileManagedInstanceGroup)(nil)).Elem()
}

func (i GetProfileManagedInstanceGroupArgs) ToGetProfileManagedInstanceGroupOutput() GetProfileManagedInstanceGroupOutput {
	return i.ToGetProfileManagedInstanceGroupOutputWithContext(context.Background())
}

func (i GetProfileManagedInstanceGroupArgs) ToGetProfileManagedInstanceGroupOutputWithContext(ctx context.Context) GetProfileManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileManagedInstanceGroupOutput)
}

// GetProfileManagedInstanceGroupArrayInput is an input type that accepts GetProfileManagedInstanceGroupArray and GetProfileManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `GetProfileManagedInstanceGroupArrayInput` via:
//
//	GetProfileManagedInstanceGroupArray{ GetProfileManagedInstanceGroupArgs{...} }
type GetProfileManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToGetProfileManagedInstanceGroupArrayOutput() GetProfileManagedInstanceGroupArrayOutput
	ToGetProfileManagedInstanceGroupArrayOutputWithContext(context.Context) GetProfileManagedInstanceGroupArrayOutput
}

type GetProfileManagedInstanceGroupArray []GetProfileManagedInstanceGroupInput

func (GetProfileManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileManagedInstanceGroup)(nil)).Elem()
}

func (i GetProfileManagedInstanceGroupArray) ToGetProfileManagedInstanceGroupArrayOutput() GetProfileManagedInstanceGroupArrayOutput {
	return i.ToGetProfileManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i GetProfileManagedInstanceGroupArray) ToGetProfileManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetProfileManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileManagedInstanceGroupArrayOutput)
}

type GetProfileManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (GetProfileManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileManagedInstanceGroup)(nil)).Elem()
}

func (o GetProfileManagedInstanceGroupOutput) ToGetProfileManagedInstanceGroupOutput() GetProfileManagedInstanceGroupOutput {
	return o
}

func (o GetProfileManagedInstanceGroupOutput) ToGetProfileManagedInstanceGroupOutputWithContext(ctx context.Context) GetProfileManagedInstanceGroupOutput {
	return o
}

// Software source name.
func (o GetProfileManagedInstanceGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileManagedInstanceGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfileManagedInstanceGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileManagedInstanceGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetProfileManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProfileManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileManagedInstanceGroup)(nil)).Elem()
}

func (o GetProfileManagedInstanceGroupArrayOutput) ToGetProfileManagedInstanceGroupArrayOutput() GetProfileManagedInstanceGroupArrayOutput {
	return o
}

func (o GetProfileManagedInstanceGroupArrayOutput) ToGetProfileManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetProfileManagedInstanceGroupArrayOutput {
	return o
}

func (o GetProfileManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) GetProfileManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileManagedInstanceGroup {
		return vs[0].([]GetProfileManagedInstanceGroup)[vs[1].(int)]
	}).(GetProfileManagedInstanceGroupOutput)
}

type GetProfileSoftwareSource struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetProfileSoftwareSourceInput is an input type that accepts GetProfileSoftwareSourceArgs and GetProfileSoftwareSourceOutput values.
// You can construct a concrete instance of `GetProfileSoftwareSourceInput` via:
//
//	GetProfileSoftwareSourceArgs{...}
type GetProfileSoftwareSourceInput interface {
	pulumi.Input

	ToGetProfileSoftwareSourceOutput() GetProfileSoftwareSourceOutput
	ToGetProfileSoftwareSourceOutputWithContext(context.Context) GetProfileSoftwareSourceOutput
}

type GetProfileSoftwareSourceArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetProfileSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileSoftwareSource)(nil)).Elem()
}

func (i GetProfileSoftwareSourceArgs) ToGetProfileSoftwareSourceOutput() GetProfileSoftwareSourceOutput {
	return i.ToGetProfileSoftwareSourceOutputWithContext(context.Background())
}

func (i GetProfileSoftwareSourceArgs) ToGetProfileSoftwareSourceOutputWithContext(ctx context.Context) GetProfileSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileSoftwareSourceOutput)
}

// GetProfileSoftwareSourceArrayInput is an input type that accepts GetProfileSoftwareSourceArray and GetProfileSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetProfileSoftwareSourceArrayInput` via:
//
//	GetProfileSoftwareSourceArray{ GetProfileSoftwareSourceArgs{...} }
type GetProfileSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetProfileSoftwareSourceArrayOutput() GetProfileSoftwareSourceArrayOutput
	ToGetProfileSoftwareSourceArrayOutputWithContext(context.Context) GetProfileSoftwareSourceArrayOutput
}

type GetProfileSoftwareSourceArray []GetProfileSoftwareSourceInput

func (GetProfileSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileSoftwareSource)(nil)).Elem()
}

func (i GetProfileSoftwareSourceArray) ToGetProfileSoftwareSourceArrayOutput() GetProfileSoftwareSourceArrayOutput {
	return i.ToGetProfileSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetProfileSoftwareSourceArray) ToGetProfileSoftwareSourceArrayOutputWithContext(ctx context.Context) GetProfileSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileSoftwareSourceArrayOutput)
}

type GetProfileSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetProfileSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileSoftwareSource)(nil)).Elem()
}

func (o GetProfileSoftwareSourceOutput) ToGetProfileSoftwareSourceOutput() GetProfileSoftwareSourceOutput {
	return o
}

func (o GetProfileSoftwareSourceOutput) ToGetProfileSoftwareSourceOutputWithContext(ctx context.Context) GetProfileSoftwareSourceOutput {
	return o
}

// Software source description.
func (o GetProfileSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileSoftwareSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetProfileSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileSoftwareSource) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfileSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetProfileSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfileSoftwareSource) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type GetProfileSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetProfileSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileSoftwareSource)(nil)).Elem()
}

func (o GetProfileSoftwareSourceArrayOutput) ToGetProfileSoftwareSourceArrayOutput() GetProfileSoftwareSourceArrayOutput {
	return o
}

func (o GetProfileSoftwareSourceArrayOutput) ToGetProfileSoftwareSourceArrayOutputWithContext(ctx context.Context) GetProfileSoftwareSourceArrayOutput {
	return o
}

func (o GetProfileSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetProfileSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileSoftwareSource {
		return vs[0].([]GetProfileSoftwareSource)[vs[1].(int)]
	}).(GetProfileSoftwareSourceOutput)
}

type GetProfilesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetProfilesFilterInput is an input type that accepts GetProfilesFilterArgs and GetProfilesFilterOutput values.
// You can construct a concrete instance of `GetProfilesFilterInput` via:
//
//	GetProfilesFilterArgs{...}
type GetProfilesFilterInput interface {
	pulumi.Input

	ToGetProfilesFilterOutput() GetProfilesFilterOutput
	ToGetProfilesFilterOutputWithContext(context.Context) GetProfilesFilterOutput
}

type GetProfilesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProfilesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesFilter)(nil)).Elem()
}

func (i GetProfilesFilterArgs) ToGetProfilesFilterOutput() GetProfilesFilterOutput {
	return i.ToGetProfilesFilterOutputWithContext(context.Background())
}

func (i GetProfilesFilterArgs) ToGetProfilesFilterOutputWithContext(ctx context.Context) GetProfilesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesFilterOutput)
}

// GetProfilesFilterArrayInput is an input type that accepts GetProfilesFilterArray and GetProfilesFilterArrayOutput values.
// You can construct a concrete instance of `GetProfilesFilterArrayInput` via:
//
//	GetProfilesFilterArray{ GetProfilesFilterArgs{...} }
type GetProfilesFilterArrayInput interface {
	pulumi.Input

	ToGetProfilesFilterArrayOutput() GetProfilesFilterArrayOutput
	ToGetProfilesFilterArrayOutputWithContext(context.Context) GetProfilesFilterArrayOutput
}

type GetProfilesFilterArray []GetProfilesFilterInput

func (GetProfilesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesFilter)(nil)).Elem()
}

func (i GetProfilesFilterArray) ToGetProfilesFilterArrayOutput() GetProfilesFilterArrayOutput {
	return i.ToGetProfilesFilterArrayOutputWithContext(context.Background())
}

func (i GetProfilesFilterArray) ToGetProfilesFilterArrayOutputWithContext(ctx context.Context) GetProfilesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesFilterArrayOutput)
}

type GetProfilesFilterOutput struct{ *pulumi.OutputState }

func (GetProfilesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesFilter)(nil)).Elem()
}

func (o GetProfilesFilterOutput) ToGetProfilesFilterOutput() GetProfilesFilterOutput {
	return o
}

func (o GetProfilesFilterOutput) ToGetProfilesFilterOutputWithContext(ctx context.Context) GetProfilesFilterOutput {
	return o
}

func (o GetProfilesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfilesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProfilesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProfilesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetProfilesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProfilesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProfilesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProfilesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesFilter)(nil)).Elem()
}

func (o GetProfilesFilterArrayOutput) ToGetProfilesFilterArrayOutput() GetProfilesFilterArrayOutput {
	return o
}

func (o GetProfilesFilterArrayOutput) ToGetProfilesFilterArrayOutputWithContext(ctx context.Context) GetProfilesFilterArrayOutput {
	return o
}

func (o GetProfilesFilterArrayOutput) Index(i pulumi.IntInput) GetProfilesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfilesFilter {
		return vs[0].([]GetProfilesFilter)[vs[1].(int)]
	}).(GetProfilesFilterOutput)
}

type GetProfilesProfileCollection struct {
	Items []GetProfilesProfileCollectionItem `pulumi:"items"`
}

// GetProfilesProfileCollectionInput is an input type that accepts GetProfilesProfileCollectionArgs and GetProfilesProfileCollectionOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionInput` via:
//
//	GetProfilesProfileCollectionArgs{...}
type GetProfilesProfileCollectionInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionOutput() GetProfilesProfileCollectionOutput
	ToGetProfilesProfileCollectionOutputWithContext(context.Context) GetProfilesProfileCollectionOutput
}

type GetProfilesProfileCollectionArgs struct {
	Items GetProfilesProfileCollectionItemArrayInput `pulumi:"items"`
}

func (GetProfilesProfileCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollection)(nil)).Elem()
}

func (i GetProfilesProfileCollectionArgs) ToGetProfilesProfileCollectionOutput() GetProfilesProfileCollectionOutput {
	return i.ToGetProfilesProfileCollectionOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionArgs) ToGetProfilesProfileCollectionOutputWithContext(ctx context.Context) GetProfilesProfileCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionOutput)
}

// GetProfilesProfileCollectionArrayInput is an input type that accepts GetProfilesProfileCollectionArray and GetProfilesProfileCollectionArrayOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionArrayInput` via:
//
//	GetProfilesProfileCollectionArray{ GetProfilesProfileCollectionArgs{...} }
type GetProfilesProfileCollectionArrayInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionArrayOutput() GetProfilesProfileCollectionArrayOutput
	ToGetProfilesProfileCollectionArrayOutputWithContext(context.Context) GetProfilesProfileCollectionArrayOutput
}

type GetProfilesProfileCollectionArray []GetProfilesProfileCollectionInput

func (GetProfilesProfileCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollection)(nil)).Elem()
}

func (i GetProfilesProfileCollectionArray) ToGetProfilesProfileCollectionArrayOutput() GetProfilesProfileCollectionArrayOutput {
	return i.ToGetProfilesProfileCollectionArrayOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionArray) ToGetProfilesProfileCollectionArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionArrayOutput)
}

type GetProfilesProfileCollectionOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollection)(nil)).Elem()
}

func (o GetProfilesProfileCollectionOutput) ToGetProfilesProfileCollectionOutput() GetProfilesProfileCollectionOutput {
	return o
}

func (o GetProfilesProfileCollectionOutput) ToGetProfilesProfileCollectionOutputWithContext(ctx context.Context) GetProfilesProfileCollectionOutput {
	return o
}

func (o GetProfilesProfileCollectionOutput) Items() GetProfilesProfileCollectionItemArrayOutput {
	return o.ApplyT(func(v GetProfilesProfileCollection) []GetProfilesProfileCollectionItem { return v.Items }).(GetProfilesProfileCollectionItemArrayOutput)
}

type GetProfilesProfileCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollection)(nil)).Elem()
}

func (o GetProfilesProfileCollectionArrayOutput) ToGetProfilesProfileCollectionArrayOutput() GetProfilesProfileCollectionArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionArrayOutput) ToGetProfilesProfileCollectionArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionArrayOutput) Index(i pulumi.IntInput) GetProfilesProfileCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfilesProfileCollection {
		return vs[0].([]GetProfilesProfileCollection)[vs[1].(int)]
	}).(GetProfilesProfileCollectionOutput)
}

type GetProfilesProfileCollectionItem struct {
	// A filter to return only profiles that match the given archType.
	ArchType *string `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Identifying information for the specified lifecycle environment.
	LifecycleEnvironments []GetProfilesProfileCollectionItemLifecycleEnvironment `pulumi:"lifecycleEnvironments"`
	LifecycleStageId      *string                                                `pulumi:"lifecycleStageId"`
	// Identifying information for the specified lifecycle stage.
	LifecycleStages        []GetProfilesProfileCollectionItemLifecycleStage `pulumi:"lifecycleStages"`
	ManagedInstanceGroupId *string                                          `pulumi:"managedInstanceGroupId"`
	// Identifying information for the specified managed instance group.
	ManagedInstanceGroups []GetProfilesProfileCollectionItemManagedInstanceGroup `pulumi:"managedInstanceGroups"`
	// The OCID of the management station.
	ManagementStationId *string `pulumi:"managementStationId"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily *string `pulumi:"osFamily"`
	// A filter to return registration profiles that match the given profileType.
	ProfileType       *string  `pulumi:"profileType"`
	SoftwareSourceIds []string `pulumi:"softwareSourceIds"`
	// The list of software sources that the registration profile will use.
	SoftwareSources []GetProfilesProfileCollectionItemSoftwareSource `pulumi:"softwareSources"`
	// A filter to return only registration profile whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the registration profile was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// A filter to return only profiles that match the given vendorName.
	VendorName *string `pulumi:"vendorName"`
}

// GetProfilesProfileCollectionItemInput is an input type that accepts GetProfilesProfileCollectionItemArgs and GetProfilesProfileCollectionItemOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemInput` via:
//
//	GetProfilesProfileCollectionItemArgs{...}
type GetProfilesProfileCollectionItemInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemOutput() GetProfilesProfileCollectionItemOutput
	ToGetProfilesProfileCollectionItemOutputWithContext(context.Context) GetProfilesProfileCollectionItemOutput
}

type GetProfilesProfileCollectionItemArgs struct {
	// A filter to return only profiles that match the given archType.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Identifying information for the specified lifecycle environment.
	LifecycleEnvironments GetProfilesProfileCollectionItemLifecycleEnvironmentArrayInput `pulumi:"lifecycleEnvironments"`
	LifecycleStageId      pulumi.StringPtrInput                                          `pulumi:"lifecycleStageId"`
	// Identifying information for the specified lifecycle stage.
	LifecycleStages        GetProfilesProfileCollectionItemLifecycleStageArrayInput `pulumi:"lifecycleStages"`
	ManagedInstanceGroupId pulumi.StringPtrInput                                    `pulumi:"managedInstanceGroupId"`
	// Identifying information for the specified managed instance group.
	ManagedInstanceGroups GetProfilesProfileCollectionItemManagedInstanceGroupArrayInput `pulumi:"managedInstanceGroups"`
	// The OCID of the management station.
	ManagementStationId pulumi.StringPtrInput `pulumi:"managementStationId"`
	// A filter to return only profiles that match the given osFamily.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// A filter to return registration profiles that match the given profileType.
	ProfileType       pulumi.StringPtrInput   `pulumi:"profileType"`
	SoftwareSourceIds pulumi.StringArrayInput `pulumi:"softwareSourceIds"`
	// The list of software sources that the registration profile will use.
	SoftwareSources GetProfilesProfileCollectionItemSoftwareSourceArrayInput `pulumi:"softwareSources"`
	// A filter to return only registration profile whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the the registration profile was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// A filter to return only profiles that match the given vendorName.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

func (GetProfilesProfileCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItem)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemArgs) ToGetProfilesProfileCollectionItemOutput() GetProfilesProfileCollectionItemOutput {
	return i.ToGetProfilesProfileCollectionItemOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemArgs) ToGetProfilesProfileCollectionItemOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemOutput)
}

// GetProfilesProfileCollectionItemArrayInput is an input type that accepts GetProfilesProfileCollectionItemArray and GetProfilesProfileCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemArrayInput` via:
//
//	GetProfilesProfileCollectionItemArray{ GetProfilesProfileCollectionItemArgs{...} }
type GetProfilesProfileCollectionItemArrayInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemArrayOutput() GetProfilesProfileCollectionItemArrayOutput
	ToGetProfilesProfileCollectionItemArrayOutputWithContext(context.Context) GetProfilesProfileCollectionItemArrayOutput
}

type GetProfilesProfileCollectionItemArray []GetProfilesProfileCollectionItemInput

func (GetProfilesProfileCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItem)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemArray) ToGetProfilesProfileCollectionItemArrayOutput() GetProfilesProfileCollectionItemArrayOutput {
	return i.ToGetProfilesProfileCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemArray) ToGetProfilesProfileCollectionItemArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemArrayOutput)
}

type GetProfilesProfileCollectionItemOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItem)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemOutput) ToGetProfilesProfileCollectionItemOutput() GetProfilesProfileCollectionItemOutput {
	return o
}

func (o GetProfilesProfileCollectionItemOutput) ToGetProfilesProfileCollectionItemOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemOutput {
	return o
}

// A filter to return only profiles that match the given archType.
func (o GetProfilesProfileCollectionItemOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the resources to list.
func (o GetProfilesProfileCollectionItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetProfilesProfileCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Software source description.
func (o GetProfilesProfileCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetProfilesProfileCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetProfilesProfileCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the software source.
func (o GetProfilesProfileCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Identifying information for the specified lifecycle environment.
func (o GetProfilesProfileCollectionItemOutput) LifecycleEnvironments() GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) []GetProfilesProfileCollectionItemLifecycleEnvironment {
		return v.LifecycleEnvironments
	}).(GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput)
}

func (o GetProfilesProfileCollectionItemOutput) LifecycleStageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.LifecycleStageId }).(pulumi.StringPtrOutput)
}

// Identifying information for the specified lifecycle stage.
func (o GetProfilesProfileCollectionItemOutput) LifecycleStages() GetProfilesProfileCollectionItemLifecycleStageArrayOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) []GetProfilesProfileCollectionItemLifecycleStage {
		return v.LifecycleStages
	}).(GetProfilesProfileCollectionItemLifecycleStageArrayOutput)
}

func (o GetProfilesProfileCollectionItemOutput) ManagedInstanceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.ManagedInstanceGroupId }).(pulumi.StringPtrOutput)
}

// Identifying information for the specified managed instance group.
func (o GetProfilesProfileCollectionItemOutput) ManagedInstanceGroups() GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) []GetProfilesProfileCollectionItemManagedInstanceGroup {
		return v.ManagedInstanceGroups
	}).(GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput)
}

// The OCID of the management station.
func (o GetProfilesProfileCollectionItemOutput) ManagementStationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.ManagementStationId }).(pulumi.StringPtrOutput)
}

// A filter to return only profiles that match the given osFamily.
func (o GetProfilesProfileCollectionItemOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// A filter to return registration profiles that match the given profileType.
func (o GetProfilesProfileCollectionItemOutput) ProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.ProfileType }).(pulumi.StringPtrOutput)
}

func (o GetProfilesProfileCollectionItemOutput) SoftwareSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) []string { return v.SoftwareSourceIds }).(pulumi.StringArrayOutput)
}

// The list of software sources that the registration profile will use.
func (o GetProfilesProfileCollectionItemOutput) SoftwareSources() GetProfilesProfileCollectionItemSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) []GetProfilesProfileCollectionItemSoftwareSource {
		return v.SoftwareSources
	}).(GetProfilesProfileCollectionItemSoftwareSourceArrayOutput)
}

// A filter to return only registration profile whose lifecycleState matches the given lifecycleState.
func (o GetProfilesProfileCollectionItemOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetProfilesProfileCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the registration profile was created. An RFC3339 formatted datetime string.
func (o GetProfilesProfileCollectionItemOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// A filter to return only profiles that match the given vendorName.
func (o GetProfilesProfileCollectionItemOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItem) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type GetProfilesProfileCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItem)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemArrayOutput) ToGetProfilesProfileCollectionItemArrayOutput() GetProfilesProfileCollectionItemArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemArrayOutput) ToGetProfilesProfileCollectionItemArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemArrayOutput) Index(i pulumi.IntInput) GetProfilesProfileCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfilesProfileCollectionItem {
		return vs[0].([]GetProfilesProfileCollectionItem)[vs[1].(int)]
	}).(GetProfilesProfileCollectionItemOutput)
}

type GetProfilesProfileCollectionItemLifecycleEnvironment struct {
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetProfilesProfileCollectionItemLifecycleEnvironmentInput is an input type that accepts GetProfilesProfileCollectionItemLifecycleEnvironmentArgs and GetProfilesProfileCollectionItemLifecycleEnvironmentOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemLifecycleEnvironmentInput` via:
//
//	GetProfilesProfileCollectionItemLifecycleEnvironmentArgs{...}
type GetProfilesProfileCollectionItemLifecycleEnvironmentInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemLifecycleEnvironmentOutput() GetProfilesProfileCollectionItemLifecycleEnvironmentOutput
	ToGetProfilesProfileCollectionItemLifecycleEnvironmentOutputWithContext(context.Context) GetProfilesProfileCollectionItemLifecycleEnvironmentOutput
}

type GetProfilesProfileCollectionItemLifecycleEnvironmentArgs struct {
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetProfilesProfileCollectionItemLifecycleEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleEnvironment)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemLifecycleEnvironmentArgs) ToGetProfilesProfileCollectionItemLifecycleEnvironmentOutput() GetProfilesProfileCollectionItemLifecycleEnvironmentOutput {
	return i.ToGetProfilesProfileCollectionItemLifecycleEnvironmentOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemLifecycleEnvironmentArgs) ToGetProfilesProfileCollectionItemLifecycleEnvironmentOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemLifecycleEnvironmentOutput)
}

// GetProfilesProfileCollectionItemLifecycleEnvironmentArrayInput is an input type that accepts GetProfilesProfileCollectionItemLifecycleEnvironmentArray and GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemLifecycleEnvironmentArrayInput` via:
//
//	GetProfilesProfileCollectionItemLifecycleEnvironmentArray{ GetProfilesProfileCollectionItemLifecycleEnvironmentArgs{...} }
type GetProfilesProfileCollectionItemLifecycleEnvironmentArrayInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput() GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput
	ToGetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutputWithContext(context.Context) GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput
}

type GetProfilesProfileCollectionItemLifecycleEnvironmentArray []GetProfilesProfileCollectionItemLifecycleEnvironmentInput

func (GetProfilesProfileCollectionItemLifecycleEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemLifecycleEnvironment)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemLifecycleEnvironmentArray) ToGetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput() GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput {
	return i.ToGetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemLifecycleEnvironmentArray) ToGetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput)
}

type GetProfilesProfileCollectionItemLifecycleEnvironmentOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemLifecycleEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleEnvironment)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemLifecycleEnvironmentOutput) ToGetProfilesProfileCollectionItemLifecycleEnvironmentOutput() GetProfilesProfileCollectionItemLifecycleEnvironmentOutput {
	return o
}

func (o GetProfilesProfileCollectionItemLifecycleEnvironmentOutput) ToGetProfilesProfileCollectionItemLifecycleEnvironmentOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleEnvironmentOutput {
	return o
}

// A filter to return resources that match the given display names.
func (o GetProfilesProfileCollectionItemLifecycleEnvironmentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemLifecycleEnvironment) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfilesProfileCollectionItemLifecycleEnvironmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemLifecycleEnvironment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemLifecycleEnvironment)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput) ToGetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput() GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput) ToGetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput) Index(i pulumi.IntInput) GetProfilesProfileCollectionItemLifecycleEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfilesProfileCollectionItemLifecycleEnvironment {
		return vs[0].([]GetProfilesProfileCollectionItemLifecycleEnvironment)[vs[1].(int)]
	}).(GetProfilesProfileCollectionItemLifecycleEnvironmentOutput)
}

type GetProfilesProfileCollectionItemLifecycleStage struct {
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetProfilesProfileCollectionItemLifecycleStageInput is an input type that accepts GetProfilesProfileCollectionItemLifecycleStageArgs and GetProfilesProfileCollectionItemLifecycleStageOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemLifecycleStageInput` via:
//
//	GetProfilesProfileCollectionItemLifecycleStageArgs{...}
type GetProfilesProfileCollectionItemLifecycleStageInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemLifecycleStageOutput() GetProfilesProfileCollectionItemLifecycleStageOutput
	ToGetProfilesProfileCollectionItemLifecycleStageOutputWithContext(context.Context) GetProfilesProfileCollectionItemLifecycleStageOutput
}

type GetProfilesProfileCollectionItemLifecycleStageArgs struct {
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetProfilesProfileCollectionItemLifecycleStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleStage)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemLifecycleStageArgs) ToGetProfilesProfileCollectionItemLifecycleStageOutput() GetProfilesProfileCollectionItemLifecycleStageOutput {
	return i.ToGetProfilesProfileCollectionItemLifecycleStageOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemLifecycleStageArgs) ToGetProfilesProfileCollectionItemLifecycleStageOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemLifecycleStageOutput)
}

// GetProfilesProfileCollectionItemLifecycleStageArrayInput is an input type that accepts GetProfilesProfileCollectionItemLifecycleStageArray and GetProfilesProfileCollectionItemLifecycleStageArrayOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemLifecycleStageArrayInput` via:
//
//	GetProfilesProfileCollectionItemLifecycleStageArray{ GetProfilesProfileCollectionItemLifecycleStageArgs{...} }
type GetProfilesProfileCollectionItemLifecycleStageArrayInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemLifecycleStageArrayOutput() GetProfilesProfileCollectionItemLifecycleStageArrayOutput
	ToGetProfilesProfileCollectionItemLifecycleStageArrayOutputWithContext(context.Context) GetProfilesProfileCollectionItemLifecycleStageArrayOutput
}

type GetProfilesProfileCollectionItemLifecycleStageArray []GetProfilesProfileCollectionItemLifecycleStageInput

func (GetProfilesProfileCollectionItemLifecycleStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemLifecycleStage)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemLifecycleStageArray) ToGetProfilesProfileCollectionItemLifecycleStageArrayOutput() GetProfilesProfileCollectionItemLifecycleStageArrayOutput {
	return i.ToGetProfilesProfileCollectionItemLifecycleStageArrayOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemLifecycleStageArray) ToGetProfilesProfileCollectionItemLifecycleStageArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemLifecycleStageArrayOutput)
}

type GetProfilesProfileCollectionItemLifecycleStageOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemLifecycleStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleStage)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemLifecycleStageOutput) ToGetProfilesProfileCollectionItemLifecycleStageOutput() GetProfilesProfileCollectionItemLifecycleStageOutput {
	return o
}

func (o GetProfilesProfileCollectionItemLifecycleStageOutput) ToGetProfilesProfileCollectionItemLifecycleStageOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleStageOutput {
	return o
}

// A filter to return resources that match the given display names.
func (o GetProfilesProfileCollectionItemLifecycleStageOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemLifecycleStage) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfilesProfileCollectionItemLifecycleStageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemLifecycleStage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetProfilesProfileCollectionItemLifecycleStageArrayOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemLifecycleStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemLifecycleStage)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemLifecycleStageArrayOutput) ToGetProfilesProfileCollectionItemLifecycleStageArrayOutput() GetProfilesProfileCollectionItemLifecycleStageArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemLifecycleStageArrayOutput) ToGetProfilesProfileCollectionItemLifecycleStageArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemLifecycleStageArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemLifecycleStageArrayOutput) Index(i pulumi.IntInput) GetProfilesProfileCollectionItemLifecycleStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfilesProfileCollectionItemLifecycleStage {
		return vs[0].([]GetProfilesProfileCollectionItemLifecycleStage)[vs[1].(int)]
	}).(GetProfilesProfileCollectionItemLifecycleStageOutput)
}

type GetProfilesProfileCollectionItemManagedInstanceGroup struct {
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
}

// GetProfilesProfileCollectionItemManagedInstanceGroupInput is an input type that accepts GetProfilesProfileCollectionItemManagedInstanceGroupArgs and GetProfilesProfileCollectionItemManagedInstanceGroupOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemManagedInstanceGroupInput` via:
//
//	GetProfilesProfileCollectionItemManagedInstanceGroupArgs{...}
type GetProfilesProfileCollectionItemManagedInstanceGroupInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemManagedInstanceGroupOutput() GetProfilesProfileCollectionItemManagedInstanceGroupOutput
	ToGetProfilesProfileCollectionItemManagedInstanceGroupOutputWithContext(context.Context) GetProfilesProfileCollectionItemManagedInstanceGroupOutput
}

type GetProfilesProfileCollectionItemManagedInstanceGroupArgs struct {
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetProfilesProfileCollectionItemManagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemManagedInstanceGroup)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemManagedInstanceGroupArgs) ToGetProfilesProfileCollectionItemManagedInstanceGroupOutput() GetProfilesProfileCollectionItemManagedInstanceGroupOutput {
	return i.ToGetProfilesProfileCollectionItemManagedInstanceGroupOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemManagedInstanceGroupArgs) ToGetProfilesProfileCollectionItemManagedInstanceGroupOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemManagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemManagedInstanceGroupOutput)
}

// GetProfilesProfileCollectionItemManagedInstanceGroupArrayInput is an input type that accepts GetProfilesProfileCollectionItemManagedInstanceGroupArray and GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemManagedInstanceGroupArrayInput` via:
//
//	GetProfilesProfileCollectionItemManagedInstanceGroupArray{ GetProfilesProfileCollectionItemManagedInstanceGroupArgs{...} }
type GetProfilesProfileCollectionItemManagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput() GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput
	ToGetProfilesProfileCollectionItemManagedInstanceGroupArrayOutputWithContext(context.Context) GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput
}

type GetProfilesProfileCollectionItemManagedInstanceGroupArray []GetProfilesProfileCollectionItemManagedInstanceGroupInput

func (GetProfilesProfileCollectionItemManagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemManagedInstanceGroup)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemManagedInstanceGroupArray) ToGetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput() GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput {
	return i.ToGetProfilesProfileCollectionItemManagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemManagedInstanceGroupArray) ToGetProfilesProfileCollectionItemManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput)
}

type GetProfilesProfileCollectionItemManagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemManagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemManagedInstanceGroup)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemManagedInstanceGroupOutput) ToGetProfilesProfileCollectionItemManagedInstanceGroupOutput() GetProfilesProfileCollectionItemManagedInstanceGroupOutput {
	return o
}

func (o GetProfilesProfileCollectionItemManagedInstanceGroupOutput) ToGetProfilesProfileCollectionItemManagedInstanceGroupOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemManagedInstanceGroupOutput {
	return o
}

// A filter to return resources that match the given display names.
func (o GetProfilesProfileCollectionItemManagedInstanceGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemManagedInstanceGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfilesProfileCollectionItemManagedInstanceGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemManagedInstanceGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemManagedInstanceGroup)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput) ToGetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput() GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput) ToGetProfilesProfileCollectionItemManagedInstanceGroupArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) GetProfilesProfileCollectionItemManagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfilesProfileCollectionItemManagedInstanceGroup {
		return vs[0].([]GetProfilesProfileCollectionItemManagedInstanceGroup)[vs[1].(int)]
	}).(GetProfilesProfileCollectionItemManagedInstanceGroupOutput)
}

type GetProfilesProfileCollectionItemSoftwareSource struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetProfilesProfileCollectionItemSoftwareSourceInput is an input type that accepts GetProfilesProfileCollectionItemSoftwareSourceArgs and GetProfilesProfileCollectionItemSoftwareSourceOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemSoftwareSourceInput` via:
//
//	GetProfilesProfileCollectionItemSoftwareSourceArgs{...}
type GetProfilesProfileCollectionItemSoftwareSourceInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemSoftwareSourceOutput() GetProfilesProfileCollectionItemSoftwareSourceOutput
	ToGetProfilesProfileCollectionItemSoftwareSourceOutputWithContext(context.Context) GetProfilesProfileCollectionItemSoftwareSourceOutput
}

type GetProfilesProfileCollectionItemSoftwareSourceArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A filter to return resources that match the given display names.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetProfilesProfileCollectionItemSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemSoftwareSourceArgs) ToGetProfilesProfileCollectionItemSoftwareSourceOutput() GetProfilesProfileCollectionItemSoftwareSourceOutput {
	return i.ToGetProfilesProfileCollectionItemSoftwareSourceOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemSoftwareSourceArgs) ToGetProfilesProfileCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemSoftwareSourceOutput)
}

// GetProfilesProfileCollectionItemSoftwareSourceArrayInput is an input type that accepts GetProfilesProfileCollectionItemSoftwareSourceArray and GetProfilesProfileCollectionItemSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetProfilesProfileCollectionItemSoftwareSourceArrayInput` via:
//
//	GetProfilesProfileCollectionItemSoftwareSourceArray{ GetProfilesProfileCollectionItemSoftwareSourceArgs{...} }
type GetProfilesProfileCollectionItemSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetProfilesProfileCollectionItemSoftwareSourceArrayOutput() GetProfilesProfileCollectionItemSoftwareSourceArrayOutput
	ToGetProfilesProfileCollectionItemSoftwareSourceArrayOutputWithContext(context.Context) GetProfilesProfileCollectionItemSoftwareSourceArrayOutput
}

type GetProfilesProfileCollectionItemSoftwareSourceArray []GetProfilesProfileCollectionItemSoftwareSourceInput

func (GetProfilesProfileCollectionItemSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetProfilesProfileCollectionItemSoftwareSourceArray) ToGetProfilesProfileCollectionItemSoftwareSourceArrayOutput() GetProfilesProfileCollectionItemSoftwareSourceArrayOutput {
	return i.ToGetProfilesProfileCollectionItemSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetProfilesProfileCollectionItemSoftwareSourceArray) ToGetProfilesProfileCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfilesProfileCollectionItemSoftwareSourceArrayOutput)
}

type GetProfilesProfileCollectionItemSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfilesProfileCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemSoftwareSourceOutput) ToGetProfilesProfileCollectionItemSoftwareSourceOutput() GetProfilesProfileCollectionItemSoftwareSourceOutput {
	return o
}

func (o GetProfilesProfileCollectionItemSoftwareSourceOutput) ToGetProfilesProfileCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemSoftwareSourceOutput {
	return o
}

// Software source description.
func (o GetProfilesProfileCollectionItemSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemSoftwareSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A filter to return resources that match the given display names.
func (o GetProfilesProfileCollectionItemSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemSoftwareSource) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetProfilesProfileCollectionItemSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetProfilesProfileCollectionItemSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProfilesProfileCollectionItemSoftwareSource) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type GetProfilesProfileCollectionItemSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetProfilesProfileCollectionItemSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfilesProfileCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetProfilesProfileCollectionItemSoftwareSourceArrayOutput) ToGetProfilesProfileCollectionItemSoftwareSourceArrayOutput() GetProfilesProfileCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemSoftwareSourceArrayOutput) ToGetProfilesProfileCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetProfilesProfileCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetProfilesProfileCollectionItemSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetProfilesProfileCollectionItemSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfilesProfileCollectionItemSoftwareSource {
		return vs[0].([]GetProfilesProfileCollectionItemSoftwareSource)[vs[1].(int)]
	}).(GetProfilesProfileCollectionItemSoftwareSourceOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilter struct {
	// The list of module stream/profile filters.
	ModuleStreamProfileFilters []GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter `pulumi:"moduleStreamProfileFilters"`
	// The list of package filters.
	PackageFilters []GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter `pulumi:"packageFilters"`
	// The list of group filters.
	PackageGroupFilters []GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter `pulumi:"packageGroupFilters"`
}

// GetSoftwareSourceCustomSoftwareSourceFilterInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterArgs and GetSoftwareSourceCustomSoftwareSourceFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterArgs{...}
type GetSoftwareSourceCustomSoftwareSourceFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterArgs struct {
	// The list of module stream/profile filters.
	ModuleStreamProfileFilters GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput `pulumi:"moduleStreamProfileFilters"`
	// The list of package filters.
	PackageFilters GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput `pulumi:"packageFilters"`
	// The list of group filters.
	PackageGroupFilters GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput `pulumi:"packageGroupFilters"`
}

func (GetSoftwareSourceCustomSoftwareSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterOutput)
}

// GetSoftwareSourceCustomSoftwareSourceFilterArrayInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterArray and GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterArrayInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterArray{ GetSoftwareSourceCustomSoftwareSourceFilterArgs{...} }
type GetSoftwareSourceCustomSoftwareSourceFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterArrayOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterArray []GetSoftwareSourceCustomSoftwareSourceFilterInput

func (GetSoftwareSourceCustomSoftwareSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterOutput {
	return o
}

// The list of module stream/profile filters.
func (o GetSoftwareSourceCustomSoftwareSourceFilterOutput) ModuleStreamProfileFilters() GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilter) []GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter {
		return v.ModuleStreamProfileFilters
	}).(GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput)
}

// The list of package filters.
func (o GetSoftwareSourceCustomSoftwareSourceFilterOutput) PackageFilters() GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilter) []GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter {
		return v.PackageFilters
	}).(GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput)
}

// The list of group filters.
func (o GetSoftwareSourceCustomSoftwareSourceFilterOutput) PackageGroupFilters() GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilter) []GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter {
		return v.PackageGroupFilters
	}).(GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceCustomSoftwareSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceCustomSoftwareSourceFilter {
		return vs[0].([]GetSoftwareSourceCustomSoftwareSourceFilter)[vs[1].(int)]
	}).(GetSoftwareSourceCustomSoftwareSourceFilterOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType *string `pulumi:"filterType"`
	// Module name.
	ModuleName *string `pulumi:"moduleName"`
	// Profile name.
	ProfileName *string `pulumi:"profileName"`
	// Stream name.
	StreamName *string `pulumi:"streamName"`
}

// GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs and GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{...}
type GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Module name.
	ModuleName pulumi.StringPtrInput `pulumi:"moduleName"`
	// Profile name.
	ProfileName pulumi.StringPtrInput `pulumi:"profileName"`
	// Stream name.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput)
}

// GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray and GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray{ GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{...} }
type GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray []GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput

func (GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return o
}

// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Module name.
func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ModuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.ModuleName
	}).(pulumi.StringPtrOutput)
}

// Profile name.
func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.ProfileName
	}).(pulumi.StringPtrOutput)
}

// Stream name.
func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.StreamName
	}).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter {
		return vs[0].([]GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter)[vs[1].(int)]
	}).(GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType *string `pulumi:"filterType"`
	// The package name.
	PackageName *string `pulumi:"packageName"`
	// The package name pattern.
	PackageNamePattern *string `pulumi:"packageNamePattern"`
	// The package version, which is denoted by 'version-release', or 'epoch:version-release'.
	PackageVersion *string `pulumi:"packageVersion"`
}

// GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs and GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs{...}
type GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// The package name.
	PackageName pulumi.StringPtrInput `pulumi:"packageName"`
	// The package name pattern.
	PackageNamePattern pulumi.StringPtrInput `pulumi:"packageNamePattern"`
	// The package version, which is denoted by 'version-release', or 'epoch:version-release'.
	PackageVersion pulumi.StringPtrInput `pulumi:"packageVersion"`
}

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput)
}

// GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArray and GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArray{ GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs{...} }
type GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArray []GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterInput

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return o
}

// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// The package name.
func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter) *string { return v.PackageName }).(pulumi.StringPtrOutput)
}

// The package name pattern.
func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) PackageNamePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter) *string { return v.PackageNamePattern }).(pulumi.StringPtrOutput)
}

// The package version, which is denoted by 'version-release', or 'epoch:version-release'.
func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput) PackageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter) *string { return v.PackageVersion }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter {
		return vs[0].([]GetSoftwareSourceCustomSoftwareSourceFilterPackageFilter)[vs[1].(int)]
	}).(GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType *string `pulumi:"filterType"`
	// List of package group names.
	PackageGroups []string `pulumi:"packageGroups"`
}

// GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs and GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs{...}
type GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// List of package group names.
	PackageGroups pulumi.StringArrayInput `pulumi:"packageGroups"`
}

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput)
}

// GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput is an input type that accepts GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray and GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput` via:
//
//	GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray{ GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs{...} }
type GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput
	ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray []GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return i.ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return o
}

// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// List of package group names.
func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput) PackageGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter) []string { return v.PackageGroups }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ToGetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter {
		return vs[0].([]GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter)[vs[1].(int)]
	}).(GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput)
}

type GetSoftwareSourceModuleStreamProfilesFilter struct {
	// The name of the entity to be queried.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourceModuleStreamProfilesFilterInput is an input type that accepts GetSoftwareSourceModuleStreamProfilesFilterArgs and GetSoftwareSourceModuleStreamProfilesFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamProfilesFilterInput` via:
//
//	GetSoftwareSourceModuleStreamProfilesFilterArgs{...}
type GetSoftwareSourceModuleStreamProfilesFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamProfilesFilterOutput() GetSoftwareSourceModuleStreamProfilesFilterOutput
	ToGetSoftwareSourceModuleStreamProfilesFilterOutputWithContext(context.Context) GetSoftwareSourceModuleStreamProfilesFilterOutput
}

type GetSoftwareSourceModuleStreamProfilesFilterArgs struct {
	// The name of the entity to be queried.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourceModuleStreamProfilesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesFilter)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamProfilesFilterArgs) ToGetSoftwareSourceModuleStreamProfilesFilterOutput() GetSoftwareSourceModuleStreamProfilesFilterOutput {
	return i.ToGetSoftwareSourceModuleStreamProfilesFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamProfilesFilterArgs) ToGetSoftwareSourceModuleStreamProfilesFilterOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamProfilesFilterOutput)
}

// GetSoftwareSourceModuleStreamProfilesFilterArrayInput is an input type that accepts GetSoftwareSourceModuleStreamProfilesFilterArray and GetSoftwareSourceModuleStreamProfilesFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamProfilesFilterArrayInput` via:
//
//	GetSoftwareSourceModuleStreamProfilesFilterArray{ GetSoftwareSourceModuleStreamProfilesFilterArgs{...} }
type GetSoftwareSourceModuleStreamProfilesFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamProfilesFilterArrayOutput() GetSoftwareSourceModuleStreamProfilesFilterArrayOutput
	ToGetSoftwareSourceModuleStreamProfilesFilterArrayOutputWithContext(context.Context) GetSoftwareSourceModuleStreamProfilesFilterArrayOutput
}

type GetSoftwareSourceModuleStreamProfilesFilterArray []GetSoftwareSourceModuleStreamProfilesFilterInput

func (GetSoftwareSourceModuleStreamProfilesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamProfilesFilter)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamProfilesFilterArray) ToGetSoftwareSourceModuleStreamProfilesFilterArrayOutput() GetSoftwareSourceModuleStreamProfilesFilterArrayOutput {
	return i.ToGetSoftwareSourceModuleStreamProfilesFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamProfilesFilterArray) ToGetSoftwareSourceModuleStreamProfilesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamProfilesFilterArrayOutput)
}

type GetSoftwareSourceModuleStreamProfilesFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamProfilesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesFilter)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamProfilesFilterOutput) ToGetSoftwareSourceModuleStreamProfilesFilterOutput() GetSoftwareSourceModuleStreamProfilesFilterOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesFilterOutput) ToGetSoftwareSourceModuleStreamProfilesFilterOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesFilterOutput {
	return o
}

// The name of the entity to be queried.
func (o GetSoftwareSourceModuleStreamProfilesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourceModuleStreamProfilesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourceModuleStreamProfilesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourceModuleStreamProfilesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamProfilesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamProfilesFilter)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamProfilesFilterArrayOutput) ToGetSoftwareSourceModuleStreamProfilesFilterArrayOutput() GetSoftwareSourceModuleStreamProfilesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesFilterArrayOutput) ToGetSoftwareSourceModuleStreamProfilesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceModuleStreamProfilesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceModuleStreamProfilesFilter {
		return vs[0].([]GetSoftwareSourceModuleStreamProfilesFilter)[vs[1].(int)]
	}).(GetSoftwareSourceModuleStreamProfilesFilterOutput)
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection struct {
	Items []GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem `pulumi:"items"`
}

// GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionInput is an input type that accepts GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs and GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionInput` via:
//
//	GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs{...}
type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput
	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutputWithContext(context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs struct {
	Items GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayInput `pulumi:"items"`
}

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput {
	return i.ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput)
}

// GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayInput is an input type that accepts GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArray and GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayInput` via:
//
//	GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArray{ GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs{...} }
type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput
	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutputWithContext(context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArray []GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionInput

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArray) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput {
	return i.ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArray) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput)
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput) Items() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection) []GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem {
		return v.Items
	}).(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput)
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection {
		return vs[0].([]GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollection)[vs[1].(int)]
	}).(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput)
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem struct {
	// A description of the contents of the module stream profile.
	Description *string `pulumi:"description"`
	// Indicates if this profile is the default for its module stream.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of a module. This parameter is required if a streamName is specified.
	ModuleName *string `pulumi:"moduleName"`
	// The name of the entity to be queried.
	Name *string `pulumi:"name"`
	// A list of packages that constitute the profile.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
	Packages []string `pulumi:"packages"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName *string `pulumi:"streamName"`
}

// GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemInput is an input type that accepts GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs and GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemInput` via:
//
//	GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs{...}
type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput
	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutputWithContext(context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs struct {
	// A description of the contents of the module stream profile.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates if this profile is the default for its module stream.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The name of a module. This parameter is required if a streamName is specified.
	ModuleName pulumi.StringPtrInput `pulumi:"moduleName"`
	// The name of the entity to be queried.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of packages that constitute the profile.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
	Packages pulumi.StringArrayInput `pulumi:"packages"`
	// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput {
	return i.ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput)
}

// GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayInput is an input type that accepts GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArray and GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayInput` via:
//
//	GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArray{ GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs{...} }
type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput
	ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutputWithContext(context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArray []GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemInput

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArray) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput {
	return i.ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArray) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput)
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput {
	return o
}

// A description of the contents of the module stream profile.
func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates if this profile is the default for its module stream.
func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem) *bool {
		return v.IsDefault
	}).(pulumi.BoolPtrOutput)
}

// The name of a module. This parameter is required if a streamName is specified.
func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) ModuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem) *string {
		return v.ModuleName
	}).(pulumi.StringPtrOutput)
}

// The name of the entity to be queried.
func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of packages that constitute the profile.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) Packages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem) []string {
		return v.Packages
	}).(pulumi.StringArrayOutput)
}

// The name of the stream of the containing module.  This parameter is required if a profileName is specified.
func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem) *string {
		return v.StreamName
	}).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput() GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput) ToGetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem {
		return vs[0].([]GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItem)[vs[1].(int)]
	}).(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput)
}

type GetSoftwareSourceModuleStreamsFilter struct {
	// The name of the entity to be queried.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourceModuleStreamsFilterInput is an input type that accepts GetSoftwareSourceModuleStreamsFilterArgs and GetSoftwareSourceModuleStreamsFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamsFilterInput` via:
//
//	GetSoftwareSourceModuleStreamsFilterArgs{...}
type GetSoftwareSourceModuleStreamsFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamsFilterOutput() GetSoftwareSourceModuleStreamsFilterOutput
	ToGetSoftwareSourceModuleStreamsFilterOutputWithContext(context.Context) GetSoftwareSourceModuleStreamsFilterOutput
}

type GetSoftwareSourceModuleStreamsFilterArgs struct {
	// The name of the entity to be queried.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourceModuleStreamsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamsFilter)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamsFilterArgs) ToGetSoftwareSourceModuleStreamsFilterOutput() GetSoftwareSourceModuleStreamsFilterOutput {
	return i.ToGetSoftwareSourceModuleStreamsFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamsFilterArgs) ToGetSoftwareSourceModuleStreamsFilterOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamsFilterOutput)
}

// GetSoftwareSourceModuleStreamsFilterArrayInput is an input type that accepts GetSoftwareSourceModuleStreamsFilterArray and GetSoftwareSourceModuleStreamsFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamsFilterArrayInput` via:
//
//	GetSoftwareSourceModuleStreamsFilterArray{ GetSoftwareSourceModuleStreamsFilterArgs{...} }
type GetSoftwareSourceModuleStreamsFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamsFilterArrayOutput() GetSoftwareSourceModuleStreamsFilterArrayOutput
	ToGetSoftwareSourceModuleStreamsFilterArrayOutputWithContext(context.Context) GetSoftwareSourceModuleStreamsFilterArrayOutput
}

type GetSoftwareSourceModuleStreamsFilterArray []GetSoftwareSourceModuleStreamsFilterInput

func (GetSoftwareSourceModuleStreamsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamsFilter)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamsFilterArray) ToGetSoftwareSourceModuleStreamsFilterArrayOutput() GetSoftwareSourceModuleStreamsFilterArrayOutput {
	return i.ToGetSoftwareSourceModuleStreamsFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamsFilterArray) ToGetSoftwareSourceModuleStreamsFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamsFilterArrayOutput)
}

type GetSoftwareSourceModuleStreamsFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamsFilter)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamsFilterOutput) ToGetSoftwareSourceModuleStreamsFilterOutput() GetSoftwareSourceModuleStreamsFilterOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsFilterOutput) ToGetSoftwareSourceModuleStreamsFilterOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsFilterOutput {
	return o
}

// The name of the entity to be queried.
func (o GetSoftwareSourceModuleStreamsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourceModuleStreamsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourceModuleStreamsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourceModuleStreamsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamsFilter)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamsFilterArrayOutput) ToGetSoftwareSourceModuleStreamsFilterArrayOutput() GetSoftwareSourceModuleStreamsFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsFilterArrayOutput) ToGetSoftwareSourceModuleStreamsFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceModuleStreamsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceModuleStreamsFilter {
		return vs[0].([]GetSoftwareSourceModuleStreamsFilter)[vs[1].(int)]
	}).(GetSoftwareSourceModuleStreamsFilterOutput)
}

type GetSoftwareSourceModuleStreamsModuleStreamCollection struct {
	Items []GetSoftwareSourceModuleStreamsModuleStreamCollectionItem `pulumi:"items"`
}

// GetSoftwareSourceModuleStreamsModuleStreamCollectionInput is an input type that accepts GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs and GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamsModuleStreamCollectionInput` via:
//
//	GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs{...}
type GetSoftwareSourceModuleStreamsModuleStreamCollectionInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput
	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionOutputWithContext(context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs struct {
	Items GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayInput `pulumi:"items"`
}

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollection)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput {
	return i.ToGetSoftwareSourceModuleStreamsModuleStreamCollectionOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput)
}

// GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayInput is an input type that accepts GetSoftwareSourceModuleStreamsModuleStreamCollectionArray and GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayInput` via:
//
//	GetSoftwareSourceModuleStreamsModuleStreamCollectionArray{ GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs{...} }
type GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput
	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutputWithContext(context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionArray []GetSoftwareSourceModuleStreamsModuleStreamCollectionInput

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamsModuleStreamCollection)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionArray) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput {
	return i.ToGetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionArray) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput)
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollection)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput) Items() GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollection) []GetSoftwareSourceModuleStreamsModuleStreamCollectionItem {
		return v.Items
	}).(GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput)
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamsModuleStreamCollection)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceModuleStreamsModuleStreamCollection {
		return vs[0].([]GetSoftwareSourceModuleStreamsModuleStreamCollection)[vs[1].(int)]
	}).(GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput)
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionItem struct {
	// The architecture for which the packages in this module stream were built.
	ArchType *string `pulumi:"archType"`
	// A description of the contents of the module stream.
	Description *string `pulumi:"description"`
	// Indicates if this stream is the default for its module.
	IsDefault *bool `pulumi:"isDefault"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest *bool `pulumi:"isLatest"`
	// The name of a module. This parameter is required if a streamName is specified.
	ModuleName *string `pulumi:"moduleName"`
	// The name of the entity to be queried.
	Name *string `pulumi:"name"`
	// A list of packages that are contained by the stream.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
	Packages []string `pulumi:"packages"`
	// A list of profiles that are part of the stream.  Each element in the list is the name of a profile.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with module stream profiles.  However, it is not URL encoded.
	Profiles []string `pulumi:"profiles"`
	// The software source OCID.
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
}

// GetSoftwareSourceModuleStreamsModuleStreamCollectionItemInput is an input type that accepts GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs and GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamsModuleStreamCollectionItemInput` via:
//
//	GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs{...}
type GetSoftwareSourceModuleStreamsModuleStreamCollectionItemInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput
	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutputWithContext(context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs struct {
	// The architecture for which the packages in this module stream were built.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// A description of the contents of the module stream.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates if this stream is the default for its module.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest pulumi.BoolPtrInput `pulumi:"isLatest"`
	// The name of a module. This parameter is required if a streamName is specified.
	ModuleName pulumi.StringPtrInput `pulumi:"moduleName"`
	// The name of the entity to be queried.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of packages that are contained by the stream.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
	Packages pulumi.StringArrayInput `pulumi:"packages"`
	// A list of profiles that are part of the stream.  Each element in the list is the name of a profile.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with module stream profiles.  However, it is not URL encoded.
	Profiles pulumi.StringArrayInput `pulumi:"profiles"`
	// The software source OCID.
	SoftwareSourceId pulumi.StringPtrInput `pulumi:"softwareSourceId"`
}

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput {
	return i.ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput)
}

// GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayInput is an input type that accepts GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArray and GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayInput` via:
//
//	GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArray{ GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs{...} }
type GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput
	ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutputWithContext(context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArray []GetSoftwareSourceModuleStreamsModuleStreamCollectionItemInput

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamsModuleStreamCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArray) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput {
	return i.ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArray) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput)
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput {
	return o
}

// The architecture for which the packages in this module stream were built.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// A description of the contents of the module stream.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates if this stream is the default for its module.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) IsLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) *bool { return v.IsLatest }).(pulumi.BoolPtrOutput)
}

// The name of a module. This parameter is required if a streamName is specified.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) ModuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) *string { return v.ModuleName }).(pulumi.StringPtrOutput)
}

// The name of the entity to be queried.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of packages that are contained by the stream.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) Packages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) []string { return v.Packages }).(pulumi.StringArrayOutput)
}

// A list of profiles that are part of the stream.  Each element in the list is the name of a profile.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with module stream profiles.  However, it is not URL encoded.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

// The software source OCID.
func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput) SoftwareSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceModuleStreamsModuleStreamCollectionItem) *string { return v.SoftwareSourceId }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceModuleStreamsModuleStreamCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput() GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput) ToGetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceModuleStreamsModuleStreamCollectionItem {
		return vs[0].([]GetSoftwareSourceModuleStreamsModuleStreamCollectionItem)[vs[1].(int)]
	}).(GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput)
}

type GetSoftwareSourcePackageGroupsFilter struct {
	// The name of the entity to be queried.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourcePackageGroupsFilterInput is an input type that accepts GetSoftwareSourcePackageGroupsFilterArgs and GetSoftwareSourcePackageGroupsFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourcePackageGroupsFilterInput` via:
//
//	GetSoftwareSourcePackageGroupsFilterArgs{...}
type GetSoftwareSourcePackageGroupsFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourcePackageGroupsFilterOutput() GetSoftwareSourcePackageGroupsFilterOutput
	ToGetSoftwareSourcePackageGroupsFilterOutputWithContext(context.Context) GetSoftwareSourcePackageGroupsFilterOutput
}

type GetSoftwareSourcePackageGroupsFilterArgs struct {
	// The name of the entity to be queried.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourcePackageGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcePackageGroupsFilter)(nil)).Elem()
}

func (i GetSoftwareSourcePackageGroupsFilterArgs) ToGetSoftwareSourcePackageGroupsFilterOutput() GetSoftwareSourcePackageGroupsFilterOutput {
	return i.ToGetSoftwareSourcePackageGroupsFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourcePackageGroupsFilterArgs) ToGetSoftwareSourcePackageGroupsFilterOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcePackageGroupsFilterOutput)
}

// GetSoftwareSourcePackageGroupsFilterArrayInput is an input type that accepts GetSoftwareSourcePackageGroupsFilterArray and GetSoftwareSourcePackageGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcePackageGroupsFilterArrayInput` via:
//
//	GetSoftwareSourcePackageGroupsFilterArray{ GetSoftwareSourcePackageGroupsFilterArgs{...} }
type GetSoftwareSourcePackageGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcePackageGroupsFilterArrayOutput() GetSoftwareSourcePackageGroupsFilterArrayOutput
	ToGetSoftwareSourcePackageGroupsFilterArrayOutputWithContext(context.Context) GetSoftwareSourcePackageGroupsFilterArrayOutput
}

type GetSoftwareSourcePackageGroupsFilterArray []GetSoftwareSourcePackageGroupsFilterInput

func (GetSoftwareSourcePackageGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcePackageGroupsFilter)(nil)).Elem()
}

func (i GetSoftwareSourcePackageGroupsFilterArray) ToGetSoftwareSourcePackageGroupsFilterArrayOutput() GetSoftwareSourcePackageGroupsFilterArrayOutput {
	return i.ToGetSoftwareSourcePackageGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcePackageGroupsFilterArray) ToGetSoftwareSourcePackageGroupsFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcePackageGroupsFilterArrayOutput)
}

type GetSoftwareSourcePackageGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcePackageGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcePackageGroupsFilter)(nil)).Elem()
}

func (o GetSoftwareSourcePackageGroupsFilterOutput) ToGetSoftwareSourcePackageGroupsFilterOutput() GetSoftwareSourcePackageGroupsFilterOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsFilterOutput) ToGetSoftwareSourcePackageGroupsFilterOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsFilterOutput {
	return o
}

// The name of the entity to be queried.
func (o GetSoftwareSourcePackageGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourcePackageGroupsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourcePackageGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourcePackageGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcePackageGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcePackageGroupsFilter)(nil)).Elem()
}

func (o GetSoftwareSourcePackageGroupsFilterArrayOutput) ToGetSoftwareSourcePackageGroupsFilterArrayOutput() GetSoftwareSourcePackageGroupsFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsFilterArrayOutput) ToGetSoftwareSourcePackageGroupsFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcePackageGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcePackageGroupsFilter {
		return vs[0].([]GetSoftwareSourcePackageGroupsFilter)[vs[1].(int)]
	}).(GetSoftwareSourcePackageGroupsFilterOutput)
}

type GetSoftwareSourcePackageGroupsPackageGroupCollection struct {
	Items []GetSoftwareSourcePackageGroupsPackageGroupCollectionItem `pulumi:"items"`
}

// GetSoftwareSourcePackageGroupsPackageGroupCollectionInput is an input type that accepts GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs and GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput values.
// You can construct a concrete instance of `GetSoftwareSourcePackageGroupsPackageGroupCollectionInput` via:
//
//	GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs{...}
type GetSoftwareSourcePackageGroupsPackageGroupCollectionInput interface {
	pulumi.Input

	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput
	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionOutputWithContext(context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs struct {
	Items GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayInput `pulumi:"items"`
}

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollection)(nil)).Elem()
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput {
	return i.ToGetSoftwareSourcePackageGroupsPackageGroupCollectionOutputWithContext(context.Background())
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput)
}

// GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayInput is an input type that accepts GetSoftwareSourcePackageGroupsPackageGroupCollectionArray and GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayInput` via:
//
//	GetSoftwareSourcePackageGroupsPackageGroupCollectionArray{ GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs{...} }
type GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput
	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutputWithContext(context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionArray []GetSoftwareSourcePackageGroupsPackageGroupCollectionInput

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcePackageGroupsPackageGroupCollection)(nil)).Elem()
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionArray) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput {
	return i.ToGetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionArray) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput)
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollection)(nil)).Elem()
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput) Items() GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollection) []GetSoftwareSourcePackageGroupsPackageGroupCollectionItem {
		return v.Items
	}).(GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput)
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcePackageGroupsPackageGroupCollection)(nil)).Elem()
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcePackageGroupsPackageGroupCollection {
		return vs[0].([]GetSoftwareSourcePackageGroupsPackageGroupCollection)[vs[1].(int)]
	}).(GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput)
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionItem struct {
	// description of the package group.
	Description *string `pulumi:"description"`
	// Indicates the order to display category or environment.
	DisplayOrder *int `pulumi:"displayOrder"`
	// A filter to return only package groups of the specified type.
	GroupType *string `pulumi:"groupType"`
	// Package group identifier.
	Id *string `pulumi:"id"`
	// Indicates if this package group is the default.
	IsDefault *bool `pulumi:"isDefault"`
	// Indicates if this package group is visible by users.
	IsUserVisible *bool `pulumi:"isUserVisible"`
	// The name of the entity to be queried.
	Name *string `pulumi:"name"`
	// The list of packages in the package group.
	Packages []string `pulumi:"packages"`
	// the IDs of the package group's repositories.
	Repositories []string `pulumi:"repositories"`
}

// GetSoftwareSourcePackageGroupsPackageGroupCollectionItemInput is an input type that accepts GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs and GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput values.
// You can construct a concrete instance of `GetSoftwareSourcePackageGroupsPackageGroupCollectionItemInput` via:
//
//	GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs{...}
type GetSoftwareSourcePackageGroupsPackageGroupCollectionItemInput interface {
	pulumi.Input

	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput
	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutputWithContext(context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs struct {
	// description of the package group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates the order to display category or environment.
	DisplayOrder pulumi.IntPtrInput `pulumi:"displayOrder"`
	// A filter to return only package groups of the specified type.
	GroupType pulumi.StringPtrInput `pulumi:"groupType"`
	// Package group identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Indicates if this package group is the default.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// Indicates if this package group is visible by users.
	IsUserVisible pulumi.BoolPtrInput `pulumi:"isUserVisible"`
	// The name of the entity to be queried.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The list of packages in the package group.
	Packages pulumi.StringArrayInput `pulumi:"packages"`
	// the IDs of the package group's repositories.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
}

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput {
	return i.ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutputWithContext(context.Background())
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput)
}

// GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayInput is an input type that accepts GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArray and GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayInput` via:
//
//	GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArray{ GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs{...} }
type GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput
	ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutputWithContext(context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArray []GetSoftwareSourcePackageGroupsPackageGroupCollectionItemInput

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcePackageGroupsPackageGroupCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArray) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput {
	return i.ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArray) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput)
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput {
	return o
}

// description of the package group.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates the order to display category or environment.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) DisplayOrder() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) *int { return v.DisplayOrder }).(pulumi.IntPtrOutput)
}

// A filter to return only package groups of the specified type.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) GroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) *string { return v.GroupType }).(pulumi.StringPtrOutput)
}

// Package group identifier.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Indicates if this package group is the default.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Indicates if this package group is visible by users.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) IsUserVisible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) *bool { return v.IsUserVisible }).(pulumi.BoolPtrOutput)
}

// The name of the entity to be queried.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of packages in the package group.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) Packages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) []string { return v.Packages }).(pulumi.StringArrayOutput)
}

// the IDs of the package group's repositories.
func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcePackageGroupsPackageGroupCollectionItem) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcePackageGroupsPackageGroupCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput() GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput) ToGetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcePackageGroupsPackageGroupCollectionItem {
		return vs[0].([]GetSoftwareSourcePackageGroupsPackageGroupCollectionItem)[vs[1].(int)]
	}).(GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput)
}

type GetSoftwareSourceSoftwarePackageDependency struct {
	// The software package's dependency.
	Dependency *string `pulumi:"dependency"`
	// The modifier for the dependency.
	DependencyModifier *string `pulumi:"dependencyModifier"`
	// The type of the dependency.
	DependencyType *string `pulumi:"dependencyType"`
}

// GetSoftwareSourceSoftwarePackageDependencyInput is an input type that accepts GetSoftwareSourceSoftwarePackageDependencyArgs and GetSoftwareSourceSoftwarePackageDependencyOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackageDependencyInput` via:
//
//	GetSoftwareSourceSoftwarePackageDependencyArgs{...}
type GetSoftwareSourceSoftwarePackageDependencyInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackageDependencyOutput() GetSoftwareSourceSoftwarePackageDependencyOutput
	ToGetSoftwareSourceSoftwarePackageDependencyOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackageDependencyOutput
}

type GetSoftwareSourceSoftwarePackageDependencyArgs struct {
	// The software package's dependency.
	Dependency pulumi.StringPtrInput `pulumi:"dependency"`
	// The modifier for the dependency.
	DependencyModifier pulumi.StringPtrInput `pulumi:"dependencyModifier"`
	// The type of the dependency.
	DependencyType pulumi.StringPtrInput `pulumi:"dependencyType"`
}

func (GetSoftwareSourceSoftwarePackageDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackageDependency)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackageDependencyArgs) ToGetSoftwareSourceSoftwarePackageDependencyOutput() GetSoftwareSourceSoftwarePackageDependencyOutput {
	return i.ToGetSoftwareSourceSoftwarePackageDependencyOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackageDependencyArgs) ToGetSoftwareSourceSoftwarePackageDependencyOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackageDependencyOutput)
}

// GetSoftwareSourceSoftwarePackageDependencyArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackageDependencyArray and GetSoftwareSourceSoftwarePackageDependencyArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackageDependencyArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackageDependencyArray{ GetSoftwareSourceSoftwarePackageDependencyArgs{...} }
type GetSoftwareSourceSoftwarePackageDependencyArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackageDependencyArrayOutput() GetSoftwareSourceSoftwarePackageDependencyArrayOutput
	ToGetSoftwareSourceSoftwarePackageDependencyArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackageDependencyArrayOutput
}

type GetSoftwareSourceSoftwarePackageDependencyArray []GetSoftwareSourceSoftwarePackageDependencyInput

func (GetSoftwareSourceSoftwarePackageDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackageDependency)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackageDependencyArray) ToGetSoftwareSourceSoftwarePackageDependencyArrayOutput() GetSoftwareSourceSoftwarePackageDependencyArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackageDependencyArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackageDependencyArray) ToGetSoftwareSourceSoftwarePackageDependencyArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackageDependencyArrayOutput)
}

type GetSoftwareSourceSoftwarePackageDependencyOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackageDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackageDependency)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackageDependencyOutput) ToGetSoftwareSourceSoftwarePackageDependencyOutput() GetSoftwareSourceSoftwarePackageDependencyOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageDependencyOutput) ToGetSoftwareSourceSoftwarePackageDependencyOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageDependencyOutput {
	return o
}

// The software package's dependency.
func (o GetSoftwareSourceSoftwarePackageDependencyOutput) Dependency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageDependency) *string { return v.Dependency }).(pulumi.StringPtrOutput)
}

// The modifier for the dependency.
func (o GetSoftwareSourceSoftwarePackageDependencyOutput) DependencyModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageDependency) *string { return v.DependencyModifier }).(pulumi.StringPtrOutput)
}

// The type of the dependency.
func (o GetSoftwareSourceSoftwarePackageDependencyOutput) DependencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageDependency) *string { return v.DependencyType }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceSoftwarePackageDependencyArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackageDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackageDependency)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackageDependencyArrayOutput) ToGetSoftwareSourceSoftwarePackageDependencyArrayOutput() GetSoftwareSourceSoftwarePackageDependencyArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageDependencyArrayOutput) ToGetSoftwareSourceSoftwarePackageDependencyArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageDependencyArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageDependencyArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackageDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackageDependency {
		return vs[0].([]GetSoftwareSourceSoftwarePackageDependency)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackageDependencyOutput)
}

type GetSoftwareSourceSoftwarePackageFile struct {
	// Checksum of the file.
	Checksum *string `pulumi:"checksum"`
	// Type of the checksum.
	ChecksumType *string `pulumi:"checksumType"`
	// File path.
	Path *string `pulumi:"path"`
	// Size of the package in bytes.
	SizeInBytes *string `pulumi:"sizeInBytes"`
	// The date and time of the last modification to this file, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified *string `pulumi:"timeModified"`
	// Type of the package.
	Type *string `pulumi:"type"`
}

// GetSoftwareSourceSoftwarePackageFileInput is an input type that accepts GetSoftwareSourceSoftwarePackageFileArgs and GetSoftwareSourceSoftwarePackageFileOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackageFileInput` via:
//
//	GetSoftwareSourceSoftwarePackageFileArgs{...}
type GetSoftwareSourceSoftwarePackageFileInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackageFileOutput() GetSoftwareSourceSoftwarePackageFileOutput
	ToGetSoftwareSourceSoftwarePackageFileOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackageFileOutput
}

type GetSoftwareSourceSoftwarePackageFileArgs struct {
	// Checksum of the file.
	Checksum pulumi.StringPtrInput `pulumi:"checksum"`
	// Type of the checksum.
	ChecksumType pulumi.StringPtrInput `pulumi:"checksumType"`
	// File path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Size of the package in bytes.
	SizeInBytes pulumi.StringPtrInput `pulumi:"sizeInBytes"`
	// The date and time of the last modification to this file, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// Type of the package.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSoftwareSourceSoftwarePackageFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackageFile)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackageFileArgs) ToGetSoftwareSourceSoftwarePackageFileOutput() GetSoftwareSourceSoftwarePackageFileOutput {
	return i.ToGetSoftwareSourceSoftwarePackageFileOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackageFileArgs) ToGetSoftwareSourceSoftwarePackageFileOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackageFileOutput)
}

// GetSoftwareSourceSoftwarePackageFileArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackageFileArray and GetSoftwareSourceSoftwarePackageFileArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackageFileArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackageFileArray{ GetSoftwareSourceSoftwarePackageFileArgs{...} }
type GetSoftwareSourceSoftwarePackageFileArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackageFileArrayOutput() GetSoftwareSourceSoftwarePackageFileArrayOutput
	ToGetSoftwareSourceSoftwarePackageFileArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackageFileArrayOutput
}

type GetSoftwareSourceSoftwarePackageFileArray []GetSoftwareSourceSoftwarePackageFileInput

func (GetSoftwareSourceSoftwarePackageFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackageFile)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackageFileArray) ToGetSoftwareSourceSoftwarePackageFileArrayOutput() GetSoftwareSourceSoftwarePackageFileArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackageFileArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackageFileArray) ToGetSoftwareSourceSoftwarePackageFileArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackageFileArrayOutput)
}

type GetSoftwareSourceSoftwarePackageFileOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackageFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackageFile)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackageFileOutput) ToGetSoftwareSourceSoftwarePackageFileOutput() GetSoftwareSourceSoftwarePackageFileOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageFileOutput) ToGetSoftwareSourceSoftwarePackageFileOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageFileOutput {
	return o
}

// Checksum of the file.
func (o GetSoftwareSourceSoftwarePackageFileOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageFile) *string { return v.Checksum }).(pulumi.StringPtrOutput)
}

// Type of the checksum.
func (o GetSoftwareSourceSoftwarePackageFileOutput) ChecksumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageFile) *string { return v.ChecksumType }).(pulumi.StringPtrOutput)
}

// File path.
func (o GetSoftwareSourceSoftwarePackageFileOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageFile) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Size of the package in bytes.
func (o GetSoftwareSourceSoftwarePackageFileOutput) SizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageFile) *string { return v.SizeInBytes }).(pulumi.StringPtrOutput)
}

// The date and time of the last modification to this file, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetSoftwareSourceSoftwarePackageFileOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageFile) *string { return v.TimeModified }).(pulumi.StringPtrOutput)
}

// Type of the package.
func (o GetSoftwareSourceSoftwarePackageFileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageFile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceSoftwarePackageFileArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackageFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackageFile)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackageFileArrayOutput) ToGetSoftwareSourceSoftwarePackageFileArrayOutput() GetSoftwareSourceSoftwarePackageFileArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageFileArrayOutput) ToGetSoftwareSourceSoftwarePackageFileArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageFileArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageFileArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackageFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackageFile {
		return vs[0].([]GetSoftwareSourceSoftwarePackageFile)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackageFileOutput)
}

type GetSoftwareSourceSoftwarePackageSoftwareSource struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// Software source name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetSoftwareSourceSoftwarePackageSoftwareSourceInput is an input type that accepts GetSoftwareSourceSoftwarePackageSoftwareSourceArgs and GetSoftwareSourceSoftwarePackageSoftwareSourceOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackageSoftwareSourceInput` via:
//
//	GetSoftwareSourceSoftwarePackageSoftwareSourceArgs{...}
type GetSoftwareSourceSoftwarePackageSoftwareSourceInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackageSoftwareSourceOutput() GetSoftwareSourceSoftwarePackageSoftwareSourceOutput
	ToGetSoftwareSourceSoftwarePackageSoftwareSourceOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackageSoftwareSourceOutput
}

type GetSoftwareSourceSoftwarePackageSoftwareSourceArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Software source name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetSoftwareSourceSoftwarePackageSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackageSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackageSoftwareSourceArgs) ToGetSoftwareSourceSoftwarePackageSoftwareSourceOutput() GetSoftwareSourceSoftwarePackageSoftwareSourceOutput {
	return i.ToGetSoftwareSourceSoftwarePackageSoftwareSourceOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackageSoftwareSourceArgs) ToGetSoftwareSourceSoftwarePackageSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackageSoftwareSourceOutput)
}

// GetSoftwareSourceSoftwarePackageSoftwareSourceArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackageSoftwareSourceArray and GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackageSoftwareSourceArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackageSoftwareSourceArray{ GetSoftwareSourceSoftwarePackageSoftwareSourceArgs{...} }
type GetSoftwareSourceSoftwarePackageSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput() GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput
	ToGetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput
}

type GetSoftwareSourceSoftwarePackageSoftwareSourceArray []GetSoftwareSourceSoftwarePackageSoftwareSourceInput

func (GetSoftwareSourceSoftwarePackageSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackageSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackageSoftwareSourceArray) ToGetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput() GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackageSoftwareSourceArray) ToGetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput)
}

type GetSoftwareSourceSoftwarePackageSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackageSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackageSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackageSoftwareSourceOutput) ToGetSoftwareSourceSoftwarePackageSoftwareSourceOutput() GetSoftwareSourceSoftwarePackageSoftwareSourceOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageSoftwareSourceOutput) ToGetSoftwareSourceSoftwarePackageSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageSoftwareSourceOutput {
	return o
}

// Software source description.
func (o GetSoftwareSourceSoftwarePackageSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageSoftwareSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Software source name.
func (o GetSoftwareSourceSoftwarePackageSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageSoftwareSource) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetSoftwareSourceSoftwarePackageSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetSoftwareSourceSoftwarePackageSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackageSoftwareSource) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackageSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput) ToGetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput() GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput) ToGetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackageSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackageSoftwareSource {
		return vs[0].([]GetSoftwareSourceSoftwarePackageSoftwareSource)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackageSoftwareSourceOutput)
}

type GetSoftwareSourceSoftwarePackagesFilter struct {
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourceSoftwarePackagesFilterInput is an input type that accepts GetSoftwareSourceSoftwarePackagesFilterArgs and GetSoftwareSourceSoftwarePackagesFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesFilterInput` via:
//
//	GetSoftwareSourceSoftwarePackagesFilterArgs{...}
type GetSoftwareSourceSoftwarePackagesFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesFilterOutput() GetSoftwareSourceSoftwarePackagesFilterOutput
	ToGetSoftwareSourceSoftwarePackagesFilterOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesFilterOutput
}

type GetSoftwareSourceSoftwarePackagesFilterArgs struct {
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourceSoftwarePackagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesFilter)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesFilterArgs) ToGetSoftwareSourceSoftwarePackagesFilterOutput() GetSoftwareSourceSoftwarePackagesFilterOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesFilterArgs) ToGetSoftwareSourceSoftwarePackagesFilterOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesFilterOutput)
}

// GetSoftwareSourceSoftwarePackagesFilterArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackagesFilterArray and GetSoftwareSourceSoftwarePackagesFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesFilterArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackagesFilterArray{ GetSoftwareSourceSoftwarePackagesFilterArgs{...} }
type GetSoftwareSourceSoftwarePackagesFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesFilterArrayOutput() GetSoftwareSourceSoftwarePackagesFilterArrayOutput
	ToGetSoftwareSourceSoftwarePackagesFilterArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesFilterArrayOutput
}

type GetSoftwareSourceSoftwarePackagesFilterArray []GetSoftwareSourceSoftwarePackagesFilterInput

func (GetSoftwareSourceSoftwarePackagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesFilter)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesFilterArray) ToGetSoftwareSourceSoftwarePackagesFilterArrayOutput() GetSoftwareSourceSoftwarePackagesFilterArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesFilterArray) ToGetSoftwareSourceSoftwarePackagesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesFilterArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesFilter)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesFilterOutput) ToGetSoftwareSourceSoftwarePackagesFilterOutput() GetSoftwareSourceSoftwarePackagesFilterOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesFilterOutput) ToGetSoftwareSourceSoftwarePackagesFilterOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesFilterOutput {
	return o
}

// Unique identifier for the package. NOTE - This is not an OCID.
func (o GetSoftwareSourceSoftwarePackagesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourceSoftwarePackagesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourceSoftwarePackagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesFilter)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesFilterArrayOutput) ToGetSoftwareSourceSoftwarePackagesFilterArrayOutput() GetSoftwareSourceSoftwarePackagesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesFilterArrayOutput) ToGetSoftwareSourceSoftwarePackagesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackagesFilter {
		return vs[0].([]GetSoftwareSourceSoftwarePackagesFilter)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackagesFilterOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection struct {
	Items []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem `pulumi:"items"`
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs{...}
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs struct {
	Items GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayInput `pulumi:"items"`
}

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput)
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArray and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArray{ GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs{...} }
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArray []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionInput

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput) Items() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection) []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem {
		return v.Items
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection {
		return vs[0].([]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem struct {
	// The architecture for which this software was built
	Architecture *string `pulumi:"architecture"`
	// Checksum of the file.
	Checksum *string `pulumi:"checksum"`
	// Type of the checksum.
	ChecksumType *string `pulumi:"checksumType"`
	// List of dependencies for the software package.
	Dependencies []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency `pulumi:"dependencies"`
	// Software source description.
	Description *string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// List of files for the software package.
	Files []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile `pulumi:"files"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest *bool `pulumi:"isLatest"`
	// Date of the last update to the package.
	LastModifiedDate *string `pulumi:"lastModifiedDate"`
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name *string `pulumi:"name"`
	// Size of the package in bytes.
	SizeInBytes *string `pulumi:"sizeInBytes"`
	// List of software sources that provide the software package.
	SoftwareSources []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource `pulumi:"softwareSources"`
	// Type of the package.
	Type *string `pulumi:"type"`
	// Version of the package.
	Version *string `pulumi:"version"`
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs{...}
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs struct {
	// The architecture for which this software was built
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// Checksum of the file.
	Checksum pulumi.StringPtrInput `pulumi:"checksum"`
	// Type of the checksum.
	ChecksumType pulumi.StringPtrInput `pulumi:"checksumType"`
	// List of dependencies for the software package.
	Dependencies GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayInput `pulumi:"dependencies"`
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// List of files for the software package.
	Files GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayInput `pulumi:"files"`
	// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
	IsLatest pulumi.BoolPtrInput `pulumi:"isLatest"`
	// Date of the last update to the package.
	LastModifiedDate pulumi.StringPtrInput `pulumi:"lastModifiedDate"`
	// Unique identifier for the package. NOTE - This is not an OCID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size of the package in bytes.
	SizeInBytes pulumi.StringPtrInput `pulumi:"sizeInBytes"`
	// List of software sources that provide the software package.
	SoftwareSources GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayInput `pulumi:"softwareSources"`
	// Type of the package.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Version of the package.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput)
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArray and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArray{ GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs{...} }
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArray []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemInput

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput {
	return o
}

// The architecture for which this software was built
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// Checksum of the file.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.Checksum }).(pulumi.StringPtrOutput)
}

// Type of the checksum.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) ChecksumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.ChecksumType }).(pulumi.StringPtrOutput)
}

// List of dependencies for the software package.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Dependencies() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency {
		return v.Dependencies
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput)
}

// Software source description.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// List of files for the software package.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Files() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile {
		return v.Files
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput)
}

// A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) IsLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *bool { return v.IsLatest }).(pulumi.BoolPtrOutput)
}

// Date of the last update to the package.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) LastModifiedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string {
		return v.LastModifiedDate
	}).(pulumi.StringPtrOutput)
}

// Unique identifier for the package. NOTE - This is not an OCID.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size of the package in bytes.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) SizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.SizeInBytes }).(pulumi.StringPtrOutput)
}

// List of software sources that provide the software package.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) SoftwareSources() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource {
		return v.SoftwareSources
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput)
}

// Type of the package.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Version of the package.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem {
		return vs[0].([]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency struct {
	// The software package's dependency.
	Dependency *string `pulumi:"dependency"`
	// The modifier for the dependency.
	DependencyModifier *string `pulumi:"dependencyModifier"`
	// The type of the dependency.
	DependencyType *string `pulumi:"dependencyType"`
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs{...}
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs struct {
	// The software package's dependency.
	Dependency pulumi.StringPtrInput `pulumi:"dependency"`
	// The modifier for the dependency.
	DependencyModifier pulumi.StringPtrInput `pulumi:"dependencyModifier"`
	// The type of the dependency.
	DependencyType pulumi.StringPtrInput `pulumi:"dependencyType"`
}

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput)
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArray and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArray{ GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs{...} }
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArray []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyInput

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput {
	return o
}

// The software package's dependency.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput) Dependency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency) *string {
		return v.Dependency
	}).(pulumi.StringPtrOutput)
}

// The modifier for the dependency.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput) DependencyModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency) *string {
		return v.DependencyModifier
	}).(pulumi.StringPtrOutput)
}

// The type of the dependency.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput) DependencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency) *string {
		return v.DependencyType
	}).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency {
		return vs[0].([]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile struct {
	// Checksum of the file.
	Checksum *string `pulumi:"checksum"`
	// Type of the checksum.
	ChecksumType *string `pulumi:"checksumType"`
	// File path.
	Path *string `pulumi:"path"`
	// Size of the package in bytes.
	SizeInBytes *string `pulumi:"sizeInBytes"`
	// The date and time of the last modification to this file, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified *string `pulumi:"timeModified"`
	// Type of the package.
	Type *string `pulumi:"type"`
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs{...}
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs struct {
	// Checksum of the file.
	Checksum pulumi.StringPtrInput `pulumi:"checksum"`
	// Type of the checksum.
	ChecksumType pulumi.StringPtrInput `pulumi:"checksumType"`
	// File path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Size of the package in bytes.
	SizeInBytes pulumi.StringPtrInput `pulumi:"sizeInBytes"`
	// The date and time of the last modification to this file, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeModified pulumi.StringPtrInput `pulumi:"timeModified"`
	// Type of the package.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput)
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArray and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArray{ GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs{...} }
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArray []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileInput

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput {
	return o
}

// Checksum of the file.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile) *string { return v.Checksum }).(pulumi.StringPtrOutput)
}

// Type of the checksum.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) ChecksumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile) *string {
		return v.ChecksumType
	}).(pulumi.StringPtrOutput)
}

// File path.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Size of the package in bytes.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) SizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile) *string {
		return v.SizeInBytes
	}).(pulumi.StringPtrOutput)
}

// The date and time of the last modification to this file, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) TimeModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile) *string {
		return v.TimeModified
	}).(pulumi.StringPtrOutput)
}

// Type of the package.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile {
		return vs[0].([]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource struct {
	// Software source description.
	Description *string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the software source.
	Id *string `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs{...}
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs struct {
	// Software source description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the software source.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
}

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput)
}

// GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayInput is an input type that accepts GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArray and GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayInput` via:
//
//	GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArray{ GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs{...} }
type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput
	ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutputWithContext(context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArray []GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceInput

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput {
	return i.ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArray) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput {
	return o
}

// Software source description.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the software source.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Type of the software source.
func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource) *string {
		return v.SoftwareSourceType
	}).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput() GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput) ToGetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource {
		return vs[0].([]GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource)[vs[1].(int)]
	}).(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput)
}

type GetSoftwareSourceVendorSoftwareSource struct {
	// User friendly name.
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the resource that is immutable on creation.
	Id *string `pulumi:"id"`
}

// GetSoftwareSourceVendorSoftwareSourceInput is an input type that accepts GetSoftwareSourceVendorSoftwareSourceArgs and GetSoftwareSourceVendorSoftwareSourceOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorSoftwareSourceInput` via:
//
//	GetSoftwareSourceVendorSoftwareSourceArgs{...}
type GetSoftwareSourceVendorSoftwareSourceInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorSoftwareSourceOutput() GetSoftwareSourceVendorSoftwareSourceOutput
	ToGetSoftwareSourceVendorSoftwareSourceOutputWithContext(context.Context) GetSoftwareSourceVendorSoftwareSourceOutput
}

type GetSoftwareSourceVendorSoftwareSourceArgs struct {
	// User friendly name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the resource that is immutable on creation.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetSoftwareSourceVendorSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourceVendorSoftwareSourceArgs) ToGetSoftwareSourceVendorSoftwareSourceOutput() GetSoftwareSourceVendorSoftwareSourceOutput {
	return i.ToGetSoftwareSourceVendorSoftwareSourceOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorSoftwareSourceArgs) ToGetSoftwareSourceVendorSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourceVendorSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorSoftwareSourceOutput)
}

// GetSoftwareSourceVendorSoftwareSourceArrayInput is an input type that accepts GetSoftwareSourceVendorSoftwareSourceArray and GetSoftwareSourceVendorSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorSoftwareSourceArrayInput` via:
//
//	GetSoftwareSourceVendorSoftwareSourceArray{ GetSoftwareSourceVendorSoftwareSourceArgs{...} }
type GetSoftwareSourceVendorSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorSoftwareSourceArrayOutput() GetSoftwareSourceVendorSoftwareSourceArrayOutput
	ToGetSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(context.Context) GetSoftwareSourceVendorSoftwareSourceArrayOutput
}

type GetSoftwareSourceVendorSoftwareSourceArray []GetSoftwareSourceVendorSoftwareSourceInput

func (GetSoftwareSourceVendorSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourceVendorSoftwareSourceArray) ToGetSoftwareSourceVendorSoftwareSourceArrayOutput() GetSoftwareSourceVendorSoftwareSourceArrayOutput {
	return i.ToGetSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorSoftwareSourceArray) ToGetSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorSoftwareSourceArrayOutput)
}

type GetSoftwareSourceVendorSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourceVendorSoftwareSourceOutput) ToGetSoftwareSourceVendorSoftwareSourceOutput() GetSoftwareSourceVendorSoftwareSourceOutput {
	return o
}

func (o GetSoftwareSourceVendorSoftwareSourceOutput) ToGetSoftwareSourceVendorSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourceVendorSoftwareSourceOutput {
	return o
}

// User friendly name.
func (o GetSoftwareSourceVendorSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorSoftwareSource) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the resource that is immutable on creation.
func (o GetSoftwareSourceVendorSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourceVendorSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourceVendorSoftwareSourceArrayOutput) ToGetSoftwareSourceVendorSoftwareSourceArrayOutput() GetSoftwareSourceVendorSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorSoftwareSourceArrayOutput) ToGetSoftwareSourceVendorSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceVendorSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceVendorSoftwareSource {
		return vs[0].([]GetSoftwareSourceVendorSoftwareSource)[vs[1].(int)]
	}).(GetSoftwareSourceVendorSoftwareSourceOutput)
}

type GetSoftwareSourceVendorsFilter struct {
	// The name of the entity to be queried.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourceVendorsFilterInput is an input type that accepts GetSoftwareSourceVendorsFilterArgs and GetSoftwareSourceVendorsFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorsFilterInput` via:
//
//	GetSoftwareSourceVendorsFilterArgs{...}
type GetSoftwareSourceVendorsFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorsFilterOutput() GetSoftwareSourceVendorsFilterOutput
	ToGetSoftwareSourceVendorsFilterOutputWithContext(context.Context) GetSoftwareSourceVendorsFilterOutput
}

type GetSoftwareSourceVendorsFilterArgs struct {
	// The name of the entity to be queried.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourceVendorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorsFilter)(nil)).Elem()
}

func (i GetSoftwareSourceVendorsFilterArgs) ToGetSoftwareSourceVendorsFilterOutput() GetSoftwareSourceVendorsFilterOutput {
	return i.ToGetSoftwareSourceVendorsFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorsFilterArgs) ToGetSoftwareSourceVendorsFilterOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorsFilterOutput)
}

// GetSoftwareSourceVendorsFilterArrayInput is an input type that accepts GetSoftwareSourceVendorsFilterArray and GetSoftwareSourceVendorsFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorsFilterArrayInput` via:
//
//	GetSoftwareSourceVendorsFilterArray{ GetSoftwareSourceVendorsFilterArgs{...} }
type GetSoftwareSourceVendorsFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorsFilterArrayOutput() GetSoftwareSourceVendorsFilterArrayOutput
	ToGetSoftwareSourceVendorsFilterArrayOutputWithContext(context.Context) GetSoftwareSourceVendorsFilterArrayOutput
}

type GetSoftwareSourceVendorsFilterArray []GetSoftwareSourceVendorsFilterInput

func (GetSoftwareSourceVendorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorsFilter)(nil)).Elem()
}

func (i GetSoftwareSourceVendorsFilterArray) ToGetSoftwareSourceVendorsFilterArrayOutput() GetSoftwareSourceVendorsFilterArrayOutput {
	return i.ToGetSoftwareSourceVendorsFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorsFilterArray) ToGetSoftwareSourceVendorsFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorsFilterArrayOutput)
}

type GetSoftwareSourceVendorsFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorsFilter)(nil)).Elem()
}

func (o GetSoftwareSourceVendorsFilterOutput) ToGetSoftwareSourceVendorsFilterOutput() GetSoftwareSourceVendorsFilterOutput {
	return o
}

func (o GetSoftwareSourceVendorsFilterOutput) ToGetSoftwareSourceVendorsFilterOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsFilterOutput {
	return o
}

// The name of the entity to be queried.
func (o GetSoftwareSourceVendorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourceVendorsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourceVendorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourceVendorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorsFilter)(nil)).Elem()
}

func (o GetSoftwareSourceVendorsFilterArrayOutput) ToGetSoftwareSourceVendorsFilterArrayOutput() GetSoftwareSourceVendorsFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorsFilterArrayOutput) ToGetSoftwareSourceVendorsFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsFilterArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorsFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceVendorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceVendorsFilter {
		return vs[0].([]GetSoftwareSourceVendorsFilter)[vs[1].(int)]
	}).(GetSoftwareSourceVendorsFilterOutput)
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollection struct {
	// List of SoftwareSourceVendor.
	Items []GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem `pulumi:"items"`
}

// GetSoftwareSourceVendorsSoftwareSourceVendorCollectionInput is an input type that accepts GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs and GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorsSoftwareSourceVendorCollectionInput` via:
//
//	GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs{...}
type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput
	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutputWithContext(context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs struct {
	// List of SoftwareSourceVendor.
	Items GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayInput `pulumi:"items"`
}

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollection)(nil)).Elem()
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput {
	return i.ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput)
}

// GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayInput is an input type that accepts GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArray and GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayInput` via:
//
//	GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArray{ GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs{...} }
type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput
	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutputWithContext(context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArray []GetSoftwareSourceVendorsSoftwareSourceVendorCollectionInput

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorsSoftwareSourceVendorCollection)(nil)).Elem()
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArray) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput {
	return i.ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArray) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput)
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollection)(nil)).Elem()
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput {
	return o
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput {
	return o
}

// List of SoftwareSourceVendor.
func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput) Items() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorsSoftwareSourceVendorCollection) []GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem {
		return v.Items
	}).(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput)
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorsSoftwareSourceVendorCollection)(nil)).Elem()
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceVendorsSoftwareSourceVendorCollection {
		return vs[0].([]GetSoftwareSourceVendorsSoftwareSourceVendorCollection)[vs[1].(int)]
	}).(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput)
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem struct {
	// List of corresponding archTypes.
	ArchTypes []string `pulumi:"archTypes"`
	// The name of the entity to be queried.
	Name *string `pulumi:"name"`
	// List of corresponding osFamilies.
	OsFamilies []string `pulumi:"osFamilies"`
}

// GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemInput is an input type that accepts GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs and GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemInput` via:
//
//	GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs{...}
type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput
	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutputWithContext(context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs struct {
	// List of corresponding archTypes.
	ArchTypes pulumi.StringArrayInput `pulumi:"archTypes"`
	// The name of the entity to be queried.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of corresponding osFamilies.
	OsFamilies pulumi.StringArrayInput `pulumi:"osFamilies"`
}

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput {
	return i.ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput)
}

// GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayInput is an input type that accepts GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArray and GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayInput` via:
//
//	GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArray{ GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs{...} }
type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput
	ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutputWithContext(context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArray []GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemInput

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArray) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput {
	return i.ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArray) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput)
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput {
	return o
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput {
	return o
}

// List of corresponding archTypes.
func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput) ArchTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem) []string { return v.ArchTypes }).(pulumi.StringArrayOutput)
}

// The name of the entity to be queried.
func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of corresponding osFamilies.
func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput) OsFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem) []string { return v.OsFamilies }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput() GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput) ToGetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem {
		return vs[0].([]GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItem)[vs[1].(int)]
	}).(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput)
}

type GetSoftwareSourcesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSoftwareSourcesFilterInput is an input type that accepts GetSoftwareSourcesFilterArgs and GetSoftwareSourcesFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesFilterInput` via:
//
//	GetSoftwareSourcesFilterArgs{...}
type GetSoftwareSourcesFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourcesFilterOutput() GetSoftwareSourcesFilterOutput
	ToGetSoftwareSourcesFilterOutputWithContext(context.Context) GetSoftwareSourcesFilterOutput
}

type GetSoftwareSourcesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSoftwareSourcesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesFilterArgs) ToGetSoftwareSourcesFilterOutput() GetSoftwareSourcesFilterOutput {
	return i.ToGetSoftwareSourcesFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesFilterArgs) ToGetSoftwareSourcesFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesFilterOutput)
}

// GetSoftwareSourcesFilterArrayInput is an input type that accepts GetSoftwareSourcesFilterArray and GetSoftwareSourcesFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesFilterArrayInput` via:
//
//	GetSoftwareSourcesFilterArray{ GetSoftwareSourcesFilterArgs{...} }
type GetSoftwareSourcesFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesFilterArrayOutput() GetSoftwareSourcesFilterArrayOutput
	ToGetSoftwareSourcesFilterArrayOutputWithContext(context.Context) GetSoftwareSourcesFilterArrayOutput
}

type GetSoftwareSourcesFilterArray []GetSoftwareSourcesFilterInput

func (GetSoftwareSourcesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesFilterArray) ToGetSoftwareSourcesFilterArrayOutput() GetSoftwareSourcesFilterArrayOutput {
	return i.ToGetSoftwareSourcesFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesFilterArray) ToGetSoftwareSourcesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesFilterArrayOutput)
}

type GetSoftwareSourcesFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesFilterOutput) ToGetSoftwareSourcesFilterOutput() GetSoftwareSourcesFilterOutput {
	return o
}

func (o GetSoftwareSourcesFilterOutput) ToGetSoftwareSourcesFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterOutput {
	return o
}

func (o GetSoftwareSourcesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareSourcesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareSourcesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSoftwareSourcesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSoftwareSourcesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesFilterArrayOutput) ToGetSoftwareSourcesFilterArrayOutput() GetSoftwareSourcesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesFilterArrayOutput) ToGetSoftwareSourcesFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesFilter {
		return vs[0].([]GetSoftwareSourcesFilter)[vs[1].(int)]
	}).(GetSoftwareSourcesFilterOutput)
}

type GetSoftwareSourcesSoftwareSourceCollection struct {
	Items []GetSoftwareSourcesSoftwareSourceCollectionItem `pulumi:"items"`
}

// GetSoftwareSourcesSoftwareSourceCollectionInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionArgs and GetSoftwareSourcesSoftwareSourceCollectionOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionArgs{...}
type GetSoftwareSourcesSoftwareSourceCollectionInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionOutput() GetSoftwareSourcesSoftwareSourceCollectionOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionArgs struct {
	Items GetSoftwareSourcesSoftwareSourceCollectionItemArrayInput `pulumi:"items"`
}

func (GetSoftwareSourcesSoftwareSourceCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollection)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionArgs) ToGetSoftwareSourcesSoftwareSourceCollectionOutput() GetSoftwareSourcesSoftwareSourceCollectionOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionArgs) ToGetSoftwareSourcesSoftwareSourceCollectionOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionOutput)
}

// GetSoftwareSourcesSoftwareSourceCollectionArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionArray and GetSoftwareSourcesSoftwareSourceCollectionArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionArray{ GetSoftwareSourcesSoftwareSourceCollectionArgs{...} }
type GetSoftwareSourcesSoftwareSourceCollectionArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionArrayOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionArrayOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionArray []GetSoftwareSourcesSoftwareSourceCollectionInput

func (GetSoftwareSourcesSoftwareSourceCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollection)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionArray) ToGetSoftwareSourcesSoftwareSourceCollectionArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionArray) ToGetSoftwareSourcesSoftwareSourceCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollection)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionOutput) ToGetSoftwareSourcesSoftwareSourceCollectionOutput() GetSoftwareSourcesSoftwareSourceCollectionOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionOutput) ToGetSoftwareSourcesSoftwareSourceCollectionOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionOutput) Items() GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollection) []GetSoftwareSourcesSoftwareSourceCollectionItem {
		return v.Items
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollection)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceCollection {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceCollection)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceCollectionOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItem struct {
	// A filter to return only instances whose architecture type matches the given architecture.
	ArchType *string `pulumi:"archType"`
	// The availabilities of the software source for a tenant.
	Availability *string `pulumi:"availability"`
	// The yum repository checksum type used by this software source.
	ChecksumType *string `pulumi:"checksumType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId *string `pulumi:"compartmentId"`
	// Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
	CustomSoftwareSourceFilters []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter `pulumi:"customSoftwareSourceFilters"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Information specified by the user about the software source.
	Description *string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Fingerprint of the GPG key for this software source.
	GpgKeyFingerprint *string `pulumi:"gpgKeyFingerprint"`
	// ID of the GPG key for this software source.
	GpgKeyId *string `pulumi:"gpgKeyId"`
	// URL of the GPG key for this software source.
	GpgKeyUrl *string `pulumi:"gpgKeyUrl"`
	// The OCID of the resource that is immutable on creation.
	Id *string `pulumi:"id"`
	// Indicates whether service should automatically update the custom software source for the user.
	IsAutomaticallyUpdated *bool `pulumi:"isAutomaticallyUpdated"`
	// A filter to return only instances whose OS family type matches the given OS family.
	OsFamily *string `pulumi:"osFamily"`
	// Number of packages.
	PackageCount *string `pulumi:"packageCount"`
	// The Repo ID for the software source.
	RepoId *string `pulumi:"repoId"`
	// The type of the software source.
	SoftwareSourceType *string `pulumi:"softwareSourceType"`
	// The version to assign to this custom software source.
	SoftwareSourceVersion *string `pulumi:"softwareSourceVersion"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleStates.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated *string `pulumi:"timeCreated"`
	// URL for the repository.
	Url *string `pulumi:"url"`
	// A filter to return only profiles that match the given vendorName.
	VendorName *string `pulumi:"vendorName"`
	// List of vendor software sources.
	VendorSoftwareSources []GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource `pulumi:"vendorSoftwareSources"`
}

// GetSoftwareSourcesSoftwareSourceCollectionItemInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemArgs and GetSoftwareSourcesSoftwareSourceCollectionItemOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemArgs{...}
type GetSoftwareSourcesSoftwareSourceCollectionItemInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemOutput() GetSoftwareSourcesSoftwareSourceCollectionItemOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemArgs struct {
	// A filter to return only instances whose architecture type matches the given architecture.
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// The availabilities of the software source for a tenant.
	Availability pulumi.StringPtrInput `pulumi:"availability"`
	// The yum repository checksum type used by this software source.
	ChecksumType pulumi.StringPtrInput `pulumi:"checksumType"`
	// The OCID of the compartment that contains the resources to list.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
	CustomSoftwareSourceFilters GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayInput `pulumi:"customSoftwareSourceFilters"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Information specified by the user about the software source.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Fingerprint of the GPG key for this software source.
	GpgKeyFingerprint pulumi.StringPtrInput `pulumi:"gpgKeyFingerprint"`
	// ID of the GPG key for this software source.
	GpgKeyId pulumi.StringPtrInput `pulumi:"gpgKeyId"`
	// URL of the GPG key for this software source.
	GpgKeyUrl pulumi.StringPtrInput `pulumi:"gpgKeyUrl"`
	// The OCID of the resource that is immutable on creation.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Indicates whether service should automatically update the custom software source for the user.
	IsAutomaticallyUpdated pulumi.BoolPtrInput `pulumi:"isAutomaticallyUpdated"`
	// A filter to return only instances whose OS family type matches the given OS family.
	OsFamily pulumi.StringPtrInput `pulumi:"osFamily"`
	// Number of packages.
	PackageCount pulumi.StringPtrInput `pulumi:"packageCount"`
	// The Repo ID for the software source.
	RepoId pulumi.StringPtrInput `pulumi:"repoId"`
	// The type of the software source.
	SoftwareSourceType pulumi.StringPtrInput `pulumi:"softwareSourceType"`
	// The version to assign to this custom software source.
	SoftwareSourceVersion pulumi.StringPtrInput `pulumi:"softwareSourceVersion"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleStates.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// URL for the repository.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// A filter to return only profiles that match the given vendorName.
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
	// List of vendor software sources.
	VendorSoftwareSources GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayInput `pulumi:"vendorSoftwareSources"`
}

func (GetSoftwareSourcesSoftwareSourceCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemOutput() GetSoftwareSourcesSoftwareSourceCollectionItemOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemOutput)
}

// GetSoftwareSourcesSoftwareSourceCollectionItemArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemArray and GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemArray{ GetSoftwareSourcesSoftwareSourceCollectionItemArgs{...} }
type GetSoftwareSourcesSoftwareSourceCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemArray []GetSoftwareSourcesSoftwareSourceCollectionItemInput

func (GetSoftwareSourcesSoftwareSourceCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItem)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemOutput() GetSoftwareSourcesSoftwareSourceCollectionItemOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemOutput {
	return o
}

// A filter to return only instances whose architecture type matches the given architecture.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// The availabilities of the software source for a tenant.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) Availability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.Availability }).(pulumi.StringPtrOutput)
}

// The yum repository checksum type used by this software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) ChecksumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.ChecksumType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the resources to list.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) CustomSoftwareSourceFilters() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter {
		return v.CustomSoftwareSourceFilters
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Information specified by the user about the software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Fingerprint of the GPG key for this software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) GpgKeyFingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.GpgKeyFingerprint }).(pulumi.StringPtrOutput)
}

// ID of the GPG key for this software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) GpgKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.GpgKeyId }).(pulumi.StringPtrOutput)
}

// URL of the GPG key for this software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) GpgKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.GpgKeyUrl }).(pulumi.StringPtrOutput)
}

// The OCID of the resource that is immutable on creation.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Indicates whether service should automatically update the custom software source for the user.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) IsAutomaticallyUpdated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *bool { return v.IsAutomaticallyUpdated }).(pulumi.BoolPtrOutput)
}

// A filter to return only instances whose OS family type matches the given OS family.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) OsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.OsFamily }).(pulumi.StringPtrOutput)
}

// Number of packages.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) PackageCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.PackageCount }).(pulumi.StringPtrOutput)
}

// The Repo ID for the software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) RepoId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.RepoId }).(pulumi.StringPtrOutput)
}

// The type of the software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) SoftwareSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.SoftwareSourceType }).(pulumi.StringPtrOutput)
}

// The version to assign to this custom software source.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) SoftwareSourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.SoftwareSourceVersion }).(pulumi.StringPtrOutput)
}

// A filter to return only resources whose lifecycleState matches the given lifecycleStates.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// URL for the repository.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// A filter to return only profiles that match the given vendorName.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

// List of vendor software sources.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemOutput) VendorSoftwareSources() GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItem) []GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource {
		return v.VendorSoftwareSources
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItem)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceCollectionItem {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceCollectionItem)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter struct {
	// The list of module stream/profile filters.
	ModuleStreamProfileFilters []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter `pulumi:"moduleStreamProfileFilters"`
	// The list of package filters.
	PackageFilters []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter `pulumi:"packageFilters"`
	// The list of group filters.
	PackageGroupFilters []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter `pulumi:"packageGroupFilters"`
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs{...}
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs struct {
	// The list of module stream/profile filters.
	ModuleStreamProfileFilters GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput `pulumi:"moduleStreamProfileFilters"`
	// The list of package filters.
	PackageFilters GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayInput `pulumi:"packageFilters"`
	// The list of group filters.
	PackageGroupFilters GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayInput `pulumi:"packageGroupFilters"`
}

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput)
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArray and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArray{ GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs{...} }
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArray []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterInput

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput {
	return o
}

// The list of module stream/profile filters.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput) ModuleStreamProfileFilters() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter) []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter {
		return v.ModuleStreamProfileFilters
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput)
}

// The list of package filters.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput) PackageFilters() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter) []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter {
		return v.PackageFilters
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput)
}

// The list of group filters.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput) PackageGroupFilters() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter) []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter {
		return v.PackageGroupFilters
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilter)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType *string `pulumi:"filterType"`
	// Module name.
	ModuleName *string `pulumi:"moduleName"`
	// Profile name.
	ProfileName *string `pulumi:"profileName"`
	// Stream name.
	StreamName *string `pulumi:"streamName"`
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{...}
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Module name.
	ModuleName pulumi.StringPtrInput `pulumi:"moduleName"`
	// Profile name.
	ProfileName pulumi.StringPtrInput `pulumi:"profileName"`
	// Stream name.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput)
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArray and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArray{ GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{...} }
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArray []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterInput

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return o
}

// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Module name.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ModuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.ModuleName
	}).(pulumi.StringPtrOutput)
}

// Profile name.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) ProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.ProfileName
	}).(pulumi.StringPtrOutput)
}

// Stream name.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter) *string {
		return v.StreamName
	}).(pulumi.StringPtrOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilter)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType *string `pulumi:"filterType"`
	// The package name.
	PackageName *string `pulumi:"packageName"`
	// The package name pattern.
	PackageNamePattern *string `pulumi:"packageNamePattern"`
	// The package version, which is denoted by 'version-release', or 'epoch:version-release'.
	PackageVersion *string `pulumi:"packageVersion"`
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs{...}
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// The package name.
	PackageName pulumi.StringPtrInput `pulumi:"packageName"`
	// The package name pattern.
	PackageNamePattern pulumi.StringPtrInput `pulumi:"packageNamePattern"`
	// The package version, which is denoted by 'version-release', or 'epoch:version-release'.
	PackageVersion pulumi.StringPtrInput `pulumi:"packageVersion"`
}

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput)
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArray and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArray{ GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs{...} }
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArray []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterInput

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput {
	return o
}

// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter) *string {
		return v.FilterType
	}).(pulumi.StringPtrOutput)
}

// The package name.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter) *string {
		return v.PackageName
	}).(pulumi.StringPtrOutput)
}

// The package name pattern.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput) PackageNamePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter) *string {
		return v.PackageNamePattern
	}).(pulumi.StringPtrOutput)
}

// The package version, which is denoted by 'version-release', or 'epoch:version-release'.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput) PackageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter) *string {
		return v.PackageVersion
	}).(pulumi.StringPtrOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType *string `pulumi:"filterType"`
	// List of package group names.
	PackageGroups []string `pulumi:"packageGroups"`
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs{...}
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs struct {
	// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// List of package group names.
	PackageGroups pulumi.StringArrayInput `pulumi:"packageGroups"`
}

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput)
}

// GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArray and GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArray{ GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs{...} }
type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArray []GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterInput

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return o
}

// The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter) *string {
		return v.FilterType
	}).(pulumi.StringPtrOutput)
}

// List of package group names.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput) PackageGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter) []string {
		return v.PackageGroups
	}).(pulumi.StringArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilter)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// The OCID of the resource that is immutable on creation.
	Id *string `pulumi:"id"`
}

// GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs and GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs{...}
type GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput() GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs struct {
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The OCID of the resource that is immutable on creation.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput() GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput)
}

// GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayInput is an input type that accepts GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArray and GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput values.
// You can construct a concrete instance of `GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayInput` via:
//
//	GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArray{ GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs{...} }
type GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayInput interface {
	pulumi.Input

	ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput
	ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutputWithContext(context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput
}

type GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArray []GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceInput

func (GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource)(nil)).Elem()
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput {
	return i.ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutputWithContext(context.Background())
}

func (i GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArray) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput() GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput {
	return o
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The OCID of the resource that is immutable on creation.
func (o GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource)(nil)).Elem()
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput() GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput) ToGetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutputWithContext(ctx context.Context) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput {
	return o
}

func (o GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput) Index(i pulumi.IntInput) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource {
		return vs[0].([]GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSource)[vs[1].(int)]
	}).(GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentManagedInstanceIdInput)(nil)).Elem(), LifecycleEnvironmentManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentManagedInstanceIdArrayInput)(nil)).Elem(), LifecycleEnvironmentManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentStageInput)(nil)).Elem(), LifecycleEnvironmentStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentStageArrayInput)(nil)).Elem(), LifecycleEnvironmentStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentStageManagedInstanceIdInput)(nil)).Elem(), LifecycleEnvironmentStageManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentStageManagedInstanceIdArrayInput)(nil)).Elem(), LifecycleEnvironmentStageManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentStageSoftwareSourceIdInput)(nil)).Elem(), LifecycleEnvironmentStageSoftwareSourceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleEnvironmentStageSoftwareSourceIdArrayInput)(nil)).Elem(), LifecycleEnvironmentStageSoftwareSourceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupSoftwareSourceInput)(nil)).Elem(), ManagedInstanceGroupSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceGroupSoftwareSourceArrayInput)(nil)).Elem(), ManagedInstanceGroupSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMirrorInput)(nil)).Elem(), ManagementStationMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMirrorPtrInput)(nil)).Elem(), ManagementStationMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMirrorSyncStatusInput)(nil)).Elem(), ManagementStationMirrorSyncStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationMirrorSyncStatusArrayInput)(nil)).Elem(), ManagementStationMirrorSyncStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationProxyInput)(nil)).Elem(), ManagementStationProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementStationProxyPtrInput)(nil)).Elem(), ManagementStationProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileLifecycleEnvironmentInput)(nil)).Elem(), ProfileLifecycleEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileLifecycleEnvironmentArrayInput)(nil)).Elem(), ProfileLifecycleEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileLifecycleStageInput)(nil)).Elem(), ProfileLifecycleStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileLifecycleStageArrayInput)(nil)).Elem(), ProfileLifecycleStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileManagedInstanceGroupInput)(nil)).Elem(), ProfileManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileManagedInstanceGroupArrayInput)(nil)).Elem(), ProfileManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSoftwareSourceInput)(nil)).Elem(), ProfileSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileSoftwareSourceArrayInput)(nil)).Elem(), ProfileSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPtrInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageFilterInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterPackageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput)(nil)).Elem(), SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceVendorSoftwareSourceInput)(nil)).Elem(), SoftwareSourceVendorSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceVendorSoftwareSourceArrayInput)(nil)).Elem(), SoftwareSourceVendorSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentManagedInstanceIdInput)(nil)).Elem(), GetLifecycleEnvironmentManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentManagedInstanceIdArrayInput)(nil)).Elem(), GetLifecycleEnvironmentManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentStageInput)(nil)).Elem(), GetLifecycleEnvironmentStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentStageArrayInput)(nil)).Elem(), GetLifecycleEnvironmentStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentStageManagedInstanceIdInput)(nil)).Elem(), GetLifecycleEnvironmentStageManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentStageManagedInstanceIdArrayInput)(nil)).Elem(), GetLifecycleEnvironmentStageManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentStageSoftwareSourceIdInput)(nil)).Elem(), GetLifecycleEnvironmentStageSoftwareSourceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentStageSoftwareSourceIdArrayInput)(nil)).Elem(), GetLifecycleEnvironmentStageSoftwareSourceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsFilterInput)(nil)).Elem(), GetLifecycleEnvironmentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsFilterArrayInput)(nil)).Elem(), GetLifecycleEnvironmentsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayInput)(nil)).Elem(), GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStageManagedInstanceIdInput)(nil)).Elem(), GetLifecycleStageManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStageManagedInstanceIdArrayInput)(nil)).Elem(), GetLifecycleStageManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStageSoftwareSourceIdInput)(nil)).Elem(), GetLifecycleStageSoftwareSourceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStageSoftwareSourceIdArrayInput)(nil)).Elem(), GetLifecycleStageSoftwareSourceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesFilterInput)(nil)).Elem(), GetLifecycleStagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesFilterArrayInput)(nil)).Elem(), GetLifecycleStagesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionArrayInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemArrayInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayInput)(nil)).Elem(), GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesFilterInput)(nil)).Elem(), GetManagedInstanceGroupAvailableModulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesFilterArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailableModulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionInput)(nil)).Elem(), GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemInput)(nil)).Elem(), GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesFilterInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesFilterArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionInput)(nil)).Elem(), GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemInput)(nil)).Elem(), GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesFilterInput)(nil)).Elem(), GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayInput)(nil)).Elem(), GetManagedInstanceGroupAvailableSoftwareSourcesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupSoftwareSourceInput)(nil)).Elem(), GetManagedInstanceGroupSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupSoftwareSourceArrayInput)(nil)).Elem(), GetManagedInstanceGroupSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsFilterInput)(nil)).Elem(), GetManagedInstanceGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsFilterArrayInput)(nil)).Elem(), GetManagedInstanceGroupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItemInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayInput)(nil)).Elem(), GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorInput)(nil)).Elem(), GetManagementStationMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorArrayInput)(nil)).Elem(), GetManagementStationMirrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorSyncStatusInput)(nil)).Elem(), GetManagementStationMirrorSyncStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorSyncStatusArrayInput)(nil)).Elem(), GetManagementStationMirrorSyncStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorsFilterInput)(nil)).Elem(), GetManagementStationMirrorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorsFilterArrayInput)(nil)).Elem(), GetManagementStationMirrorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollectionInput)(nil)).Elem(), GetManagementStationMirrorsMirrorsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollectionArrayInput)(nil)).Elem(), GetManagementStationMirrorsMirrorsCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollectionItemInput)(nil)).Elem(), GetManagementStationMirrorsMirrorsCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationMirrorsMirrorsCollectionItemArrayInput)(nil)).Elem(), GetManagementStationMirrorsMirrorsCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationProxyInput)(nil)).Elem(), GetManagementStationProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationProxyArrayInput)(nil)).Elem(), GetManagementStationProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsFilterInput)(nil)).Elem(), GetManagementStationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsFilterArrayInput)(nil)).Elem(), GetManagementStationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionArrayInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemArrayInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirrorInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirrorArrayInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemMirrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirrorSyncStatusInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemProxyInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementStationsManagementStationCollectionItemProxyArrayInput)(nil)).Elem(), GetManagementStationsManagementStationCollectionItemProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileLifecycleEnvironmentInput)(nil)).Elem(), GetProfileLifecycleEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileLifecycleEnvironmentArrayInput)(nil)).Elem(), GetProfileLifecycleEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileLifecycleStageInput)(nil)).Elem(), GetProfileLifecycleStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileLifecycleStageArrayInput)(nil)).Elem(), GetProfileLifecycleStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileManagedInstanceGroupInput)(nil)).Elem(), GetProfileManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileManagedInstanceGroupArrayInput)(nil)).Elem(), GetProfileManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileSoftwareSourceInput)(nil)).Elem(), GetProfileSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileSoftwareSourceArrayInput)(nil)).Elem(), GetProfileSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesFilterInput)(nil)).Elem(), GetProfilesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesFilterArrayInput)(nil)).Elem(), GetProfilesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionInput)(nil)).Elem(), GetProfilesProfileCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionArrayInput)(nil)).Elem(), GetProfilesProfileCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemInput)(nil)).Elem(), GetProfilesProfileCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemArrayInput)(nil)).Elem(), GetProfilesProfileCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleEnvironmentInput)(nil)).Elem(), GetProfilesProfileCollectionItemLifecycleEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleEnvironmentArrayInput)(nil)).Elem(), GetProfilesProfileCollectionItemLifecycleEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleStageInput)(nil)).Elem(), GetProfilesProfileCollectionItemLifecycleStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemLifecycleStageArrayInput)(nil)).Elem(), GetProfilesProfileCollectionItemLifecycleStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemManagedInstanceGroupInput)(nil)).Elem(), GetProfilesProfileCollectionItemManagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemManagedInstanceGroupArrayInput)(nil)).Elem(), GetProfilesProfileCollectionItemManagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemSoftwareSourceInput)(nil)).Elem(), GetProfilesProfileCollectionItemSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfilesProfileCollectionItemSoftwareSourceArrayInput)(nil)).Elem(), GetProfilesProfileCollectionItemSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterArrayInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayInput)(nil)).Elem(), GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesFilterInput)(nil)).Elem(), GetSoftwareSourceModuleStreamProfilesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesFilterArrayInput)(nil)).Elem(), GetSoftwareSourceModuleStreamProfilesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionInput)(nil)).Elem(), GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayInput)(nil)).Elem(), GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemInput)(nil)).Elem(), GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayInput)(nil)).Elem(), GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamsFilterInput)(nil)).Elem(), GetSoftwareSourceModuleStreamsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamsFilterArrayInput)(nil)).Elem(), GetSoftwareSourceModuleStreamsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollectionInput)(nil)).Elem(), GetSoftwareSourceModuleStreamsModuleStreamCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayInput)(nil)).Elem(), GetSoftwareSourceModuleStreamsModuleStreamCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollectionItemInput)(nil)).Elem(), GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayInput)(nil)).Elem(), GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcePackageGroupsFilterInput)(nil)).Elem(), GetSoftwareSourcePackageGroupsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcePackageGroupsFilterArrayInput)(nil)).Elem(), GetSoftwareSourcePackageGroupsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollectionInput)(nil)).Elem(), GetSoftwareSourcePackageGroupsPackageGroupCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayInput)(nil)).Elem(), GetSoftwareSourcePackageGroupsPackageGroupCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollectionItemInput)(nil)).Elem(), GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayInput)(nil)).Elem(), GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackageDependencyInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackageDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackageDependencyArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackageDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackageFileInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackageFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackageFileArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackageFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackageSoftwareSourceInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackageSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackageSoftwareSourceArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackageSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesFilterInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesFilterArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayInput)(nil)).Elem(), GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorSoftwareSourceInput)(nil)).Elem(), GetSoftwareSourceVendorSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorSoftwareSourceArrayInput)(nil)).Elem(), GetSoftwareSourceVendorSoftwareSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorsFilterInput)(nil)).Elem(), GetSoftwareSourceVendorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorsFilterArrayInput)(nil)).Elem(), GetSoftwareSourceVendorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollectionInput)(nil)).Elem(), GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayInput)(nil)).Elem(), GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemInput)(nil)).Elem(), GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayInput)(nil)).Elem(), GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesFilterInput)(nil)).Elem(), GetSoftwareSourcesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesFilterArrayInput)(nil)).Elem(), GetSoftwareSourcesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayInput)(nil)).Elem(), GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArray{})
	pulumi.RegisterOutputType(LifecycleEnvironmentManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(LifecycleEnvironmentManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(LifecycleEnvironmentStageOutput{})
	pulumi.RegisterOutputType(LifecycleEnvironmentStageArrayOutput{})
	pulumi.RegisterOutputType(LifecycleEnvironmentStageManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(LifecycleEnvironmentStageManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(LifecycleEnvironmentStageSoftwareSourceIdOutput{})
	pulumi.RegisterOutputType(LifecycleEnvironmentStageSoftwareSourceIdArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupSoftwareSourceOutput{})
	pulumi.RegisterOutputType(ManagedInstanceGroupSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(ManagementStationMirrorOutput{})
	pulumi.RegisterOutputType(ManagementStationMirrorPtrOutput{})
	pulumi.RegisterOutputType(ManagementStationMirrorSyncStatusOutput{})
	pulumi.RegisterOutputType(ManagementStationMirrorSyncStatusArrayOutput{})
	pulumi.RegisterOutputType(ManagementStationProxyOutput{})
	pulumi.RegisterOutputType(ManagementStationProxyPtrOutput{})
	pulumi.RegisterOutputType(ProfileLifecycleEnvironmentOutput{})
	pulumi.RegisterOutputType(ProfileLifecycleEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ProfileLifecycleStageOutput{})
	pulumi.RegisterOutputType(ProfileLifecycleStageArrayOutput{})
	pulumi.RegisterOutputType(ProfileManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(ProfileManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(ProfileSoftwareSourceOutput{})
	pulumi.RegisterOutputType(ProfileSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterPtrOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput{})
	pulumi.RegisterOutputType(SoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(SoftwareSourceVendorSoftwareSourceOutput{})
	pulumi.RegisterOutputType(SoftwareSourceVendorSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentStageOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentStageArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentStageManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentStageManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentStageSoftwareSourceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentStageSoftwareSourceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsFilterOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleEnvironmentsLifecycleEnvironmentCollectionItemStageSoftwareSourceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleStageManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleStageManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleStageSoftwareSourceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleStageSoftwareSourceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesFilterOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionItemOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionItemManagedInstanceIdArrayOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdOutput{})
	pulumi.RegisterOutputType(GetLifecycleStagesLifecycleStageCollectionItemSoftwareSourceIdArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableModulesFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableModulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableSoftwareSourcesFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupAvailableSoftwareSourcesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupCollectionOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceGroupsManagedInstanceGroupCollectionItemSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorSyncStatusOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorSyncStatusArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorsFilterOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorsMirrorsCollectionOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorsMirrorsCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorsMirrorsCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagementStationMirrorsMirrorsCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationProxyOutput{})
	pulumi.RegisterOutputType(GetManagementStationProxyArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationsFilterOutput{})
	pulumi.RegisterOutputType(GetManagementStationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemMirrorOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemMirrorArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemMirrorSyncStatusOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemMirrorSyncStatusArrayOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemProxyOutput{})
	pulumi.RegisterOutputType(GetManagementStationsManagementStationCollectionItemProxyArrayOutput{})
	pulumi.RegisterOutputType(GetProfileLifecycleEnvironmentOutput{})
	pulumi.RegisterOutputType(GetProfileLifecycleEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetProfileLifecycleStageOutput{})
	pulumi.RegisterOutputType(GetProfileLifecycleStageArrayOutput{})
	pulumi.RegisterOutputType(GetProfileManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(GetProfileManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProfileSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetProfileSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetProfilesFilterOutput{})
	pulumi.RegisterOutputType(GetProfilesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemLifecycleEnvironmentOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemLifecycleEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemLifecycleStageOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemLifecycleStageArrayOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemManagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemManagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetProfilesProfileCollectionItemSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterPackageFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamProfilesFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamProfilesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamProfilesModuleStreamProfileCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamsFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamsModuleStreamCollectionOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamsModuleStreamCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamsModuleStreamCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceModuleStreamsModuleStreamCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcePackageGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcePackageGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcePackageGroupsPackageGroupCollectionOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcePackageGroupsPackageGroupCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcePackageGroupsPackageGroupCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcePackageGroupsPackageGroupCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackageDependencyOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackageDependencyArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackageFileOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackageFileArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackageSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackageSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependencyArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFileArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorSoftwareSourceArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorsFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourceVendorsSoftwareSourceVendorCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterModuleStreamProfileFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceOutput{})
	pulumi.RegisterOutputType(GetSoftwareSourcesSoftwareSourceCollectionItemVendorSoftwareSourceArrayOutput{})
}
