// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Scheduled Job resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Creates a new scheduled job.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewScheduledJob(ctx, "test_scheduled_job", &osmanagementhub.ScheduledJobArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Operations: osmanagementhub.ScheduledJobOperationArray{
//					&osmanagementhub.ScheduledJobOperationArgs{
//						OperationType: pulumi.Any(scheduledJobOperationsOperationType),
//						ManageModuleStreamsDetails: &osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsArgs{
//							Disables: osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsDisableArray{
//								&osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsDisableArgs{
//									ModuleName:       pulumi.Any(scheduledJobOperationsManageModuleStreamsDetailsDisableModuleName),
//									StreamName:       pulumi.Any(testStream.Name),
//									SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//								},
//							},
//							Enables: osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsEnableArray{
//								&osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsEnableArgs{
//									ModuleName:       pulumi.Any(scheduledJobOperationsManageModuleStreamsDetailsEnableModuleName),
//									StreamName:       pulumi.Any(testStream.Name),
//									SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//								},
//							},
//							Installs: osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsInstallArray{
//								&osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsInstallArgs{
//									ModuleName:       pulumi.Any(scheduledJobOperationsManageModuleStreamsDetailsInstallModuleName),
//									ProfileName:      pulumi.Any(testProfile.Name),
//									StreamName:       pulumi.Any(testStream.Name),
//									SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//								},
//							},
//							Removes: osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsRemoveArray{
//								&osmanagementhub.ScheduledJobOperationManageModuleStreamsDetailsRemoveArgs{
//									ModuleName:       pulumi.Any(scheduledJobOperationsManageModuleStreamsDetailsRemoveModuleName),
//									ProfileName:      pulumi.Any(testProfile.Name),
//									StreamName:       pulumi.Any(testStream.Name),
//									SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//								},
//							},
//						},
//						PackageNames:        pulumi.Any(scheduledJobOperationsPackageNames),
//						RebootTimeoutInMins: pulumi.Any(scheduledJobOperationsRebootTimeoutInMins),
//						SoftwareSourceIds:   pulumi.Any(scheduledJobOperationsSoftwareSourceIds),
//						SwitchModuleStreamsDetails: &osmanagementhub.ScheduledJobOperationSwitchModuleStreamsDetailsArgs{
//							ModuleName:       pulumi.Any(scheduledJobOperationsSwitchModuleStreamsDetailsModuleName),
//							StreamName:       pulumi.Any(testStream.Name),
//							SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//						},
//						WindowsUpdateNames: pulumi.Any(scheduledJobOperationsWindowsUpdateNames),
//					},
//				},
//				ScheduleType:      pulumi.Any(scheduledJobScheduleType),
//				TimeNextExecution: pulumi.Any(scheduledJobTimeNextExecution),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				Description: pulumi.Any(scheduledJobDescription),
//				DisplayName: pulumi.Any(scheduledJobDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				IsManagedByAutonomousLinux: pulumi.Any(scheduledJobIsManagedByAutonomousLinux),
//				IsSubcompartmentIncluded:   pulumi.Any(scheduledJobIsSubcompartmentIncluded),
//				LifecycleStageIds:          pulumi.Any(scheduledJobLifecycleStageIds),
//				Locations:                  pulumi.Any(scheduledJobLocations),
//				ManagedCompartmentIds:      pulumi.Any(scheduledJobManagedCompartmentIds),
//				ManagedInstanceGroupIds:    pulumi.Any(scheduledJobManagedInstanceGroupIds),
//				ManagedInstanceIds:         pulumi.Any(scheduledJobManagedInstanceIds),
//				RecurringRule:              pulumi.Any(scheduledJobRecurringRule),
//				RetryIntervals:             pulumi.Any(scheduledJobRetryIntervals),
//				WorkRequestId:              pulumi.Any(testWorkRequest.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ScheduledJobs can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/scheduledJob:ScheduledJob test_scheduled_job "id"
// ```
type ScheduledJob struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Indicates whether this scheduled job is managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux pulumi.BoolOutput `pulumi:"isManagedByAutonomousLinux"`
	// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
	IsRestricted pulumi.BoolOutput `pulumi:"isRestricted"`
	// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
	IsSubcompartmentIncluded pulumi.BoolOutput `pulumi:"isSubcompartmentIncluded"`
	// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
	LifecycleStageIds pulumi.StringArrayOutput `pulumi:"lifecycleStageIds"`
	// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
	Locations pulumi.StringArrayOutput `pulumi:"locations"`
	// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
	ManagedCompartmentIds pulumi.StringArrayOutput `pulumi:"managedCompartmentIds"`
	// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceGroupIds pulumi.StringArrayOutput `pulumi:"managedInstanceGroupIds"`
	// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceIds pulumi.StringArrayOutput `pulumi:"managedInstanceIds"`
	// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
	// * UPDATE_PACKAGES
	// * UPDATE_ALL
	// * UPDATE_SECURITY
	// * UPDATE_BUGFIX
	// * UPDATE_ENHANCEMENT
	// * UPDATE_OTHER
	// * UPDATE_KSPLICE_USERSPACE
	// * UPDATE_KSPLICE_KERNEL
	Operations ScheduledJobOperationArrayOutput `pulumi:"operations"`
	// (Updatable) The frequency schedule for a recurring scheduled job.
	RecurringRule pulumi.StringOutput `pulumi:"recurringRule"`
	// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
	RetryIntervals pulumi.IntArrayOutput `pulumi:"retryIntervals"`
	// (Updatable) The type of scheduling frequency for the scheduled job.
	ScheduleType pulumi.StringOutput `pulumi:"scheduleType"`
	// The current state of the scheduled job.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeLastExecution pulumi.StringOutput `pulumi:"timeLastExecution"`
	// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeNextExecution pulumi.StringOutput `pulumi:"timeNextExecution"`
	// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkRequestId pulumi.StringOutput `pulumi:"workRequestId"`
	// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
	WorkRequestIds pulumi.StringArrayOutput `pulumi:"workRequestIds"`
}

// NewScheduledJob registers a new resource with the given unique name, arguments, and options.
func NewScheduledJob(ctx *pulumi.Context,
	name string, args *ScheduledJobArgs, opts ...pulumi.ResourceOption) (*ScheduledJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Operations == nil {
		return nil, errors.New("invalid value for required argument 'Operations'")
	}
	if args.ScheduleType == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleType'")
	}
	if args.TimeNextExecution == nil {
		return nil, errors.New("invalid value for required argument 'TimeNextExecution'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ScheduledJob
	err := ctx.RegisterResource("oci:OsManagementHub/scheduledJob:ScheduledJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledJob gets an existing ScheduledJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledJobState, opts ...pulumi.ResourceOption) (*ScheduledJob, error) {
	var resource ScheduledJob
	err := ctx.ReadResource("oci:OsManagementHub/scheduledJob:ScheduledJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledJob resources.
type scheduledJobState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Indicates whether this scheduled job is managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux *bool `pulumi:"isManagedByAutonomousLinux"`
	// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
	IsRestricted *bool `pulumi:"isRestricted"`
	// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
	IsSubcompartmentIncluded *bool `pulumi:"isSubcompartmentIncluded"`
	// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
	LifecycleStageIds []string `pulumi:"lifecycleStageIds"`
	// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
	Locations []string `pulumi:"locations"`
	// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
	ManagedCompartmentIds []string `pulumi:"managedCompartmentIds"`
	// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceGroupIds []string `pulumi:"managedInstanceGroupIds"`
	// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceIds []string `pulumi:"managedInstanceIds"`
	// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
	// * UPDATE_PACKAGES
	// * UPDATE_ALL
	// * UPDATE_SECURITY
	// * UPDATE_BUGFIX
	// * UPDATE_ENHANCEMENT
	// * UPDATE_OTHER
	// * UPDATE_KSPLICE_USERSPACE
	// * UPDATE_KSPLICE_KERNEL
	Operations []ScheduledJobOperation `pulumi:"operations"`
	// (Updatable) The frequency schedule for a recurring scheduled job.
	RecurringRule *string `pulumi:"recurringRule"`
	// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
	RetryIntervals []int `pulumi:"retryIntervals"`
	// (Updatable) The type of scheduling frequency for the scheduled job.
	ScheduleType *string `pulumi:"scheduleType"`
	// The current state of the scheduled job.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeCreated *string `pulumi:"timeCreated"`
	// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeLastExecution *string `pulumi:"timeLastExecution"`
	// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeNextExecution *string `pulumi:"timeNextExecution"`
	// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkRequestId *string `pulumi:"workRequestId"`
	// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
	WorkRequestIds []string `pulumi:"workRequestIds"`
}

type ScheduledJobState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Indicates whether this scheduled job is managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux pulumi.BoolPtrInput
	// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
	IsRestricted pulumi.BoolPtrInput
	// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
	IsSubcompartmentIncluded pulumi.BoolPtrInput
	// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
	LifecycleStageIds pulumi.StringArrayInput
	// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
	Locations pulumi.StringArrayInput
	// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
	ManagedCompartmentIds pulumi.StringArrayInput
	// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceGroupIds pulumi.StringArrayInput
	// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceIds pulumi.StringArrayInput
	// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
	// * UPDATE_PACKAGES
	// * UPDATE_ALL
	// * UPDATE_SECURITY
	// * UPDATE_BUGFIX
	// * UPDATE_ENHANCEMENT
	// * UPDATE_OTHER
	// * UPDATE_KSPLICE_USERSPACE
	// * UPDATE_KSPLICE_KERNEL
	Operations ScheduledJobOperationArrayInput
	// (Updatable) The frequency schedule for a recurring scheduled job.
	RecurringRule pulumi.StringPtrInput
	// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
	RetryIntervals pulumi.IntArrayInput
	// (Updatable) The type of scheduling frequency for the scheduled job.
	ScheduleType pulumi.StringPtrInput
	// The current state of the scheduled job.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeCreated pulumi.StringPtrInput
	// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeLastExecution pulumi.StringPtrInput
	// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeNextExecution pulumi.StringPtrInput
	// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeUpdated pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkRequestId pulumi.StringPtrInput
	// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
	WorkRequestIds pulumi.StringArrayInput
}

func (ScheduledJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledJobState)(nil)).Elem()
}

type scheduledJobArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Indicates whether this scheduled job is managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux *bool `pulumi:"isManagedByAutonomousLinux"`
	// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
	IsSubcompartmentIncluded *bool `pulumi:"isSubcompartmentIncluded"`
	// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
	LifecycleStageIds []string `pulumi:"lifecycleStageIds"`
	// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
	Locations []string `pulumi:"locations"`
	// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
	ManagedCompartmentIds []string `pulumi:"managedCompartmentIds"`
	// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceGroupIds []string `pulumi:"managedInstanceGroupIds"`
	// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceIds []string `pulumi:"managedInstanceIds"`
	// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
	// * UPDATE_PACKAGES
	// * UPDATE_ALL
	// * UPDATE_SECURITY
	// * UPDATE_BUGFIX
	// * UPDATE_ENHANCEMENT
	// * UPDATE_OTHER
	// * UPDATE_KSPLICE_USERSPACE
	// * UPDATE_KSPLICE_KERNEL
	Operations []ScheduledJobOperation `pulumi:"operations"`
	// (Updatable) The frequency schedule for a recurring scheduled job.
	RecurringRule *string `pulumi:"recurringRule"`
	// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
	RetryIntervals []int `pulumi:"retryIntervals"`
	// (Updatable) The type of scheduling frequency for the scheduled job.
	ScheduleType string `pulumi:"scheduleType"`
	// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeNextExecution string `pulumi:"timeNextExecution"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkRequestId *string `pulumi:"workRequestId"`
}

// The set of arguments for constructing a ScheduledJob resource.
type ScheduledJobArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Indicates whether this scheduled job is managed by the Autonomous Linux service.
	IsManagedByAutonomousLinux pulumi.BoolPtrInput
	// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
	IsSubcompartmentIncluded pulumi.BoolPtrInput
	// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
	LifecycleStageIds pulumi.StringArrayInput
	// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
	Locations pulumi.StringArrayInput
	// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
	ManagedCompartmentIds pulumi.StringArrayInput
	// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceGroupIds pulumi.StringArrayInput
	// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
	ManagedInstanceIds pulumi.StringArrayInput
	// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
	// * UPDATE_PACKAGES
	// * UPDATE_ALL
	// * UPDATE_SECURITY
	// * UPDATE_BUGFIX
	// * UPDATE_ENHANCEMENT
	// * UPDATE_OTHER
	// * UPDATE_KSPLICE_USERSPACE
	// * UPDATE_KSPLICE_KERNEL
	Operations ScheduledJobOperationArrayInput
	// (Updatable) The frequency schedule for a recurring scheduled job.
	RecurringRule pulumi.StringPtrInput
	// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
	RetryIntervals pulumi.IntArrayInput
	// (Updatable) The type of scheduling frequency for the scheduled job.
	ScheduleType pulumi.StringInput
	// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
	TimeNextExecution pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkRequestId pulumi.StringPtrInput
}

func (ScheduledJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledJobArgs)(nil)).Elem()
}

type ScheduledJobInput interface {
	pulumi.Input

	ToScheduledJobOutput() ScheduledJobOutput
	ToScheduledJobOutputWithContext(ctx context.Context) ScheduledJobOutput
}

func (*ScheduledJob) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledJob)(nil)).Elem()
}

func (i *ScheduledJob) ToScheduledJobOutput() ScheduledJobOutput {
	return i.ToScheduledJobOutputWithContext(context.Background())
}

func (i *ScheduledJob) ToScheduledJobOutputWithContext(ctx context.Context) ScheduledJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledJobOutput)
}

// ScheduledJobArrayInput is an input type that accepts ScheduledJobArray and ScheduledJobArrayOutput values.
// You can construct a concrete instance of `ScheduledJobArrayInput` via:
//
//	ScheduledJobArray{ ScheduledJobArgs{...} }
type ScheduledJobArrayInput interface {
	pulumi.Input

	ToScheduledJobArrayOutput() ScheduledJobArrayOutput
	ToScheduledJobArrayOutputWithContext(context.Context) ScheduledJobArrayOutput
}

type ScheduledJobArray []ScheduledJobInput

func (ScheduledJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledJob)(nil)).Elem()
}

func (i ScheduledJobArray) ToScheduledJobArrayOutput() ScheduledJobArrayOutput {
	return i.ToScheduledJobArrayOutputWithContext(context.Background())
}

func (i ScheduledJobArray) ToScheduledJobArrayOutputWithContext(ctx context.Context) ScheduledJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledJobArrayOutput)
}

// ScheduledJobMapInput is an input type that accepts ScheduledJobMap and ScheduledJobMapOutput values.
// You can construct a concrete instance of `ScheduledJobMapInput` via:
//
//	ScheduledJobMap{ "key": ScheduledJobArgs{...} }
type ScheduledJobMapInput interface {
	pulumi.Input

	ToScheduledJobMapOutput() ScheduledJobMapOutput
	ToScheduledJobMapOutputWithContext(context.Context) ScheduledJobMapOutput
}

type ScheduledJobMap map[string]ScheduledJobInput

func (ScheduledJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledJob)(nil)).Elem()
}

func (i ScheduledJobMap) ToScheduledJobMapOutput() ScheduledJobMapOutput {
	return i.ToScheduledJobMapOutputWithContext(context.Background())
}

func (i ScheduledJobMap) ToScheduledJobMapOutputWithContext(ctx context.Context) ScheduledJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledJobMapOutput)
}

type ScheduledJobOutput struct{ *pulumi.OutputState }

func (ScheduledJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledJob)(nil)).Elem()
}

func (o ScheduledJobOutput) ToScheduledJobOutput() ScheduledJobOutput {
	return o
}

func (o ScheduledJobOutput) ToScheduledJobOutputWithContext(ctx context.Context) ScheduledJobOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
func (o ScheduledJobOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o ScheduledJobOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
func (o ScheduledJobOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
func (o ScheduledJobOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o ScheduledJobOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Indicates whether this scheduled job is managed by the Autonomous Linux service.
func (o ScheduledJobOutput) IsManagedByAutonomousLinux() pulumi.BoolOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.BoolOutput { return v.IsManagedByAutonomousLinux }).(pulumi.BoolOutput)
}

// Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
func (o ScheduledJobOutput) IsRestricted() pulumi.BoolOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.BoolOutput { return v.IsRestricted }).(pulumi.BoolOutput)
}

// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
func (o ScheduledJobOutput) IsSubcompartmentIncluded() pulumi.BoolOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.BoolOutput { return v.IsSubcompartmentIncluded }).(pulumi.BoolOutput)
}

// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
func (o ScheduledJobOutput) LifecycleStageIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringArrayOutput { return v.LifecycleStageIds }).(pulumi.StringArrayOutput)
}

// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
func (o ScheduledJobOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringArrayOutput { return v.Locations }).(pulumi.StringArrayOutput)
}

// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
func (o ScheduledJobOutput) ManagedCompartmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringArrayOutput { return v.ManagedCompartmentIds }).(pulumi.StringArrayOutput)
}

// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
func (o ScheduledJobOutput) ManagedInstanceGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringArrayOutput { return v.ManagedInstanceGroupIds }).(pulumi.StringArrayOutput)
}

// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
func (o ScheduledJobOutput) ManagedInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringArrayOutput { return v.ManagedInstanceIds }).(pulumi.StringArrayOutput)
}

// (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
// * UPDATE_PACKAGES
// * UPDATE_ALL
// * UPDATE_SECURITY
// * UPDATE_BUGFIX
// * UPDATE_ENHANCEMENT
// * UPDATE_OTHER
// * UPDATE_KSPLICE_USERSPACE
// * UPDATE_KSPLICE_KERNEL
func (o ScheduledJobOutput) Operations() ScheduledJobOperationArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) ScheduledJobOperationArrayOutput { return v.Operations }).(ScheduledJobOperationArrayOutput)
}

// (Updatable) The frequency schedule for a recurring scheduled job.
func (o ScheduledJobOutput) RecurringRule() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.RecurringRule }).(pulumi.StringOutput)
}

// (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
func (o ScheduledJobOutput) RetryIntervals() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.IntArrayOutput { return v.RetryIntervals }).(pulumi.IntArrayOutput)
}

// (Updatable) The type of scheduling frequency for the scheduled job.
func (o ScheduledJobOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.ScheduleType }).(pulumi.StringOutput)
}

// The current state of the scheduled job.
func (o ScheduledJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ScheduledJobOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o ScheduledJobOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o ScheduledJobOutput) TimeLastExecution() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.TimeLastExecution }).(pulumi.StringOutput)
}

// (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o ScheduledJobOutput) TimeNextExecution() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.TimeNextExecution }).(pulumi.StringOutput)
}

// The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
func (o ScheduledJobOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ScheduledJobOutput) WorkRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringOutput { return v.WorkRequestId }).(pulumi.StringOutput)
}

// The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
func (o ScheduledJobOutput) WorkRequestIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledJob) pulumi.StringArrayOutput { return v.WorkRequestIds }).(pulumi.StringArrayOutput)
}

type ScheduledJobArrayOutput struct{ *pulumi.OutputState }

func (ScheduledJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledJob)(nil)).Elem()
}

func (o ScheduledJobArrayOutput) ToScheduledJobArrayOutput() ScheduledJobArrayOutput {
	return o
}

func (o ScheduledJobArrayOutput) ToScheduledJobArrayOutputWithContext(ctx context.Context) ScheduledJobArrayOutput {
	return o
}

func (o ScheduledJobArrayOutput) Index(i pulumi.IntInput) ScheduledJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScheduledJob {
		return vs[0].([]*ScheduledJob)[vs[1].(int)]
	}).(ScheduledJobOutput)
}

type ScheduledJobMapOutput struct{ *pulumi.OutputState }

func (ScheduledJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledJob)(nil)).Elem()
}

func (o ScheduledJobMapOutput) ToScheduledJobMapOutput() ScheduledJobMapOutput {
	return o
}

func (o ScheduledJobMapOutput) ToScheduledJobMapOutputWithContext(ctx context.Context) ScheduledJobMapOutput {
	return o
}

func (o ScheduledJobMapOutput) MapIndex(k pulumi.StringInput) ScheduledJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScheduledJob {
		return vs[0].(map[string]*ScheduledJob)[vs[1].(string)]
	}).(ScheduledJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledJobInput)(nil)).Elem(), &ScheduledJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledJobArrayInput)(nil)).Elem(), ScheduledJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledJobMapInput)(nil)).Elem(), ScheduledJobMap{})
	pulumi.RegisterOutputType(ScheduledJobOutput{})
	pulumi.RegisterOutputType(ScheduledJobArrayOutput{})
	pulumi.RegisterOutputType(ScheduledJobMapOutput{})
}
