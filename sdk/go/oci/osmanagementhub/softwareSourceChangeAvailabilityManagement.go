// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Software Source Change Availability Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Updates the availability for a list of specified software sources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/OsManagementHub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OsManagementHub.NewSoftwareSourceChangeAvailabilityManagement(ctx, "test_software_source_change_availability_management", &OsManagementHub.SoftwareSourceChangeAvailabilityManagementArgs{
//				SoftwareSourceAvailabilities: osmanagementhub.SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArray{
//					&osmanagementhub.SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs{
//						SoftwareSourceId:  pulumi.Any(testSoftwareSource.Id),
//						Availability:      pulumi.Any(softwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilitiesAvailability),
//						AvailabilityAtOci: pulumi.Any(softwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilitiesAvailabilityAtOci),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SoftwareSourceChangeAvailabilityManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/softwareSourceChangeAvailabilityManagement:SoftwareSourceChangeAvailabilityManagement test_software_source_change_availability_management "id"
// ```
type SoftwareSourceChangeAvailabilityManagement struct {
	pulumi.CustomResourceState

	// List of vendor software sources and their availability statuses.
	SoftwareSourceAvailabilities SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArrayOutput `pulumi:"softwareSourceAvailabilities"`
}

// NewSoftwareSourceChangeAvailabilityManagement registers a new resource with the given unique name, arguments, and options.
func NewSoftwareSourceChangeAvailabilityManagement(ctx *pulumi.Context,
	name string, args *SoftwareSourceChangeAvailabilityManagementArgs, opts ...pulumi.ResourceOption) (*SoftwareSourceChangeAvailabilityManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SoftwareSourceAvailabilities == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareSourceAvailabilities'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SoftwareSourceChangeAvailabilityManagement
	err := ctx.RegisterResource("oci:OsManagementHub/softwareSourceChangeAvailabilityManagement:SoftwareSourceChangeAvailabilityManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSoftwareSourceChangeAvailabilityManagement gets an existing SoftwareSourceChangeAvailabilityManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSoftwareSourceChangeAvailabilityManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SoftwareSourceChangeAvailabilityManagementState, opts ...pulumi.ResourceOption) (*SoftwareSourceChangeAvailabilityManagement, error) {
	var resource SoftwareSourceChangeAvailabilityManagement
	err := ctx.ReadResource("oci:OsManagementHub/softwareSourceChangeAvailabilityManagement:SoftwareSourceChangeAvailabilityManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SoftwareSourceChangeAvailabilityManagement resources.
type softwareSourceChangeAvailabilityManagementState struct {
	// List of vendor software sources and their availability statuses.
	SoftwareSourceAvailabilities []SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailability `pulumi:"softwareSourceAvailabilities"`
}

type SoftwareSourceChangeAvailabilityManagementState struct {
	// List of vendor software sources and their availability statuses.
	SoftwareSourceAvailabilities SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArrayInput
}

func (SoftwareSourceChangeAvailabilityManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*softwareSourceChangeAvailabilityManagementState)(nil)).Elem()
}

type softwareSourceChangeAvailabilityManagementArgs struct {
	// List of vendor software sources and their availability statuses.
	SoftwareSourceAvailabilities []SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailability `pulumi:"softwareSourceAvailabilities"`
}

// The set of arguments for constructing a SoftwareSourceChangeAvailabilityManagement resource.
type SoftwareSourceChangeAvailabilityManagementArgs struct {
	// List of vendor software sources and their availability statuses.
	SoftwareSourceAvailabilities SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArrayInput
}

func (SoftwareSourceChangeAvailabilityManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*softwareSourceChangeAvailabilityManagementArgs)(nil)).Elem()
}

type SoftwareSourceChangeAvailabilityManagementInput interface {
	pulumi.Input

	ToSoftwareSourceChangeAvailabilityManagementOutput() SoftwareSourceChangeAvailabilityManagementOutput
	ToSoftwareSourceChangeAvailabilityManagementOutputWithContext(ctx context.Context) SoftwareSourceChangeAvailabilityManagementOutput
}

func (*SoftwareSourceChangeAvailabilityManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareSourceChangeAvailabilityManagement)(nil)).Elem()
}

func (i *SoftwareSourceChangeAvailabilityManagement) ToSoftwareSourceChangeAvailabilityManagementOutput() SoftwareSourceChangeAvailabilityManagementOutput {
	return i.ToSoftwareSourceChangeAvailabilityManagementOutputWithContext(context.Background())
}

func (i *SoftwareSourceChangeAvailabilityManagement) ToSoftwareSourceChangeAvailabilityManagementOutputWithContext(ctx context.Context) SoftwareSourceChangeAvailabilityManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceChangeAvailabilityManagementOutput)
}

// SoftwareSourceChangeAvailabilityManagementArrayInput is an input type that accepts SoftwareSourceChangeAvailabilityManagementArray and SoftwareSourceChangeAvailabilityManagementArrayOutput values.
// You can construct a concrete instance of `SoftwareSourceChangeAvailabilityManagementArrayInput` via:
//
//	SoftwareSourceChangeAvailabilityManagementArray{ SoftwareSourceChangeAvailabilityManagementArgs{...} }
type SoftwareSourceChangeAvailabilityManagementArrayInput interface {
	pulumi.Input

	ToSoftwareSourceChangeAvailabilityManagementArrayOutput() SoftwareSourceChangeAvailabilityManagementArrayOutput
	ToSoftwareSourceChangeAvailabilityManagementArrayOutputWithContext(context.Context) SoftwareSourceChangeAvailabilityManagementArrayOutput
}

type SoftwareSourceChangeAvailabilityManagementArray []SoftwareSourceChangeAvailabilityManagementInput

func (SoftwareSourceChangeAvailabilityManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SoftwareSourceChangeAvailabilityManagement)(nil)).Elem()
}

func (i SoftwareSourceChangeAvailabilityManagementArray) ToSoftwareSourceChangeAvailabilityManagementArrayOutput() SoftwareSourceChangeAvailabilityManagementArrayOutput {
	return i.ToSoftwareSourceChangeAvailabilityManagementArrayOutputWithContext(context.Background())
}

func (i SoftwareSourceChangeAvailabilityManagementArray) ToSoftwareSourceChangeAvailabilityManagementArrayOutputWithContext(ctx context.Context) SoftwareSourceChangeAvailabilityManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceChangeAvailabilityManagementArrayOutput)
}

// SoftwareSourceChangeAvailabilityManagementMapInput is an input type that accepts SoftwareSourceChangeAvailabilityManagementMap and SoftwareSourceChangeAvailabilityManagementMapOutput values.
// You can construct a concrete instance of `SoftwareSourceChangeAvailabilityManagementMapInput` via:
//
//	SoftwareSourceChangeAvailabilityManagementMap{ "key": SoftwareSourceChangeAvailabilityManagementArgs{...} }
type SoftwareSourceChangeAvailabilityManagementMapInput interface {
	pulumi.Input

	ToSoftwareSourceChangeAvailabilityManagementMapOutput() SoftwareSourceChangeAvailabilityManagementMapOutput
	ToSoftwareSourceChangeAvailabilityManagementMapOutputWithContext(context.Context) SoftwareSourceChangeAvailabilityManagementMapOutput
}

type SoftwareSourceChangeAvailabilityManagementMap map[string]SoftwareSourceChangeAvailabilityManagementInput

func (SoftwareSourceChangeAvailabilityManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SoftwareSourceChangeAvailabilityManagement)(nil)).Elem()
}

func (i SoftwareSourceChangeAvailabilityManagementMap) ToSoftwareSourceChangeAvailabilityManagementMapOutput() SoftwareSourceChangeAvailabilityManagementMapOutput {
	return i.ToSoftwareSourceChangeAvailabilityManagementMapOutputWithContext(context.Background())
}

func (i SoftwareSourceChangeAvailabilityManagementMap) ToSoftwareSourceChangeAvailabilityManagementMapOutputWithContext(ctx context.Context) SoftwareSourceChangeAvailabilityManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceChangeAvailabilityManagementMapOutput)
}

type SoftwareSourceChangeAvailabilityManagementOutput struct{ *pulumi.OutputState }

func (SoftwareSourceChangeAvailabilityManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareSourceChangeAvailabilityManagement)(nil)).Elem()
}

func (o SoftwareSourceChangeAvailabilityManagementOutput) ToSoftwareSourceChangeAvailabilityManagementOutput() SoftwareSourceChangeAvailabilityManagementOutput {
	return o
}

func (o SoftwareSourceChangeAvailabilityManagementOutput) ToSoftwareSourceChangeAvailabilityManagementOutputWithContext(ctx context.Context) SoftwareSourceChangeAvailabilityManagementOutput {
	return o
}

// List of vendor software sources and their availability statuses.
func (o SoftwareSourceChangeAvailabilityManagementOutput) SoftwareSourceAvailabilities() SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArrayOutput {
	return o.ApplyT(func(v *SoftwareSourceChangeAvailabilityManagement) SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArrayOutput {
		return v.SoftwareSourceAvailabilities
	}).(SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArrayOutput)
}

type SoftwareSourceChangeAvailabilityManagementArrayOutput struct{ *pulumi.OutputState }

func (SoftwareSourceChangeAvailabilityManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SoftwareSourceChangeAvailabilityManagement)(nil)).Elem()
}

func (o SoftwareSourceChangeAvailabilityManagementArrayOutput) ToSoftwareSourceChangeAvailabilityManagementArrayOutput() SoftwareSourceChangeAvailabilityManagementArrayOutput {
	return o
}

func (o SoftwareSourceChangeAvailabilityManagementArrayOutput) ToSoftwareSourceChangeAvailabilityManagementArrayOutputWithContext(ctx context.Context) SoftwareSourceChangeAvailabilityManagementArrayOutput {
	return o
}

func (o SoftwareSourceChangeAvailabilityManagementArrayOutput) Index(i pulumi.IntInput) SoftwareSourceChangeAvailabilityManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SoftwareSourceChangeAvailabilityManagement {
		return vs[0].([]*SoftwareSourceChangeAvailabilityManagement)[vs[1].(int)]
	}).(SoftwareSourceChangeAvailabilityManagementOutput)
}

type SoftwareSourceChangeAvailabilityManagementMapOutput struct{ *pulumi.OutputState }

func (SoftwareSourceChangeAvailabilityManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SoftwareSourceChangeAvailabilityManagement)(nil)).Elem()
}

func (o SoftwareSourceChangeAvailabilityManagementMapOutput) ToSoftwareSourceChangeAvailabilityManagementMapOutput() SoftwareSourceChangeAvailabilityManagementMapOutput {
	return o
}

func (o SoftwareSourceChangeAvailabilityManagementMapOutput) ToSoftwareSourceChangeAvailabilityManagementMapOutputWithContext(ctx context.Context) SoftwareSourceChangeAvailabilityManagementMapOutput {
	return o
}

func (o SoftwareSourceChangeAvailabilityManagementMapOutput) MapIndex(k pulumi.StringInput) SoftwareSourceChangeAvailabilityManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SoftwareSourceChangeAvailabilityManagement {
		return vs[0].(map[string]*SoftwareSourceChangeAvailabilityManagement)[vs[1].(string)]
	}).(SoftwareSourceChangeAvailabilityManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceChangeAvailabilityManagementInput)(nil)).Elem(), &SoftwareSourceChangeAvailabilityManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceChangeAvailabilityManagementArrayInput)(nil)).Elem(), SoftwareSourceChangeAvailabilityManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceChangeAvailabilityManagementMapInput)(nil)).Elem(), SoftwareSourceChangeAvailabilityManagementMap{})
	pulumi.RegisterOutputType(SoftwareSourceChangeAvailabilityManagementOutput{})
	pulumi.RegisterOutputType(SoftwareSourceChangeAvailabilityManagementArrayOutput{})
	pulumi.RegisterOutputType(SoftwareSourceChangeAvailabilityManagementMapOutput{})
}
