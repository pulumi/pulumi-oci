// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osmanagementhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Software Source Generate Metadata Management resource in Oracle Cloud Infrastructure Os Management Hub service.
//
// Regenerates metadata for the specified custom software source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osmanagementhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osmanagementhub.NewSoftwareSourceGenerateMetadataManagement(ctx, "test_software_source_generate_metadata_management", &osmanagementhub.SoftwareSourceGenerateMetadataManagementArgs{
//				SoftwareSourceId: pulumi.Any(testSoftwareSource.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SoftwareSourceGenerateMetadataManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OsManagementHub/softwareSourceGenerateMetadataManagement:SoftwareSourceGenerateMetadataManagement test_software_source_generate_metadata_management "id"
// ```
type SoftwareSourceGenerateMetadataManagement struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceId pulumi.StringOutput `pulumi:"softwareSourceId"`
}

// NewSoftwareSourceGenerateMetadataManagement registers a new resource with the given unique name, arguments, and options.
func NewSoftwareSourceGenerateMetadataManagement(ctx *pulumi.Context,
	name string, args *SoftwareSourceGenerateMetadataManagementArgs, opts ...pulumi.ResourceOption) (*SoftwareSourceGenerateMetadataManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SoftwareSourceId == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareSourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SoftwareSourceGenerateMetadataManagement
	err := ctx.RegisterResource("oci:OsManagementHub/softwareSourceGenerateMetadataManagement:SoftwareSourceGenerateMetadataManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSoftwareSourceGenerateMetadataManagement gets an existing SoftwareSourceGenerateMetadataManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSoftwareSourceGenerateMetadataManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SoftwareSourceGenerateMetadataManagementState, opts ...pulumi.ResourceOption) (*SoftwareSourceGenerateMetadataManagement, error) {
	var resource SoftwareSourceGenerateMetadataManagement
	err := ctx.ReadResource("oci:OsManagementHub/softwareSourceGenerateMetadataManagement:SoftwareSourceGenerateMetadataManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SoftwareSourceGenerateMetadataManagement resources.
type softwareSourceGenerateMetadataManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceId *string `pulumi:"softwareSourceId"`
}

type SoftwareSourceGenerateMetadataManagementState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceId pulumi.StringPtrInput
}

func (SoftwareSourceGenerateMetadataManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*softwareSourceGenerateMetadataManagementState)(nil)).Elem()
}

type softwareSourceGenerateMetadataManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceId string `pulumi:"softwareSourceId"`
}

// The set of arguments for constructing a SoftwareSourceGenerateMetadataManagement resource.
type SoftwareSourceGenerateMetadataManagementArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareSourceId pulumi.StringInput
}

func (SoftwareSourceGenerateMetadataManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*softwareSourceGenerateMetadataManagementArgs)(nil)).Elem()
}

type SoftwareSourceGenerateMetadataManagementInput interface {
	pulumi.Input

	ToSoftwareSourceGenerateMetadataManagementOutput() SoftwareSourceGenerateMetadataManagementOutput
	ToSoftwareSourceGenerateMetadataManagementOutputWithContext(ctx context.Context) SoftwareSourceGenerateMetadataManagementOutput
}

func (*SoftwareSourceGenerateMetadataManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareSourceGenerateMetadataManagement)(nil)).Elem()
}

func (i *SoftwareSourceGenerateMetadataManagement) ToSoftwareSourceGenerateMetadataManagementOutput() SoftwareSourceGenerateMetadataManagementOutput {
	return i.ToSoftwareSourceGenerateMetadataManagementOutputWithContext(context.Background())
}

func (i *SoftwareSourceGenerateMetadataManagement) ToSoftwareSourceGenerateMetadataManagementOutputWithContext(ctx context.Context) SoftwareSourceGenerateMetadataManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceGenerateMetadataManagementOutput)
}

// SoftwareSourceGenerateMetadataManagementArrayInput is an input type that accepts SoftwareSourceGenerateMetadataManagementArray and SoftwareSourceGenerateMetadataManagementArrayOutput values.
// You can construct a concrete instance of `SoftwareSourceGenerateMetadataManagementArrayInput` via:
//
//	SoftwareSourceGenerateMetadataManagementArray{ SoftwareSourceGenerateMetadataManagementArgs{...} }
type SoftwareSourceGenerateMetadataManagementArrayInput interface {
	pulumi.Input

	ToSoftwareSourceGenerateMetadataManagementArrayOutput() SoftwareSourceGenerateMetadataManagementArrayOutput
	ToSoftwareSourceGenerateMetadataManagementArrayOutputWithContext(context.Context) SoftwareSourceGenerateMetadataManagementArrayOutput
}

type SoftwareSourceGenerateMetadataManagementArray []SoftwareSourceGenerateMetadataManagementInput

func (SoftwareSourceGenerateMetadataManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SoftwareSourceGenerateMetadataManagement)(nil)).Elem()
}

func (i SoftwareSourceGenerateMetadataManagementArray) ToSoftwareSourceGenerateMetadataManagementArrayOutput() SoftwareSourceGenerateMetadataManagementArrayOutput {
	return i.ToSoftwareSourceGenerateMetadataManagementArrayOutputWithContext(context.Background())
}

func (i SoftwareSourceGenerateMetadataManagementArray) ToSoftwareSourceGenerateMetadataManagementArrayOutputWithContext(ctx context.Context) SoftwareSourceGenerateMetadataManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceGenerateMetadataManagementArrayOutput)
}

// SoftwareSourceGenerateMetadataManagementMapInput is an input type that accepts SoftwareSourceGenerateMetadataManagementMap and SoftwareSourceGenerateMetadataManagementMapOutput values.
// You can construct a concrete instance of `SoftwareSourceGenerateMetadataManagementMapInput` via:
//
//	SoftwareSourceGenerateMetadataManagementMap{ "key": SoftwareSourceGenerateMetadataManagementArgs{...} }
type SoftwareSourceGenerateMetadataManagementMapInput interface {
	pulumi.Input

	ToSoftwareSourceGenerateMetadataManagementMapOutput() SoftwareSourceGenerateMetadataManagementMapOutput
	ToSoftwareSourceGenerateMetadataManagementMapOutputWithContext(context.Context) SoftwareSourceGenerateMetadataManagementMapOutput
}

type SoftwareSourceGenerateMetadataManagementMap map[string]SoftwareSourceGenerateMetadataManagementInput

func (SoftwareSourceGenerateMetadataManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SoftwareSourceGenerateMetadataManagement)(nil)).Elem()
}

func (i SoftwareSourceGenerateMetadataManagementMap) ToSoftwareSourceGenerateMetadataManagementMapOutput() SoftwareSourceGenerateMetadataManagementMapOutput {
	return i.ToSoftwareSourceGenerateMetadataManagementMapOutputWithContext(context.Background())
}

func (i SoftwareSourceGenerateMetadataManagementMap) ToSoftwareSourceGenerateMetadataManagementMapOutputWithContext(ctx context.Context) SoftwareSourceGenerateMetadataManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareSourceGenerateMetadataManagementMapOutput)
}

type SoftwareSourceGenerateMetadataManagementOutput struct{ *pulumi.OutputState }

func (SoftwareSourceGenerateMetadataManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareSourceGenerateMetadataManagement)(nil)).Elem()
}

func (o SoftwareSourceGenerateMetadataManagementOutput) ToSoftwareSourceGenerateMetadataManagementOutput() SoftwareSourceGenerateMetadataManagementOutput {
	return o
}

func (o SoftwareSourceGenerateMetadataManagementOutput) ToSoftwareSourceGenerateMetadataManagementOutputWithContext(ctx context.Context) SoftwareSourceGenerateMetadataManagementOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SoftwareSourceGenerateMetadataManagementOutput) SoftwareSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SoftwareSourceGenerateMetadataManagement) pulumi.StringOutput { return v.SoftwareSourceId }).(pulumi.StringOutput)
}

type SoftwareSourceGenerateMetadataManagementArrayOutput struct{ *pulumi.OutputState }

func (SoftwareSourceGenerateMetadataManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SoftwareSourceGenerateMetadataManagement)(nil)).Elem()
}

func (o SoftwareSourceGenerateMetadataManagementArrayOutput) ToSoftwareSourceGenerateMetadataManagementArrayOutput() SoftwareSourceGenerateMetadataManagementArrayOutput {
	return o
}

func (o SoftwareSourceGenerateMetadataManagementArrayOutput) ToSoftwareSourceGenerateMetadataManagementArrayOutputWithContext(ctx context.Context) SoftwareSourceGenerateMetadataManagementArrayOutput {
	return o
}

func (o SoftwareSourceGenerateMetadataManagementArrayOutput) Index(i pulumi.IntInput) SoftwareSourceGenerateMetadataManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SoftwareSourceGenerateMetadataManagement {
		return vs[0].([]*SoftwareSourceGenerateMetadataManagement)[vs[1].(int)]
	}).(SoftwareSourceGenerateMetadataManagementOutput)
}

type SoftwareSourceGenerateMetadataManagementMapOutput struct{ *pulumi.OutputState }

func (SoftwareSourceGenerateMetadataManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SoftwareSourceGenerateMetadataManagement)(nil)).Elem()
}

func (o SoftwareSourceGenerateMetadataManagementMapOutput) ToSoftwareSourceGenerateMetadataManagementMapOutput() SoftwareSourceGenerateMetadataManagementMapOutput {
	return o
}

func (o SoftwareSourceGenerateMetadataManagementMapOutput) ToSoftwareSourceGenerateMetadataManagementMapOutputWithContext(ctx context.Context) SoftwareSourceGenerateMetadataManagementMapOutput {
	return o
}

func (o SoftwareSourceGenerateMetadataManagementMapOutput) MapIndex(k pulumi.StringInput) SoftwareSourceGenerateMetadataManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SoftwareSourceGenerateMetadataManagement {
		return vs[0].(map[string]*SoftwareSourceGenerateMetadataManagement)[vs[1].(string)]
	}).(SoftwareSourceGenerateMetadataManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceGenerateMetadataManagementInput)(nil)).Elem(), &SoftwareSourceGenerateMetadataManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceGenerateMetadataManagementArrayInput)(nil)).Elem(), SoftwareSourceGenerateMetadataManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SoftwareSourceGenerateMetadataManagementMapInput)(nil)).Elem(), SoftwareSourceGenerateMetadataManagementMap{})
	pulumi.RegisterOutputType(SoftwareSourceGenerateMetadataManagementOutput{})
	pulumi.RegisterOutputType(SoftwareSourceGenerateMetadataManagementArrayOutput{})
	pulumi.RegisterOutputType(SoftwareSourceGenerateMetadataManagementMapOutput{})
}
