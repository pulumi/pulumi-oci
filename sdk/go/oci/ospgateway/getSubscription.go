// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ospgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Osp Gateway service.
//
// Get the subscription plan.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/OspGateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := OspGateway.GetSubscription(ctx, &ospgateway.GetSubscriptionArgs{
//				CompartmentId:  compartmentId,
//				OspHomeRegion:  subscriptionOspHomeRegion,
//				SubscriptionId: testSubscriptionOciOspGatewaySubscription.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSubscription(ctx *pulumi.Context, args *LookupSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubscriptionResult
	err := ctx.Invoke("oci:OspGateway/getSubscription:getSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscription.
type LookupSubscriptionArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The home region's public name of the logged in user.
	OspHomeRegion string `pulumi:"ospHomeRegion"`
	// Subscription id(OCID).
	SubscriptionId string `pulumi:"subscriptionId"`
}

// A collection of values returned by getSubscription.
type LookupSubscriptionResult struct {
	// Account type.
	AccountType string `pulumi:"accountType"`
	// Bill to customer Account id.
	BillToCustAccountId string `pulumi:"billToCustAccountId"`
	// Address details model.
	BillingAddresses []GetSubscriptionBillingAddress `pulumi:"billingAddresses"`
	CompartmentId    string                          `pulumi:"compartmentId"`
	// Currency code
	CurrencyCode string `pulumi:"currencyCode"`
	Email        string `pulumi:"email"`
	// GSI Subscription external code.
	GsiOrgCode string `pulumi:"gsiOrgCode"`
	// Subscription id identifier (OCID).
	Id string `pulumi:"id"`
	// Payment intension.
	IsIntentToPay bool `pulumi:"isIntentToPay"`
	// Language short code (en, de, hu, etc)
	LanguageCode string `pulumi:"languageCode"`
	// GSI organization external identifier.
	OrganizationId string `pulumi:"organizationId"`
	OspHomeRegion  string `pulumi:"ospHomeRegion"`
	// Payment gateway details.
	PaymentGateways []GetSubscriptionPaymentGateway `pulumi:"paymentGateways"`
	// Payment option list of a subscription.
	PaymentOptions []GetSubscriptionPaymentOption `pulumi:"paymentOptions"`
	// Subscription plan type.
	PlanType string `pulumi:"planType"`
	// Ship to customer account role.
	ShipToCustAcctRoleId string `pulumi:"shipToCustAcctRoleId"`
	// Ship to customer account site address id.
	ShipToCustAcctSiteId string `pulumi:"shipToCustAcctSiteId"`
	SubscriptionId       string `pulumi:"subscriptionId"`
	// Subscription plan number.
	SubscriptionPlanNumber string                        `pulumi:"subscriptionPlanNumber"`
	Subscriptions          []GetSubscriptionSubscription `pulumi:"subscriptions"`
	// Tax details.
	TaxInfos []GetSubscriptionTaxInfo `pulumi:"taxInfos"`
	// Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
	TimePersonalToCorporateConv string `pulumi:"timePersonalToCorporateConv"`
	// Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
	TimePlanUpgrade string `pulumi:"timePlanUpgrade"`
	// Start date of the subscription.
	TimeStart string `pulumi:"timeStart"`
	// Status of the upgrade.
	UpgradeState string `pulumi:"upgradeState"`
	// This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
	UpgradeStateDetails string `pulumi:"upgradeStateDetails"`
}

func LookupSubscriptionOutput(ctx *pulumi.Context, args LookupSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubscriptionResult, error) {
			args := v.(LookupSubscriptionArgs)
			r, err := LookupSubscription(ctx, &args, opts...)
			var s LookupSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubscriptionResultOutput)
}

// A collection of arguments for invoking getSubscription.
type LookupSubscriptionOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The home region's public name of the logged in user.
	OspHomeRegion pulumi.StringInput `pulumi:"ospHomeRegion"`
	// Subscription id(OCID).
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (LookupSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getSubscription.
type LookupSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionResult)(nil)).Elem()
}

func (o LookupSubscriptionResultOutput) ToLookupSubscriptionResultOutput() LookupSubscriptionResultOutput {
	return o
}

func (o LookupSubscriptionResultOutput) ToLookupSubscriptionResultOutputWithContext(ctx context.Context) LookupSubscriptionResultOutput {
	return o
}

// Account type.
func (o LookupSubscriptionResultOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.AccountType }).(pulumi.StringOutput)
}

// Bill to customer Account id.
func (o LookupSubscriptionResultOutput) BillToCustAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.BillToCustAccountId }).(pulumi.StringOutput)
}

// Address details model.
func (o LookupSubscriptionResultOutput) BillingAddresses() GetSubscriptionBillingAddressArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) []GetSubscriptionBillingAddress { return v.BillingAddresses }).(GetSubscriptionBillingAddressArrayOutput)
}

func (o LookupSubscriptionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Currency code
func (o LookupSubscriptionResultOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

func (o LookupSubscriptionResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.Email }).(pulumi.StringOutput)
}

// GSI Subscription external code.
func (o LookupSubscriptionResultOutput) GsiOrgCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.GsiOrgCode }).(pulumi.StringOutput)
}

// Subscription id identifier (OCID).
func (o LookupSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Payment intension.
func (o LookupSubscriptionResultOutput) IsIntentToPay() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) bool { return v.IsIntentToPay }).(pulumi.BoolOutput)
}

// Language short code (en, de, hu, etc)
func (o LookupSubscriptionResultOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// GSI organization external identifier.
func (o LookupSubscriptionResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupSubscriptionResultOutput) OspHomeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.OspHomeRegion }).(pulumi.StringOutput)
}

// Payment gateway details.
func (o LookupSubscriptionResultOutput) PaymentGateways() GetSubscriptionPaymentGatewayArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) []GetSubscriptionPaymentGateway { return v.PaymentGateways }).(GetSubscriptionPaymentGatewayArrayOutput)
}

// Payment option list of a subscription.
func (o LookupSubscriptionResultOutput) PaymentOptions() GetSubscriptionPaymentOptionArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) []GetSubscriptionPaymentOption { return v.PaymentOptions }).(GetSubscriptionPaymentOptionArrayOutput)
}

// Subscription plan type.
func (o LookupSubscriptionResultOutput) PlanType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.PlanType }).(pulumi.StringOutput)
}

// Ship to customer account role.
func (o LookupSubscriptionResultOutput) ShipToCustAcctRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.ShipToCustAcctRoleId }).(pulumi.StringOutput)
}

// Ship to customer account site address id.
func (o LookupSubscriptionResultOutput) ShipToCustAcctSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.ShipToCustAcctSiteId }).(pulumi.StringOutput)
}

func (o LookupSubscriptionResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Subscription plan number.
func (o LookupSubscriptionResultOutput) SubscriptionPlanNumber() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.SubscriptionPlanNumber }).(pulumi.StringOutput)
}

func (o LookupSubscriptionResultOutput) Subscriptions() GetSubscriptionSubscriptionArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) []GetSubscriptionSubscription { return v.Subscriptions }).(GetSubscriptionSubscriptionArrayOutput)
}

// Tax details.
func (o LookupSubscriptionResultOutput) TaxInfos() GetSubscriptionTaxInfoArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) []GetSubscriptionTaxInfo { return v.TaxInfos }).(GetSubscriptionTaxInfoArrayOutput)
}

// Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
func (o LookupSubscriptionResultOutput) TimePersonalToCorporateConv() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.TimePersonalToCorporateConv }).(pulumi.StringOutput)
}

// Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
func (o LookupSubscriptionResultOutput) TimePlanUpgrade() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.TimePlanUpgrade }).(pulumi.StringOutput)
}

// Start date of the subscription.
func (o LookupSubscriptionResultOutput) TimeStart() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.TimeStart }).(pulumi.StringOutput)
}

// Status of the upgrade.
func (o LookupSubscriptionResultOutput) UpgradeState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.UpgradeState }).(pulumi.StringOutput)
}

// This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
func (o LookupSubscriptionResultOutput) UpgradeStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.UpgradeStateDetails }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubscriptionResultOutput{})
}
