// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ospgateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Subscription resource in Oracle Cloud Infrastructure Osp Gateway service.
//
// Update plan of the subscription.
//
// ## Import
//
// Subscriptions can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:OspGateway/subscription:Subscription test_subscription "subscriptions/{subscriptionId}/compartmentId/{compartmentId}/ospHomeRegion/{ospHomeRegion}"
// ```
type Subscription struct {
	pulumi.CustomResourceState

	// (Updatable) Account type.
	AccountType pulumi.StringOutput `pulumi:"accountType"`
	// (Updatable) Bill to customer Account id.
	BillToCustAccountId pulumi.StringOutput `pulumi:"billToCustAccountId"`
	// (Updatable) Address details model.
	BillingAddresses SubscriptionBillingAddressArrayOutput `pulumi:"billingAddresses"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Currency code
	CurrencyCode pulumi.StringOutput `pulumi:"currencyCode"`
	// (Updatable) User email
	Email pulumi.StringOutput `pulumi:"email"`
	// (Updatable) GSI Subscription external code.
	GsiOrgCode pulumi.StringOutput `pulumi:"gsiOrgCode"`
	// (Updatable) Payment intension.
	IsIntentToPay pulumi.BoolOutput `pulumi:"isIntentToPay"`
	// (Updatable) Language short code (en, de, hu, etc)
	LanguageCode pulumi.StringOutput `pulumi:"languageCode"`
	// (Updatable) GSI organization external identifier.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// (Updatable) The home region's public name of the logged in user.
	OspHomeRegion pulumi.StringOutput `pulumi:"ospHomeRegion"`
	// (Updatable) Payment gateway details.
	PaymentGateways SubscriptionPaymentGatewayArrayOutput `pulumi:"paymentGateways"`
	// (Updatable) Payment option list of a subscription.
	PaymentOptions SubscriptionPaymentOptionArrayOutput `pulumi:"paymentOptions"`
	// (Updatable) Subscription plan type.
	PlanType pulumi.StringOutput `pulumi:"planType"`
	// (Updatable) Ship to customer account role.
	ShipToCustAcctRoleId pulumi.StringOutput `pulumi:"shipToCustAcctRoleId"`
	// (Updatable) Ship to customer account site address id.
	ShipToCustAcctSiteId pulumi.StringOutput `pulumi:"shipToCustAcctSiteId"`
	// (Updatable) Subscription details object which extends the SubscriptionSummary
	Subscription SubscriptionSubscriptionOutput `pulumi:"subscription"`
	// Subscription id(OCID).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// (Updatable) Subscription plan number.
	SubscriptionPlanNumber pulumi.StringOutput `pulumi:"subscriptionPlanNumber"`
	// (Updatable) Tax details.
	TaxInfos SubscriptionTaxInfoArrayOutput `pulumi:"taxInfos"`
	// (Updatable) Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
	TimePersonalToCorporateConv pulumi.StringOutput `pulumi:"timePersonalToCorporateConv"`
	// (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
	TimePlanUpgrade pulumi.StringOutput `pulumi:"timePlanUpgrade"`
	// (Updatable) Start date of the subscription.
	TimeStart pulumi.StringOutput `pulumi:"timeStart"`
	// (Updatable) Status of the upgrade.
	UpgradeState pulumi.StringOutput `pulumi:"upgradeState"`
	// (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
	UpgradeStateDetails pulumi.StringOutput `pulumi:"upgradeStateDetails"`
}

// NewSubscription registers a new resource with the given unique name, arguments, and options.
func NewSubscription(ctx *pulumi.Context,
	name string, args *SubscriptionArgs, opts ...pulumi.ResourceOption) (*Subscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	if args.OspHomeRegion == nil {
		return nil, errors.New("invalid value for required argument 'OspHomeRegion'")
	}
	if args.Subscription == nil {
		return nil, errors.New("invalid value for required argument 'Subscription'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Subscription
	err := ctx.RegisterResource("oci:OspGateway/subscription:Subscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscription gets an existing Subscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriptionState, opts ...pulumi.ResourceOption) (*Subscription, error) {
	var resource Subscription
	err := ctx.ReadResource("oci:OspGateway/subscription:Subscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Subscription resources.
type subscriptionState struct {
	// (Updatable) Account type.
	AccountType *string `pulumi:"accountType"`
	// (Updatable) Bill to customer Account id.
	BillToCustAccountId *string `pulumi:"billToCustAccountId"`
	// (Updatable) Address details model.
	BillingAddresses []SubscriptionBillingAddress `pulumi:"billingAddresses"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Currency code
	CurrencyCode *string `pulumi:"currencyCode"`
	// (Updatable) User email
	Email *string `pulumi:"email"`
	// (Updatable) GSI Subscription external code.
	GsiOrgCode *string `pulumi:"gsiOrgCode"`
	// (Updatable) Payment intension.
	IsIntentToPay *bool `pulumi:"isIntentToPay"`
	// (Updatable) Language short code (en, de, hu, etc)
	LanguageCode *string `pulumi:"languageCode"`
	// (Updatable) GSI organization external identifier.
	OrganizationId *string `pulumi:"organizationId"`
	// (Updatable) The home region's public name of the logged in user.
	OspHomeRegion *string `pulumi:"ospHomeRegion"`
	// (Updatable) Payment gateway details.
	PaymentGateways []SubscriptionPaymentGateway `pulumi:"paymentGateways"`
	// (Updatable) Payment option list of a subscription.
	PaymentOptions []SubscriptionPaymentOption `pulumi:"paymentOptions"`
	// (Updatable) Subscription plan type.
	PlanType *string `pulumi:"planType"`
	// (Updatable) Ship to customer account role.
	ShipToCustAcctRoleId *string `pulumi:"shipToCustAcctRoleId"`
	// (Updatable) Ship to customer account site address id.
	ShipToCustAcctSiteId *string `pulumi:"shipToCustAcctSiteId"`
	// (Updatable) Subscription details object which extends the SubscriptionSummary
	Subscription *SubscriptionSubscription `pulumi:"subscription"`
	// Subscription id(OCID).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubscriptionId *string `pulumi:"subscriptionId"`
	// (Updatable) Subscription plan number.
	SubscriptionPlanNumber *string `pulumi:"subscriptionPlanNumber"`
	// (Updatable) Tax details.
	TaxInfos []SubscriptionTaxInfo `pulumi:"taxInfos"`
	// (Updatable) Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
	TimePersonalToCorporateConv *string `pulumi:"timePersonalToCorporateConv"`
	// (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
	TimePlanUpgrade *string `pulumi:"timePlanUpgrade"`
	// (Updatable) Start date of the subscription.
	TimeStart *string `pulumi:"timeStart"`
	// (Updatable) Status of the upgrade.
	UpgradeState *string `pulumi:"upgradeState"`
	// (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
	UpgradeStateDetails *string `pulumi:"upgradeStateDetails"`
}

type SubscriptionState struct {
	// (Updatable) Account type.
	AccountType pulumi.StringPtrInput
	// (Updatable) Bill to customer Account id.
	BillToCustAccountId pulumi.StringPtrInput
	// (Updatable) Address details model.
	BillingAddresses SubscriptionBillingAddressArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Currency code
	CurrencyCode pulumi.StringPtrInput
	// (Updatable) User email
	Email pulumi.StringPtrInput
	// (Updatable) GSI Subscription external code.
	GsiOrgCode pulumi.StringPtrInput
	// (Updatable) Payment intension.
	IsIntentToPay pulumi.BoolPtrInput
	// (Updatable) Language short code (en, de, hu, etc)
	LanguageCode pulumi.StringPtrInput
	// (Updatable) GSI organization external identifier.
	OrganizationId pulumi.StringPtrInput
	// (Updatable) The home region's public name of the logged in user.
	OspHomeRegion pulumi.StringPtrInput
	// (Updatable) Payment gateway details.
	PaymentGateways SubscriptionPaymentGatewayArrayInput
	// (Updatable) Payment option list of a subscription.
	PaymentOptions SubscriptionPaymentOptionArrayInput
	// (Updatable) Subscription plan type.
	PlanType pulumi.StringPtrInput
	// (Updatable) Ship to customer account role.
	ShipToCustAcctRoleId pulumi.StringPtrInput
	// (Updatable) Ship to customer account site address id.
	ShipToCustAcctSiteId pulumi.StringPtrInput
	// (Updatable) Subscription details object which extends the SubscriptionSummary
	Subscription SubscriptionSubscriptionPtrInput
	// Subscription id(OCID).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubscriptionId pulumi.StringPtrInput
	// (Updatable) Subscription plan number.
	SubscriptionPlanNumber pulumi.StringPtrInput
	// (Updatable) Tax details.
	TaxInfos SubscriptionTaxInfoArrayInput
	// (Updatable) Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
	TimePersonalToCorporateConv pulumi.StringPtrInput
	// (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
	TimePlanUpgrade pulumi.StringPtrInput
	// (Updatable) Start date of the subscription.
	TimeStart pulumi.StringPtrInput
	// (Updatable) Status of the upgrade.
	UpgradeState pulumi.StringPtrInput
	// (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
	UpgradeStateDetails pulumi.StringPtrInput
}

func (SubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionState)(nil)).Elem()
}

type subscriptionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) User email
	Email string `pulumi:"email"`
	// (Updatable) The home region's public name of the logged in user.
	OspHomeRegion string `pulumi:"ospHomeRegion"`
	// (Updatable) Subscription details object which extends the SubscriptionSummary
	Subscription SubscriptionSubscription `pulumi:"subscription"`
	// Subscription id(OCID).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubscriptionId string `pulumi:"subscriptionId"`
}

// The set of arguments for constructing a Subscription resource.
type SubscriptionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) User email
	Email pulumi.StringInput
	// (Updatable) The home region's public name of the logged in user.
	OspHomeRegion pulumi.StringInput
	// (Updatable) Subscription details object which extends the SubscriptionSummary
	Subscription SubscriptionSubscriptionInput
	// Subscription id(OCID).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubscriptionId pulumi.StringInput
}

func (SubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionArgs)(nil)).Elem()
}

type SubscriptionInput interface {
	pulumi.Input

	ToSubscriptionOutput() SubscriptionOutput
	ToSubscriptionOutputWithContext(ctx context.Context) SubscriptionOutput
}

func (*Subscription) ElementType() reflect.Type {
	return reflect.TypeOf((**Subscription)(nil)).Elem()
}

func (i *Subscription) ToSubscriptionOutput() SubscriptionOutput {
	return i.ToSubscriptionOutputWithContext(context.Background())
}

func (i *Subscription) ToSubscriptionOutputWithContext(ctx context.Context) SubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionOutput)
}

// SubscriptionArrayInput is an input type that accepts SubscriptionArray and SubscriptionArrayOutput values.
// You can construct a concrete instance of `SubscriptionArrayInput` via:
//
//	SubscriptionArray{ SubscriptionArgs{...} }
type SubscriptionArrayInput interface {
	pulumi.Input

	ToSubscriptionArrayOutput() SubscriptionArrayOutput
	ToSubscriptionArrayOutputWithContext(context.Context) SubscriptionArrayOutput
}

type SubscriptionArray []SubscriptionInput

func (SubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Subscription)(nil)).Elem()
}

func (i SubscriptionArray) ToSubscriptionArrayOutput() SubscriptionArrayOutput {
	return i.ToSubscriptionArrayOutputWithContext(context.Background())
}

func (i SubscriptionArray) ToSubscriptionArrayOutputWithContext(ctx context.Context) SubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionArrayOutput)
}

// SubscriptionMapInput is an input type that accepts SubscriptionMap and SubscriptionMapOutput values.
// You can construct a concrete instance of `SubscriptionMapInput` via:
//
//	SubscriptionMap{ "key": SubscriptionArgs{...} }
type SubscriptionMapInput interface {
	pulumi.Input

	ToSubscriptionMapOutput() SubscriptionMapOutput
	ToSubscriptionMapOutputWithContext(context.Context) SubscriptionMapOutput
}

type SubscriptionMap map[string]SubscriptionInput

func (SubscriptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Subscription)(nil)).Elem()
}

func (i SubscriptionMap) ToSubscriptionMapOutput() SubscriptionMapOutput {
	return i.ToSubscriptionMapOutputWithContext(context.Background())
}

func (i SubscriptionMap) ToSubscriptionMapOutputWithContext(ctx context.Context) SubscriptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionMapOutput)
}

type SubscriptionOutput struct{ *pulumi.OutputState }

func (SubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Subscription)(nil)).Elem()
}

func (o SubscriptionOutput) ToSubscriptionOutput() SubscriptionOutput {
	return o
}

func (o SubscriptionOutput) ToSubscriptionOutputWithContext(ctx context.Context) SubscriptionOutput {
	return o
}

// (Updatable) Account type.
func (o SubscriptionOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.AccountType }).(pulumi.StringOutput)
}

// (Updatable) Bill to customer Account id.
func (o SubscriptionOutput) BillToCustAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.BillToCustAccountId }).(pulumi.StringOutput)
}

// (Updatable) Address details model.
func (o SubscriptionOutput) BillingAddresses() SubscriptionBillingAddressArrayOutput {
	return o.ApplyT(func(v *Subscription) SubscriptionBillingAddressArrayOutput { return v.BillingAddresses }).(SubscriptionBillingAddressArrayOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o SubscriptionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Currency code
func (o SubscriptionOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.CurrencyCode }).(pulumi.StringOutput)
}

// (Updatable) User email
func (o SubscriptionOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// (Updatable) GSI Subscription external code.
func (o SubscriptionOutput) GsiOrgCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.GsiOrgCode }).(pulumi.StringOutput)
}

// (Updatable) Payment intension.
func (o SubscriptionOutput) IsIntentToPay() pulumi.BoolOutput {
	return o.ApplyT(func(v *Subscription) pulumi.BoolOutput { return v.IsIntentToPay }).(pulumi.BoolOutput)
}

// (Updatable) Language short code (en, de, hu, etc)
func (o SubscriptionOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.LanguageCode }).(pulumi.StringOutput)
}

// (Updatable) GSI organization external identifier.
func (o SubscriptionOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// (Updatable) The home region's public name of the logged in user.
func (o SubscriptionOutput) OspHomeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.OspHomeRegion }).(pulumi.StringOutput)
}

// (Updatable) Payment gateway details.
func (o SubscriptionOutput) PaymentGateways() SubscriptionPaymentGatewayArrayOutput {
	return o.ApplyT(func(v *Subscription) SubscriptionPaymentGatewayArrayOutput { return v.PaymentGateways }).(SubscriptionPaymentGatewayArrayOutput)
}

// (Updatable) Payment option list of a subscription.
func (o SubscriptionOutput) PaymentOptions() SubscriptionPaymentOptionArrayOutput {
	return o.ApplyT(func(v *Subscription) SubscriptionPaymentOptionArrayOutput { return v.PaymentOptions }).(SubscriptionPaymentOptionArrayOutput)
}

// (Updatable) Subscription plan type.
func (o SubscriptionOutput) PlanType() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.PlanType }).(pulumi.StringOutput)
}

// (Updatable) Ship to customer account role.
func (o SubscriptionOutput) ShipToCustAcctRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.ShipToCustAcctRoleId }).(pulumi.StringOutput)
}

// (Updatable) Ship to customer account site address id.
func (o SubscriptionOutput) ShipToCustAcctSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.ShipToCustAcctSiteId }).(pulumi.StringOutput)
}

// (Updatable) Subscription details object which extends the SubscriptionSummary
func (o SubscriptionOutput) Subscription() SubscriptionSubscriptionOutput {
	return o.ApplyT(func(v *Subscription) SubscriptionSubscriptionOutput { return v.Subscription }).(SubscriptionSubscriptionOutput)
}

// Subscription id(OCID).
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SubscriptionOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// (Updatable) Subscription plan number.
func (o SubscriptionOutput) SubscriptionPlanNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.SubscriptionPlanNumber }).(pulumi.StringOutput)
}

// (Updatable) Tax details.
func (o SubscriptionOutput) TaxInfos() SubscriptionTaxInfoArrayOutput {
	return o.ApplyT(func(v *Subscription) SubscriptionTaxInfoArrayOutput { return v.TaxInfos }).(SubscriptionTaxInfoArrayOutput)
}

// (Updatable) Date of upgrade/conversion when account type changed from PERSONAL to CORPORATE
func (o SubscriptionOutput) TimePersonalToCorporateConv() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.TimePersonalToCorporateConv }).(pulumi.StringOutput)
}

// (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
func (o SubscriptionOutput) TimePlanUpgrade() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.TimePlanUpgrade }).(pulumi.StringOutput)
}

// (Updatable) Start date of the subscription.
func (o SubscriptionOutput) TimeStart() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.TimeStart }).(pulumi.StringOutput)
}

// (Updatable) Status of the upgrade.
func (o SubscriptionOutput) UpgradeState() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.UpgradeState }).(pulumi.StringOutput)
}

// (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
func (o SubscriptionOutput) UpgradeStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Subscription) pulumi.StringOutput { return v.UpgradeStateDetails }).(pulumi.StringOutput)
}

type SubscriptionArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Subscription)(nil)).Elem()
}

func (o SubscriptionArrayOutput) ToSubscriptionArrayOutput() SubscriptionArrayOutput {
	return o
}

func (o SubscriptionArrayOutput) ToSubscriptionArrayOutputWithContext(ctx context.Context) SubscriptionArrayOutput {
	return o
}

func (o SubscriptionArrayOutput) Index(i pulumi.IntInput) SubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Subscription {
		return vs[0].([]*Subscription)[vs[1].(int)]
	}).(SubscriptionOutput)
}

type SubscriptionMapOutput struct{ *pulumi.OutputState }

func (SubscriptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Subscription)(nil)).Elem()
}

func (o SubscriptionMapOutput) ToSubscriptionMapOutput() SubscriptionMapOutput {
	return o
}

func (o SubscriptionMapOutput) ToSubscriptionMapOutputWithContext(ctx context.Context) SubscriptionMapOutput {
	return o
}

func (o SubscriptionMapOutput) MapIndex(k pulumi.StringInput) SubscriptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Subscription {
		return vs[0].(map[string]*Subscription)[vs[1].(string)]
	}).(SubscriptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionInput)(nil)).Elem(), &Subscription{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionArrayInput)(nil)).Elem(), SubscriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionMapInput)(nil)).Elem(), SubscriptionMap{})
	pulumi.RegisterOutputType(SubscriptionOutput{})
	pulumi.RegisterOutputType(SubscriptionArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionMapOutput{})
}
