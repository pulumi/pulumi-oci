// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osuborganizationsubscription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetOrganizationSubscriptionsFilter struct {
	// Currency name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetOrganizationSubscriptionsFilterInput is an input type that accepts GetOrganizationSubscriptionsFilterArgs and GetOrganizationSubscriptionsFilterOutput values.
// You can construct a concrete instance of `GetOrganizationSubscriptionsFilterInput` via:
//
//	GetOrganizationSubscriptionsFilterArgs{...}
type GetOrganizationSubscriptionsFilterInput interface {
	pulumi.Input

	ToGetOrganizationSubscriptionsFilterOutput() GetOrganizationSubscriptionsFilterOutput
	ToGetOrganizationSubscriptionsFilterOutputWithContext(context.Context) GetOrganizationSubscriptionsFilterOutput
}

type GetOrganizationSubscriptionsFilterArgs struct {
	// Currency name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOrganizationSubscriptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationSubscriptionsFilter)(nil)).Elem()
}

func (i GetOrganizationSubscriptionsFilterArgs) ToGetOrganizationSubscriptionsFilterOutput() GetOrganizationSubscriptionsFilterOutput {
	return i.ToGetOrganizationSubscriptionsFilterOutputWithContext(context.Background())
}

func (i GetOrganizationSubscriptionsFilterArgs) ToGetOrganizationSubscriptionsFilterOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationSubscriptionsFilterOutput)
}

// GetOrganizationSubscriptionsFilterArrayInput is an input type that accepts GetOrganizationSubscriptionsFilterArray and GetOrganizationSubscriptionsFilterArrayOutput values.
// You can construct a concrete instance of `GetOrganizationSubscriptionsFilterArrayInput` via:
//
//	GetOrganizationSubscriptionsFilterArray{ GetOrganizationSubscriptionsFilterArgs{...} }
type GetOrganizationSubscriptionsFilterArrayInput interface {
	pulumi.Input

	ToGetOrganizationSubscriptionsFilterArrayOutput() GetOrganizationSubscriptionsFilterArrayOutput
	ToGetOrganizationSubscriptionsFilterArrayOutputWithContext(context.Context) GetOrganizationSubscriptionsFilterArrayOutput
}

type GetOrganizationSubscriptionsFilterArray []GetOrganizationSubscriptionsFilterInput

func (GetOrganizationSubscriptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationSubscriptionsFilter)(nil)).Elem()
}

func (i GetOrganizationSubscriptionsFilterArray) ToGetOrganizationSubscriptionsFilterArrayOutput() GetOrganizationSubscriptionsFilterArrayOutput {
	return i.ToGetOrganizationSubscriptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetOrganizationSubscriptionsFilterArray) ToGetOrganizationSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationSubscriptionsFilterArrayOutput)
}

type GetOrganizationSubscriptionsFilterOutput struct{ *pulumi.OutputState }

func (GetOrganizationSubscriptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationSubscriptionsFilter)(nil)).Elem()
}

func (o GetOrganizationSubscriptionsFilterOutput) ToGetOrganizationSubscriptionsFilterOutput() GetOrganizationSubscriptionsFilterOutput {
	return o
}

func (o GetOrganizationSubscriptionsFilterOutput) ToGetOrganizationSubscriptionsFilterOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsFilterOutput {
	return o
}

// Currency name
func (o GetOrganizationSubscriptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOrganizationSubscriptionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetOrganizationSubscriptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOrganizationSubscriptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationSubscriptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationSubscriptionsFilter)(nil)).Elem()
}

func (o GetOrganizationSubscriptionsFilterArrayOutput) ToGetOrganizationSubscriptionsFilterArrayOutput() GetOrganizationSubscriptionsFilterArrayOutput {
	return o
}

func (o GetOrganizationSubscriptionsFilterArrayOutput) ToGetOrganizationSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsFilterArrayOutput {
	return o
}

func (o GetOrganizationSubscriptionsFilterArrayOutput) Index(i pulumi.IntInput) GetOrganizationSubscriptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationSubscriptionsFilter {
		return vs[0].([]GetOrganizationSubscriptionsFilter)[vs[1].(int)]
	}).(GetOrganizationSubscriptionsFilterOutput)
}

type GetOrganizationSubscriptionsSubscription struct {
	// Currency details
	Currencies []GetOrganizationSubscriptionsSubscriptionCurrency `pulumi:"currencies"`
	// SPM internal Subscription ID
	Id *string `pulumi:"id"`
	// Customer friendly service name provided by PRG
	ServiceName *string `pulumi:"serviceName"`
	// Status of the plan
	Status *string `pulumi:"status"`
	// Represents the date when the last service of the subscription ends
	TimeEnd *string `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart *string `pulumi:"timeStart"`
	// Total aggregate TCLV of all lines for the subscription including expired, active, and signed
	TotalValue *string `pulumi:"totalValue"`
	// Subscription Type i.e. IAAS,SAAS,PAAS
	Type *string `pulumi:"type"`
}

// GetOrganizationSubscriptionsSubscriptionInput is an input type that accepts GetOrganizationSubscriptionsSubscriptionArgs and GetOrganizationSubscriptionsSubscriptionOutput values.
// You can construct a concrete instance of `GetOrganizationSubscriptionsSubscriptionInput` via:
//
//	GetOrganizationSubscriptionsSubscriptionArgs{...}
type GetOrganizationSubscriptionsSubscriptionInput interface {
	pulumi.Input

	ToGetOrganizationSubscriptionsSubscriptionOutput() GetOrganizationSubscriptionsSubscriptionOutput
	ToGetOrganizationSubscriptionsSubscriptionOutputWithContext(context.Context) GetOrganizationSubscriptionsSubscriptionOutput
}

type GetOrganizationSubscriptionsSubscriptionArgs struct {
	// Currency details
	Currencies GetOrganizationSubscriptionsSubscriptionCurrencyArrayInput `pulumi:"currencies"`
	// SPM internal Subscription ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Customer friendly service name provided by PRG
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Status of the plan
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Represents the date when the last service of the subscription ends
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
	// Total aggregate TCLV of all lines for the subscription including expired, active, and signed
	TotalValue pulumi.StringPtrInput `pulumi:"totalValue"`
	// Subscription Type i.e. IAAS,SAAS,PAAS
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetOrganizationSubscriptionsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationSubscriptionsSubscription)(nil)).Elem()
}

func (i GetOrganizationSubscriptionsSubscriptionArgs) ToGetOrganizationSubscriptionsSubscriptionOutput() GetOrganizationSubscriptionsSubscriptionOutput {
	return i.ToGetOrganizationSubscriptionsSubscriptionOutputWithContext(context.Background())
}

func (i GetOrganizationSubscriptionsSubscriptionArgs) ToGetOrganizationSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationSubscriptionsSubscriptionOutput)
}

// GetOrganizationSubscriptionsSubscriptionArrayInput is an input type that accepts GetOrganizationSubscriptionsSubscriptionArray and GetOrganizationSubscriptionsSubscriptionArrayOutput values.
// You can construct a concrete instance of `GetOrganizationSubscriptionsSubscriptionArrayInput` via:
//
//	GetOrganizationSubscriptionsSubscriptionArray{ GetOrganizationSubscriptionsSubscriptionArgs{...} }
type GetOrganizationSubscriptionsSubscriptionArrayInput interface {
	pulumi.Input

	ToGetOrganizationSubscriptionsSubscriptionArrayOutput() GetOrganizationSubscriptionsSubscriptionArrayOutput
	ToGetOrganizationSubscriptionsSubscriptionArrayOutputWithContext(context.Context) GetOrganizationSubscriptionsSubscriptionArrayOutput
}

type GetOrganizationSubscriptionsSubscriptionArray []GetOrganizationSubscriptionsSubscriptionInput

func (GetOrganizationSubscriptionsSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationSubscriptionsSubscription)(nil)).Elem()
}

func (i GetOrganizationSubscriptionsSubscriptionArray) ToGetOrganizationSubscriptionsSubscriptionArrayOutput() GetOrganizationSubscriptionsSubscriptionArrayOutput {
	return i.ToGetOrganizationSubscriptionsSubscriptionArrayOutputWithContext(context.Background())
}

func (i GetOrganizationSubscriptionsSubscriptionArray) ToGetOrganizationSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationSubscriptionsSubscriptionArrayOutput)
}

type GetOrganizationSubscriptionsSubscriptionOutput struct{ *pulumi.OutputState }

func (GetOrganizationSubscriptionsSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationSubscriptionsSubscription)(nil)).Elem()
}

func (o GetOrganizationSubscriptionsSubscriptionOutput) ToGetOrganizationSubscriptionsSubscriptionOutput() GetOrganizationSubscriptionsSubscriptionOutput {
	return o
}

func (o GetOrganizationSubscriptionsSubscriptionOutput) ToGetOrganizationSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionOutput {
	return o
}

// Currency details
func (o GetOrganizationSubscriptionsSubscriptionOutput) Currencies() GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) []GetOrganizationSubscriptionsSubscriptionCurrency {
		return v.Currencies
	}).(GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput)
}

// SPM internal Subscription ID
func (o GetOrganizationSubscriptionsSubscriptionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Customer friendly service name provided by PRG
func (o GetOrganizationSubscriptionsSubscriptionOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Status of the plan
func (o GetOrganizationSubscriptionsSubscriptionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Represents the date when the last service of the subscription ends
func (o GetOrganizationSubscriptionsSubscriptionOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

// Represents the date when the first service of the subscription was activated
func (o GetOrganizationSubscriptionsSubscriptionOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

// Total aggregate TCLV of all lines for the subscription including expired, active, and signed
func (o GetOrganizationSubscriptionsSubscriptionOutput) TotalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) *string { return v.TotalValue }).(pulumi.StringPtrOutput)
}

// Subscription Type i.e. IAAS,SAAS,PAAS
func (o GetOrganizationSubscriptionsSubscriptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscription) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetOrganizationSubscriptionsSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationSubscriptionsSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationSubscriptionsSubscription)(nil)).Elem()
}

func (o GetOrganizationSubscriptionsSubscriptionArrayOutput) ToGetOrganizationSubscriptionsSubscriptionArrayOutput() GetOrganizationSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetOrganizationSubscriptionsSubscriptionArrayOutput) ToGetOrganizationSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetOrganizationSubscriptionsSubscriptionArrayOutput) Index(i pulumi.IntInput) GetOrganizationSubscriptionsSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationSubscriptionsSubscription {
		return vs[0].([]GetOrganizationSubscriptionsSubscription)[vs[1].(int)]
	}).(GetOrganizationSubscriptionsSubscriptionOutput)
}

type GetOrganizationSubscriptionsSubscriptionCurrency struct {
	// Currency Code
	IsoCode *string `pulumi:"isoCode"`
	// Currency name
	Name *string `pulumi:"name"`
	// Standard Precision of the Currency
	StdPrecision *string `pulumi:"stdPrecision"`
}

// GetOrganizationSubscriptionsSubscriptionCurrencyInput is an input type that accepts GetOrganizationSubscriptionsSubscriptionCurrencyArgs and GetOrganizationSubscriptionsSubscriptionCurrencyOutput values.
// You can construct a concrete instance of `GetOrganizationSubscriptionsSubscriptionCurrencyInput` via:
//
//	GetOrganizationSubscriptionsSubscriptionCurrencyArgs{...}
type GetOrganizationSubscriptionsSubscriptionCurrencyInput interface {
	pulumi.Input

	ToGetOrganizationSubscriptionsSubscriptionCurrencyOutput() GetOrganizationSubscriptionsSubscriptionCurrencyOutput
	ToGetOrganizationSubscriptionsSubscriptionCurrencyOutputWithContext(context.Context) GetOrganizationSubscriptionsSubscriptionCurrencyOutput
}

type GetOrganizationSubscriptionsSubscriptionCurrencyArgs struct {
	// Currency Code
	IsoCode pulumi.StringPtrInput `pulumi:"isoCode"`
	// Currency name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Standard Precision of the Currency
	StdPrecision pulumi.StringPtrInput `pulumi:"stdPrecision"`
}

func (GetOrganizationSubscriptionsSubscriptionCurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (i GetOrganizationSubscriptionsSubscriptionCurrencyArgs) ToGetOrganizationSubscriptionsSubscriptionCurrencyOutput() GetOrganizationSubscriptionsSubscriptionCurrencyOutput {
	return i.ToGetOrganizationSubscriptionsSubscriptionCurrencyOutputWithContext(context.Background())
}

func (i GetOrganizationSubscriptionsSubscriptionCurrencyArgs) ToGetOrganizationSubscriptionsSubscriptionCurrencyOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionCurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationSubscriptionsSubscriptionCurrencyOutput)
}

// GetOrganizationSubscriptionsSubscriptionCurrencyArrayInput is an input type that accepts GetOrganizationSubscriptionsSubscriptionCurrencyArray and GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput values.
// You can construct a concrete instance of `GetOrganizationSubscriptionsSubscriptionCurrencyArrayInput` via:
//
//	GetOrganizationSubscriptionsSubscriptionCurrencyArray{ GetOrganizationSubscriptionsSubscriptionCurrencyArgs{...} }
type GetOrganizationSubscriptionsSubscriptionCurrencyArrayInput interface {
	pulumi.Input

	ToGetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput() GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput
	ToGetOrganizationSubscriptionsSubscriptionCurrencyArrayOutputWithContext(context.Context) GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput
}

type GetOrganizationSubscriptionsSubscriptionCurrencyArray []GetOrganizationSubscriptionsSubscriptionCurrencyInput

func (GetOrganizationSubscriptionsSubscriptionCurrencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (i GetOrganizationSubscriptionsSubscriptionCurrencyArray) ToGetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput() GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput {
	return i.ToGetOrganizationSubscriptionsSubscriptionCurrencyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationSubscriptionsSubscriptionCurrencyArray) ToGetOrganizationSubscriptionsSubscriptionCurrencyArrayOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput)
}

type GetOrganizationSubscriptionsSubscriptionCurrencyOutput struct{ *pulumi.OutputState }

func (GetOrganizationSubscriptionsSubscriptionCurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (o GetOrganizationSubscriptionsSubscriptionCurrencyOutput) ToGetOrganizationSubscriptionsSubscriptionCurrencyOutput() GetOrganizationSubscriptionsSubscriptionCurrencyOutput {
	return o
}

func (o GetOrganizationSubscriptionsSubscriptionCurrencyOutput) ToGetOrganizationSubscriptionsSubscriptionCurrencyOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionCurrencyOutput {
	return o
}

// Currency Code
func (o GetOrganizationSubscriptionsSubscriptionCurrencyOutput) IsoCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscriptionCurrency) *string { return v.IsoCode }).(pulumi.StringPtrOutput)
}

// Currency name
func (o GetOrganizationSubscriptionsSubscriptionCurrencyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscriptionCurrency) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Standard Precision of the Currency
func (o GetOrganizationSubscriptionsSubscriptionCurrencyOutput) StdPrecision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationSubscriptionsSubscriptionCurrency) *string { return v.StdPrecision }).(pulumi.StringPtrOutput)
}

type GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (o GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput) ToGetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput() GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput {
	return o
}

func (o GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput) ToGetOrganizationSubscriptionsSubscriptionCurrencyArrayOutputWithContext(ctx context.Context) GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput {
	return o
}

func (o GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput) Index(i pulumi.IntInput) GetOrganizationSubscriptionsSubscriptionCurrencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationSubscriptionsSubscriptionCurrency {
		return vs[0].([]GetOrganizationSubscriptionsSubscriptionCurrency)[vs[1].(int)]
	}).(GetOrganizationSubscriptionsSubscriptionCurrencyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationSubscriptionsFilterInput)(nil)).Elem(), GetOrganizationSubscriptionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationSubscriptionsFilterArrayInput)(nil)).Elem(), GetOrganizationSubscriptionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationSubscriptionsSubscriptionInput)(nil)).Elem(), GetOrganizationSubscriptionsSubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationSubscriptionsSubscriptionArrayInput)(nil)).Elem(), GetOrganizationSubscriptionsSubscriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationSubscriptionsSubscriptionCurrencyInput)(nil)).Elem(), GetOrganizationSubscriptionsSubscriptionCurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationSubscriptionsSubscriptionCurrencyArrayInput)(nil)).Elem(), GetOrganizationSubscriptionsSubscriptionCurrencyArray{})
	pulumi.RegisterOutputType(GetOrganizationSubscriptionsFilterOutput{})
	pulumi.RegisterOutputType(GetOrganizationSubscriptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationSubscriptionsSubscriptionOutput{})
	pulumi.RegisterOutputType(GetOrganizationSubscriptionsSubscriptionArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationSubscriptionsSubscriptionCurrencyOutput{})
	pulumi.RegisterOutputType(GetOrganizationSubscriptionsSubscriptionCurrencyArrayOutput{})
}
