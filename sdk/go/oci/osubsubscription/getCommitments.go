// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osubsubscription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Commitments in Oracle Cloud Infrastructure Osub Subscription service.
//
// # This list API returns all commitments for a particular Subscribed Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/osubsubscription"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := osubsubscription.GetCommitments(ctx, &osubsubscription.GetCommitmentsArgs{
//				CompartmentId:             compartmentId,
//				SubscribedServiceId:       testService.Id,
//				XOneGatewaySubscriptionId: pulumi.StringRef(commitmentXOneGatewaySubscriptionId),
//				XOneOriginRegion:          pulumi.StringRef(commitmentXOneOriginRegion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCommitments(ctx *pulumi.Context, args *GetCommitmentsArgs, opts ...pulumi.InvokeOption) (*GetCommitmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCommitmentsResult
	err := ctx.Invoke("oci:OsubSubscription/getCommitments:getCommitments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCommitments.
type GetCommitmentsArgs struct {
	// The OCID of the compartment.
	CompartmentId string                 `pulumi:"compartmentId"`
	Filters       []GetCommitmentsFilter `pulumi:"filters"`
	// This param is used to get the commitments for a particular subscribed service
	SubscribedServiceId string `pulumi:"subscribedServiceId"`
	// This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
	XOneGatewaySubscriptionId *string `pulumi:"xOneGatewaySubscriptionId"`
	// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
	XOneOriginRegion *string `pulumi:"xOneOriginRegion"`
}

// A collection of values returned by getCommitments.
type GetCommitmentsResult struct {
	// The list of commitments.
	Commitments   []GetCommitmentsCommitment `pulumi:"commitments"`
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetCommitmentsFilter     `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                        string  `pulumi:"id"`
	SubscribedServiceId       string  `pulumi:"subscribedServiceId"`
	XOneGatewaySubscriptionId *string `pulumi:"xOneGatewaySubscriptionId"`
	XOneOriginRegion          *string `pulumi:"xOneOriginRegion"`
}

func GetCommitmentsOutput(ctx *pulumi.Context, args GetCommitmentsOutputArgs, opts ...pulumi.InvokeOption) GetCommitmentsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCommitmentsResultOutput, error) {
			args := v.(GetCommitmentsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsubSubscription/getCommitments:getCommitments", args, GetCommitmentsResultOutput{}, options).(GetCommitmentsResultOutput), nil
		}).(GetCommitmentsResultOutput)
}

// A collection of arguments for invoking getCommitments.
type GetCommitmentsOutputArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput             `pulumi:"compartmentId"`
	Filters       GetCommitmentsFilterArrayInput `pulumi:"filters"`
	// This param is used to get the commitments for a particular subscribed service
	SubscribedServiceId pulumi.StringInput `pulumi:"subscribedServiceId"`
	// This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
	XOneGatewaySubscriptionId pulumi.StringPtrInput `pulumi:"xOneGatewaySubscriptionId"`
	// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
	XOneOriginRegion pulumi.StringPtrInput `pulumi:"xOneOriginRegion"`
}

func (GetCommitmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsArgs)(nil)).Elem()
}

// A collection of values returned by getCommitments.
type GetCommitmentsResultOutput struct{ *pulumi.OutputState }

func (GetCommitmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsResult)(nil)).Elem()
}

func (o GetCommitmentsResultOutput) ToGetCommitmentsResultOutput() GetCommitmentsResultOutput {
	return o
}

func (o GetCommitmentsResultOutput) ToGetCommitmentsResultOutputWithContext(ctx context.Context) GetCommitmentsResultOutput {
	return o
}

// The list of commitments.
func (o GetCommitmentsResultOutput) Commitments() GetCommitmentsCommitmentArrayOutput {
	return o.ApplyT(func(v GetCommitmentsResult) []GetCommitmentsCommitment { return v.Commitments }).(GetCommitmentsCommitmentArrayOutput)
}

func (o GetCommitmentsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetCommitmentsResultOutput) Filters() GetCommitmentsFilterArrayOutput {
	return o.ApplyT(func(v GetCommitmentsResult) []GetCommitmentsFilter { return v.Filters }).(GetCommitmentsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCommitmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCommitmentsResultOutput) SubscribedServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentsResult) string { return v.SubscribedServiceId }).(pulumi.StringOutput)
}

func (o GetCommitmentsResultOutput) XOneGatewaySubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsResult) *string { return v.XOneGatewaySubscriptionId }).(pulumi.StringPtrOutput)
}

func (o GetCommitmentsResultOutput) XOneOriginRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsResult) *string { return v.XOneOriginRegion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCommitmentsResultOutput{})
}
