// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osubsubscription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetCommitmentsCommitment struct {
	// Commitment available amount
	AvailableAmount *string `pulumi:"availableAmount"`
	// Funded Allocation line value example: 12000.00
	FundedAllocationValue *string `pulumi:"fundedAllocationValue"`
	// SPM internal Commitment ID
	Id *string `pulumi:"id"`
	// Commitment quantity
	Quantity *string `pulumi:"quantity"`
	// Commitment end date
	TimeEnd *string `pulumi:"timeEnd"`
	// Commitment start date
	TimeStart *string `pulumi:"timeStart"`
	// Commitment used amount
	UsedAmount *string `pulumi:"usedAmount"`
}

// GetCommitmentsCommitmentInput is an input type that accepts GetCommitmentsCommitmentArgs and GetCommitmentsCommitmentOutput values.
// You can construct a concrete instance of `GetCommitmentsCommitmentInput` via:
//
//	GetCommitmentsCommitmentArgs{...}
type GetCommitmentsCommitmentInput interface {
	pulumi.Input

	ToGetCommitmentsCommitmentOutput() GetCommitmentsCommitmentOutput
	ToGetCommitmentsCommitmentOutputWithContext(context.Context) GetCommitmentsCommitmentOutput
}

type GetCommitmentsCommitmentArgs struct {
	// Commitment available amount
	AvailableAmount pulumi.StringPtrInput `pulumi:"availableAmount"`
	// Funded Allocation line value example: 12000.00
	FundedAllocationValue pulumi.StringPtrInput `pulumi:"fundedAllocationValue"`
	// SPM internal Commitment ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Commitment quantity
	Quantity pulumi.StringPtrInput `pulumi:"quantity"`
	// Commitment end date
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// Commitment start date
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
	// Commitment used amount
	UsedAmount pulumi.StringPtrInput `pulumi:"usedAmount"`
}

func (GetCommitmentsCommitmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsCommitment)(nil)).Elem()
}

func (i GetCommitmentsCommitmentArgs) ToGetCommitmentsCommitmentOutput() GetCommitmentsCommitmentOutput {
	return i.ToGetCommitmentsCommitmentOutputWithContext(context.Background())
}

func (i GetCommitmentsCommitmentArgs) ToGetCommitmentsCommitmentOutputWithContext(ctx context.Context) GetCommitmentsCommitmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentsCommitmentOutput)
}

// GetCommitmentsCommitmentArrayInput is an input type that accepts GetCommitmentsCommitmentArray and GetCommitmentsCommitmentArrayOutput values.
// You can construct a concrete instance of `GetCommitmentsCommitmentArrayInput` via:
//
//	GetCommitmentsCommitmentArray{ GetCommitmentsCommitmentArgs{...} }
type GetCommitmentsCommitmentArrayInput interface {
	pulumi.Input

	ToGetCommitmentsCommitmentArrayOutput() GetCommitmentsCommitmentArrayOutput
	ToGetCommitmentsCommitmentArrayOutputWithContext(context.Context) GetCommitmentsCommitmentArrayOutput
}

type GetCommitmentsCommitmentArray []GetCommitmentsCommitmentInput

func (GetCommitmentsCommitmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentsCommitment)(nil)).Elem()
}

func (i GetCommitmentsCommitmentArray) ToGetCommitmentsCommitmentArrayOutput() GetCommitmentsCommitmentArrayOutput {
	return i.ToGetCommitmentsCommitmentArrayOutputWithContext(context.Background())
}

func (i GetCommitmentsCommitmentArray) ToGetCommitmentsCommitmentArrayOutputWithContext(ctx context.Context) GetCommitmentsCommitmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentsCommitmentArrayOutput)
}

type GetCommitmentsCommitmentOutput struct{ *pulumi.OutputState }

func (GetCommitmentsCommitmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsCommitment)(nil)).Elem()
}

func (o GetCommitmentsCommitmentOutput) ToGetCommitmentsCommitmentOutput() GetCommitmentsCommitmentOutput {
	return o
}

func (o GetCommitmentsCommitmentOutput) ToGetCommitmentsCommitmentOutputWithContext(ctx context.Context) GetCommitmentsCommitmentOutput {
	return o
}

// Commitment available amount
func (o GetCommitmentsCommitmentOutput) AvailableAmount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsCommitment) *string { return v.AvailableAmount }).(pulumi.StringPtrOutput)
}

// Funded Allocation line value example: 12000.00
func (o GetCommitmentsCommitmentOutput) FundedAllocationValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsCommitment) *string { return v.FundedAllocationValue }).(pulumi.StringPtrOutput)
}

// SPM internal Commitment ID
func (o GetCommitmentsCommitmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsCommitment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Commitment quantity
func (o GetCommitmentsCommitmentOutput) Quantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsCommitment) *string { return v.Quantity }).(pulumi.StringPtrOutput)
}

// Commitment end date
func (o GetCommitmentsCommitmentOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsCommitment) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

// Commitment start date
func (o GetCommitmentsCommitmentOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsCommitment) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

// Commitment used amount
func (o GetCommitmentsCommitmentOutput) UsedAmount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentsCommitment) *string { return v.UsedAmount }).(pulumi.StringPtrOutput)
}

type GetCommitmentsCommitmentArrayOutput struct{ *pulumi.OutputState }

func (GetCommitmentsCommitmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentsCommitment)(nil)).Elem()
}

func (o GetCommitmentsCommitmentArrayOutput) ToGetCommitmentsCommitmentArrayOutput() GetCommitmentsCommitmentArrayOutput {
	return o
}

func (o GetCommitmentsCommitmentArrayOutput) ToGetCommitmentsCommitmentArrayOutputWithContext(ctx context.Context) GetCommitmentsCommitmentArrayOutput {
	return o
}

func (o GetCommitmentsCommitmentArrayOutput) Index(i pulumi.IntInput) GetCommitmentsCommitmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommitmentsCommitment {
		return vs[0].([]GetCommitmentsCommitment)[vs[1].(int)]
	}).(GetCommitmentsCommitmentOutput)
}

type GetCommitmentsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCommitmentsFilterInput is an input type that accepts GetCommitmentsFilterArgs and GetCommitmentsFilterOutput values.
// You can construct a concrete instance of `GetCommitmentsFilterInput` via:
//
//	GetCommitmentsFilterArgs{...}
type GetCommitmentsFilterInput interface {
	pulumi.Input

	ToGetCommitmentsFilterOutput() GetCommitmentsFilterOutput
	ToGetCommitmentsFilterOutputWithContext(context.Context) GetCommitmentsFilterOutput
}

type GetCommitmentsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCommitmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsFilter)(nil)).Elem()
}

func (i GetCommitmentsFilterArgs) ToGetCommitmentsFilterOutput() GetCommitmentsFilterOutput {
	return i.ToGetCommitmentsFilterOutputWithContext(context.Background())
}

func (i GetCommitmentsFilterArgs) ToGetCommitmentsFilterOutputWithContext(ctx context.Context) GetCommitmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentsFilterOutput)
}

// GetCommitmentsFilterArrayInput is an input type that accepts GetCommitmentsFilterArray and GetCommitmentsFilterArrayOutput values.
// You can construct a concrete instance of `GetCommitmentsFilterArrayInput` via:
//
//	GetCommitmentsFilterArray{ GetCommitmentsFilterArgs{...} }
type GetCommitmentsFilterArrayInput interface {
	pulumi.Input

	ToGetCommitmentsFilterArrayOutput() GetCommitmentsFilterArrayOutput
	ToGetCommitmentsFilterArrayOutputWithContext(context.Context) GetCommitmentsFilterArrayOutput
}

type GetCommitmentsFilterArray []GetCommitmentsFilterInput

func (GetCommitmentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentsFilter)(nil)).Elem()
}

func (i GetCommitmentsFilterArray) ToGetCommitmentsFilterArrayOutput() GetCommitmentsFilterArrayOutput {
	return i.ToGetCommitmentsFilterArrayOutputWithContext(context.Background())
}

func (i GetCommitmentsFilterArray) ToGetCommitmentsFilterArrayOutputWithContext(ctx context.Context) GetCommitmentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentsFilterArrayOutput)
}

type GetCommitmentsFilterOutput struct{ *pulumi.OutputState }

func (GetCommitmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentsFilter)(nil)).Elem()
}

func (o GetCommitmentsFilterOutput) ToGetCommitmentsFilterOutput() GetCommitmentsFilterOutput {
	return o
}

func (o GetCommitmentsFilterOutput) ToGetCommitmentsFilterOutputWithContext(ctx context.Context) GetCommitmentsFilterOutput {
	return o
}

func (o GetCommitmentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCommitmentsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCommitmentsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCommitmentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCommitmentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCommitmentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCommitmentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentsFilter)(nil)).Elem()
}

func (o GetCommitmentsFilterArrayOutput) ToGetCommitmentsFilterArrayOutput() GetCommitmentsFilterArrayOutput {
	return o
}

func (o GetCommitmentsFilterArrayOutput) ToGetCommitmentsFilterArrayOutputWithContext(ctx context.Context) GetCommitmentsFilterArrayOutput {
	return o
}

func (o GetCommitmentsFilterArrayOutput) Index(i pulumi.IntInput) GetCommitmentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommitmentsFilter {
		return vs[0].([]GetCommitmentsFilter)[vs[1].(int)]
	}).(GetCommitmentsFilterOutput)
}

type GetRatecardsFilter struct {
	// Product name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetRatecardsFilterInput is an input type that accepts GetRatecardsFilterArgs and GetRatecardsFilterOutput values.
// You can construct a concrete instance of `GetRatecardsFilterInput` via:
//
//	GetRatecardsFilterArgs{...}
type GetRatecardsFilterInput interface {
	pulumi.Input

	ToGetRatecardsFilterOutput() GetRatecardsFilterOutput
	ToGetRatecardsFilterOutputWithContext(context.Context) GetRatecardsFilterOutput
}

type GetRatecardsFilterArgs struct {
	// Product name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRatecardsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsFilter)(nil)).Elem()
}

func (i GetRatecardsFilterArgs) ToGetRatecardsFilterOutput() GetRatecardsFilterOutput {
	return i.ToGetRatecardsFilterOutputWithContext(context.Background())
}

func (i GetRatecardsFilterArgs) ToGetRatecardsFilterOutputWithContext(ctx context.Context) GetRatecardsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsFilterOutput)
}

// GetRatecardsFilterArrayInput is an input type that accepts GetRatecardsFilterArray and GetRatecardsFilterArrayOutput values.
// You can construct a concrete instance of `GetRatecardsFilterArrayInput` via:
//
//	GetRatecardsFilterArray{ GetRatecardsFilterArgs{...} }
type GetRatecardsFilterArrayInput interface {
	pulumi.Input

	ToGetRatecardsFilterArrayOutput() GetRatecardsFilterArrayOutput
	ToGetRatecardsFilterArrayOutputWithContext(context.Context) GetRatecardsFilterArrayOutput
}

type GetRatecardsFilterArray []GetRatecardsFilterInput

func (GetRatecardsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsFilter)(nil)).Elem()
}

func (i GetRatecardsFilterArray) ToGetRatecardsFilterArrayOutput() GetRatecardsFilterArrayOutput {
	return i.ToGetRatecardsFilterArrayOutputWithContext(context.Background())
}

func (i GetRatecardsFilterArray) ToGetRatecardsFilterArrayOutputWithContext(ctx context.Context) GetRatecardsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsFilterArrayOutput)
}

type GetRatecardsFilterOutput struct{ *pulumi.OutputState }

func (GetRatecardsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsFilter)(nil)).Elem()
}

func (o GetRatecardsFilterOutput) ToGetRatecardsFilterOutput() GetRatecardsFilterOutput {
	return o
}

func (o GetRatecardsFilterOutput) ToGetRatecardsFilterOutputWithContext(ctx context.Context) GetRatecardsFilterOutput {
	return o
}

// Product name
func (o GetRatecardsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRatecardsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRatecardsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRatecardsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetRatecardsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRatecardsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRatecardsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRatecardsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsFilter)(nil)).Elem()
}

func (o GetRatecardsFilterArrayOutput) ToGetRatecardsFilterArrayOutput() GetRatecardsFilterArrayOutput {
	return o
}

func (o GetRatecardsFilterArrayOutput) ToGetRatecardsFilterArrayOutputWithContext(ctx context.Context) GetRatecardsFilterArrayOutput {
	return o
}

func (o GetRatecardsFilterArrayOutput) Index(i pulumi.IntInput) GetRatecardsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRatecardsFilter {
		return vs[0].([]GetRatecardsFilter)[vs[1].(int)]
	}).(GetRatecardsFilterOutput)
}

type GetRatecardsRateCard struct {
	// Currency details
	Currencies []GetRatecardsRateCardCurrency `pulumi:"currencies"`
	// Rate card discretionary discount percentage
	DiscretionaryDiscountPercentage *string `pulumi:"discretionaryDiscountPercentage"`
	// Rate card price tier flag
	IsTier *bool `pulumi:"isTier"`
	// Rate card tier net unit price
	NetUnitPrice *string `pulumi:"netUnitPrice"`
	// Rate card tier overage price
	OveragePrice *string `pulumi:"overagePrice"`
	// Product description
	Products []GetRatecardsRateCardProduct `pulumi:"products"`
	// List of tiered rate card prices
	RateCardTiers []GetRatecardsRateCardRateCardTier `pulumi:"rateCardTiers"`
	// Rate card end date
	TimeEnd *string `pulumi:"timeEnd"`
	// Rate card start date
	TimeStart *string `pulumi:"timeStart"`
}

// GetRatecardsRateCardInput is an input type that accepts GetRatecardsRateCardArgs and GetRatecardsRateCardOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardInput` via:
//
//	GetRatecardsRateCardArgs{...}
type GetRatecardsRateCardInput interface {
	pulumi.Input

	ToGetRatecardsRateCardOutput() GetRatecardsRateCardOutput
	ToGetRatecardsRateCardOutputWithContext(context.Context) GetRatecardsRateCardOutput
}

type GetRatecardsRateCardArgs struct {
	// Currency details
	Currencies GetRatecardsRateCardCurrencyArrayInput `pulumi:"currencies"`
	// Rate card discretionary discount percentage
	DiscretionaryDiscountPercentage pulumi.StringPtrInput `pulumi:"discretionaryDiscountPercentage"`
	// Rate card price tier flag
	IsTier pulumi.BoolPtrInput `pulumi:"isTier"`
	// Rate card tier net unit price
	NetUnitPrice pulumi.StringPtrInput `pulumi:"netUnitPrice"`
	// Rate card tier overage price
	OveragePrice pulumi.StringPtrInput `pulumi:"overagePrice"`
	// Product description
	Products GetRatecardsRateCardProductArrayInput `pulumi:"products"`
	// List of tiered rate card prices
	RateCardTiers GetRatecardsRateCardRateCardTierArrayInput `pulumi:"rateCardTiers"`
	// Rate card end date
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// Rate card start date
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
}

func (GetRatecardsRateCardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCard)(nil)).Elem()
}

func (i GetRatecardsRateCardArgs) ToGetRatecardsRateCardOutput() GetRatecardsRateCardOutput {
	return i.ToGetRatecardsRateCardOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardArgs) ToGetRatecardsRateCardOutputWithContext(ctx context.Context) GetRatecardsRateCardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardOutput)
}

// GetRatecardsRateCardArrayInput is an input type that accepts GetRatecardsRateCardArray and GetRatecardsRateCardArrayOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardArrayInput` via:
//
//	GetRatecardsRateCardArray{ GetRatecardsRateCardArgs{...} }
type GetRatecardsRateCardArrayInput interface {
	pulumi.Input

	ToGetRatecardsRateCardArrayOutput() GetRatecardsRateCardArrayOutput
	ToGetRatecardsRateCardArrayOutputWithContext(context.Context) GetRatecardsRateCardArrayOutput
}

type GetRatecardsRateCardArray []GetRatecardsRateCardInput

func (GetRatecardsRateCardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCard)(nil)).Elem()
}

func (i GetRatecardsRateCardArray) ToGetRatecardsRateCardArrayOutput() GetRatecardsRateCardArrayOutput {
	return i.ToGetRatecardsRateCardArrayOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardArray) ToGetRatecardsRateCardArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardArrayOutput)
}

type GetRatecardsRateCardOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCard)(nil)).Elem()
}

func (o GetRatecardsRateCardOutput) ToGetRatecardsRateCardOutput() GetRatecardsRateCardOutput {
	return o
}

func (o GetRatecardsRateCardOutput) ToGetRatecardsRateCardOutputWithContext(ctx context.Context) GetRatecardsRateCardOutput {
	return o
}

// Currency details
func (o GetRatecardsRateCardOutput) Currencies() GetRatecardsRateCardCurrencyArrayOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) []GetRatecardsRateCardCurrency { return v.Currencies }).(GetRatecardsRateCardCurrencyArrayOutput)
}

// Rate card discretionary discount percentage
func (o GetRatecardsRateCardOutput) DiscretionaryDiscountPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) *string { return v.DiscretionaryDiscountPercentage }).(pulumi.StringPtrOutput)
}

// Rate card price tier flag
func (o GetRatecardsRateCardOutput) IsTier() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) *bool { return v.IsTier }).(pulumi.BoolPtrOutput)
}

// Rate card tier net unit price
func (o GetRatecardsRateCardOutput) NetUnitPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) *string { return v.NetUnitPrice }).(pulumi.StringPtrOutput)
}

// Rate card tier overage price
func (o GetRatecardsRateCardOutput) OveragePrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) *string { return v.OveragePrice }).(pulumi.StringPtrOutput)
}

// Product description
func (o GetRatecardsRateCardOutput) Products() GetRatecardsRateCardProductArrayOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) []GetRatecardsRateCardProduct { return v.Products }).(GetRatecardsRateCardProductArrayOutput)
}

// List of tiered rate card prices
func (o GetRatecardsRateCardOutput) RateCardTiers() GetRatecardsRateCardRateCardTierArrayOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) []GetRatecardsRateCardRateCardTier { return v.RateCardTiers }).(GetRatecardsRateCardRateCardTierArrayOutput)
}

// Rate card end date
func (o GetRatecardsRateCardOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

// Rate card start date
func (o GetRatecardsRateCardOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCard) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

type GetRatecardsRateCardArrayOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCard)(nil)).Elem()
}

func (o GetRatecardsRateCardArrayOutput) ToGetRatecardsRateCardArrayOutput() GetRatecardsRateCardArrayOutput {
	return o
}

func (o GetRatecardsRateCardArrayOutput) ToGetRatecardsRateCardArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardArrayOutput {
	return o
}

func (o GetRatecardsRateCardArrayOutput) Index(i pulumi.IntInput) GetRatecardsRateCardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRatecardsRateCard {
		return vs[0].([]GetRatecardsRateCard)[vs[1].(int)]
	}).(GetRatecardsRateCardOutput)
}

type GetRatecardsRateCardCurrency struct {
	// Currency Code
	IsoCode *string `pulumi:"isoCode"`
	// Product name
	Name *string `pulumi:"name"`
	// Standard Precision of the Currency
	StdPrecision *string `pulumi:"stdPrecision"`
}

// GetRatecardsRateCardCurrencyInput is an input type that accepts GetRatecardsRateCardCurrencyArgs and GetRatecardsRateCardCurrencyOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardCurrencyInput` via:
//
//	GetRatecardsRateCardCurrencyArgs{...}
type GetRatecardsRateCardCurrencyInput interface {
	pulumi.Input

	ToGetRatecardsRateCardCurrencyOutput() GetRatecardsRateCardCurrencyOutput
	ToGetRatecardsRateCardCurrencyOutputWithContext(context.Context) GetRatecardsRateCardCurrencyOutput
}

type GetRatecardsRateCardCurrencyArgs struct {
	// Currency Code
	IsoCode pulumi.StringPtrInput `pulumi:"isoCode"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Standard Precision of the Currency
	StdPrecision pulumi.StringPtrInput `pulumi:"stdPrecision"`
}

func (GetRatecardsRateCardCurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCardCurrency)(nil)).Elem()
}

func (i GetRatecardsRateCardCurrencyArgs) ToGetRatecardsRateCardCurrencyOutput() GetRatecardsRateCardCurrencyOutput {
	return i.ToGetRatecardsRateCardCurrencyOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardCurrencyArgs) ToGetRatecardsRateCardCurrencyOutputWithContext(ctx context.Context) GetRatecardsRateCardCurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardCurrencyOutput)
}

// GetRatecardsRateCardCurrencyArrayInput is an input type that accepts GetRatecardsRateCardCurrencyArray and GetRatecardsRateCardCurrencyArrayOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardCurrencyArrayInput` via:
//
//	GetRatecardsRateCardCurrencyArray{ GetRatecardsRateCardCurrencyArgs{...} }
type GetRatecardsRateCardCurrencyArrayInput interface {
	pulumi.Input

	ToGetRatecardsRateCardCurrencyArrayOutput() GetRatecardsRateCardCurrencyArrayOutput
	ToGetRatecardsRateCardCurrencyArrayOutputWithContext(context.Context) GetRatecardsRateCardCurrencyArrayOutput
}

type GetRatecardsRateCardCurrencyArray []GetRatecardsRateCardCurrencyInput

func (GetRatecardsRateCardCurrencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCardCurrency)(nil)).Elem()
}

func (i GetRatecardsRateCardCurrencyArray) ToGetRatecardsRateCardCurrencyArrayOutput() GetRatecardsRateCardCurrencyArrayOutput {
	return i.ToGetRatecardsRateCardCurrencyArrayOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardCurrencyArray) ToGetRatecardsRateCardCurrencyArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardCurrencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardCurrencyArrayOutput)
}

type GetRatecardsRateCardCurrencyOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardCurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCardCurrency)(nil)).Elem()
}

func (o GetRatecardsRateCardCurrencyOutput) ToGetRatecardsRateCardCurrencyOutput() GetRatecardsRateCardCurrencyOutput {
	return o
}

func (o GetRatecardsRateCardCurrencyOutput) ToGetRatecardsRateCardCurrencyOutputWithContext(ctx context.Context) GetRatecardsRateCardCurrencyOutput {
	return o
}

// Currency Code
func (o GetRatecardsRateCardCurrencyOutput) IsoCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardCurrency) *string { return v.IsoCode }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetRatecardsRateCardCurrencyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardCurrency) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Standard Precision of the Currency
func (o GetRatecardsRateCardCurrencyOutput) StdPrecision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardCurrency) *string { return v.StdPrecision }).(pulumi.StringPtrOutput)
}

type GetRatecardsRateCardCurrencyArrayOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardCurrencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCardCurrency)(nil)).Elem()
}

func (o GetRatecardsRateCardCurrencyArrayOutput) ToGetRatecardsRateCardCurrencyArrayOutput() GetRatecardsRateCardCurrencyArrayOutput {
	return o
}

func (o GetRatecardsRateCardCurrencyArrayOutput) ToGetRatecardsRateCardCurrencyArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardCurrencyArrayOutput {
	return o
}

func (o GetRatecardsRateCardCurrencyArrayOutput) Index(i pulumi.IntInput) GetRatecardsRateCardCurrencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRatecardsRateCardCurrency {
		return vs[0].([]GetRatecardsRateCardCurrency)[vs[1].(int)]
	}).(GetRatecardsRateCardCurrencyOutput)
}

type GetRatecardsRateCardProduct struct {
	// Metered service billing category
	BillingCategory *string `pulumi:"billingCategory"`
	// Product name
	Name *string `pulumi:"name"`
	// This param is used to get the rate card(s) filterd by the partNumber
	PartNumber *string `pulumi:"partNumber"`
	// Product category
	ProductCategory *string `pulumi:"productCategory"`
	// Rate card part type of Product
	UcmRateCardPartType *string `pulumi:"ucmRateCardPartType"`
	// Unit of measure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetRatecardsRateCardProductInput is an input type that accepts GetRatecardsRateCardProductArgs and GetRatecardsRateCardProductOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardProductInput` via:
//
//	GetRatecardsRateCardProductArgs{...}
type GetRatecardsRateCardProductInput interface {
	pulumi.Input

	ToGetRatecardsRateCardProductOutput() GetRatecardsRateCardProductOutput
	ToGetRatecardsRateCardProductOutputWithContext(context.Context) GetRatecardsRateCardProductOutput
}

type GetRatecardsRateCardProductArgs struct {
	// Metered service billing category
	BillingCategory pulumi.StringPtrInput `pulumi:"billingCategory"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// This param is used to get the rate card(s) filterd by the partNumber
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product category
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// Rate card part type of Product
	UcmRateCardPartType pulumi.StringPtrInput `pulumi:"ucmRateCardPartType"`
	// Unit of measure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetRatecardsRateCardProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCardProduct)(nil)).Elem()
}

func (i GetRatecardsRateCardProductArgs) ToGetRatecardsRateCardProductOutput() GetRatecardsRateCardProductOutput {
	return i.ToGetRatecardsRateCardProductOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardProductArgs) ToGetRatecardsRateCardProductOutputWithContext(ctx context.Context) GetRatecardsRateCardProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardProductOutput)
}

// GetRatecardsRateCardProductArrayInput is an input type that accepts GetRatecardsRateCardProductArray and GetRatecardsRateCardProductArrayOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardProductArrayInput` via:
//
//	GetRatecardsRateCardProductArray{ GetRatecardsRateCardProductArgs{...} }
type GetRatecardsRateCardProductArrayInput interface {
	pulumi.Input

	ToGetRatecardsRateCardProductArrayOutput() GetRatecardsRateCardProductArrayOutput
	ToGetRatecardsRateCardProductArrayOutputWithContext(context.Context) GetRatecardsRateCardProductArrayOutput
}

type GetRatecardsRateCardProductArray []GetRatecardsRateCardProductInput

func (GetRatecardsRateCardProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCardProduct)(nil)).Elem()
}

func (i GetRatecardsRateCardProductArray) ToGetRatecardsRateCardProductArrayOutput() GetRatecardsRateCardProductArrayOutput {
	return i.ToGetRatecardsRateCardProductArrayOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardProductArray) ToGetRatecardsRateCardProductArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardProductArrayOutput)
}

type GetRatecardsRateCardProductOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCardProduct)(nil)).Elem()
}

func (o GetRatecardsRateCardProductOutput) ToGetRatecardsRateCardProductOutput() GetRatecardsRateCardProductOutput {
	return o
}

func (o GetRatecardsRateCardProductOutput) ToGetRatecardsRateCardProductOutputWithContext(ctx context.Context) GetRatecardsRateCardProductOutput {
	return o
}

// Metered service billing category
func (o GetRatecardsRateCardProductOutput) BillingCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardProduct) *string { return v.BillingCategory }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetRatecardsRateCardProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardProduct) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This param is used to get the rate card(s) filterd by the partNumber
func (o GetRatecardsRateCardProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardProduct) *string { return v.PartNumber }).(pulumi.StringPtrOutput)
}

// Product category
func (o GetRatecardsRateCardProductOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardProduct) *string { return v.ProductCategory }).(pulumi.StringPtrOutput)
}

// Rate card part type of Product
func (o GetRatecardsRateCardProductOutput) UcmRateCardPartType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardProduct) *string { return v.UcmRateCardPartType }).(pulumi.StringPtrOutput)
}

// Unit of measure
func (o GetRatecardsRateCardProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardProduct) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

type GetRatecardsRateCardProductArrayOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCardProduct)(nil)).Elem()
}

func (o GetRatecardsRateCardProductArrayOutput) ToGetRatecardsRateCardProductArrayOutput() GetRatecardsRateCardProductArrayOutput {
	return o
}

func (o GetRatecardsRateCardProductArrayOutput) ToGetRatecardsRateCardProductArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardProductArrayOutput {
	return o
}

func (o GetRatecardsRateCardProductArrayOutput) Index(i pulumi.IntInput) GetRatecardsRateCardProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRatecardsRateCardProduct {
		return vs[0].([]GetRatecardsRateCardProduct)[vs[1].(int)]
	}).(GetRatecardsRateCardProductOutput)
}

type GetRatecardsRateCardRateCardTier struct {
	// Rate card tier net unit price
	NetUnitPrice *string `pulumi:"netUnitPrice"`
	// Rate card tier overage price
	OveragePrice *string `pulumi:"overagePrice"`
	// Rate card tier quantity range
	UpToQuantity *string `pulumi:"upToQuantity"`
}

// GetRatecardsRateCardRateCardTierInput is an input type that accepts GetRatecardsRateCardRateCardTierArgs and GetRatecardsRateCardRateCardTierOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardRateCardTierInput` via:
//
//	GetRatecardsRateCardRateCardTierArgs{...}
type GetRatecardsRateCardRateCardTierInput interface {
	pulumi.Input

	ToGetRatecardsRateCardRateCardTierOutput() GetRatecardsRateCardRateCardTierOutput
	ToGetRatecardsRateCardRateCardTierOutputWithContext(context.Context) GetRatecardsRateCardRateCardTierOutput
}

type GetRatecardsRateCardRateCardTierArgs struct {
	// Rate card tier net unit price
	NetUnitPrice pulumi.StringPtrInput `pulumi:"netUnitPrice"`
	// Rate card tier overage price
	OveragePrice pulumi.StringPtrInput `pulumi:"overagePrice"`
	// Rate card tier quantity range
	UpToQuantity pulumi.StringPtrInput `pulumi:"upToQuantity"`
}

func (GetRatecardsRateCardRateCardTierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCardRateCardTier)(nil)).Elem()
}

func (i GetRatecardsRateCardRateCardTierArgs) ToGetRatecardsRateCardRateCardTierOutput() GetRatecardsRateCardRateCardTierOutput {
	return i.ToGetRatecardsRateCardRateCardTierOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardRateCardTierArgs) ToGetRatecardsRateCardRateCardTierOutputWithContext(ctx context.Context) GetRatecardsRateCardRateCardTierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardRateCardTierOutput)
}

// GetRatecardsRateCardRateCardTierArrayInput is an input type that accepts GetRatecardsRateCardRateCardTierArray and GetRatecardsRateCardRateCardTierArrayOutput values.
// You can construct a concrete instance of `GetRatecardsRateCardRateCardTierArrayInput` via:
//
//	GetRatecardsRateCardRateCardTierArray{ GetRatecardsRateCardRateCardTierArgs{...} }
type GetRatecardsRateCardRateCardTierArrayInput interface {
	pulumi.Input

	ToGetRatecardsRateCardRateCardTierArrayOutput() GetRatecardsRateCardRateCardTierArrayOutput
	ToGetRatecardsRateCardRateCardTierArrayOutputWithContext(context.Context) GetRatecardsRateCardRateCardTierArrayOutput
}

type GetRatecardsRateCardRateCardTierArray []GetRatecardsRateCardRateCardTierInput

func (GetRatecardsRateCardRateCardTierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCardRateCardTier)(nil)).Elem()
}

func (i GetRatecardsRateCardRateCardTierArray) ToGetRatecardsRateCardRateCardTierArrayOutput() GetRatecardsRateCardRateCardTierArrayOutput {
	return i.ToGetRatecardsRateCardRateCardTierArrayOutputWithContext(context.Background())
}

func (i GetRatecardsRateCardRateCardTierArray) ToGetRatecardsRateCardRateCardTierArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardRateCardTierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRatecardsRateCardRateCardTierArrayOutput)
}

type GetRatecardsRateCardRateCardTierOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardRateCardTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRatecardsRateCardRateCardTier)(nil)).Elem()
}

func (o GetRatecardsRateCardRateCardTierOutput) ToGetRatecardsRateCardRateCardTierOutput() GetRatecardsRateCardRateCardTierOutput {
	return o
}

func (o GetRatecardsRateCardRateCardTierOutput) ToGetRatecardsRateCardRateCardTierOutputWithContext(ctx context.Context) GetRatecardsRateCardRateCardTierOutput {
	return o
}

// Rate card tier net unit price
func (o GetRatecardsRateCardRateCardTierOutput) NetUnitPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardRateCardTier) *string { return v.NetUnitPrice }).(pulumi.StringPtrOutput)
}

// Rate card tier overage price
func (o GetRatecardsRateCardRateCardTierOutput) OveragePrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardRateCardTier) *string { return v.OveragePrice }).(pulumi.StringPtrOutput)
}

// Rate card tier quantity range
func (o GetRatecardsRateCardRateCardTierOutput) UpToQuantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRatecardsRateCardRateCardTier) *string { return v.UpToQuantity }).(pulumi.StringPtrOutput)
}

type GetRatecardsRateCardRateCardTierArrayOutput struct{ *pulumi.OutputState }

func (GetRatecardsRateCardRateCardTierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRatecardsRateCardRateCardTier)(nil)).Elem()
}

func (o GetRatecardsRateCardRateCardTierArrayOutput) ToGetRatecardsRateCardRateCardTierArrayOutput() GetRatecardsRateCardRateCardTierArrayOutput {
	return o
}

func (o GetRatecardsRateCardRateCardTierArrayOutput) ToGetRatecardsRateCardRateCardTierArrayOutputWithContext(ctx context.Context) GetRatecardsRateCardRateCardTierArrayOutput {
	return o
}

func (o GetRatecardsRateCardRateCardTierArrayOutput) Index(i pulumi.IntInput) GetRatecardsRateCardRateCardTierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRatecardsRateCardRateCardTier {
		return vs[0].([]GetRatecardsRateCardRateCardTier)[vs[1].(int)]
	}).(GetRatecardsRateCardRateCardTierOutput)
}

type GetSubscriptionsFilter struct {
	// Product name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSubscriptionsFilterInput is an input type that accepts GetSubscriptionsFilterArgs and GetSubscriptionsFilterOutput values.
// You can construct a concrete instance of `GetSubscriptionsFilterInput` via:
//
//	GetSubscriptionsFilterArgs{...}
type GetSubscriptionsFilterInput interface {
	pulumi.Input

	ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput
	ToGetSubscriptionsFilterOutputWithContext(context.Context) GetSubscriptionsFilterOutput
}

type GetSubscriptionsFilterArgs struct {
	// Product name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubscriptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsFilter)(nil)).Elem()
}

func (i GetSubscriptionsFilterArgs) ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput {
	return i.ToGetSubscriptionsFilterOutputWithContext(context.Background())
}

func (i GetSubscriptionsFilterArgs) ToGetSubscriptionsFilterOutputWithContext(ctx context.Context) GetSubscriptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsFilterOutput)
}

// GetSubscriptionsFilterArrayInput is an input type that accepts GetSubscriptionsFilterArray and GetSubscriptionsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsFilterArrayInput` via:
//
//	GetSubscriptionsFilterArray{ GetSubscriptionsFilterArgs{...} }
type GetSubscriptionsFilterArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput
	ToGetSubscriptionsFilterArrayOutputWithContext(context.Context) GetSubscriptionsFilterArrayOutput
}

type GetSubscriptionsFilterArray []GetSubscriptionsFilterInput

func (GetSubscriptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsFilter)(nil)).Elem()
}

func (i GetSubscriptionsFilterArray) ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput {
	return i.ToGetSubscriptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsFilterArray) ToGetSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsFilterArrayOutput)
}

type GetSubscriptionsFilterOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsFilter)(nil)).Elem()
}

func (o GetSubscriptionsFilterOutput) ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput {
	return o
}

func (o GetSubscriptionsFilterOutput) ToGetSubscriptionsFilterOutputWithContext(ctx context.Context) GetSubscriptionsFilterOutput {
	return o
}

// Product name
func (o GetSubscriptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubscriptionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSubscriptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubscriptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsFilter)(nil)).Elem()
}

func (o GetSubscriptionsFilterArrayOutput) ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionsFilterArrayOutput) ToGetSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionsFilterArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsFilter {
		return vs[0].([]GetSubscriptionsFilter)[vs[1].(int)]
	}).(GetSubscriptionsFilterOutput)
}

type GetSubscriptionsSubscription struct {
	// Currency details
	Currencies []GetSubscriptionsSubscriptionCurrency `pulumi:"currencies"`
	// Customer friendly service name provided by PRG
	ServiceName *string `pulumi:"serviceName"`
	// Subscribed service status
	Status *string `pulumi:"status"`
	// List of Subscribed Services of the plan
	SubscribedServices []GetSubscriptionsSubscriptionSubscribedService `pulumi:"subscribedServices"`
	// Represents the date when the last service of the subscription ends
	TimeEnd *string `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart *string `pulumi:"timeStart"`
}

// GetSubscriptionsSubscriptionInput is an input type that accepts GetSubscriptionsSubscriptionArgs and GetSubscriptionsSubscriptionOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionInput` via:
//
//	GetSubscriptionsSubscriptionArgs{...}
type GetSubscriptionsSubscriptionInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput
	ToGetSubscriptionsSubscriptionOutputWithContext(context.Context) GetSubscriptionsSubscriptionOutput
}

type GetSubscriptionsSubscriptionArgs struct {
	// Currency details
	Currencies GetSubscriptionsSubscriptionCurrencyArrayInput `pulumi:"currencies"`
	// Customer friendly service name provided by PRG
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Subscribed service status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// List of Subscribed Services of the plan
	SubscribedServices GetSubscriptionsSubscriptionSubscribedServiceArrayInput `pulumi:"subscribedServices"`
	// Represents the date when the last service of the subscription ends
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
}

func (GetSubscriptionsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return i.ToGetSubscriptionsSubscriptionOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionOutput)
}

// GetSubscriptionsSubscriptionArrayInput is an input type that accepts GetSubscriptionsSubscriptionArray and GetSubscriptionsSubscriptionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionArrayInput` via:
//
//	GetSubscriptionsSubscriptionArray{ GetSubscriptionsSubscriptionArgs{...} }
type GetSubscriptionsSubscriptionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput
	ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionArrayOutput
}

type GetSubscriptionsSubscriptionArray []GetSubscriptionsSubscriptionInput

func (GetSubscriptionsSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return i.ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionArrayOutput)
}

type GetSubscriptionsSubscriptionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return o
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return o
}

// Currency details
func (o GetSubscriptionsSubscriptionOutput) Currencies() GetSubscriptionsSubscriptionCurrencyArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) []GetSubscriptionsSubscriptionCurrency { return v.Currencies }).(GetSubscriptionsSubscriptionCurrencyArrayOutput)
}

// Customer friendly service name provided by PRG
func (o GetSubscriptionsSubscriptionOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Subscribed service status
func (o GetSubscriptionsSubscriptionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// List of Subscribed Services of the plan
func (o GetSubscriptionsSubscriptionOutput) SubscribedServices() GetSubscriptionsSubscriptionSubscribedServiceArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) []GetSubscriptionsSubscriptionSubscribedService {
		return v.SubscribedServices
	}).(GetSubscriptionsSubscriptionSubscribedServiceArrayOutput)
}

// Represents the date when the last service of the subscription ends
func (o GetSubscriptionsSubscriptionOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

// Represents the date when the first service of the subscription was activated
func (o GetSubscriptionsSubscriptionOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

type GetSubscriptionsSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscription {
		return vs[0].([]GetSubscriptionsSubscription)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionOutput)
}

type GetSubscriptionsSubscriptionCurrency struct {
	// Currency Code
	IsoCode *string `pulumi:"isoCode"`
	// Product name
	Name *string `pulumi:"name"`
	// Standard Precision of the Currency
	StdPrecision *string `pulumi:"stdPrecision"`
}

// GetSubscriptionsSubscriptionCurrencyInput is an input type that accepts GetSubscriptionsSubscriptionCurrencyArgs and GetSubscriptionsSubscriptionCurrencyOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCurrencyInput` via:
//
//	GetSubscriptionsSubscriptionCurrencyArgs{...}
type GetSubscriptionsSubscriptionCurrencyInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCurrencyOutput() GetSubscriptionsSubscriptionCurrencyOutput
	ToGetSubscriptionsSubscriptionCurrencyOutputWithContext(context.Context) GetSubscriptionsSubscriptionCurrencyOutput
}

type GetSubscriptionsSubscriptionCurrencyArgs struct {
	// Currency Code
	IsoCode pulumi.StringPtrInput `pulumi:"isoCode"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Standard Precision of the Currency
	StdPrecision pulumi.StringPtrInput `pulumi:"stdPrecision"`
}

func (GetSubscriptionsSubscriptionCurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCurrencyArgs) ToGetSubscriptionsSubscriptionCurrencyOutput() GetSubscriptionsSubscriptionCurrencyOutput {
	return i.ToGetSubscriptionsSubscriptionCurrencyOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCurrencyArgs) ToGetSubscriptionsSubscriptionCurrencyOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCurrencyOutput)
}

// GetSubscriptionsSubscriptionCurrencyArrayInput is an input type that accepts GetSubscriptionsSubscriptionCurrencyArray and GetSubscriptionsSubscriptionCurrencyArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCurrencyArrayInput` via:
//
//	GetSubscriptionsSubscriptionCurrencyArray{ GetSubscriptionsSubscriptionCurrencyArgs{...} }
type GetSubscriptionsSubscriptionCurrencyArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCurrencyArrayOutput() GetSubscriptionsSubscriptionCurrencyArrayOutput
	ToGetSubscriptionsSubscriptionCurrencyArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionCurrencyArrayOutput
}

type GetSubscriptionsSubscriptionCurrencyArray []GetSubscriptionsSubscriptionCurrencyInput

func (GetSubscriptionsSubscriptionCurrencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCurrencyArray) ToGetSubscriptionsSubscriptionCurrencyArrayOutput() GetSubscriptionsSubscriptionCurrencyArrayOutput {
	return i.ToGetSubscriptionsSubscriptionCurrencyArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCurrencyArray) ToGetSubscriptionsSubscriptionCurrencyArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCurrencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCurrencyArrayOutput)
}

type GetSubscriptionsSubscriptionCurrencyOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCurrencyOutput) ToGetSubscriptionsSubscriptionCurrencyOutput() GetSubscriptionsSubscriptionCurrencyOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCurrencyOutput) ToGetSubscriptionsSubscriptionCurrencyOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCurrencyOutput {
	return o
}

// Currency Code
func (o GetSubscriptionsSubscriptionCurrencyOutput) IsoCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCurrency) *string { return v.IsoCode }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetSubscriptionsSubscriptionCurrencyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCurrency) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Standard Precision of the Currency
func (o GetSubscriptionsSubscriptionCurrencyOutput) StdPrecision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCurrency) *string { return v.StdPrecision }).(pulumi.StringPtrOutput)
}

type GetSubscriptionsSubscriptionCurrencyArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCurrencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCurrency)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCurrencyArrayOutput) ToGetSubscriptionsSubscriptionCurrencyArrayOutput() GetSubscriptionsSubscriptionCurrencyArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCurrencyArrayOutput) ToGetSubscriptionsSubscriptionCurrencyArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCurrencyArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCurrencyArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionCurrencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionCurrency {
		return vs[0].([]GetSubscriptionsSubscriptionCurrency)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionCurrencyOutput)
}

type GetSubscriptionsSubscriptionSubscribedService struct {
	// Booking Opportunity Number of Subscribed Service
	BookingOptyNumber *string `pulumi:"bookingOptyNumber"`
	// List of Commitment services of a line
	CommitmentServices []GetSubscriptionsSubscriptionSubscribedServiceCommitmentService `pulumi:"commitmentServices"`
	// Subscribed service CSI number
	Csi *string `pulumi:"csi"`
	// Subscribed service data center region
	DataCenterRegion *string `pulumi:"dataCenterRegion"`
	// Funded Allocation line value example: 12000.00
	FundedAllocationValue *string `pulumi:"fundedAllocationValue"`
	// SPM internal Subscribed Service ID
	Id *string `pulumi:"id"`
	// Subscribed service intent to pay flag
	IsIntentToPay *bool `pulumi:"isIntentToPay"`
	// Subscribed service net unit price
	NetUnitPrice *string `pulumi:"netUnitPrice"`
	// Subscribed service operation type
	OperationType *string `pulumi:"operationType"`
	// Sales Order Number associated to the subscribed service
	OrderNumber *string `pulumi:"orderNumber"`
	// This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
	PartnerTransactionType *string `pulumi:"partnerTransactionType"`
	// Subscribed service pricing model
	PricingModel *string `pulumi:"pricingModel"`
	// Product description
	Products []GetSubscriptionsSubscriptionSubscribedServiceProduct `pulumi:"products"`
	// Subscribed service program type
	ProgramType *string `pulumi:"programType"`
	// Subscribed service promotion type
	PromoType *string `pulumi:"promoType"`
	// Subscribed service quantity
	Quantity *string `pulumi:"quantity"`
	// Subscribed service status
	Status *string `pulumi:"status"`
	// Term value in Months
	TermValue *string `pulumi:"termValue"`
	// Term value UOM
	TermValueUom *string `pulumi:"termValueUom"`
	// Represents the date when the last service of the subscription ends
	TimeEnd *string `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart *string `pulumi:"timeStart"`
	// Subscribed service total value
	TotalValue *string `pulumi:"totalValue"`
}

// GetSubscriptionsSubscriptionSubscribedServiceInput is an input type that accepts GetSubscriptionsSubscriptionSubscribedServiceArgs and GetSubscriptionsSubscriptionSubscribedServiceOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionSubscribedServiceInput` via:
//
//	GetSubscriptionsSubscriptionSubscribedServiceArgs{...}
type GetSubscriptionsSubscriptionSubscribedServiceInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionSubscribedServiceOutput() GetSubscriptionsSubscriptionSubscribedServiceOutput
	ToGetSubscriptionsSubscriptionSubscribedServiceOutputWithContext(context.Context) GetSubscriptionsSubscriptionSubscribedServiceOutput
}

type GetSubscriptionsSubscriptionSubscribedServiceArgs struct {
	// Booking Opportunity Number of Subscribed Service
	BookingOptyNumber pulumi.StringPtrInput `pulumi:"bookingOptyNumber"`
	// List of Commitment services of a line
	CommitmentServices GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayInput `pulumi:"commitmentServices"`
	// Subscribed service CSI number
	Csi pulumi.StringPtrInput `pulumi:"csi"`
	// Subscribed service data center region
	DataCenterRegion pulumi.StringPtrInput `pulumi:"dataCenterRegion"`
	// Funded Allocation line value example: 12000.00
	FundedAllocationValue pulumi.StringPtrInput `pulumi:"fundedAllocationValue"`
	// SPM internal Subscribed Service ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Subscribed service intent to pay flag
	IsIntentToPay pulumi.BoolPtrInput `pulumi:"isIntentToPay"`
	// Subscribed service net unit price
	NetUnitPrice pulumi.StringPtrInput `pulumi:"netUnitPrice"`
	// Subscribed service operation type
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Sales Order Number associated to the subscribed service
	OrderNumber pulumi.StringPtrInput `pulumi:"orderNumber"`
	// This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
	PartnerTransactionType pulumi.StringPtrInput `pulumi:"partnerTransactionType"`
	// Subscribed service pricing model
	PricingModel pulumi.StringPtrInput `pulumi:"pricingModel"`
	// Product description
	Products GetSubscriptionsSubscriptionSubscribedServiceProductArrayInput `pulumi:"products"`
	// Subscribed service program type
	ProgramType pulumi.StringPtrInput `pulumi:"programType"`
	// Subscribed service promotion type
	PromoType pulumi.StringPtrInput `pulumi:"promoType"`
	// Subscribed service quantity
	Quantity pulumi.StringPtrInput `pulumi:"quantity"`
	// Subscribed service status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Term value in Months
	TermValue pulumi.StringPtrInput `pulumi:"termValue"`
	// Term value UOM
	TermValueUom pulumi.StringPtrInput `pulumi:"termValueUom"`
	// Represents the date when the last service of the subscription ends
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
	// Subscribed service total value
	TotalValue pulumi.StringPtrInput `pulumi:"totalValue"`
}

func (GetSubscriptionsSubscriptionSubscribedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedService)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionSubscribedServiceArgs) ToGetSubscriptionsSubscriptionSubscribedServiceOutput() GetSubscriptionsSubscriptionSubscribedServiceOutput {
	return i.ToGetSubscriptionsSubscriptionSubscribedServiceOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionSubscribedServiceArgs) ToGetSubscriptionsSubscriptionSubscribedServiceOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionSubscribedServiceOutput)
}

// GetSubscriptionsSubscriptionSubscribedServiceArrayInput is an input type that accepts GetSubscriptionsSubscriptionSubscribedServiceArray and GetSubscriptionsSubscriptionSubscribedServiceArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionSubscribedServiceArrayInput` via:
//
//	GetSubscriptionsSubscriptionSubscribedServiceArray{ GetSubscriptionsSubscriptionSubscribedServiceArgs{...} }
type GetSubscriptionsSubscriptionSubscribedServiceArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionSubscribedServiceArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceArrayOutput
	ToGetSubscriptionsSubscriptionSubscribedServiceArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionSubscribedServiceArrayOutput
}

type GetSubscriptionsSubscriptionSubscribedServiceArray []GetSubscriptionsSubscriptionSubscribedServiceInput

func (GetSubscriptionsSubscriptionSubscribedServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionSubscribedService)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionSubscribedServiceArray) ToGetSubscriptionsSubscriptionSubscribedServiceArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceArrayOutput {
	return i.ToGetSubscriptionsSubscriptionSubscribedServiceArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionSubscribedServiceArray) ToGetSubscriptionsSubscriptionSubscribedServiceArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionSubscribedServiceArrayOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionSubscribedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedService)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) ToGetSubscriptionsSubscriptionSubscribedServiceOutput() GetSubscriptionsSubscriptionSubscribedServiceOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) ToGetSubscriptionsSubscriptionSubscribedServiceOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceOutput {
	return o
}

// Booking Opportunity Number of Subscribed Service
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) BookingOptyNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.BookingOptyNumber }).(pulumi.StringPtrOutput)
}

// List of Commitment services of a line
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) CommitmentServices() GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) []GetSubscriptionsSubscriptionSubscribedServiceCommitmentService {
		return v.CommitmentServices
	}).(GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput)
}

// Subscribed service CSI number
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) Csi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.Csi }).(pulumi.StringPtrOutput)
}

// Subscribed service data center region
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) DataCenterRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.DataCenterRegion }).(pulumi.StringPtrOutput)
}

// Funded Allocation line value example: 12000.00
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) FundedAllocationValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.FundedAllocationValue }).(pulumi.StringPtrOutput)
}

// SPM internal Subscribed Service ID
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Subscribed service intent to pay flag
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) IsIntentToPay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *bool { return v.IsIntentToPay }).(pulumi.BoolPtrOutput)
}

// Subscribed service net unit price
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) NetUnitPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.NetUnitPrice }).(pulumi.StringPtrOutput)
}

// Subscribed service operation type
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Sales Order Number associated to the subscribed service
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.OrderNumber }).(pulumi.StringPtrOutput)
}

// This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) PartnerTransactionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.PartnerTransactionType }).(pulumi.StringPtrOutput)
}

// Subscribed service pricing model
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) PricingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.PricingModel }).(pulumi.StringPtrOutput)
}

// Product description
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) Products() GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) []GetSubscriptionsSubscriptionSubscribedServiceProduct {
		return v.Products
	}).(GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput)
}

// Subscribed service program type
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) ProgramType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.ProgramType }).(pulumi.StringPtrOutput)
}

// Subscribed service promotion type
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) PromoType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.PromoType }).(pulumi.StringPtrOutput)
}

// Subscribed service quantity
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) Quantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.Quantity }).(pulumi.StringPtrOutput)
}

// Subscribed service status
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Term value in Months
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) TermValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.TermValue }).(pulumi.StringPtrOutput)
}

// Term value UOM
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) TermValueUom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.TermValueUom }).(pulumi.StringPtrOutput)
}

// Represents the date when the last service of the subscription ends
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

// Represents the date when the first service of the subscription was activated
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

// Subscribed service total value
func (o GetSubscriptionsSubscriptionSubscribedServiceOutput) TotalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedService) *string { return v.TotalValue }).(pulumi.StringPtrOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionSubscribedServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionSubscribedService)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionSubscribedServiceArrayOutput) ToGetSubscriptionsSubscriptionSubscribedServiceArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceArrayOutput) ToGetSubscriptionsSubscriptionSubscribedServiceArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionSubscribedServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionSubscribedService {
		return vs[0].([]GetSubscriptionsSubscriptionSubscribedService)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionSubscribedServiceOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceCommitmentService struct {
	// Commitment available amount
	AvailableAmount *string `pulumi:"availableAmount"`
	// Funded Allocation line value example: 12000.00
	FundedAllocationValue *string `pulumi:"fundedAllocationValue"`
	// Commitment line net amount
	LineNetAmount *string `pulumi:"lineNetAmount"`
	// Subscribed service quantity
	Quantity *string `pulumi:"quantity"`
	// Represents the date when the last service of the subscription ends
	TimeEnd *string `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart *string `pulumi:"timeStart"`
}

// GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceInput is an input type that accepts GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs and GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceInput` via:
//
//	GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs{...}
type GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput() GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput
	ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutputWithContext(context.Context) GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput
}

type GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs struct {
	// Commitment available amount
	AvailableAmount pulumi.StringPtrInput `pulumi:"availableAmount"`
	// Funded Allocation line value example: 12000.00
	FundedAllocationValue pulumi.StringPtrInput `pulumi:"fundedAllocationValue"`
	// Commitment line net amount
	LineNetAmount pulumi.StringPtrInput `pulumi:"lineNetAmount"`
	// Subscribed service quantity
	Quantity pulumi.StringPtrInput `pulumi:"quantity"`
	// Represents the date when the last service of the subscription ends
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// Represents the date when the first service of the subscription was activated
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
}

func (GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceCommitmentService)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput() GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput {
	return i.ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput)
}

// GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayInput is an input type that accepts GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArray and GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayInput` via:
//
//	GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArray{ GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs{...} }
type GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput
	ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput
}

type GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArray []GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceInput

func (GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionSubscribedServiceCommitmentService)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArray) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput {
	return i.ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArray) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceCommitmentService)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput() GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput {
	return o
}

// Commitment available amount
func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) AvailableAmount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceCommitmentService) *string {
		return v.AvailableAmount
	}).(pulumi.StringPtrOutput)
}

// Funded Allocation line value example: 12000.00
func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) FundedAllocationValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceCommitmentService) *string {
		return v.FundedAllocationValue
	}).(pulumi.StringPtrOutput)
}

// Commitment line net amount
func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) LineNetAmount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceCommitmentService) *string { return v.LineNetAmount }).(pulumi.StringPtrOutput)
}

// Subscribed service quantity
func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) Quantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceCommitmentService) *string { return v.Quantity }).(pulumi.StringPtrOutput)
}

// Represents the date when the last service of the subscription ends
func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceCommitmentService) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

// Represents the date when the first service of the subscription was activated
func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceCommitmentService) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionSubscribedServiceCommitmentService)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput) ToGetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionSubscribedServiceCommitmentService {
		return vs[0].([]GetSubscriptionsSubscriptionSubscribedServiceCommitmentService)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceProduct struct {
	// Product name
	Name *string `pulumi:"name"`
	// Product part numner
	PartNumber *string `pulumi:"partNumber"`
	// Product provisioning group
	ProvisioningGroup *string `pulumi:"provisioningGroup"`
	// Unit of measure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetSubscriptionsSubscriptionSubscribedServiceProductInput is an input type that accepts GetSubscriptionsSubscriptionSubscribedServiceProductArgs and GetSubscriptionsSubscriptionSubscribedServiceProductOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionSubscribedServiceProductInput` via:
//
//	GetSubscriptionsSubscriptionSubscribedServiceProductArgs{...}
type GetSubscriptionsSubscriptionSubscribedServiceProductInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionSubscribedServiceProductOutput() GetSubscriptionsSubscriptionSubscribedServiceProductOutput
	ToGetSubscriptionsSubscriptionSubscribedServiceProductOutputWithContext(context.Context) GetSubscriptionsSubscriptionSubscribedServiceProductOutput
}

type GetSubscriptionsSubscriptionSubscribedServiceProductArgs struct {
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Product part numner
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product provisioning group
	ProvisioningGroup pulumi.StringPtrInput `pulumi:"provisioningGroup"`
	// Unit of measure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetSubscriptionsSubscriptionSubscribedServiceProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceProduct)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionSubscribedServiceProductArgs) ToGetSubscriptionsSubscriptionSubscribedServiceProductOutput() GetSubscriptionsSubscriptionSubscribedServiceProductOutput {
	return i.ToGetSubscriptionsSubscriptionSubscribedServiceProductOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionSubscribedServiceProductArgs) ToGetSubscriptionsSubscriptionSubscribedServiceProductOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionSubscribedServiceProductOutput)
}

// GetSubscriptionsSubscriptionSubscribedServiceProductArrayInput is an input type that accepts GetSubscriptionsSubscriptionSubscribedServiceProductArray and GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionSubscribedServiceProductArrayInput` via:
//
//	GetSubscriptionsSubscriptionSubscribedServiceProductArray{ GetSubscriptionsSubscriptionSubscribedServiceProductArgs{...} }
type GetSubscriptionsSubscriptionSubscribedServiceProductArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput
	ToGetSubscriptionsSubscriptionSubscribedServiceProductArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput
}

type GetSubscriptionsSubscriptionSubscribedServiceProductArray []GetSubscriptionsSubscriptionSubscribedServiceProductInput

func (GetSubscriptionsSubscriptionSubscribedServiceProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionSubscribedServiceProduct)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionSubscribedServiceProductArray) ToGetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput {
	return i.ToGetSubscriptionsSubscriptionSubscribedServiceProductArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionSubscribedServiceProductArray) ToGetSubscriptionsSubscriptionSubscribedServiceProductArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceProductOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionSubscribedServiceProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceProduct)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionSubscribedServiceProductOutput) ToGetSubscriptionsSubscriptionSubscribedServiceProductOutput() GetSubscriptionsSubscriptionSubscribedServiceProductOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceProductOutput) ToGetSubscriptionsSubscriptionSubscribedServiceProductOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceProductOutput {
	return o
}

// Product name
func (o GetSubscriptionsSubscriptionSubscribedServiceProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceProduct) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Product part numner
func (o GetSubscriptionsSubscriptionSubscribedServiceProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceProduct) *string { return v.PartNumber }).(pulumi.StringPtrOutput)
}

// Product provisioning group
func (o GetSubscriptionsSubscriptionSubscribedServiceProductOutput) ProvisioningGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceProduct) *string { return v.ProvisioningGroup }).(pulumi.StringPtrOutput)
}

// Unit of measure
func (o GetSubscriptionsSubscriptionSubscribedServiceProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionSubscribedServiceProduct) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

type GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionSubscribedServiceProduct)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput) ToGetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput() GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput) ToGetSubscriptionsSubscriptionSubscribedServiceProductArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionSubscribedServiceProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionSubscribedServiceProduct {
		return vs[0].([]GetSubscriptionsSubscriptionSubscribedServiceProduct)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionSubscribedServiceProductOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentsCommitmentInput)(nil)).Elem(), GetCommitmentsCommitmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentsCommitmentArrayInput)(nil)).Elem(), GetCommitmentsCommitmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentsFilterInput)(nil)).Elem(), GetCommitmentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentsFilterArrayInput)(nil)).Elem(), GetCommitmentsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsFilterInput)(nil)).Elem(), GetRatecardsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsFilterArrayInput)(nil)).Elem(), GetRatecardsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardInput)(nil)).Elem(), GetRatecardsRateCardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardArrayInput)(nil)).Elem(), GetRatecardsRateCardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardCurrencyInput)(nil)).Elem(), GetRatecardsRateCardCurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardCurrencyArrayInput)(nil)).Elem(), GetRatecardsRateCardCurrencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardProductInput)(nil)).Elem(), GetRatecardsRateCardProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardProductArrayInput)(nil)).Elem(), GetRatecardsRateCardProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardRateCardTierInput)(nil)).Elem(), GetRatecardsRateCardRateCardTierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRatecardsRateCardRateCardTierArrayInput)(nil)).Elem(), GetRatecardsRateCardRateCardTierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsFilterInput)(nil)).Elem(), GetSubscriptionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsFilterArrayInput)(nil)).Elem(), GetSubscriptionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionInput)(nil)).Elem(), GetSubscriptionsSubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCurrencyInput)(nil)).Elem(), GetSubscriptionsSubscriptionCurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCurrencyArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionCurrencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceInput)(nil)).Elem(), GetSubscriptionsSubscriptionSubscribedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionSubscribedServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceInput)(nil)).Elem(), GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceProductInput)(nil)).Elem(), GetSubscriptionsSubscriptionSubscribedServiceProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionSubscribedServiceProductArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionSubscribedServiceProductArray{})
	pulumi.RegisterOutputType(GetCommitmentsCommitmentOutput{})
	pulumi.RegisterOutputType(GetCommitmentsCommitmentArrayOutput{})
	pulumi.RegisterOutputType(GetCommitmentsFilterOutput{})
	pulumi.RegisterOutputType(GetCommitmentsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRatecardsFilterOutput{})
	pulumi.RegisterOutputType(GetRatecardsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardArrayOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardCurrencyOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardCurrencyArrayOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardProductOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardProductArrayOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardRateCardTierOutput{})
	pulumi.RegisterOutputType(GetRatecardsRateCardRateCardTierArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsFilterOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCurrencyOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCurrencyArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionSubscribedServiceOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionSubscribedServiceArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionSubscribedServiceCommitmentServiceArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionSubscribedServiceProductOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionSubscribedServiceProductArrayOutput{})
}
