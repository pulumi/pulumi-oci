// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osubusage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Computed Usage Aggregateds in Oracle Cloud Infrastructure Osub Usage service.
//
// This is a collection API which returns a list of aggregated computed usage details (there can be multiple Parent Products under a given SubID each of which is represented under Subscription Service Line # in SPM).
func GetCommitmentAggregateds(ctx *pulumi.Context, args *GetCommitmentAggregatedsArgs, opts ...pulumi.InvokeOption) (*GetCommitmentAggregatedsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCommitmentAggregatedsResult
	err := ctx.Invoke("oci:OsubUsage/getCommitmentAggregateds:getCommitmentAggregateds", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCommitmentAggregateds.
type GetCommitmentAggregatedsArgs struct {
	// The OCID of the root compartment.
	CompartmentId string                           `pulumi:"compartmentId"`
	Filters       []GetCommitmentAggregatedsFilter `pulumi:"filters"`
	// Grouping criteria to use for aggregate the computed Usage, either hourly (`HOURLY`), daily (`DAILY`), monthly(`MONTHLY`) or none (`NONE`) to not follow a grouping criteria by date.
	Grouping *string `pulumi:"grouping"`
	// Product part number for subscribed service line, called parent product.
	ParentProduct *string `pulumi:"parentProduct"`
	// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Initial date to filter Computed Usage data in SPM. In the case of non aggregated data the time period between of fromDate and toDate , expressed in RFC 3339 timestamp format.
	TimeFrom string `pulumi:"timeFrom"`
	// Final date to filter Computed Usage data in SPM, expressed in RFC 3339 timestamp format.
	TimeTo string `pulumi:"timeTo"`
	// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
	XOneOriginRegion *string `pulumi:"xOneOriginRegion"`
}

// A collection of values returned by getCommitmentAggregateds.
type GetCommitmentAggregatedsResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The list of computed_usage_aggregateds.
	ComputedUsageAggregateds []GetCommitmentAggregatedsComputedUsageAggregated `pulumi:"computedUsageAggregateds"`
	Filters                  []GetCommitmentAggregatedsFilter                  `pulumi:"filters"`
	Grouping                 *string                                           `pulumi:"grouping"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Product description
	ParentProduct *string `pulumi:"parentProduct"`
	// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM
	SubscriptionId   string  `pulumi:"subscriptionId"`
	TimeFrom         string  `pulumi:"timeFrom"`
	TimeTo           string  `pulumi:"timeTo"`
	XOneOriginRegion *string `pulumi:"xOneOriginRegion"`
}

func GetCommitmentAggregatedsOutput(ctx *pulumi.Context, args GetCommitmentAggregatedsOutputArgs, opts ...pulumi.InvokeOption) GetCommitmentAggregatedsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCommitmentAggregatedsResultOutput, error) {
			args := v.(GetCommitmentAggregatedsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:OsubUsage/getCommitmentAggregateds:getCommitmentAggregateds", args, GetCommitmentAggregatedsResultOutput{}, options).(GetCommitmentAggregatedsResultOutput), nil
		}).(GetCommitmentAggregatedsResultOutput)
}

// A collection of arguments for invoking getCommitmentAggregateds.
type GetCommitmentAggregatedsOutputArgs struct {
	// The OCID of the root compartment.
	CompartmentId pulumi.StringInput                       `pulumi:"compartmentId"`
	Filters       GetCommitmentAggregatedsFilterArrayInput `pulumi:"filters"`
	// Grouping criteria to use for aggregate the computed Usage, either hourly (`HOURLY`), daily (`DAILY`), monthly(`MONTHLY`) or none (`NONE`) to not follow a grouping criteria by date.
	Grouping pulumi.StringPtrInput `pulumi:"grouping"`
	// Product part number for subscribed service line, called parent product.
	ParentProduct pulumi.StringPtrInput `pulumi:"parentProduct"`
	// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// Initial date to filter Computed Usage data in SPM. In the case of non aggregated data the time period between of fromDate and toDate , expressed in RFC 3339 timestamp format.
	TimeFrom pulumi.StringInput `pulumi:"timeFrom"`
	// Final date to filter Computed Usage data in SPM, expressed in RFC 3339 timestamp format.
	TimeTo pulumi.StringInput `pulumi:"timeTo"`
	// The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
	XOneOriginRegion pulumi.StringPtrInput `pulumi:"xOneOriginRegion"`
}

func (GetCommitmentAggregatedsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsArgs)(nil)).Elem()
}

// A collection of values returned by getCommitmentAggregateds.
type GetCommitmentAggregatedsResultOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsResult)(nil)).Elem()
}

func (o GetCommitmentAggregatedsResultOutput) ToGetCommitmentAggregatedsResultOutput() GetCommitmentAggregatedsResultOutput {
	return o
}

func (o GetCommitmentAggregatedsResultOutput) ToGetCommitmentAggregatedsResultOutputWithContext(ctx context.Context) GetCommitmentAggregatedsResultOutput {
	return o
}

func (o GetCommitmentAggregatedsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of computed_usage_aggregateds.
func (o GetCommitmentAggregatedsResultOutput) ComputedUsageAggregateds() GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) []GetCommitmentAggregatedsComputedUsageAggregated {
		return v.ComputedUsageAggregateds
	}).(GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput)
}

func (o GetCommitmentAggregatedsResultOutput) Filters() GetCommitmentAggregatedsFilterArrayOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) []GetCommitmentAggregatedsFilter { return v.Filters }).(GetCommitmentAggregatedsFilterArrayOutput)
}

func (o GetCommitmentAggregatedsResultOutput) Grouping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) *string { return v.Grouping }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCommitmentAggregatedsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Product description
func (o GetCommitmentAggregatedsResultOutput) ParentProduct() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) *string { return v.ParentProduct }).(pulumi.StringPtrOutput)
}

// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM
func (o GetCommitmentAggregatedsResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o GetCommitmentAggregatedsResultOutput) TimeFrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) string { return v.TimeFrom }).(pulumi.StringOutput)
}

func (o GetCommitmentAggregatedsResultOutput) TimeTo() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) string { return v.TimeTo }).(pulumi.StringOutput)
}

func (o GetCommitmentAggregatedsResultOutput) XOneOriginRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsResult) *string { return v.XOneOriginRegion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCommitmentAggregatedsResultOutput{})
}
