// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osubusage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetCommitmentAggregatedsComputedUsageAggregated struct {
	// Aggregation of computed usages for the subscribed service.
	AggregatedComputedUsages []GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage `pulumi:"aggregatedComputedUsages"`
	// Currency code
	CurrencyCode *string `pulumi:"currencyCode"`
	// Product part number for subscribed service line, called parent product.
	ParentProducts []GetCommitmentAggregatedsComputedUsageAggregatedParentProduct `pulumi:"parentProducts"`
	// Subscribed service line parent id
	ParentSubscribedServiceId *string `pulumi:"parentSubscribedServiceId"`
	// Subscribed service asociated subscription plan number.
	PlanNumber *string `pulumi:"planNumber"`
	// Subscribed services pricing model
	PricingModel *string `pulumi:"pricingModel"`
	// Inernal SPM Ratecard Id at line level
	RateCardId *string `pulumi:"rateCardId"`
	// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Subscribed services contract line end date, expressed in RFC 3339 timestamp format.
	TimeEnd *string `pulumi:"timeEnd"`
	// Subscribed services contract line start date, expressed in RFC 3339 timestamp format.
	TimeStart *string `pulumi:"timeStart"`
}

// GetCommitmentAggregatedsComputedUsageAggregatedInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedArgs and GetCommitmentAggregatedsComputedUsageAggregatedOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedArgs{...}
type GetCommitmentAggregatedsComputedUsageAggregatedInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedOutput() GetCommitmentAggregatedsComputedUsageAggregatedOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedArgs struct {
	// Aggregation of computed usages for the subscribed service.
	AggregatedComputedUsages GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayInput `pulumi:"aggregatedComputedUsages"`
	// Currency code
	CurrencyCode pulumi.StringPtrInput `pulumi:"currencyCode"`
	// Product part number for subscribed service line, called parent product.
	ParentProducts GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayInput `pulumi:"parentProducts"`
	// Subscribed service line parent id
	ParentSubscribedServiceId pulumi.StringPtrInput `pulumi:"parentSubscribedServiceId"`
	// Subscribed service asociated subscription plan number.
	PlanNumber pulumi.StringPtrInput `pulumi:"planNumber"`
	// Subscribed services pricing model
	PricingModel pulumi.StringPtrInput `pulumi:"pricingModel"`
	// Inernal SPM Ratecard Id at line level
	RateCardId pulumi.StringPtrInput `pulumi:"rateCardId"`
	// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// Subscribed services contract line end date, expressed in RFC 3339 timestamp format.
	TimeEnd pulumi.StringPtrInput `pulumi:"timeEnd"`
	// Subscribed services contract line start date, expressed in RFC 3339 timestamp format.
	TimeStart pulumi.StringPtrInput `pulumi:"timeStart"`
}

func (GetCommitmentAggregatedsComputedUsageAggregatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregated)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedOutput() GetCommitmentAggregatedsComputedUsageAggregatedOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedOutput)
}

// GetCommitmentAggregatedsComputedUsageAggregatedArrayInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedArray and GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedArrayInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedArray{ GetCommitmentAggregatedsComputedUsageAggregatedArgs{...} }
type GetCommitmentAggregatedsComputedUsageAggregatedArrayInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedArrayOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedArray []GetCommitmentAggregatedsComputedUsageAggregatedInput

func (GetCommitmentAggregatedsComputedUsageAggregatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregated)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedArray) ToGetCommitmentAggregatedsComputedUsageAggregatedArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedArrayOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedArray) ToGetCommitmentAggregatedsComputedUsageAggregatedArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregated)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedOutput() GetCommitmentAggregatedsComputedUsageAggregatedOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedOutput {
	return o
}

// Aggregation of computed usages for the subscribed service.
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) AggregatedComputedUsages() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) []GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage {
		return v.AggregatedComputedUsages
	}).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput)
}

// Currency code
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.CurrencyCode }).(pulumi.StringPtrOutput)
}

// Product part number for subscribed service line, called parent product.
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) ParentProducts() GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) []GetCommitmentAggregatedsComputedUsageAggregatedParentProduct {
		return v.ParentProducts
	}).(GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput)
}

// Subscribed service line parent id
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) ParentSubscribedServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.ParentSubscribedServiceId }).(pulumi.StringPtrOutput)
}

// Subscribed service asociated subscription plan number.
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) PlanNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.PlanNumber }).(pulumi.StringPtrOutput)
}

// Subscribed services pricing model
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) PricingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.PricingModel }).(pulumi.StringPtrOutput)
}

// Inernal SPM Ratecard Id at line level
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) RateCardId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.RateCardId }).(pulumi.StringPtrOutput)
}

// Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// Subscribed services contract line end date, expressed in RFC 3339 timestamp format.
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) TimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.TimeEnd }).(pulumi.StringPtrOutput)
}

// Subscribed services contract line start date, expressed in RFC 3339 timestamp format.
func (o GetCommitmentAggregatedsComputedUsageAggregatedOutput) TimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregated) *string { return v.TimeStart }).(pulumi.StringPtrOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregated)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput) Index(i pulumi.IntInput) GetCommitmentAggregatedsComputedUsageAggregatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommitmentAggregatedsComputedUsageAggregated {
		return vs[0].([]GetCommitmentAggregatedsComputedUsageAggregated)[vs[1].(int)]
	}).(GetCommitmentAggregatedsComputedUsageAggregatedOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage struct {
	// Sum of Computed Line Amount rounded
	Cost *string `pulumi:"cost"`
	// Sum of Computed Line Amount unrounded
	CostUnrounded *string `pulumi:"costUnrounded"`
	// Data Center Attribute as sent by MQS to SPM.
	DataCenter *string `pulumi:"dataCenter"`
	// Net Unit Price for the product in consideration.
	NetUnitPrice *string `pulumi:"netUnitPrice"`
	// Product description
	Products []GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct `pulumi:"products"`
	// Total Quantity that was used for computation
	Quantity *string `pulumi:"quantity"`
	// Metered Service date , expressed in RFC 3339 timestamp format.
	TimeMeteredOn *string `pulumi:"timeMeteredOn"`
	// Usage compute type in SPM.
	Type *string `pulumi:"type"`
}

// GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs and GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs{...}
type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs struct {
	// Sum of Computed Line Amount rounded
	Cost pulumi.StringPtrInput `pulumi:"cost"`
	// Sum of Computed Line Amount unrounded
	CostUnrounded pulumi.StringPtrInput `pulumi:"costUnrounded"`
	// Data Center Attribute as sent by MQS to SPM.
	DataCenter pulumi.StringPtrInput `pulumi:"dataCenter"`
	// Net Unit Price for the product in consideration.
	NetUnitPrice pulumi.StringPtrInput `pulumi:"netUnitPrice"`
	// Product description
	Products GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayInput `pulumi:"products"`
	// Total Quantity that was used for computation
	Quantity pulumi.StringPtrInput `pulumi:"quantity"`
	// Metered Service date , expressed in RFC 3339 timestamp format.
	TimeMeteredOn pulumi.StringPtrInput `pulumi:"timeMeteredOn"`
	// Usage compute type in SPM.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput)
}

// GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArray and GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArray{ GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs{...} }
type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArray []GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageInput

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArray) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArray) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput {
	return o
}

// Sum of Computed Line Amount rounded
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) Cost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) *string { return v.Cost }).(pulumi.StringPtrOutput)
}

// Sum of Computed Line Amount unrounded
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) CostUnrounded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) *string {
		return v.CostUnrounded
	}).(pulumi.StringPtrOutput)
}

// Data Center Attribute as sent by MQS to SPM.
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) DataCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) *string {
		return v.DataCenter
	}).(pulumi.StringPtrOutput)
}

// Net Unit Price for the product in consideration.
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) NetUnitPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) *string {
		return v.NetUnitPrice
	}).(pulumi.StringPtrOutput)
}

// Product description
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) Products() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) []GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct {
		return v.Products
	}).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput)
}

// Total Quantity that was used for computation
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) Quantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) *string {
		return v.Quantity
	}).(pulumi.StringPtrOutput)
}

// Metered Service date , expressed in RFC 3339 timestamp format.
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) TimeMeteredOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) *string {
		return v.TimeMeteredOn
	}).(pulumi.StringPtrOutput)
}

// Usage compute type in SPM.
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput) Index(i pulumi.IntInput) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage {
		return vs[0].([]GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage)[vs[1].(int)]
	}).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct struct {
	// Metered service billing category
	BillingCategory *string `pulumi:"billingCategory"`
	// Product name
	Name *string `pulumi:"name"`
	// Product part number
	PartNumber *string `pulumi:"partNumber"`
	// Product category
	ProductCategory *string `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup *string `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType *string `pulumi:"ucmRateCardPartType"`
	// Unit of Measure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs and GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs{...}
type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs struct {
	// Metered service billing category
	BillingCategory pulumi.StringPtrInput `pulumi:"billingCategory"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Product part number
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product category
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup pulumi.StringPtrInput `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType pulumi.StringPtrInput `pulumi:"ucmRateCardPartType"`
	// Unit of Measure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput)
}

// GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArray and GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArray{ GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs{...} }
type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArray []GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductInput

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArray) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArray) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput {
	return o
}

// Metered service billing category
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) BillingCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct) *string {
		return v.BillingCategory
	}).(pulumi.StringPtrOutput)
}

// Product name
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Product part number
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct) *string {
		return v.PartNumber
	}).(pulumi.StringPtrOutput)
}

// Product category
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct) *string {
		return v.ProductCategory
	}).(pulumi.StringPtrOutput)
}

// Product provisioning group
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) ProvisioningGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct) *string {
		return v.ProvisioningGroup
	}).(pulumi.StringPtrOutput)
}

// Rate card part type of Product
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) UcmRateCardPartType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct) *string {
		return v.UcmRateCardPartType
	}).(pulumi.StringPtrOutput)
}

// Unit of Measure
func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct) *string {
		return v.UnitOfMeasure
	}).(pulumi.StringPtrOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput) Index(i pulumi.IntInput) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct {
		return vs[0].([]GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProduct)[vs[1].(int)]
	}).(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedParentProduct struct {
	// Metered service billing category
	BillingCategory *string `pulumi:"billingCategory"`
	// Product name
	Name *string `pulumi:"name"`
	// Product part number
	PartNumber *string `pulumi:"partNumber"`
	// Product category
	ProductCategory *string `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup *string `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType *string `pulumi:"ucmRateCardPartType"`
	// Unit of Measure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetCommitmentAggregatedsComputedUsageAggregatedParentProductInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs and GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedParentProductInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs{...}
type GetCommitmentAggregatedsComputedUsageAggregatedParentProductInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput() GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs struct {
	// Metered service billing category
	BillingCategory pulumi.StringPtrInput `pulumi:"billingCategory"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Product part number
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product category
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup pulumi.StringPtrInput `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType pulumi.StringPtrInput `pulumi:"ucmRateCardPartType"`
	// Unit of Measure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedParentProduct)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput() GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput)
}

// GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayInput is an input type that accepts GetCommitmentAggregatedsComputedUsageAggregatedParentProductArray and GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayInput` via:
//
//	GetCommitmentAggregatedsComputedUsageAggregatedParentProductArray{ GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs{...} }
type GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput
	ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutputWithContext(context.Context) GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput
}

type GetCommitmentAggregatedsComputedUsageAggregatedParentProductArray []GetCommitmentAggregatedsComputedUsageAggregatedParentProductInput

func (GetCommitmentAggregatedsComputedUsageAggregatedParentProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregatedParentProduct)(nil)).Elem()
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedParentProductArray) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput {
	return i.ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsComputedUsageAggregatedParentProductArray) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedParentProduct)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput() GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput {
	return o
}

// Metered service billing category
func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) BillingCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedParentProduct) *string { return v.BillingCategory }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedParentProduct) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Product part number
func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedParentProduct) *string { return v.PartNumber }).(pulumi.StringPtrOutput)
}

// Product category
func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedParentProduct) *string { return v.ProductCategory }).(pulumi.StringPtrOutput)
}

// Product provisioning group
func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) ProvisioningGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedParentProduct) *string {
		return v.ProvisioningGroup
	}).(pulumi.StringPtrOutput)
}

// Rate card part type of Product
func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) UcmRateCardPartType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedParentProduct) *string {
		return v.UcmRateCardPartType
	}).(pulumi.StringPtrOutput)
}

// Unit of Measure
func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsComputedUsageAggregatedParentProduct) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

type GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsComputedUsageAggregatedParentProduct)(nil)).Elem()
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput() GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput) ToGetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput) Index(i pulumi.IntInput) GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommitmentAggregatedsComputedUsageAggregatedParentProduct {
		return vs[0].([]GetCommitmentAggregatedsComputedUsageAggregatedParentProduct)[vs[1].(int)]
	}).(GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput)
}

type GetCommitmentAggregatedsFilter struct {
	// Product name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCommitmentAggregatedsFilterInput is an input type that accepts GetCommitmentAggregatedsFilterArgs and GetCommitmentAggregatedsFilterOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsFilterInput` via:
//
//	GetCommitmentAggregatedsFilterArgs{...}
type GetCommitmentAggregatedsFilterInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsFilterOutput() GetCommitmentAggregatedsFilterOutput
	ToGetCommitmentAggregatedsFilterOutputWithContext(context.Context) GetCommitmentAggregatedsFilterOutput
}

type GetCommitmentAggregatedsFilterArgs struct {
	// Product name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCommitmentAggregatedsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsFilter)(nil)).Elem()
}

func (i GetCommitmentAggregatedsFilterArgs) ToGetCommitmentAggregatedsFilterOutput() GetCommitmentAggregatedsFilterOutput {
	return i.ToGetCommitmentAggregatedsFilterOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsFilterArgs) ToGetCommitmentAggregatedsFilterOutputWithContext(ctx context.Context) GetCommitmentAggregatedsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsFilterOutput)
}

// GetCommitmentAggregatedsFilterArrayInput is an input type that accepts GetCommitmentAggregatedsFilterArray and GetCommitmentAggregatedsFilterArrayOutput values.
// You can construct a concrete instance of `GetCommitmentAggregatedsFilterArrayInput` via:
//
//	GetCommitmentAggregatedsFilterArray{ GetCommitmentAggregatedsFilterArgs{...} }
type GetCommitmentAggregatedsFilterArrayInput interface {
	pulumi.Input

	ToGetCommitmentAggregatedsFilterArrayOutput() GetCommitmentAggregatedsFilterArrayOutput
	ToGetCommitmentAggregatedsFilterArrayOutputWithContext(context.Context) GetCommitmentAggregatedsFilterArrayOutput
}

type GetCommitmentAggregatedsFilterArray []GetCommitmentAggregatedsFilterInput

func (GetCommitmentAggregatedsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsFilter)(nil)).Elem()
}

func (i GetCommitmentAggregatedsFilterArray) ToGetCommitmentAggregatedsFilterArrayOutput() GetCommitmentAggregatedsFilterArrayOutput {
	return i.ToGetCommitmentAggregatedsFilterArrayOutputWithContext(context.Background())
}

func (i GetCommitmentAggregatedsFilterArray) ToGetCommitmentAggregatedsFilterArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommitmentAggregatedsFilterArrayOutput)
}

type GetCommitmentAggregatedsFilterOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommitmentAggregatedsFilter)(nil)).Elem()
}

func (o GetCommitmentAggregatedsFilterOutput) ToGetCommitmentAggregatedsFilterOutput() GetCommitmentAggregatedsFilterOutput {
	return o
}

func (o GetCommitmentAggregatedsFilterOutput) ToGetCommitmentAggregatedsFilterOutputWithContext(ctx context.Context) GetCommitmentAggregatedsFilterOutput {
	return o
}

// Product name
func (o GetCommitmentAggregatedsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCommitmentAggregatedsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCommitmentAggregatedsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCommitmentAggregatedsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCommitmentAggregatedsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCommitmentAggregatedsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommitmentAggregatedsFilter)(nil)).Elem()
}

func (o GetCommitmentAggregatedsFilterArrayOutput) ToGetCommitmentAggregatedsFilterArrayOutput() GetCommitmentAggregatedsFilterArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsFilterArrayOutput) ToGetCommitmentAggregatedsFilterArrayOutputWithContext(ctx context.Context) GetCommitmentAggregatedsFilterArrayOutput {
	return o
}

func (o GetCommitmentAggregatedsFilterArrayOutput) Index(i pulumi.IntInput) GetCommitmentAggregatedsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommitmentAggregatedsFilter {
		return vs[0].([]GetCommitmentAggregatedsFilter)[vs[1].(int)]
	}).(GetCommitmentAggregatedsFilterOutput)
}

type GetComputedUsageParentProduct struct {
	// Metered service billing category
	BillingCategory *string `pulumi:"billingCategory"`
	// Product name
	Name *string `pulumi:"name"`
	// Product part number
	PartNumber *string `pulumi:"partNumber"`
	// Product category
	ProductCategory *string `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup *string `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType *string `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetComputedUsageParentProductInput is an input type that accepts GetComputedUsageParentProductArgs and GetComputedUsageParentProductOutput values.
// You can construct a concrete instance of `GetComputedUsageParentProductInput` via:
//
//	GetComputedUsageParentProductArgs{...}
type GetComputedUsageParentProductInput interface {
	pulumi.Input

	ToGetComputedUsageParentProductOutput() GetComputedUsageParentProductOutput
	ToGetComputedUsageParentProductOutputWithContext(context.Context) GetComputedUsageParentProductOutput
}

type GetComputedUsageParentProductArgs struct {
	// Metered service billing category
	BillingCategory pulumi.StringPtrInput `pulumi:"billingCategory"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Product part number
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product category
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup pulumi.StringPtrInput `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType pulumi.StringPtrInput `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetComputedUsageParentProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsageParentProduct)(nil)).Elem()
}

func (i GetComputedUsageParentProductArgs) ToGetComputedUsageParentProductOutput() GetComputedUsageParentProductOutput {
	return i.ToGetComputedUsageParentProductOutputWithContext(context.Background())
}

func (i GetComputedUsageParentProductArgs) ToGetComputedUsageParentProductOutputWithContext(ctx context.Context) GetComputedUsageParentProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsageParentProductOutput)
}

// GetComputedUsageParentProductArrayInput is an input type that accepts GetComputedUsageParentProductArray and GetComputedUsageParentProductArrayOutput values.
// You can construct a concrete instance of `GetComputedUsageParentProductArrayInput` via:
//
//	GetComputedUsageParentProductArray{ GetComputedUsageParentProductArgs{...} }
type GetComputedUsageParentProductArrayInput interface {
	pulumi.Input

	ToGetComputedUsageParentProductArrayOutput() GetComputedUsageParentProductArrayOutput
	ToGetComputedUsageParentProductArrayOutputWithContext(context.Context) GetComputedUsageParentProductArrayOutput
}

type GetComputedUsageParentProductArray []GetComputedUsageParentProductInput

func (GetComputedUsageParentProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsageParentProduct)(nil)).Elem()
}

func (i GetComputedUsageParentProductArray) ToGetComputedUsageParentProductArrayOutput() GetComputedUsageParentProductArrayOutput {
	return i.ToGetComputedUsageParentProductArrayOutputWithContext(context.Background())
}

func (i GetComputedUsageParentProductArray) ToGetComputedUsageParentProductArrayOutputWithContext(ctx context.Context) GetComputedUsageParentProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsageParentProductArrayOutput)
}

type GetComputedUsageParentProductOutput struct{ *pulumi.OutputState }

func (GetComputedUsageParentProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsageParentProduct)(nil)).Elem()
}

func (o GetComputedUsageParentProductOutput) ToGetComputedUsageParentProductOutput() GetComputedUsageParentProductOutput {
	return o
}

func (o GetComputedUsageParentProductOutput) ToGetComputedUsageParentProductOutputWithContext(ctx context.Context) GetComputedUsageParentProductOutput {
	return o
}

// Metered service billing category
func (o GetComputedUsageParentProductOutput) BillingCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageParentProduct) *string { return v.BillingCategory }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetComputedUsageParentProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageParentProduct) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Product part number
func (o GetComputedUsageParentProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageParentProduct) *string { return v.PartNumber }).(pulumi.StringPtrOutput)
}

// Product category
func (o GetComputedUsageParentProductOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageParentProduct) *string { return v.ProductCategory }).(pulumi.StringPtrOutput)
}

// Product provisioning group
func (o GetComputedUsageParentProductOutput) ProvisioningGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageParentProduct) *string { return v.ProvisioningGroup }).(pulumi.StringPtrOutput)
}

// Rate card part type of Product
func (o GetComputedUsageParentProductOutput) UcmRateCardPartType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageParentProduct) *string { return v.UcmRateCardPartType }).(pulumi.StringPtrOutput)
}

// Unit of Messure
func (o GetComputedUsageParentProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageParentProduct) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

type GetComputedUsageParentProductArrayOutput struct{ *pulumi.OutputState }

func (GetComputedUsageParentProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsageParentProduct)(nil)).Elem()
}

func (o GetComputedUsageParentProductArrayOutput) ToGetComputedUsageParentProductArrayOutput() GetComputedUsageParentProductArrayOutput {
	return o
}

func (o GetComputedUsageParentProductArrayOutput) ToGetComputedUsageParentProductArrayOutputWithContext(ctx context.Context) GetComputedUsageParentProductArrayOutput {
	return o
}

func (o GetComputedUsageParentProductArrayOutput) Index(i pulumi.IntInput) GetComputedUsageParentProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputedUsageParentProduct {
		return vs[0].([]GetComputedUsageParentProduct)[vs[1].(int)]
	}).(GetComputedUsageParentProductOutput)
}

type GetComputedUsageProduct struct {
	// Metered service billing category
	BillingCategory *string `pulumi:"billingCategory"`
	// Product name
	Name *string `pulumi:"name"`
	// Product part number
	PartNumber *string `pulumi:"partNumber"`
	// Product category
	ProductCategory *string `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup *string `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType *string `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetComputedUsageProductInput is an input type that accepts GetComputedUsageProductArgs and GetComputedUsageProductOutput values.
// You can construct a concrete instance of `GetComputedUsageProductInput` via:
//
//	GetComputedUsageProductArgs{...}
type GetComputedUsageProductInput interface {
	pulumi.Input

	ToGetComputedUsageProductOutput() GetComputedUsageProductOutput
	ToGetComputedUsageProductOutputWithContext(context.Context) GetComputedUsageProductOutput
}

type GetComputedUsageProductArgs struct {
	// Metered service billing category
	BillingCategory pulumi.StringPtrInput `pulumi:"billingCategory"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Product part number
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product category
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup pulumi.StringPtrInput `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType pulumi.StringPtrInput `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetComputedUsageProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsageProduct)(nil)).Elem()
}

func (i GetComputedUsageProductArgs) ToGetComputedUsageProductOutput() GetComputedUsageProductOutput {
	return i.ToGetComputedUsageProductOutputWithContext(context.Background())
}

func (i GetComputedUsageProductArgs) ToGetComputedUsageProductOutputWithContext(ctx context.Context) GetComputedUsageProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsageProductOutput)
}

// GetComputedUsageProductArrayInput is an input type that accepts GetComputedUsageProductArray and GetComputedUsageProductArrayOutput values.
// You can construct a concrete instance of `GetComputedUsageProductArrayInput` via:
//
//	GetComputedUsageProductArray{ GetComputedUsageProductArgs{...} }
type GetComputedUsageProductArrayInput interface {
	pulumi.Input

	ToGetComputedUsageProductArrayOutput() GetComputedUsageProductArrayOutput
	ToGetComputedUsageProductArrayOutputWithContext(context.Context) GetComputedUsageProductArrayOutput
}

type GetComputedUsageProductArray []GetComputedUsageProductInput

func (GetComputedUsageProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsageProduct)(nil)).Elem()
}

func (i GetComputedUsageProductArray) ToGetComputedUsageProductArrayOutput() GetComputedUsageProductArrayOutput {
	return i.ToGetComputedUsageProductArrayOutputWithContext(context.Background())
}

func (i GetComputedUsageProductArray) ToGetComputedUsageProductArrayOutputWithContext(ctx context.Context) GetComputedUsageProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsageProductArrayOutput)
}

type GetComputedUsageProductOutput struct{ *pulumi.OutputState }

func (GetComputedUsageProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsageProduct)(nil)).Elem()
}

func (o GetComputedUsageProductOutput) ToGetComputedUsageProductOutput() GetComputedUsageProductOutput {
	return o
}

func (o GetComputedUsageProductOutput) ToGetComputedUsageProductOutputWithContext(ctx context.Context) GetComputedUsageProductOutput {
	return o
}

// Metered service billing category
func (o GetComputedUsageProductOutput) BillingCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageProduct) *string { return v.BillingCategory }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetComputedUsageProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageProduct) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Product part number
func (o GetComputedUsageProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageProduct) *string { return v.PartNumber }).(pulumi.StringPtrOutput)
}

// Product category
func (o GetComputedUsageProductOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageProduct) *string { return v.ProductCategory }).(pulumi.StringPtrOutput)
}

// Product provisioning group
func (o GetComputedUsageProductOutput) ProvisioningGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageProduct) *string { return v.ProvisioningGroup }).(pulumi.StringPtrOutput)
}

// Rate card part type of Product
func (o GetComputedUsageProductOutput) UcmRateCardPartType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageProduct) *string { return v.UcmRateCardPartType }).(pulumi.StringPtrOutput)
}

// Unit of Messure
func (o GetComputedUsageProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsageProduct) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

type GetComputedUsageProductArrayOutput struct{ *pulumi.OutputState }

func (GetComputedUsageProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsageProduct)(nil)).Elem()
}

func (o GetComputedUsageProductArrayOutput) ToGetComputedUsageProductArrayOutput() GetComputedUsageProductArrayOutput {
	return o
}

func (o GetComputedUsageProductArrayOutput) ToGetComputedUsageProductArrayOutputWithContext(ctx context.Context) GetComputedUsageProductArrayOutput {
	return o
}

func (o GetComputedUsageProductArrayOutput) Index(i pulumi.IntInput) GetComputedUsageProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputedUsageProduct {
		return vs[0].([]GetComputedUsageProduct)[vs[1].(int)]
	}).(GetComputedUsageProductOutput)
}

type GetComputedUsagesComputedUsage struct {
	// Subscribed service commitmentId.
	CommitmentServiceId *string `pulumi:"commitmentServiceId"`
	// SPM Internal compute records source .
	ComputeSource   *string `pulumi:"computeSource"`
	ComputedUsageId *string `pulumi:"computedUsageId"`
	// Computed Line Amount not rounded
	Cost *string `pulumi:"cost"`
	// Computed Line Amount rounded.
	CostRounded *string `pulumi:"costRounded"`
	// Currency code
	CurrencyCode *string `pulumi:"currencyCode"`
	// Data Center Attribute as sent by MQS to SPM.
	DataCenter *string `pulumi:"dataCenter"`
	// SPM Internal computed usage Id , 32 character string
	Id *string `pulumi:"id"`
	// Invoicing status for the aggregated compute usage
	IsInvoiced *bool `pulumi:"isInvoiced"`
	// MQS Identfier send to SPM , SPM does not transform this attribute and is received as is.
	MqsMessageId *string `pulumi:"mqsMessageId"`
	// Net Unit Price for the product in consideration, price actual.
	NetUnitPrice *string `pulumi:"netUnitPrice"`
	// SPM Internal Original usage Line number identifier in SPM coming from Metered Services entity.
	OriginalUsageNumber *string `pulumi:"originalUsageNumber"`
	// Product part number for subscribed service line, called parent product.
	ParentProducts []GetComputedUsagesComputedUsageParentProduct `pulumi:"parentProducts"`
	// Subscribed service line parent id
	ParentSubscribedServiceId *string `pulumi:"parentSubscribedServiceId"`
	// Subscription plan number
	PlanNumber *string `pulumi:"planNumber"`
	// Product description
	Products []GetComputedUsagesComputedUsageProduct `pulumi:"products"`
	// Total Quantity that was used for computation
	Quantity *string `pulumi:"quantity"`
	// Ratecard Id at subscribed service level
	RateCardId *string `pulumi:"rateCardId"`
	// References the tier in the ratecard for that usage (OCI will be using the same reference to cross-reference for correctness on the usage csv report), comes from Entity OBSCNTR_IPT_PRODUCTTIER.
	RateCardTierdId *string `pulumi:"rateCardTierdId"`
	// Computed Usage created time, expressed in RFC 3339 timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
	// Metered Service date, expressed in RFC 3339 timestamp format.
	TimeMeteredOn *string `pulumi:"timeMeteredOn"`
	// Usae computation date, expressed in RFC 3339 timestamp format.
	TimeOfArrival *string `pulumi:"timeOfArrival"`
	// Computed Usage updated time, expressed in RFC 3339 timestamp format.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Usage compute type in SPM.
	Type *string `pulumi:"type"`
	// Unit of Messure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
	// SPM Internal usage Line number identifier in SPM coming from Metered Services entity.
	UsageNumber *string `pulumi:"usageNumber"`
}

// GetComputedUsagesComputedUsageInput is an input type that accepts GetComputedUsagesComputedUsageArgs and GetComputedUsagesComputedUsageOutput values.
// You can construct a concrete instance of `GetComputedUsagesComputedUsageInput` via:
//
//	GetComputedUsagesComputedUsageArgs{...}
type GetComputedUsagesComputedUsageInput interface {
	pulumi.Input

	ToGetComputedUsagesComputedUsageOutput() GetComputedUsagesComputedUsageOutput
	ToGetComputedUsagesComputedUsageOutputWithContext(context.Context) GetComputedUsagesComputedUsageOutput
}

type GetComputedUsagesComputedUsageArgs struct {
	// Subscribed service commitmentId.
	CommitmentServiceId pulumi.StringPtrInput `pulumi:"commitmentServiceId"`
	// SPM Internal compute records source .
	ComputeSource   pulumi.StringPtrInput `pulumi:"computeSource"`
	ComputedUsageId pulumi.StringPtrInput `pulumi:"computedUsageId"`
	// Computed Line Amount not rounded
	Cost pulumi.StringPtrInput `pulumi:"cost"`
	// Computed Line Amount rounded.
	CostRounded pulumi.StringPtrInput `pulumi:"costRounded"`
	// Currency code
	CurrencyCode pulumi.StringPtrInput `pulumi:"currencyCode"`
	// Data Center Attribute as sent by MQS to SPM.
	DataCenter pulumi.StringPtrInput `pulumi:"dataCenter"`
	// SPM Internal computed usage Id , 32 character string
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Invoicing status for the aggregated compute usage
	IsInvoiced pulumi.BoolPtrInput `pulumi:"isInvoiced"`
	// MQS Identfier send to SPM , SPM does not transform this attribute and is received as is.
	MqsMessageId pulumi.StringPtrInput `pulumi:"mqsMessageId"`
	// Net Unit Price for the product in consideration, price actual.
	NetUnitPrice pulumi.StringPtrInput `pulumi:"netUnitPrice"`
	// SPM Internal Original usage Line number identifier in SPM coming from Metered Services entity.
	OriginalUsageNumber pulumi.StringPtrInput `pulumi:"originalUsageNumber"`
	// Product part number for subscribed service line, called parent product.
	ParentProducts GetComputedUsagesComputedUsageParentProductArrayInput `pulumi:"parentProducts"`
	// Subscribed service line parent id
	ParentSubscribedServiceId pulumi.StringPtrInput `pulumi:"parentSubscribedServiceId"`
	// Subscription plan number
	PlanNumber pulumi.StringPtrInput `pulumi:"planNumber"`
	// Product description
	Products GetComputedUsagesComputedUsageProductArrayInput `pulumi:"products"`
	// Total Quantity that was used for computation
	Quantity pulumi.StringPtrInput `pulumi:"quantity"`
	// Ratecard Id at subscribed service level
	RateCardId pulumi.StringPtrInput `pulumi:"rateCardId"`
	// References the tier in the ratecard for that usage (OCI will be using the same reference to cross-reference for correctness on the usage csv report), comes from Entity OBSCNTR_IPT_PRODUCTTIER.
	RateCardTierdId pulumi.StringPtrInput `pulumi:"rateCardTierdId"`
	// Computed Usage created time, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// Metered Service date, expressed in RFC 3339 timestamp format.
	TimeMeteredOn pulumi.StringPtrInput `pulumi:"timeMeteredOn"`
	// Usae computation date, expressed in RFC 3339 timestamp format.
	TimeOfArrival pulumi.StringPtrInput `pulumi:"timeOfArrival"`
	// Computed Usage updated time, expressed in RFC 3339 timestamp format.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Usage compute type in SPM.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Unit of Messure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
	// SPM Internal usage Line number identifier in SPM coming from Metered Services entity.
	UsageNumber pulumi.StringPtrInput `pulumi:"usageNumber"`
}

func (GetComputedUsagesComputedUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesComputedUsage)(nil)).Elem()
}

func (i GetComputedUsagesComputedUsageArgs) ToGetComputedUsagesComputedUsageOutput() GetComputedUsagesComputedUsageOutput {
	return i.ToGetComputedUsagesComputedUsageOutputWithContext(context.Background())
}

func (i GetComputedUsagesComputedUsageArgs) ToGetComputedUsagesComputedUsageOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesComputedUsageOutput)
}

// GetComputedUsagesComputedUsageArrayInput is an input type that accepts GetComputedUsagesComputedUsageArray and GetComputedUsagesComputedUsageArrayOutput values.
// You can construct a concrete instance of `GetComputedUsagesComputedUsageArrayInput` via:
//
//	GetComputedUsagesComputedUsageArray{ GetComputedUsagesComputedUsageArgs{...} }
type GetComputedUsagesComputedUsageArrayInput interface {
	pulumi.Input

	ToGetComputedUsagesComputedUsageArrayOutput() GetComputedUsagesComputedUsageArrayOutput
	ToGetComputedUsagesComputedUsageArrayOutputWithContext(context.Context) GetComputedUsagesComputedUsageArrayOutput
}

type GetComputedUsagesComputedUsageArray []GetComputedUsagesComputedUsageInput

func (GetComputedUsagesComputedUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesComputedUsage)(nil)).Elem()
}

func (i GetComputedUsagesComputedUsageArray) ToGetComputedUsagesComputedUsageArrayOutput() GetComputedUsagesComputedUsageArrayOutput {
	return i.ToGetComputedUsagesComputedUsageArrayOutputWithContext(context.Background())
}

func (i GetComputedUsagesComputedUsageArray) ToGetComputedUsagesComputedUsageArrayOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesComputedUsageArrayOutput)
}

type GetComputedUsagesComputedUsageOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesComputedUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesComputedUsage)(nil)).Elem()
}

func (o GetComputedUsagesComputedUsageOutput) ToGetComputedUsagesComputedUsageOutput() GetComputedUsagesComputedUsageOutput {
	return o
}

func (o GetComputedUsagesComputedUsageOutput) ToGetComputedUsagesComputedUsageOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageOutput {
	return o
}

// Subscribed service commitmentId.
func (o GetComputedUsagesComputedUsageOutput) CommitmentServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.CommitmentServiceId }).(pulumi.StringPtrOutput)
}

// SPM Internal compute records source .
func (o GetComputedUsagesComputedUsageOutput) ComputeSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.ComputeSource }).(pulumi.StringPtrOutput)
}

func (o GetComputedUsagesComputedUsageOutput) ComputedUsageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.ComputedUsageId }).(pulumi.StringPtrOutput)
}

// Computed Line Amount not rounded
func (o GetComputedUsagesComputedUsageOutput) Cost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.Cost }).(pulumi.StringPtrOutput)
}

// Computed Line Amount rounded.
func (o GetComputedUsagesComputedUsageOutput) CostRounded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.CostRounded }).(pulumi.StringPtrOutput)
}

// Currency code
func (o GetComputedUsagesComputedUsageOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.CurrencyCode }).(pulumi.StringPtrOutput)
}

// Data Center Attribute as sent by MQS to SPM.
func (o GetComputedUsagesComputedUsageOutput) DataCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.DataCenter }).(pulumi.StringPtrOutput)
}

// SPM Internal computed usage Id , 32 character string
func (o GetComputedUsagesComputedUsageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Invoicing status for the aggregated compute usage
func (o GetComputedUsagesComputedUsageOutput) IsInvoiced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *bool { return v.IsInvoiced }).(pulumi.BoolPtrOutput)
}

// MQS Identfier send to SPM , SPM does not transform this attribute and is received as is.
func (o GetComputedUsagesComputedUsageOutput) MqsMessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.MqsMessageId }).(pulumi.StringPtrOutput)
}

// Net Unit Price for the product in consideration, price actual.
func (o GetComputedUsagesComputedUsageOutput) NetUnitPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.NetUnitPrice }).(pulumi.StringPtrOutput)
}

// SPM Internal Original usage Line number identifier in SPM coming from Metered Services entity.
func (o GetComputedUsagesComputedUsageOutput) OriginalUsageNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.OriginalUsageNumber }).(pulumi.StringPtrOutput)
}

// Product part number for subscribed service line, called parent product.
func (o GetComputedUsagesComputedUsageOutput) ParentProducts() GetComputedUsagesComputedUsageParentProductArrayOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) []GetComputedUsagesComputedUsageParentProduct {
		return v.ParentProducts
	}).(GetComputedUsagesComputedUsageParentProductArrayOutput)
}

// Subscribed service line parent id
func (o GetComputedUsagesComputedUsageOutput) ParentSubscribedServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.ParentSubscribedServiceId }).(pulumi.StringPtrOutput)
}

// Subscription plan number
func (o GetComputedUsagesComputedUsageOutput) PlanNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.PlanNumber }).(pulumi.StringPtrOutput)
}

// Product description
func (o GetComputedUsagesComputedUsageOutput) Products() GetComputedUsagesComputedUsageProductArrayOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) []GetComputedUsagesComputedUsageProduct { return v.Products }).(GetComputedUsagesComputedUsageProductArrayOutput)
}

// Total Quantity that was used for computation
func (o GetComputedUsagesComputedUsageOutput) Quantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.Quantity }).(pulumi.StringPtrOutput)
}

// Ratecard Id at subscribed service level
func (o GetComputedUsagesComputedUsageOutput) RateCardId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.RateCardId }).(pulumi.StringPtrOutput)
}

// References the tier in the ratecard for that usage (OCI will be using the same reference to cross-reference for correctness on the usage csv report), comes from Entity OBSCNTR_IPT_PRODUCTTIER.
func (o GetComputedUsagesComputedUsageOutput) RateCardTierdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.RateCardTierdId }).(pulumi.StringPtrOutput)
}

// Computed Usage created time, expressed in RFC 3339 timestamp format.
func (o GetComputedUsagesComputedUsageOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// Metered Service date, expressed in RFC 3339 timestamp format.
func (o GetComputedUsagesComputedUsageOutput) TimeMeteredOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.TimeMeteredOn }).(pulumi.StringPtrOutput)
}

// Usae computation date, expressed in RFC 3339 timestamp format.
func (o GetComputedUsagesComputedUsageOutput) TimeOfArrival() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.TimeOfArrival }).(pulumi.StringPtrOutput)
}

// Computed Usage updated time, expressed in RFC 3339 timestamp format.
func (o GetComputedUsagesComputedUsageOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Usage compute type in SPM.
func (o GetComputedUsagesComputedUsageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Unit of Messure
func (o GetComputedUsagesComputedUsageOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

// SPM Internal usage Line number identifier in SPM coming from Metered Services entity.
func (o GetComputedUsagesComputedUsageOutput) UsageNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsage) *string { return v.UsageNumber }).(pulumi.StringPtrOutput)
}

type GetComputedUsagesComputedUsageArrayOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesComputedUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesComputedUsage)(nil)).Elem()
}

func (o GetComputedUsagesComputedUsageArrayOutput) ToGetComputedUsagesComputedUsageArrayOutput() GetComputedUsagesComputedUsageArrayOutput {
	return o
}

func (o GetComputedUsagesComputedUsageArrayOutput) ToGetComputedUsagesComputedUsageArrayOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageArrayOutput {
	return o
}

func (o GetComputedUsagesComputedUsageArrayOutput) Index(i pulumi.IntInput) GetComputedUsagesComputedUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputedUsagesComputedUsage {
		return vs[0].([]GetComputedUsagesComputedUsage)[vs[1].(int)]
	}).(GetComputedUsagesComputedUsageOutput)
}

type GetComputedUsagesComputedUsageParentProduct struct {
	// Metered service billing category
	BillingCategory *string `pulumi:"billingCategory"`
	// Product name
	Name *string `pulumi:"name"`
	// Product part number
	PartNumber *string `pulumi:"partNumber"`
	// Product category
	ProductCategory *string `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup *string `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType *string `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetComputedUsagesComputedUsageParentProductInput is an input type that accepts GetComputedUsagesComputedUsageParentProductArgs and GetComputedUsagesComputedUsageParentProductOutput values.
// You can construct a concrete instance of `GetComputedUsagesComputedUsageParentProductInput` via:
//
//	GetComputedUsagesComputedUsageParentProductArgs{...}
type GetComputedUsagesComputedUsageParentProductInput interface {
	pulumi.Input

	ToGetComputedUsagesComputedUsageParentProductOutput() GetComputedUsagesComputedUsageParentProductOutput
	ToGetComputedUsagesComputedUsageParentProductOutputWithContext(context.Context) GetComputedUsagesComputedUsageParentProductOutput
}

type GetComputedUsagesComputedUsageParentProductArgs struct {
	// Metered service billing category
	BillingCategory pulumi.StringPtrInput `pulumi:"billingCategory"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Product part number
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product category
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup pulumi.StringPtrInput `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType pulumi.StringPtrInput `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetComputedUsagesComputedUsageParentProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesComputedUsageParentProduct)(nil)).Elem()
}

func (i GetComputedUsagesComputedUsageParentProductArgs) ToGetComputedUsagesComputedUsageParentProductOutput() GetComputedUsagesComputedUsageParentProductOutput {
	return i.ToGetComputedUsagesComputedUsageParentProductOutputWithContext(context.Background())
}

func (i GetComputedUsagesComputedUsageParentProductArgs) ToGetComputedUsagesComputedUsageParentProductOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageParentProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesComputedUsageParentProductOutput)
}

// GetComputedUsagesComputedUsageParentProductArrayInput is an input type that accepts GetComputedUsagesComputedUsageParentProductArray and GetComputedUsagesComputedUsageParentProductArrayOutput values.
// You can construct a concrete instance of `GetComputedUsagesComputedUsageParentProductArrayInput` via:
//
//	GetComputedUsagesComputedUsageParentProductArray{ GetComputedUsagesComputedUsageParentProductArgs{...} }
type GetComputedUsagesComputedUsageParentProductArrayInput interface {
	pulumi.Input

	ToGetComputedUsagesComputedUsageParentProductArrayOutput() GetComputedUsagesComputedUsageParentProductArrayOutput
	ToGetComputedUsagesComputedUsageParentProductArrayOutputWithContext(context.Context) GetComputedUsagesComputedUsageParentProductArrayOutput
}

type GetComputedUsagesComputedUsageParentProductArray []GetComputedUsagesComputedUsageParentProductInput

func (GetComputedUsagesComputedUsageParentProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesComputedUsageParentProduct)(nil)).Elem()
}

func (i GetComputedUsagesComputedUsageParentProductArray) ToGetComputedUsagesComputedUsageParentProductArrayOutput() GetComputedUsagesComputedUsageParentProductArrayOutput {
	return i.ToGetComputedUsagesComputedUsageParentProductArrayOutputWithContext(context.Background())
}

func (i GetComputedUsagesComputedUsageParentProductArray) ToGetComputedUsagesComputedUsageParentProductArrayOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageParentProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesComputedUsageParentProductArrayOutput)
}

type GetComputedUsagesComputedUsageParentProductOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesComputedUsageParentProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesComputedUsageParentProduct)(nil)).Elem()
}

func (o GetComputedUsagesComputedUsageParentProductOutput) ToGetComputedUsagesComputedUsageParentProductOutput() GetComputedUsagesComputedUsageParentProductOutput {
	return o
}

func (o GetComputedUsagesComputedUsageParentProductOutput) ToGetComputedUsagesComputedUsageParentProductOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageParentProductOutput {
	return o
}

// Metered service billing category
func (o GetComputedUsagesComputedUsageParentProductOutput) BillingCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageParentProduct) *string { return v.BillingCategory }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetComputedUsagesComputedUsageParentProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageParentProduct) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Product part number
func (o GetComputedUsagesComputedUsageParentProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageParentProduct) *string { return v.PartNumber }).(pulumi.StringPtrOutput)
}

// Product category
func (o GetComputedUsagesComputedUsageParentProductOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageParentProduct) *string { return v.ProductCategory }).(pulumi.StringPtrOutput)
}

// Product provisioning group
func (o GetComputedUsagesComputedUsageParentProductOutput) ProvisioningGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageParentProduct) *string { return v.ProvisioningGroup }).(pulumi.StringPtrOutput)
}

// Rate card part type of Product
func (o GetComputedUsagesComputedUsageParentProductOutput) UcmRateCardPartType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageParentProduct) *string { return v.UcmRateCardPartType }).(pulumi.StringPtrOutput)
}

// Unit of Messure
func (o GetComputedUsagesComputedUsageParentProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageParentProduct) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

type GetComputedUsagesComputedUsageParentProductArrayOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesComputedUsageParentProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesComputedUsageParentProduct)(nil)).Elem()
}

func (o GetComputedUsagesComputedUsageParentProductArrayOutput) ToGetComputedUsagesComputedUsageParentProductArrayOutput() GetComputedUsagesComputedUsageParentProductArrayOutput {
	return o
}

func (o GetComputedUsagesComputedUsageParentProductArrayOutput) ToGetComputedUsagesComputedUsageParentProductArrayOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageParentProductArrayOutput {
	return o
}

func (o GetComputedUsagesComputedUsageParentProductArrayOutput) Index(i pulumi.IntInput) GetComputedUsagesComputedUsageParentProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputedUsagesComputedUsageParentProduct {
		return vs[0].([]GetComputedUsagesComputedUsageParentProduct)[vs[1].(int)]
	}).(GetComputedUsagesComputedUsageParentProductOutput)
}

type GetComputedUsagesComputedUsageProduct struct {
	// Metered service billing category
	BillingCategory *string `pulumi:"billingCategory"`
	// Product name
	Name *string `pulumi:"name"`
	// Product part number
	PartNumber *string `pulumi:"partNumber"`
	// Product category
	ProductCategory *string `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup *string `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType *string `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure *string `pulumi:"unitOfMeasure"`
}

// GetComputedUsagesComputedUsageProductInput is an input type that accepts GetComputedUsagesComputedUsageProductArgs and GetComputedUsagesComputedUsageProductOutput values.
// You can construct a concrete instance of `GetComputedUsagesComputedUsageProductInput` via:
//
//	GetComputedUsagesComputedUsageProductArgs{...}
type GetComputedUsagesComputedUsageProductInput interface {
	pulumi.Input

	ToGetComputedUsagesComputedUsageProductOutput() GetComputedUsagesComputedUsageProductOutput
	ToGetComputedUsagesComputedUsageProductOutputWithContext(context.Context) GetComputedUsagesComputedUsageProductOutput
}

type GetComputedUsagesComputedUsageProductArgs struct {
	// Metered service billing category
	BillingCategory pulumi.StringPtrInput `pulumi:"billingCategory"`
	// Product name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Product part number
	PartNumber pulumi.StringPtrInput `pulumi:"partNumber"`
	// Product category
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// Product provisioning group
	ProvisioningGroup pulumi.StringPtrInput `pulumi:"provisioningGroup"`
	// Rate card part type of Product
	UcmRateCardPartType pulumi.StringPtrInput `pulumi:"ucmRateCardPartType"`
	// Unit of Messure
	UnitOfMeasure pulumi.StringPtrInput `pulumi:"unitOfMeasure"`
}

func (GetComputedUsagesComputedUsageProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesComputedUsageProduct)(nil)).Elem()
}

func (i GetComputedUsagesComputedUsageProductArgs) ToGetComputedUsagesComputedUsageProductOutput() GetComputedUsagesComputedUsageProductOutput {
	return i.ToGetComputedUsagesComputedUsageProductOutputWithContext(context.Background())
}

func (i GetComputedUsagesComputedUsageProductArgs) ToGetComputedUsagesComputedUsageProductOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesComputedUsageProductOutput)
}

// GetComputedUsagesComputedUsageProductArrayInput is an input type that accepts GetComputedUsagesComputedUsageProductArray and GetComputedUsagesComputedUsageProductArrayOutput values.
// You can construct a concrete instance of `GetComputedUsagesComputedUsageProductArrayInput` via:
//
//	GetComputedUsagesComputedUsageProductArray{ GetComputedUsagesComputedUsageProductArgs{...} }
type GetComputedUsagesComputedUsageProductArrayInput interface {
	pulumi.Input

	ToGetComputedUsagesComputedUsageProductArrayOutput() GetComputedUsagesComputedUsageProductArrayOutput
	ToGetComputedUsagesComputedUsageProductArrayOutputWithContext(context.Context) GetComputedUsagesComputedUsageProductArrayOutput
}

type GetComputedUsagesComputedUsageProductArray []GetComputedUsagesComputedUsageProductInput

func (GetComputedUsagesComputedUsageProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesComputedUsageProduct)(nil)).Elem()
}

func (i GetComputedUsagesComputedUsageProductArray) ToGetComputedUsagesComputedUsageProductArrayOutput() GetComputedUsagesComputedUsageProductArrayOutput {
	return i.ToGetComputedUsagesComputedUsageProductArrayOutputWithContext(context.Background())
}

func (i GetComputedUsagesComputedUsageProductArray) ToGetComputedUsagesComputedUsageProductArrayOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesComputedUsageProductArrayOutput)
}

type GetComputedUsagesComputedUsageProductOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesComputedUsageProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesComputedUsageProduct)(nil)).Elem()
}

func (o GetComputedUsagesComputedUsageProductOutput) ToGetComputedUsagesComputedUsageProductOutput() GetComputedUsagesComputedUsageProductOutput {
	return o
}

func (o GetComputedUsagesComputedUsageProductOutput) ToGetComputedUsagesComputedUsageProductOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageProductOutput {
	return o
}

// Metered service billing category
func (o GetComputedUsagesComputedUsageProductOutput) BillingCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageProduct) *string { return v.BillingCategory }).(pulumi.StringPtrOutput)
}

// Product name
func (o GetComputedUsagesComputedUsageProductOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageProduct) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Product part number
func (o GetComputedUsagesComputedUsageProductOutput) PartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageProduct) *string { return v.PartNumber }).(pulumi.StringPtrOutput)
}

// Product category
func (o GetComputedUsagesComputedUsageProductOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageProduct) *string { return v.ProductCategory }).(pulumi.StringPtrOutput)
}

// Product provisioning group
func (o GetComputedUsagesComputedUsageProductOutput) ProvisioningGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageProduct) *string { return v.ProvisioningGroup }).(pulumi.StringPtrOutput)
}

// Rate card part type of Product
func (o GetComputedUsagesComputedUsageProductOutput) UcmRateCardPartType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageProduct) *string { return v.UcmRateCardPartType }).(pulumi.StringPtrOutput)
}

// Unit of Messure
func (o GetComputedUsagesComputedUsageProductOutput) UnitOfMeasure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesComputedUsageProduct) *string { return v.UnitOfMeasure }).(pulumi.StringPtrOutput)
}

type GetComputedUsagesComputedUsageProductArrayOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesComputedUsageProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesComputedUsageProduct)(nil)).Elem()
}

func (o GetComputedUsagesComputedUsageProductArrayOutput) ToGetComputedUsagesComputedUsageProductArrayOutput() GetComputedUsagesComputedUsageProductArrayOutput {
	return o
}

func (o GetComputedUsagesComputedUsageProductArrayOutput) ToGetComputedUsagesComputedUsageProductArrayOutputWithContext(ctx context.Context) GetComputedUsagesComputedUsageProductArrayOutput {
	return o
}

func (o GetComputedUsagesComputedUsageProductArrayOutput) Index(i pulumi.IntInput) GetComputedUsagesComputedUsageProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputedUsagesComputedUsageProduct {
		return vs[0].([]GetComputedUsagesComputedUsageProduct)[vs[1].(int)]
	}).(GetComputedUsagesComputedUsageProductOutput)
}

type GetComputedUsagesFilter struct {
	// Product name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetComputedUsagesFilterInput is an input type that accepts GetComputedUsagesFilterArgs and GetComputedUsagesFilterOutput values.
// You can construct a concrete instance of `GetComputedUsagesFilterInput` via:
//
//	GetComputedUsagesFilterArgs{...}
type GetComputedUsagesFilterInput interface {
	pulumi.Input

	ToGetComputedUsagesFilterOutput() GetComputedUsagesFilterOutput
	ToGetComputedUsagesFilterOutputWithContext(context.Context) GetComputedUsagesFilterOutput
}

type GetComputedUsagesFilterArgs struct {
	// Product name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetComputedUsagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesFilter)(nil)).Elem()
}

func (i GetComputedUsagesFilterArgs) ToGetComputedUsagesFilterOutput() GetComputedUsagesFilterOutput {
	return i.ToGetComputedUsagesFilterOutputWithContext(context.Background())
}

func (i GetComputedUsagesFilterArgs) ToGetComputedUsagesFilterOutputWithContext(ctx context.Context) GetComputedUsagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesFilterOutput)
}

// GetComputedUsagesFilterArrayInput is an input type that accepts GetComputedUsagesFilterArray and GetComputedUsagesFilterArrayOutput values.
// You can construct a concrete instance of `GetComputedUsagesFilterArrayInput` via:
//
//	GetComputedUsagesFilterArray{ GetComputedUsagesFilterArgs{...} }
type GetComputedUsagesFilterArrayInput interface {
	pulumi.Input

	ToGetComputedUsagesFilterArrayOutput() GetComputedUsagesFilterArrayOutput
	ToGetComputedUsagesFilterArrayOutputWithContext(context.Context) GetComputedUsagesFilterArrayOutput
}

type GetComputedUsagesFilterArray []GetComputedUsagesFilterInput

func (GetComputedUsagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesFilter)(nil)).Elem()
}

func (i GetComputedUsagesFilterArray) ToGetComputedUsagesFilterArrayOutput() GetComputedUsagesFilterArrayOutput {
	return i.ToGetComputedUsagesFilterArrayOutputWithContext(context.Background())
}

func (i GetComputedUsagesFilterArray) ToGetComputedUsagesFilterArrayOutputWithContext(ctx context.Context) GetComputedUsagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputedUsagesFilterArrayOutput)
}

type GetComputedUsagesFilterOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputedUsagesFilter)(nil)).Elem()
}

func (o GetComputedUsagesFilterOutput) ToGetComputedUsagesFilterOutput() GetComputedUsagesFilterOutput {
	return o
}

func (o GetComputedUsagesFilterOutput) ToGetComputedUsagesFilterOutputWithContext(ctx context.Context) GetComputedUsagesFilterOutput {
	return o
}

// Product name
func (o GetComputedUsagesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputedUsagesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetComputedUsagesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComputedUsagesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetComputedUsagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputedUsagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetComputedUsagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetComputedUsagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputedUsagesFilter)(nil)).Elem()
}

func (o GetComputedUsagesFilterArrayOutput) ToGetComputedUsagesFilterArrayOutput() GetComputedUsagesFilterArrayOutput {
	return o
}

func (o GetComputedUsagesFilterArrayOutput) ToGetComputedUsagesFilterArrayOutputWithContext(ctx context.Context) GetComputedUsagesFilterArrayOutput {
	return o
}

func (o GetComputedUsagesFilterArrayOutput) Index(i pulumi.IntInput) GetComputedUsagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputedUsagesFilter {
		return vs[0].([]GetComputedUsagesFilter)[vs[1].(int)]
	}).(GetComputedUsagesFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedArrayInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedParentProductInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedParentProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayInput)(nil)).Elem(), GetCommitmentAggregatedsComputedUsageAggregatedParentProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsFilterInput)(nil)).Elem(), GetCommitmentAggregatedsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommitmentAggregatedsFilterArrayInput)(nil)).Elem(), GetCommitmentAggregatedsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsageParentProductInput)(nil)).Elem(), GetComputedUsageParentProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsageParentProductArrayInput)(nil)).Elem(), GetComputedUsageParentProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsageProductInput)(nil)).Elem(), GetComputedUsageProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsageProductArrayInput)(nil)).Elem(), GetComputedUsageProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesComputedUsageInput)(nil)).Elem(), GetComputedUsagesComputedUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesComputedUsageArrayInput)(nil)).Elem(), GetComputedUsagesComputedUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesComputedUsageParentProductInput)(nil)).Elem(), GetComputedUsagesComputedUsageParentProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesComputedUsageParentProductArrayInput)(nil)).Elem(), GetComputedUsagesComputedUsageParentProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesComputedUsageProductInput)(nil)).Elem(), GetComputedUsagesComputedUsageProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesComputedUsageProductArrayInput)(nil)).Elem(), GetComputedUsagesComputedUsageProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesFilterInput)(nil)).Elem(), GetComputedUsagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputedUsagesFilterArrayInput)(nil)).Elem(), GetComputedUsagesFilterArray{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedArrayOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageArrayOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsageProductArrayOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedParentProductOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsComputedUsageAggregatedParentProductArrayOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsFilterOutput{})
	pulumi.RegisterOutputType(GetCommitmentAggregatedsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetComputedUsageParentProductOutput{})
	pulumi.RegisterOutputType(GetComputedUsageParentProductArrayOutput{})
	pulumi.RegisterOutputType(GetComputedUsageProductOutput{})
	pulumi.RegisterOutputType(GetComputedUsageProductArrayOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesComputedUsageOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesComputedUsageArrayOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesComputedUsageParentProductOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesComputedUsageParentProductArrayOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesComputedUsageProductOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesComputedUsageProductArrayOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesFilterOutput{})
	pulumi.RegisterOutputType(GetComputedUsagesFilterArrayOutput{})
}
