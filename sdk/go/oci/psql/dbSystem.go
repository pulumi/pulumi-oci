// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package psql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Db System resource in Oracle Cloud Infrastructure Psql service.
//
// Creates a new DbSystem.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Psql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Psql.NewDbSystem(ctx, "testDbSystem", &Psql.DbSystemArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DbVersion:     pulumi.Any(_var.Db_system_db_version),
//				DisplayName:   pulumi.Any(_var.Db_system_display_name),
//				NetworkDetails: &psql.DbSystemNetworkDetailsArgs{
//					SubnetId:                   pulumi.Any(oci_core_subnet.Test_subnet.Id),
//					NsgIds:                     pulumi.Any(_var.Db_system_network_details_nsg_ids),
//					PrimaryDbEndpointPrivateIp: pulumi.Any(_var.Db_system_network_details_primary_db_endpoint_private_ip),
//				},
//				Shape: pulumi.Any(_var.Db_system_shape),
//				StorageDetails: &psql.DbSystemStorageDetailsArgs{
//					IsRegionallyDurable: pulumi.Any(_var.Db_system_storage_details_is_regionally_durable),
//					SystemType:          pulumi.Any(_var.Db_system_storage_details_system_type),
//					AvailabilityDomain:  pulumi.Any(_var.Db_system_storage_details_availability_domain),
//					Iops:                pulumi.Any(_var.Db_system_storage_details_iops),
//				},
//				ConfigId: pulumi.Any(oci_apm_config_config.Test_config.Id),
//				Credentials: &psql.DbSystemCredentialsArgs{
//					PasswordDetails: &psql.DbSystemCredentialsPasswordDetailsArgs{
//						PasswordType:  pulumi.Any(_var.Db_system_credentials_password_details_password_type),
//						Password:      pulumi.Any(_var.Db_system_credentials_password_details_password),
//						SecretId:      pulumi.Any(oci_vault_secret.Test_secret.Id),
//						SecretVersion: pulumi.Any(_var.Db_system_credentials_password_details_secret_version),
//					},
//					Username: pulumi.Any(_var.Db_system_credentials_username),
//				},
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				Description: pulumi.Any(_var.Db_system_description),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				InstanceCount:           pulumi.Any(_var.Db_system_instance_count),
//				InstanceMemorySizeInGbs: pulumi.Any(_var.Db_system_instance_memory_size_in_gbs),
//				InstanceOcpuCount:       pulumi.Any(_var.Db_system_instance_ocpu_count),
//				InstancesDetails: psql.DbSystemInstancesDetailArray{
//					&psql.DbSystemInstancesDetailArgs{
//						Description: pulumi.Any(_var.Db_system_instances_details_description),
//						DisplayName: pulumi.Any(_var.Db_system_instances_details_display_name),
//						PrivateIp:   pulumi.Any(_var.Db_system_instances_details_private_ip),
//					},
//				},
//				ManagementPolicy: &psql.DbSystemManagementPolicyArgs{
//					BackupPolicy: &psql.DbSystemManagementPolicyBackupPolicyArgs{
//						BackupStart:     pulumi.Any(_var.Db_system_management_policy_backup_policy_backup_start),
//						DaysOfTheMonths: pulumi.Any(_var.Db_system_management_policy_backup_policy_days_of_the_month),
//						DaysOfTheWeeks:  pulumi.Any(_var.Db_system_management_policy_backup_policy_days_of_the_week),
//						Kind:            pulumi.Any(_var.Db_system_management_policy_backup_policy_kind),
//						RetentionDays:   pulumi.Any(_var.Db_system_management_policy_backup_policy_retention_days),
//					},
//					MaintenanceWindowStart: pulumi.Any(_var.Db_system_management_policy_maintenance_window_start),
//				},
//				Source: &psql.DbSystemSourceArgs{
//					SourceType:                     pulumi.Any(_var.Db_system_source_source_type),
//					BackupId:                       pulumi.Any(oci_psql_backup.Test_backup.Id),
//					IsHavingRestoreConfigOverrides: pulumi.Any(_var.Db_system_source_is_having_restore_config_overrides),
//				},
//				SystemType: pulumi.Any(_var.Db_system_system_type),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DbSystems can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Psql/dbSystem:DbSystem test_db_system "id"
//
// ```
type DbSystem struct {
	pulumi.CustomResourceState

	// The DB system username.
	AdminUsername pulumi.StringOutput `pulumi:"adminUsername"`
	// (Updatable) Compartment identifier
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Configuration identifier
	ConfigId pulumi.StringOutput `pulumi:"configId"`
	// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
	Credentials DbSystemCredentialsPtrOutput `pulumi:"credentials"`
	// Version of DbSystem software.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// Description of the DbInstance. This field should be input by the user.
	Description pulumi.StringOutput `pulumi:"description"`
	// Display name of the DbInstance.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Count of DbInstances to be created in the DbSystem.
	InstanceCount pulumi.IntOutput `pulumi:"instanceCount"`
	// The total amount of memory available to each DbInstance, in gigabytes.
	InstanceMemorySizeInGbs pulumi.IntOutput `pulumi:"instanceMemorySizeInGbs"`
	// The total number of OCPUs available to each DbInstance.
	InstanceOcpuCount pulumi.IntOutput `pulumi:"instanceOcpuCount"`
	// The list of DbInstances in the DbSystem.
	Instances DbSystemInstanceArrayOutput `pulumi:"instances"`
	// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
	InstancesDetails DbSystemInstancesDetailArrayOutput `pulumi:"instancesDetails"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Posgresql DB system management policy update details
	ManagementPolicy DbSystemManagementPolicyOutput `pulumi:"managementPolicy"`
	// DbSystem network details.
	NetworkDetails DbSystemNetworkDetailsOutput `pulumi:"networkDetails"`
	// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// New source is used to restore the DB system.
	Source DbSystemSourceOutput `pulumi:"source"`
	// The current state of the DbSystem.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Storage details of the DbSystem.
	StorageDetails DbSystemStorageDetailsOutput `pulumi:"storageDetails"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Type of the DbSystem.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SystemType pulumi.StringOutput `pulumi:"systemType"`
	// The time the the DbSystem was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the DbSystem was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDbSystem registers a new resource with the given unique name, arguments, and options.
func NewDbSystem(ctx *pulumi.Context,
	name string, args *DbSystemArgs, opts ...pulumi.ResourceOption) (*DbSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DbVersion == nil {
		return nil, errors.New("invalid value for required argument 'DbVersion'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.NetworkDetails == nil {
		return nil, errors.New("invalid value for required argument 'NetworkDetails'")
	}
	if args.Shape == nil {
		return nil, errors.New("invalid value for required argument 'Shape'")
	}
	if args.StorageDetails == nil {
		return nil, errors.New("invalid value for required argument 'StorageDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DbSystem
	err := ctx.RegisterResource("oci:Psql/dbSystem:DbSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbSystem gets an existing DbSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbSystemState, opts ...pulumi.ResourceOption) (*DbSystem, error) {
	var resource DbSystem
	err := ctx.ReadResource("oci:Psql/dbSystem:DbSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbSystem resources.
type dbSystemState struct {
	// The DB system username.
	AdminUsername *string `pulumi:"adminUsername"`
	// (Updatable) Compartment identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// Configuration identifier
	ConfigId *string `pulumi:"configId"`
	// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
	Credentials *DbSystemCredentials `pulumi:"credentials"`
	// Version of DbSystem software.
	DbVersion *string `pulumi:"dbVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description of the DbInstance. This field should be input by the user.
	Description *string `pulumi:"description"`
	// Display name of the DbInstance.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Count of DbInstances to be created in the DbSystem.
	InstanceCount *int `pulumi:"instanceCount"`
	// The total amount of memory available to each DbInstance, in gigabytes.
	InstanceMemorySizeInGbs *int `pulumi:"instanceMemorySizeInGbs"`
	// The total number of OCPUs available to each DbInstance.
	InstanceOcpuCount *int `pulumi:"instanceOcpuCount"`
	// The list of DbInstances in the DbSystem.
	Instances []DbSystemInstance `pulumi:"instances"`
	// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
	InstancesDetails []DbSystemInstancesDetail `pulumi:"instancesDetails"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Posgresql DB system management policy update details
	ManagementPolicy *DbSystemManagementPolicy `pulumi:"managementPolicy"`
	// DbSystem network details.
	NetworkDetails *DbSystemNetworkDetails `pulumi:"networkDetails"`
	// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
	Shape *string `pulumi:"shape"`
	// New source is used to restore the DB system.
	Source *DbSystemSource `pulumi:"source"`
	// The current state of the DbSystem.
	State *string `pulumi:"state"`
	// (Updatable) Storage details of the DbSystem.
	StorageDetails *DbSystemStorageDetails `pulumi:"storageDetails"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Type of the DbSystem.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SystemType *string `pulumi:"systemType"`
	// The time the the DbSystem was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DbSystem was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DbSystemState struct {
	// The DB system username.
	AdminUsername pulumi.StringPtrInput
	// (Updatable) Compartment identifier
	CompartmentId pulumi.StringPtrInput
	// Configuration identifier
	ConfigId pulumi.StringPtrInput
	// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
	Credentials DbSystemCredentialsPtrInput
	// Version of DbSystem software.
	DbVersion pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// Description of the DbInstance. This field should be input by the user.
	Description pulumi.StringPtrInput
	// Display name of the DbInstance.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Count of DbInstances to be created in the DbSystem.
	InstanceCount pulumi.IntPtrInput
	// The total amount of memory available to each DbInstance, in gigabytes.
	InstanceMemorySizeInGbs pulumi.IntPtrInput
	// The total number of OCPUs available to each DbInstance.
	InstanceOcpuCount pulumi.IntPtrInput
	// The list of DbInstances in the DbSystem.
	Instances DbSystemInstanceArrayInput
	// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
	InstancesDetails DbSystemInstancesDetailArrayInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Posgresql DB system management policy update details
	ManagementPolicy DbSystemManagementPolicyPtrInput
	// DbSystem network details.
	NetworkDetails DbSystemNetworkDetailsPtrInput
	// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
	Shape pulumi.StringPtrInput
	// New source is used to restore the DB system.
	Source DbSystemSourcePtrInput
	// The current state of the DbSystem.
	State pulumi.StringPtrInput
	// (Updatable) Storage details of the DbSystem.
	StorageDetails DbSystemStorageDetailsPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Type of the DbSystem.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SystemType pulumi.StringPtrInput
	// The time the the DbSystem was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the DbSystem was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
}

func (DbSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSystemState)(nil)).Elem()
}

type dbSystemArgs struct {
	// (Updatable) Compartment identifier
	CompartmentId string `pulumi:"compartmentId"`
	// Configuration identifier
	ConfigId *string `pulumi:"configId"`
	// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
	Credentials *DbSystemCredentials `pulumi:"credentials"`
	// Version of DbSystem software.
	DbVersion string `pulumi:"dbVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description of the DbInstance. This field should be input by the user.
	Description *string `pulumi:"description"`
	// Display name of the DbInstance.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Count of DbInstances to be created in the DbSystem.
	InstanceCount *int `pulumi:"instanceCount"`
	// The total amount of memory available to each DbInstance, in gigabytes.
	InstanceMemorySizeInGbs *int `pulumi:"instanceMemorySizeInGbs"`
	// The total number of OCPUs available to each DbInstance.
	InstanceOcpuCount *int `pulumi:"instanceOcpuCount"`
	// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
	InstancesDetails []DbSystemInstancesDetail `pulumi:"instancesDetails"`
	// (Updatable) Posgresql DB system management policy update details
	ManagementPolicy *DbSystemManagementPolicy `pulumi:"managementPolicy"`
	// DbSystem network details.
	NetworkDetails DbSystemNetworkDetails `pulumi:"networkDetails"`
	// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
	Shape string `pulumi:"shape"`
	// New source is used to restore the DB system.
	Source *DbSystemSource `pulumi:"source"`
	// (Updatable) Storage details of the DbSystem.
	StorageDetails DbSystemStorageDetails `pulumi:"storageDetails"`
	// Type of the DbSystem.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SystemType *string `pulumi:"systemType"`
}

// The set of arguments for constructing a DbSystem resource.
type DbSystemArgs struct {
	// (Updatable) Compartment identifier
	CompartmentId pulumi.StringInput
	// Configuration identifier
	ConfigId pulumi.StringPtrInput
	// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
	Credentials DbSystemCredentialsPtrInput
	// Version of DbSystem software.
	DbVersion pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// Description of the DbInstance. This field should be input by the user.
	Description pulumi.StringPtrInput
	// Display name of the DbInstance.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Count of DbInstances to be created in the DbSystem.
	InstanceCount pulumi.IntPtrInput
	// The total amount of memory available to each DbInstance, in gigabytes.
	InstanceMemorySizeInGbs pulumi.IntPtrInput
	// The total number of OCPUs available to each DbInstance.
	InstanceOcpuCount pulumi.IntPtrInput
	// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
	InstancesDetails DbSystemInstancesDetailArrayInput
	// (Updatable) Posgresql DB system management policy update details
	ManagementPolicy DbSystemManagementPolicyPtrInput
	// DbSystem network details.
	NetworkDetails DbSystemNetworkDetailsInput
	// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
	Shape pulumi.StringInput
	// New source is used to restore the DB system.
	Source DbSystemSourcePtrInput
	// (Updatable) Storage details of the DbSystem.
	StorageDetails DbSystemStorageDetailsInput
	// Type of the DbSystem.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SystemType pulumi.StringPtrInput
}

func (DbSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSystemArgs)(nil)).Elem()
}

type DbSystemInput interface {
	pulumi.Input

	ToDbSystemOutput() DbSystemOutput
	ToDbSystemOutputWithContext(ctx context.Context) DbSystemOutput
}

func (*DbSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSystem)(nil)).Elem()
}

func (i *DbSystem) ToDbSystemOutput() DbSystemOutput {
	return i.ToDbSystemOutputWithContext(context.Background())
}

func (i *DbSystem) ToDbSystemOutputWithContext(ctx context.Context) DbSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSystemOutput)
}

// DbSystemArrayInput is an input type that accepts DbSystemArray and DbSystemArrayOutput values.
// You can construct a concrete instance of `DbSystemArrayInput` via:
//
//	DbSystemArray{ DbSystemArgs{...} }
type DbSystemArrayInput interface {
	pulumi.Input

	ToDbSystemArrayOutput() DbSystemArrayOutput
	ToDbSystemArrayOutputWithContext(context.Context) DbSystemArrayOutput
}

type DbSystemArray []DbSystemInput

func (DbSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbSystem)(nil)).Elem()
}

func (i DbSystemArray) ToDbSystemArrayOutput() DbSystemArrayOutput {
	return i.ToDbSystemArrayOutputWithContext(context.Background())
}

func (i DbSystemArray) ToDbSystemArrayOutputWithContext(ctx context.Context) DbSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSystemArrayOutput)
}

// DbSystemMapInput is an input type that accepts DbSystemMap and DbSystemMapOutput values.
// You can construct a concrete instance of `DbSystemMapInput` via:
//
//	DbSystemMap{ "key": DbSystemArgs{...} }
type DbSystemMapInput interface {
	pulumi.Input

	ToDbSystemMapOutput() DbSystemMapOutput
	ToDbSystemMapOutputWithContext(context.Context) DbSystemMapOutput
}

type DbSystemMap map[string]DbSystemInput

func (DbSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbSystem)(nil)).Elem()
}

func (i DbSystemMap) ToDbSystemMapOutput() DbSystemMapOutput {
	return i.ToDbSystemMapOutputWithContext(context.Background())
}

func (i DbSystemMap) ToDbSystemMapOutputWithContext(ctx context.Context) DbSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSystemMapOutput)
}

type DbSystemOutput struct{ *pulumi.OutputState }

func (DbSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSystem)(nil)).Elem()
}

func (o DbSystemOutput) ToDbSystemOutput() DbSystemOutput {
	return o
}

func (o DbSystemOutput) ToDbSystemOutputWithContext(ctx context.Context) DbSystemOutput {
	return o
}

// The DB system username.
func (o DbSystemOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.AdminUsername }).(pulumi.StringOutput)
}

// (Updatable) Compartment identifier
func (o DbSystemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Configuration identifier
func (o DbSystemOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.ConfigId }).(pulumi.StringOutput)
}

// Initial DbSystem credentials that the DbSystem will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
func (o DbSystemOutput) Credentials() DbSystemCredentialsPtrOutput {
	return o.ApplyT(func(v *DbSystem) DbSystemCredentialsPtrOutput { return v.Credentials }).(DbSystemCredentialsPtrOutput)
}

// Version of DbSystem software.
func (o DbSystemOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.DbVersion }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o DbSystemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// Description of the DbInstance. This field should be input by the user.
func (o DbSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Display name of the DbInstance.
func (o DbSystemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o DbSystemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Count of DbInstances to be created in the DbSystem.
func (o DbSystemOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.IntOutput { return v.InstanceCount }).(pulumi.IntOutput)
}

// The total amount of memory available to each DbInstance, in gigabytes.
func (o DbSystemOutput) InstanceMemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.IntOutput { return v.InstanceMemorySizeInGbs }).(pulumi.IntOutput)
}

// The total number of OCPUs available to each DbInstance.
func (o DbSystemOutput) InstanceOcpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.IntOutput { return v.InstanceOcpuCount }).(pulumi.IntOutput)
}

// The list of DbInstances in the DbSystem.
func (o DbSystemOutput) Instances() DbSystemInstanceArrayOutput {
	return o.ApplyT(func(v *DbSystem) DbSystemInstanceArrayOutput { return v.Instances }).(DbSystemInstanceArrayOutput)
}

// Details of DbInstances to be created. Optional parameter. If specified, its size must match instanceCount.
func (o DbSystemOutput) InstancesDetails() DbSystemInstancesDetailArrayOutput {
	return o.ApplyT(func(v *DbSystem) DbSystemInstancesDetailArrayOutput { return v.InstancesDetails }).(DbSystemInstancesDetailArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o DbSystemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) Posgresql DB system management policy update details
func (o DbSystemOutput) ManagementPolicy() DbSystemManagementPolicyOutput {
	return o.ApplyT(func(v *DbSystem) DbSystemManagementPolicyOutput { return v.ManagementPolicy }).(DbSystemManagementPolicyOutput)
}

// DbSystem network details.
func (o DbSystemOutput) NetworkDetails() DbSystemNetworkDetailsOutput {
	return o.ApplyT(func(v *DbSystem) DbSystemNetworkDetailsOutput { return v.NetworkDetails }).(DbSystemNetworkDetailsOutput)
}

// Shape of DbInstance. This name should match from with one of the available shapes from /shapes API.
func (o DbSystemOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// New source is used to restore the DB system.
func (o DbSystemOutput) Source() DbSystemSourceOutput {
	return o.ApplyT(func(v *DbSystem) DbSystemSourceOutput { return v.Source }).(DbSystemSourceOutput)
}

// The current state of the DbSystem.
func (o DbSystemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) Storage details of the DbSystem.
func (o DbSystemOutput) StorageDetails() DbSystemStorageDetailsOutput {
	return o.ApplyT(func(v *DbSystem) DbSystemStorageDetailsOutput { return v.StorageDetails }).(DbSystemStorageDetailsOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o DbSystemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// Type of the DbSystem.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DbSystemOutput) SystemType() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.SystemType }).(pulumi.StringOutput)
}

// The time the the DbSystem was created. An RFC3339 formatted datetime string
func (o DbSystemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DbSystem was updated. An RFC3339 formatted datetime string
func (o DbSystemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSystem) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type DbSystemArrayOutput struct{ *pulumi.OutputState }

func (DbSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbSystem)(nil)).Elem()
}

func (o DbSystemArrayOutput) ToDbSystemArrayOutput() DbSystemArrayOutput {
	return o
}

func (o DbSystemArrayOutput) ToDbSystemArrayOutputWithContext(ctx context.Context) DbSystemArrayOutput {
	return o
}

func (o DbSystemArrayOutput) Index(i pulumi.IntInput) DbSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DbSystem {
		return vs[0].([]*DbSystem)[vs[1].(int)]
	}).(DbSystemOutput)
}

type DbSystemMapOutput struct{ *pulumi.OutputState }

func (DbSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbSystem)(nil)).Elem()
}

func (o DbSystemMapOutput) ToDbSystemMapOutput() DbSystemMapOutput {
	return o
}

func (o DbSystemMapOutput) ToDbSystemMapOutputWithContext(ctx context.Context) DbSystemMapOutput {
	return o
}

func (o DbSystemMapOutput) MapIndex(k pulumi.StringInput) DbSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DbSystem {
		return vs[0].(map[string]*DbSystem)[vs[1].(string)]
	}).(DbSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbSystemInput)(nil)).Elem(), &DbSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbSystemArrayInput)(nil)).Elem(), DbSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbSystemMapInput)(nil)).Elem(), DbSystemMap{})
	pulumi.RegisterOutputType(DbSystemOutput{})
	pulumi.RegisterOutputType(DbSystemArrayOutput{})
	pulumi.RegisterOutputType(DbSystemMapOutput{})
}
