// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package psql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Backups in Oracle Cloud Infrastructure Psql service.
//
// Returns a list of backups.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Psql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Psql.GetBackups(ctx, &psql.GetBackupsArgs{
//				BackupId:      pulumi.StringRef(testBackup.Id),
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(backupDisplayName),
//				Id:            pulumi.StringRef(backupId),
//				State:         pulumi.StringRef(backupState),
//				TimeEnded:     pulumi.StringRef(backupTimeEnded),
//				TimeStarted:   pulumi.StringRef(backupTimeStarted),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetBackups(ctx *pulumi.Context, args *GetBackupsArgs, opts ...pulumi.InvokeOption) (*GetBackupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBackupsResult
	err := ctx.Invoke("oci:Psql/getBackups:getBackups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackups.
type GetBackupsArgs struct {
	// A unique identifier for the backup.
	BackupId *string `pulumi:"backupId"`
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetBackupsFilter `pulumi:"filters"`
	// A unique identifier for the database system.
	Id *string `pulumi:"id"`
	// A filter to return only resources if their `lifecycleState` matches the given `lifecycleState`.
	State *string `pulumi:"state"`
	// The end date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
	TimeEnded *string `pulumi:"timeEnded"`
	// The start date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
	TimeStarted *string `pulumi:"timeStarted"`
}

// A collection of values returned by getBackups.
type GetBackupsResult struct {
	// The list of backup_collection.
	BackupCollections []GetBackupsBackupCollection `pulumi:"backupCollections"`
	BackupId          *string                      `pulumi:"backupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the backup.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly display name for the backup. Avoid entering confidential information.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetBackupsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
	Id *string `pulumi:"id"`
	// The current state of the backup.
	State       *string `pulumi:"state"`
	TimeEnded   *string `pulumi:"timeEnded"`
	TimeStarted *string `pulumi:"timeStarted"`
}

func GetBackupsOutput(ctx *pulumi.Context, args GetBackupsOutputArgs, opts ...pulumi.InvokeOption) GetBackupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBackupsResult, error) {
			args := v.(GetBackupsArgs)
			r, err := GetBackups(ctx, &args, opts...)
			var s GetBackupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBackupsResultOutput)
}

// A collection of arguments for invoking getBackups.
type GetBackupsOutputArgs struct {
	// A unique identifier for the backup.
	BackupId pulumi.StringPtrInput `pulumi:"backupId"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput      `pulumi:"displayName"`
	Filters     GetBackupsFilterArrayInput `pulumi:"filters"`
	// A unique identifier for the database system.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources if their `lifecycleState` matches the given `lifecycleState`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The end date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
	TimeEnded pulumi.StringPtrInput `pulumi:"timeEnded"`
	// The start date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
	TimeStarted pulumi.StringPtrInput `pulumi:"timeStarted"`
}

func (GetBackupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsArgs)(nil)).Elem()
}

// A collection of values returned by getBackups.
type GetBackupsResultOutput struct{ *pulumi.OutputState }

func (GetBackupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsResult)(nil)).Elem()
}

func (o GetBackupsResultOutput) ToGetBackupsResultOutput() GetBackupsResultOutput {
	return o
}

func (o GetBackupsResultOutput) ToGetBackupsResultOutputWithContext(ctx context.Context) GetBackupsResultOutput {
	return o
}

// The list of backup_collection.
func (o GetBackupsResultOutput) BackupCollections() GetBackupsBackupCollectionArrayOutput {
	return o.ApplyT(func(v GetBackupsResult) []GetBackupsBackupCollection { return v.BackupCollections }).(GetBackupsBackupCollectionArrayOutput)
}

func (o GetBackupsResultOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupsResult) *string { return v.BackupId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the backup.
func (o GetBackupsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly display name for the backup. Avoid entering confidential information.
func (o GetBackupsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetBackupsResultOutput) Filters() GetBackupsFilterArrayOutput {
	return o.ApplyT(func(v GetBackupsResult) []GetBackupsFilter { return v.Filters }).(GetBackupsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
func (o GetBackupsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the backup.
func (o GetBackupsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetBackupsResultOutput) TimeEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupsResult) *string { return v.TimeEnded }).(pulumi.StringPtrOutput)
}

func (o GetBackupsResultOutput) TimeStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupsResult) *string { return v.TimeStarted }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBackupsResultOutput{})
}
