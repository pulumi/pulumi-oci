// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package psql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Psql service.
//
// Gets a configuration by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/psql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := psql.GetConfiguration(ctx, &psql.GetConfigurationArgs{
//				ConfigurationId: testConfigurationOciPsqlConfiguration.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConfiguration(ctx *pulumi.Context, args *LookupConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationResult
	err := ctx.Invoke("oci:Psql/getConfiguration:getConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfiguration.
type LookupConfigurationArgs struct {
	// A unique identifier for the configuration.
	ConfigurationId string `pulumi:"configurationId"`
}

// A collection of values returned by getConfiguration.
type LookupConfigurationResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the configuration.
	CompartmentId string `pulumi:"compartmentId"`
	// Indicates the collection of compatible shapes for this configuration.
	CompatibleShapes []string `pulumi:"compatibleShapes"`
	// The type of configuration. Either user-created or a default configuration.
	ConfigType string `pulumi:"configType"`
	// List of configuration details.
	ConfigurationDetails     []GetConfigurationConfigurationDetail     `pulumi:"configurationDetails"`
	ConfigurationId          string                                    `pulumi:"configurationId"`
	DbConfigurationOverrides []GetConfigurationDbConfigurationOverride `pulumi:"dbConfigurationOverrides"`
	// Version of the PostgreSQL database.
	DbVersion string `pulumi:"dbVersion"`
	// The Default configuration used for this configuration.
	DefaultConfigId string `pulumi:"defaultConfigId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A description for the configuration.
	Description string `pulumi:"description"`
	// A user-friendly display name for the configuration. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A unique identifier for the configuration. Immutable on creation.
	Id string `pulumi:"id"`
	// Memory size in gigabytes with 1GB increment.
	InstanceMemorySizeInGbs int `pulumi:"instanceMemorySizeInGbs"`
	// CPU core count.
	InstanceOcpuCount int `pulumi:"instanceOcpuCount"`
	// Whether the configuration supports flexible shapes.
	IsFlexible bool `pulumi:"isFlexible"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The name of the shape for the configuration.
	Shape string `pulumi:"shape"`
	// The current state of the configuration.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time that the configuration was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

func LookupConfigurationOutput(ctx *pulumi.Context, args LookupConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConfigurationResultOutput, error) {
			args := v.(LookupConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Psql/getConfiguration:getConfiguration", args, LookupConfigurationResultOutput{}, options).(LookupConfigurationResultOutput), nil
		}).(LookupConfigurationResultOutput)
}

// A collection of arguments for invoking getConfiguration.
type LookupConfigurationOutputArgs struct {
	// A unique identifier for the configuration.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
}

func (LookupConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getConfiguration.
type LookupConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationResult)(nil)).Elem()
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutput() LookupConfigurationResultOutput {
	return o
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutputWithContext(ctx context.Context) LookupConfigurationResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the configuration.
func (o LookupConfigurationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Indicates the collection of compatible shapes for this configuration.
func (o LookupConfigurationResultOutput) CompatibleShapes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConfigurationResult) []string { return v.CompatibleShapes }).(pulumi.StringArrayOutput)
}

// The type of configuration. Either user-created or a default configuration.
func (o LookupConfigurationResultOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.ConfigType }).(pulumi.StringOutput)
}

// List of configuration details.
func (o LookupConfigurationResultOutput) ConfigurationDetails() GetConfigurationConfigurationDetailArrayOutput {
	return o.ApplyT(func(v LookupConfigurationResult) []GetConfigurationConfigurationDetail { return v.ConfigurationDetails }).(GetConfigurationConfigurationDetailArrayOutput)
}

func (o LookupConfigurationResultOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

func (o LookupConfigurationResultOutput) DbConfigurationOverrides() GetConfigurationDbConfigurationOverrideArrayOutput {
	return o.ApplyT(func(v LookupConfigurationResult) []GetConfigurationDbConfigurationOverride {
		return v.DbConfigurationOverrides
	}).(GetConfigurationDbConfigurationOverrideArrayOutput)
}

// Version of the PostgreSQL database.
func (o LookupConfigurationResultOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.DbVersion }).(pulumi.StringOutput)
}

// The Default configuration used for this configuration.
func (o LookupConfigurationResultOutput) DefaultConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.DefaultConfigId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupConfigurationResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A description for the configuration.
func (o LookupConfigurationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly display name for the configuration. Avoid entering confidential information.
func (o LookupConfigurationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupConfigurationResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A unique identifier for the configuration. Immutable on creation.
func (o LookupConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Memory size in gigabytes with 1GB increment.
func (o LookupConfigurationResultOutput) InstanceMemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupConfigurationResult) int { return v.InstanceMemorySizeInGbs }).(pulumi.IntOutput)
}

// CPU core count.
func (o LookupConfigurationResultOutput) InstanceOcpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupConfigurationResult) int { return v.InstanceOcpuCount }).(pulumi.IntOutput)
}

// Whether the configuration supports flexible shapes.
func (o LookupConfigurationResultOutput) IsFlexible() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConfigurationResult) bool { return v.IsFlexible }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupConfigurationResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The name of the shape for the configuration.
func (o LookupConfigurationResultOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Shape }).(pulumi.StringOutput)
}

// The current state of the configuration.
func (o LookupConfigurationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupConfigurationResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time that the configuration was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
func (o LookupConfigurationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationResultOutput{})
}
