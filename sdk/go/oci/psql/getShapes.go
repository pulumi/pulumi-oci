// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package psql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Shapes in Oracle Cloud Infrastructure Psql service.
//
// Returns the list of shapes allowed in the region.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/psql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := psql.GetShapes(ctx, &psql.GetShapesArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				Id:            pulumi.StringRef(shapeId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetShapes(ctx *pulumi.Context, args *GetShapesArgs, opts ...pulumi.InvokeOption) (*GetShapesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetShapesResult
	err := ctx.Invoke("oci:Psql/getShapes:getShapes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getShapes.
type GetShapesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string           `pulumi:"compartmentId"`
	Filters       []GetShapesFilter `pulumi:"filters"`
	// A filter to return the feature by the shape name.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getShapes.
type GetShapesResult struct {
	CompartmentId *string           `pulumi:"compartmentId"`
	Filters       []GetShapesFilter `pulumi:"filters"`
	// A unique identifier for the shape.
	Id *string `pulumi:"id"`
	// The list of shape_collection.
	ShapeCollections []GetShapesShapeCollection `pulumi:"shapeCollections"`
}

func GetShapesOutput(ctx *pulumi.Context, args GetShapesOutputArgs, opts ...pulumi.InvokeOption) GetShapesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetShapesResultOutput, error) {
			args := v.(GetShapesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Psql/getShapes:getShapes", args, GetShapesResultOutput{}, options).(GetShapesResultOutput), nil
		}).(GetShapesResultOutput)
}

// A collection of arguments for invoking getShapes.
type GetShapesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput     `pulumi:"compartmentId"`
	Filters       GetShapesFilterArrayInput `pulumi:"filters"`
	// A filter to return the feature by the shape name.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetShapesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesArgs)(nil)).Elem()
}

// A collection of values returned by getShapes.
type GetShapesResultOutput struct{ *pulumi.OutputState }

func (GetShapesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShapesResult)(nil)).Elem()
}

func (o GetShapesResultOutput) ToGetShapesResultOutput() GetShapesResultOutput {
	return o
}

func (o GetShapesResultOutput) ToGetShapesResultOutputWithContext(ctx context.Context) GetShapesResultOutput {
	return o
}

func (o GetShapesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetShapesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetShapesResultOutput) Filters() GetShapesFilterArrayOutput {
	return o.ApplyT(func(v GetShapesResult) []GetShapesFilter { return v.Filters }).(GetShapesFilterArrayOutput)
}

// A unique identifier for the shape.
func (o GetShapesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetShapesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of shape_collection.
func (o GetShapesResultOutput) ShapeCollections() GetShapesShapeCollectionArrayOutput {
	return o.ApplyT(func(v GetShapesResult) []GetShapesShapeCollection { return v.ShapeCollections }).(GetShapesShapeCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetShapesResultOutput{})
}
