// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package queue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Queues in Oracle Cloud Infrastructure Queue service.
//
// Returns a list of queues.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Queue"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Queue.GetQueues(ctx, &queue.GetQueuesArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(queueDisplayName),
//				Id:            pulumi.StringRef(queueId),
//				State:         pulumi.StringRef(queueState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQueues(ctx *pulumi.Context, args *GetQueuesArgs, opts ...pulumi.InvokeOption) (*GetQueuesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQueuesResult
	err := ctx.Invoke("oci:Queue/getQueues:getQueues", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueues.
type GetQueuesArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string           `pulumi:"displayName"`
	Filters     []GetQueuesFilter `pulumi:"filters"`
	// The unique queue identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getQueues.
type GetQueuesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the queue.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name for the queue. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string           `pulumi:"displayName"`
	Filters     []GetQueuesFilter `pulumi:"filters"`
	// A unique identifier for the queue that is immutable on creation.
	Id *string `pulumi:"id"`
	// The list of queue_collection.
	QueueCollections []GetQueuesQueueCollection `pulumi:"queueCollections"`
	// The current state of the queue.
	State *string `pulumi:"state"`
}

func GetQueuesOutput(ctx *pulumi.Context, args GetQueuesOutputArgs, opts ...pulumi.InvokeOption) GetQueuesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQueuesResult, error) {
			args := v.(GetQueuesArgs)
			r, err := GetQueues(ctx, &args, opts...)
			var s GetQueuesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQueuesResultOutput)
}

// A collection of arguments for invoking getQueues.
type GetQueuesOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput     `pulumi:"displayName"`
	Filters     GetQueuesFilterArrayInput `pulumi:"filters"`
	// The unique queue identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetQueuesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesArgs)(nil)).Elem()
}

// A collection of values returned by getQueues.
type GetQueuesResultOutput struct{ *pulumi.OutputState }

func (GetQueuesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesResult)(nil)).Elem()
}

func (o GetQueuesResultOutput) ToGetQueuesResultOutput() GetQueuesResultOutput {
	return o
}

func (o GetQueuesResultOutput) ToGetQueuesResultOutputWithContext(ctx context.Context) GetQueuesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the queue.
func (o GetQueuesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueuesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name for the queue. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetQueuesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueuesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetQueuesResultOutput) Filters() GetQueuesFilterArrayOutput {
	return o.ApplyT(func(v GetQueuesResult) []GetQueuesFilter { return v.Filters }).(GetQueuesFilterArrayOutput)
}

// A unique identifier for the queue that is immutable on creation.
func (o GetQueuesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueuesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of queue_collection.
func (o GetQueuesResultOutput) QueueCollections() GetQueuesQueueCollectionArrayOutput {
	return o.ApplyT(func(v GetQueuesResult) []GetQueuesQueueCollection { return v.QueueCollections }).(GetQueuesQueueCollectionArrayOutput)
}

// The current state of the queue.
func (o GetQueuesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueuesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQueuesResultOutput{})
}
