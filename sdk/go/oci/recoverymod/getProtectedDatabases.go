// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package recoverymod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Protected Databases in Oracle Cloud Infrastructure Recovery service.
//
// Lists the protected databases based on the specified parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/recoverymod"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := recoverymod.GetProtectedDatabases(ctx, &recoverymod.GetProtectedDatabasesArgs{
//				CompartmentId:           compartmentId,
//				DisplayName:             pulumi.StringRef(protectedDatabaseDisplayName),
//				Id:                      pulumi.StringRef(protectedDatabaseId),
//				ProtectionPolicyId:      pulumi.StringRef(testProtectionPolicy.Id),
//				RecoveryServiceSubnetId: pulumi.StringRef(testRecoveryServiceSubnet.Id),
//				State:                   pulumi.StringRef(protectedDatabaseState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProtectedDatabases(ctx *pulumi.Context, args *GetProtectedDatabasesArgs, opts ...pulumi.InvokeOption) (*GetProtectedDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProtectedDatabasesResult
	err := ctx.Invoke("oci:RecoveryMod/getProtectedDatabases:getProtectedDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProtectedDatabases.
type GetProtectedDatabasesArgs struct {
	// The compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire 'displayname' given.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetProtectedDatabasesFilter `pulumi:"filters"`
	// The protected database OCID.
	Id *string `pulumi:"id"`
	// The protection policy OCID.
	ProtectionPolicyId *string `pulumi:"protectionPolicyId"`
	// The recovery service subnet OCID.
	RecoveryServiceSubnetId *string `pulumi:"recoveryServiceSubnetId"`
	// A filter to return only the resources that match the specified lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getProtectedDatabases.
type GetProtectedDatabasesResult struct {
	// The OCID of the compartment that contains the protected database.
	CompartmentId string `pulumi:"compartmentId"`
	// The protected database name. You can change the displayName. Avoid entering confidential information.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetProtectedDatabasesFilter `pulumi:"filters"`
	// The OCID of the protected database.
	Id *string `pulumi:"id"`
	// The list of protected_database_collection.
	ProtectedDatabaseCollections []GetProtectedDatabasesProtectedDatabaseCollection `pulumi:"protectedDatabaseCollections"`
	// The OCID of the protection policy associated with the protected database.
	ProtectionPolicyId *string `pulumi:"protectionPolicyId"`
	// Recovery Service Subnet Identifier.
	RecoveryServiceSubnetId *string `pulumi:"recoveryServiceSubnetId"`
	// The current state of the Protected Database.
	State *string `pulumi:"state"`
}

func GetProtectedDatabasesOutput(ctx *pulumi.Context, args GetProtectedDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetProtectedDatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetProtectedDatabasesResultOutput, error) {
			args := v.(GetProtectedDatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:RecoveryMod/getProtectedDatabases:getProtectedDatabases", args, GetProtectedDatabasesResultOutput{}, options).(GetProtectedDatabasesResultOutput), nil
		}).(GetProtectedDatabasesResultOutput)
}

// A collection of arguments for invoking getProtectedDatabases.
type GetProtectedDatabasesOutputArgs struct {
	// The compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire 'displayname' given.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetProtectedDatabasesFilterArrayInput `pulumi:"filters"`
	// The protected database OCID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The protection policy OCID.
	ProtectionPolicyId pulumi.StringPtrInput `pulumi:"protectionPolicyId"`
	// The recovery service subnet OCID.
	RecoveryServiceSubnetId pulumi.StringPtrInput `pulumi:"recoveryServiceSubnetId"`
	// A filter to return only the resources that match the specified lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetProtectedDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectedDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getProtectedDatabases.
type GetProtectedDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetProtectedDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectedDatabasesResult)(nil)).Elem()
}

func (o GetProtectedDatabasesResultOutput) ToGetProtectedDatabasesResultOutput() GetProtectedDatabasesResultOutput {
	return o
}

func (o GetProtectedDatabasesResultOutput) ToGetProtectedDatabasesResultOutputWithContext(ctx context.Context) GetProtectedDatabasesResultOutput {
	return o
}

// The OCID of the compartment that contains the protected database.
func (o GetProtectedDatabasesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The protected database name. You can change the displayName. Avoid entering confidential information.
func (o GetProtectedDatabasesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetProtectedDatabasesResultOutput) Filters() GetProtectedDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) []GetProtectedDatabasesFilter { return v.Filters }).(GetProtectedDatabasesFilterArrayOutput)
}

// The OCID of the protected database.
func (o GetProtectedDatabasesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of protected_database_collection.
func (o GetProtectedDatabasesResultOutput) ProtectedDatabaseCollections() GetProtectedDatabasesProtectedDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) []GetProtectedDatabasesProtectedDatabaseCollection {
		return v.ProtectedDatabaseCollections
	}).(GetProtectedDatabasesProtectedDatabaseCollectionArrayOutput)
}

// The OCID of the protection policy associated with the protected database.
func (o GetProtectedDatabasesResultOutput) ProtectionPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) *string { return v.ProtectionPolicyId }).(pulumi.StringPtrOutput)
}

// Recovery Service Subnet Identifier.
func (o GetProtectedDatabasesResultOutput) RecoveryServiceSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) *string { return v.RecoveryServiceSubnetId }).(pulumi.StringPtrOutput)
}

// The current state of the Protected Database.
func (o GetProtectedDatabasesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProtectedDatabasesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProtectedDatabasesResultOutput{})
}
