// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package recoverymod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Recovery Service Subnets in Oracle Cloud Infrastructure Recovery service.
//
// Returns a list of Recovery Service Subnets.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/RecoveryMod"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := RecoveryMod.GetRecoveryServiceSubnets(ctx, &recoverymod.GetRecoveryServiceSubnetsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Recovery_service_subnet_display_name),
//				Id:            pulumi.StringRef(_var.Recovery_service_subnet_id),
//				State:         pulumi.StringRef(_var.Recovery_service_subnet_state),
//				VcnId:         pulumi.StringRef(oci_core_vcn.Test_vcn.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRecoveryServiceSubnets(ctx *pulumi.Context, args *GetRecoveryServiceSubnetsArgs, opts ...pulumi.InvokeOption) (*GetRecoveryServiceSubnetsResult, error) {
	var rv GetRecoveryServiceSubnetsResult
	err := ctx.Invoke("oci:RecoveryMod/getRecoveryServiceSubnets:getRecoveryServiceSubnets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecoveryServiceSubnets.
type GetRecoveryServiceSubnetsArgs struct {
	// The compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire 'displayname' given.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetRecoveryServiceSubnetsFilter `pulumi:"filters"`
	// The recovery service subnet OCID.
	Id *string `pulumi:"id"`
	// A filter to return only the resources that match the specified lifecycle state. Allowed values are:
	// * CREATING
	// * UPDATING
	// * ACTIVE
	// * DELETING
	// * DELETED
	// * FAILED
	State *string `pulumi:"state"`
	// The OCID of the virtual cloud network (VCN) associated with the recovery service subnet.
	VcnId *string `pulumi:"vcnId"`
}

// A collection of values returned by getRecoveryServiceSubnets.
type GetRecoveryServiceSubnetsResult struct {
	// The compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-provided name for the recovery service subnet.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetRecoveryServiceSubnetsFilter `pulumi:"filters"`
	// The recovery service subnet OCID.
	Id *string `pulumi:"id"`
	// The list of recovery_service_subnet_collection.
	RecoveryServiceSubnetCollections []GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection `pulumi:"recoveryServiceSubnetCollections"`
	// The current state of the recovery service subnet. Allowed values are:
	// * CREATING
	// * UPDATING
	// * ACTIVE
	// * DELETING
	// * DELETED
	// * FAILED
	State *string `pulumi:"state"`
	// VCN Identifier.
	VcnId *string `pulumi:"vcnId"`
}

func GetRecoveryServiceSubnetsOutput(ctx *pulumi.Context, args GetRecoveryServiceSubnetsOutputArgs, opts ...pulumi.InvokeOption) GetRecoveryServiceSubnetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRecoveryServiceSubnetsResult, error) {
			args := v.(GetRecoveryServiceSubnetsArgs)
			r, err := GetRecoveryServiceSubnets(ctx, &args, opts...)
			var s GetRecoveryServiceSubnetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRecoveryServiceSubnetsResultOutput)
}

// A collection of arguments for invoking getRecoveryServiceSubnets.
type GetRecoveryServiceSubnetsOutputArgs struct {
	// The compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire 'displayname' given.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetRecoveryServiceSubnetsFilterArrayInput `pulumi:"filters"`
	// The recovery service subnet OCID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only the resources that match the specified lifecycle state. Allowed values are:
	// * CREATING
	// * UPDATING
	// * ACTIVE
	// * DELETING
	// * DELETED
	// * FAILED
	State pulumi.StringPtrInput `pulumi:"state"`
	// The OCID of the virtual cloud network (VCN) associated with the recovery service subnet.
	VcnId pulumi.StringPtrInput `pulumi:"vcnId"`
}

func (GetRecoveryServiceSubnetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecoveryServiceSubnetsArgs)(nil)).Elem()
}

// A collection of values returned by getRecoveryServiceSubnets.
type GetRecoveryServiceSubnetsResultOutput struct{ *pulumi.OutputState }

func (GetRecoveryServiceSubnetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecoveryServiceSubnetsResult)(nil)).Elem()
}

func (o GetRecoveryServiceSubnetsResultOutput) ToGetRecoveryServiceSubnetsResultOutput() GetRecoveryServiceSubnetsResultOutput {
	return o
}

func (o GetRecoveryServiceSubnetsResultOutput) ToGetRecoveryServiceSubnetsResultOutputWithContext(ctx context.Context) GetRecoveryServiceSubnetsResultOutput {
	return o
}

// The compartment OCID.
func (o GetRecoveryServiceSubnetsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecoveryServiceSubnetsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-provided name for the recovery service subnet.
func (o GetRecoveryServiceSubnetsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecoveryServiceSubnetsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetRecoveryServiceSubnetsResultOutput) Filters() GetRecoveryServiceSubnetsFilterArrayOutput {
	return o.ApplyT(func(v GetRecoveryServiceSubnetsResult) []GetRecoveryServiceSubnetsFilter { return v.Filters }).(GetRecoveryServiceSubnetsFilterArrayOutput)
}

// The recovery service subnet OCID.
func (o GetRecoveryServiceSubnetsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecoveryServiceSubnetsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of recovery_service_subnet_collection.
func (o GetRecoveryServiceSubnetsResultOutput) RecoveryServiceSubnetCollections() GetRecoveryServiceSubnetsRecoveryServiceSubnetCollectionArrayOutput {
	return o.ApplyT(func(v GetRecoveryServiceSubnetsResult) []GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection {
		return v.RecoveryServiceSubnetCollections
	}).(GetRecoveryServiceSubnetsRecoveryServiceSubnetCollectionArrayOutput)
}

// The current state of the recovery service subnet. Allowed values are:
// * CREATING
// * UPDATING
// * ACTIVE
// * DELETING
// * DELETED
// * FAILED
func (o GetRecoveryServiceSubnetsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecoveryServiceSubnetsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// VCN Identifier.
func (o GetRecoveryServiceSubnetsResultOutput) VcnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecoveryServiceSubnetsResult) *string { return v.VcnId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRecoveryServiceSubnetsResultOutput{})
}
