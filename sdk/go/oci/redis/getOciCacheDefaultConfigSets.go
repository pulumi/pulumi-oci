// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Oci Cache Default Config Sets in Oracle Cloud Infrastructure Redis service.
//
// Lists the Oracle Cloud Infrastructure Cache Default Config Sets in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.GetOciCacheDefaultConfigSets(ctx, &redis.GetOciCacheDefaultConfigSetsArgs{
//				CompartmentId:   compartmentId,
//				DisplayName:     pulumi.StringRef(ociCacheDefaultConfigSetDisplayName),
//				Id:              pulumi.StringRef(ociCacheDefaultConfigSetId),
//				SoftwareVersion: pulumi.StringRef(ociCacheDefaultConfigSetSoftwareVersion),
//				State:           pulumi.StringRef(ociCacheDefaultConfigSetState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOciCacheDefaultConfigSets(ctx *pulumi.Context, args *GetOciCacheDefaultConfigSetsArgs, opts ...pulumi.InvokeOption) (*GetOciCacheDefaultConfigSetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOciCacheDefaultConfigSetsResult
	err := ctx.Invoke("oci:Redis/getOciCacheDefaultConfigSets:getOciCacheDefaultConfigSets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOciCacheDefaultConfigSets.
type GetOciCacheDefaultConfigSetsArgs struct {
	// The unique identifier for the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                              `pulumi:"displayName"`
	Filters     []GetOciCacheDefaultConfigSetsFilter `pulumi:"filters"`
	// Unique Oracle Cloud Infrastructure Cache Default Config Set identifier.
	Id *string `pulumi:"id"`
	// A filter to return the Oracle Cloud Infrastructure Cache Config Set resources, whose software version matches with the given software version.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// A filter to return the Oracle Cloud Infrastructure Cache Default Config Set resources, whose lifecycle state matches with the given lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getOciCacheDefaultConfigSets.
type GetOciCacheDefaultConfigSetsResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name of the Oracle Cloud Infrastructure Cache Default Config Set.
	DisplayName *string                              `pulumi:"displayName"`
	Filters     []GetOciCacheDefaultConfigSetsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Oracle Cloud Infrastructure Cache Default Config Set.
	Id *string `pulumi:"id"`
	// The list of oci_cache_default_config_set_collection.
	OciCacheDefaultConfigSetCollections []GetOciCacheDefaultConfigSetsOciCacheDefaultConfigSetCollection `pulumi:"ociCacheDefaultConfigSetCollections"`
	// The engine version of the Oracle Cloud Infrastructure Cache Default Config Set.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// The current state of the Oracle Cloud Infrastructure Cache Default Config Set.
	State *string `pulumi:"state"`
}

func GetOciCacheDefaultConfigSetsOutput(ctx *pulumi.Context, args GetOciCacheDefaultConfigSetsOutputArgs, opts ...pulumi.InvokeOption) GetOciCacheDefaultConfigSetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOciCacheDefaultConfigSetsResultOutput, error) {
			args := v.(GetOciCacheDefaultConfigSetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Redis/getOciCacheDefaultConfigSets:getOciCacheDefaultConfigSets", args, GetOciCacheDefaultConfigSetsResultOutput{}, options).(GetOciCacheDefaultConfigSetsResultOutput), nil
		}).(GetOciCacheDefaultConfigSetsResultOutput)
}

// A collection of arguments for invoking getOciCacheDefaultConfigSets.
type GetOciCacheDefaultConfigSetsOutputArgs struct {
	// The unique identifier for the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                        `pulumi:"displayName"`
	Filters     GetOciCacheDefaultConfigSetsFilterArrayInput `pulumi:"filters"`
	// Unique Oracle Cloud Infrastructure Cache Default Config Set identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return the Oracle Cloud Infrastructure Cache Config Set resources, whose software version matches with the given software version.
	SoftwareVersion pulumi.StringPtrInput `pulumi:"softwareVersion"`
	// A filter to return the Oracle Cloud Infrastructure Cache Default Config Set resources, whose lifecycle state matches with the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetOciCacheDefaultConfigSetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOciCacheDefaultConfigSetsArgs)(nil)).Elem()
}

// A collection of values returned by getOciCacheDefaultConfigSets.
type GetOciCacheDefaultConfigSetsResultOutput struct{ *pulumi.OutputState }

func (GetOciCacheDefaultConfigSetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOciCacheDefaultConfigSetsResult)(nil)).Elem()
}

func (o GetOciCacheDefaultConfigSetsResultOutput) ToGetOciCacheDefaultConfigSetsResultOutput() GetOciCacheDefaultConfigSetsResultOutput {
	return o
}

func (o GetOciCacheDefaultConfigSetsResultOutput) ToGetOciCacheDefaultConfigSetsResultOutputWithContext(ctx context.Context) GetOciCacheDefaultConfigSetsResultOutput {
	return o
}

func (o GetOciCacheDefaultConfigSetsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOciCacheDefaultConfigSetsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name of the Oracle Cloud Infrastructure Cache Default Config Set.
func (o GetOciCacheDefaultConfigSetsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOciCacheDefaultConfigSetsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetOciCacheDefaultConfigSetsResultOutput) Filters() GetOciCacheDefaultConfigSetsFilterArrayOutput {
	return o.ApplyT(func(v GetOciCacheDefaultConfigSetsResult) []GetOciCacheDefaultConfigSetsFilter { return v.Filters }).(GetOciCacheDefaultConfigSetsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Oracle Cloud Infrastructure Cache Default Config Set.
func (o GetOciCacheDefaultConfigSetsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOciCacheDefaultConfigSetsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of oci_cache_default_config_set_collection.
func (o GetOciCacheDefaultConfigSetsResultOutput) OciCacheDefaultConfigSetCollections() GetOciCacheDefaultConfigSetsOciCacheDefaultConfigSetCollectionArrayOutput {
	return o.ApplyT(func(v GetOciCacheDefaultConfigSetsResult) []GetOciCacheDefaultConfigSetsOciCacheDefaultConfigSetCollection {
		return v.OciCacheDefaultConfigSetCollections
	}).(GetOciCacheDefaultConfigSetsOciCacheDefaultConfigSetCollectionArrayOutput)
}

// The engine version of the Oracle Cloud Infrastructure Cache Default Config Set.
func (o GetOciCacheDefaultConfigSetsResultOutput) SoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOciCacheDefaultConfigSetsResult) *string { return v.SoftwareVersion }).(pulumi.StringPtrOutput)
}

// The current state of the Oracle Cloud Infrastructure Cache Default Config Set.
func (o GetOciCacheDefaultConfigSetsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOciCacheDefaultConfigSetsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOciCacheDefaultConfigSetsResultOutput{})
}
