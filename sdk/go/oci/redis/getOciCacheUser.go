// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
//
// Get an existing Oracle Cloud Infrastructure Cache users based on the ID (OCID).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.GetOciCacheUser(ctx, &redis.GetOciCacheUserArgs{
//				OciCacheUserId: testOciCacheUserOciRedisOciCacheUser.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOciCacheUser(ctx *pulumi.Context, args *LookupOciCacheUserArgs, opts ...pulumi.InvokeOption) (*LookupOciCacheUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOciCacheUserResult
	err := ctx.Invoke("oci:Redis/getOciCacheUser:getOciCacheUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOciCacheUser.
type LookupOciCacheUserArgs struct {
	// A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
	OciCacheUserId string `pulumi:"ociCacheUserId"`
}

// A collection of values returned by getOciCacheUser.
type LookupOciCacheUserResult struct {
	// ACL string of Oracle Cloud Infrastructure cache user.
	AclString string `pulumi:"aclString"`
	// These are the Authentication details of an Oracle Cloud Infrastructure cache user.
	AuthenticationModes []GetOciCacheUserAuthenticationMode `pulumi:"authenticationModes"`
	// Oracle Cloud Infrastructure Cache user compartment ID.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Description of Oracle Cloud Infrastructure cache user.
	Description string `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Oracle Cloud Infrastructure Cache user unique ID.
	Id string `pulumi:"id"`
	// Oracle Cloud Infrastructure Cache user name.
	Name           string `pulumi:"name"`
	OciCacheUserId string `pulumi:"ociCacheUserId"`
	// Oracle Cloud Infrastructure Cache user lifecycle state.
	State string `pulumi:"state"`
	// Oracle Cloud Infrastructure Cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the cluster.
	Status string `pulumi:"status"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time, when the Oracle Cloud Infrastructure cache user was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time, when the Oracle Cloud Infrastructure cache user was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupOciCacheUserOutput(ctx *pulumi.Context, args LookupOciCacheUserOutputArgs, opts ...pulumi.InvokeOption) LookupOciCacheUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOciCacheUserResultOutput, error) {
			args := v.(LookupOciCacheUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Redis/getOciCacheUser:getOciCacheUser", args, LookupOciCacheUserResultOutput{}, options).(LookupOciCacheUserResultOutput), nil
		}).(LookupOciCacheUserResultOutput)
}

// A collection of arguments for invoking getOciCacheUser.
type LookupOciCacheUserOutputArgs struct {
	// A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
	OciCacheUserId pulumi.StringInput `pulumi:"ociCacheUserId"`
}

func (LookupOciCacheUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOciCacheUserArgs)(nil)).Elem()
}

// A collection of values returned by getOciCacheUser.
type LookupOciCacheUserResultOutput struct{ *pulumi.OutputState }

func (LookupOciCacheUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOciCacheUserResult)(nil)).Elem()
}

func (o LookupOciCacheUserResultOutput) ToLookupOciCacheUserResultOutput() LookupOciCacheUserResultOutput {
	return o
}

func (o LookupOciCacheUserResultOutput) ToLookupOciCacheUserResultOutputWithContext(ctx context.Context) LookupOciCacheUserResultOutput {
	return o
}

// ACL string of Oracle Cloud Infrastructure cache user.
func (o LookupOciCacheUserResultOutput) AclString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.AclString }).(pulumi.StringOutput)
}

// These are the Authentication details of an Oracle Cloud Infrastructure cache user.
func (o LookupOciCacheUserResultOutput) AuthenticationModes() GetOciCacheUserAuthenticationModeArrayOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) []GetOciCacheUserAuthenticationMode { return v.AuthenticationModes }).(GetOciCacheUserAuthenticationModeArrayOutput)
}

// Oracle Cloud Infrastructure Cache user compartment ID.
func (o LookupOciCacheUserResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupOciCacheUserResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Description of Oracle Cloud Infrastructure cache user.
func (o LookupOciCacheUserResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.Description }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupOciCacheUserResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Oracle Cloud Infrastructure Cache user unique ID.
func (o LookupOciCacheUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Cache user name.
func (o LookupOciCacheUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupOciCacheUserResultOutput) OciCacheUserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.OciCacheUserId }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Cache user lifecycle state.
func (o LookupOciCacheUserResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.State }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the cluster.
func (o LookupOciCacheUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.Status }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupOciCacheUserResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time, when the Oracle Cloud Infrastructure cache user was created.
func (o LookupOciCacheUserResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time, when the Oracle Cloud Infrastructure cache user was updated.
func (o LookupOciCacheUserResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOciCacheUserResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOciCacheUserResultOutput{})
}
