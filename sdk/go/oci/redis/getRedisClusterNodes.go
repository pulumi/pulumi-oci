// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Redis Cluster Nodes in Oracle Cloud Infrastructure Redis service.
//
// Gets the list of all nodes in a cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Redis.GetRedisClusterNodes(ctx, &redis.GetRedisClusterNodesArgs{
//				RedisClusterId: testRedisCluster.Id,
//				DisplayName:    pulumi.StringRef(redisClusterNodeDisplayName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRedisClusterNodes(ctx *pulumi.Context, args *GetRedisClusterNodesArgs, opts ...pulumi.InvokeOption) (*GetRedisClusterNodesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRedisClusterNodesResult
	err := ctx.Invoke("oci:Redis/getRedisClusterNodes:getRedisClusterNodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRedisClusterNodes.
type GetRedisClusterNodesArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetRedisClusterNodesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
	RedisClusterId string `pulumi:"redisClusterId"`
}

// A collection of values returned by getRedisClusterNodes.
type GetRedisClusterNodesResult struct {
	// A user-friendly name of a cluster node.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetRedisClusterNodesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the cluster
	RedisClusterId string `pulumi:"redisClusterId"`
	// The list of redis_node_collection.
	RedisNodeCollections []GetRedisClusterNodesRedisNodeCollection `pulumi:"redisNodeCollections"`
}

func GetRedisClusterNodesOutput(ctx *pulumi.Context, args GetRedisClusterNodesOutputArgs, opts ...pulumi.InvokeOption) GetRedisClusterNodesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRedisClusterNodesResult, error) {
			args := v.(GetRedisClusterNodesArgs)
			r, err := GetRedisClusterNodes(ctx, &args, opts...)
			var s GetRedisClusterNodesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRedisClusterNodesResultOutput)
}

// A collection of arguments for invoking getRedisClusterNodes.
type GetRedisClusterNodesOutputArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                `pulumi:"displayName"`
	Filters     GetRedisClusterNodesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
	RedisClusterId pulumi.StringInput `pulumi:"redisClusterId"`
}

func (GetRedisClusterNodesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesArgs)(nil)).Elem()
}

// A collection of values returned by getRedisClusterNodes.
type GetRedisClusterNodesResultOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesResult)(nil)).Elem()
}

func (o GetRedisClusterNodesResultOutput) ToGetRedisClusterNodesResultOutput() GetRedisClusterNodesResultOutput {
	return o
}

func (o GetRedisClusterNodesResultOutput) ToGetRedisClusterNodesResultOutputWithContext(ctx context.Context) GetRedisClusterNodesResultOutput {
	return o
}

// A user-friendly name of a cluster node.
func (o GetRedisClusterNodesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisClusterNodesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetRedisClusterNodesResultOutput) Filters() GetRedisClusterNodesFilterArrayOutput {
	return o.ApplyT(func(v GetRedisClusterNodesResult) []GetRedisClusterNodesFilter { return v.Filters }).(GetRedisClusterNodesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRedisClusterNodesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the cluster
func (o GetRedisClusterNodesResultOutput) RedisClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodesResult) string { return v.RedisClusterId }).(pulumi.StringOutput)
}

// The list of redis_node_collection.
func (o GetRedisClusterNodesResultOutput) RedisNodeCollections() GetRedisClusterNodesRedisNodeCollectionArrayOutput {
	return o.ApplyT(func(v GetRedisClusterNodesResult) []GetRedisClusterNodesRedisNodeCollection {
		return v.RedisNodeCollections
	}).(GetRedisClusterNodesRedisNodeCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRedisClusterNodesResultOutput{})
}
