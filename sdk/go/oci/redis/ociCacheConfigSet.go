// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Oci Cache Config Set resource in Oracle Cloud Infrastructure Redis service.
//
// Create a new Oracle Cloud Infrastructure Cache Config Set for the given Oracle Cloud Infrastructure cache engine version.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.NewOciCacheConfigSet(ctx, "test_oci_cache_config_set", &redis.OciCacheConfigSetArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				ConfigurationDetails: &redis.OciCacheConfigSetConfigurationDetailsArgs{
//					Items: redis.OciCacheConfigSetConfigurationDetailsItemArray{
//						&redis.OciCacheConfigSetConfigurationDetailsItemArgs{
//							ConfigKey:   pulumi.Any(ociCacheConfigSetConfigurationDetailsItemsConfigKey),
//							ConfigValue: pulumi.Any(ociCacheConfigSetConfigurationDetailsItemsConfigValue),
//						},
//					},
//				},
//				DisplayName:     pulumi.Any(ociCacheConfigSetDisplayName),
//				SoftwareVersion: pulumi.Any(ociCacheConfigSetSoftwareVersion),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(ociCacheConfigSetDescription),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OciCacheConfigSets can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Redis/ociCacheConfigSet:OciCacheConfigSet test_oci_cache_config_set "id"
// ```
type OciCacheConfigSet struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// List of Oracle Cloud Infrastructure Cache Config Set Values.
	ConfigurationDetails OciCacheConfigSetConfigurationDetailsOutput `pulumi:"configurationDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the default Oracle Cloud Infrastructure Cache Config Set which the custom Oracle Cloud Infrastructure Cache Config Set is based upon.
	DefaultConfigSetId pulumi.StringOutput `pulumi:"defaultConfigSetId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Description for the custom Oracle Cloud Infrastructure Cache Config Set.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareVersion pulumi.StringOutput `pulumi:"softwareVersion"`
	// The current state of the Oracle Cloud Infrastructure Cache Config Set.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the Oracle Cloud Infrastructure Cache Config Set was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the Oracle Cloud Infrastructure Cache Config Set was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOciCacheConfigSet registers a new resource with the given unique name, arguments, and options.
func NewOciCacheConfigSet(ctx *pulumi.Context,
	name string, args *OciCacheConfigSetArgs, opts ...pulumi.ResourceOption) (*OciCacheConfigSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ConfigurationDetails == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationDetails'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.SoftwareVersion == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OciCacheConfigSet
	err := ctx.RegisterResource("oci:Redis/ociCacheConfigSet:OciCacheConfigSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOciCacheConfigSet gets an existing OciCacheConfigSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOciCacheConfigSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OciCacheConfigSetState, opts ...pulumi.ResourceOption) (*OciCacheConfigSet, error) {
	var resource OciCacheConfigSet
	err := ctx.ReadResource("oci:Redis/ociCacheConfigSet:OciCacheConfigSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OciCacheConfigSet resources.
type ociCacheConfigSetState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
	CompartmentId *string `pulumi:"compartmentId"`
	// List of Oracle Cloud Infrastructure Cache Config Set Values.
	ConfigurationDetails *OciCacheConfigSetConfigurationDetails `pulumi:"configurationDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the default Oracle Cloud Infrastructure Cache Config Set which the custom Oracle Cloud Infrastructure Cache Config Set is based upon.
	DefaultConfigSetId *string `pulumi:"defaultConfigSetId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description for the custom Oracle Cloud Infrastructure Cache Config Set.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// The current state of the Oracle Cloud Infrastructure Cache Config Set.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Oracle Cloud Infrastructure Cache Config Set was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the Oracle Cloud Infrastructure Cache Config Set was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OciCacheConfigSetState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
	CompartmentId pulumi.StringPtrInput
	// List of Oracle Cloud Infrastructure Cache Config Set Values.
	ConfigurationDetails OciCacheConfigSetConfigurationDetailsPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the default Oracle Cloud Infrastructure Cache Config Set which the custom Oracle Cloud Infrastructure Cache Config Set is based upon.
	DefaultConfigSetId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description for the custom Oracle Cloud Infrastructure Cache Config Set.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareVersion pulumi.StringPtrInput
	// The current state of the Oracle Cloud Infrastructure Cache Config Set.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the Oracle Cloud Infrastructure Cache Config Set was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The date and time the Oracle Cloud Infrastructure Cache Config Set was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (OciCacheConfigSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*ociCacheConfigSetState)(nil)).Elem()
}

type ociCacheConfigSetArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
	CompartmentId string `pulumi:"compartmentId"`
	// List of Oracle Cloud Infrastructure Cache Config Set Values.
	ConfigurationDetails OciCacheConfigSetConfigurationDetails `pulumi:"configurationDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description for the custom Oracle Cloud Infrastructure Cache Config Set.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareVersion string `pulumi:"softwareVersion"`
}

// The set of arguments for constructing a OciCacheConfigSet resource.
type OciCacheConfigSetArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
	CompartmentId pulumi.StringInput
	// List of Oracle Cloud Infrastructure Cache Config Set Values.
	ConfigurationDetails OciCacheConfigSetConfigurationDetailsInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description for the custom Oracle Cloud Infrastructure Cache Config Set.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SoftwareVersion pulumi.StringInput
}

func (OciCacheConfigSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ociCacheConfigSetArgs)(nil)).Elem()
}

type OciCacheConfigSetInput interface {
	pulumi.Input

	ToOciCacheConfigSetOutput() OciCacheConfigSetOutput
	ToOciCacheConfigSetOutputWithContext(ctx context.Context) OciCacheConfigSetOutput
}

func (*OciCacheConfigSet) ElementType() reflect.Type {
	return reflect.TypeOf((**OciCacheConfigSet)(nil)).Elem()
}

func (i *OciCacheConfigSet) ToOciCacheConfigSetOutput() OciCacheConfigSetOutput {
	return i.ToOciCacheConfigSetOutputWithContext(context.Background())
}

func (i *OciCacheConfigSet) ToOciCacheConfigSetOutputWithContext(ctx context.Context) OciCacheConfigSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciCacheConfigSetOutput)
}

// OciCacheConfigSetArrayInput is an input type that accepts OciCacheConfigSetArray and OciCacheConfigSetArrayOutput values.
// You can construct a concrete instance of `OciCacheConfigSetArrayInput` via:
//
//	OciCacheConfigSetArray{ OciCacheConfigSetArgs{...} }
type OciCacheConfigSetArrayInput interface {
	pulumi.Input

	ToOciCacheConfigSetArrayOutput() OciCacheConfigSetArrayOutput
	ToOciCacheConfigSetArrayOutputWithContext(context.Context) OciCacheConfigSetArrayOutput
}

type OciCacheConfigSetArray []OciCacheConfigSetInput

func (OciCacheConfigSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OciCacheConfigSet)(nil)).Elem()
}

func (i OciCacheConfigSetArray) ToOciCacheConfigSetArrayOutput() OciCacheConfigSetArrayOutput {
	return i.ToOciCacheConfigSetArrayOutputWithContext(context.Background())
}

func (i OciCacheConfigSetArray) ToOciCacheConfigSetArrayOutputWithContext(ctx context.Context) OciCacheConfigSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciCacheConfigSetArrayOutput)
}

// OciCacheConfigSetMapInput is an input type that accepts OciCacheConfigSetMap and OciCacheConfigSetMapOutput values.
// You can construct a concrete instance of `OciCacheConfigSetMapInput` via:
//
//	OciCacheConfigSetMap{ "key": OciCacheConfigSetArgs{...} }
type OciCacheConfigSetMapInput interface {
	pulumi.Input

	ToOciCacheConfigSetMapOutput() OciCacheConfigSetMapOutput
	ToOciCacheConfigSetMapOutputWithContext(context.Context) OciCacheConfigSetMapOutput
}

type OciCacheConfigSetMap map[string]OciCacheConfigSetInput

func (OciCacheConfigSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OciCacheConfigSet)(nil)).Elem()
}

func (i OciCacheConfigSetMap) ToOciCacheConfigSetMapOutput() OciCacheConfigSetMapOutput {
	return i.ToOciCacheConfigSetMapOutputWithContext(context.Background())
}

func (i OciCacheConfigSetMap) ToOciCacheConfigSetMapOutputWithContext(ctx context.Context) OciCacheConfigSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciCacheConfigSetMapOutput)
}

type OciCacheConfigSetOutput struct{ *pulumi.OutputState }

func (OciCacheConfigSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OciCacheConfigSet)(nil)).Elem()
}

func (o OciCacheConfigSetOutput) ToOciCacheConfigSetOutput() OciCacheConfigSetOutput {
	return o
}

func (o OciCacheConfigSetOutput) ToOciCacheConfigSetOutputWithContext(ctx context.Context) OciCacheConfigSetOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
func (o OciCacheConfigSetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// List of Oracle Cloud Infrastructure Cache Config Set Values.
func (o OciCacheConfigSetOutput) ConfigurationDetails() OciCacheConfigSetConfigurationDetailsOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) OciCacheConfigSetConfigurationDetailsOutput { return v.ConfigurationDetails }).(OciCacheConfigSetConfigurationDetailsOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the default Oracle Cloud Infrastructure Cache Config Set which the custom Oracle Cloud Infrastructure Cache Config Set is based upon.
func (o OciCacheConfigSetOutput) DefaultConfigSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.DefaultConfigSetId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o OciCacheConfigSetOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Description for the custom Oracle Cloud Infrastructure Cache Config Set.
func (o OciCacheConfigSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o OciCacheConfigSetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o OciCacheConfigSetOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o OciCacheConfigSetOutput) SoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.SoftwareVersion }).(pulumi.StringOutput)
}

// The current state of the Oracle Cloud Infrastructure Cache Config Set.
func (o OciCacheConfigSetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o OciCacheConfigSetOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Oracle Cloud Infrastructure Cache Config Set was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
func (o OciCacheConfigSetOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Oracle Cloud Infrastructure Cache Config Set was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
func (o OciCacheConfigSetOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheConfigSet) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type OciCacheConfigSetArrayOutput struct{ *pulumi.OutputState }

func (OciCacheConfigSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OciCacheConfigSet)(nil)).Elem()
}

func (o OciCacheConfigSetArrayOutput) ToOciCacheConfigSetArrayOutput() OciCacheConfigSetArrayOutput {
	return o
}

func (o OciCacheConfigSetArrayOutput) ToOciCacheConfigSetArrayOutputWithContext(ctx context.Context) OciCacheConfigSetArrayOutput {
	return o
}

func (o OciCacheConfigSetArrayOutput) Index(i pulumi.IntInput) OciCacheConfigSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OciCacheConfigSet {
		return vs[0].([]*OciCacheConfigSet)[vs[1].(int)]
	}).(OciCacheConfigSetOutput)
}

type OciCacheConfigSetMapOutput struct{ *pulumi.OutputState }

func (OciCacheConfigSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OciCacheConfigSet)(nil)).Elem()
}

func (o OciCacheConfigSetMapOutput) ToOciCacheConfigSetMapOutput() OciCacheConfigSetMapOutput {
	return o
}

func (o OciCacheConfigSetMapOutput) ToOciCacheConfigSetMapOutputWithContext(ctx context.Context) OciCacheConfigSetMapOutput {
	return o
}

func (o OciCacheConfigSetMapOutput) MapIndex(k pulumi.StringInput) OciCacheConfigSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OciCacheConfigSet {
		return vs[0].(map[string]*OciCacheConfigSet)[vs[1].(string)]
	}).(OciCacheConfigSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OciCacheConfigSetInput)(nil)).Elem(), &OciCacheConfigSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciCacheConfigSetArrayInput)(nil)).Elem(), OciCacheConfigSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciCacheConfigSetMapInput)(nil)).Elem(), OciCacheConfigSetMap{})
	pulumi.RegisterOutputType(OciCacheConfigSetOutput{})
	pulumi.RegisterOutputType(OciCacheConfigSetArrayOutput{})
	pulumi.RegisterOutputType(OciCacheConfigSetMapOutput{})
}
