// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
//
// Creates a new Oracle Cloud Infrastructure Cache user. Oracle Cloud Infrastructure Cache user is required to authenticate to Oracle Cloud Infrastructure Cache cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.NewOciCacheUser(ctx, "test_oci_cache_user", &redis.OciCacheUserArgs{
//				AclString: pulumi.Any(ociCacheUserAclString),
//				AuthenticationMode: &redis.OciCacheUserAuthenticationModeArgs{
//					AuthenticationType: pulumi.Any(ociCacheUserAuthenticationModeAuthenticationType),
//					HashedPasswords:    pulumi.Any(ociCacheUserAuthenticationModeHashedPasswords),
//				},
//				CompartmentId: pulumi.Any(compartmentId),
//				Description:   pulumi.Any(ociCacheUserDescription),
//				Name:          pulumi.Any(ociCacheUserName),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				Status: pulumi.Any(ociCacheUserStatus),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OciCacheUsers can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Redis/ociCacheUser:OciCacheUser test_oci_cache_user "id"
// ```
type OciCacheUser struct {
	pulumi.CustomResourceState

	// (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
	AclString pulumi.StringOutput `pulumi:"aclString"`
	// (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
	AuthenticationMode OciCacheUserAuthenticationModeOutput `pulumi:"authenticationMode"`
	// (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Description of Oracle Cloud Infrastructure cache user.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
	Name pulumi.StringOutput `pulumi:"name"`
	// Oracle Cloud Infrastructure Cache user lifecycle state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringOutput `pulumi:"status"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time, when the Oracle Cloud Infrastructure cache user was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time, when the Oracle Cloud Infrastructure cache user was updated.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOciCacheUser registers a new resource with the given unique name, arguments, and options.
func NewOciCacheUser(ctx *pulumi.Context,
	name string, args *OciCacheUserArgs, opts ...pulumi.ResourceOption) (*OciCacheUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AclString == nil {
		return nil, errors.New("invalid value for required argument 'AclString'")
	}
	if args.AuthenticationMode == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationMode'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OciCacheUser
	err := ctx.RegisterResource("oci:Redis/ociCacheUser:OciCacheUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOciCacheUser gets an existing OciCacheUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOciCacheUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OciCacheUserState, opts ...pulumi.ResourceOption) (*OciCacheUser, error) {
	var resource OciCacheUser
	err := ctx.ReadResource("oci:Redis/ociCacheUser:OciCacheUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OciCacheUser resources.
type ociCacheUserState struct {
	// (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
	AclString *string `pulumi:"aclString"`
	// (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
	AuthenticationMode *OciCacheUserAuthenticationMode `pulumi:"authenticationMode"`
	// (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description of Oracle Cloud Infrastructure cache user.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
	Name *string `pulumi:"name"`
	// Oracle Cloud Infrastructure Cache user lifecycle state.
	State *string `pulumi:"state"`
	// (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status *string `pulumi:"status"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time, when the Oracle Cloud Infrastructure cache user was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time, when the Oracle Cloud Infrastructure cache user was updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OciCacheUserState struct {
	// (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
	AclString pulumi.StringPtrInput
	// (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
	AuthenticationMode OciCacheUserAuthenticationModePtrInput
	// (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description of Oracle Cloud Infrastructure cache user.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
	Name pulumi.StringPtrInput
	// Oracle Cloud Infrastructure Cache user lifecycle state.
	State pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time, when the Oracle Cloud Infrastructure cache user was created.
	TimeCreated pulumi.StringPtrInput
	// The date and time, when the Oracle Cloud Infrastructure cache user was updated.
	TimeUpdated pulumi.StringPtrInput
}

func (OciCacheUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*ociCacheUserState)(nil)).Elem()
}

type ociCacheUserArgs struct {
	// (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
	AclString string `pulumi:"aclString"`
	// (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
	AuthenticationMode OciCacheUserAuthenticationMode `pulumi:"authenticationMode"`
	// (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description of Oracle Cloud Infrastructure cache user.
	Description string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
	Name *string `pulumi:"name"`
	// (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a OciCacheUser resource.
type OciCacheUserArgs struct {
	// (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
	AclString pulumi.StringInput
	// (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
	AuthenticationMode OciCacheUserAuthenticationModeInput
	// (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description of Oracle Cloud Infrastructure cache user.
	Description pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
	Name pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringPtrInput
}

func (OciCacheUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ociCacheUserArgs)(nil)).Elem()
}

type OciCacheUserInput interface {
	pulumi.Input

	ToOciCacheUserOutput() OciCacheUserOutput
	ToOciCacheUserOutputWithContext(ctx context.Context) OciCacheUserOutput
}

func (*OciCacheUser) ElementType() reflect.Type {
	return reflect.TypeOf((**OciCacheUser)(nil)).Elem()
}

func (i *OciCacheUser) ToOciCacheUserOutput() OciCacheUserOutput {
	return i.ToOciCacheUserOutputWithContext(context.Background())
}

func (i *OciCacheUser) ToOciCacheUserOutputWithContext(ctx context.Context) OciCacheUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciCacheUserOutput)
}

// OciCacheUserArrayInput is an input type that accepts OciCacheUserArray and OciCacheUserArrayOutput values.
// You can construct a concrete instance of `OciCacheUserArrayInput` via:
//
//	OciCacheUserArray{ OciCacheUserArgs{...} }
type OciCacheUserArrayInput interface {
	pulumi.Input

	ToOciCacheUserArrayOutput() OciCacheUserArrayOutput
	ToOciCacheUserArrayOutputWithContext(context.Context) OciCacheUserArrayOutput
}

type OciCacheUserArray []OciCacheUserInput

func (OciCacheUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OciCacheUser)(nil)).Elem()
}

func (i OciCacheUserArray) ToOciCacheUserArrayOutput() OciCacheUserArrayOutput {
	return i.ToOciCacheUserArrayOutputWithContext(context.Background())
}

func (i OciCacheUserArray) ToOciCacheUserArrayOutputWithContext(ctx context.Context) OciCacheUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciCacheUserArrayOutput)
}

// OciCacheUserMapInput is an input type that accepts OciCacheUserMap and OciCacheUserMapOutput values.
// You can construct a concrete instance of `OciCacheUserMapInput` via:
//
//	OciCacheUserMap{ "key": OciCacheUserArgs{...} }
type OciCacheUserMapInput interface {
	pulumi.Input

	ToOciCacheUserMapOutput() OciCacheUserMapOutput
	ToOciCacheUserMapOutputWithContext(context.Context) OciCacheUserMapOutput
}

type OciCacheUserMap map[string]OciCacheUserInput

func (OciCacheUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OciCacheUser)(nil)).Elem()
}

func (i OciCacheUserMap) ToOciCacheUserMapOutput() OciCacheUserMapOutput {
	return i.ToOciCacheUserMapOutputWithContext(context.Background())
}

func (i OciCacheUserMap) ToOciCacheUserMapOutputWithContext(ctx context.Context) OciCacheUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciCacheUserMapOutput)
}

type OciCacheUserOutput struct{ *pulumi.OutputState }

func (OciCacheUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OciCacheUser)(nil)).Elem()
}

func (o OciCacheUserOutput) ToOciCacheUserOutput() OciCacheUserOutput {
	return o
}

func (o OciCacheUserOutput) ToOciCacheUserOutputWithContext(ctx context.Context) OciCacheUserOutput {
	return o
}

// (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
func (o OciCacheUserOutput) AclString() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.AclString }).(pulumi.StringOutput)
}

// (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
func (o OciCacheUserOutput) AuthenticationMode() OciCacheUserAuthenticationModeOutput {
	return o.ApplyT(func(v *OciCacheUser) OciCacheUserAuthenticationModeOutput { return v.AuthenticationMode }).(OciCacheUserAuthenticationModeOutput)
}

// (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
func (o OciCacheUserOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o OciCacheUserOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Description of Oracle Cloud Infrastructure cache user.
func (o OciCacheUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o OciCacheUserOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
func (o OciCacheUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Cache user lifecycle state.
func (o OciCacheUserOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o OciCacheUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o OciCacheUserOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time, when the Oracle Cloud Infrastructure cache user was created.
func (o OciCacheUserOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time, when the Oracle Cloud Infrastructure cache user was updated.
func (o OciCacheUserOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *OciCacheUser) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type OciCacheUserArrayOutput struct{ *pulumi.OutputState }

func (OciCacheUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OciCacheUser)(nil)).Elem()
}

func (o OciCacheUserArrayOutput) ToOciCacheUserArrayOutput() OciCacheUserArrayOutput {
	return o
}

func (o OciCacheUserArrayOutput) ToOciCacheUserArrayOutputWithContext(ctx context.Context) OciCacheUserArrayOutput {
	return o
}

func (o OciCacheUserArrayOutput) Index(i pulumi.IntInput) OciCacheUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OciCacheUser {
		return vs[0].([]*OciCacheUser)[vs[1].(int)]
	}).(OciCacheUserOutput)
}

type OciCacheUserMapOutput struct{ *pulumi.OutputState }

func (OciCacheUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OciCacheUser)(nil)).Elem()
}

func (o OciCacheUserMapOutput) ToOciCacheUserMapOutput() OciCacheUserMapOutput {
	return o
}

func (o OciCacheUserMapOutput) ToOciCacheUserMapOutputWithContext(ctx context.Context) OciCacheUserMapOutput {
	return o
}

func (o OciCacheUserMapOutput) MapIndex(k pulumi.StringInput) OciCacheUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OciCacheUser {
		return vs[0].(map[string]*OciCacheUser)[vs[1].(string)]
	}).(OciCacheUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OciCacheUserInput)(nil)).Elem(), &OciCacheUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciCacheUserArrayInput)(nil)).Elem(), OciCacheUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciCacheUserMapInput)(nil)).Elem(), OciCacheUserMap{})
	pulumi.RegisterOutputType(OciCacheUserOutput{})
	pulumi.RegisterOutputType(OciCacheUserArrayOutput{})
	pulumi.RegisterOutputType(OciCacheUserMapOutput{})
}
