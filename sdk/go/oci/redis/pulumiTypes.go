// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type RedisClusterNodeCollection struct {
	// Collection of node objects.
	Items []RedisClusterNodeCollectionItem `pulumi:"items"`
}

// RedisClusterNodeCollectionInput is an input type that accepts RedisClusterNodeCollectionArgs and RedisClusterNodeCollectionOutput values.
// You can construct a concrete instance of `RedisClusterNodeCollectionInput` via:
//
//	RedisClusterNodeCollectionArgs{...}
type RedisClusterNodeCollectionInput interface {
	pulumi.Input

	ToRedisClusterNodeCollectionOutput() RedisClusterNodeCollectionOutput
	ToRedisClusterNodeCollectionOutputWithContext(context.Context) RedisClusterNodeCollectionOutput
}

type RedisClusterNodeCollectionArgs struct {
	// Collection of node objects.
	Items RedisClusterNodeCollectionItemArrayInput `pulumi:"items"`
}

func (RedisClusterNodeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterNodeCollection)(nil)).Elem()
}

func (i RedisClusterNodeCollectionArgs) ToRedisClusterNodeCollectionOutput() RedisClusterNodeCollectionOutput {
	return i.ToRedisClusterNodeCollectionOutputWithContext(context.Background())
}

func (i RedisClusterNodeCollectionArgs) ToRedisClusterNodeCollectionOutputWithContext(ctx context.Context) RedisClusterNodeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterNodeCollectionOutput)
}

// RedisClusterNodeCollectionArrayInput is an input type that accepts RedisClusterNodeCollectionArray and RedisClusterNodeCollectionArrayOutput values.
// You can construct a concrete instance of `RedisClusterNodeCollectionArrayInput` via:
//
//	RedisClusterNodeCollectionArray{ RedisClusterNodeCollectionArgs{...} }
type RedisClusterNodeCollectionArrayInput interface {
	pulumi.Input

	ToRedisClusterNodeCollectionArrayOutput() RedisClusterNodeCollectionArrayOutput
	ToRedisClusterNodeCollectionArrayOutputWithContext(context.Context) RedisClusterNodeCollectionArrayOutput
}

type RedisClusterNodeCollectionArray []RedisClusterNodeCollectionInput

func (RedisClusterNodeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterNodeCollection)(nil)).Elem()
}

func (i RedisClusterNodeCollectionArray) ToRedisClusterNodeCollectionArrayOutput() RedisClusterNodeCollectionArrayOutput {
	return i.ToRedisClusterNodeCollectionArrayOutputWithContext(context.Background())
}

func (i RedisClusterNodeCollectionArray) ToRedisClusterNodeCollectionArrayOutputWithContext(ctx context.Context) RedisClusterNodeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterNodeCollectionArrayOutput)
}

type RedisClusterNodeCollectionOutput struct{ *pulumi.OutputState }

func (RedisClusterNodeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterNodeCollection)(nil)).Elem()
}

func (o RedisClusterNodeCollectionOutput) ToRedisClusterNodeCollectionOutput() RedisClusterNodeCollectionOutput {
	return o
}

func (o RedisClusterNodeCollectionOutput) ToRedisClusterNodeCollectionOutputWithContext(ctx context.Context) RedisClusterNodeCollectionOutput {
	return o
}

// Collection of node objects.
func (o RedisClusterNodeCollectionOutput) Items() RedisClusterNodeCollectionItemArrayOutput {
	return o.ApplyT(func(v RedisClusterNodeCollection) []RedisClusterNodeCollectionItem { return v.Items }).(RedisClusterNodeCollectionItemArrayOutput)
}

type RedisClusterNodeCollectionArrayOutput struct{ *pulumi.OutputState }

func (RedisClusterNodeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterNodeCollection)(nil)).Elem()
}

func (o RedisClusterNodeCollectionArrayOutput) ToRedisClusterNodeCollectionArrayOutput() RedisClusterNodeCollectionArrayOutput {
	return o
}

func (o RedisClusterNodeCollectionArrayOutput) ToRedisClusterNodeCollectionArrayOutputWithContext(ctx context.Context) RedisClusterNodeCollectionArrayOutput {
	return o
}

func (o RedisClusterNodeCollectionArrayOutput) Index(i pulumi.IntInput) RedisClusterNodeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedisClusterNodeCollection {
		return vs[0].([]RedisClusterNodeCollection)[vs[1].(int)]
	}).(RedisClusterNodeCollectionOutput)
}

type RedisClusterNodeCollectionItem struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn *string `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress *string `pulumi:"privateEndpointIpAddress"`
}

// RedisClusterNodeCollectionItemInput is an input type that accepts RedisClusterNodeCollectionItemArgs and RedisClusterNodeCollectionItemOutput values.
// You can construct a concrete instance of `RedisClusterNodeCollectionItemInput` via:
//
//	RedisClusterNodeCollectionItemArgs{...}
type RedisClusterNodeCollectionItemInput interface {
	pulumi.Input

	ToRedisClusterNodeCollectionItemOutput() RedisClusterNodeCollectionItemOutput
	ToRedisClusterNodeCollectionItemOutputWithContext(context.Context) RedisClusterNodeCollectionItemOutput
}

type RedisClusterNodeCollectionItemArgs struct {
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn pulumi.StringPtrInput `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress pulumi.StringPtrInput `pulumi:"privateEndpointIpAddress"`
}

func (RedisClusterNodeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterNodeCollectionItem)(nil)).Elem()
}

func (i RedisClusterNodeCollectionItemArgs) ToRedisClusterNodeCollectionItemOutput() RedisClusterNodeCollectionItemOutput {
	return i.ToRedisClusterNodeCollectionItemOutputWithContext(context.Background())
}

func (i RedisClusterNodeCollectionItemArgs) ToRedisClusterNodeCollectionItemOutputWithContext(ctx context.Context) RedisClusterNodeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterNodeCollectionItemOutput)
}

// RedisClusterNodeCollectionItemArrayInput is an input type that accepts RedisClusterNodeCollectionItemArray and RedisClusterNodeCollectionItemArrayOutput values.
// You can construct a concrete instance of `RedisClusterNodeCollectionItemArrayInput` via:
//
//	RedisClusterNodeCollectionItemArray{ RedisClusterNodeCollectionItemArgs{...} }
type RedisClusterNodeCollectionItemArrayInput interface {
	pulumi.Input

	ToRedisClusterNodeCollectionItemArrayOutput() RedisClusterNodeCollectionItemArrayOutput
	ToRedisClusterNodeCollectionItemArrayOutputWithContext(context.Context) RedisClusterNodeCollectionItemArrayOutput
}

type RedisClusterNodeCollectionItemArray []RedisClusterNodeCollectionItemInput

func (RedisClusterNodeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterNodeCollectionItem)(nil)).Elem()
}

func (i RedisClusterNodeCollectionItemArray) ToRedisClusterNodeCollectionItemArrayOutput() RedisClusterNodeCollectionItemArrayOutput {
	return i.ToRedisClusterNodeCollectionItemArrayOutputWithContext(context.Background())
}

func (i RedisClusterNodeCollectionItemArray) ToRedisClusterNodeCollectionItemArrayOutputWithContext(ctx context.Context) RedisClusterNodeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterNodeCollectionItemArrayOutput)
}

type RedisClusterNodeCollectionItemOutput struct{ *pulumi.OutputState }

func (RedisClusterNodeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterNodeCollectionItem)(nil)).Elem()
}

func (o RedisClusterNodeCollectionItemOutput) ToRedisClusterNodeCollectionItemOutput() RedisClusterNodeCollectionItemOutput {
	return o
}

func (o RedisClusterNodeCollectionItemOutput) ToRedisClusterNodeCollectionItemOutputWithContext(ctx context.Context) RedisClusterNodeCollectionItemOutput {
	return o
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o RedisClusterNodeCollectionItemOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterNodeCollectionItem) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
func (o RedisClusterNodeCollectionItemOutput) PrivateEndpointFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterNodeCollectionItem) *string { return v.PrivateEndpointFqdn }).(pulumi.StringPtrOutput)
}

// The private IP address of the API endpoint to access a specific node.
func (o RedisClusterNodeCollectionItemOutput) PrivateEndpointIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterNodeCollectionItem) *string { return v.PrivateEndpointIpAddress }).(pulumi.StringPtrOutput)
}

type RedisClusterNodeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (RedisClusterNodeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterNodeCollectionItem)(nil)).Elem()
}

func (o RedisClusterNodeCollectionItemArrayOutput) ToRedisClusterNodeCollectionItemArrayOutput() RedisClusterNodeCollectionItemArrayOutput {
	return o
}

func (o RedisClusterNodeCollectionItemArrayOutput) ToRedisClusterNodeCollectionItemArrayOutputWithContext(ctx context.Context) RedisClusterNodeCollectionItemArrayOutput {
	return o
}

func (o RedisClusterNodeCollectionItemArrayOutput) Index(i pulumi.IntInput) RedisClusterNodeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedisClusterNodeCollectionItem {
		return vs[0].([]RedisClusterNodeCollectionItem)[vs[1].(int)]
	}).(RedisClusterNodeCollectionItemOutput)
}

type GetRedisClusterNodeCollection struct {
	// Collection of node objects.
	Items []GetRedisClusterNodeCollectionItem `pulumi:"items"`
}

// GetRedisClusterNodeCollectionInput is an input type that accepts GetRedisClusterNodeCollectionArgs and GetRedisClusterNodeCollectionOutput values.
// You can construct a concrete instance of `GetRedisClusterNodeCollectionInput` via:
//
//	GetRedisClusterNodeCollectionArgs{...}
type GetRedisClusterNodeCollectionInput interface {
	pulumi.Input

	ToGetRedisClusterNodeCollectionOutput() GetRedisClusterNodeCollectionOutput
	ToGetRedisClusterNodeCollectionOutputWithContext(context.Context) GetRedisClusterNodeCollectionOutput
}

type GetRedisClusterNodeCollectionArgs struct {
	// Collection of node objects.
	Items GetRedisClusterNodeCollectionItemArrayInput `pulumi:"items"`
}

func (GetRedisClusterNodeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodeCollection)(nil)).Elem()
}

func (i GetRedisClusterNodeCollectionArgs) ToGetRedisClusterNodeCollectionOutput() GetRedisClusterNodeCollectionOutput {
	return i.ToGetRedisClusterNodeCollectionOutputWithContext(context.Background())
}

func (i GetRedisClusterNodeCollectionArgs) ToGetRedisClusterNodeCollectionOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodeCollectionOutput)
}

// GetRedisClusterNodeCollectionArrayInput is an input type that accepts GetRedisClusterNodeCollectionArray and GetRedisClusterNodeCollectionArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterNodeCollectionArrayInput` via:
//
//	GetRedisClusterNodeCollectionArray{ GetRedisClusterNodeCollectionArgs{...} }
type GetRedisClusterNodeCollectionArrayInput interface {
	pulumi.Input

	ToGetRedisClusterNodeCollectionArrayOutput() GetRedisClusterNodeCollectionArrayOutput
	ToGetRedisClusterNodeCollectionArrayOutputWithContext(context.Context) GetRedisClusterNodeCollectionArrayOutput
}

type GetRedisClusterNodeCollectionArray []GetRedisClusterNodeCollectionInput

func (GetRedisClusterNodeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodeCollection)(nil)).Elem()
}

func (i GetRedisClusterNodeCollectionArray) ToGetRedisClusterNodeCollectionArrayOutput() GetRedisClusterNodeCollectionArrayOutput {
	return i.ToGetRedisClusterNodeCollectionArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterNodeCollectionArray) ToGetRedisClusterNodeCollectionArrayOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodeCollectionArrayOutput)
}

type GetRedisClusterNodeCollectionOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodeCollection)(nil)).Elem()
}

func (o GetRedisClusterNodeCollectionOutput) ToGetRedisClusterNodeCollectionOutput() GetRedisClusterNodeCollectionOutput {
	return o
}

func (o GetRedisClusterNodeCollectionOutput) ToGetRedisClusterNodeCollectionOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionOutput {
	return o
}

// Collection of node objects.
func (o GetRedisClusterNodeCollectionOutput) Items() GetRedisClusterNodeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetRedisClusterNodeCollection) []GetRedisClusterNodeCollectionItem { return v.Items }).(GetRedisClusterNodeCollectionItemArrayOutput)
}

type GetRedisClusterNodeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodeCollection)(nil)).Elem()
}

func (o GetRedisClusterNodeCollectionArrayOutput) ToGetRedisClusterNodeCollectionArrayOutput() GetRedisClusterNodeCollectionArrayOutput {
	return o
}

func (o GetRedisClusterNodeCollectionArrayOutput) ToGetRedisClusterNodeCollectionArrayOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionArrayOutput {
	return o
}

func (o GetRedisClusterNodeCollectionArrayOutput) Index(i pulumi.IntInput) GetRedisClusterNodeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterNodeCollection {
		return vs[0].([]GetRedisClusterNodeCollection)[vs[1].(int)]
	}).(GetRedisClusterNodeCollectionOutput)
}

type GetRedisClusterNodeCollectionItem struct {
	// A user-friendly name of a cluster node.
	DisplayName string `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn string `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
}

// GetRedisClusterNodeCollectionItemInput is an input type that accepts GetRedisClusterNodeCollectionItemArgs and GetRedisClusterNodeCollectionItemOutput values.
// You can construct a concrete instance of `GetRedisClusterNodeCollectionItemInput` via:
//
//	GetRedisClusterNodeCollectionItemArgs{...}
type GetRedisClusterNodeCollectionItemInput interface {
	pulumi.Input

	ToGetRedisClusterNodeCollectionItemOutput() GetRedisClusterNodeCollectionItemOutput
	ToGetRedisClusterNodeCollectionItemOutputWithContext(context.Context) GetRedisClusterNodeCollectionItemOutput
}

type GetRedisClusterNodeCollectionItemArgs struct {
	// A user-friendly name of a cluster node.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn pulumi.StringInput `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress pulumi.StringInput `pulumi:"privateEndpointIpAddress"`
}

func (GetRedisClusterNodeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodeCollectionItem)(nil)).Elem()
}

func (i GetRedisClusterNodeCollectionItemArgs) ToGetRedisClusterNodeCollectionItemOutput() GetRedisClusterNodeCollectionItemOutput {
	return i.ToGetRedisClusterNodeCollectionItemOutputWithContext(context.Background())
}

func (i GetRedisClusterNodeCollectionItemArgs) ToGetRedisClusterNodeCollectionItemOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodeCollectionItemOutput)
}

// GetRedisClusterNodeCollectionItemArrayInput is an input type that accepts GetRedisClusterNodeCollectionItemArray and GetRedisClusterNodeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterNodeCollectionItemArrayInput` via:
//
//	GetRedisClusterNodeCollectionItemArray{ GetRedisClusterNodeCollectionItemArgs{...} }
type GetRedisClusterNodeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetRedisClusterNodeCollectionItemArrayOutput() GetRedisClusterNodeCollectionItemArrayOutput
	ToGetRedisClusterNodeCollectionItemArrayOutputWithContext(context.Context) GetRedisClusterNodeCollectionItemArrayOutput
}

type GetRedisClusterNodeCollectionItemArray []GetRedisClusterNodeCollectionItemInput

func (GetRedisClusterNodeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodeCollectionItem)(nil)).Elem()
}

func (i GetRedisClusterNodeCollectionItemArray) ToGetRedisClusterNodeCollectionItemArrayOutput() GetRedisClusterNodeCollectionItemArrayOutput {
	return i.ToGetRedisClusterNodeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterNodeCollectionItemArray) ToGetRedisClusterNodeCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodeCollectionItemArrayOutput)
}

type GetRedisClusterNodeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodeCollectionItem)(nil)).Elem()
}

func (o GetRedisClusterNodeCollectionItemOutput) ToGetRedisClusterNodeCollectionItemOutput() GetRedisClusterNodeCollectionItemOutput {
	return o
}

func (o GetRedisClusterNodeCollectionItemOutput) ToGetRedisClusterNodeCollectionItemOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionItemOutput {
	return o
}

// A user-friendly name of a cluster node.
func (o GetRedisClusterNodeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
func (o GetRedisClusterNodeCollectionItemOutput) PrivateEndpointFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodeCollectionItem) string { return v.PrivateEndpointFqdn }).(pulumi.StringOutput)
}

// The private IP address of the API endpoint to access a specific node.
func (o GetRedisClusterNodeCollectionItemOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodeCollectionItem) string { return v.PrivateEndpointIpAddress }).(pulumi.StringOutput)
}

type GetRedisClusterNodeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodeCollectionItem)(nil)).Elem()
}

func (o GetRedisClusterNodeCollectionItemArrayOutput) ToGetRedisClusterNodeCollectionItemArrayOutput() GetRedisClusterNodeCollectionItemArrayOutput {
	return o
}

func (o GetRedisClusterNodeCollectionItemArrayOutput) ToGetRedisClusterNodeCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClusterNodeCollectionItemArrayOutput {
	return o
}

func (o GetRedisClusterNodeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetRedisClusterNodeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterNodeCollectionItem {
		return vs[0].([]GetRedisClusterNodeCollectionItem)[vs[1].(int)]
	}).(GetRedisClusterNodeCollectionItemOutput)
}

type GetRedisClusterNodesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetRedisClusterNodesFilterInput is an input type that accepts GetRedisClusterNodesFilterArgs and GetRedisClusterNodesFilterOutput values.
// You can construct a concrete instance of `GetRedisClusterNodesFilterInput` via:
//
//	GetRedisClusterNodesFilterArgs{...}
type GetRedisClusterNodesFilterInput interface {
	pulumi.Input

	ToGetRedisClusterNodesFilterOutput() GetRedisClusterNodesFilterOutput
	ToGetRedisClusterNodesFilterOutputWithContext(context.Context) GetRedisClusterNodesFilterOutput
}

type GetRedisClusterNodesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRedisClusterNodesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesFilter)(nil)).Elem()
}

func (i GetRedisClusterNodesFilterArgs) ToGetRedisClusterNodesFilterOutput() GetRedisClusterNodesFilterOutput {
	return i.ToGetRedisClusterNodesFilterOutputWithContext(context.Background())
}

func (i GetRedisClusterNodesFilterArgs) ToGetRedisClusterNodesFilterOutputWithContext(ctx context.Context) GetRedisClusterNodesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodesFilterOutput)
}

// GetRedisClusterNodesFilterArrayInput is an input type that accepts GetRedisClusterNodesFilterArray and GetRedisClusterNodesFilterArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterNodesFilterArrayInput` via:
//
//	GetRedisClusterNodesFilterArray{ GetRedisClusterNodesFilterArgs{...} }
type GetRedisClusterNodesFilterArrayInput interface {
	pulumi.Input

	ToGetRedisClusterNodesFilterArrayOutput() GetRedisClusterNodesFilterArrayOutput
	ToGetRedisClusterNodesFilterArrayOutputWithContext(context.Context) GetRedisClusterNodesFilterArrayOutput
}

type GetRedisClusterNodesFilterArray []GetRedisClusterNodesFilterInput

func (GetRedisClusterNodesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodesFilter)(nil)).Elem()
}

func (i GetRedisClusterNodesFilterArray) ToGetRedisClusterNodesFilterArrayOutput() GetRedisClusterNodesFilterArrayOutput {
	return i.ToGetRedisClusterNodesFilterArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterNodesFilterArray) ToGetRedisClusterNodesFilterArrayOutputWithContext(ctx context.Context) GetRedisClusterNodesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodesFilterArrayOutput)
}

type GetRedisClusterNodesFilterOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesFilter)(nil)).Elem()
}

func (o GetRedisClusterNodesFilterOutput) ToGetRedisClusterNodesFilterOutput() GetRedisClusterNodesFilterOutput {
	return o
}

func (o GetRedisClusterNodesFilterOutput) ToGetRedisClusterNodesFilterOutputWithContext(ctx context.Context) GetRedisClusterNodesFilterOutput {
	return o
}

func (o GetRedisClusterNodesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRedisClusterNodesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRedisClusterNodesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetRedisClusterNodesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisClusterNodesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRedisClusterNodesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodesFilter)(nil)).Elem()
}

func (o GetRedisClusterNodesFilterArrayOutput) ToGetRedisClusterNodesFilterArrayOutput() GetRedisClusterNodesFilterArrayOutput {
	return o
}

func (o GetRedisClusterNodesFilterArrayOutput) ToGetRedisClusterNodesFilterArrayOutputWithContext(ctx context.Context) GetRedisClusterNodesFilterArrayOutput {
	return o
}

func (o GetRedisClusterNodesFilterArrayOutput) Index(i pulumi.IntInput) GetRedisClusterNodesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterNodesFilter {
		return vs[0].([]GetRedisClusterNodesFilter)[vs[1].(int)]
	}).(GetRedisClusterNodesFilterOutput)
}

type GetRedisClusterNodesRedisNodeCollection struct {
	// The list of nodes in a cluster.
	Items []GetRedisClusterNodesRedisNodeCollectionItem `pulumi:"items"`
}

// GetRedisClusterNodesRedisNodeCollectionInput is an input type that accepts GetRedisClusterNodesRedisNodeCollectionArgs and GetRedisClusterNodesRedisNodeCollectionOutput values.
// You can construct a concrete instance of `GetRedisClusterNodesRedisNodeCollectionInput` via:
//
//	GetRedisClusterNodesRedisNodeCollectionArgs{...}
type GetRedisClusterNodesRedisNodeCollectionInput interface {
	pulumi.Input

	ToGetRedisClusterNodesRedisNodeCollectionOutput() GetRedisClusterNodesRedisNodeCollectionOutput
	ToGetRedisClusterNodesRedisNodeCollectionOutputWithContext(context.Context) GetRedisClusterNodesRedisNodeCollectionOutput
}

type GetRedisClusterNodesRedisNodeCollectionArgs struct {
	// The list of nodes in a cluster.
	Items GetRedisClusterNodesRedisNodeCollectionItemArrayInput `pulumi:"items"`
}

func (GetRedisClusterNodesRedisNodeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollection)(nil)).Elem()
}

func (i GetRedisClusterNodesRedisNodeCollectionArgs) ToGetRedisClusterNodesRedisNodeCollectionOutput() GetRedisClusterNodesRedisNodeCollectionOutput {
	return i.ToGetRedisClusterNodesRedisNodeCollectionOutputWithContext(context.Background())
}

func (i GetRedisClusterNodesRedisNodeCollectionArgs) ToGetRedisClusterNodesRedisNodeCollectionOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodesRedisNodeCollectionOutput)
}

// GetRedisClusterNodesRedisNodeCollectionArrayInput is an input type that accepts GetRedisClusterNodesRedisNodeCollectionArray and GetRedisClusterNodesRedisNodeCollectionArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterNodesRedisNodeCollectionArrayInput` via:
//
//	GetRedisClusterNodesRedisNodeCollectionArray{ GetRedisClusterNodesRedisNodeCollectionArgs{...} }
type GetRedisClusterNodesRedisNodeCollectionArrayInput interface {
	pulumi.Input

	ToGetRedisClusterNodesRedisNodeCollectionArrayOutput() GetRedisClusterNodesRedisNodeCollectionArrayOutput
	ToGetRedisClusterNodesRedisNodeCollectionArrayOutputWithContext(context.Context) GetRedisClusterNodesRedisNodeCollectionArrayOutput
}

type GetRedisClusterNodesRedisNodeCollectionArray []GetRedisClusterNodesRedisNodeCollectionInput

func (GetRedisClusterNodesRedisNodeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodesRedisNodeCollection)(nil)).Elem()
}

func (i GetRedisClusterNodesRedisNodeCollectionArray) ToGetRedisClusterNodesRedisNodeCollectionArrayOutput() GetRedisClusterNodesRedisNodeCollectionArrayOutput {
	return i.ToGetRedisClusterNodesRedisNodeCollectionArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterNodesRedisNodeCollectionArray) ToGetRedisClusterNodesRedisNodeCollectionArrayOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodesRedisNodeCollectionArrayOutput)
}

type GetRedisClusterNodesRedisNodeCollectionOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodesRedisNodeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollection)(nil)).Elem()
}

func (o GetRedisClusterNodesRedisNodeCollectionOutput) ToGetRedisClusterNodesRedisNodeCollectionOutput() GetRedisClusterNodesRedisNodeCollectionOutput {
	return o
}

func (o GetRedisClusterNodesRedisNodeCollectionOutput) ToGetRedisClusterNodesRedisNodeCollectionOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionOutput {
	return o
}

// The list of nodes in a cluster.
func (o GetRedisClusterNodesRedisNodeCollectionOutput) Items() GetRedisClusterNodesRedisNodeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetRedisClusterNodesRedisNodeCollection) []GetRedisClusterNodesRedisNodeCollectionItem {
		return v.Items
	}).(GetRedisClusterNodesRedisNodeCollectionItemArrayOutput)
}

type GetRedisClusterNodesRedisNodeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodesRedisNodeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodesRedisNodeCollection)(nil)).Elem()
}

func (o GetRedisClusterNodesRedisNodeCollectionArrayOutput) ToGetRedisClusterNodesRedisNodeCollectionArrayOutput() GetRedisClusterNodesRedisNodeCollectionArrayOutput {
	return o
}

func (o GetRedisClusterNodesRedisNodeCollectionArrayOutput) ToGetRedisClusterNodesRedisNodeCollectionArrayOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionArrayOutput {
	return o
}

func (o GetRedisClusterNodesRedisNodeCollectionArrayOutput) Index(i pulumi.IntInput) GetRedisClusterNodesRedisNodeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterNodesRedisNodeCollection {
		return vs[0].([]GetRedisClusterNodesRedisNodeCollection)[vs[1].(int)]
	}).(GetRedisClusterNodesRedisNodeCollectionOutput)
}

type GetRedisClusterNodesRedisNodeCollectionItem struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn string `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
	RedisClusterId string `pulumi:"redisClusterId"`
	// The shard number to which the node belongs to.
	ShardNumber int `pulumi:"shardNumber"`
}

// GetRedisClusterNodesRedisNodeCollectionItemInput is an input type that accepts GetRedisClusterNodesRedisNodeCollectionItemArgs and GetRedisClusterNodesRedisNodeCollectionItemOutput values.
// You can construct a concrete instance of `GetRedisClusterNodesRedisNodeCollectionItemInput` via:
//
//	GetRedisClusterNodesRedisNodeCollectionItemArgs{...}
type GetRedisClusterNodesRedisNodeCollectionItemInput interface {
	pulumi.Input

	ToGetRedisClusterNodesRedisNodeCollectionItemOutput() GetRedisClusterNodesRedisNodeCollectionItemOutput
	ToGetRedisClusterNodesRedisNodeCollectionItemOutputWithContext(context.Context) GetRedisClusterNodesRedisNodeCollectionItemOutput
}

type GetRedisClusterNodesRedisNodeCollectionItemArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn pulumi.StringInput `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress pulumi.StringInput `pulumi:"privateEndpointIpAddress"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
	RedisClusterId pulumi.StringInput `pulumi:"redisClusterId"`
	// The shard number to which the node belongs to.
	ShardNumber pulumi.IntInput `pulumi:"shardNumber"`
}

func (GetRedisClusterNodesRedisNodeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollectionItem)(nil)).Elem()
}

func (i GetRedisClusterNodesRedisNodeCollectionItemArgs) ToGetRedisClusterNodesRedisNodeCollectionItemOutput() GetRedisClusterNodesRedisNodeCollectionItemOutput {
	return i.ToGetRedisClusterNodesRedisNodeCollectionItemOutputWithContext(context.Background())
}

func (i GetRedisClusterNodesRedisNodeCollectionItemArgs) ToGetRedisClusterNodesRedisNodeCollectionItemOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodesRedisNodeCollectionItemOutput)
}

// GetRedisClusterNodesRedisNodeCollectionItemArrayInput is an input type that accepts GetRedisClusterNodesRedisNodeCollectionItemArray and GetRedisClusterNodesRedisNodeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterNodesRedisNodeCollectionItemArrayInput` via:
//
//	GetRedisClusterNodesRedisNodeCollectionItemArray{ GetRedisClusterNodesRedisNodeCollectionItemArgs{...} }
type GetRedisClusterNodesRedisNodeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetRedisClusterNodesRedisNodeCollectionItemArrayOutput() GetRedisClusterNodesRedisNodeCollectionItemArrayOutput
	ToGetRedisClusterNodesRedisNodeCollectionItemArrayOutputWithContext(context.Context) GetRedisClusterNodesRedisNodeCollectionItemArrayOutput
}

type GetRedisClusterNodesRedisNodeCollectionItemArray []GetRedisClusterNodesRedisNodeCollectionItemInput

func (GetRedisClusterNodesRedisNodeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodesRedisNodeCollectionItem)(nil)).Elem()
}

func (i GetRedisClusterNodesRedisNodeCollectionItemArray) ToGetRedisClusterNodesRedisNodeCollectionItemArrayOutput() GetRedisClusterNodesRedisNodeCollectionItemArrayOutput {
	return i.ToGetRedisClusterNodesRedisNodeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterNodesRedisNodeCollectionItemArray) ToGetRedisClusterNodesRedisNodeCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterNodesRedisNodeCollectionItemArrayOutput)
}

type GetRedisClusterNodesRedisNodeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodesRedisNodeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollectionItem)(nil)).Elem()
}

func (o GetRedisClusterNodesRedisNodeCollectionItemOutput) ToGetRedisClusterNodesRedisNodeCollectionItemOutput() GetRedisClusterNodesRedisNodeCollectionItemOutput {
	return o
}

func (o GetRedisClusterNodesRedisNodeCollectionItemOutput) ToGetRedisClusterNodesRedisNodeCollectionItemOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionItemOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetRedisClusterNodesRedisNodeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodesRedisNodeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
func (o GetRedisClusterNodesRedisNodeCollectionItemOutput) PrivateEndpointFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodesRedisNodeCollectionItem) string { return v.PrivateEndpointFqdn }).(pulumi.StringOutput)
}

// The private IP address of the API endpoint to access a specific node.
func (o GetRedisClusterNodesRedisNodeCollectionItemOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodesRedisNodeCollectionItem) string { return v.PrivateEndpointIpAddress }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
func (o GetRedisClusterNodesRedisNodeCollectionItemOutput) RedisClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterNodesRedisNodeCollectionItem) string { return v.RedisClusterId }).(pulumi.StringOutput)
}

// The shard number to which the node belongs to.
func (o GetRedisClusterNodesRedisNodeCollectionItemOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetRedisClusterNodesRedisNodeCollectionItem) int { return v.ShardNumber }).(pulumi.IntOutput)
}

type GetRedisClusterNodesRedisNodeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterNodesRedisNodeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterNodesRedisNodeCollectionItem)(nil)).Elem()
}

func (o GetRedisClusterNodesRedisNodeCollectionItemArrayOutput) ToGetRedisClusterNodesRedisNodeCollectionItemArrayOutput() GetRedisClusterNodesRedisNodeCollectionItemArrayOutput {
	return o
}

func (o GetRedisClusterNodesRedisNodeCollectionItemArrayOutput) ToGetRedisClusterNodesRedisNodeCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClusterNodesRedisNodeCollectionItemArrayOutput {
	return o
}

func (o GetRedisClusterNodesRedisNodeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetRedisClusterNodesRedisNodeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterNodesRedisNodeCollectionItem {
		return vs[0].([]GetRedisClusterNodesRedisNodeCollectionItem)[vs[1].(int)]
	}).(GetRedisClusterNodesRedisNodeCollectionItemOutput)
}

type GetRedisClustersFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetRedisClustersFilterInput is an input type that accepts GetRedisClustersFilterArgs and GetRedisClustersFilterOutput values.
// You can construct a concrete instance of `GetRedisClustersFilterInput` via:
//
//	GetRedisClustersFilterArgs{...}
type GetRedisClustersFilterInput interface {
	pulumi.Input

	ToGetRedisClustersFilterOutput() GetRedisClustersFilterOutput
	ToGetRedisClustersFilterOutputWithContext(context.Context) GetRedisClustersFilterOutput
}

type GetRedisClustersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRedisClustersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersFilter)(nil)).Elem()
}

func (i GetRedisClustersFilterArgs) ToGetRedisClustersFilterOutput() GetRedisClustersFilterOutput {
	return i.ToGetRedisClustersFilterOutputWithContext(context.Background())
}

func (i GetRedisClustersFilterArgs) ToGetRedisClustersFilterOutputWithContext(ctx context.Context) GetRedisClustersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersFilterOutput)
}

// GetRedisClustersFilterArrayInput is an input type that accepts GetRedisClustersFilterArray and GetRedisClustersFilterArrayOutput values.
// You can construct a concrete instance of `GetRedisClustersFilterArrayInput` via:
//
//	GetRedisClustersFilterArray{ GetRedisClustersFilterArgs{...} }
type GetRedisClustersFilterArrayInput interface {
	pulumi.Input

	ToGetRedisClustersFilterArrayOutput() GetRedisClustersFilterArrayOutput
	ToGetRedisClustersFilterArrayOutputWithContext(context.Context) GetRedisClustersFilterArrayOutput
}

type GetRedisClustersFilterArray []GetRedisClustersFilterInput

func (GetRedisClustersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersFilter)(nil)).Elem()
}

func (i GetRedisClustersFilterArray) ToGetRedisClustersFilterArrayOutput() GetRedisClustersFilterArrayOutput {
	return i.ToGetRedisClustersFilterArrayOutputWithContext(context.Background())
}

func (i GetRedisClustersFilterArray) ToGetRedisClustersFilterArrayOutputWithContext(ctx context.Context) GetRedisClustersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersFilterArrayOutput)
}

type GetRedisClustersFilterOutput struct{ *pulumi.OutputState }

func (GetRedisClustersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersFilter)(nil)).Elem()
}

func (o GetRedisClustersFilterOutput) ToGetRedisClustersFilterOutput() GetRedisClustersFilterOutput {
	return o
}

func (o GetRedisClustersFilterOutput) ToGetRedisClustersFilterOutputWithContext(ctx context.Context) GetRedisClustersFilterOutput {
	return o
}

func (o GetRedisClustersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRedisClustersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRedisClustersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetRedisClustersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisClustersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRedisClustersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClustersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersFilter)(nil)).Elem()
}

func (o GetRedisClustersFilterArrayOutput) ToGetRedisClustersFilterArrayOutput() GetRedisClustersFilterArrayOutput {
	return o
}

func (o GetRedisClustersFilterArrayOutput) ToGetRedisClustersFilterArrayOutputWithContext(ctx context.Context) GetRedisClustersFilterArrayOutput {
	return o
}

func (o GetRedisClustersFilterArrayOutput) Index(i pulumi.IntInput) GetRedisClustersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClustersFilter {
		return vs[0].([]GetRedisClustersFilter)[vs[1].(int)]
	}).(GetRedisClustersFilterOutput)
}

type GetRedisClustersRedisClusterCollection struct {
	// Collection of node objects.
	Items []GetRedisClustersRedisClusterCollectionItem `pulumi:"items"`
}

// GetRedisClustersRedisClusterCollectionInput is an input type that accepts GetRedisClustersRedisClusterCollectionArgs and GetRedisClustersRedisClusterCollectionOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionInput` via:
//
//	GetRedisClustersRedisClusterCollectionArgs{...}
type GetRedisClustersRedisClusterCollectionInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionOutput() GetRedisClustersRedisClusterCollectionOutput
	ToGetRedisClustersRedisClusterCollectionOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionOutput
}

type GetRedisClustersRedisClusterCollectionArgs struct {
	// Collection of node objects.
	Items GetRedisClustersRedisClusterCollectionItemArrayInput `pulumi:"items"`
}

func (GetRedisClustersRedisClusterCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollection)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionArgs) ToGetRedisClustersRedisClusterCollectionOutput() GetRedisClustersRedisClusterCollectionOutput {
	return i.ToGetRedisClustersRedisClusterCollectionOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionArgs) ToGetRedisClustersRedisClusterCollectionOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionOutput)
}

// GetRedisClustersRedisClusterCollectionArrayInput is an input type that accepts GetRedisClustersRedisClusterCollectionArray and GetRedisClustersRedisClusterCollectionArrayOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionArrayInput` via:
//
//	GetRedisClustersRedisClusterCollectionArray{ GetRedisClustersRedisClusterCollectionArgs{...} }
type GetRedisClustersRedisClusterCollectionArrayInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionArrayOutput() GetRedisClustersRedisClusterCollectionArrayOutput
	ToGetRedisClustersRedisClusterCollectionArrayOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionArrayOutput
}

type GetRedisClustersRedisClusterCollectionArray []GetRedisClustersRedisClusterCollectionInput

func (GetRedisClustersRedisClusterCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollection)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionArray) ToGetRedisClustersRedisClusterCollectionArrayOutput() GetRedisClustersRedisClusterCollectionArrayOutput {
	return i.ToGetRedisClustersRedisClusterCollectionArrayOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionArray) ToGetRedisClustersRedisClusterCollectionArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionArrayOutput)
}

type GetRedisClustersRedisClusterCollectionOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollection)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionOutput) ToGetRedisClustersRedisClusterCollectionOutput() GetRedisClustersRedisClusterCollectionOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionOutput) ToGetRedisClustersRedisClusterCollectionOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionOutput {
	return o
}

// Collection of node objects.
func (o GetRedisClustersRedisClusterCollectionOutput) Items() GetRedisClustersRedisClusterCollectionItemArrayOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollection) []GetRedisClustersRedisClusterCollectionItem {
		return v.Items
	}).(GetRedisClustersRedisClusterCollectionItemArrayOutput)
}

type GetRedisClustersRedisClusterCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollection)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionArrayOutput) ToGetRedisClustersRedisClusterCollectionArrayOutput() GetRedisClustersRedisClusterCollectionArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionArrayOutput) ToGetRedisClustersRedisClusterCollectionArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionArrayOutput) Index(i pulumi.IntInput) GetRedisClustersRedisClusterCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClustersRedisClusterCollection {
		return vs[0].([]GetRedisClustersRedisClusterCollection)[vs[1].(int)]
	}).(GetRedisClustersRedisClusterCollectionOutput)
}

type GetRedisClustersRedisClusterCollectionItem struct {
	// Specifies whether the cluster is sharded or non-sharded.
	ClusterMode string `pulumi:"clusterMode"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The collection of  cluster nodes.
	NodeCollections []GetRedisClustersRedisClusterCollectionItemNodeCollection `pulumi:"nodeCollections"`
	// The number of nodes per shard in the cluster when clusterMode is SHARDED. This is the total number of nodes when clusterMode is NONSHARDED.
	NodeCount int `pulumi:"nodeCount"`
	// The amount of memory allocated to the cluster's nodes, in gigabytes.
	NodeMemoryInGbs float64 `pulumi:"nodeMemoryInGbs"`
	// A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Clusters](https://docs.cloud.oracle.com/iaas/Content/ocicache/connecttocluster.htm#connecttocluster__networksecuritygroup).
	NsgIds []string `pulumi:"nsgIds"`
	// The private IP address of the API endpoint for the cluster's primary node.
	PrimaryEndpointIpAddress string `pulumi:"primaryEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the cluster's primary node.
	PrimaryFqdn string `pulumi:"primaryFqdn"`
	// The private IP address of the API endpoint for the cluster's replica nodes.
	ReplicasEndpointIpAddress string `pulumi:"replicasEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the cluster's replica nodes.
	ReplicasFqdn string `pulumi:"replicasFqdn"`
	// The number of shards in a sharded cluster. Only applicable when clusterMode is SHARDED.
	ShardCount int `pulumi:"shardCount"`
	// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
	SoftwareVersion string `pulumi:"softwareVersion"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster's subnet.
	SubnetId string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetRedisClustersRedisClusterCollectionItemInput is an input type that accepts GetRedisClustersRedisClusterCollectionItemArgs and GetRedisClustersRedisClusterCollectionItemOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionItemInput` via:
//
//	GetRedisClustersRedisClusterCollectionItemArgs{...}
type GetRedisClustersRedisClusterCollectionItemInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionItemOutput() GetRedisClustersRedisClusterCollectionItemOutput
	ToGetRedisClustersRedisClusterCollectionItemOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionItemOutput
}

type GetRedisClustersRedisClusterCollectionItemArgs struct {
	// Specifies whether the cluster is sharded or non-sharded.
	ClusterMode pulumi.StringInput `pulumi:"clusterMode"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The collection of  cluster nodes.
	NodeCollections GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayInput `pulumi:"nodeCollections"`
	// The number of nodes per shard in the cluster when clusterMode is SHARDED. This is the total number of nodes when clusterMode is NONSHARDED.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// The amount of memory allocated to the cluster's nodes, in gigabytes.
	NodeMemoryInGbs pulumi.Float64Input `pulumi:"nodeMemoryInGbs"`
	// A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Clusters](https://docs.cloud.oracle.com/iaas/Content/ocicache/connecttocluster.htm#connecttocluster__networksecuritygroup).
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The private IP address of the API endpoint for the cluster's primary node.
	PrimaryEndpointIpAddress pulumi.StringInput `pulumi:"primaryEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the cluster's primary node.
	PrimaryFqdn pulumi.StringInput `pulumi:"primaryFqdn"`
	// The private IP address of the API endpoint for the cluster's replica nodes.
	ReplicasEndpointIpAddress pulumi.StringInput `pulumi:"replicasEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the cluster's replica nodes.
	ReplicasFqdn pulumi.StringInput `pulumi:"replicasFqdn"`
	// The number of shards in a sharded cluster. Only applicable when clusterMode is SHARDED.
	ShardCount pulumi.IntInput `pulumi:"shardCount"`
	// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
	SoftwareVersion pulumi.StringInput `pulumi:"softwareVersion"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster's subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The date and time the cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetRedisClustersRedisClusterCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItem)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionItemArgs) ToGetRedisClustersRedisClusterCollectionItemOutput() GetRedisClustersRedisClusterCollectionItemOutput {
	return i.ToGetRedisClustersRedisClusterCollectionItemOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionItemArgs) ToGetRedisClustersRedisClusterCollectionItemOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionItemOutput)
}

// GetRedisClustersRedisClusterCollectionItemArrayInput is an input type that accepts GetRedisClustersRedisClusterCollectionItemArray and GetRedisClustersRedisClusterCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionItemArrayInput` via:
//
//	GetRedisClustersRedisClusterCollectionItemArray{ GetRedisClustersRedisClusterCollectionItemArgs{...} }
type GetRedisClustersRedisClusterCollectionItemArrayInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionItemArrayOutput() GetRedisClustersRedisClusterCollectionItemArrayOutput
	ToGetRedisClustersRedisClusterCollectionItemArrayOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionItemArrayOutput
}

type GetRedisClustersRedisClusterCollectionItemArray []GetRedisClustersRedisClusterCollectionItemInput

func (GetRedisClustersRedisClusterCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollectionItem)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionItemArray) ToGetRedisClustersRedisClusterCollectionItemArrayOutput() GetRedisClustersRedisClusterCollectionItemArrayOutput {
	return i.ToGetRedisClustersRedisClusterCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionItemArray) ToGetRedisClustersRedisClusterCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionItemArrayOutput)
}

type GetRedisClustersRedisClusterCollectionItemOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItem)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionItemOutput) ToGetRedisClustersRedisClusterCollectionItemOutput() GetRedisClustersRedisClusterCollectionItemOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemOutput) ToGetRedisClustersRedisClusterCollectionItemOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemOutput {
	return o
}

// Specifies whether the cluster is sharded or non-sharded.
func (o GetRedisClustersRedisClusterCollectionItemOutput) ClusterMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.ClusterMode }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetRedisClustersRedisClusterCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetRedisClustersRedisClusterCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetRedisClustersRedisClusterCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetRedisClustersRedisClusterCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
func (o GetRedisClustersRedisClusterCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
func (o GetRedisClustersRedisClusterCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The collection of  cluster nodes.
func (o GetRedisClustersRedisClusterCollectionItemOutput) NodeCollections() GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) []GetRedisClustersRedisClusterCollectionItemNodeCollection {
		return v.NodeCollections
	}).(GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput)
}

// The number of nodes per shard in the cluster when clusterMode is SHARDED. This is the total number of nodes when clusterMode is NONSHARDED.
func (o GetRedisClustersRedisClusterCollectionItemOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The amount of memory allocated to the cluster's nodes, in gigabytes.
func (o GetRedisClustersRedisClusterCollectionItemOutput) NodeMemoryInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) float64 { return v.NodeMemoryInGbs }).(pulumi.Float64Output)
}

// A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Clusters](https://docs.cloud.oracle.com/iaas/Content/ocicache/connecttocluster.htm#connecttocluster__networksecuritygroup).
func (o GetRedisClustersRedisClusterCollectionItemOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The private IP address of the API endpoint for the cluster's primary node.
func (o GetRedisClustersRedisClusterCollectionItemOutput) PrimaryEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.PrimaryEndpointIpAddress }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint for the cluster's primary node.
func (o GetRedisClustersRedisClusterCollectionItemOutput) PrimaryFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.PrimaryFqdn }).(pulumi.StringOutput)
}

// The private IP address of the API endpoint for the cluster's replica nodes.
func (o GetRedisClustersRedisClusterCollectionItemOutput) ReplicasEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.ReplicasEndpointIpAddress }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint for the cluster's replica nodes.
func (o GetRedisClustersRedisClusterCollectionItemOutput) ReplicasFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.ReplicasFqdn }).(pulumi.StringOutput)
}

// The number of shards in a sharded cluster. Only applicable when clusterMode is SHARDED.
func (o GetRedisClustersRedisClusterCollectionItemOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) int { return v.ShardCount }).(pulumi.IntOutput)
}

// The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
func (o GetRedisClustersRedisClusterCollectionItemOutput) SoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.SoftwareVersion }).(pulumi.StringOutput)
}

// A filter to return only resources their lifecycleState matches the given lifecycleState.
func (o GetRedisClustersRedisClusterCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster's subnet.
func (o GetRedisClustersRedisClusterCollectionItemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetRedisClustersRedisClusterCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
func (o GetRedisClustersRedisClusterCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
func (o GetRedisClustersRedisClusterCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetRedisClustersRedisClusterCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollectionItem)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionItemArrayOutput) ToGetRedisClustersRedisClusterCollectionItemArrayOutput() GetRedisClustersRedisClusterCollectionItemArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemArrayOutput) ToGetRedisClustersRedisClusterCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemArrayOutput) Index(i pulumi.IntInput) GetRedisClustersRedisClusterCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClustersRedisClusterCollectionItem {
		return vs[0].([]GetRedisClustersRedisClusterCollectionItem)[vs[1].(int)]
	}).(GetRedisClustersRedisClusterCollectionItemOutput)
}

type GetRedisClustersRedisClusterCollectionItemNodeCollection struct {
	// Collection of node objects.
	Items []GetRedisClustersRedisClusterCollectionItemNodeCollectionItem `pulumi:"items"`
}

// GetRedisClustersRedisClusterCollectionItemNodeCollectionInput is an input type that accepts GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs and GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionItemNodeCollectionInput` via:
//
//	GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs{...}
type GetRedisClustersRedisClusterCollectionItemNodeCollectionInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput
	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs struct {
	// Collection of node objects.
	Items GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayInput `pulumi:"items"`
}

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollection)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput {
	return i.ToGetRedisClustersRedisClusterCollectionItemNodeCollectionOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput)
}

// GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayInput is an input type that accepts GetRedisClustersRedisClusterCollectionItemNodeCollectionArray and GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayInput` via:
//
//	GetRedisClustersRedisClusterCollectionItemNodeCollectionArray{ GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs{...} }
type GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput
	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionArray []GetRedisClustersRedisClusterCollectionItemNodeCollectionInput

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollectionItemNodeCollection)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionArray) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput {
	return i.ToGetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionArray) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput)
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollection)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput {
	return o
}

// Collection of node objects.
func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput) Items() GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItemNodeCollection) []GetRedisClustersRedisClusterCollectionItemNodeCollectionItem {
		return v.Items
	}).(GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput)
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollectionItemNodeCollection)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput) Index(i pulumi.IntInput) GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClustersRedisClusterCollectionItemNodeCollection {
		return vs[0].([]GetRedisClustersRedisClusterCollectionItemNodeCollection)[vs[1].(int)]
	}).(GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput)
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionItem struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn string `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
}

// GetRedisClustersRedisClusterCollectionItemNodeCollectionItemInput is an input type that accepts GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs and GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionItemNodeCollectionItemInput` via:
//
//	GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs{...}
type GetRedisClustersRedisClusterCollectionItemNodeCollectionItemInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput
	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
	PrivateEndpointFqdn pulumi.StringInput `pulumi:"privateEndpointFqdn"`
	// The private IP address of the API endpoint to access a specific node.
	PrivateEndpointIpAddress pulumi.StringInput `pulumi:"privateEndpointIpAddress"`
}

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollectionItem)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput {
	return i.ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput)
}

// GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayInput is an input type that accepts GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArray and GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayInput` via:
//
//	GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArray{ GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs{...} }
type GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput
	ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutputWithContext(context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArray []GetRedisClustersRedisClusterCollectionItemNodeCollectionItemInput

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollectionItemNodeCollectionItem)(nil)).Elem()
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArray) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput {
	return i.ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArray) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput)
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollectionItem)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItemNodeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput) PrivateEndpointFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItemNodeCollectionItem) string {
		return v.PrivateEndpointFqdn
	}).(pulumi.StringOutput)
}

// The private IP address of the API endpoint to access a specific node.
func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClustersRedisClusterCollectionItemNodeCollectionItem) string {
		return v.PrivateEndpointIpAddress
	}).(pulumi.StringOutput)
}

type GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClustersRedisClusterCollectionItemNodeCollectionItem)(nil)).Elem()
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput() GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput) ToGetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutputWithContext(ctx context.Context) GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput {
	return o
}

func (o GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClustersRedisClusterCollectionItemNodeCollectionItem {
		return vs[0].([]GetRedisClustersRedisClusterCollectionItemNodeCollectionItem)[vs[1].(int)]
	}).(GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterNodeCollectionInput)(nil)).Elem(), RedisClusterNodeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterNodeCollectionArrayInput)(nil)).Elem(), RedisClusterNodeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterNodeCollectionItemInput)(nil)).Elem(), RedisClusterNodeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterNodeCollectionItemArrayInput)(nil)).Elem(), RedisClusterNodeCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodeCollectionInput)(nil)).Elem(), GetRedisClusterNodeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodeCollectionArrayInput)(nil)).Elem(), GetRedisClusterNodeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodeCollectionItemInput)(nil)).Elem(), GetRedisClusterNodeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodeCollectionItemArrayInput)(nil)).Elem(), GetRedisClusterNodeCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodesFilterInput)(nil)).Elem(), GetRedisClusterNodesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodesFilterArrayInput)(nil)).Elem(), GetRedisClusterNodesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollectionInput)(nil)).Elem(), GetRedisClusterNodesRedisNodeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollectionArrayInput)(nil)).Elem(), GetRedisClusterNodesRedisNodeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollectionItemInput)(nil)).Elem(), GetRedisClusterNodesRedisNodeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterNodesRedisNodeCollectionItemArrayInput)(nil)).Elem(), GetRedisClusterNodesRedisNodeCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersFilterInput)(nil)).Elem(), GetRedisClustersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersFilterArrayInput)(nil)).Elem(), GetRedisClustersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionArrayInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemArrayInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollectionInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionItemNodeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionItemNodeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollectionItemInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayInput)(nil)).Elem(), GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArray{})
	pulumi.RegisterOutputType(RedisClusterNodeCollectionOutput{})
	pulumi.RegisterOutputType(RedisClusterNodeCollectionArrayOutput{})
	pulumi.RegisterOutputType(RedisClusterNodeCollectionItemOutput{})
	pulumi.RegisterOutputType(RedisClusterNodeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodeCollectionOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodesFilterOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodesRedisNodeCollectionOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodesRedisNodeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodesRedisNodeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetRedisClusterNodesRedisNodeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClustersFilterOutput{})
	pulumi.RegisterOutputType(GetRedisClustersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionItemOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionItemNodeCollectionOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionItemNodeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionItemNodeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetRedisClustersRedisClusterCollectionItemNodeCollectionItemArrayOutput{})
}
