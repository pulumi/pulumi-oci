// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Redis Cluster resource in Oracle Cloud Infrastructure Redis service.
//
// Creates a new Redis cluster. A Redis cluster is a memory-based storage solution. For more information, see [OCI Caching Service with Redis](https://docs.cloud.oracle.com/iaas/Content/redis/home.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Redis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Redis.NewRedisCluster(ctx, "test_redis_cluster", &Redis.RedisClusterArgs{
//				CompartmentId:   pulumi.Any(compartmentId),
//				DisplayName:     pulumi.Any(redisClusterDisplayName),
//				NodeCount:       pulumi.Any(redisClusterNodeCount),
//				NodeMemoryInGbs: pulumi.Any(redisClusterNodeMemoryInGbs),
//				SoftwareVersion: pulumi.Any(redisClusterSoftwareVersion),
//				SubnetId:        pulumi.Any(testSubnet.Id),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				NsgIds: pulumi.Any(redisClusterNsgIds),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RedisClusters can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Redis/redisCluster:RedisCluster test_redis_cluster "id"
// ```
type RedisCluster struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Redis cluster.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The collection of Redis cluster nodes.
	NodeCollections RedisClusterNodeCollectionArrayOutput `pulumi:"nodeCollections"`
	// (Updatable) The number of nodes in the Redis cluster.
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// (Updatable) The amount of memory allocated to the Redis cluster's nodes, in gigabytes.
	NodeMemoryInGbs pulumi.Float64Output `pulumi:"nodeMemoryInGbs"`
	// (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Redis Clusters](https://docs.cloud.oracle.com/iaas/Content/redis/connecttorediscluster.htm#connecttorediscluster__networksecuritygroup).
	NsgIds pulumi.StringArrayOutput `pulumi:"nsgIds"`
	// The private IP address of the API endpoint for the Redis cluster's primary node.
	PrimaryEndpointIpAddress pulumi.StringOutput `pulumi:"primaryEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's primary node.
	PrimaryFqdn pulumi.StringOutput `pulumi:"primaryFqdn"`
	// The private IP address of the API endpoint for the Redis cluster's replica nodes.
	ReplicasEndpointIpAddress pulumi.StringOutput `pulumi:"replicasEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's replica nodes.
	ReplicasFqdn pulumi.StringOutput `pulumi:"replicasFqdn"`
	// The Redis version that the cluster is running.
	SoftwareVersion pulumi.StringOutput `pulumi:"softwareVersion"`
	// The current state of the Redis cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster's subnet.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the Redis cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the Redis cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewRedisCluster registers a new resource with the given unique name, arguments, and options.
func NewRedisCluster(ctx *pulumi.Context,
	name string, args *RedisClusterArgs, opts ...pulumi.ResourceOption) (*RedisCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.NodeCount == nil {
		return nil, errors.New("invalid value for required argument 'NodeCount'")
	}
	if args.NodeMemoryInGbs == nil {
		return nil, errors.New("invalid value for required argument 'NodeMemoryInGbs'")
	}
	if args.SoftwareVersion == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareVersion'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RedisCluster
	err := ctx.RegisterResource("oci:Redis/redisCluster:RedisCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRedisCluster gets an existing RedisCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRedisCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RedisClusterState, opts ...pulumi.ResourceOption) (*RedisCluster, error) {
	var resource RedisCluster
	err := ctx.ReadResource("oci:Redis/redisCluster:RedisCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RedisCluster resources.
type redisClusterState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Redis cluster.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The collection of Redis cluster nodes.
	NodeCollections []RedisClusterNodeCollection `pulumi:"nodeCollections"`
	// (Updatable) The number of nodes in the Redis cluster.
	NodeCount *int `pulumi:"nodeCount"`
	// (Updatable) The amount of memory allocated to the Redis cluster's nodes, in gigabytes.
	NodeMemoryInGbs *float64 `pulumi:"nodeMemoryInGbs"`
	// (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Redis Clusters](https://docs.cloud.oracle.com/iaas/Content/redis/connecttorediscluster.htm#connecttorediscluster__networksecuritygroup).
	NsgIds []string `pulumi:"nsgIds"`
	// The private IP address of the API endpoint for the Redis cluster's primary node.
	PrimaryEndpointIpAddress *string `pulumi:"primaryEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's primary node.
	PrimaryFqdn *string `pulumi:"primaryFqdn"`
	// The private IP address of the API endpoint for the Redis cluster's replica nodes.
	ReplicasEndpointIpAddress *string `pulumi:"replicasEndpointIpAddress"`
	// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's replica nodes.
	ReplicasFqdn *string `pulumi:"replicasFqdn"`
	// The Redis version that the cluster is running.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// The current state of the Redis cluster.
	State *string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster's subnet.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId *string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the Redis cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the Redis cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type RedisClusterState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Redis cluster.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
	LifecycleDetails pulumi.StringPtrInput
	// The collection of Redis cluster nodes.
	NodeCollections RedisClusterNodeCollectionArrayInput
	// (Updatable) The number of nodes in the Redis cluster.
	NodeCount pulumi.IntPtrInput
	// (Updatable) The amount of memory allocated to the Redis cluster's nodes, in gigabytes.
	NodeMemoryInGbs pulumi.Float64PtrInput
	// (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Redis Clusters](https://docs.cloud.oracle.com/iaas/Content/redis/connecttorediscluster.htm#connecttorediscluster__networksecuritygroup).
	NsgIds pulumi.StringArrayInput
	// The private IP address of the API endpoint for the Redis cluster's primary node.
	PrimaryEndpointIpAddress pulumi.StringPtrInput
	// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's primary node.
	PrimaryFqdn pulumi.StringPtrInput
	// The private IP address of the API endpoint for the Redis cluster's replica nodes.
	ReplicasEndpointIpAddress pulumi.StringPtrInput
	// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's replica nodes.
	ReplicasFqdn pulumi.StringPtrInput
	// The Redis version that the cluster is running.
	SoftwareVersion pulumi.StringPtrInput
	// The current state of the Redis cluster.
	State pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster's subnet.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the Redis cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The date and time the Redis cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (RedisClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*redisClusterState)(nil)).Elem()
}

type redisClusterArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Redis cluster.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The number of nodes in the Redis cluster.
	NodeCount int `pulumi:"nodeCount"`
	// (Updatable) The amount of memory allocated to the Redis cluster's nodes, in gigabytes.
	NodeMemoryInGbs float64 `pulumi:"nodeMemoryInGbs"`
	// (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Redis Clusters](https://docs.cloud.oracle.com/iaas/Content/redis/connecttorediscluster.htm#connecttorediscluster__networksecuritygroup).
	NsgIds []string `pulumi:"nsgIds"`
	// The Redis version that the cluster is running.
	SoftwareVersion string `pulumi:"softwareVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster's subnet.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a RedisCluster resource.
type RedisClusterArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Redis cluster.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The number of nodes in the Redis cluster.
	NodeCount pulumi.IntInput
	// (Updatable) The amount of memory allocated to the Redis cluster's nodes, in gigabytes.
	NodeMemoryInGbs pulumi.Float64Input
	// (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Redis Clusters](https://docs.cloud.oracle.com/iaas/Content/redis/connecttorediscluster.htm#connecttorediscluster__networksecuritygroup).
	NsgIds pulumi.StringArrayInput
	// The Redis version that the cluster is running.
	SoftwareVersion pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster's subnet.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringInput
}

func (RedisClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*redisClusterArgs)(nil)).Elem()
}

type RedisClusterInput interface {
	pulumi.Input

	ToRedisClusterOutput() RedisClusterOutput
	ToRedisClusterOutputWithContext(ctx context.Context) RedisClusterOutput
}

func (*RedisCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisCluster)(nil)).Elem()
}

func (i *RedisCluster) ToRedisClusterOutput() RedisClusterOutput {
	return i.ToRedisClusterOutputWithContext(context.Background())
}

func (i *RedisCluster) ToRedisClusterOutputWithContext(ctx context.Context) RedisClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterOutput)
}

// RedisClusterArrayInput is an input type that accepts RedisClusterArray and RedisClusterArrayOutput values.
// You can construct a concrete instance of `RedisClusterArrayInput` via:
//
//	RedisClusterArray{ RedisClusterArgs{...} }
type RedisClusterArrayInput interface {
	pulumi.Input

	ToRedisClusterArrayOutput() RedisClusterArrayOutput
	ToRedisClusterArrayOutputWithContext(context.Context) RedisClusterArrayOutput
}

type RedisClusterArray []RedisClusterInput

func (RedisClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RedisCluster)(nil)).Elem()
}

func (i RedisClusterArray) ToRedisClusterArrayOutput() RedisClusterArrayOutput {
	return i.ToRedisClusterArrayOutputWithContext(context.Background())
}

func (i RedisClusterArray) ToRedisClusterArrayOutputWithContext(ctx context.Context) RedisClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterArrayOutput)
}

// RedisClusterMapInput is an input type that accepts RedisClusterMap and RedisClusterMapOutput values.
// You can construct a concrete instance of `RedisClusterMapInput` via:
//
//	RedisClusterMap{ "key": RedisClusterArgs{...} }
type RedisClusterMapInput interface {
	pulumi.Input

	ToRedisClusterMapOutput() RedisClusterMapOutput
	ToRedisClusterMapOutputWithContext(context.Context) RedisClusterMapOutput
}

type RedisClusterMap map[string]RedisClusterInput

func (RedisClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RedisCluster)(nil)).Elem()
}

func (i RedisClusterMap) ToRedisClusterMapOutput() RedisClusterMapOutput {
	return i.ToRedisClusterMapOutputWithContext(context.Background())
}

func (i RedisClusterMap) ToRedisClusterMapOutputWithContext(ctx context.Context) RedisClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterMapOutput)
}

type RedisClusterOutput struct{ *pulumi.OutputState }

func (RedisClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisCluster)(nil)).Elem()
}

func (o RedisClusterOutput) ToRedisClusterOutput() RedisClusterOutput {
	return o
}

func (o RedisClusterOutput) ToRedisClusterOutputWithContext(ctx context.Context) RedisClusterOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Redis cluster.
func (o RedisClusterOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o RedisClusterOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o RedisClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o RedisClusterOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
func (o RedisClusterOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The collection of Redis cluster nodes.
func (o RedisClusterOutput) NodeCollections() RedisClusterNodeCollectionArrayOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterNodeCollectionArrayOutput { return v.NodeCollections }).(RedisClusterNodeCollectionArrayOutput)
}

// (Updatable) The number of nodes in the Redis cluster.
func (o RedisClusterOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// (Updatable) The amount of memory allocated to the Redis cluster's nodes, in gigabytes.
func (o RedisClusterOutput) NodeMemoryInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisCluster) pulumi.Float64Output { return v.NodeMemoryInGbs }).(pulumi.Float64Output)
}

// (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Redis Clusters](https://docs.cloud.oracle.com/iaas/Content/redis/connecttorediscluster.htm#connecttorediscluster__networksecuritygroup).
func (o RedisClusterOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringArrayOutput { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The private IP address of the API endpoint for the Redis cluster's primary node.
func (o RedisClusterOutput) PrimaryEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.PrimaryEndpointIpAddress }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's primary node.
func (o RedisClusterOutput) PrimaryFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.PrimaryFqdn }).(pulumi.StringOutput)
}

// The private IP address of the API endpoint for the Redis cluster's replica nodes.
func (o RedisClusterOutput) ReplicasEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.ReplicasEndpointIpAddress }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster's replica nodes.
func (o RedisClusterOutput) ReplicasFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.ReplicasFqdn }).(pulumi.StringOutput)
}

// The Redis version that the cluster is running.
func (o RedisClusterOutput) SoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.SoftwareVersion }).(pulumi.StringOutput)
}

// The current state of the Redis cluster.
func (o RedisClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster's subnet.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o RedisClusterOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o RedisClusterOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the Redis cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
func (o RedisClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Redis cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
func (o RedisClusterOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type RedisClusterArrayOutput struct{ *pulumi.OutputState }

func (RedisClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RedisCluster)(nil)).Elem()
}

func (o RedisClusterArrayOutput) ToRedisClusterArrayOutput() RedisClusterArrayOutput {
	return o
}

func (o RedisClusterArrayOutput) ToRedisClusterArrayOutputWithContext(ctx context.Context) RedisClusterArrayOutput {
	return o
}

func (o RedisClusterArrayOutput) Index(i pulumi.IntInput) RedisClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RedisCluster {
		return vs[0].([]*RedisCluster)[vs[1].(int)]
	}).(RedisClusterOutput)
}

type RedisClusterMapOutput struct{ *pulumi.OutputState }

func (RedisClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RedisCluster)(nil)).Elem()
}

func (o RedisClusterMapOutput) ToRedisClusterMapOutput() RedisClusterMapOutput {
	return o
}

func (o RedisClusterMapOutput) ToRedisClusterMapOutputWithContext(ctx context.Context) RedisClusterMapOutput {
	return o
}

func (o RedisClusterMapOutput) MapIndex(k pulumi.StringInput) RedisClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RedisCluster {
		return vs[0].(map[string]*RedisCluster)[vs[1].(string)]
	}).(RedisClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterInput)(nil)).Elem(), &RedisCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterArrayInput)(nil)).Elem(), RedisClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterMapInput)(nil)).Elem(), RedisClusterMap{})
	pulumi.RegisterOutputType(RedisClusterOutput{})
	pulumi.RegisterOutputType(RedisClusterArrayOutput{})
	pulumi.RegisterOutputType(RedisClusterMapOutput{})
}
