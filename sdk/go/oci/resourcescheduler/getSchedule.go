// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcescheduler

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Resource Scheduler service.
//
// This API gets information about a schedule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/ResourceScheduler"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ResourceScheduler.GetSchedule(ctx, &resourcescheduler.GetScheduleArgs{
//				ScheduleId: testScheduleOciResourceSchedulerSchedule.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSchedule(ctx *pulumi.Context, args *LookupScheduleArgs, opts ...pulumi.InvokeOption) (*LookupScheduleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupScheduleResult
	err := ctx.Invoke("oci:ResourceScheduler/getSchedule:getSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchedule.
type LookupScheduleArgs struct {
	// This is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
	ScheduleId string `pulumi:"scheduleId"`
}

// A collection of values returned by getSchedule.
type LookupScheduleResult struct {
	// This is the action that will be executed by the schedule.
	Action string `pulumi:"action"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the schedule is created
	CompartmentId string `pulumi:"compartmentId"`
	// These are defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// This is the description of the schedule.
	Description string `pulumi:"description"`
	// This is a user-friendly name for the schedule. It does not have to be unique, and it's changeable.
	DisplayName string `pulumi:"displayName"`
	// These are free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// This is the resource OCID.
	Id string `pulumi:"id"`
	// This is the frequency of recurrence of a schedule. The frequency field can either conform to RFC-5545 formatting or UNIX cron formatting for recurrences, based on the value specified by the recurrenceType field.
	RecurrenceDetails string `pulumi:"recurrenceDetails"`
	// Type of recurrence of a schedule
	RecurrenceType string `pulumi:"recurrenceType"`
	// This is a list of resources filters.  The schedule will be applied to resources matching all of them.
	ResourceFilters []GetScheduleResourceFilter `pulumi:"resourceFilters"`
	// This is the list of resources to which the scheduled operation is applied.
	Resources  []GetScheduleResource `pulumi:"resources"`
	ScheduleId string                `pulumi:"scheduleId"`
	// This is the current state of a schedule.
	State string `pulumi:"state"`
	// These are system tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// This is the date and time the schedule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// This is the date and time the schedule ends, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
	TimeEnds string `pulumi:"timeEnds"`
	// This is the date and time the schedule runs last time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeLastRun string `pulumi:"timeLastRun"`
	// This is the date and time the schedule run the next time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeNextRun string `pulumi:"timeNextRun"`
	// This is the date and time the schedule starts, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
	TimeStarts string `pulumi:"timeStarts"`
	// This is the date and time the schedule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupScheduleOutput(ctx *pulumi.Context, args LookupScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupScheduleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupScheduleResult, error) {
			args := v.(LookupScheduleArgs)
			r, err := LookupSchedule(ctx, &args, opts...)
			var s LookupScheduleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupScheduleResultOutput)
}

// A collection of arguments for invoking getSchedule.
type LookupScheduleOutputArgs struct {
	// This is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
	ScheduleId pulumi.StringInput `pulumi:"scheduleId"`
}

func (LookupScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getSchedule.
type LookupScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleResult)(nil)).Elem()
}

func (o LookupScheduleResultOutput) ToLookupScheduleResultOutput() LookupScheduleResultOutput {
	return o
}

func (o LookupScheduleResultOutput) ToLookupScheduleResultOutputWithContext(ctx context.Context) LookupScheduleResultOutput {
	return o
}

// This is the action that will be executed by the schedule.
func (o LookupScheduleResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.Action }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the schedule is created
func (o LookupScheduleResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// These are defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupScheduleResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// This is the description of the schedule.
func (o LookupScheduleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.Description }).(pulumi.StringOutput)
}

// This is a user-friendly name for the schedule. It does not have to be unique, and it's changeable.
func (o LookupScheduleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// These are free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupScheduleResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// This is the resource OCID.
func (o LookupScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// This is the frequency of recurrence of a schedule. The frequency field can either conform to RFC-5545 formatting or UNIX cron formatting for recurrences, based on the value specified by the recurrenceType field.
func (o LookupScheduleResultOutput) RecurrenceDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.RecurrenceDetails }).(pulumi.StringOutput)
}

// Type of recurrence of a schedule
func (o LookupScheduleResultOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// This is a list of resources filters.  The schedule will be applied to resources matching all of them.
func (o LookupScheduleResultOutput) ResourceFilters() GetScheduleResourceFilterArrayOutput {
	return o.ApplyT(func(v LookupScheduleResult) []GetScheduleResourceFilter { return v.ResourceFilters }).(GetScheduleResourceFilterArrayOutput)
}

// This is the list of resources to which the scheduled operation is applied.
func (o LookupScheduleResultOutput) Resources() GetScheduleResourceArrayOutput {
	return o.ApplyT(func(v LookupScheduleResult) []GetScheduleResource { return v.Resources }).(GetScheduleResourceArrayOutput)
}

func (o LookupScheduleResultOutput) ScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.ScheduleId }).(pulumi.StringOutput)
}

// This is the current state of a schedule.
func (o LookupScheduleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.State }).(pulumi.StringOutput)
}

// These are system tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupScheduleResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// This is the date and time the schedule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupScheduleResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// This is the date and time the schedule ends, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
func (o LookupScheduleResultOutput) TimeEnds() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeEnds }).(pulumi.StringOutput)
}

// This is the date and time the schedule runs last time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupScheduleResultOutput) TimeLastRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeLastRun }).(pulumi.StringOutput)
}

// This is the date and time the schedule run the next time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupScheduleResultOutput) TimeNextRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeNextRun }).(pulumi.StringOutput)
}

// This is the date and time the schedule starts, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
func (o LookupScheduleResultOutput) TimeStarts() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeStarts }).(pulumi.StringOutput)
}

// This is the date and time the schedule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupScheduleResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduleResultOutput{})
}
