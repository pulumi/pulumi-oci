// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Connector Plugin resource in Oracle Cloud Infrastructure Service Connector Hub service.
//
// Gets the specified connector plugin configuration information.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Sch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Sch.GetConnectorPlugin(ctx, &sch.GetConnectorPluginArgs{
//				ConnectorPluginName: oci_sch_connector_plugin.Test_connector_plugin.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetConnectorPlugin(ctx *pulumi.Context, args *GetConnectorPluginArgs, opts ...pulumi.InvokeOption) (*GetConnectorPluginResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectorPluginResult
	err := ctx.Invoke("oci:Sch/getConnectorPlugin:getConnectorPlugin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectorPlugin.
type GetConnectorPluginArgs struct {
	// The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
	ConnectorPluginName string `pulumi:"connectorPluginName"`
}

// A collection of values returned by getConnectorPlugin.
type GetConnectorPluginResult struct {
	ConnectorPluginName string `pulumi:"connectorPluginName"`
	// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The estimated throughput range (LOW, MEDIUM, HIGH).
	EstimatedThroughput string `pulumi:"estimatedThroughput"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The plugin type discriminator.
	Kind string `pulumi:"kind"`
	// The estimated maximum period of time the data will be kept at the source. The duration is specified as a string in ISO 8601 format (P1D for one day or P30D for thrity days).
	MaxRetention string `pulumi:"maxRetention"`
	// The service to be called by the connector plugin. Example: `QueueSource`
	Name string `pulumi:"name"`
	// Gets the specified connector plugin configuration information in OpenAPI specification format.
	Schema string `pulumi:"schema"`
	// The current state of the service connector.
	State string `pulumi:"state"`
	// The date and time when this plugin became available. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2023-09-09T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

func GetConnectorPluginOutput(ctx *pulumi.Context, args GetConnectorPluginOutputArgs, opts ...pulumi.InvokeOption) GetConnectorPluginResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConnectorPluginResult, error) {
			args := v.(GetConnectorPluginArgs)
			r, err := GetConnectorPlugin(ctx, &args, opts...)
			var s GetConnectorPluginResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConnectorPluginResultOutput)
}

// A collection of arguments for invoking getConnectorPlugin.
type GetConnectorPluginOutputArgs struct {
	// The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
	ConnectorPluginName pulumi.StringInput `pulumi:"connectorPluginName"`
}

func (GetConnectorPluginOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorPluginArgs)(nil)).Elem()
}

// A collection of values returned by getConnectorPlugin.
type GetConnectorPluginResultOutput struct{ *pulumi.OutputState }

func (GetConnectorPluginResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorPluginResult)(nil)).Elem()
}

func (o GetConnectorPluginResultOutput) ToGetConnectorPluginResultOutput() GetConnectorPluginResultOutput {
	return o
}

func (o GetConnectorPluginResultOutput) ToGetConnectorPluginResultOutputWithContext(ctx context.Context) GetConnectorPluginResultOutput {
	return o
}

func (o GetConnectorPluginResultOutput) ConnectorPluginName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.ConnectorPluginName }).(pulumi.StringOutput)
}

// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
func (o GetConnectorPluginResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The estimated throughput range (LOW, MEDIUM, HIGH).
func (o GetConnectorPluginResultOutput) EstimatedThroughput() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.EstimatedThroughput }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConnectorPluginResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.Id }).(pulumi.StringOutput)
}

// The plugin type discriminator.
func (o GetConnectorPluginResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The estimated maximum period of time the data will be kept at the source. The duration is specified as a string in ISO 8601 format (P1D for one day or P30D for thrity days).
func (o GetConnectorPluginResultOutput) MaxRetention() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.MaxRetention }).(pulumi.StringOutput)
}

// The service to be called by the connector plugin. Example: `QueueSource`
func (o GetConnectorPluginResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the specified connector plugin configuration information in OpenAPI specification format.
func (o GetConnectorPluginResultOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.Schema }).(pulumi.StringOutput)
}

// The current state of the service connector.
func (o GetConnectorPluginResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time when this plugin became available. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2023-09-09T21:10:29.600Z`
func (o GetConnectorPluginResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPluginResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectorPluginResultOutput{})
}
