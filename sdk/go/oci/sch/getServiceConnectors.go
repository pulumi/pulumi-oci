// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Service Connectors in Oracle Cloud Infrastructure Service Connector Hub service.
//
// Lists connectors in the specified compartment.
// For more information, see
// [Listing Connectors](https://docs.cloud.oracle.com/iaas/Content/connector-hub/list-service-connector.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/sch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sch.GetServiceConnectors(ctx, &sch.GetServiceConnectorsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(serviceConnectorDisplayName),
//				State:         pulumi.StringRef(serviceConnectorState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServiceConnectors(ctx *pulumi.Context, args *GetServiceConnectorsArgs, opts ...pulumi.InvokeOption) (*GetServiceConnectorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceConnectorsResult
	err := ctx.Invoke("oci:Sch/getServiceConnectors:getServiceConnectors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceConnectors.
type GetServiceConnectorsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetServiceConnectorsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
	State *string `pulumi:"state"`
}

// A collection of values returned by getServiceConnectors.
type GetServiceConnectorsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetServiceConnectorsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of service_connector_collection.
	ServiceConnectorCollections []GetServiceConnectorsServiceConnectorCollection `pulumi:"serviceConnectorCollections"`
	// The current state of the connector.
	State *string `pulumi:"state"`
}

func GetServiceConnectorsOutput(ctx *pulumi.Context, args GetServiceConnectorsOutputArgs, opts ...pulumi.InvokeOption) GetServiceConnectorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServiceConnectorsResultOutput, error) {
			args := v.(GetServiceConnectorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Sch/getServiceConnectors:getServiceConnectors", args, GetServiceConnectorsResultOutput{}, options).(GetServiceConnectorsResultOutput), nil
		}).(GetServiceConnectorsResultOutput)
}

// A collection of arguments for invoking getServiceConnectors.
type GetServiceConnectorsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
	DisplayName pulumi.StringPtrInput                `pulumi:"displayName"`
	Filters     GetServiceConnectorsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetServiceConnectorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsArgs)(nil)).Elem()
}

// A collection of values returned by getServiceConnectors.
type GetServiceConnectorsResultOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsResult)(nil)).Elem()
}

func (o GetServiceConnectorsResultOutput) ToGetServiceConnectorsResultOutput() GetServiceConnectorsResultOutput {
	return o
}

func (o GetServiceConnectorsResultOutput) ToGetServiceConnectorsResultOutputWithContext(ctx context.Context) GetServiceConnectorsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o GetServiceConnectorsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
func (o GetServiceConnectorsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceConnectorsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetServiceConnectorsResultOutput) Filters() GetServiceConnectorsFilterArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsResult) []GetServiceConnectorsFilter { return v.Filters }).(GetServiceConnectorsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceConnectorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of service_connector_collection.
func (o GetServiceConnectorsResultOutput) ServiceConnectorCollections() GetServiceConnectorsServiceConnectorCollectionArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsResult) []GetServiceConnectorsServiceConnectorCollection {
		return v.ServiceConnectorCollections
	}).(GetServiceConnectorsServiceConnectorCollectionArrayOutput)
}

// The current state of the connector.
func (o GetServiceConnectorsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceConnectorsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceConnectorsResultOutput{})
}
