// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ConnectorSource struct {
	// (Updatable) The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
	Cursor *ConnectorSourceCursor `pulumi:"cursor"`
	// (Updatable) The type descriminator.
	Kind string `pulumi:"kind"`
	// (Updatable) The logs for this Logging source.
	LogSources []ConnectorSourceLogSource `pulumi:"logSources"`
	// (Updatable) The list of metric namespaces to retrieve data from.
	MonitoringSources []ConnectorSourceMonitoringSource `pulumi:"monitoringSources"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId *string `pulumi:"streamId"`
}

// ConnectorSourceInput is an input type that accepts ConnectorSourceArgs and ConnectorSourceOutput values.
// You can construct a concrete instance of `ConnectorSourceInput` via:
//
//	ConnectorSourceArgs{...}
type ConnectorSourceInput interface {
	pulumi.Input

	ToConnectorSourceOutput() ConnectorSourceOutput
	ToConnectorSourceOutputWithContext(context.Context) ConnectorSourceOutput
}

type ConnectorSourceArgs struct {
	// (Updatable) The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
	Cursor ConnectorSourceCursorPtrInput `pulumi:"cursor"`
	// (Updatable) The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Updatable) The logs for this Logging source.
	LogSources ConnectorSourceLogSourceArrayInput `pulumi:"logSources"`
	// (Updatable) The list of metric namespaces to retrieve data from.
	MonitoringSources ConnectorSourceMonitoringSourceArrayInput `pulumi:"monitoringSources"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId pulumi.StringPtrInput `pulumi:"streamId"`
}

func (ConnectorSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSource)(nil)).Elem()
}

func (i ConnectorSourceArgs) ToConnectorSourceOutput() ConnectorSourceOutput {
	return i.ToConnectorSourceOutputWithContext(context.Background())
}

func (i ConnectorSourceArgs) ToConnectorSourceOutputWithContext(ctx context.Context) ConnectorSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceOutput)
}

func (i ConnectorSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorSource] {
	return pulumix.Output[ConnectorSource]{
		OutputState: i.ToConnectorSourceOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectorSourceArgs) ToConnectorSourcePtrOutput() ConnectorSourcePtrOutput {
	return i.ToConnectorSourcePtrOutputWithContext(context.Background())
}

func (i ConnectorSourceArgs) ToConnectorSourcePtrOutputWithContext(ctx context.Context) ConnectorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceOutput).ToConnectorSourcePtrOutputWithContext(ctx)
}

// ConnectorSourcePtrInput is an input type that accepts ConnectorSourceArgs, ConnectorSourcePtr and ConnectorSourcePtrOutput values.
// You can construct a concrete instance of `ConnectorSourcePtrInput` via:
//
//	        ConnectorSourceArgs{...}
//
//	or:
//
//	        nil
type ConnectorSourcePtrInput interface {
	pulumi.Input

	ToConnectorSourcePtrOutput() ConnectorSourcePtrOutput
	ToConnectorSourcePtrOutputWithContext(context.Context) ConnectorSourcePtrOutput
}

type connectorSourcePtrType ConnectorSourceArgs

func ConnectorSourcePtr(v *ConnectorSourceArgs) ConnectorSourcePtrInput {
	return (*connectorSourcePtrType)(v)
}

func (*connectorSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSource)(nil)).Elem()
}

func (i *connectorSourcePtrType) ToConnectorSourcePtrOutput() ConnectorSourcePtrOutput {
	return i.ToConnectorSourcePtrOutputWithContext(context.Background())
}

func (i *connectorSourcePtrType) ToConnectorSourcePtrOutputWithContext(ctx context.Context) ConnectorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourcePtrOutput)
}

func (i *connectorSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectorSource] {
	return pulumix.Output[*ConnectorSource]{
		OutputState: i.ToConnectorSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectorSourceOutput struct{ *pulumi.OutputState }

func (ConnectorSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSource)(nil)).Elem()
}

func (o ConnectorSourceOutput) ToConnectorSourceOutput() ConnectorSourceOutput {
	return o
}

func (o ConnectorSourceOutput) ToConnectorSourceOutputWithContext(ctx context.Context) ConnectorSourceOutput {
	return o
}

func (o ConnectorSourceOutput) ToConnectorSourcePtrOutput() ConnectorSourcePtrOutput {
	return o.ToConnectorSourcePtrOutputWithContext(context.Background())
}

func (o ConnectorSourceOutput) ToConnectorSourcePtrOutputWithContext(ctx context.Context) ConnectorSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorSource) *ConnectorSource {
		return &v
	}).(ConnectorSourcePtrOutput)
}

func (o ConnectorSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorSource] {
	return pulumix.Output[ConnectorSource]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
func (o ConnectorSourceOutput) Cursor() ConnectorSourceCursorPtrOutput {
	return o.ApplyT(func(v ConnectorSource) *ConnectorSourceCursor { return v.Cursor }).(ConnectorSourceCursorPtrOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorSource) string { return v.Kind }).(pulumi.StringOutput)
}

// (Updatable) The logs for this Logging source.
func (o ConnectorSourceOutput) LogSources() ConnectorSourceLogSourceArrayOutput {
	return o.ApplyT(func(v ConnectorSource) []ConnectorSourceLogSource { return v.LogSources }).(ConnectorSourceLogSourceArrayOutput)
}

// (Updatable) The list of metric namespaces to retrieve data from.
func (o ConnectorSourceOutput) MonitoringSources() ConnectorSourceMonitoringSourceArrayOutput {
	return o.ApplyT(func(v ConnectorSource) []ConnectorSourceMonitoringSource { return v.MonitoringSources }).(ConnectorSourceMonitoringSourceArrayOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o ConnectorSourceOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSource) *string { return v.StreamId }).(pulumi.StringPtrOutput)
}

type ConnectorSourcePtrOutput struct{ *pulumi.OutputState }

func (ConnectorSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSource)(nil)).Elem()
}

func (o ConnectorSourcePtrOutput) ToConnectorSourcePtrOutput() ConnectorSourcePtrOutput {
	return o
}

func (o ConnectorSourcePtrOutput) ToConnectorSourcePtrOutputWithContext(ctx context.Context) ConnectorSourcePtrOutput {
	return o
}

func (o ConnectorSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectorSource] {
	return pulumix.Output[*ConnectorSource]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorSourcePtrOutput) Elem() ConnectorSourceOutput {
	return o.ApplyT(func(v *ConnectorSource) ConnectorSource {
		if v != nil {
			return *v
		}
		var ret ConnectorSource
		return ret
	}).(ConnectorSourceOutput)
}

// (Updatable) The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
func (o ConnectorSourcePtrOutput) Cursor() ConnectorSourceCursorPtrOutput {
	return o.ApplyT(func(v *ConnectorSource) *ConnectorSourceCursor {
		if v == nil {
			return nil
		}
		return v.Cursor
	}).(ConnectorSourceCursorPtrOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorSource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The logs for this Logging source.
func (o ConnectorSourcePtrOutput) LogSources() ConnectorSourceLogSourceArrayOutput {
	return o.ApplyT(func(v *ConnectorSource) []ConnectorSourceLogSource {
		if v == nil {
			return nil
		}
		return v.LogSources
	}).(ConnectorSourceLogSourceArrayOutput)
}

// (Updatable) The list of metric namespaces to retrieve data from.
func (o ConnectorSourcePtrOutput) MonitoringSources() ConnectorSourceMonitoringSourceArrayOutput {
	return o.ApplyT(func(v *ConnectorSource) []ConnectorSourceMonitoringSource {
		if v == nil {
			return nil
		}
		return v.MonitoringSources
	}).(ConnectorSourceMonitoringSourceArrayOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o ConnectorSourcePtrOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorSource) *string {
		if v == nil {
			return nil
		}
		return v.StreamId
	}).(pulumi.StringPtrOutput)
}

type ConnectorSourceCursor struct {
	// (Updatable) The type descriminator.
	Kind *string `pulumi:"kind"`
}

// ConnectorSourceCursorInput is an input type that accepts ConnectorSourceCursorArgs and ConnectorSourceCursorOutput values.
// You can construct a concrete instance of `ConnectorSourceCursorInput` via:
//
//	ConnectorSourceCursorArgs{...}
type ConnectorSourceCursorInput interface {
	pulumi.Input

	ToConnectorSourceCursorOutput() ConnectorSourceCursorOutput
	ToConnectorSourceCursorOutputWithContext(context.Context) ConnectorSourceCursorOutput
}

type ConnectorSourceCursorArgs struct {
	// (Updatable) The type descriminator.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
}

func (ConnectorSourceCursorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceCursor)(nil)).Elem()
}

func (i ConnectorSourceCursorArgs) ToConnectorSourceCursorOutput() ConnectorSourceCursorOutput {
	return i.ToConnectorSourceCursorOutputWithContext(context.Background())
}

func (i ConnectorSourceCursorArgs) ToConnectorSourceCursorOutputWithContext(ctx context.Context) ConnectorSourceCursorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceCursorOutput)
}

func (i ConnectorSourceCursorArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceCursor] {
	return pulumix.Output[ConnectorSourceCursor]{
		OutputState: i.ToConnectorSourceCursorOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectorSourceCursorArgs) ToConnectorSourceCursorPtrOutput() ConnectorSourceCursorPtrOutput {
	return i.ToConnectorSourceCursorPtrOutputWithContext(context.Background())
}

func (i ConnectorSourceCursorArgs) ToConnectorSourceCursorPtrOutputWithContext(ctx context.Context) ConnectorSourceCursorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceCursorOutput).ToConnectorSourceCursorPtrOutputWithContext(ctx)
}

// ConnectorSourceCursorPtrInput is an input type that accepts ConnectorSourceCursorArgs, ConnectorSourceCursorPtr and ConnectorSourceCursorPtrOutput values.
// You can construct a concrete instance of `ConnectorSourceCursorPtrInput` via:
//
//	        ConnectorSourceCursorArgs{...}
//
//	or:
//
//	        nil
type ConnectorSourceCursorPtrInput interface {
	pulumi.Input

	ToConnectorSourceCursorPtrOutput() ConnectorSourceCursorPtrOutput
	ToConnectorSourceCursorPtrOutputWithContext(context.Context) ConnectorSourceCursorPtrOutput
}

type connectorSourceCursorPtrType ConnectorSourceCursorArgs

func ConnectorSourceCursorPtr(v *ConnectorSourceCursorArgs) ConnectorSourceCursorPtrInput {
	return (*connectorSourceCursorPtrType)(v)
}

func (*connectorSourceCursorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSourceCursor)(nil)).Elem()
}

func (i *connectorSourceCursorPtrType) ToConnectorSourceCursorPtrOutput() ConnectorSourceCursorPtrOutput {
	return i.ToConnectorSourceCursorPtrOutputWithContext(context.Background())
}

func (i *connectorSourceCursorPtrType) ToConnectorSourceCursorPtrOutputWithContext(ctx context.Context) ConnectorSourceCursorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceCursorPtrOutput)
}

func (i *connectorSourceCursorPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectorSourceCursor] {
	return pulumix.Output[*ConnectorSourceCursor]{
		OutputState: i.ToConnectorSourceCursorPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectorSourceCursorOutput struct{ *pulumi.OutputState }

func (ConnectorSourceCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceCursor)(nil)).Elem()
}

func (o ConnectorSourceCursorOutput) ToConnectorSourceCursorOutput() ConnectorSourceCursorOutput {
	return o
}

func (o ConnectorSourceCursorOutput) ToConnectorSourceCursorOutputWithContext(ctx context.Context) ConnectorSourceCursorOutput {
	return o
}

func (o ConnectorSourceCursorOutput) ToConnectorSourceCursorPtrOutput() ConnectorSourceCursorPtrOutput {
	return o.ToConnectorSourceCursorPtrOutputWithContext(context.Background())
}

func (o ConnectorSourceCursorOutput) ToConnectorSourceCursorPtrOutputWithContext(ctx context.Context) ConnectorSourceCursorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorSourceCursor) *ConnectorSourceCursor {
		return &v
	}).(ConnectorSourceCursorPtrOutput)
}

func (o ConnectorSourceCursorOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceCursor] {
	return pulumix.Output[ConnectorSourceCursor]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The type descriminator.
func (o ConnectorSourceCursorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSourceCursor) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

type ConnectorSourceCursorPtrOutput struct{ *pulumi.OutputState }

func (ConnectorSourceCursorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSourceCursor)(nil)).Elem()
}

func (o ConnectorSourceCursorPtrOutput) ToConnectorSourceCursorPtrOutput() ConnectorSourceCursorPtrOutput {
	return o
}

func (o ConnectorSourceCursorPtrOutput) ToConnectorSourceCursorPtrOutputWithContext(ctx context.Context) ConnectorSourceCursorPtrOutput {
	return o
}

func (o ConnectorSourceCursorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectorSourceCursor] {
	return pulumix.Output[*ConnectorSourceCursor]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorSourceCursorPtrOutput) Elem() ConnectorSourceCursorOutput {
	return o.ApplyT(func(v *ConnectorSourceCursor) ConnectorSourceCursor {
		if v != nil {
			return *v
		}
		var ret ConnectorSourceCursor
		return ret
	}).(ConnectorSourceCursorOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorSourceCursorPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorSourceCursor) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

type ConnectorSourceLogSource struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId *string `pulumi:"logGroupId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
	LogId *string `pulumi:"logId"`
}

// ConnectorSourceLogSourceInput is an input type that accepts ConnectorSourceLogSourceArgs and ConnectorSourceLogSourceOutput values.
// You can construct a concrete instance of `ConnectorSourceLogSourceInput` via:
//
//	ConnectorSourceLogSourceArgs{...}
type ConnectorSourceLogSourceInput interface {
	pulumi.Input

	ToConnectorSourceLogSourceOutput() ConnectorSourceLogSourceOutput
	ToConnectorSourceLogSourceOutputWithContext(context.Context) ConnectorSourceLogSourceOutput
}

type ConnectorSourceLogSourceArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId pulumi.StringPtrInput `pulumi:"logGroupId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
	LogId pulumi.StringPtrInput `pulumi:"logId"`
}

func (ConnectorSourceLogSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceLogSource)(nil)).Elem()
}

func (i ConnectorSourceLogSourceArgs) ToConnectorSourceLogSourceOutput() ConnectorSourceLogSourceOutput {
	return i.ToConnectorSourceLogSourceOutputWithContext(context.Background())
}

func (i ConnectorSourceLogSourceArgs) ToConnectorSourceLogSourceOutputWithContext(ctx context.Context) ConnectorSourceLogSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceLogSourceOutput)
}

func (i ConnectorSourceLogSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceLogSource] {
	return pulumix.Output[ConnectorSourceLogSource]{
		OutputState: i.ToConnectorSourceLogSourceOutputWithContext(ctx).OutputState,
	}
}

// ConnectorSourceLogSourceArrayInput is an input type that accepts ConnectorSourceLogSourceArray and ConnectorSourceLogSourceArrayOutput values.
// You can construct a concrete instance of `ConnectorSourceLogSourceArrayInput` via:
//
//	ConnectorSourceLogSourceArray{ ConnectorSourceLogSourceArgs{...} }
type ConnectorSourceLogSourceArrayInput interface {
	pulumi.Input

	ToConnectorSourceLogSourceArrayOutput() ConnectorSourceLogSourceArrayOutput
	ToConnectorSourceLogSourceArrayOutputWithContext(context.Context) ConnectorSourceLogSourceArrayOutput
}

type ConnectorSourceLogSourceArray []ConnectorSourceLogSourceInput

func (ConnectorSourceLogSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorSourceLogSource)(nil)).Elem()
}

func (i ConnectorSourceLogSourceArray) ToConnectorSourceLogSourceArrayOutput() ConnectorSourceLogSourceArrayOutput {
	return i.ToConnectorSourceLogSourceArrayOutputWithContext(context.Background())
}

func (i ConnectorSourceLogSourceArray) ToConnectorSourceLogSourceArrayOutputWithContext(ctx context.Context) ConnectorSourceLogSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceLogSourceArrayOutput)
}

func (i ConnectorSourceLogSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorSourceLogSource] {
	return pulumix.Output[[]ConnectorSourceLogSource]{
		OutputState: i.ToConnectorSourceLogSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type ConnectorSourceLogSourceOutput struct{ *pulumi.OutputState }

func (ConnectorSourceLogSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceLogSource)(nil)).Elem()
}

func (o ConnectorSourceLogSourceOutput) ToConnectorSourceLogSourceOutput() ConnectorSourceLogSourceOutput {
	return o
}

func (o ConnectorSourceLogSourceOutput) ToConnectorSourceLogSourceOutputWithContext(ctx context.Context) ConnectorSourceLogSourceOutput {
	return o
}

func (o ConnectorSourceLogSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceLogSource] {
	return pulumix.Output[ConnectorSourceLogSource]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o ConnectorSourceLogSourceOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSourceLogSource) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
func (o ConnectorSourceLogSourceOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSourceLogSource) *string { return v.LogGroupId }).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
func (o ConnectorSourceLogSourceOutput) LogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSourceLogSource) *string { return v.LogId }).(pulumi.StringPtrOutput)
}

type ConnectorSourceLogSourceArrayOutput struct{ *pulumi.OutputState }

func (ConnectorSourceLogSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorSourceLogSource)(nil)).Elem()
}

func (o ConnectorSourceLogSourceArrayOutput) ToConnectorSourceLogSourceArrayOutput() ConnectorSourceLogSourceArrayOutput {
	return o
}

func (o ConnectorSourceLogSourceArrayOutput) ToConnectorSourceLogSourceArrayOutputWithContext(ctx context.Context) ConnectorSourceLogSourceArrayOutput {
	return o
}

func (o ConnectorSourceLogSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorSourceLogSource] {
	return pulumix.Output[[]ConnectorSourceLogSource]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorSourceLogSourceArrayOutput) Index(i pulumi.IntInput) ConnectorSourceLogSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorSourceLogSource {
		return vs[0].([]ConnectorSourceLogSource)[vs[1].(int)]
	}).(ConnectorSourceLogSourceOutput)
}

type ConnectorSourceMonitoringSource struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Discriminator for namespaces in the compartment-specific list.
	NamespaceDetails *ConnectorSourceMonitoringSourceNamespaceDetails `pulumi:"namespaceDetails"`
}

// ConnectorSourceMonitoringSourceInput is an input type that accepts ConnectorSourceMonitoringSourceArgs and ConnectorSourceMonitoringSourceOutput values.
// You can construct a concrete instance of `ConnectorSourceMonitoringSourceInput` via:
//
//	ConnectorSourceMonitoringSourceArgs{...}
type ConnectorSourceMonitoringSourceInput interface {
	pulumi.Input

	ToConnectorSourceMonitoringSourceOutput() ConnectorSourceMonitoringSourceOutput
	ToConnectorSourceMonitoringSourceOutputWithContext(context.Context) ConnectorSourceMonitoringSourceOutput
}

type ConnectorSourceMonitoringSourceArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Discriminator for namespaces in the compartment-specific list.
	NamespaceDetails ConnectorSourceMonitoringSourceNamespaceDetailsPtrInput `pulumi:"namespaceDetails"`
}

func (ConnectorSourceMonitoringSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSource)(nil)).Elem()
}

func (i ConnectorSourceMonitoringSourceArgs) ToConnectorSourceMonitoringSourceOutput() ConnectorSourceMonitoringSourceOutput {
	return i.ToConnectorSourceMonitoringSourceOutputWithContext(context.Background())
}

func (i ConnectorSourceMonitoringSourceArgs) ToConnectorSourceMonitoringSourceOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceOutput)
}

func (i ConnectorSourceMonitoringSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSource] {
	return pulumix.Output[ConnectorSourceMonitoringSource]{
		OutputState: i.ToConnectorSourceMonitoringSourceOutputWithContext(ctx).OutputState,
	}
}

// ConnectorSourceMonitoringSourceArrayInput is an input type that accepts ConnectorSourceMonitoringSourceArray and ConnectorSourceMonitoringSourceArrayOutput values.
// You can construct a concrete instance of `ConnectorSourceMonitoringSourceArrayInput` via:
//
//	ConnectorSourceMonitoringSourceArray{ ConnectorSourceMonitoringSourceArgs{...} }
type ConnectorSourceMonitoringSourceArrayInput interface {
	pulumi.Input

	ToConnectorSourceMonitoringSourceArrayOutput() ConnectorSourceMonitoringSourceArrayOutput
	ToConnectorSourceMonitoringSourceArrayOutputWithContext(context.Context) ConnectorSourceMonitoringSourceArrayOutput
}

type ConnectorSourceMonitoringSourceArray []ConnectorSourceMonitoringSourceInput

func (ConnectorSourceMonitoringSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorSourceMonitoringSource)(nil)).Elem()
}

func (i ConnectorSourceMonitoringSourceArray) ToConnectorSourceMonitoringSourceArrayOutput() ConnectorSourceMonitoringSourceArrayOutput {
	return i.ToConnectorSourceMonitoringSourceArrayOutputWithContext(context.Background())
}

func (i ConnectorSourceMonitoringSourceArray) ToConnectorSourceMonitoringSourceArrayOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceArrayOutput)
}

func (i ConnectorSourceMonitoringSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorSourceMonitoringSource] {
	return pulumix.Output[[]ConnectorSourceMonitoringSource]{
		OutputState: i.ToConnectorSourceMonitoringSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type ConnectorSourceMonitoringSourceOutput struct{ *pulumi.OutputState }

func (ConnectorSourceMonitoringSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSource)(nil)).Elem()
}

func (o ConnectorSourceMonitoringSourceOutput) ToConnectorSourceMonitoringSourceOutput() ConnectorSourceMonitoringSourceOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceOutput) ToConnectorSourceMonitoringSourceOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSource] {
	return pulumix.Output[ConnectorSourceMonitoringSource]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o ConnectorSourceMonitoringSourceOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSourceMonitoringSource) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Discriminator for namespaces in the compartment-specific list.
func (o ConnectorSourceMonitoringSourceOutput) NamespaceDetails() ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return o.ApplyT(func(v ConnectorSourceMonitoringSource) *ConnectorSourceMonitoringSourceNamespaceDetails {
		return v.NamespaceDetails
	}).(ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput)
}

type ConnectorSourceMonitoringSourceArrayOutput struct{ *pulumi.OutputState }

func (ConnectorSourceMonitoringSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorSourceMonitoringSource)(nil)).Elem()
}

func (o ConnectorSourceMonitoringSourceArrayOutput) ToConnectorSourceMonitoringSourceArrayOutput() ConnectorSourceMonitoringSourceArrayOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceArrayOutput) ToConnectorSourceMonitoringSourceArrayOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceArrayOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorSourceMonitoringSource] {
	return pulumix.Output[[]ConnectorSourceMonitoringSource]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorSourceMonitoringSourceArrayOutput) Index(i pulumi.IntInput) ConnectorSourceMonitoringSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorSourceMonitoringSource {
		return vs[0].([]ConnectorSourceMonitoringSource)[vs[1].(int)]
	}).(ConnectorSourceMonitoringSourceOutput)
}

type ConnectorSourceMonitoringSourceNamespaceDetails struct {
	// (Updatable) The type descriminator.
	Kind string `pulumi:"kind"`
	// (Updatable) The namespaces for the compartment-specific list.
	Namespaces []ConnectorSourceMonitoringSourceNamespaceDetailsNamespace `pulumi:"namespaces"`
}

// ConnectorSourceMonitoringSourceNamespaceDetailsInput is an input type that accepts ConnectorSourceMonitoringSourceNamespaceDetailsArgs and ConnectorSourceMonitoringSourceNamespaceDetailsOutput values.
// You can construct a concrete instance of `ConnectorSourceMonitoringSourceNamespaceDetailsInput` via:
//
//	ConnectorSourceMonitoringSourceNamespaceDetailsArgs{...}
type ConnectorSourceMonitoringSourceNamespaceDetailsInput interface {
	pulumi.Input

	ToConnectorSourceMonitoringSourceNamespaceDetailsOutput() ConnectorSourceMonitoringSourceNamespaceDetailsOutput
	ToConnectorSourceMonitoringSourceNamespaceDetailsOutputWithContext(context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsOutput
}

type ConnectorSourceMonitoringSourceNamespaceDetailsArgs struct {
	// (Updatable) The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Updatable) The namespaces for the compartment-specific list.
	Namespaces ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayInput `pulumi:"namespaces"`
}

func (ConnectorSourceMonitoringSourceNamespaceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetails)(nil)).Elem()
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsOutput() ConnectorSourceMonitoringSourceNamespaceDetailsOutput {
	return i.ToConnectorSourceMonitoringSourceNamespaceDetailsOutputWithContext(context.Background())
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceNamespaceDetailsOutput)
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetails] {
	return pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetails]{
		OutputState: i.ToConnectorSourceMonitoringSourceNamespaceDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput() ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return i.ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(context.Background())
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceNamespaceDetailsOutput).ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(ctx)
}

// ConnectorSourceMonitoringSourceNamespaceDetailsPtrInput is an input type that accepts ConnectorSourceMonitoringSourceNamespaceDetailsArgs, ConnectorSourceMonitoringSourceNamespaceDetailsPtr and ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput values.
// You can construct a concrete instance of `ConnectorSourceMonitoringSourceNamespaceDetailsPtrInput` via:
//
//	        ConnectorSourceMonitoringSourceNamespaceDetailsArgs{...}
//
//	or:
//
//	        nil
type ConnectorSourceMonitoringSourceNamespaceDetailsPtrInput interface {
	pulumi.Input

	ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput() ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput
	ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput
}

type connectorSourceMonitoringSourceNamespaceDetailsPtrType ConnectorSourceMonitoringSourceNamespaceDetailsArgs

func ConnectorSourceMonitoringSourceNamespaceDetailsPtr(v *ConnectorSourceMonitoringSourceNamespaceDetailsArgs) ConnectorSourceMonitoringSourceNamespaceDetailsPtrInput {
	return (*connectorSourceMonitoringSourceNamespaceDetailsPtrType)(v)
}

func (*connectorSourceMonitoringSourceNamespaceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSourceMonitoringSourceNamespaceDetails)(nil)).Elem()
}

func (i *connectorSourceMonitoringSourceNamespaceDetailsPtrType) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput() ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return i.ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(context.Background())
}

func (i *connectorSourceMonitoringSourceNamespaceDetailsPtrType) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput)
}

func (i *connectorSourceMonitoringSourceNamespaceDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectorSourceMonitoringSourceNamespaceDetails] {
	return pulumix.Output[*ConnectorSourceMonitoringSourceNamespaceDetails]{
		OutputState: i.ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectorSourceMonitoringSourceNamespaceDetailsOutput struct{ *pulumi.OutputState }

func (ConnectorSourceMonitoringSourceNamespaceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetails)(nil)).Elem()
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsOutput() ConnectorSourceMonitoringSourceNamespaceDetailsOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput() ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return o.ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(context.Background())
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorSourceMonitoringSourceNamespaceDetails) *ConnectorSourceMonitoringSourceNamespaceDetails {
		return &v
	}).(ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput)
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetails] {
	return pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetails]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The type descriminator.
func (o ConnectorSourceMonitoringSourceNamespaceDetailsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorSourceMonitoringSourceNamespaceDetails) string { return v.Kind }).(pulumi.StringOutput)
}

// (Updatable) The namespaces for the compartment-specific list.
func (o ConnectorSourceMonitoringSourceNamespaceDetailsOutput) Namespaces() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput {
	return o.ApplyT(func(v ConnectorSourceMonitoringSourceNamespaceDetails) []ConnectorSourceMonitoringSourceNamespaceDetailsNamespace {
		return v.Namespaces
	}).(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput)
}

type ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSourceMonitoringSourceNamespaceDetails)(nil)).Elem()
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput() ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsPtrOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectorSourceMonitoringSourceNamespaceDetails] {
	return pulumix.Output[*ConnectorSourceMonitoringSourceNamespaceDetails]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput) Elem() ConnectorSourceMonitoringSourceNamespaceDetailsOutput {
	return o.ApplyT(func(v *ConnectorSourceMonitoringSourceNamespaceDetails) ConnectorSourceMonitoringSourceNamespaceDetails {
		if v != nil {
			return *v
		}
		var ret ConnectorSourceMonitoringSourceNamespaceDetails
		return ret
	}).(ConnectorSourceMonitoringSourceNamespaceDetailsOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorSourceMonitoringSourceNamespaceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The namespaces for the compartment-specific list.
func (o ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput) Namespaces() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput {
	return o.ApplyT(func(v *ConnectorSourceMonitoringSourceNamespaceDetails) []ConnectorSourceMonitoringSourceNamespaceDetailsNamespace {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput)
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespace struct {
	// (Updatable) The metrics to query for the specified metric namespace.
	Metrics ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics `pulumi:"metrics"`
	// (Updatable) The namespace.
	Namespace string `pulumi:"namespace"`
}

// ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceInput is an input type that accepts ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs and ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput values.
// You can construct a concrete instance of `ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceInput` via:
//
//	ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs{...}
type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceInput interface {
	pulumi.Input

	ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput
	ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutputWithContext(context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs struct {
	// (Updatable) The metrics to query for the specified metric namespace.
	Metrics ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsInput `pulumi:"metrics"`
	// (Updatable) The namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsNamespace)(nil)).Elem()
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput {
	return i.ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutputWithContext(context.Background())
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput)
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespace] {
	return pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespace]{
		OutputState: i.ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutputWithContext(ctx).OutputState,
	}
}

// ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayInput is an input type that accepts ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray and ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput values.
// You can construct a concrete instance of `ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayInput` via:
//
//	ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray{ ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs{...} }
type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayInput interface {
	pulumi.Input

	ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput
	ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutputWithContext(context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray []ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceInput

func (ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorSourceMonitoringSourceNamespaceDetailsNamespace)(nil)).Elem()
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput {
	return i.ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutputWithContext(context.Background())
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput)
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorSourceMonitoringSourceNamespaceDetailsNamespace] {
	return pulumix.Output[[]ConnectorSourceMonitoringSourceNamespaceDetailsNamespace]{
		OutputState: i.ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutputWithContext(ctx).OutputState,
	}
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput struct{ *pulumi.OutputState }

func (ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsNamespace)(nil)).Elem()
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespace] {
	return pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespace]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The metrics to query for the specified metric namespace.
func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput) Metrics() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput {
	return o.ApplyT(func(v ConnectorSourceMonitoringSourceNamespaceDetailsNamespace) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics {
		return v.Metrics
	}).(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput)
}

// (Updatable) The namespace.
func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorSourceMonitoringSourceNamespaceDetailsNamespace) string { return v.Namespace }).(pulumi.StringOutput)
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput struct{ *pulumi.OutputState }

func (ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorSourceMonitoringSourceNamespaceDetailsNamespace)(nil)).Elem()
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorSourceMonitoringSourceNamespaceDetailsNamespace] {
	return pulumix.Output[[]ConnectorSourceMonitoringSourceNamespaceDetailsNamespace]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput) Index(i pulumi.IntInput) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorSourceMonitoringSourceNamespaceDetailsNamespace {
		return vs[0].([]ConnectorSourceMonitoringSourceNamespaceDetailsNamespace)[vs[1].(int)]
	}).(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput)
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics struct {
	// (Updatable) The type descriminator.
	Kind string `pulumi:"kind"`
}

// ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsInput is an input type that accepts ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs and ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput values.
// You can construct a concrete instance of `ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsInput` via:
//
//	ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs{...}
type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsInput interface {
	pulumi.Input

	ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput
	ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutputWithContext(context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs struct {
	// (Updatable) The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics)(nil)).Elem()
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput {
	return i.ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutputWithContext(context.Background())
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput)
}

func (i ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics] {
	return pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics]{
		OutputState: i.ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutputWithContext(ctx).OutputState,
	}
}

type ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput struct{ *pulumi.OutputState }

func (ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics)(nil)).Elem()
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput() ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput) ToConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutputWithContext(ctx context.Context) ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput {
	return o
}

func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics] {
	return pulumix.Output[ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The type descriminator.
func (o ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics) string { return v.Kind }).(pulumi.StringOutput)
}

type ConnectorTarget struct {
	// (Updatable) The batch rollover size in megabytes.
	BatchRolloverSizeInMbs *int `pulumi:"batchRolloverSizeInMbs"`
	// (Updatable) The batch rollover time in milliseconds.
	BatchRolloverTimeInMs *int `pulumi:"batchRolloverTimeInMs"`
	// (Updatable) The name of the bucket. Avoid entering confidential information.
	Bucket *string `pulumi:"bucket"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) List of dimension names and values.
	Dimensions []ConnectorTargetDimension `pulumi:"dimensions"`
	// (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
	EnableFormattedMessaging *bool `pulumi:"enableFormattedMessaging"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId *string `pulumi:"functionId"`
	// (Updatable) The type descriminator.
	Kind string `pulumi:"kind"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId *string `pulumi:"logGroupId"`
	// (Updatable) Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
	LogSourceIdentifier *string `pulumi:"logSourceIdentifier"`
	// (Updatable) The name of the metric.  Example: `CpuUtilization`
	Metric *string `pulumi:"metric"`
	// (Updatable) The namespace of the metric.  Example: `ociComputeagent`
	MetricNamespace *string `pulumi:"metricNamespace"`
	// (Updatable) The namespace.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) The prefix of the objects. Avoid entering confidential information.
	ObjectNamePrefix *string `pulumi:"objectNamePrefix"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId *string `pulumi:"streamId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId *string `pulumi:"topicId"`
}

// ConnectorTargetInput is an input type that accepts ConnectorTargetArgs and ConnectorTargetOutput values.
// You can construct a concrete instance of `ConnectorTargetInput` via:
//
//	ConnectorTargetArgs{...}
type ConnectorTargetInput interface {
	pulumi.Input

	ToConnectorTargetOutput() ConnectorTargetOutput
	ToConnectorTargetOutputWithContext(context.Context) ConnectorTargetOutput
}

type ConnectorTargetArgs struct {
	// (Updatable) The batch rollover size in megabytes.
	BatchRolloverSizeInMbs pulumi.IntPtrInput `pulumi:"batchRolloverSizeInMbs"`
	// (Updatable) The batch rollover time in milliseconds.
	BatchRolloverTimeInMs pulumi.IntPtrInput `pulumi:"batchRolloverTimeInMs"`
	// (Updatable) The name of the bucket. Avoid entering confidential information.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) List of dimension names and values.
	Dimensions ConnectorTargetDimensionArrayInput `pulumi:"dimensions"`
	// (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
	EnableFormattedMessaging pulumi.BoolPtrInput `pulumi:"enableFormattedMessaging"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId pulumi.StringPtrInput `pulumi:"functionId"`
	// (Updatable) The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId pulumi.StringPtrInput `pulumi:"logGroupId"`
	// (Updatable) Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
	LogSourceIdentifier pulumi.StringPtrInput `pulumi:"logSourceIdentifier"`
	// (Updatable) The name of the metric.  Example: `CpuUtilization`
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// (Updatable) The namespace of the metric.  Example: `ociComputeagent`
	MetricNamespace pulumi.StringPtrInput `pulumi:"metricNamespace"`
	// (Updatable) The namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// (Updatable) The prefix of the objects. Avoid entering confidential information.
	ObjectNamePrefix pulumi.StringPtrInput `pulumi:"objectNamePrefix"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId pulumi.StringPtrInput `pulumi:"streamId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
}

func (ConnectorTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTarget)(nil)).Elem()
}

func (i ConnectorTargetArgs) ToConnectorTargetOutput() ConnectorTargetOutput {
	return i.ToConnectorTargetOutputWithContext(context.Background())
}

func (i ConnectorTargetArgs) ToConnectorTargetOutputWithContext(ctx context.Context) ConnectorTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetOutput)
}

func (i ConnectorTargetArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorTarget] {
	return pulumix.Output[ConnectorTarget]{
		OutputState: i.ToConnectorTargetOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectorTargetArgs) ToConnectorTargetPtrOutput() ConnectorTargetPtrOutput {
	return i.ToConnectorTargetPtrOutputWithContext(context.Background())
}

func (i ConnectorTargetArgs) ToConnectorTargetPtrOutputWithContext(ctx context.Context) ConnectorTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetOutput).ToConnectorTargetPtrOutputWithContext(ctx)
}

// ConnectorTargetPtrInput is an input type that accepts ConnectorTargetArgs, ConnectorTargetPtr and ConnectorTargetPtrOutput values.
// You can construct a concrete instance of `ConnectorTargetPtrInput` via:
//
//	        ConnectorTargetArgs{...}
//
//	or:
//
//	        nil
type ConnectorTargetPtrInput interface {
	pulumi.Input

	ToConnectorTargetPtrOutput() ConnectorTargetPtrOutput
	ToConnectorTargetPtrOutputWithContext(context.Context) ConnectorTargetPtrOutput
}

type connectorTargetPtrType ConnectorTargetArgs

func ConnectorTargetPtr(v *ConnectorTargetArgs) ConnectorTargetPtrInput {
	return (*connectorTargetPtrType)(v)
}

func (*connectorTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTarget)(nil)).Elem()
}

func (i *connectorTargetPtrType) ToConnectorTargetPtrOutput() ConnectorTargetPtrOutput {
	return i.ToConnectorTargetPtrOutputWithContext(context.Background())
}

func (i *connectorTargetPtrType) ToConnectorTargetPtrOutputWithContext(ctx context.Context) ConnectorTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetPtrOutput)
}

func (i *connectorTargetPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectorTarget] {
	return pulumix.Output[*ConnectorTarget]{
		OutputState: i.ToConnectorTargetPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectorTargetOutput struct{ *pulumi.OutputState }

func (ConnectorTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTarget)(nil)).Elem()
}

func (o ConnectorTargetOutput) ToConnectorTargetOutput() ConnectorTargetOutput {
	return o
}

func (o ConnectorTargetOutput) ToConnectorTargetOutputWithContext(ctx context.Context) ConnectorTargetOutput {
	return o
}

func (o ConnectorTargetOutput) ToConnectorTargetPtrOutput() ConnectorTargetPtrOutput {
	return o.ToConnectorTargetPtrOutputWithContext(context.Background())
}

func (o ConnectorTargetOutput) ToConnectorTargetPtrOutputWithContext(ctx context.Context) ConnectorTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorTarget) *ConnectorTarget {
		return &v
	}).(ConnectorTargetPtrOutput)
}

func (o ConnectorTargetOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorTarget] {
	return pulumix.Output[ConnectorTarget]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The batch rollover size in megabytes.
func (o ConnectorTargetOutput) BatchRolloverSizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *int { return v.BatchRolloverSizeInMbs }).(pulumi.IntPtrOutput)
}

// (Updatable) The batch rollover time in milliseconds.
func (o ConnectorTargetOutput) BatchRolloverTimeInMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *int { return v.BatchRolloverTimeInMs }).(pulumi.IntPtrOutput)
}

// (Updatable) The name of the bucket. Avoid entering confidential information.
func (o ConnectorTargetOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o ConnectorTargetOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) List of dimension names and values.
func (o ConnectorTargetOutput) Dimensions() ConnectorTargetDimensionArrayOutput {
	return o.ApplyT(func(v ConnectorTarget) []ConnectorTargetDimension { return v.Dimensions }).(ConnectorTargetDimensionArrayOutput)
}

// (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
func (o ConnectorTargetOutput) EnableFormattedMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *bool { return v.EnableFormattedMessaging }).(pulumi.BoolPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
func (o ConnectorTargetOutput) FunctionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.FunctionId }).(pulumi.StringPtrOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorTargetOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorTarget) string { return v.Kind }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
func (o ConnectorTargetOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.LogGroupId }).(pulumi.StringPtrOutput)
}

// (Updatable) Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
func (o ConnectorTargetOutput) LogSourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.LogSourceIdentifier }).(pulumi.StringPtrOutput)
}

// (Updatable) The name of the metric.  Example: `CpuUtilization`
func (o ConnectorTargetOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// (Updatable) The namespace of the metric.  Example: `ociComputeagent`
func (o ConnectorTargetOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.MetricNamespace }).(pulumi.StringPtrOutput)
}

// (Updatable) The namespace.
func (o ConnectorTargetOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// (Updatable) The prefix of the objects. Avoid entering confidential information.
func (o ConnectorTargetOutput) ObjectNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.ObjectNamePrefix }).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o ConnectorTargetOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.StreamId }).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
func (o ConnectorTargetOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTarget) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

type ConnectorTargetPtrOutput struct{ *pulumi.OutputState }

func (ConnectorTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTarget)(nil)).Elem()
}

func (o ConnectorTargetPtrOutput) ToConnectorTargetPtrOutput() ConnectorTargetPtrOutput {
	return o
}

func (o ConnectorTargetPtrOutput) ToConnectorTargetPtrOutputWithContext(ctx context.Context) ConnectorTargetPtrOutput {
	return o
}

func (o ConnectorTargetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectorTarget] {
	return pulumix.Output[*ConnectorTarget]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorTargetPtrOutput) Elem() ConnectorTargetOutput {
	return o.ApplyT(func(v *ConnectorTarget) ConnectorTarget {
		if v != nil {
			return *v
		}
		var ret ConnectorTarget
		return ret
	}).(ConnectorTargetOutput)
}

// (Updatable) The batch rollover size in megabytes.
func (o ConnectorTargetPtrOutput) BatchRolloverSizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *int {
		if v == nil {
			return nil
		}
		return v.BatchRolloverSizeInMbs
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The batch rollover time in milliseconds.
func (o ConnectorTargetPtrOutput) BatchRolloverTimeInMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *int {
		if v == nil {
			return nil
		}
		return v.BatchRolloverTimeInMs
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The name of the bucket. Avoid entering confidential information.
func (o ConnectorTargetPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o ConnectorTargetPtrOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.CompartmentId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) List of dimension names and values.
func (o ConnectorTargetPtrOutput) Dimensions() ConnectorTargetDimensionArrayOutput {
	return o.ApplyT(func(v *ConnectorTarget) []ConnectorTargetDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(ConnectorTargetDimensionArrayOutput)
}

// (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
func (o ConnectorTargetPtrOutput) EnableFormattedMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFormattedMessaging
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
func (o ConnectorTargetPtrOutput) FunctionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.FunctionId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorTargetPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
func (o ConnectorTargetPtrOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
func (o ConnectorTargetPtrOutput) LogSourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.LogSourceIdentifier
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The name of the metric.  Example: `CpuUtilization`
func (o ConnectorTargetPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The namespace of the metric.  Example: `ociComputeagent`
func (o ConnectorTargetPtrOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.MetricNamespace
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The namespace.
func (o ConnectorTargetPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The prefix of the objects. Avoid entering confidential information.
func (o ConnectorTargetPtrOutput) ObjectNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.ObjectNamePrefix
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o ConnectorTargetPtrOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.StreamId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
func (o ConnectorTargetPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTarget) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

type ConnectorTargetDimension struct {
	// (Updatable) Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
	DimensionValue *ConnectorTargetDimensionDimensionValue `pulumi:"dimensionValue"`
	// (Updatable) Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name *string `pulumi:"name"`
}

// ConnectorTargetDimensionInput is an input type that accepts ConnectorTargetDimensionArgs and ConnectorTargetDimensionOutput values.
// You can construct a concrete instance of `ConnectorTargetDimensionInput` via:
//
//	ConnectorTargetDimensionArgs{...}
type ConnectorTargetDimensionInput interface {
	pulumi.Input

	ToConnectorTargetDimensionOutput() ConnectorTargetDimensionOutput
	ToConnectorTargetDimensionOutputWithContext(context.Context) ConnectorTargetDimensionOutput
}

type ConnectorTargetDimensionArgs struct {
	// (Updatable) Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
	DimensionValue ConnectorTargetDimensionDimensionValuePtrInput `pulumi:"dimensionValue"`
	// (Updatable) Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ConnectorTargetDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTargetDimension)(nil)).Elem()
}

func (i ConnectorTargetDimensionArgs) ToConnectorTargetDimensionOutput() ConnectorTargetDimensionOutput {
	return i.ToConnectorTargetDimensionOutputWithContext(context.Background())
}

func (i ConnectorTargetDimensionArgs) ToConnectorTargetDimensionOutputWithContext(ctx context.Context) ConnectorTargetDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetDimensionOutput)
}

func (i ConnectorTargetDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorTargetDimension] {
	return pulumix.Output[ConnectorTargetDimension]{
		OutputState: i.ToConnectorTargetDimensionOutputWithContext(ctx).OutputState,
	}
}

// ConnectorTargetDimensionArrayInput is an input type that accepts ConnectorTargetDimensionArray and ConnectorTargetDimensionArrayOutput values.
// You can construct a concrete instance of `ConnectorTargetDimensionArrayInput` via:
//
//	ConnectorTargetDimensionArray{ ConnectorTargetDimensionArgs{...} }
type ConnectorTargetDimensionArrayInput interface {
	pulumi.Input

	ToConnectorTargetDimensionArrayOutput() ConnectorTargetDimensionArrayOutput
	ToConnectorTargetDimensionArrayOutputWithContext(context.Context) ConnectorTargetDimensionArrayOutput
}

type ConnectorTargetDimensionArray []ConnectorTargetDimensionInput

func (ConnectorTargetDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorTargetDimension)(nil)).Elem()
}

func (i ConnectorTargetDimensionArray) ToConnectorTargetDimensionArrayOutput() ConnectorTargetDimensionArrayOutput {
	return i.ToConnectorTargetDimensionArrayOutputWithContext(context.Background())
}

func (i ConnectorTargetDimensionArray) ToConnectorTargetDimensionArrayOutputWithContext(ctx context.Context) ConnectorTargetDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetDimensionArrayOutput)
}

func (i ConnectorTargetDimensionArray) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorTargetDimension] {
	return pulumix.Output[[]ConnectorTargetDimension]{
		OutputState: i.ToConnectorTargetDimensionArrayOutputWithContext(ctx).OutputState,
	}
}

type ConnectorTargetDimensionOutput struct{ *pulumi.OutputState }

func (ConnectorTargetDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTargetDimension)(nil)).Elem()
}

func (o ConnectorTargetDimensionOutput) ToConnectorTargetDimensionOutput() ConnectorTargetDimensionOutput {
	return o
}

func (o ConnectorTargetDimensionOutput) ToConnectorTargetDimensionOutputWithContext(ctx context.Context) ConnectorTargetDimensionOutput {
	return o
}

func (o ConnectorTargetDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorTargetDimension] {
	return pulumix.Output[ConnectorTargetDimension]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
func (o ConnectorTargetDimensionOutput) DimensionValue() ConnectorTargetDimensionDimensionValuePtrOutput {
	return o.ApplyT(func(v ConnectorTargetDimension) *ConnectorTargetDimensionDimensionValue { return v.DimensionValue }).(ConnectorTargetDimensionDimensionValuePtrOutput)
}

// (Updatable) Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
func (o ConnectorTargetDimensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTargetDimension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ConnectorTargetDimensionArrayOutput struct{ *pulumi.OutputState }

func (ConnectorTargetDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorTargetDimension)(nil)).Elem()
}

func (o ConnectorTargetDimensionArrayOutput) ToConnectorTargetDimensionArrayOutput() ConnectorTargetDimensionArrayOutput {
	return o
}

func (o ConnectorTargetDimensionArrayOutput) ToConnectorTargetDimensionArrayOutputWithContext(ctx context.Context) ConnectorTargetDimensionArrayOutput {
	return o
}

func (o ConnectorTargetDimensionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorTargetDimension] {
	return pulumix.Output[[]ConnectorTargetDimension]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorTargetDimensionArrayOutput) Index(i pulumi.IntInput) ConnectorTargetDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorTargetDimension {
		return vs[0].([]ConnectorTargetDimension)[vs[1].(int)]
	}).(ConnectorTargetDimensionOutput)
}

type ConnectorTargetDimensionDimensionValue struct {
	// (Updatable) The type descriminator.
	Kind string `pulumi:"kind"`
	// (Updatable) The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
	Path *string `pulumi:"path"`
	// (Updatable) The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
	Value *string `pulumi:"value"`
}

// ConnectorTargetDimensionDimensionValueInput is an input type that accepts ConnectorTargetDimensionDimensionValueArgs and ConnectorTargetDimensionDimensionValueOutput values.
// You can construct a concrete instance of `ConnectorTargetDimensionDimensionValueInput` via:
//
//	ConnectorTargetDimensionDimensionValueArgs{...}
type ConnectorTargetDimensionDimensionValueInput interface {
	pulumi.Input

	ToConnectorTargetDimensionDimensionValueOutput() ConnectorTargetDimensionDimensionValueOutput
	ToConnectorTargetDimensionDimensionValueOutputWithContext(context.Context) ConnectorTargetDimensionDimensionValueOutput
}

type ConnectorTargetDimensionDimensionValueArgs struct {
	// (Updatable) The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Updatable) The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// (Updatable) The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConnectorTargetDimensionDimensionValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (i ConnectorTargetDimensionDimensionValueArgs) ToConnectorTargetDimensionDimensionValueOutput() ConnectorTargetDimensionDimensionValueOutput {
	return i.ToConnectorTargetDimensionDimensionValueOutputWithContext(context.Background())
}

func (i ConnectorTargetDimensionDimensionValueArgs) ToConnectorTargetDimensionDimensionValueOutputWithContext(ctx context.Context) ConnectorTargetDimensionDimensionValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetDimensionDimensionValueOutput)
}

func (i ConnectorTargetDimensionDimensionValueArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[ConnectorTargetDimensionDimensionValue]{
		OutputState: i.ToConnectorTargetDimensionDimensionValueOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectorTargetDimensionDimensionValueArgs) ToConnectorTargetDimensionDimensionValuePtrOutput() ConnectorTargetDimensionDimensionValuePtrOutput {
	return i.ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(context.Background())
}

func (i ConnectorTargetDimensionDimensionValueArgs) ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(ctx context.Context) ConnectorTargetDimensionDimensionValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetDimensionDimensionValueOutput).ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(ctx)
}

// ConnectorTargetDimensionDimensionValuePtrInput is an input type that accepts ConnectorTargetDimensionDimensionValueArgs, ConnectorTargetDimensionDimensionValuePtr and ConnectorTargetDimensionDimensionValuePtrOutput values.
// You can construct a concrete instance of `ConnectorTargetDimensionDimensionValuePtrInput` via:
//
//	        ConnectorTargetDimensionDimensionValueArgs{...}
//
//	or:
//
//	        nil
type ConnectorTargetDimensionDimensionValuePtrInput interface {
	pulumi.Input

	ToConnectorTargetDimensionDimensionValuePtrOutput() ConnectorTargetDimensionDimensionValuePtrOutput
	ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(context.Context) ConnectorTargetDimensionDimensionValuePtrOutput
}

type connectorTargetDimensionDimensionValuePtrType ConnectorTargetDimensionDimensionValueArgs

func ConnectorTargetDimensionDimensionValuePtr(v *ConnectorTargetDimensionDimensionValueArgs) ConnectorTargetDimensionDimensionValuePtrInput {
	return (*connectorTargetDimensionDimensionValuePtrType)(v)
}

func (*connectorTargetDimensionDimensionValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (i *connectorTargetDimensionDimensionValuePtrType) ToConnectorTargetDimensionDimensionValuePtrOutput() ConnectorTargetDimensionDimensionValuePtrOutput {
	return i.ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(context.Background())
}

func (i *connectorTargetDimensionDimensionValuePtrType) ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(ctx context.Context) ConnectorTargetDimensionDimensionValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTargetDimensionDimensionValuePtrOutput)
}

func (i *connectorTargetDimensionDimensionValuePtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[*ConnectorTargetDimensionDimensionValue]{
		OutputState: i.ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectorTargetDimensionDimensionValueOutput struct{ *pulumi.OutputState }

func (ConnectorTargetDimensionDimensionValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (o ConnectorTargetDimensionDimensionValueOutput) ToConnectorTargetDimensionDimensionValueOutput() ConnectorTargetDimensionDimensionValueOutput {
	return o
}

func (o ConnectorTargetDimensionDimensionValueOutput) ToConnectorTargetDimensionDimensionValueOutputWithContext(ctx context.Context) ConnectorTargetDimensionDimensionValueOutput {
	return o
}

func (o ConnectorTargetDimensionDimensionValueOutput) ToConnectorTargetDimensionDimensionValuePtrOutput() ConnectorTargetDimensionDimensionValuePtrOutput {
	return o.ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(context.Background())
}

func (o ConnectorTargetDimensionDimensionValueOutput) ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(ctx context.Context) ConnectorTargetDimensionDimensionValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorTargetDimensionDimensionValue) *ConnectorTargetDimensionDimensionValue {
		return &v
	}).(ConnectorTargetDimensionDimensionValuePtrOutput)
}

func (o ConnectorTargetDimensionDimensionValueOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[ConnectorTargetDimensionDimensionValue]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The type descriminator.
func (o ConnectorTargetDimensionDimensionValueOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorTargetDimensionDimensionValue) string { return v.Kind }).(pulumi.StringOutput)
}

// (Updatable) The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
func (o ConnectorTargetDimensionDimensionValueOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTargetDimensionDimensionValue) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// (Updatable) The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
func (o ConnectorTargetDimensionDimensionValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTargetDimensionDimensionValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectorTargetDimensionDimensionValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectorTargetDimensionDimensionValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (o ConnectorTargetDimensionDimensionValuePtrOutput) ToConnectorTargetDimensionDimensionValuePtrOutput() ConnectorTargetDimensionDimensionValuePtrOutput {
	return o
}

func (o ConnectorTargetDimensionDimensionValuePtrOutput) ToConnectorTargetDimensionDimensionValuePtrOutputWithContext(ctx context.Context) ConnectorTargetDimensionDimensionValuePtrOutput {
	return o
}

func (o ConnectorTargetDimensionDimensionValuePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[*ConnectorTargetDimensionDimensionValue]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorTargetDimensionDimensionValuePtrOutput) Elem() ConnectorTargetDimensionDimensionValueOutput {
	return o.ApplyT(func(v *ConnectorTargetDimensionDimensionValue) ConnectorTargetDimensionDimensionValue {
		if v != nil {
			return *v
		}
		var ret ConnectorTargetDimensionDimensionValue
		return ret
	}).(ConnectorTargetDimensionDimensionValueOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorTargetDimensionDimensionValuePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTargetDimensionDimensionValue) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
func (o ConnectorTargetDimensionDimensionValuePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTargetDimensionDimensionValue) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
func (o ConnectorTargetDimensionDimensionValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTargetDimensionDimensionValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ConnectorTask struct {
	// (Updatable) Size limit (kilobytes) for batch sent to invoke the function.
	BatchSizeInKbs *int `pulumi:"batchSizeInKbs"`
	// (Updatable) Time limit (seconds) for batch sent to invoke the function.
	BatchTimeInSec *int `pulumi:"batchTimeInSec"`
	// (Updatable) A filter or mask to limit the source used in the flow defined by the service connector.
	Condition *string `pulumi:"condition"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId *string `pulumi:"functionId"`
	// (Updatable) The type descriminator.
	Kind string `pulumi:"kind"`
}

// ConnectorTaskInput is an input type that accepts ConnectorTaskArgs and ConnectorTaskOutput values.
// You can construct a concrete instance of `ConnectorTaskInput` via:
//
//	ConnectorTaskArgs{...}
type ConnectorTaskInput interface {
	pulumi.Input

	ToConnectorTaskOutput() ConnectorTaskOutput
	ToConnectorTaskOutputWithContext(context.Context) ConnectorTaskOutput
}

type ConnectorTaskArgs struct {
	// (Updatable) Size limit (kilobytes) for batch sent to invoke the function.
	BatchSizeInKbs pulumi.IntPtrInput `pulumi:"batchSizeInKbs"`
	// (Updatable) Time limit (seconds) for batch sent to invoke the function.
	BatchTimeInSec pulumi.IntPtrInput `pulumi:"batchTimeInSec"`
	// (Updatable) A filter or mask to limit the source used in the flow defined by the service connector.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId pulumi.StringPtrInput `pulumi:"functionId"`
	// (Updatable) The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ConnectorTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTask)(nil)).Elem()
}

func (i ConnectorTaskArgs) ToConnectorTaskOutput() ConnectorTaskOutput {
	return i.ToConnectorTaskOutputWithContext(context.Background())
}

func (i ConnectorTaskArgs) ToConnectorTaskOutputWithContext(ctx context.Context) ConnectorTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTaskOutput)
}

func (i ConnectorTaskArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectorTask] {
	return pulumix.Output[ConnectorTask]{
		OutputState: i.ToConnectorTaskOutputWithContext(ctx).OutputState,
	}
}

// ConnectorTaskArrayInput is an input type that accepts ConnectorTaskArray and ConnectorTaskArrayOutput values.
// You can construct a concrete instance of `ConnectorTaskArrayInput` via:
//
//	ConnectorTaskArray{ ConnectorTaskArgs{...} }
type ConnectorTaskArrayInput interface {
	pulumi.Input

	ToConnectorTaskArrayOutput() ConnectorTaskArrayOutput
	ToConnectorTaskArrayOutputWithContext(context.Context) ConnectorTaskArrayOutput
}

type ConnectorTaskArray []ConnectorTaskInput

func (ConnectorTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorTask)(nil)).Elem()
}

func (i ConnectorTaskArray) ToConnectorTaskArrayOutput() ConnectorTaskArrayOutput {
	return i.ToConnectorTaskArrayOutputWithContext(context.Background())
}

func (i ConnectorTaskArray) ToConnectorTaskArrayOutputWithContext(ctx context.Context) ConnectorTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTaskArrayOutput)
}

func (i ConnectorTaskArray) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorTask] {
	return pulumix.Output[[]ConnectorTask]{
		OutputState: i.ToConnectorTaskArrayOutputWithContext(ctx).OutputState,
	}
}

type ConnectorTaskOutput struct{ *pulumi.OutputState }

func (ConnectorTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTask)(nil)).Elem()
}

func (o ConnectorTaskOutput) ToConnectorTaskOutput() ConnectorTaskOutput {
	return o
}

func (o ConnectorTaskOutput) ToConnectorTaskOutputWithContext(ctx context.Context) ConnectorTaskOutput {
	return o
}

func (o ConnectorTaskOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectorTask] {
	return pulumix.Output[ConnectorTask]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Size limit (kilobytes) for batch sent to invoke the function.
func (o ConnectorTaskOutput) BatchSizeInKbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorTask) *int { return v.BatchSizeInKbs }).(pulumi.IntPtrOutput)
}

// (Updatable) Time limit (seconds) for batch sent to invoke the function.
func (o ConnectorTaskOutput) BatchTimeInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorTask) *int { return v.BatchTimeInSec }).(pulumi.IntPtrOutput)
}

// (Updatable) A filter or mask to limit the source used in the flow defined by the service connector.
func (o ConnectorTaskOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTask) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
func (o ConnectorTaskOutput) FunctionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTask) *string { return v.FunctionId }).(pulumi.StringPtrOutput)
}

// (Updatable) The type descriminator.
func (o ConnectorTaskOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorTask) string { return v.Kind }).(pulumi.StringOutput)
}

type ConnectorTaskArrayOutput struct{ *pulumi.OutputState }

func (ConnectorTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorTask)(nil)).Elem()
}

func (o ConnectorTaskArrayOutput) ToConnectorTaskArrayOutput() ConnectorTaskArrayOutput {
	return o
}

func (o ConnectorTaskArrayOutput) ToConnectorTaskArrayOutputWithContext(ctx context.Context) ConnectorTaskArrayOutput {
	return o
}

func (o ConnectorTaskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectorTask] {
	return pulumix.Output[[]ConnectorTask]{
		OutputState: o.OutputState,
	}
}

func (o ConnectorTaskArrayOutput) Index(i pulumi.IntInput) ConnectorTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorTask {
		return vs[0].([]ConnectorTask)[vs[1].(int)]
	}).(ConnectorTaskOutput)
}

type GetServiceConnectorSource struct {
	// The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
	Cursors []GetServiceConnectorSourceCursor `pulumi:"cursors"`
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The logs for this Logging source.
	LogSources []GetServiceConnectorSourceLogSource `pulumi:"logSources"`
	// The list of metric namespaces to retrieve data from.
	MonitoringSources []GetServiceConnectorSourceMonitoringSource `pulumi:"monitoringSources"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId string `pulumi:"streamId"`
}

// GetServiceConnectorSourceInput is an input type that accepts GetServiceConnectorSourceArgs and GetServiceConnectorSourceOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceInput` via:
//
//	GetServiceConnectorSourceArgs{...}
type GetServiceConnectorSourceInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceOutput() GetServiceConnectorSourceOutput
	ToGetServiceConnectorSourceOutputWithContext(context.Context) GetServiceConnectorSourceOutput
}

type GetServiceConnectorSourceArgs struct {
	// The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
	Cursors GetServiceConnectorSourceCursorArrayInput `pulumi:"cursors"`
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The logs for this Logging source.
	LogSources GetServiceConnectorSourceLogSourceArrayInput `pulumi:"logSources"`
	// The list of metric namespaces to retrieve data from.
	MonitoringSources GetServiceConnectorSourceMonitoringSourceArrayInput `pulumi:"monitoringSources"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId pulumi.StringInput `pulumi:"streamId"`
}

func (GetServiceConnectorSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSource)(nil)).Elem()
}

func (i GetServiceConnectorSourceArgs) ToGetServiceConnectorSourceOutput() GetServiceConnectorSourceOutput {
	return i.ToGetServiceConnectorSourceOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceArgs) ToGetServiceConnectorSourceOutputWithContext(ctx context.Context) GetServiceConnectorSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceOutput)
}

func (i GetServiceConnectorSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSource] {
	return pulumix.Output[GetServiceConnectorSource]{
		OutputState: i.ToGetServiceConnectorSourceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorSourceArrayInput is an input type that accepts GetServiceConnectorSourceArray and GetServiceConnectorSourceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceArrayInput` via:
//
//	GetServiceConnectorSourceArray{ GetServiceConnectorSourceArgs{...} }
type GetServiceConnectorSourceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceArrayOutput() GetServiceConnectorSourceArrayOutput
	ToGetServiceConnectorSourceArrayOutputWithContext(context.Context) GetServiceConnectorSourceArrayOutput
}

type GetServiceConnectorSourceArray []GetServiceConnectorSourceInput

func (GetServiceConnectorSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSource)(nil)).Elem()
}

func (i GetServiceConnectorSourceArray) ToGetServiceConnectorSourceArrayOutput() GetServiceConnectorSourceArrayOutput {
	return i.ToGetServiceConnectorSourceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceArray) ToGetServiceConnectorSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceArrayOutput)
}

func (i GetServiceConnectorSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSource] {
	return pulumix.Output[[]GetServiceConnectorSource]{
		OutputState: i.ToGetServiceConnectorSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorSourceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSource)(nil)).Elem()
}

func (o GetServiceConnectorSourceOutput) ToGetServiceConnectorSourceOutput() GetServiceConnectorSourceOutput {
	return o
}

func (o GetServiceConnectorSourceOutput) ToGetServiceConnectorSourceOutputWithContext(ctx context.Context) GetServiceConnectorSourceOutput {
	return o
}

func (o GetServiceConnectorSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSource] {
	return pulumix.Output[GetServiceConnectorSource]{
		OutputState: o.OutputState,
	}
}

// The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
func (o GetServiceConnectorSourceOutput) Cursors() GetServiceConnectorSourceCursorArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorSource) []GetServiceConnectorSourceCursor { return v.Cursors }).(GetServiceConnectorSourceCursorArrayOutput)
}

// The type descriminator.
func (o GetServiceConnectorSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSource) string { return v.Kind }).(pulumi.StringOutput)
}

// The logs for this Logging source.
func (o GetServiceConnectorSourceOutput) LogSources() GetServiceConnectorSourceLogSourceArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorSource) []GetServiceConnectorSourceLogSource { return v.LogSources }).(GetServiceConnectorSourceLogSourceArrayOutput)
}

// The list of metric namespaces to retrieve data from.
func (o GetServiceConnectorSourceOutput) MonitoringSources() GetServiceConnectorSourceMonitoringSourceArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorSource) []GetServiceConnectorSourceMonitoringSource {
		return v.MonitoringSources
	}).(GetServiceConnectorSourceMonitoringSourceArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o GetServiceConnectorSourceOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSource) string { return v.StreamId }).(pulumi.StringOutput)
}

type GetServiceConnectorSourceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSource)(nil)).Elem()
}

func (o GetServiceConnectorSourceArrayOutput) ToGetServiceConnectorSourceArrayOutput() GetServiceConnectorSourceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceArrayOutput) ToGetServiceConnectorSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSource] {
	return pulumix.Output[[]GetServiceConnectorSource]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorSourceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorSource {
		return vs[0].([]GetServiceConnectorSource)[vs[1].(int)]
	}).(GetServiceConnectorSourceOutput)
}

type GetServiceConnectorSourceCursor struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
}

// GetServiceConnectorSourceCursorInput is an input type that accepts GetServiceConnectorSourceCursorArgs and GetServiceConnectorSourceCursorOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceCursorInput` via:
//
//	GetServiceConnectorSourceCursorArgs{...}
type GetServiceConnectorSourceCursorInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceCursorOutput() GetServiceConnectorSourceCursorOutput
	ToGetServiceConnectorSourceCursorOutputWithContext(context.Context) GetServiceConnectorSourceCursorOutput
}

type GetServiceConnectorSourceCursorArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (GetServiceConnectorSourceCursorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceCursor)(nil)).Elem()
}

func (i GetServiceConnectorSourceCursorArgs) ToGetServiceConnectorSourceCursorOutput() GetServiceConnectorSourceCursorOutput {
	return i.ToGetServiceConnectorSourceCursorOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceCursorArgs) ToGetServiceConnectorSourceCursorOutputWithContext(ctx context.Context) GetServiceConnectorSourceCursorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceCursorOutput)
}

func (i GetServiceConnectorSourceCursorArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceCursor] {
	return pulumix.Output[GetServiceConnectorSourceCursor]{
		OutputState: i.ToGetServiceConnectorSourceCursorOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorSourceCursorArrayInput is an input type that accepts GetServiceConnectorSourceCursorArray and GetServiceConnectorSourceCursorArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceCursorArrayInput` via:
//
//	GetServiceConnectorSourceCursorArray{ GetServiceConnectorSourceCursorArgs{...} }
type GetServiceConnectorSourceCursorArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceCursorArrayOutput() GetServiceConnectorSourceCursorArrayOutput
	ToGetServiceConnectorSourceCursorArrayOutputWithContext(context.Context) GetServiceConnectorSourceCursorArrayOutput
}

type GetServiceConnectorSourceCursorArray []GetServiceConnectorSourceCursorInput

func (GetServiceConnectorSourceCursorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceCursor)(nil)).Elem()
}

func (i GetServiceConnectorSourceCursorArray) ToGetServiceConnectorSourceCursorArrayOutput() GetServiceConnectorSourceCursorArrayOutput {
	return i.ToGetServiceConnectorSourceCursorArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceCursorArray) ToGetServiceConnectorSourceCursorArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceCursorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceCursorArrayOutput)
}

func (i GetServiceConnectorSourceCursorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceCursor] {
	return pulumix.Output[[]GetServiceConnectorSourceCursor]{
		OutputState: i.ToGetServiceConnectorSourceCursorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorSourceCursorOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceCursor)(nil)).Elem()
}

func (o GetServiceConnectorSourceCursorOutput) ToGetServiceConnectorSourceCursorOutput() GetServiceConnectorSourceCursorOutput {
	return o
}

func (o GetServiceConnectorSourceCursorOutput) ToGetServiceConnectorSourceCursorOutputWithContext(ctx context.Context) GetServiceConnectorSourceCursorOutput {
	return o
}

func (o GetServiceConnectorSourceCursorOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceCursor] {
	return pulumix.Output[GetServiceConnectorSourceCursor]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorSourceCursorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceCursor) string { return v.Kind }).(pulumi.StringOutput)
}

type GetServiceConnectorSourceCursorArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceCursor)(nil)).Elem()
}

func (o GetServiceConnectorSourceCursorArrayOutput) ToGetServiceConnectorSourceCursorArrayOutput() GetServiceConnectorSourceCursorArrayOutput {
	return o
}

func (o GetServiceConnectorSourceCursorArrayOutput) ToGetServiceConnectorSourceCursorArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceCursorArrayOutput {
	return o
}

func (o GetServiceConnectorSourceCursorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceCursor] {
	return pulumix.Output[[]GetServiceConnectorSourceCursor]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorSourceCursorArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorSourceCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorSourceCursor {
		return vs[0].([]GetServiceConnectorSourceCursor)[vs[1].(int)]
	}).(GetServiceConnectorSourceCursorOutput)
}

type GetServiceConnectorSourceLogSource struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId string `pulumi:"logGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
	LogId string `pulumi:"logId"`
}

// GetServiceConnectorSourceLogSourceInput is an input type that accepts GetServiceConnectorSourceLogSourceArgs and GetServiceConnectorSourceLogSourceOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceLogSourceInput` via:
//
//	GetServiceConnectorSourceLogSourceArgs{...}
type GetServiceConnectorSourceLogSourceInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceLogSourceOutput() GetServiceConnectorSourceLogSourceOutput
	ToGetServiceConnectorSourceLogSourceOutputWithContext(context.Context) GetServiceConnectorSourceLogSourceOutput
}

type GetServiceConnectorSourceLogSourceArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
	LogId pulumi.StringInput `pulumi:"logId"`
}

func (GetServiceConnectorSourceLogSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceLogSource)(nil)).Elem()
}

func (i GetServiceConnectorSourceLogSourceArgs) ToGetServiceConnectorSourceLogSourceOutput() GetServiceConnectorSourceLogSourceOutput {
	return i.ToGetServiceConnectorSourceLogSourceOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceLogSourceArgs) ToGetServiceConnectorSourceLogSourceOutputWithContext(ctx context.Context) GetServiceConnectorSourceLogSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceLogSourceOutput)
}

func (i GetServiceConnectorSourceLogSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceLogSource] {
	return pulumix.Output[GetServiceConnectorSourceLogSource]{
		OutputState: i.ToGetServiceConnectorSourceLogSourceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorSourceLogSourceArrayInput is an input type that accepts GetServiceConnectorSourceLogSourceArray and GetServiceConnectorSourceLogSourceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceLogSourceArrayInput` via:
//
//	GetServiceConnectorSourceLogSourceArray{ GetServiceConnectorSourceLogSourceArgs{...} }
type GetServiceConnectorSourceLogSourceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceLogSourceArrayOutput() GetServiceConnectorSourceLogSourceArrayOutput
	ToGetServiceConnectorSourceLogSourceArrayOutputWithContext(context.Context) GetServiceConnectorSourceLogSourceArrayOutput
}

type GetServiceConnectorSourceLogSourceArray []GetServiceConnectorSourceLogSourceInput

func (GetServiceConnectorSourceLogSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceLogSource)(nil)).Elem()
}

func (i GetServiceConnectorSourceLogSourceArray) ToGetServiceConnectorSourceLogSourceArrayOutput() GetServiceConnectorSourceLogSourceArrayOutput {
	return i.ToGetServiceConnectorSourceLogSourceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceLogSourceArray) ToGetServiceConnectorSourceLogSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceLogSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceLogSourceArrayOutput)
}

func (i GetServiceConnectorSourceLogSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceLogSource] {
	return pulumix.Output[[]GetServiceConnectorSourceLogSource]{
		OutputState: i.ToGetServiceConnectorSourceLogSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorSourceLogSourceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceLogSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceLogSource)(nil)).Elem()
}

func (o GetServiceConnectorSourceLogSourceOutput) ToGetServiceConnectorSourceLogSourceOutput() GetServiceConnectorSourceLogSourceOutput {
	return o
}

func (o GetServiceConnectorSourceLogSourceOutput) ToGetServiceConnectorSourceLogSourceOutputWithContext(ctx context.Context) GetServiceConnectorSourceLogSourceOutput {
	return o
}

func (o GetServiceConnectorSourceLogSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceLogSource] {
	return pulumix.Output[GetServiceConnectorSourceLogSource]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o GetServiceConnectorSourceLogSourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceLogSource) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
func (o GetServiceConnectorSourceLogSourceOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceLogSource) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
func (o GetServiceConnectorSourceLogSourceOutput) LogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceLogSource) string { return v.LogId }).(pulumi.StringOutput)
}

type GetServiceConnectorSourceLogSourceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceLogSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceLogSource)(nil)).Elem()
}

func (o GetServiceConnectorSourceLogSourceArrayOutput) ToGetServiceConnectorSourceLogSourceArrayOutput() GetServiceConnectorSourceLogSourceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceLogSourceArrayOutput) ToGetServiceConnectorSourceLogSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceLogSourceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceLogSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceLogSource] {
	return pulumix.Output[[]GetServiceConnectorSourceLogSource]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorSourceLogSourceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorSourceLogSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorSourceLogSource {
		return vs[0].([]GetServiceConnectorSourceLogSource)[vs[1].(int)]
	}).(GetServiceConnectorSourceLogSourceOutput)
}

type GetServiceConnectorSourceMonitoringSource struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId string `pulumi:"compartmentId"`
	// Discriminator for namespaces in the compartment-specific list.
	NamespaceDetails []GetServiceConnectorSourceMonitoringSourceNamespaceDetail `pulumi:"namespaceDetails"`
}

// GetServiceConnectorSourceMonitoringSourceInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceArgs and GetServiceConnectorSourceMonitoringSourceOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceArgs{...}
type GetServiceConnectorSourceMonitoringSourceInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceOutput() GetServiceConnectorSourceMonitoringSourceOutput
	ToGetServiceConnectorSourceMonitoringSourceOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceOutput
}

type GetServiceConnectorSourceMonitoringSourceArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Discriminator for namespaces in the compartment-specific list.
	NamespaceDetails GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayInput `pulumi:"namespaceDetails"`
}

func (GetServiceConnectorSourceMonitoringSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSource)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceArgs) ToGetServiceConnectorSourceMonitoringSourceOutput() GetServiceConnectorSourceMonitoringSourceOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceArgs) ToGetServiceConnectorSourceMonitoringSourceOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSource] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSource]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorSourceMonitoringSourceArrayInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceArray and GetServiceConnectorSourceMonitoringSourceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceArrayInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceArray{ GetServiceConnectorSourceMonitoringSourceArgs{...} }
type GetServiceConnectorSourceMonitoringSourceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceArrayOutput() GetServiceConnectorSourceMonitoringSourceArrayOutput
	ToGetServiceConnectorSourceMonitoringSourceArrayOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceArrayOutput
}

type GetServiceConnectorSourceMonitoringSourceArray []GetServiceConnectorSourceMonitoringSourceInput

func (GetServiceConnectorSourceMonitoringSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSource)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceArray) ToGetServiceConnectorSourceMonitoringSourceArrayOutput() GetServiceConnectorSourceMonitoringSourceArrayOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceArray) ToGetServiceConnectorSourceMonitoringSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceArrayOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSource] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSource]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorSourceMonitoringSourceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSource)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceOutput) ToGetServiceConnectorSourceMonitoringSourceOutput() GetServiceConnectorSourceMonitoringSourceOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceOutput) ToGetServiceConnectorSourceMonitoringSourceOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSource] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSource]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o GetServiceConnectorSourceMonitoringSourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceMonitoringSource) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Discriminator for namespaces in the compartment-specific list.
func (o GetServiceConnectorSourceMonitoringSourceOutput) NamespaceDetails() GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceMonitoringSource) []GetServiceConnectorSourceMonitoringSourceNamespaceDetail {
		return v.NamespaceDetails
	}).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput)
}

type GetServiceConnectorSourceMonitoringSourceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSource)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceArrayOutput) ToGetServiceConnectorSourceMonitoringSourceArrayOutput() GetServiceConnectorSourceMonitoringSourceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceArrayOutput) ToGetServiceConnectorSourceMonitoringSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSource] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSource]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorSourceMonitoringSourceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorSourceMonitoringSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorSourceMonitoringSource {
		return vs[0].([]GetServiceConnectorSourceMonitoringSource)[vs[1].(int)]
	}).(GetServiceConnectorSourceMonitoringSourceOutput)
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetail struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The namespaces for the compartment-specific list.
	Namespaces []GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace `pulumi:"namespaces"`
}

// GetServiceConnectorSourceMonitoringSourceNamespaceDetailInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs and GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceNamespaceDetailInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs{...}
type GetServiceConnectorSourceMonitoringSourceNamespaceDetailInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput
	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The namespaces for the compartment-specific list.
	Namespaces GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayInput `pulumi:"namespaces"`
}

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetail]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray and GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray{ GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs{...} }
type GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput
	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray []GetServiceConnectorSourceMonitoringSourceNamespaceDetailInput

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetail]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetail]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceMonitoringSourceNamespaceDetail) string { return v.Kind }).(pulumi.StringOutput)
}

// The namespaces for the compartment-specific list.
func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput) Namespaces() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceMonitoringSourceNamespaceDetail) []GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace {
		return v.Namespaces
	}).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput)
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorSourceMonitoringSourceNamespaceDetail {
		return vs[0].([]GetServiceConnectorSourceMonitoringSourceNamespaceDetail)[vs[1].(int)]
	}).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput)
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace struct {
	// The metrics to query for the specified metric namespace.
	Metrics []GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric `pulumi:"metrics"`
	// The namespace.
	Namespace string `pulumi:"namespace"`
}

// GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs and GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs{...}
type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput
	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs struct {
	// The metrics to query for the specified metric namespace.
	Metrics GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput `pulumi:"metrics"`
	// The namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray and GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray{ GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs{...} }
type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput
	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray []GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceInput

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: o.OutputState,
	}
}

// The metrics to query for the specified metric namespace.
func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput) Metrics() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace) []GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric {
		return v.Metrics
	}).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput)
}

// The namespace.
func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace) string { return v.Namespace }).(pulumi.StringOutput)
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace {
		return vs[0].([]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespace)[vs[1].(int)]
	}).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput)
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
}

// GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs and GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs{...}
type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput
	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput is an input type that accepts GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray and GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput` via:
//
//	GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray{ GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs{...} }
type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput
	ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray []GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricInput

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput)
}

func (i GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: i.ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric) string { return v.Kind }).(pulumi.StringOutput)
}

type GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput() GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ToGetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(ctx context.Context) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return o
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[[]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric {
		return vs[0].([]GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetric)[vs[1].(int)]
	}).(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput)
}

type GetServiceConnectorTarget struct {
	// The batch rollover size in megabytes.
	BatchRolloverSizeInMbs int `pulumi:"batchRolloverSizeInMbs"`
	// The batch rollover time in milliseconds.
	BatchRolloverTimeInMs int `pulumi:"batchRolloverTimeInMs"`
	// The name of the bucket. Avoid entering confidential information.
	Bucket string `pulumi:"bucket"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId string `pulumi:"compartmentId"`
	// List of dimension names and values.
	Dimensions []GetServiceConnectorTargetDimension `pulumi:"dimensions"`
	// Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
	EnableFormattedMessaging bool `pulumi:"enableFormattedMessaging"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId string `pulumi:"functionId"`
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId string `pulumi:"logGroupId"`
	// Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
	LogSourceIdentifier string `pulumi:"logSourceIdentifier"`
	// The name of the metric.  Example: `CpuUtilization`
	Metric string `pulumi:"metric"`
	// The namespace of the metric.  Example: `ociComputeagent`
	MetricNamespace string `pulumi:"metricNamespace"`
	// The namespace.
	Namespace string `pulumi:"namespace"`
	// The prefix of the objects. Avoid entering confidential information.
	ObjectNamePrefix string `pulumi:"objectNamePrefix"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId string `pulumi:"streamId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId string `pulumi:"topicId"`
}

// GetServiceConnectorTargetInput is an input type that accepts GetServiceConnectorTargetArgs and GetServiceConnectorTargetOutput values.
// You can construct a concrete instance of `GetServiceConnectorTargetInput` via:
//
//	GetServiceConnectorTargetArgs{...}
type GetServiceConnectorTargetInput interface {
	pulumi.Input

	ToGetServiceConnectorTargetOutput() GetServiceConnectorTargetOutput
	ToGetServiceConnectorTargetOutputWithContext(context.Context) GetServiceConnectorTargetOutput
}

type GetServiceConnectorTargetArgs struct {
	// The batch rollover size in megabytes.
	BatchRolloverSizeInMbs pulumi.IntInput `pulumi:"batchRolloverSizeInMbs"`
	// The batch rollover time in milliseconds.
	BatchRolloverTimeInMs pulumi.IntInput `pulumi:"batchRolloverTimeInMs"`
	// The name of the bucket. Avoid entering confidential information.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// List of dimension names and values.
	Dimensions GetServiceConnectorTargetDimensionArrayInput `pulumi:"dimensions"`
	// Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
	EnableFormattedMessaging pulumi.BoolInput `pulumi:"enableFormattedMessaging"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
	LogSourceIdentifier pulumi.StringInput `pulumi:"logSourceIdentifier"`
	// The name of the metric.  Example: `CpuUtilization`
	Metric pulumi.StringInput `pulumi:"metric"`
	// The namespace of the metric.  Example: `ociComputeagent`
	MetricNamespace pulumi.StringInput `pulumi:"metricNamespace"`
	// The namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The prefix of the objects. Avoid entering confidential information.
	ObjectNamePrefix pulumi.StringInput `pulumi:"objectNamePrefix"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId pulumi.StringInput `pulumi:"streamId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetServiceConnectorTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTarget)(nil)).Elem()
}

func (i GetServiceConnectorTargetArgs) ToGetServiceConnectorTargetOutput() GetServiceConnectorTargetOutput {
	return i.ToGetServiceConnectorTargetOutputWithContext(context.Background())
}

func (i GetServiceConnectorTargetArgs) ToGetServiceConnectorTargetOutputWithContext(ctx context.Context) GetServiceConnectorTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTargetOutput)
}

func (i GetServiceConnectorTargetArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTarget] {
	return pulumix.Output[GetServiceConnectorTarget]{
		OutputState: i.ToGetServiceConnectorTargetOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorTargetArrayInput is an input type that accepts GetServiceConnectorTargetArray and GetServiceConnectorTargetArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorTargetArrayInput` via:
//
//	GetServiceConnectorTargetArray{ GetServiceConnectorTargetArgs{...} }
type GetServiceConnectorTargetArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorTargetArrayOutput() GetServiceConnectorTargetArrayOutput
	ToGetServiceConnectorTargetArrayOutputWithContext(context.Context) GetServiceConnectorTargetArrayOutput
}

type GetServiceConnectorTargetArray []GetServiceConnectorTargetInput

func (GetServiceConnectorTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTarget)(nil)).Elem()
}

func (i GetServiceConnectorTargetArray) ToGetServiceConnectorTargetArrayOutput() GetServiceConnectorTargetArrayOutput {
	return i.ToGetServiceConnectorTargetArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorTargetArray) ToGetServiceConnectorTargetArrayOutputWithContext(ctx context.Context) GetServiceConnectorTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTargetArrayOutput)
}

func (i GetServiceConnectorTargetArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTarget] {
	return pulumix.Output[[]GetServiceConnectorTarget]{
		OutputState: i.ToGetServiceConnectorTargetArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorTargetOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTarget)(nil)).Elem()
}

func (o GetServiceConnectorTargetOutput) ToGetServiceConnectorTargetOutput() GetServiceConnectorTargetOutput {
	return o
}

func (o GetServiceConnectorTargetOutput) ToGetServiceConnectorTargetOutputWithContext(ctx context.Context) GetServiceConnectorTargetOutput {
	return o
}

func (o GetServiceConnectorTargetOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTarget] {
	return pulumix.Output[GetServiceConnectorTarget]{
		OutputState: o.OutputState,
	}
}

// The batch rollover size in megabytes.
func (o GetServiceConnectorTargetOutput) BatchRolloverSizeInMbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) int { return v.BatchRolloverSizeInMbs }).(pulumi.IntOutput)
}

// The batch rollover time in milliseconds.
func (o GetServiceConnectorTargetOutput) BatchRolloverTimeInMs() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) int { return v.BatchRolloverTimeInMs }).(pulumi.IntOutput)
}

// The name of the bucket. Avoid entering confidential information.
func (o GetServiceConnectorTargetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.Bucket }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
func (o GetServiceConnectorTargetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// List of dimension names and values.
func (o GetServiceConnectorTargetOutput) Dimensions() GetServiceConnectorTargetDimensionArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) []GetServiceConnectorTargetDimension { return v.Dimensions }).(GetServiceConnectorTargetDimensionArrayOutput)
}

// Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
func (o GetServiceConnectorTargetOutput) EnableFormattedMessaging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) bool { return v.EnableFormattedMessaging }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
func (o GetServiceConnectorTargetOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The type descriminator.
func (o GetServiceConnectorTargetOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.Kind }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
func (o GetServiceConnectorTargetOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
func (o GetServiceConnectorTargetOutput) LogSourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.LogSourceIdentifier }).(pulumi.StringOutput)
}

// The name of the metric.  Example: `CpuUtilization`
func (o GetServiceConnectorTargetOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.Metric }).(pulumi.StringOutput)
}

// The namespace of the metric.  Example: `ociComputeagent`
func (o GetServiceConnectorTargetOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

// The namespace.
func (o GetServiceConnectorTargetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.Namespace }).(pulumi.StringOutput)
}

// The prefix of the objects. Avoid entering confidential information.
func (o GetServiceConnectorTargetOutput) ObjectNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.ObjectNamePrefix }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o GetServiceConnectorTargetOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.StreamId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
func (o GetServiceConnectorTargetOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTarget) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetServiceConnectorTargetArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTarget)(nil)).Elem()
}

func (o GetServiceConnectorTargetArrayOutput) ToGetServiceConnectorTargetArrayOutput() GetServiceConnectorTargetArrayOutput {
	return o
}

func (o GetServiceConnectorTargetArrayOutput) ToGetServiceConnectorTargetArrayOutputWithContext(ctx context.Context) GetServiceConnectorTargetArrayOutput {
	return o
}

func (o GetServiceConnectorTargetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTarget] {
	return pulumix.Output[[]GetServiceConnectorTarget]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorTargetArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorTarget {
		return vs[0].([]GetServiceConnectorTarget)[vs[1].(int)]
	}).(GetServiceConnectorTargetOutput)
}

type GetServiceConnectorTargetDimension struct {
	// Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
	DimensionValues []GetServiceConnectorTargetDimensionDimensionValue `pulumi:"dimensionValues"`
	// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name string `pulumi:"name"`
}

// GetServiceConnectorTargetDimensionInput is an input type that accepts GetServiceConnectorTargetDimensionArgs and GetServiceConnectorTargetDimensionOutput values.
// You can construct a concrete instance of `GetServiceConnectorTargetDimensionInput` via:
//
//	GetServiceConnectorTargetDimensionArgs{...}
type GetServiceConnectorTargetDimensionInput interface {
	pulumi.Input

	ToGetServiceConnectorTargetDimensionOutput() GetServiceConnectorTargetDimensionOutput
	ToGetServiceConnectorTargetDimensionOutputWithContext(context.Context) GetServiceConnectorTargetDimensionOutput
}

type GetServiceConnectorTargetDimensionArgs struct {
	// Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
	DimensionValues GetServiceConnectorTargetDimensionDimensionValueArrayInput `pulumi:"dimensionValues"`
	// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetServiceConnectorTargetDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTargetDimension)(nil)).Elem()
}

func (i GetServiceConnectorTargetDimensionArgs) ToGetServiceConnectorTargetDimensionOutput() GetServiceConnectorTargetDimensionOutput {
	return i.ToGetServiceConnectorTargetDimensionOutputWithContext(context.Background())
}

func (i GetServiceConnectorTargetDimensionArgs) ToGetServiceConnectorTargetDimensionOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTargetDimensionOutput)
}

func (i GetServiceConnectorTargetDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTargetDimension] {
	return pulumix.Output[GetServiceConnectorTargetDimension]{
		OutputState: i.ToGetServiceConnectorTargetDimensionOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorTargetDimensionArrayInput is an input type that accepts GetServiceConnectorTargetDimensionArray and GetServiceConnectorTargetDimensionArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorTargetDimensionArrayInput` via:
//
//	GetServiceConnectorTargetDimensionArray{ GetServiceConnectorTargetDimensionArgs{...} }
type GetServiceConnectorTargetDimensionArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorTargetDimensionArrayOutput() GetServiceConnectorTargetDimensionArrayOutput
	ToGetServiceConnectorTargetDimensionArrayOutputWithContext(context.Context) GetServiceConnectorTargetDimensionArrayOutput
}

type GetServiceConnectorTargetDimensionArray []GetServiceConnectorTargetDimensionInput

func (GetServiceConnectorTargetDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTargetDimension)(nil)).Elem()
}

func (i GetServiceConnectorTargetDimensionArray) ToGetServiceConnectorTargetDimensionArrayOutput() GetServiceConnectorTargetDimensionArrayOutput {
	return i.ToGetServiceConnectorTargetDimensionArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorTargetDimensionArray) ToGetServiceConnectorTargetDimensionArrayOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTargetDimensionArrayOutput)
}

func (i GetServiceConnectorTargetDimensionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTargetDimension] {
	return pulumix.Output[[]GetServiceConnectorTargetDimension]{
		OutputState: i.ToGetServiceConnectorTargetDimensionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorTargetDimensionOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTargetDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTargetDimension)(nil)).Elem()
}

func (o GetServiceConnectorTargetDimensionOutput) ToGetServiceConnectorTargetDimensionOutput() GetServiceConnectorTargetDimensionOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionOutput) ToGetServiceConnectorTargetDimensionOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTargetDimension] {
	return pulumix.Output[GetServiceConnectorTargetDimension]{
		OutputState: o.OutputState,
	}
}

// Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
func (o GetServiceConnectorTargetDimensionOutput) DimensionValues() GetServiceConnectorTargetDimensionDimensionValueArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorTargetDimension) []GetServiceConnectorTargetDimensionDimensionValue {
		return v.DimensionValues
	}).(GetServiceConnectorTargetDimensionDimensionValueArrayOutput)
}

// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
func (o GetServiceConnectorTargetDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTargetDimension) string { return v.Name }).(pulumi.StringOutput)
}

type GetServiceConnectorTargetDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTargetDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTargetDimension)(nil)).Elem()
}

func (o GetServiceConnectorTargetDimensionArrayOutput) ToGetServiceConnectorTargetDimensionArrayOutput() GetServiceConnectorTargetDimensionArrayOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionArrayOutput) ToGetServiceConnectorTargetDimensionArrayOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionArrayOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTargetDimension] {
	return pulumix.Output[[]GetServiceConnectorTargetDimension]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorTargetDimensionArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorTargetDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorTargetDimension {
		return vs[0].([]GetServiceConnectorTargetDimension)[vs[1].(int)]
	}).(GetServiceConnectorTargetDimensionOutput)
}

type GetServiceConnectorTargetDimensionDimensionValue struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
	Path string `pulumi:"path"`
	// The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
	Value string `pulumi:"value"`
}

// GetServiceConnectorTargetDimensionDimensionValueInput is an input type that accepts GetServiceConnectorTargetDimensionDimensionValueArgs and GetServiceConnectorTargetDimensionDimensionValueOutput values.
// You can construct a concrete instance of `GetServiceConnectorTargetDimensionDimensionValueInput` via:
//
//	GetServiceConnectorTargetDimensionDimensionValueArgs{...}
type GetServiceConnectorTargetDimensionDimensionValueInput interface {
	pulumi.Input

	ToGetServiceConnectorTargetDimensionDimensionValueOutput() GetServiceConnectorTargetDimensionDimensionValueOutput
	ToGetServiceConnectorTargetDimensionDimensionValueOutputWithContext(context.Context) GetServiceConnectorTargetDimensionDimensionValueOutput
}

type GetServiceConnectorTargetDimensionDimensionValueArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
	Path pulumi.StringInput `pulumi:"path"`
	// The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServiceConnectorTargetDimensionDimensionValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (i GetServiceConnectorTargetDimensionDimensionValueArgs) ToGetServiceConnectorTargetDimensionDimensionValueOutput() GetServiceConnectorTargetDimensionDimensionValueOutput {
	return i.ToGetServiceConnectorTargetDimensionDimensionValueOutputWithContext(context.Background())
}

func (i GetServiceConnectorTargetDimensionDimensionValueArgs) ToGetServiceConnectorTargetDimensionDimensionValueOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionDimensionValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTargetDimensionDimensionValueOutput)
}

func (i GetServiceConnectorTargetDimensionDimensionValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[GetServiceConnectorTargetDimensionDimensionValue]{
		OutputState: i.ToGetServiceConnectorTargetDimensionDimensionValueOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorTargetDimensionDimensionValueArrayInput is an input type that accepts GetServiceConnectorTargetDimensionDimensionValueArray and GetServiceConnectorTargetDimensionDimensionValueArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorTargetDimensionDimensionValueArrayInput` via:
//
//	GetServiceConnectorTargetDimensionDimensionValueArray{ GetServiceConnectorTargetDimensionDimensionValueArgs{...} }
type GetServiceConnectorTargetDimensionDimensionValueArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorTargetDimensionDimensionValueArrayOutput() GetServiceConnectorTargetDimensionDimensionValueArrayOutput
	ToGetServiceConnectorTargetDimensionDimensionValueArrayOutputWithContext(context.Context) GetServiceConnectorTargetDimensionDimensionValueArrayOutput
}

type GetServiceConnectorTargetDimensionDimensionValueArray []GetServiceConnectorTargetDimensionDimensionValueInput

func (GetServiceConnectorTargetDimensionDimensionValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (i GetServiceConnectorTargetDimensionDimensionValueArray) ToGetServiceConnectorTargetDimensionDimensionValueArrayOutput() GetServiceConnectorTargetDimensionDimensionValueArrayOutput {
	return i.ToGetServiceConnectorTargetDimensionDimensionValueArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorTargetDimensionDimensionValueArray) ToGetServiceConnectorTargetDimensionDimensionValueArrayOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionDimensionValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTargetDimensionDimensionValueArrayOutput)
}

func (i GetServiceConnectorTargetDimensionDimensionValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[[]GetServiceConnectorTargetDimensionDimensionValue]{
		OutputState: i.ToGetServiceConnectorTargetDimensionDimensionValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorTargetDimensionDimensionValueOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTargetDimensionDimensionValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (o GetServiceConnectorTargetDimensionDimensionValueOutput) ToGetServiceConnectorTargetDimensionDimensionValueOutput() GetServiceConnectorTargetDimensionDimensionValueOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionDimensionValueOutput) ToGetServiceConnectorTargetDimensionDimensionValueOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionDimensionValueOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionDimensionValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[GetServiceConnectorTargetDimensionDimensionValue]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorTargetDimensionDimensionValueOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTargetDimensionDimensionValue) string { return v.Kind }).(pulumi.StringOutput)
}

// The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
func (o GetServiceConnectorTargetDimensionDimensionValueOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTargetDimensionDimensionValue) string { return v.Path }).(pulumi.StringOutput)
}

// The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
func (o GetServiceConnectorTargetDimensionDimensionValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTargetDimensionDimensionValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetServiceConnectorTargetDimensionDimensionValueArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTargetDimensionDimensionValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTargetDimensionDimensionValue)(nil)).Elem()
}

func (o GetServiceConnectorTargetDimensionDimensionValueArrayOutput) ToGetServiceConnectorTargetDimensionDimensionValueArrayOutput() GetServiceConnectorTargetDimensionDimensionValueArrayOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionDimensionValueArrayOutput) ToGetServiceConnectorTargetDimensionDimensionValueArrayOutputWithContext(ctx context.Context) GetServiceConnectorTargetDimensionDimensionValueArrayOutput {
	return o
}

func (o GetServiceConnectorTargetDimensionDimensionValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTargetDimensionDimensionValue] {
	return pulumix.Output[[]GetServiceConnectorTargetDimensionDimensionValue]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorTargetDimensionDimensionValueArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorTargetDimensionDimensionValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorTargetDimensionDimensionValue {
		return vs[0].([]GetServiceConnectorTargetDimensionDimensionValue)[vs[1].(int)]
	}).(GetServiceConnectorTargetDimensionDimensionValueOutput)
}

type GetServiceConnectorTask struct {
	// Size limit (kilobytes) for batch sent to invoke the function.
	BatchSizeInKbs int `pulumi:"batchSizeInKbs"`
	// Time limit (seconds) for batch sent to invoke the function.
	BatchTimeInSec int `pulumi:"batchTimeInSec"`
	// A filter or mask to limit the source used in the flow defined by the service connector.
	Condition string `pulumi:"condition"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId string `pulumi:"functionId"`
	// The type descriminator.
	Kind string `pulumi:"kind"`
}

// GetServiceConnectorTaskInput is an input type that accepts GetServiceConnectorTaskArgs and GetServiceConnectorTaskOutput values.
// You can construct a concrete instance of `GetServiceConnectorTaskInput` via:
//
//	GetServiceConnectorTaskArgs{...}
type GetServiceConnectorTaskInput interface {
	pulumi.Input

	ToGetServiceConnectorTaskOutput() GetServiceConnectorTaskOutput
	ToGetServiceConnectorTaskOutputWithContext(context.Context) GetServiceConnectorTaskOutput
}

type GetServiceConnectorTaskArgs struct {
	// Size limit (kilobytes) for batch sent to invoke the function.
	BatchSizeInKbs pulumi.IntInput `pulumi:"batchSizeInKbs"`
	// Time limit (seconds) for batch sent to invoke the function.
	BatchTimeInSec pulumi.IntInput `pulumi:"batchTimeInSec"`
	// A filter or mask to limit the source used in the flow defined by the service connector.
	Condition pulumi.StringInput `pulumi:"condition"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (GetServiceConnectorTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTask)(nil)).Elem()
}

func (i GetServiceConnectorTaskArgs) ToGetServiceConnectorTaskOutput() GetServiceConnectorTaskOutput {
	return i.ToGetServiceConnectorTaskOutputWithContext(context.Background())
}

func (i GetServiceConnectorTaskArgs) ToGetServiceConnectorTaskOutputWithContext(ctx context.Context) GetServiceConnectorTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTaskOutput)
}

func (i GetServiceConnectorTaskArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTask] {
	return pulumix.Output[GetServiceConnectorTask]{
		OutputState: i.ToGetServiceConnectorTaskOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorTaskArrayInput is an input type that accepts GetServiceConnectorTaskArray and GetServiceConnectorTaskArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorTaskArrayInput` via:
//
//	GetServiceConnectorTaskArray{ GetServiceConnectorTaskArgs{...} }
type GetServiceConnectorTaskArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorTaskArrayOutput() GetServiceConnectorTaskArrayOutput
	ToGetServiceConnectorTaskArrayOutputWithContext(context.Context) GetServiceConnectorTaskArrayOutput
}

type GetServiceConnectorTaskArray []GetServiceConnectorTaskInput

func (GetServiceConnectorTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTask)(nil)).Elem()
}

func (i GetServiceConnectorTaskArray) ToGetServiceConnectorTaskArrayOutput() GetServiceConnectorTaskArrayOutput {
	return i.ToGetServiceConnectorTaskArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorTaskArray) ToGetServiceConnectorTaskArrayOutputWithContext(ctx context.Context) GetServiceConnectorTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorTaskArrayOutput)
}

func (i GetServiceConnectorTaskArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTask] {
	return pulumix.Output[[]GetServiceConnectorTask]{
		OutputState: i.ToGetServiceConnectorTaskArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorTaskOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorTask)(nil)).Elem()
}

func (o GetServiceConnectorTaskOutput) ToGetServiceConnectorTaskOutput() GetServiceConnectorTaskOutput {
	return o
}

func (o GetServiceConnectorTaskOutput) ToGetServiceConnectorTaskOutputWithContext(ctx context.Context) GetServiceConnectorTaskOutput {
	return o
}

func (o GetServiceConnectorTaskOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorTask] {
	return pulumix.Output[GetServiceConnectorTask]{
		OutputState: o.OutputState,
	}
}

// Size limit (kilobytes) for batch sent to invoke the function.
func (o GetServiceConnectorTaskOutput) BatchSizeInKbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorTask) int { return v.BatchSizeInKbs }).(pulumi.IntOutput)
}

// Time limit (seconds) for batch sent to invoke the function.
func (o GetServiceConnectorTaskOutput) BatchTimeInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorTask) int { return v.BatchTimeInSec }).(pulumi.IntOutput)
}

// A filter or mask to limit the source used in the flow defined by the service connector.
func (o GetServiceConnectorTaskOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTask) string { return v.Condition }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
func (o GetServiceConnectorTaskOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTask) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The type descriminator.
func (o GetServiceConnectorTaskOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorTask) string { return v.Kind }).(pulumi.StringOutput)
}

type GetServiceConnectorTaskArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorTask)(nil)).Elem()
}

func (o GetServiceConnectorTaskArrayOutput) ToGetServiceConnectorTaskArrayOutput() GetServiceConnectorTaskArrayOutput {
	return o
}

func (o GetServiceConnectorTaskArrayOutput) ToGetServiceConnectorTaskArrayOutputWithContext(ctx context.Context) GetServiceConnectorTaskArrayOutput {
	return o
}

func (o GetServiceConnectorTaskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorTask] {
	return pulumix.Output[[]GetServiceConnectorTask]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorTaskArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorTask {
		return vs[0].([]GetServiceConnectorTask)[vs[1].(int)]
	}).(GetServiceConnectorTaskOutput)
}

type GetServiceConnectorsFilter struct {
	// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetServiceConnectorsFilterInput is an input type that accepts GetServiceConnectorsFilterArgs and GetServiceConnectorsFilterOutput values.
// You can construct a concrete instance of `GetServiceConnectorsFilterInput` via:
//
//	GetServiceConnectorsFilterArgs{...}
type GetServiceConnectorsFilterInput interface {
	pulumi.Input

	ToGetServiceConnectorsFilterOutput() GetServiceConnectorsFilterOutput
	ToGetServiceConnectorsFilterOutputWithContext(context.Context) GetServiceConnectorsFilterOutput
}

type GetServiceConnectorsFilterArgs struct {
	// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetServiceConnectorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsFilter)(nil)).Elem()
}

func (i GetServiceConnectorsFilterArgs) ToGetServiceConnectorsFilterOutput() GetServiceConnectorsFilterOutput {
	return i.ToGetServiceConnectorsFilterOutputWithContext(context.Background())
}

func (i GetServiceConnectorsFilterArgs) ToGetServiceConnectorsFilterOutputWithContext(ctx context.Context) GetServiceConnectorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsFilterOutput)
}

func (i GetServiceConnectorsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsFilter] {
	return pulumix.Output[GetServiceConnectorsFilter]{
		OutputState: i.ToGetServiceConnectorsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsFilterArrayInput is an input type that accepts GetServiceConnectorsFilterArray and GetServiceConnectorsFilterArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsFilterArrayInput` via:
//
//	GetServiceConnectorsFilterArray{ GetServiceConnectorsFilterArgs{...} }
type GetServiceConnectorsFilterArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsFilterArrayOutput() GetServiceConnectorsFilterArrayOutput
	ToGetServiceConnectorsFilterArrayOutputWithContext(context.Context) GetServiceConnectorsFilterArrayOutput
}

type GetServiceConnectorsFilterArray []GetServiceConnectorsFilterInput

func (GetServiceConnectorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsFilter)(nil)).Elem()
}

func (i GetServiceConnectorsFilterArray) ToGetServiceConnectorsFilterArrayOutput() GetServiceConnectorsFilterArrayOutput {
	return i.ToGetServiceConnectorsFilterArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsFilterArray) ToGetServiceConnectorsFilterArrayOutputWithContext(ctx context.Context) GetServiceConnectorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsFilterArrayOutput)
}

func (i GetServiceConnectorsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsFilter] {
	return pulumix.Output[[]GetServiceConnectorsFilter]{
		OutputState: i.ToGetServiceConnectorsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsFilterOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsFilter)(nil)).Elem()
}

func (o GetServiceConnectorsFilterOutput) ToGetServiceConnectorsFilterOutput() GetServiceConnectorsFilterOutput {
	return o
}

func (o GetServiceConnectorsFilterOutput) ToGetServiceConnectorsFilterOutputWithContext(ctx context.Context) GetServiceConnectorsFilterOutput {
	return o
}

func (o GetServiceConnectorsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsFilter] {
	return pulumix.Output[GetServiceConnectorsFilter]{
		OutputState: o.OutputState,
	}
}

// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
func (o GetServiceConnectorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServiceConnectorsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceConnectorsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetServiceConnectorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetServiceConnectorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsFilter)(nil)).Elem()
}

func (o GetServiceConnectorsFilterArrayOutput) ToGetServiceConnectorsFilterArrayOutput() GetServiceConnectorsFilterArrayOutput {
	return o
}

func (o GetServiceConnectorsFilterArrayOutput) ToGetServiceConnectorsFilterArrayOutputWithContext(ctx context.Context) GetServiceConnectorsFilterArrayOutput {
	return o
}

func (o GetServiceConnectorsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsFilter] {
	return pulumix.Output[[]GetServiceConnectorsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsFilterArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsFilter {
		return vs[0].([]GetServiceConnectorsFilter)[vs[1].(int)]
	}).(GetServiceConnectorsFilterOutput)
}

type GetServiceConnectorsServiceConnectorCollection struct {
	Items []GetServiceConnectorsServiceConnectorCollectionItem `pulumi:"items"`
}

// GetServiceConnectorsServiceConnectorCollectionInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionArgs and GetServiceConnectorsServiceConnectorCollectionOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionArgs{...}
type GetServiceConnectorsServiceConnectorCollectionInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionOutput() GetServiceConnectorsServiceConnectorCollectionOutput
	ToGetServiceConnectorsServiceConnectorCollectionOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionOutput
}

type GetServiceConnectorsServiceConnectorCollectionArgs struct {
	Items GetServiceConnectorsServiceConnectorCollectionItemArrayInput `pulumi:"items"`
}

func (GetServiceConnectorsServiceConnectorCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollection)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionArgs) ToGetServiceConnectorsServiceConnectorCollectionOutput() GetServiceConnectorsServiceConnectorCollectionOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionArgs) ToGetServiceConnectorsServiceConnectorCollectionOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollection] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollection]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionArray and GetServiceConnectorsServiceConnectorCollectionArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionArray{ GetServiceConnectorsServiceConnectorCollectionArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionArrayOutput() GetServiceConnectorsServiceConnectorCollectionArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionArray []GetServiceConnectorsServiceConnectorCollectionInput

func (GetServiceConnectorsServiceConnectorCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollection)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionArray) ToGetServiceConnectorsServiceConnectorCollectionArrayOutput() GetServiceConnectorsServiceConnectorCollectionArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionArray) ToGetServiceConnectorsServiceConnectorCollectionArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollection] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollection]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollection)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionOutput) ToGetServiceConnectorsServiceConnectorCollectionOutput() GetServiceConnectorsServiceConnectorCollectionOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionOutput) ToGetServiceConnectorsServiceConnectorCollectionOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollection] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionOutput) Items() GetServiceConnectorsServiceConnectorCollectionItemArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollection) []GetServiceConnectorsServiceConnectorCollectionItem {
		return v.Items
	}).(GetServiceConnectorsServiceConnectorCollectionItemArrayOutput)
}

type GetServiceConnectorsServiceConnectorCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollection)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionArrayOutput() GetServiceConnectorsServiceConnectorCollectionArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollection] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollection {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollection)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItem struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The description of the resource. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service connector.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
	Sources []GetServiceConnectorsServiceConnectorCollectionItemSource `pulumi:"sources"`
	// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
	State string `pulumi:"state"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// An object that represents the target of the flow defined by the service connector. An example target is a stream (Streaming service). For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
	Targets []GetServiceConnectorsServiceConnectorCollectionItemTarget `pulumi:"targets"`
	// The list of tasks.
	Tasks []GetServiceConnectorsServiceConnectorCollectionItemTask `pulumi:"tasks"`
	// The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetServiceConnectorsServiceConnectorCollectionItemInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemArgs and GetServiceConnectorsServiceConnectorCollectionItemOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemOutput() GetServiceConnectorsServiceConnectorCollectionItemOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The description of the resource. Avoid entering confidential information.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service connector.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
	Sources GetServiceConnectorsServiceConnectorCollectionItemSourceArrayInput `pulumi:"sources"`
	// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
	State pulumi.StringInput `pulumi:"state"`
	// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// An object that represents the target of the flow defined by the service connector. An example target is a stream (Streaming service). For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
	Targets GetServiceConnectorsServiceConnectorCollectionItemTargetArrayInput `pulumi:"targets"`
	// The list of tasks.
	Tasks GetServiceConnectorsServiceConnectorCollectionItemTaskArrayInput `pulumi:"tasks"`
	// The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItem)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemArgs) ToGetServiceConnectorsServiceConnectorCollectionItemOutput() GetServiceConnectorsServiceConnectorCollectionItemOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemArgs) ToGetServiceConnectorsServiceConnectorCollectionItemOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItem] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItem]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemArray and GetServiceConnectorsServiceConnectorCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemArray{ GetServiceConnectorsServiceConnectorCollectionItemArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemArray []GetServiceConnectorsServiceConnectorCollectionItemInput

func (GetServiceConnectorsServiceConnectorCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItem)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemArray) ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemArray) ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItem] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItem]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItem)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) ToGetServiceConnectorsServiceConnectorCollectionItemOutput() GetServiceConnectorsServiceConnectorCollectionItemOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) ToGetServiceConnectorsServiceConnectorCollectionItemOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItem] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItem]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// The description of the resource. Avoid entering confidential information.
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the service connector.
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) Sources() GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) []GetServiceConnectorsServiceConnectorCollectionItemSource {
		return v.Sources
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput)
}

// A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// An object that represents the target of the flow defined by the service connector. An example target is a stream (Streaming service). For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm). For configuration instructions, see [To create a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/managingconnectors.htm#create).
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) Targets() GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) []GetServiceConnectorsServiceConnectorCollectionItemTarget {
		return v.Targets
	}).(GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput)
}

// The list of tasks.
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) Tasks() GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) []GetServiceConnectorsServiceConnectorCollectionItemTask {
		return v.Tasks
	}).(GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput)
}

// The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o GetServiceConnectorsServiceConnectorCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItem)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItem] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItem {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItem)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSource struct {
	// The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
	Cursors []GetServiceConnectorsServiceConnectorCollectionItemSourceCursor `pulumi:"cursors"`
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The logs for this Logging source.
	LogSources []GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource `pulumi:"logSources"`
	// The list of metric namespaces to retrieve data from.
	MonitoringSources []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource `pulumi:"monitoringSources"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId string `pulumi:"streamId"`
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceArgs and GetServiceConnectorsServiceConnectorCollectionItemSourceOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemSourceInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceArgs struct {
	// The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
	Cursors GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayInput `pulumi:"cursors"`
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The logs for this Logging source.
	LogSources GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayInput `pulumi:"logSources"`
	// The list of metric namespaces to retrieve data from.
	MonitoringSources GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayInput `pulumi:"monitoringSources"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId pulumi.StringInput `pulumi:"streamId"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSource)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSource] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSource]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceArray and GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceArray{ GetServiceConnectorsServiceConnectorCollectionItemSourceArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemSourceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceArray []GetServiceConnectorsServiceConnectorCollectionItemSourceInput

func (GetServiceConnectorsServiceConnectorCollectionItemSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSource)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSource] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSource]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSource)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSource] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSource]{
		OutputState: o.OutputState,
	}
}

// The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) Cursors() GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSource) []GetServiceConnectorsServiceConnectorCollectionItemSourceCursor {
		return v.Cursors
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput)
}

// The type descriminator.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSource) string { return v.Kind }).(pulumi.StringOutput)
}

// The logs for this Logging source.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) LogSources() GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSource) []GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource {
		return v.LogSources
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput)
}

// The list of metric namespaces to retrieve data from.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) MonitoringSources() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSource) []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource {
		return v.MonitoringSources
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSource) string { return v.StreamId }).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSource)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSource] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSource]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemSource {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemSource)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceCursor struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceCursorInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs and GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceCursorInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemSourceCursorInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceCursor)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceCursor] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceCursor]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray and GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray{ GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray []GetServiceConnectorsServiceConnectorCollectionItemSourceCursorInput

func (GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceCursor)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceCursor] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceCursor]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceCursor)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceCursor] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceCursor]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceCursor) string { return v.Kind }).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceCursor)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceCursor] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceCursor]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemSourceCursor {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemSourceCursor)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId string `pulumi:"logGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
	LogId string `pulumi:"logId"`
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs and GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
	LogId pulumi.StringInput `pulumi:"logId"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray and GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray{ GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray []GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceInput

func (GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the log.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput) LogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource) string { return v.LogId }).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId string `pulumi:"compartmentId"`
	// Discriminator for namespaces in the compartment-specific list.
	NamespaceDetails []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail `pulumi:"namespaceDetails"`
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Discriminator for namespaces in the compartment-specific list.
	NamespaceDetails GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayInput `pulumi:"namespaceDetails"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray{ GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceInput

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Discriminator for namespaces in the compartment-specific list.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput) NamespaceDetails() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource) []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail {
		return v.NamespaceDetails
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The namespaces for the compartment-specific list.
	Namespaces []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace `pulumi:"namespaces"`
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The namespaces for the compartment-specific list.
	Namespaces GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayInput `pulumi:"namespaces"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray{ GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailInput

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The namespaces for the compartment-specific list.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput) Namespaces() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail) []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace {
		return v.Namespaces
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetail)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace struct {
	// The metrics to query for the specified metric namespace.
	Metrics []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric `pulumi:"metrics"`
	// The namespace.
	Namespace string `pulumi:"namespace"`
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs struct {
	// The metrics to query for the specified metric namespace.
	Metrics GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput `pulumi:"metrics"`
	// The namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray{ GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceInput

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: o.OutputState,
	}
}

// The metrics to query for the specified metric namespace.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput) Metrics() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace) []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric {
		return v.Metrics
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput)
}

// The namespace.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace) string {
		return v.Namespace
	}).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespace)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray and GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray{ GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray []GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricInput

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetric)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTarget struct {
	// The batch rollover size in megabytes.
	BatchRolloverSizeInMbs int `pulumi:"batchRolloverSizeInMbs"`
	// The batch rollover time in milliseconds.
	BatchRolloverTimeInMs int `pulumi:"batchRolloverTimeInMs"`
	// The name of the bucket. Avoid entering confidential information.
	Bucket string `pulumi:"bucket"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId string `pulumi:"compartmentId"`
	// List of dimension names and values.
	Dimensions []GetServiceConnectorsServiceConnectorCollectionItemTargetDimension `pulumi:"dimensions"`
	// Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
	EnableFormattedMessaging bool `pulumi:"enableFormattedMessaging"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId string `pulumi:"functionId"`
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId string `pulumi:"logGroupId"`
	// Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
	LogSourceIdentifier string `pulumi:"logSourceIdentifier"`
	// The name of the metric.  Example: `CpuUtilization`
	Metric string `pulumi:"metric"`
	// The namespace of the metric.  Example: `ociComputeagent`
	MetricNamespace string `pulumi:"metricNamespace"`
	// The namespace.
	Namespace string `pulumi:"namespace"`
	// The prefix of the objects. Avoid entering confidential information.
	ObjectNamePrefix string `pulumi:"objectNamePrefix"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId string `pulumi:"streamId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId string `pulumi:"topicId"`
}

// GetServiceConnectorsServiceConnectorCollectionItemTargetInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTargetArgs and GetServiceConnectorsServiceConnectorCollectionItemTargetOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTargetInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTargetArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemTargetInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetArgs struct {
	// The batch rollover size in megabytes.
	BatchRolloverSizeInMbs pulumi.IntInput `pulumi:"batchRolloverSizeInMbs"`
	// The batch rollover time in milliseconds.
	BatchRolloverTimeInMs pulumi.IntInput `pulumi:"batchRolloverTimeInMs"`
	// The name of the bucket. Avoid entering confidential information.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// List of dimension names and values.
	Dimensions GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayInput `pulumi:"dimensions"`
	// Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
	EnableFormattedMessaging pulumi.BoolInput `pulumi:"enableFormattedMessaging"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
	LogSourceIdentifier pulumi.StringInput `pulumi:"logSourceIdentifier"`
	// The name of the metric.  Example: `CpuUtilization`
	Metric pulumi.StringInput `pulumi:"metric"`
	// The namespace of the metric.  Example: `ociComputeagent`
	MetricNamespace pulumi.StringInput `pulumi:"metricNamespace"`
	// The namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The prefix of the objects. Avoid entering confidential information.
	ObjectNamePrefix pulumi.StringInput `pulumi:"objectNamePrefix"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
	StreamId pulumi.StringInput `pulumi:"streamId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTarget)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTargetOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTarget] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTarget]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemTargetArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTargetArray and GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTargetArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTargetArray{ GetServiceConnectorsServiceConnectorCollectionItemTargetArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemTargetArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetArray []GetServiceConnectorsServiceConnectorCollectionItemTargetInput

func (GetServiceConnectorsServiceConnectorCollectionItemTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTarget)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetArray) ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetArray) ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTarget] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTarget]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTarget)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTarget] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTarget]{
		OutputState: o.OutputState,
	}
}

// The batch rollover size in megabytes.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) BatchRolloverSizeInMbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) int { return v.BatchRolloverSizeInMbs }).(pulumi.IntOutput)
}

// The batch rollover time in milliseconds.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) BatchRolloverTimeInMs() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) int { return v.BatchRolloverTimeInMs }).(pulumi.IntOutput)
}

// The name of the bucket. Avoid entering confidential information.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.Bucket }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// List of dimension names and values.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) Dimensions() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) []GetServiceConnectorsServiceConnectorCollectionItemTargetDimension {
		return v.Dimensions
	}).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput)
}

// Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) EnableFormattedMessaging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) bool {
		return v.EnableFormattedMessaging
	}).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The type descriminator.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.Kind }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) LogSourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.LogSourceIdentifier }).(pulumi.StringOutput)
}

// The name of the metric.  Example: `CpuUtilization`
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.Metric }).(pulumi.StringOutput)
}

// The namespace of the metric.  Example: `ociComputeagent`
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

// The namespace.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.Namespace }).(pulumi.StringOutput)
}

// The prefix of the objects. Avoid entering confidential information.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) ObjectNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.ObjectNamePrefix }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.StreamId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTarget) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTarget)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTarget] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTarget]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemTarget {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemTarget)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemTargetOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimension struct {
	// Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
	DimensionValues []GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue `pulumi:"dimensionValues"`
	// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name string `pulumi:"name"`
}

// GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs and GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs struct {
	// Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
	DimensionValues GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayInput `pulumi:"dimensionValues"`
	// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimension)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimension] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimension]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray and GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray{ GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray []GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionInput

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimension)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimension] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimension]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimension)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimension] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimension]{
		OutputState: o.OutputState,
	}
}

// Instructions for extracting the value corresponding to the specified dimension key: Either extract the value as-is (static) or derive the value from a path (evaluated).
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput) DimensionValues() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTargetDimension) []GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue {
		return v.DimensionValues
	}).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput)
}

// Dimension key. A valid dimension key includes only printable ASCII, excluding periods (.) and spaces. Custom dimension keys are acceptable. Avoid entering confidential information. Due to use by Service Connector Hub, the following dimension names are reserved: `connectorId`, `connectorName`, `connectorSourceType`. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). Example: `type`
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTargetDimension) string { return v.Name }).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimension)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimension] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimension]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemTargetDimension {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemTargetDimension)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue struct {
	// The type descriminator.
	Kind string `pulumi:"kind"`
	// The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
	Path string `pulumi:"path"`
	// The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
	Value string `pulumi:"value"`
}

// GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs and GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs struct {
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
	Path pulumi.StringInput `pulumi:"path"`
	// The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray and GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray{ GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray []GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueInput

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue]{
		OutputState: o.OutputState,
	}
}

// The type descriminator.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The location to use for deriving the dimension value (evaluated). The path must start with `logContent` in an acceptable notation style with supported [JMESPath selectors](https://jmespath.org/specification.html): expression with dot and index operator (`.` and `[]`). Example with dot notation: `logContent.data` Example with index notation: `logContent.data[0].content` For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails). The returned value depends on the results of evaluation. If the evaluated value is valid, then the evaluated value is returned without double quotes. (Any front or trailing double quotes are trimmed before returning the value. For example, the evaluated value `"compartmentId"` is returned as `compartmentId`.) If the evaluated value is invalid, then the returned value is `SCH_EVAL_INVALID_VALUE`. If the evaluated value is empty, then the returned value is `SCH_EVAL_VALUE_EMPTY`.
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue) string {
		return v.Path
	}).(pulumi.StringOutput)
}

// The data extracted from the specified dimension value (passed as-is). Unicode characters only. For information on valid dimension keys and values, see [MetricDataDetails Reference](https://docs.cloud.oracle.com/iaas/api/#/en/monitoring/latest/datatypes/MetricDataDetails).
func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValue)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTask struct {
	// Size limit (kilobytes) for batch sent to invoke the function.
	BatchSizeInKbs int `pulumi:"batchSizeInKbs"`
	// Time limit (seconds) for batch sent to invoke the function.
	BatchTimeInSec int `pulumi:"batchTimeInSec"`
	// A filter or mask to limit the source used in the flow defined by the service connector.
	Condition string `pulumi:"condition"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId string `pulumi:"functionId"`
	// The type descriminator.
	Kind string `pulumi:"kind"`
}

// GetServiceConnectorsServiceConnectorCollectionItemTaskInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTaskArgs and GetServiceConnectorsServiceConnectorCollectionItemTaskOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTaskInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTaskArgs{...}
type GetServiceConnectorsServiceConnectorCollectionItemTaskInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutput() GetServiceConnectorsServiceConnectorCollectionItemTaskOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTaskOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTaskArgs struct {
	// Size limit (kilobytes) for batch sent to invoke the function.
	BatchSizeInKbs pulumi.IntInput `pulumi:"batchSizeInKbs"`
	// Time limit (seconds) for batch sent to invoke the function.
	BatchTimeInSec pulumi.IntInput `pulumi:"batchTimeInSec"`
	// A filter or mask to limit the source used in the flow defined by the service connector.
	Condition pulumi.StringInput `pulumi:"condition"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The type descriminator.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (GetServiceConnectorsServiceConnectorCollectionItemTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTask)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTaskArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutput() GetServiceConnectorsServiceConnectorCollectionItemTaskOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTaskArgs) ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTaskOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTaskArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTask] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTask]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutputWithContext(ctx).OutputState,
	}
}

// GetServiceConnectorsServiceConnectorCollectionItemTaskArrayInput is an input type that accepts GetServiceConnectorsServiceConnectorCollectionItemTaskArray and GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput values.
// You can construct a concrete instance of `GetServiceConnectorsServiceConnectorCollectionItemTaskArrayInput` via:
//
//	GetServiceConnectorsServiceConnectorCollectionItemTaskArray{ GetServiceConnectorsServiceConnectorCollectionItemTaskArgs{...} }
type GetServiceConnectorsServiceConnectorCollectionItemTaskArrayInput interface {
	pulumi.Input

	ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput
	ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutputWithContext(context.Context) GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput
}

type GetServiceConnectorsServiceConnectorCollectionItemTaskArray []GetServiceConnectorsServiceConnectorCollectionItemTaskInput

func (GetServiceConnectorsServiceConnectorCollectionItemTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTask)(nil)).Elem()
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTaskArray) ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput {
	return i.ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutputWithContext(context.Background())
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTaskArray) ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput)
}

func (i GetServiceConnectorsServiceConnectorCollectionItemTaskArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTask] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTask]{
		OutputState: i.ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceConnectorsServiceConnectorCollectionItemTaskOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTask)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutput() GetServiceConnectorsServiceConnectorCollectionItemTaskOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTaskOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTaskOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTask] {
	return pulumix.Output[GetServiceConnectorsServiceConnectorCollectionItemTask]{
		OutputState: o.OutputState,
	}
}

// Size limit (kilobytes) for batch sent to invoke the function.
func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) BatchSizeInKbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTask) int { return v.BatchSizeInKbs }).(pulumi.IntOutput)
}

// Time limit (seconds) for batch sent to invoke the function.
func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) BatchTimeInSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTask) int { return v.BatchTimeInSec }).(pulumi.IntOutput)
}

// A filter or mask to limit the source used in the flow defined by the service connector.
func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTask) string { return v.Condition }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTask) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The type descriminator.
func (o GetServiceConnectorsServiceConnectorCollectionItemTaskOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceConnectorsServiceConnectorCollectionItemTask) string { return v.Kind }).(pulumi.StringOutput)
}

type GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput struct{ *pulumi.OutputState }

func (GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceConnectorsServiceConnectorCollectionItemTask)(nil)).Elem()
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput() GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput) ToGetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutputWithContext(ctx context.Context) GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput {
	return o
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTask] {
	return pulumix.Output[[]GetServiceConnectorsServiceConnectorCollectionItemTask]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput) Index(i pulumi.IntInput) GetServiceConnectorsServiceConnectorCollectionItemTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceConnectorsServiceConnectorCollectionItemTask {
		return vs[0].([]GetServiceConnectorsServiceConnectorCollectionItemTask)[vs[1].(int)]
	}).(GetServiceConnectorsServiceConnectorCollectionItemTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceInput)(nil)).Elem(), ConnectorSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourcePtrInput)(nil)).Elem(), ConnectorSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceCursorInput)(nil)).Elem(), ConnectorSourceCursorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceCursorPtrInput)(nil)).Elem(), ConnectorSourceCursorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceLogSourceInput)(nil)).Elem(), ConnectorSourceLogSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceLogSourceArrayInput)(nil)).Elem(), ConnectorSourceLogSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceMonitoringSourceInput)(nil)).Elem(), ConnectorSourceMonitoringSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceMonitoringSourceArrayInput)(nil)).Elem(), ConnectorSourceMonitoringSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsInput)(nil)).Elem(), ConnectorSourceMonitoringSourceNamespaceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsPtrInput)(nil)).Elem(), ConnectorSourceMonitoringSourceNamespaceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceInput)(nil)).Elem(), ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayInput)(nil)).Elem(), ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsInput)(nil)).Elem(), ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTargetInput)(nil)).Elem(), ConnectorTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTargetPtrInput)(nil)).Elem(), ConnectorTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTargetDimensionInput)(nil)).Elem(), ConnectorTargetDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTargetDimensionArrayInput)(nil)).Elem(), ConnectorTargetDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTargetDimensionDimensionValueInput)(nil)).Elem(), ConnectorTargetDimensionDimensionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTargetDimensionDimensionValuePtrInput)(nil)).Elem(), ConnectorTargetDimensionDimensionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTaskInput)(nil)).Elem(), ConnectorTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTaskArrayInput)(nil)).Elem(), ConnectorTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceInput)(nil)).Elem(), GetServiceConnectorSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceArrayInput)(nil)).Elem(), GetServiceConnectorSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceCursorInput)(nil)).Elem(), GetServiceConnectorSourceCursorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceCursorArrayInput)(nil)).Elem(), GetServiceConnectorSourceCursorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceLogSourceInput)(nil)).Elem(), GetServiceConnectorSourceLogSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceLogSourceArrayInput)(nil)).Elem(), GetServiceConnectorSourceLogSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceArrayInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceNamespaceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceNamespaceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput)(nil)).Elem(), GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTargetInput)(nil)).Elem(), GetServiceConnectorTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTargetArrayInput)(nil)).Elem(), GetServiceConnectorTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTargetDimensionInput)(nil)).Elem(), GetServiceConnectorTargetDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTargetDimensionArrayInput)(nil)).Elem(), GetServiceConnectorTargetDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTargetDimensionDimensionValueInput)(nil)).Elem(), GetServiceConnectorTargetDimensionDimensionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTargetDimensionDimensionValueArrayInput)(nil)).Elem(), GetServiceConnectorTargetDimensionDimensionValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTaskInput)(nil)).Elem(), GetServiceConnectorTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorTaskArrayInput)(nil)).Elem(), GetServiceConnectorTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsFilterInput)(nil)).Elem(), GetServiceConnectorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsFilterArrayInput)(nil)).Elem(), GetServiceConnectorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceCursorInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTaskInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceConnectorsServiceConnectorCollectionItemTaskArrayInput)(nil)).Elem(), GetServiceConnectorsServiceConnectorCollectionItemTaskArray{})
	pulumi.RegisterOutputType(ConnectorSourceOutput{})
	pulumi.RegisterOutputType(ConnectorSourcePtrOutput{})
	pulumi.RegisterOutputType(ConnectorSourceCursorOutput{})
	pulumi.RegisterOutputType(ConnectorSourceCursorPtrOutput{})
	pulumi.RegisterOutputType(ConnectorSourceLogSourceOutput{})
	pulumi.RegisterOutputType(ConnectorSourceLogSourceArrayOutput{})
	pulumi.RegisterOutputType(ConnectorSourceMonitoringSourceOutput{})
	pulumi.RegisterOutputType(ConnectorSourceMonitoringSourceArrayOutput{})
	pulumi.RegisterOutputType(ConnectorSourceMonitoringSourceNamespaceDetailsOutput{})
	pulumi.RegisterOutputType(ConnectorSourceMonitoringSourceNamespaceDetailsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceOutput{})
	pulumi.RegisterOutputType(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArrayOutput{})
	pulumi.RegisterOutputType(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsOutput{})
	pulumi.RegisterOutputType(ConnectorTargetOutput{})
	pulumi.RegisterOutputType(ConnectorTargetPtrOutput{})
	pulumi.RegisterOutputType(ConnectorTargetDimensionOutput{})
	pulumi.RegisterOutputType(ConnectorTargetDimensionArrayOutput{})
	pulumi.RegisterOutputType(ConnectorTargetDimensionDimensionValueOutput{})
	pulumi.RegisterOutputType(ConnectorTargetDimensionDimensionValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectorTaskOutput{})
	pulumi.RegisterOutputType(ConnectorTaskArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceCursorOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceCursorArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceLogSourceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceLogSourceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceNamespaceDetailOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceNamespaceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTargetOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTargetArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTargetDimensionOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTargetDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTargetDimensionDimensionValueOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTargetDimensionDimensionValueArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTaskOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorTaskArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsFilterOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceCursorOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceCursorArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceLogSourceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSourceNamespaceDetailNamespaceMetricArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTargetOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTargetArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTargetDimensionDimensionValueArrayOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTaskOutput{})
	pulumi.RegisterOutputType(GetServiceConnectorsServiceConnectorCollectionItemTaskArrayOutput{})
}
