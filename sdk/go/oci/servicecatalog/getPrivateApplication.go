// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Private Application resource in Oracle Cloud Infrastructure Service Catalog service.
//
// Gets the details of the specified private application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ServiceCatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceCatalog.GetPrivateApplication(ctx, &servicecatalog.GetPrivateApplicationArgs{
//				PrivateApplicationId: oci_service_catalog_private_application.Test_private_application.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPrivateApplication(ctx *pulumi.Context, args *LookupPrivateApplicationArgs, opts ...pulumi.InvokeOption) (*LookupPrivateApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPrivateApplicationResult
	err := ctx.Invoke("oci:ServiceCatalog/getPrivateApplication:getPrivateApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrivateApplication.
type LookupPrivateApplicationArgs struct {
	// The unique identifier for the private application.
	PrivateApplicationId string `pulumi:"privateApplicationId"`
}

// A collection of values returned by getPrivateApplication.
type LookupPrivateApplicationResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the private application resides.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The name used to refer to the uploaded data.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier for the private application in Marketplace.
	Id                    string `pulumi:"id"`
	LogoFileBase64encoded string `pulumi:"logoFileBase64encoded"`
	// The model for uploaded binary data, like logos and images.
	Logos []GetPrivateApplicationLogo `pulumi:"logos"`
	// A long description of the private application.
	LongDescription string                               `pulumi:"longDescription"`
	PackageDetails  []GetPrivateApplicationPackageDetail `pulumi:"packageDetails"`
	// Type of packages within this private application.
	PackageType          string `pulumi:"packageType"`
	PrivateApplicationId string `pulumi:"privateApplicationId"`
	// A short description of the private application.
	ShortDescription string `pulumi:"shortDescription"`
	// The lifecycle state of the private application.
	State string `pulumi:"state"`
	// The date and time the private application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the private application was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupPrivateApplicationOutput(ctx *pulumi.Context, args LookupPrivateApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupPrivateApplicationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPrivateApplicationResult, error) {
			args := v.(LookupPrivateApplicationArgs)
			r, err := LookupPrivateApplication(ctx, &args, opts...)
			var s LookupPrivateApplicationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPrivateApplicationResultOutput)
}

// A collection of arguments for invoking getPrivateApplication.
type LookupPrivateApplicationOutputArgs struct {
	// The unique identifier for the private application.
	PrivateApplicationId pulumi.StringInput `pulumi:"privateApplicationId"`
}

func (LookupPrivateApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateApplicationArgs)(nil)).Elem()
}

// A collection of values returned by getPrivateApplication.
type LookupPrivateApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupPrivateApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateApplicationResult)(nil)).Elem()
}

func (o LookupPrivateApplicationResultOutput) ToLookupPrivateApplicationResultOutput() LookupPrivateApplicationResultOutput {
	return o
}

func (o LookupPrivateApplicationResultOutput) ToLookupPrivateApplicationResultOutputWithContext(ctx context.Context) LookupPrivateApplicationResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the private application resides.
func (o LookupPrivateApplicationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupPrivateApplicationResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The name used to refer to the uploaded data.
func (o LookupPrivateApplicationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupPrivateApplicationResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The unique identifier for the private application in Marketplace.
func (o LookupPrivateApplicationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPrivateApplicationResultOutput) LogoFileBase64encoded() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.LogoFileBase64encoded }).(pulumi.StringOutput)
}

// The model for uploaded binary data, like logos and images.
func (o LookupPrivateApplicationResultOutput) Logos() GetPrivateApplicationLogoArrayOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) []GetPrivateApplicationLogo { return v.Logos }).(GetPrivateApplicationLogoArrayOutput)
}

// A long description of the private application.
func (o LookupPrivateApplicationResultOutput) LongDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.LongDescription }).(pulumi.StringOutput)
}

func (o LookupPrivateApplicationResultOutput) PackageDetails() GetPrivateApplicationPackageDetailArrayOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) []GetPrivateApplicationPackageDetail { return v.PackageDetails }).(GetPrivateApplicationPackageDetailArrayOutput)
}

// Type of packages within this private application.
func (o LookupPrivateApplicationResultOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.PackageType }).(pulumi.StringOutput)
}

func (o LookupPrivateApplicationResultOutput) PrivateApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.PrivateApplicationId }).(pulumi.StringOutput)
}

// A short description of the private application.
func (o LookupPrivateApplicationResultOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// The lifecycle state of the private application.
func (o LookupPrivateApplicationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the private application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
func (o LookupPrivateApplicationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the private application was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
func (o LookupPrivateApplicationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateApplicationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrivateApplicationResultOutput{})
}
