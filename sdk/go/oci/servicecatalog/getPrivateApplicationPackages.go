// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Private Application Packages in Oracle Cloud Infrastructure Service Catalog service.
//
// Lists the packages in the specified private application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/servicecatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := servicecatalog.GetPrivateApplicationPackages(ctx, &servicecatalog.GetPrivateApplicationPackagesArgs{
//				PrivateApplicationId:        testPrivateApplication.Id,
//				DisplayName:                 pulumi.StringRef(privateApplicationPackageDisplayName),
//				PackageTypes:                privateApplicationPackagePackageType,
//				PrivateApplicationPackageId: pulumi.StringRef(testPrivateApplicationPackage.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPrivateApplicationPackages(ctx *pulumi.Context, args *GetPrivateApplicationPackagesArgs, opts ...pulumi.InvokeOption) (*GetPrivateApplicationPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPrivateApplicationPackagesResult
	err := ctx.Invoke("oci:ServiceCatalog/getPrivateApplicationPackages:getPrivateApplicationPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrivateApplicationPackages.
type GetPrivateApplicationPackagesArgs struct {
	// Exact match name filter.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetPrivateApplicationPackagesFilter `pulumi:"filters"`
	// Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
	PackageTypes []string `pulumi:"packageTypes"`
	// The unique identifier for the private application.
	PrivateApplicationId string `pulumi:"privateApplicationId"`
	// The unique identifier for the private application package.
	PrivateApplicationPackageId *string `pulumi:"privateApplicationPackageId"`
}

// A collection of values returned by getPrivateApplicationPackages.
type GetPrivateApplicationPackagesResult struct {
	// The display name of the package.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetPrivateApplicationPackagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The specified package's type.
	PackageTypes []string `pulumi:"packageTypes"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application where the package is hosted.
	PrivateApplicationId string `pulumi:"privateApplicationId"`
	// The list of private_application_package_collection.
	PrivateApplicationPackageCollections []GetPrivateApplicationPackagesPrivateApplicationPackageCollection `pulumi:"privateApplicationPackageCollections"`
	PrivateApplicationPackageId          *string                                                            `pulumi:"privateApplicationPackageId"`
}

func GetPrivateApplicationPackagesOutput(ctx *pulumi.Context, args GetPrivateApplicationPackagesOutputArgs, opts ...pulumi.InvokeOption) GetPrivateApplicationPackagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPrivateApplicationPackagesResultOutput, error) {
			args := v.(GetPrivateApplicationPackagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ServiceCatalog/getPrivateApplicationPackages:getPrivateApplicationPackages", args, GetPrivateApplicationPackagesResultOutput{}, options).(GetPrivateApplicationPackagesResultOutput), nil
		}).(GetPrivateApplicationPackagesResultOutput)
}

// A collection of arguments for invoking getPrivateApplicationPackages.
type GetPrivateApplicationPackagesOutputArgs struct {
	// Exact match name filter.
	DisplayName pulumi.StringPtrInput                         `pulumi:"displayName"`
	Filters     GetPrivateApplicationPackagesFilterArrayInput `pulumi:"filters"`
	// Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
	PackageTypes pulumi.StringArrayInput `pulumi:"packageTypes"`
	// The unique identifier for the private application.
	PrivateApplicationId pulumi.StringInput `pulumi:"privateApplicationId"`
	// The unique identifier for the private application package.
	PrivateApplicationPackageId pulumi.StringPtrInput `pulumi:"privateApplicationPackageId"`
}

func (GetPrivateApplicationPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateApplicationPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getPrivateApplicationPackages.
type GetPrivateApplicationPackagesResultOutput struct{ *pulumi.OutputState }

func (GetPrivateApplicationPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateApplicationPackagesResult)(nil)).Elem()
}

func (o GetPrivateApplicationPackagesResultOutput) ToGetPrivateApplicationPackagesResultOutput() GetPrivateApplicationPackagesResultOutput {
	return o
}

func (o GetPrivateApplicationPackagesResultOutput) ToGetPrivateApplicationPackagesResultOutputWithContext(ctx context.Context) GetPrivateApplicationPackagesResultOutput {
	return o
}

// The display name of the package.
func (o GetPrivateApplicationPackagesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrivateApplicationPackagesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetPrivateApplicationPackagesResultOutput) Filters() GetPrivateApplicationPackagesFilterArrayOutput {
	return o.ApplyT(func(v GetPrivateApplicationPackagesResult) []GetPrivateApplicationPackagesFilter { return v.Filters }).(GetPrivateApplicationPackagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPrivateApplicationPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateApplicationPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The specified package's type.
func (o GetPrivateApplicationPackagesResultOutput) PackageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivateApplicationPackagesResult) []string { return v.PackageTypes }).(pulumi.StringArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application where the package is hosted.
func (o GetPrivateApplicationPackagesResultOutput) PrivateApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateApplicationPackagesResult) string { return v.PrivateApplicationId }).(pulumi.StringOutput)
}

// The list of private_application_package_collection.
func (o GetPrivateApplicationPackagesResultOutput) PrivateApplicationPackageCollections() GetPrivateApplicationPackagesPrivateApplicationPackageCollectionArrayOutput {
	return o.ApplyT(func(v GetPrivateApplicationPackagesResult) []GetPrivateApplicationPackagesPrivateApplicationPackageCollection {
		return v.PrivateApplicationPackageCollections
	}).(GetPrivateApplicationPackagesPrivateApplicationPackageCollectionArrayOutput)
}

func (o GetPrivateApplicationPackagesResultOutput) PrivateApplicationPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrivateApplicationPackagesResult) *string { return v.PrivateApplicationPackageId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPrivateApplicationPackagesResultOutput{})
}
