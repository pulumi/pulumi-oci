// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Service Catalog resource in Oracle Cloud Infrastructure Service Catalog service.
//
// # Gets detailed information about the service catalog including name, compartmentId
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ServiceCatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceCatalog.GetServiceCatalog(ctx, &servicecatalog.GetServiceCatalogArgs{
//				ServiceCatalogId: oci_service_catalog_service_catalog.Test_service_catalog.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServiceCatalog(ctx *pulumi.Context, args *GetServiceCatalogArgs, opts ...pulumi.InvokeOption) (*GetServiceCatalogResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceCatalogResult
	err := ctx.Invoke("oci:ServiceCatalog/getServiceCatalog:getServiceCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceCatalog.
type GetServiceCatalogArgs struct {
	// The unique identifier for the service catalog.
	ServiceCatalogId string `pulumi:"serviceCatalogId"`
}

// A collection of values returned by getServiceCatalog.
type GetServiceCatalogResult struct {
	// The Compartment id where the service catalog exists
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The name of the service catalog.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier for the Service catalog.
	Id               string `pulumi:"id"`
	ServiceCatalogId string `pulumi:"serviceCatalogId"`
	// The lifecycle state of the service catalog.
	State string `pulumi:"state"`
	// The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetServiceCatalogOutput(ctx *pulumi.Context, args GetServiceCatalogOutputArgs, opts ...pulumi.InvokeOption) GetServiceCatalogResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceCatalogResult, error) {
			args := v.(GetServiceCatalogArgs)
			r, err := GetServiceCatalog(ctx, &args, opts...)
			var s GetServiceCatalogResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServiceCatalogResultOutput)
}

// A collection of arguments for invoking getServiceCatalog.
type GetServiceCatalogOutputArgs struct {
	// The unique identifier for the service catalog.
	ServiceCatalogId pulumi.StringInput `pulumi:"serviceCatalogId"`
}

func (GetServiceCatalogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCatalogArgs)(nil)).Elem()
}

// A collection of values returned by getServiceCatalog.
type GetServiceCatalogResultOutput struct{ *pulumi.OutputState }

func (GetServiceCatalogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCatalogResult)(nil)).Elem()
}

func (o GetServiceCatalogResultOutput) ToGetServiceCatalogResultOutput() GetServiceCatalogResultOutput {
	return o
}

func (o GetServiceCatalogResultOutput) ToGetServiceCatalogResultOutputWithContext(ctx context.Context) GetServiceCatalogResultOutput {
	return o
}

// The Compartment id where the service catalog exists
func (o GetServiceCatalogResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetServiceCatalogResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The name of the service catalog.
func (o GetServiceCatalogResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetServiceCatalogResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The unique identifier for the Service catalog.
func (o GetServiceCatalogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceCatalogResultOutput) ServiceCatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) string { return v.ServiceCatalogId }).(pulumi.StringOutput)
}

// The lifecycle state of the service catalog.
func (o GetServiceCatalogResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
func (o GetServiceCatalogResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
func (o GetServiceCatalogResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceCatalogResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceCatalogResultOutput{})
}
