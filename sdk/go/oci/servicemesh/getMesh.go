// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Mesh resource in Oracle Cloud Infrastructure Service Mesh service.
//
// Gets a Mesh by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/servicemesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := servicemesh.GetMesh(ctx, &servicemesh.GetMeshArgs{
//				MeshId: testMeshOciServiceMeshMesh.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMesh(ctx *pulumi.Context, args *LookupMeshArgs, opts ...pulumi.InvokeOption) (*LookupMeshResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMeshResult
	err := ctx.Invoke("oci:ServiceMesh/getMesh:getMesh", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMesh.
type LookupMeshArgs struct {
	// Unique Mesh identifier.
	MeshId string `pulumi:"meshId"`
}

// A collection of values returned by getMesh.
type LookupMeshResult struct {
	// A list of certificate authority resources to use for creating leaf certificates for mTLS authentication. Currently we only support one certificate authority, but this may expand in future releases. Request with more than one certificate authority will be rejected.
	CertificateAuthorities []GetMeshCertificateAuthority `pulumi:"certificateAuthorities"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description string `pulumi:"description"`
	// A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	MeshId           string `pulumi:"meshId"`
	// Sets a minimum level of mTLS authentication for all virtual services within the mesh.
	Mtls []GetMeshMtl `pulumi:"mtls"`
	// The current state of the Resource.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupMeshOutput(ctx *pulumi.Context, args LookupMeshOutputArgs, opts ...pulumi.InvokeOption) LookupMeshResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMeshResultOutput, error) {
			args := v.(LookupMeshArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ServiceMesh/getMesh:getMesh", args, LookupMeshResultOutput{}, options).(LookupMeshResultOutput), nil
		}).(LookupMeshResultOutput)
}

// A collection of arguments for invoking getMesh.
type LookupMeshOutputArgs struct {
	// Unique Mesh identifier.
	MeshId pulumi.StringInput `pulumi:"meshId"`
}

func (LookupMeshOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeshArgs)(nil)).Elem()
}

// A collection of values returned by getMesh.
type LookupMeshResultOutput struct{ *pulumi.OutputState }

func (LookupMeshResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeshResult)(nil)).Elem()
}

func (o LookupMeshResultOutput) ToLookupMeshResultOutput() LookupMeshResultOutput {
	return o
}

func (o LookupMeshResultOutput) ToLookupMeshResultOutputWithContext(ctx context.Context) LookupMeshResultOutput {
	return o
}

// A list of certificate authority resources to use for creating leaf certificates for mTLS authentication. Currently we only support one certificate authority, but this may expand in future releases. Request with more than one certificate authority will be rejected.
func (o LookupMeshResultOutput) CertificateAuthorities() GetMeshCertificateAuthorityArrayOutput {
	return o.ApplyT(func(v LookupMeshResult) []GetMeshCertificateAuthority { return v.CertificateAuthorities }).(GetMeshCertificateAuthorityArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupMeshResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMeshResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMeshResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
func (o LookupMeshResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
func (o LookupMeshResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMeshResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMeshResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupMeshResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
func (o LookupMeshResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o LookupMeshResultOutput) MeshId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.MeshId }).(pulumi.StringOutput)
}

// Sets a minimum level of mTLS authentication for all virtual services within the mesh.
func (o LookupMeshResultOutput) Mtls() GetMeshMtlArrayOutput {
	return o.ApplyT(func(v LookupMeshResult) []GetMeshMtl { return v.Mtls }).(GetMeshMtlArrayOutput)
}

// The current state of the Resource.
func (o LookupMeshResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMeshResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMeshResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when this resource was created in an RFC3339 formatted datetime string.
func (o LookupMeshResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when this resource was updated in an RFC3339 formatted datetime string.
func (o LookupMeshResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeshResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMeshResultOutput{})
}
