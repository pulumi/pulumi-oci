// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Virtual Deployments in Oracle Cloud Infrastructure Service Mesh service.
//
// Returns a list of VirtualDeployments.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ServiceMesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceMesh.GetVirtualDeployments(ctx, &servicemesh.GetVirtualDeploymentsArgs{
//				CompartmentId:    _var.Compartment_id,
//				Id:               pulumi.StringRef(_var.Virtual_deployment_id),
//				Name:             pulumi.StringRef(_var.Virtual_deployment_name),
//				State:            pulumi.StringRef(_var.Virtual_deployment_state),
//				VirtualServiceId: pulumi.StringRef(oci_service_mesh_virtual_service.Test_virtual_service.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVirtualDeployments(ctx *pulumi.Context, args *GetVirtualDeploymentsArgs, opts ...pulumi.InvokeOption) (*GetVirtualDeploymentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVirtualDeploymentsResult
	err := ctx.Invoke("oci:ServiceMesh/getVirtualDeployments:getVirtualDeployments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualDeployments.
type GetVirtualDeploymentsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string                        `pulumi:"compartmentId"`
	Filters       []GetVirtualDeploymentsFilter `pulumi:"filters"`
	// Unique VirtualDeployment identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name *string `pulumi:"name"`
	// A filter to return only resources that match the life cycle state given.
	State *string `pulumi:"state"`
	// Unique VirtualService identifier.
	VirtualServiceId *string `pulumi:"virtualServiceId"`
}

// A collection of values returned by getVirtualDeployments.
type GetVirtualDeploymentsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                        `pulumi:"compartmentId"`
	Filters       []GetVirtualDeploymentsFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name *string `pulumi:"name"`
	// The current state of the Resource.
	State *string `pulumi:"state"`
	// The list of virtual_deployment_collection.
	VirtualDeploymentCollections []GetVirtualDeploymentsVirtualDeploymentCollection `pulumi:"virtualDeploymentCollections"`
	// The OCID of the virtual service in which this virtual deployment is created.
	VirtualServiceId *string `pulumi:"virtualServiceId"`
}

func GetVirtualDeploymentsOutput(ctx *pulumi.Context, args GetVirtualDeploymentsOutputArgs, opts ...pulumi.InvokeOption) GetVirtualDeploymentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVirtualDeploymentsResult, error) {
			args := v.(GetVirtualDeploymentsArgs)
			r, err := GetVirtualDeployments(ctx, &args, opts...)
			var s GetVirtualDeploymentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVirtualDeploymentsResultOutput)
}

// A collection of arguments for invoking getVirtualDeployments.
type GetVirtualDeploymentsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput                    `pulumi:"compartmentId"`
	Filters       GetVirtualDeploymentsFilterArrayInput `pulumi:"filters"`
	// Unique VirtualDeployment identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only resources that match the life cycle state given.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Unique VirtualService identifier.
	VirtualServiceId pulumi.StringPtrInput `pulumi:"virtualServiceId"`
}

func (GetVirtualDeploymentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualDeploymentsArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualDeployments.
type GetVirtualDeploymentsResultOutput struct{ *pulumi.OutputState }

func (GetVirtualDeploymentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualDeploymentsResult)(nil)).Elem()
}

func (o GetVirtualDeploymentsResultOutput) ToGetVirtualDeploymentsResultOutput() GetVirtualDeploymentsResultOutput {
	return o
}

func (o GetVirtualDeploymentsResultOutput) ToGetVirtualDeploymentsResultOutputWithContext(ctx context.Context) GetVirtualDeploymentsResultOutput {
	return o
}

func (o GetVirtualDeploymentsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetVirtualDeploymentsResult] {
	return pulumix.Output[GetVirtualDeploymentsResult]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetVirtualDeploymentsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualDeploymentsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetVirtualDeploymentsResultOutput) Filters() GetVirtualDeploymentsFilterArrayOutput {
	return o.ApplyT(func(v GetVirtualDeploymentsResult) []GetVirtualDeploymentsFilter { return v.Filters }).(GetVirtualDeploymentsFilterArrayOutput)
}

// Unique identifier that is immutable on creation.
func (o GetVirtualDeploymentsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualDeploymentsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
func (o GetVirtualDeploymentsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualDeploymentsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current state of the Resource.
func (o GetVirtualDeploymentsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualDeploymentsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of virtual_deployment_collection.
func (o GetVirtualDeploymentsResultOutput) VirtualDeploymentCollections() GetVirtualDeploymentsVirtualDeploymentCollectionArrayOutput {
	return o.ApplyT(func(v GetVirtualDeploymentsResult) []GetVirtualDeploymentsVirtualDeploymentCollection {
		return v.VirtualDeploymentCollections
	}).(GetVirtualDeploymentsVirtualDeploymentCollectionArrayOutput)
}

// The OCID of the virtual service in which this virtual deployment is created.
func (o GetVirtualDeploymentsResultOutput) VirtualServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualDeploymentsResult) *string { return v.VirtualServiceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVirtualDeploymentsResultOutput{})
}
