// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Virtual Service resource in Oracle Cloud Infrastructure Service Mesh service.
//
// Gets a VirtualService by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/ServiceMesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceMesh.GetVirtualService(ctx, &servicemesh.GetVirtualServiceArgs{
//				VirtualServiceId: testVirtualServiceOciServiceMeshVirtualService.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVirtualService(ctx *pulumi.Context, args *LookupVirtualServiceArgs, opts ...pulumi.InvokeOption) (*LookupVirtualServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualServiceResult
	err := ctx.Invoke("oci:ServiceMesh/getVirtualService:getVirtualService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualService.
type LookupVirtualServiceArgs struct {
	// Unique VirtualService identifier.
	VirtualServiceId string `pulumi:"virtualServiceId"`
}

// A collection of values returned by getVirtualService.
type LookupVirtualServiceResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Routing policy for the virtual service.
	DefaultRoutingPolicies []GetVirtualServiceDefaultRoutingPolicy `pulumi:"defaultRoutingPolicies"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description string `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The DNS hostnames of the virtual service that is used by its callers. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com". Can be omitted if the virtual service will only have TCP virtual deployments.
	Hosts []string `pulumi:"hosts"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of the service mesh in which this virtual service is created.
	MeshId string `pulumi:"meshId"`
	// Mutual TLS settings used when communicating with other virtual services or ingress gateways within the mesh.
	Mtls []GetVirtualServiceMtl `pulumi:"mtls"`
	// A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name string `pulumi:"name"`
	// The current state of the Resource.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated      string `pulumi:"timeUpdated"`
	VirtualServiceId string `pulumi:"virtualServiceId"`
}

func LookupVirtualServiceOutput(ctx *pulumi.Context, args LookupVirtualServiceOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualServiceResult, error) {
			args := v.(LookupVirtualServiceArgs)
			r, err := LookupVirtualService(ctx, &args, opts...)
			var s LookupVirtualServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualServiceResultOutput)
}

// A collection of arguments for invoking getVirtualService.
type LookupVirtualServiceOutputArgs struct {
	// Unique VirtualService identifier.
	VirtualServiceId pulumi.StringInput `pulumi:"virtualServiceId"`
}

func (LookupVirtualServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualServiceArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualService.
type LookupVirtualServiceResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualServiceResult)(nil)).Elem()
}

func (o LookupVirtualServiceResultOutput) ToLookupVirtualServiceResultOutput() LookupVirtualServiceResultOutput {
	return o
}

func (o LookupVirtualServiceResultOutput) ToLookupVirtualServiceResultOutputWithContext(ctx context.Context) LookupVirtualServiceResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupVirtualServiceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Routing policy for the virtual service.
func (o LookupVirtualServiceResultOutput) DefaultRoutingPolicies() GetVirtualServiceDefaultRoutingPolicyArrayOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) []GetVirtualServiceDefaultRoutingPolicy {
		return v.DefaultRoutingPolicies
	}).(GetVirtualServiceDefaultRoutingPolicyArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupVirtualServiceResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
func (o LookupVirtualServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupVirtualServiceResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The DNS hostnames of the virtual service that is used by its callers. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are "www.example.com", "*.example.com", "*.com". Can be omitted if the virtual service will only have TCP virtual deployments.
func (o LookupVirtualServiceResultOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupVirtualServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
func (o LookupVirtualServiceResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the service mesh in which this virtual service is created.
func (o LookupVirtualServiceResultOutput) MeshId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.MeshId }).(pulumi.StringOutput)
}

// Mutual TLS settings used when communicating with other virtual services or ingress gateways within the mesh.
func (o LookupVirtualServiceResultOutput) Mtls() GetVirtualServiceMtlArrayOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) []GetVirtualServiceMtl { return v.Mtls }).(GetVirtualServiceMtlArrayOutput)
}

// A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
func (o LookupVirtualServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the Resource.
func (o LookupVirtualServiceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupVirtualServiceResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when this resource was created in an RFC3339 formatted datetime string.
func (o LookupVirtualServiceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when this resource was updated in an RFC3339 formatted datetime string.
func (o LookupVirtualServiceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o LookupVirtualServiceResultOutput) VirtualServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceResult) string { return v.VirtualServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualServiceResultOutput{})
}
