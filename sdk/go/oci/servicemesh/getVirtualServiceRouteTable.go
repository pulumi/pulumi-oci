// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Virtual Service Route Table resource in Oracle Cloud Infrastructure Service Mesh service.
//
// Gets a VirtualServiceRouteTable by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/ServiceMesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceMesh.GetVirtualServiceRouteTable(ctx, &servicemesh.GetVirtualServiceRouteTableArgs{
//				VirtualServiceRouteTableId: testVirtualServiceRouteTableOciServiceMeshVirtualServiceRouteTable.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVirtualServiceRouteTable(ctx *pulumi.Context, args *LookupVirtualServiceRouteTableArgs, opts ...pulumi.InvokeOption) (*LookupVirtualServiceRouteTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualServiceRouteTableResult
	err := ctx.Invoke("oci:ServiceMesh/getVirtualServiceRouteTable:getVirtualServiceRouteTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualServiceRouteTable.
type LookupVirtualServiceRouteTableArgs struct {
	// Unique VirtualServiceRouteTable identifier.
	VirtualServiceRouteTableId string `pulumi:"virtualServiceRouteTableId"`
}

// A collection of values returned by getVirtualServiceRouteTable.
type LookupVirtualServiceRouteTableResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description string `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name string `pulumi:"name"`
	// The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
	Priority int `pulumi:"priority"`
	// The route rules for the virtual service.
	RouteRules []GetVirtualServiceRouteTableRouteRule `pulumi:"routeRules"`
	// The current state of the Resource.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The OCID of the virtual service in which this virtual service route table is created.
	VirtualServiceId           string `pulumi:"virtualServiceId"`
	VirtualServiceRouteTableId string `pulumi:"virtualServiceRouteTableId"`
}

func LookupVirtualServiceRouteTableOutput(ctx *pulumi.Context, args LookupVirtualServiceRouteTableOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualServiceRouteTableResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualServiceRouteTableResult, error) {
			args := v.(LookupVirtualServiceRouteTableArgs)
			r, err := LookupVirtualServiceRouteTable(ctx, &args, opts...)
			var s LookupVirtualServiceRouteTableResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualServiceRouteTableResultOutput)
}

// A collection of arguments for invoking getVirtualServiceRouteTable.
type LookupVirtualServiceRouteTableOutputArgs struct {
	// Unique VirtualServiceRouteTable identifier.
	VirtualServiceRouteTableId pulumi.StringInput `pulumi:"virtualServiceRouteTableId"`
}

func (LookupVirtualServiceRouteTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualServiceRouteTableArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualServiceRouteTable.
type LookupVirtualServiceRouteTableResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualServiceRouteTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualServiceRouteTableResult)(nil)).Elem()
}

func (o LookupVirtualServiceRouteTableResultOutput) ToLookupVirtualServiceRouteTableResultOutput() LookupVirtualServiceRouteTableResultOutput {
	return o
}

func (o LookupVirtualServiceRouteTableResultOutput) ToLookupVirtualServiceRouteTableResultOutputWithContext(ctx context.Context) LookupVirtualServiceRouteTableResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupVirtualServiceRouteTableResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupVirtualServiceRouteTableResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
func (o LookupVirtualServiceRouteTableResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.Description }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupVirtualServiceRouteTableResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupVirtualServiceRouteTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
func (o LookupVirtualServiceRouteTableResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
func (o LookupVirtualServiceRouteTableResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.Name }).(pulumi.StringOutput)
}

// The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
func (o LookupVirtualServiceRouteTableResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) int { return v.Priority }).(pulumi.IntOutput)
}

// The route rules for the virtual service.
func (o LookupVirtualServiceRouteTableResultOutput) RouteRules() GetVirtualServiceRouteTableRouteRuleArrayOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) []GetVirtualServiceRouteTableRouteRule {
		return v.RouteRules
	}).(GetVirtualServiceRouteTableRouteRuleArrayOutput)
}

// The current state of the Resource.
func (o LookupVirtualServiceRouteTableResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupVirtualServiceRouteTableResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when this resource was created in an RFC3339 formatted datetime string.
func (o LookupVirtualServiceRouteTableResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when this resource was updated in an RFC3339 formatted datetime string.
func (o LookupVirtualServiceRouteTableResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The OCID of the virtual service in which this virtual service route table is created.
func (o LookupVirtualServiceRouteTableResultOutput) VirtualServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.VirtualServiceId }).(pulumi.StringOutput)
}

func (o LookupVirtualServiceRouteTableResultOutput) VirtualServiceRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualServiceRouteTableResult) string { return v.VirtualServiceRouteTableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualServiceRouteTableResultOutput{})
}
