// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Virtual Service Route Tables in Oracle Cloud Infrastructure Service Mesh service.
//
// Returns a list of VirtualServiceRouteTable objects.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ServiceMesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceMesh.GetVirtualServiceRouteTables(ctx, &servicemesh.GetVirtualServiceRouteTablesArgs{
//				CompartmentId:    compartmentId,
//				Id:               pulumi.StringRef(virtualServiceRouteTableId),
//				Name:             pulumi.StringRef(virtualServiceRouteTableName),
//				State:            pulumi.StringRef(virtualServiceRouteTableState),
//				VirtualServiceId: pulumi.StringRef(testVirtualService.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVirtualServiceRouteTables(ctx *pulumi.Context, args *GetVirtualServiceRouteTablesArgs, opts ...pulumi.InvokeOption) (*GetVirtualServiceRouteTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVirtualServiceRouteTablesResult
	err := ctx.Invoke("oci:ServiceMesh/getVirtualServiceRouteTables:getVirtualServiceRouteTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualServiceRouteTables.
type GetVirtualServiceRouteTablesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string                               `pulumi:"compartmentId"`
	Filters       []GetVirtualServiceRouteTablesFilter `pulumi:"filters"`
	// Unique VirtualServiceRouteTable identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name *string `pulumi:"name"`
	// A filter to return only resources that match the life cycle state given.
	State *string `pulumi:"state"`
	// Unique VirtualService identifier.
	VirtualServiceId *string `pulumi:"virtualServiceId"`
}

// A collection of values returned by getVirtualServiceRouteTables.
type GetVirtualServiceRouteTablesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                               `pulumi:"compartmentId"`
	Filters       []GetVirtualServiceRouteTablesFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name *string `pulumi:"name"`
	// The current state of the Resource.
	State *string `pulumi:"state"`
	// The OCID of the virtual service in which this virtual service route table is created.
	VirtualServiceId *string `pulumi:"virtualServiceId"`
	// The list of virtual_service_route_table_collection.
	VirtualServiceRouteTableCollections []GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection `pulumi:"virtualServiceRouteTableCollections"`
}

func GetVirtualServiceRouteTablesOutput(ctx *pulumi.Context, args GetVirtualServiceRouteTablesOutputArgs, opts ...pulumi.InvokeOption) GetVirtualServiceRouteTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVirtualServiceRouteTablesResult, error) {
			args := v.(GetVirtualServiceRouteTablesArgs)
			r, err := GetVirtualServiceRouteTables(ctx, &args, opts...)
			var s GetVirtualServiceRouteTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVirtualServiceRouteTablesResultOutput)
}

// A collection of arguments for invoking getVirtualServiceRouteTables.
type GetVirtualServiceRouteTablesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput                           `pulumi:"compartmentId"`
	Filters       GetVirtualServiceRouteTablesFilterArrayInput `pulumi:"filters"`
	// Unique VirtualServiceRouteTable identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only resources that match the life cycle state given.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Unique VirtualService identifier.
	VirtualServiceId pulumi.StringPtrInput `pulumi:"virtualServiceId"`
}

func (GetVirtualServiceRouteTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceRouteTablesArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualServiceRouteTables.
type GetVirtualServiceRouteTablesResultOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceRouteTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceRouteTablesResult)(nil)).Elem()
}

func (o GetVirtualServiceRouteTablesResultOutput) ToGetVirtualServiceRouteTablesResultOutput() GetVirtualServiceRouteTablesResultOutput {
	return o
}

func (o GetVirtualServiceRouteTablesResultOutput) ToGetVirtualServiceRouteTablesResultOutputWithContext(ctx context.Context) GetVirtualServiceRouteTablesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetVirtualServiceRouteTablesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualServiceRouteTablesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetVirtualServiceRouteTablesResultOutput) Filters() GetVirtualServiceRouteTablesFilterArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceRouteTablesResult) []GetVirtualServiceRouteTablesFilter { return v.Filters }).(GetVirtualServiceRouteTablesFilterArrayOutput)
}

// Unique identifier that is immutable on creation.
func (o GetVirtualServiceRouteTablesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualServiceRouteTablesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
func (o GetVirtualServiceRouteTablesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualServiceRouteTablesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current state of the Resource.
func (o GetVirtualServiceRouteTablesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualServiceRouteTablesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The OCID of the virtual service in which this virtual service route table is created.
func (o GetVirtualServiceRouteTablesResultOutput) VirtualServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualServiceRouteTablesResult) *string { return v.VirtualServiceId }).(pulumi.StringPtrOutput)
}

// The list of virtual_service_route_table_collection.
func (o GetVirtualServiceRouteTablesResultOutput) VirtualServiceRouteTableCollections() GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceRouteTablesResult) []GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection {
		return v.VirtualServiceRouteTableCollections
	}).(GetVirtualServiceRouteTablesVirtualServiceRouteTableCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVirtualServiceRouteTablesResultOutput{})
}
