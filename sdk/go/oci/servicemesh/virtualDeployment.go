// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Virtual Deployment resource in Oracle Cloud Infrastructure Service Mesh service.
//
// Creates a new VirtualDeployment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/ServiceMesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceMesh.NewVirtualDeployment(ctx, "test_virtual_deployment", &ServiceMesh.VirtualDeploymentArgs{
//				CompartmentId:    pulumi.Any(compartmentId),
//				Name:             pulumi.Any(virtualDeploymentName),
//				VirtualServiceId: pulumi.Any(testVirtualService.Id),
//				AccessLogging: &servicemesh.VirtualDeploymentAccessLoggingArgs{
//					IsEnabled: pulumi.Any(virtualDeploymentAccessLoggingIsEnabled),
//				},
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(virtualDeploymentDescription),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				Listeners: servicemesh.VirtualDeploymentListenerArray{
//					&servicemesh.VirtualDeploymentListenerArgs{
//						Port:               pulumi.Any(virtualDeploymentListenersPort),
//						Protocol:           pulumi.Any(virtualDeploymentListenersProtocol),
//						IdleTimeoutInMs:    pulumi.Any(virtualDeploymentListenersIdleTimeoutInMs),
//						RequestTimeoutInMs: pulumi.Any(virtualDeploymentListenersRequestTimeoutInMs),
//					},
//				},
//				ServiceDiscovery: &servicemesh.VirtualDeploymentServiceDiscoveryArgs{
//					Type:     pulumi.Any(virtualDeploymentServiceDiscoveryType),
//					Hostname: pulumi.Any(virtualDeploymentServiceDiscoveryHostname),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VirtualDeployments can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:ServiceMesh/virtualDeployment:VirtualDeployment test_virtual_deployment "id"
// ```
type VirtualDeployment struct {
	pulumi.CustomResourceState

	// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
	AccessLogging VirtualDeploymentAccessLoggingOutput `pulumi:"accessLogging"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The listeners for the virtual deployment.
	Listeners VirtualDeploymentListenerArrayOutput `pulumi:"listeners"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) Service Discovery configuration for virtual deployments.
	ServiceDiscovery VirtualDeploymentServiceDiscoveryOutput `pulumi:"serviceDiscovery"`
	// The current state of the Resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId pulumi.StringOutput `pulumi:"virtualServiceId"`
}

// NewVirtualDeployment registers a new resource with the given unique name, arguments, and options.
func NewVirtualDeployment(ctx *pulumi.Context,
	name string, args *VirtualDeploymentArgs, opts ...pulumi.ResourceOption) (*VirtualDeployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.VirtualServiceId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualDeployment
	err := ctx.RegisterResource("oci:ServiceMesh/virtualDeployment:VirtualDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualDeployment gets an existing VirtualDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualDeploymentState, opts ...pulumi.ResourceOption) (*VirtualDeployment, error) {
	var resource VirtualDeployment
	err := ctx.ReadResource("oci:ServiceMesh/virtualDeployment:VirtualDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualDeployment resources.
type virtualDeploymentState struct {
	// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
	AccessLogging *VirtualDeploymentAccessLogging `pulumi:"accessLogging"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The listeners for the virtual deployment.
	Listeners []VirtualDeploymentListener `pulumi:"listeners"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name *string `pulumi:"name"`
	// (Updatable) Service Discovery configuration for virtual deployments.
	ServiceDiscovery *VirtualDeploymentServiceDiscovery `pulumi:"serviceDiscovery"`
	// The current state of the Resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId *string `pulumi:"virtualServiceId"`
}

type VirtualDeploymentState struct {
	// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
	AccessLogging VirtualDeploymentAccessLoggingPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The listeners for the virtual deployment.
	Listeners VirtualDeploymentListenerArrayInput
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name pulumi.StringPtrInput
	// (Updatable) Service Discovery configuration for virtual deployments.
	ServiceDiscovery VirtualDeploymentServiceDiscoveryPtrInput
	// The current state of the Resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId pulumi.StringPtrInput
}

func (VirtualDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualDeploymentState)(nil)).Elem()
}

type virtualDeploymentArgs struct {
	// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
	AccessLogging *VirtualDeploymentAccessLogging `pulumi:"accessLogging"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The listeners for the virtual deployment.
	Listeners []VirtualDeploymentListener `pulumi:"listeners"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name *string `pulumi:"name"`
	// (Updatable) Service Discovery configuration for virtual deployments.
	ServiceDiscovery *VirtualDeploymentServiceDiscovery `pulumi:"serviceDiscovery"`
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId string `pulumi:"virtualServiceId"`
}

// The set of arguments for constructing a VirtualDeployment resource.
type VirtualDeploymentArgs struct {
	// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
	AccessLogging VirtualDeploymentAccessLoggingPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The listeners for the virtual deployment.
	Listeners VirtualDeploymentListenerArrayInput
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name pulumi.StringPtrInput
	// (Updatable) Service Discovery configuration for virtual deployments.
	ServiceDiscovery VirtualDeploymentServiceDiscoveryPtrInput
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId pulumi.StringInput
}

func (VirtualDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualDeploymentArgs)(nil)).Elem()
}

type VirtualDeploymentInput interface {
	pulumi.Input

	ToVirtualDeploymentOutput() VirtualDeploymentOutput
	ToVirtualDeploymentOutputWithContext(ctx context.Context) VirtualDeploymentOutput
}

func (*VirtualDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualDeployment)(nil)).Elem()
}

func (i *VirtualDeployment) ToVirtualDeploymentOutput() VirtualDeploymentOutput {
	return i.ToVirtualDeploymentOutputWithContext(context.Background())
}

func (i *VirtualDeployment) ToVirtualDeploymentOutputWithContext(ctx context.Context) VirtualDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDeploymentOutput)
}

// VirtualDeploymentArrayInput is an input type that accepts VirtualDeploymentArray and VirtualDeploymentArrayOutput values.
// You can construct a concrete instance of `VirtualDeploymentArrayInput` via:
//
//	VirtualDeploymentArray{ VirtualDeploymentArgs{...} }
type VirtualDeploymentArrayInput interface {
	pulumi.Input

	ToVirtualDeploymentArrayOutput() VirtualDeploymentArrayOutput
	ToVirtualDeploymentArrayOutputWithContext(context.Context) VirtualDeploymentArrayOutput
}

type VirtualDeploymentArray []VirtualDeploymentInput

func (VirtualDeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualDeployment)(nil)).Elem()
}

func (i VirtualDeploymentArray) ToVirtualDeploymentArrayOutput() VirtualDeploymentArrayOutput {
	return i.ToVirtualDeploymentArrayOutputWithContext(context.Background())
}

func (i VirtualDeploymentArray) ToVirtualDeploymentArrayOutputWithContext(ctx context.Context) VirtualDeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDeploymentArrayOutput)
}

// VirtualDeploymentMapInput is an input type that accepts VirtualDeploymentMap and VirtualDeploymentMapOutput values.
// You can construct a concrete instance of `VirtualDeploymentMapInput` via:
//
//	VirtualDeploymentMap{ "key": VirtualDeploymentArgs{...} }
type VirtualDeploymentMapInput interface {
	pulumi.Input

	ToVirtualDeploymentMapOutput() VirtualDeploymentMapOutput
	ToVirtualDeploymentMapOutputWithContext(context.Context) VirtualDeploymentMapOutput
}

type VirtualDeploymentMap map[string]VirtualDeploymentInput

func (VirtualDeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualDeployment)(nil)).Elem()
}

func (i VirtualDeploymentMap) ToVirtualDeploymentMapOutput() VirtualDeploymentMapOutput {
	return i.ToVirtualDeploymentMapOutputWithContext(context.Background())
}

func (i VirtualDeploymentMap) ToVirtualDeploymentMapOutputWithContext(ctx context.Context) VirtualDeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDeploymentMapOutput)
}

type VirtualDeploymentOutput struct{ *pulumi.OutputState }

func (VirtualDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualDeployment)(nil)).Elem()
}

func (o VirtualDeploymentOutput) ToVirtualDeploymentOutput() VirtualDeploymentOutput {
	return o
}

func (o VirtualDeploymentOutput) ToVirtualDeploymentOutputWithContext(ctx context.Context) VirtualDeploymentOutput {
	return o
}

// (Updatable) This configuration determines if logging is enabled and where the logs will be output.
func (o VirtualDeploymentOutput) AccessLogging() VirtualDeploymentAccessLoggingOutput {
	return o.ApplyT(func(v *VirtualDeployment) VirtualDeploymentAccessLoggingOutput { return v.AccessLogging }).(VirtualDeploymentAccessLoggingOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o VirtualDeploymentOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o VirtualDeploymentOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
func (o VirtualDeploymentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o VirtualDeploymentOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
func (o VirtualDeploymentOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The listeners for the virtual deployment.
func (o VirtualDeploymentOutput) Listeners() VirtualDeploymentListenerArrayOutput {
	return o.ApplyT(func(v *VirtualDeployment) VirtualDeploymentListenerArrayOutput { return v.Listeners }).(VirtualDeploymentListenerArrayOutput)
}

// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
func (o VirtualDeploymentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) Service Discovery configuration for virtual deployments.
func (o VirtualDeploymentOutput) ServiceDiscovery() VirtualDeploymentServiceDiscoveryOutput {
	return o.ApplyT(func(v *VirtualDeployment) VirtualDeploymentServiceDiscoveryOutput { return v.ServiceDiscovery }).(VirtualDeploymentServiceDiscoveryOutput)
}

// The current state of the Resource.
func (o VirtualDeploymentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o VirtualDeploymentOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when this resource was created in an RFC3339 formatted datetime string.
func (o VirtualDeploymentOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when this resource was updated in an RFC3339 formatted datetime string.
func (o VirtualDeploymentOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The OCID of the service mesh in which this access policy is created.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o VirtualDeploymentOutput) VirtualServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualDeployment) pulumi.StringOutput { return v.VirtualServiceId }).(pulumi.StringOutput)
}

type VirtualDeploymentArrayOutput struct{ *pulumi.OutputState }

func (VirtualDeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualDeployment)(nil)).Elem()
}

func (o VirtualDeploymentArrayOutput) ToVirtualDeploymentArrayOutput() VirtualDeploymentArrayOutput {
	return o
}

func (o VirtualDeploymentArrayOutput) ToVirtualDeploymentArrayOutputWithContext(ctx context.Context) VirtualDeploymentArrayOutput {
	return o
}

func (o VirtualDeploymentArrayOutput) Index(i pulumi.IntInput) VirtualDeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualDeployment {
		return vs[0].([]*VirtualDeployment)[vs[1].(int)]
	}).(VirtualDeploymentOutput)
}

type VirtualDeploymentMapOutput struct{ *pulumi.OutputState }

func (VirtualDeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualDeployment)(nil)).Elem()
}

func (o VirtualDeploymentMapOutput) ToVirtualDeploymentMapOutput() VirtualDeploymentMapOutput {
	return o
}

func (o VirtualDeploymentMapOutput) ToVirtualDeploymentMapOutputWithContext(ctx context.Context) VirtualDeploymentMapOutput {
	return o
}

func (o VirtualDeploymentMapOutput) MapIndex(k pulumi.StringInput) VirtualDeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualDeployment {
		return vs[0].(map[string]*VirtualDeployment)[vs[1].(string)]
	}).(VirtualDeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualDeploymentInput)(nil)).Elem(), &VirtualDeployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualDeploymentArrayInput)(nil)).Elem(), VirtualDeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualDeploymentMapInput)(nil)).Elem(), VirtualDeploymentMap{})
	pulumi.RegisterOutputType(VirtualDeploymentOutput{})
	pulumi.RegisterOutputType(VirtualDeploymentArrayOutput{})
	pulumi.RegisterOutputType(VirtualDeploymentMapOutput{})
}
