// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Virtual Service Route Table resource in Oracle Cloud Infrastructure Service Mesh service.
//
// Creates a new VirtualServiceRouteTable.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ServiceMesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ServiceMesh.NewVirtualServiceRouteTable(ctx, "test_virtual_service_route_table", &ServiceMesh.VirtualServiceRouteTableArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Name:          pulumi.Any(virtualServiceRouteTableName),
//				RouteRules: servicemesh.VirtualServiceRouteTableRouteRuleArray{
//					&servicemesh.VirtualServiceRouteTableRouteRuleArgs{
//						Destinations: servicemesh.VirtualServiceRouteTableRouteRuleDestinationArray{
//							&servicemesh.VirtualServiceRouteTableRouteRuleDestinationArgs{
//								VirtualDeploymentId: pulumi.Any(testVirtualDeployment.Id),
//								Weight:              pulumi.Any(virtualServiceRouteTableRouteRulesDestinationsWeight),
//								Port:                pulumi.Any(virtualServiceRouteTableRouteRulesDestinationsPort),
//							},
//						},
//						Type:               pulumi.Any(virtualServiceRouteTableRouteRulesType),
//						IsGrpc:             pulumi.Any(virtualServiceRouteTableRouteRulesIsGrpc),
//						Path:               pulumi.Any(virtualServiceRouteTableRouteRulesPath),
//						PathType:           pulumi.Any(virtualServiceRouteTableRouteRulesPathType),
//						RequestTimeoutInMs: pulumi.Any(virtualServiceRouteTableRouteRulesRequestTimeoutInMs),
//					},
//				},
//				VirtualServiceId: pulumi.Any(testVirtualService.Id),
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				Description: pulumi.Any(virtualServiceRouteTableDescription),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				Priority: pulumi.Any(virtualServiceRouteTablePriority),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VirtualServiceRouteTables can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:ServiceMesh/virtualServiceRouteTable:VirtualServiceRouteTable test_virtual_service_route_table "id"
// ```
type VirtualServiceRouteTable struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// (Updatable) The route rules for the virtual service.
	RouteRules VirtualServiceRouteTableRouteRuleArrayOutput `pulumi:"routeRules"`
	// The current state of the Resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId pulumi.StringOutput `pulumi:"virtualServiceId"`
}

// NewVirtualServiceRouteTable registers a new resource with the given unique name, arguments, and options.
func NewVirtualServiceRouteTable(ctx *pulumi.Context,
	name string, args *VirtualServiceRouteTableArgs, opts ...pulumi.ResourceOption) (*VirtualServiceRouteTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.RouteRules == nil {
		return nil, errors.New("invalid value for required argument 'RouteRules'")
	}
	if args.VirtualServiceId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualServiceRouteTable
	err := ctx.RegisterResource("oci:ServiceMesh/virtualServiceRouteTable:VirtualServiceRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualServiceRouteTable gets an existing VirtualServiceRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualServiceRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualServiceRouteTableState, opts ...pulumi.ResourceOption) (*VirtualServiceRouteTable, error) {
	var resource VirtualServiceRouteTable
	err := ctx.ReadResource("oci:ServiceMesh/virtualServiceRouteTable:VirtualServiceRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualServiceRouteTable resources.
type virtualServiceRouteTableState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name *string `pulumi:"name"`
	// (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
	Priority *int `pulumi:"priority"`
	// (Updatable) The route rules for the virtual service.
	RouteRules []VirtualServiceRouteTableRouteRule `pulumi:"routeRules"`
	// The current state of the Resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId *string `pulumi:"virtualServiceId"`
}

type VirtualServiceRouteTableState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name pulumi.StringPtrInput
	// (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
	Priority pulumi.IntPtrInput
	// (Updatable) The route rules for the virtual service.
	RouteRules VirtualServiceRouteTableRouteRuleArrayInput
	// The current state of the Resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time when this resource was created in an RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time when this resource was updated in an RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId pulumi.StringPtrInput
}

func (VirtualServiceRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualServiceRouteTableState)(nil)).Elem()
}

type virtualServiceRouteTableArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name *string `pulumi:"name"`
	// (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
	Priority *int `pulumi:"priority"`
	// (Updatable) The route rules for the virtual service.
	RouteRules []VirtualServiceRouteTableRouteRule `pulumi:"routeRules"`
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId string `pulumi:"virtualServiceId"`
}

// The set of arguments for constructing a VirtualServiceRouteTable resource.
type VirtualServiceRouteTableArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
	Name pulumi.StringPtrInput
	// (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
	Priority pulumi.IntPtrInput
	// (Updatable) The route rules for the virtual service.
	RouteRules VirtualServiceRouteTableRouteRuleArrayInput
	// The OCID of the service mesh in which this access policy is created.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VirtualServiceId pulumi.StringInput
}

func (VirtualServiceRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualServiceRouteTableArgs)(nil)).Elem()
}

type VirtualServiceRouteTableInput interface {
	pulumi.Input

	ToVirtualServiceRouteTableOutput() VirtualServiceRouteTableOutput
	ToVirtualServiceRouteTableOutputWithContext(ctx context.Context) VirtualServiceRouteTableOutput
}

func (*VirtualServiceRouteTable) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceRouteTable)(nil)).Elem()
}

func (i *VirtualServiceRouteTable) ToVirtualServiceRouteTableOutput() VirtualServiceRouteTableOutput {
	return i.ToVirtualServiceRouteTableOutputWithContext(context.Background())
}

func (i *VirtualServiceRouteTable) ToVirtualServiceRouteTableOutputWithContext(ctx context.Context) VirtualServiceRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceRouteTableOutput)
}

// VirtualServiceRouteTableArrayInput is an input type that accepts VirtualServiceRouteTableArray and VirtualServiceRouteTableArrayOutput values.
// You can construct a concrete instance of `VirtualServiceRouteTableArrayInput` via:
//
//	VirtualServiceRouteTableArray{ VirtualServiceRouteTableArgs{...} }
type VirtualServiceRouteTableArrayInput interface {
	pulumi.Input

	ToVirtualServiceRouteTableArrayOutput() VirtualServiceRouteTableArrayOutput
	ToVirtualServiceRouteTableArrayOutputWithContext(context.Context) VirtualServiceRouteTableArrayOutput
}

type VirtualServiceRouteTableArray []VirtualServiceRouteTableInput

func (VirtualServiceRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualServiceRouteTable)(nil)).Elem()
}

func (i VirtualServiceRouteTableArray) ToVirtualServiceRouteTableArrayOutput() VirtualServiceRouteTableArrayOutput {
	return i.ToVirtualServiceRouteTableArrayOutputWithContext(context.Background())
}

func (i VirtualServiceRouteTableArray) ToVirtualServiceRouteTableArrayOutputWithContext(ctx context.Context) VirtualServiceRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceRouteTableArrayOutput)
}

// VirtualServiceRouteTableMapInput is an input type that accepts VirtualServiceRouteTableMap and VirtualServiceRouteTableMapOutput values.
// You can construct a concrete instance of `VirtualServiceRouteTableMapInput` via:
//
//	VirtualServiceRouteTableMap{ "key": VirtualServiceRouteTableArgs{...} }
type VirtualServiceRouteTableMapInput interface {
	pulumi.Input

	ToVirtualServiceRouteTableMapOutput() VirtualServiceRouteTableMapOutput
	ToVirtualServiceRouteTableMapOutputWithContext(context.Context) VirtualServiceRouteTableMapOutput
}

type VirtualServiceRouteTableMap map[string]VirtualServiceRouteTableInput

func (VirtualServiceRouteTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualServiceRouteTable)(nil)).Elem()
}

func (i VirtualServiceRouteTableMap) ToVirtualServiceRouteTableMapOutput() VirtualServiceRouteTableMapOutput {
	return i.ToVirtualServiceRouteTableMapOutputWithContext(context.Background())
}

func (i VirtualServiceRouteTableMap) ToVirtualServiceRouteTableMapOutputWithContext(ctx context.Context) VirtualServiceRouteTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceRouteTableMapOutput)
}

type VirtualServiceRouteTableOutput struct{ *pulumi.OutputState }

func (VirtualServiceRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceRouteTable)(nil)).Elem()
}

func (o VirtualServiceRouteTableOutput) ToVirtualServiceRouteTableOutput() VirtualServiceRouteTableOutput {
	return o
}

func (o VirtualServiceRouteTableOutput) ToVirtualServiceRouteTableOutputWithContext(ctx context.Context) VirtualServiceRouteTableOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o VirtualServiceRouteTableOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o VirtualServiceRouteTableOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
func (o VirtualServiceRouteTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o VirtualServiceRouteTableOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
func (o VirtualServiceRouteTableOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
func (o VirtualServiceRouteTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) The priority of the route table. Lower value means higher priority. The routes are declared based on the priority.
func (o VirtualServiceRouteTableOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// (Updatable) The route rules for the virtual service.
func (o VirtualServiceRouteTableOutput) RouteRules() VirtualServiceRouteTableRouteRuleArrayOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) VirtualServiceRouteTableRouteRuleArrayOutput { return v.RouteRules }).(VirtualServiceRouteTableRouteRuleArrayOutput)
}

// The current state of the Resource.
func (o VirtualServiceRouteTableOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o VirtualServiceRouteTableOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time when this resource was created in an RFC3339 formatted datetime string.
func (o VirtualServiceRouteTableOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when this resource was updated in an RFC3339 formatted datetime string.
func (o VirtualServiceRouteTableOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The OCID of the service mesh in which this access policy is created.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o VirtualServiceRouteTableOutput) VirtualServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualServiceRouteTable) pulumi.StringOutput { return v.VirtualServiceId }).(pulumi.StringOutput)
}

type VirtualServiceRouteTableArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualServiceRouteTable)(nil)).Elem()
}

func (o VirtualServiceRouteTableArrayOutput) ToVirtualServiceRouteTableArrayOutput() VirtualServiceRouteTableArrayOutput {
	return o
}

func (o VirtualServiceRouteTableArrayOutput) ToVirtualServiceRouteTableArrayOutputWithContext(ctx context.Context) VirtualServiceRouteTableArrayOutput {
	return o
}

func (o VirtualServiceRouteTableArrayOutput) Index(i pulumi.IntInput) VirtualServiceRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualServiceRouteTable {
		return vs[0].([]*VirtualServiceRouteTable)[vs[1].(int)]
	}).(VirtualServiceRouteTableOutput)
}

type VirtualServiceRouteTableMapOutput struct{ *pulumi.OutputState }

func (VirtualServiceRouteTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualServiceRouteTable)(nil)).Elem()
}

func (o VirtualServiceRouteTableMapOutput) ToVirtualServiceRouteTableMapOutput() VirtualServiceRouteTableMapOutput {
	return o
}

func (o VirtualServiceRouteTableMapOutput) ToVirtualServiceRouteTableMapOutputWithContext(ctx context.Context) VirtualServiceRouteTableMapOutput {
	return o
}

func (o VirtualServiceRouteTableMapOutput) MapIndex(k pulumi.StringInput) VirtualServiceRouteTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualServiceRouteTable {
		return vs[0].(map[string]*VirtualServiceRouteTable)[vs[1].(string)]
	}).(VirtualServiceRouteTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceRouteTableInput)(nil)).Elem(), &VirtualServiceRouteTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceRouteTableArrayInput)(nil)).Elem(), VirtualServiceRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceRouteTableMapInput)(nil)).Elem(), VirtualServiceRouteTableMap{})
	pulumi.RegisterOutputType(VirtualServiceRouteTableOutput{})
	pulumi.RegisterOutputType(VirtualServiceRouteTableArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceRouteTableMapOutput{})
}
