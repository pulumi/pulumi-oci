// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Baselineable Metric resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// # Creates the specified Baseline-able metric
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/stackmonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stackmonitoring.NewBaselineableMetric(ctx, "test_baselineable_metric", &stackmonitoring.BaselineableMetricArgs{
//				Column:        pulumi.Any(baselineableMetricColumn),
//				CompartmentId: pulumi.Any(compartmentId),
//				Namespace:     pulumi.Any(baselineableMetricNamespace),
//				Name:          pulumi.Any(baselineableMetricName),
//				ResourceGroup: pulumi.Any(baselineableMetricResourceGroup),
//				ResourceType:  pulumi.Any(baselineableMetricResourceType),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BaselineableMetrics can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:StackMonitoring/baselineableMetric:BaselineableMetric test_baselineable_metric "id"
// ```
type BaselineableMetric struct {
	pulumi.CustomResourceState

	// (Updatable) metric column name
	Column pulumi.StringOutput `pulumi:"column"`
	// (Updatable) OCID of the compartment
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Created user id
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Is the metric created out of box, default false
	IsOutOfBox pulumi.BoolOutput `pulumi:"isOutOfBox"`
	// last Updated user id
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// (Updatable) name of the metric
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) namespace of the metric
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// (Updatable) Resource group of the metric
	ResourceGroup pulumi.StringOutput `pulumi:"resourceGroup"`
	// (Updatable) Resource type of the metric
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The current lifecycle state of the metric extension
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// OCID of the tenancy
	TenancyId pulumi.StringOutput `pulumi:"tenancyId"`
	// creation date
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// last updated time
	TimeLastUpdated pulumi.StringOutput `pulumi:"timeLastUpdated"`
}

// NewBaselineableMetric registers a new resource with the given unique name, arguments, and options.
func NewBaselineableMetric(ctx *pulumi.Context,
	name string, args *BaselineableMetricArgs, opts ...pulumi.ResourceOption) (*BaselineableMetric, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Column == nil {
		return nil, errors.New("invalid value for required argument 'Column'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BaselineableMetric
	err := ctx.RegisterResource("oci:StackMonitoring/baselineableMetric:BaselineableMetric", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBaselineableMetric gets an existing BaselineableMetric resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBaselineableMetric(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BaselineableMetricState, opts ...pulumi.ResourceOption) (*BaselineableMetric, error) {
	var resource BaselineableMetric
	err := ctx.ReadResource("oci:StackMonitoring/baselineableMetric:BaselineableMetric", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BaselineableMetric resources.
type baselineableMetricState struct {
	// (Updatable) metric column name
	Column *string `pulumi:"column"`
	// (Updatable) OCID of the compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// Created user id
	CreatedBy *string `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Is the metric created out of box, default false
	IsOutOfBox *bool `pulumi:"isOutOfBox"`
	// last Updated user id
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// (Updatable) name of the metric
	Name *string `pulumi:"name"`
	// (Updatable) namespace of the metric
	Namespace *string `pulumi:"namespace"`
	// (Updatable) Resource group of the metric
	ResourceGroup *string `pulumi:"resourceGroup"`
	// (Updatable) Resource type of the metric
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType *string `pulumi:"resourceType"`
	// The current lifecycle state of the metric extension
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// OCID of the tenancy
	TenancyId *string `pulumi:"tenancyId"`
	// creation date
	TimeCreated *string `pulumi:"timeCreated"`
	// last updated time
	TimeLastUpdated *string `pulumi:"timeLastUpdated"`
}

type BaselineableMetricState struct {
	// (Updatable) metric column name
	Column pulumi.StringPtrInput
	// (Updatable) OCID of the compartment
	CompartmentId pulumi.StringPtrInput
	// Created user id
	CreatedBy pulumi.StringPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Is the metric created out of box, default false
	IsOutOfBox pulumi.BoolPtrInput
	// last Updated user id
	LastUpdatedBy pulumi.StringPtrInput
	// (Updatable) name of the metric
	Name pulumi.StringPtrInput
	// (Updatable) namespace of the metric
	Namespace pulumi.StringPtrInput
	// (Updatable) Resource group of the metric
	ResourceGroup pulumi.StringPtrInput
	// (Updatable) Resource type of the metric
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType pulumi.StringPtrInput
	// The current lifecycle state of the metric extension
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// OCID of the tenancy
	TenancyId pulumi.StringPtrInput
	// creation date
	TimeCreated pulumi.StringPtrInput
	// last updated time
	TimeLastUpdated pulumi.StringPtrInput
}

func (BaselineableMetricState) ElementType() reflect.Type {
	return reflect.TypeOf((*baselineableMetricState)(nil)).Elem()
}

type baselineableMetricArgs struct {
	// (Updatable) metric column name
	Column string `pulumi:"column"`
	// (Updatable) OCID of the compartment
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) name of the metric
	Name *string `pulumi:"name"`
	// (Updatable) namespace of the metric
	Namespace string `pulumi:"namespace"`
	// (Updatable) Resource group of the metric
	ResourceGroup *string `pulumi:"resourceGroup"`
	// (Updatable) Resource type of the metric
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType *string `pulumi:"resourceType"`
}

// The set of arguments for constructing a BaselineableMetric resource.
type BaselineableMetricArgs struct {
	// (Updatable) metric column name
	Column pulumi.StringInput
	// (Updatable) OCID of the compartment
	CompartmentId pulumi.StringInput
	// (Updatable) name of the metric
	Name pulumi.StringPtrInput
	// (Updatable) namespace of the metric
	Namespace pulumi.StringInput
	// (Updatable) Resource group of the metric
	ResourceGroup pulumi.StringPtrInput
	// (Updatable) Resource type of the metric
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ResourceType pulumi.StringPtrInput
}

func (BaselineableMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*baselineableMetricArgs)(nil)).Elem()
}

type BaselineableMetricInput interface {
	pulumi.Input

	ToBaselineableMetricOutput() BaselineableMetricOutput
	ToBaselineableMetricOutputWithContext(ctx context.Context) BaselineableMetricOutput
}

func (*BaselineableMetric) ElementType() reflect.Type {
	return reflect.TypeOf((**BaselineableMetric)(nil)).Elem()
}

func (i *BaselineableMetric) ToBaselineableMetricOutput() BaselineableMetricOutput {
	return i.ToBaselineableMetricOutputWithContext(context.Background())
}

func (i *BaselineableMetric) ToBaselineableMetricOutputWithContext(ctx context.Context) BaselineableMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineableMetricOutput)
}

// BaselineableMetricArrayInput is an input type that accepts BaselineableMetricArray and BaselineableMetricArrayOutput values.
// You can construct a concrete instance of `BaselineableMetricArrayInput` via:
//
//	BaselineableMetricArray{ BaselineableMetricArgs{...} }
type BaselineableMetricArrayInput interface {
	pulumi.Input

	ToBaselineableMetricArrayOutput() BaselineableMetricArrayOutput
	ToBaselineableMetricArrayOutputWithContext(context.Context) BaselineableMetricArrayOutput
}

type BaselineableMetricArray []BaselineableMetricInput

func (BaselineableMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BaselineableMetric)(nil)).Elem()
}

func (i BaselineableMetricArray) ToBaselineableMetricArrayOutput() BaselineableMetricArrayOutput {
	return i.ToBaselineableMetricArrayOutputWithContext(context.Background())
}

func (i BaselineableMetricArray) ToBaselineableMetricArrayOutputWithContext(ctx context.Context) BaselineableMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineableMetricArrayOutput)
}

// BaselineableMetricMapInput is an input type that accepts BaselineableMetricMap and BaselineableMetricMapOutput values.
// You can construct a concrete instance of `BaselineableMetricMapInput` via:
//
//	BaselineableMetricMap{ "key": BaselineableMetricArgs{...} }
type BaselineableMetricMapInput interface {
	pulumi.Input

	ToBaselineableMetricMapOutput() BaselineableMetricMapOutput
	ToBaselineableMetricMapOutputWithContext(context.Context) BaselineableMetricMapOutput
}

type BaselineableMetricMap map[string]BaselineableMetricInput

func (BaselineableMetricMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BaselineableMetric)(nil)).Elem()
}

func (i BaselineableMetricMap) ToBaselineableMetricMapOutput() BaselineableMetricMapOutput {
	return i.ToBaselineableMetricMapOutputWithContext(context.Background())
}

func (i BaselineableMetricMap) ToBaselineableMetricMapOutputWithContext(ctx context.Context) BaselineableMetricMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaselineableMetricMapOutput)
}

type BaselineableMetricOutput struct{ *pulumi.OutputState }

func (BaselineableMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaselineableMetric)(nil)).Elem()
}

func (o BaselineableMetricOutput) ToBaselineableMetricOutput() BaselineableMetricOutput {
	return o
}

func (o BaselineableMetricOutput) ToBaselineableMetricOutputWithContext(ctx context.Context) BaselineableMetricOutput {
	return o
}

// (Updatable) metric column name
func (o BaselineableMetricOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.Column }).(pulumi.StringOutput)
}

// (Updatable) OCID of the compartment
func (o BaselineableMetricOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Created user id
func (o BaselineableMetricOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o BaselineableMetricOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o BaselineableMetricOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Is the metric created out of box, default false
func (o BaselineableMetricOutput) IsOutOfBox() pulumi.BoolOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.BoolOutput { return v.IsOutOfBox }).(pulumi.BoolOutput)
}

// last Updated user id
func (o BaselineableMetricOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// (Updatable) name of the metric
func (o BaselineableMetricOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) namespace of the metric
func (o BaselineableMetricOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// (Updatable) Resource group of the metric
func (o BaselineableMetricOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.ResourceGroup }).(pulumi.StringOutput)
}

// (Updatable) Resource type of the metric
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o BaselineableMetricOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// The current lifecycle state of the metric extension
func (o BaselineableMetricOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o BaselineableMetricOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// OCID of the tenancy
func (o BaselineableMetricOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.TenancyId }).(pulumi.StringOutput)
}

// creation date
func (o BaselineableMetricOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// last updated time
func (o BaselineableMetricOutput) TimeLastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *BaselineableMetric) pulumi.StringOutput { return v.TimeLastUpdated }).(pulumi.StringOutput)
}

type BaselineableMetricArrayOutput struct{ *pulumi.OutputState }

func (BaselineableMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BaselineableMetric)(nil)).Elem()
}

func (o BaselineableMetricArrayOutput) ToBaselineableMetricArrayOutput() BaselineableMetricArrayOutput {
	return o
}

func (o BaselineableMetricArrayOutput) ToBaselineableMetricArrayOutputWithContext(ctx context.Context) BaselineableMetricArrayOutput {
	return o
}

func (o BaselineableMetricArrayOutput) Index(i pulumi.IntInput) BaselineableMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BaselineableMetric {
		return vs[0].([]*BaselineableMetric)[vs[1].(int)]
	}).(BaselineableMetricOutput)
}

type BaselineableMetricMapOutput struct{ *pulumi.OutputState }

func (BaselineableMetricMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BaselineableMetric)(nil)).Elem()
}

func (o BaselineableMetricMapOutput) ToBaselineableMetricMapOutput() BaselineableMetricMapOutput {
	return o
}

func (o BaselineableMetricMapOutput) ToBaselineableMetricMapOutputWithContext(ctx context.Context) BaselineableMetricMapOutput {
	return o
}

func (o BaselineableMetricMapOutput) MapIndex(k pulumi.StringInput) BaselineableMetricOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BaselineableMetric {
		return vs[0].(map[string]*BaselineableMetric)[vs[1].(string)]
	}).(BaselineableMetricOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BaselineableMetricInput)(nil)).Elem(), &BaselineableMetric{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaselineableMetricArrayInput)(nil)).Elem(), BaselineableMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaselineableMetricMapInput)(nil)).Elem(), BaselineableMetricMap{})
	pulumi.RegisterOutputType(BaselineableMetricOutput{})
	pulumi.RegisterOutputType(BaselineableMetricArrayOutput{})
	pulumi.RegisterOutputType(BaselineableMetricMapOutput{})
}
