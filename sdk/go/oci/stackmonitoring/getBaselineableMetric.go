// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Baselineable Metric resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// # Get the Baseline-able metric for the given id
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/stackmonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stackmonitoring.GetBaselineableMetric(ctx, &stackmonitoring.GetBaselineableMetricArgs{
//				BaselineableMetricId: testBaselineableMetricOciStackMonitoringBaselineableMetric.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBaselineableMetric(ctx *pulumi.Context, args *LookupBaselineableMetricArgs, opts ...pulumi.InvokeOption) (*LookupBaselineableMetricResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBaselineableMetricResult
	err := ctx.Invoke("oci:StackMonitoring/getBaselineableMetric:getBaselineableMetric", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBaselineableMetric.
type LookupBaselineableMetricArgs struct {
	// Identifier for the metric
	BaselineableMetricId string `pulumi:"baselineableMetricId"`
}

// A collection of values returned by getBaselineableMetric.
type LookupBaselineableMetricResult struct {
	BaselineableMetricId string `pulumi:"baselineableMetricId"`
	// metric column name
	Column string `pulumi:"column"`
	// OCID of the compartment
	CompartmentId string `pulumi:"compartmentId"`
	// Created user id
	CreatedBy string `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID of the metric
	Id string `pulumi:"id"`
	// Is the metric created out of box, default false
	IsOutOfBox bool `pulumi:"isOutOfBox"`
	// last Updated user id
	LastUpdatedBy string `pulumi:"lastUpdatedBy"`
	// name of the metric
	Name string `pulumi:"name"`
	// namespace of the metric
	Namespace string `pulumi:"namespace"`
	// Resource group of the metric
	ResourceGroup string `pulumi:"resourceGroup"`
	// Resource type of the metric
	ResourceType string `pulumi:"resourceType"`
	// The current lifecycle state of the metric extension
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// OCID of the tenancy
	TenancyId string `pulumi:"tenancyId"`
	// creation date
	TimeCreated string `pulumi:"timeCreated"`
	// last updated time
	TimeLastUpdated string `pulumi:"timeLastUpdated"`
}

func LookupBaselineableMetricOutput(ctx *pulumi.Context, args LookupBaselineableMetricOutputArgs, opts ...pulumi.InvokeOption) LookupBaselineableMetricResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBaselineableMetricResultOutput, error) {
			args := v.(LookupBaselineableMetricArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:StackMonitoring/getBaselineableMetric:getBaselineableMetric", args, LookupBaselineableMetricResultOutput{}, options).(LookupBaselineableMetricResultOutput), nil
		}).(LookupBaselineableMetricResultOutput)
}

// A collection of arguments for invoking getBaselineableMetric.
type LookupBaselineableMetricOutputArgs struct {
	// Identifier for the metric
	BaselineableMetricId pulumi.StringInput `pulumi:"baselineableMetricId"`
}

func (LookupBaselineableMetricOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBaselineableMetricArgs)(nil)).Elem()
}

// A collection of values returned by getBaselineableMetric.
type LookupBaselineableMetricResultOutput struct{ *pulumi.OutputState }

func (LookupBaselineableMetricResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBaselineableMetricResult)(nil)).Elem()
}

func (o LookupBaselineableMetricResultOutput) ToLookupBaselineableMetricResultOutput() LookupBaselineableMetricResultOutput {
	return o
}

func (o LookupBaselineableMetricResultOutput) ToLookupBaselineableMetricResultOutputWithContext(ctx context.Context) LookupBaselineableMetricResultOutput {
	return o
}

func (o LookupBaselineableMetricResultOutput) BaselineableMetricId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.BaselineableMetricId }).(pulumi.StringOutput)
}

// metric column name
func (o LookupBaselineableMetricResultOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.Column }).(pulumi.StringOutput)
}

// OCID of the compartment
func (o LookupBaselineableMetricResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Created user id
func (o LookupBaselineableMetricResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupBaselineableMetricResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupBaselineableMetricResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// OCID of the metric
func (o LookupBaselineableMetricResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.Id }).(pulumi.StringOutput)
}

// Is the metric created out of box, default false
func (o LookupBaselineableMetricResultOutput) IsOutOfBox() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) bool { return v.IsOutOfBox }).(pulumi.BoolOutput)
}

// last Updated user id
func (o LookupBaselineableMetricResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// name of the metric
func (o LookupBaselineableMetricResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.Name }).(pulumi.StringOutput)
}

// namespace of the metric
func (o LookupBaselineableMetricResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// Resource group of the metric
func (o LookupBaselineableMetricResultOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Resource type of the metric
func (o LookupBaselineableMetricResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The current lifecycle state of the metric extension
func (o LookupBaselineableMetricResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupBaselineableMetricResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// OCID of the tenancy
func (o LookupBaselineableMetricResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

// creation date
func (o LookupBaselineableMetricResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// last updated time
func (o LookupBaselineableMetricResultOutput) TimeLastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBaselineableMetricResult) string { return v.TimeLastUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBaselineableMetricResultOutput{})
}
