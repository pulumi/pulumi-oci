// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Configs in Oracle Cloud Infrastructure Stack Monitoring service.
//
// Get a list of configurations in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/StackMonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := StackMonitoring.GetConfigs(ctx, &stackmonitoring.GetConfigsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(configDisplayName),
//				State:         pulumi.StringRef(configState),
//				Type:          pulumi.StringRef(configType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConfigs(ctx *pulumi.Context, args *GetConfigsArgs, opts ...pulumi.InvokeOption) (*GetConfigsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConfigsResult
	err := ctx.Invoke("oci:StackMonitoring/getConfigs:getConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfigs.
type GetConfigsArgs struct {
	// The ID of the compartment in which data is listed.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetConfigsFilter `pulumi:"filters"`
	// The current state of the Config.
	State *string `pulumi:"state"`
	// A filter to return only configuration items for a given config type. The only valid config type is `"AUTO_PROMOTE"`
	Type *string `pulumi:"type"`
}

// A collection of values returned by getConfigs.
type GetConfigsResult struct {
	// The OCID of the compartment containing the configuration.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of config_collection.
	ConfigCollections []GetConfigsConfigCollection `pulumi:"configCollections"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetConfigsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the configuration.
	State *string `pulumi:"state"`
	Type  *string `pulumi:"type"`
}

func GetConfigsOutput(ctx *pulumi.Context, args GetConfigsOutputArgs, opts ...pulumi.InvokeOption) GetConfigsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConfigsResultOutput, error) {
			args := v.(GetConfigsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:StackMonitoring/getConfigs:getConfigs", args, GetConfigsResultOutput{}, options).(GetConfigsResultOutput), nil
		}).(GetConfigsResultOutput)
}

// A collection of arguments for invoking getConfigs.
type GetConfigsOutputArgs struct {
	// The ID of the compartment in which data is listed.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput      `pulumi:"displayName"`
	Filters     GetConfigsFilterArrayInput `pulumi:"filters"`
	// The current state of the Config.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only configuration items for a given config type. The only valid config type is `"AUTO_PROMOTE"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getConfigs.
type GetConfigsResultOutput struct{ *pulumi.OutputState }

func (GetConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsResult)(nil)).Elem()
}

func (o GetConfigsResultOutput) ToGetConfigsResultOutput() GetConfigsResultOutput {
	return o
}

func (o GetConfigsResultOutput) ToGetConfigsResultOutputWithContext(ctx context.Context) GetConfigsResultOutput {
	return o
}

// The OCID of the compartment containing the configuration.
func (o GetConfigsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of config_collection.
func (o GetConfigsResultOutput) ConfigCollections() GetConfigsConfigCollectionArrayOutput {
	return o.ApplyT(func(v GetConfigsResult) []GetConfigsConfigCollection { return v.ConfigCollections }).(GetConfigsConfigCollectionArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetConfigsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConfigsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetConfigsResultOutput) Filters() GetConfigsFilterArrayOutput {
	return o.ApplyT(func(v GetConfigsResult) []GetConfigsFilter { return v.Filters }).(GetConfigsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConfigsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the configuration.
func (o GetConfigsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConfigsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetConfigsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConfigsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConfigsResultOutput{})
}
