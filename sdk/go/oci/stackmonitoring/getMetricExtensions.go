// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Metric Extensions in Oracle Cloud Infrastructure Stack Monitoring service.
//
// # Returns a list of metric extensions
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/StackMonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := StackMonitoring.GetMetricExtensions(ctx, &stackmonitoring.GetMetricExtensionsArgs{
//				CompartmentId:       compartmentId,
//				EnabledOnResourceId: pulumi.StringRef(testResource.Id),
//				Name:                pulumi.StringRef(metricExtensionName),
//				ResourceType:        pulumi.StringRef(metricExtensionResourceType),
//				State:               pulumi.StringRef(metricExtensionState),
//				Status:              pulumi.StringRef(metricExtensionStatus),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetMetricExtensions(ctx *pulumi.Context, args *GetMetricExtensionsArgs, opts ...pulumi.InvokeOption) (*GetMetricExtensionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMetricExtensionsResult
	err := ctx.Invoke("oci:StackMonitoring/getMetricExtensions:getMetricExtensions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetricExtensions.
type GetMetricExtensionsArgs struct {
	// The ID of the compartment in which data is listed.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return metric extensions based on input resource Id on which metric extension is enabled
	EnabledOnResourceId *string                     `pulumi:"enabledOnResourceId"`
	Filters             []GetMetricExtensionsFilter `pulumi:"filters"`
	// A filter to return resources based on name.
	Name *string `pulumi:"name"`
	// A filter to return resources based on resource type.
	ResourceType *string `pulumi:"resourceType"`
	// A filter to return metric extensions based on Lifecycle State
	State *string `pulumi:"state"`
	// A filter to return resources based on status e.g. Draft or Published
	Status *string `pulumi:"status"`
}

// A collection of values returned by getMetricExtensions.
type GetMetricExtensionsResult struct {
	// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	CompartmentId       string                      `pulumi:"compartmentId"`
	EnabledOnResourceId *string                     `pulumi:"enabledOnResourceId"`
	Filters             []GetMetricExtensionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of metric_extension_collection.
	MetricExtensionCollections []GetMetricExtensionsMetricExtensionCollection `pulumi:"metricExtensionCollections"`
	// Name of the script file
	Name *string `pulumi:"name"`
	// Resource type to which Metric Extension applies
	ResourceType *string `pulumi:"resourceType"`
	// The current lifecycle state of the metric extension
	State *string `pulumi:"state"`
	// The current status of the metric extension i.e. whether it is Draft or Published
	Status *string `pulumi:"status"`
}

func GetMetricExtensionsOutput(ctx *pulumi.Context, args GetMetricExtensionsOutputArgs, opts ...pulumi.InvokeOption) GetMetricExtensionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetricExtensionsResult, error) {
			args := v.(GetMetricExtensionsArgs)
			r, err := GetMetricExtensions(ctx, &args, opts...)
			var s GetMetricExtensionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetricExtensionsResultOutput)
}

// A collection of arguments for invoking getMetricExtensions.
type GetMetricExtensionsOutputArgs struct {
	// The ID of the compartment in which data is listed.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return metric extensions based on input resource Id on which metric extension is enabled
	EnabledOnResourceId pulumi.StringPtrInput               `pulumi:"enabledOnResourceId"`
	Filters             GetMetricExtensionsFilterArrayInput `pulumi:"filters"`
	// A filter to return resources based on name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return resources based on resource type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A filter to return metric extensions based on Lifecycle State
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return resources based on status e.g. Draft or Published
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetMetricExtensionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricExtensionsArgs)(nil)).Elem()
}

// A collection of values returned by getMetricExtensions.
type GetMetricExtensionsResultOutput struct{ *pulumi.OutputState }

func (GetMetricExtensionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricExtensionsResult)(nil)).Elem()
}

func (o GetMetricExtensionsResultOutput) ToGetMetricExtensionsResultOutput() GetMetricExtensionsResultOutput {
	return o
}

func (o GetMetricExtensionsResultOutput) ToGetMetricExtensionsResultOutputWithContext(ctx context.Context) GetMetricExtensionsResultOutput {
	return o
}

// Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
func (o GetMetricExtensionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMetricExtensionsResultOutput) EnabledOnResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) *string { return v.EnabledOnResourceId }).(pulumi.StringPtrOutput)
}

func (o GetMetricExtensionsResultOutput) Filters() GetMetricExtensionsFilterArrayOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) []GetMetricExtensionsFilter { return v.Filters }).(GetMetricExtensionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMetricExtensionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of metric_extension_collection.
func (o GetMetricExtensionsResultOutput) MetricExtensionCollections() GetMetricExtensionsMetricExtensionCollectionArrayOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) []GetMetricExtensionsMetricExtensionCollection {
		return v.MetricExtensionCollections
	}).(GetMetricExtensionsMetricExtensionCollectionArrayOutput)
}

// Name of the script file
func (o GetMetricExtensionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource type to which Metric Extension applies
func (o GetMetricExtensionsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the metric extension
func (o GetMetricExtensionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The current status of the metric extension i.e. whether it is Draft or Published
func (o GetMetricExtensionsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricExtensionsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetricExtensionsResultOutput{})
}
