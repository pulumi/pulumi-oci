// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Monitored Resource Type resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// Gets a monitored resource type by identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/stackmonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stackmonitoring.GetMonitoredResourceType(ctx, &stackmonitoring.GetMonitoredResourceTypeArgs{
//				MonitoredResourceTypeId: testMonitoredResourceTypeOciStackMonitoringMonitoredResourceType.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMonitoredResourceType(ctx *pulumi.Context, args *LookupMonitoredResourceTypeArgs, opts ...pulumi.InvokeOption) (*LookupMonitoredResourceTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMonitoredResourceTypeResult
	err := ctx.Invoke("oci:StackMonitoring/getMonitoredResourceType:getMonitoredResourceType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitoredResourceType.
type LookupMonitoredResourceTypeArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource type.
	MonitoredResourceTypeId string `pulumi:"monitoredResourceTypeId"`
}

// A collection of values returned by getMonitoredResourceType.
type LookupMonitoredResourceTypeResult struct {
	// Key/Value pair for additional namespaces used by stack monitoring services for SYSTEM (SMB) resource types.
	AdditionalNamespaceMap map[string]string `pulumi:"additionalNamespaceMap"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A friendly description.
	Description string `pulumi:"description"`
	// Monitored resource type display name.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Monitored resource type identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id string `pulumi:"id"`
	// The metadata details for resource type.
	Metadatas []GetMonitoredResourceTypeMetadata `pulumi:"metadatas"`
	// Metric namespace for resource type.
	MetricNamespace         string `pulumi:"metricNamespace"`
	MonitoredResourceTypeId string `pulumi:"monitoredResourceTypeId"`
	// A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
	Name string `pulumi:"name"`
	// Resource Category to indicate the kind of resource type.
	ResourceCategory string `pulumi:"resourceCategory"`
	// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
	SourceType string `pulumi:"sourceType"`
	// Lifecycle state of the monitored resource type.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupMonitoredResourceTypeOutput(ctx *pulumi.Context, args LookupMonitoredResourceTypeOutputArgs, opts ...pulumi.InvokeOption) LookupMonitoredResourceTypeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMonitoredResourceTypeResultOutput, error) {
			args := v.(LookupMonitoredResourceTypeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:StackMonitoring/getMonitoredResourceType:getMonitoredResourceType", args, LookupMonitoredResourceTypeResultOutput{}, options).(LookupMonitoredResourceTypeResultOutput), nil
		}).(LookupMonitoredResourceTypeResultOutput)
}

// A collection of arguments for invoking getMonitoredResourceType.
type LookupMonitoredResourceTypeOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource type.
	MonitoredResourceTypeId pulumi.StringInput `pulumi:"monitoredResourceTypeId"`
}

func (LookupMonitoredResourceTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoredResourceTypeArgs)(nil)).Elem()
}

// A collection of values returned by getMonitoredResourceType.
type LookupMonitoredResourceTypeResultOutput struct{ *pulumi.OutputState }

func (LookupMonitoredResourceTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoredResourceTypeResult)(nil)).Elem()
}

func (o LookupMonitoredResourceTypeResultOutput) ToLookupMonitoredResourceTypeResultOutput() LookupMonitoredResourceTypeResultOutput {
	return o
}

func (o LookupMonitoredResourceTypeResultOutput) ToLookupMonitoredResourceTypeResultOutputWithContext(ctx context.Context) LookupMonitoredResourceTypeResultOutput {
	return o
}

// Key/Value pair for additional namespaces used by stack monitoring services for SYSTEM (SMB) resource types.
func (o LookupMonitoredResourceTypeResultOutput) AdditionalNamespaceMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) map[string]string { return v.AdditionalNamespaceMap }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
func (o LookupMonitoredResourceTypeResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMonitoredResourceTypeResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A friendly description.
func (o LookupMonitoredResourceTypeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.Description }).(pulumi.StringOutput)
}

// Monitored resource type display name.
func (o LookupMonitoredResourceTypeResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMonitoredResourceTypeResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Monitored resource type identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o LookupMonitoredResourceTypeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The metadata details for resource type.
func (o LookupMonitoredResourceTypeResultOutput) Metadatas() GetMonitoredResourceTypeMetadataArrayOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) []GetMonitoredResourceTypeMetadata { return v.Metadatas }).(GetMonitoredResourceTypeMetadataArrayOutput)
}

// Metric namespace for resource type.
func (o LookupMonitoredResourceTypeResultOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

func (o LookupMonitoredResourceTypeResultOutput) MonitoredResourceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.MonitoredResourceTypeId }).(pulumi.StringOutput)
}

// A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
func (o LookupMonitoredResourceTypeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource Category to indicate the kind of resource type.
func (o LookupMonitoredResourceTypeResultOutput) ResourceCategory() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.ResourceCategory }).(pulumi.StringOutput)
}

// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
func (o LookupMonitoredResourceTypeResultOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.SourceType }).(pulumi.StringOutput)
}

// Lifecycle state of the monitored resource type.
func (o LookupMonitoredResourceTypeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMonitoredResourceTypeResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o LookupMonitoredResourceTypeResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o LookupMonitoredResourceTypeResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredResourceTypeResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitoredResourceTypeResultOutput{})
}
