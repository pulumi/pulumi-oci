// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Monitoring Template resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// # Gets a Monitoring Template by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/stackmonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stackmonitoring.GetMonitoringTemplate(ctx, &stackmonitoring.GetMonitoringTemplateArgs{
//				MonitoringTemplateId: testMonitoringTemplateOciStackMonitoringMonitoringTemplate.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMonitoringTemplate(ctx *pulumi.Context, args *LookupMonitoringTemplateArgs, opts ...pulumi.InvokeOption) (*LookupMonitoringTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMonitoringTemplateResult
	err := ctx.Invoke("oci:StackMonitoring/getMonitoringTemplate:getMonitoringTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitoringTemplate.
type LookupMonitoringTemplateArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId string `pulumi:"monitoringTemplateId"`
}

// A collection of values returned by getMonitoringTemplate.
type LookupMonitoringTemplateResult struct {
	// The OCID of the compartment containing the monitoringTemplate.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource.
	Destinations []string `pulumi:"destinations"`
	// A user-friendly name for the monitoring template. It should be unique, and it's mutable in nature. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the resourceInstance/resourceType/resourceGroup
	Id string `pulumi:"id"`
	// Whether the alarm is enabled or disabled. Default value is enabled.
	IsAlarmsEnabled bool `pulumi:"isAlarmsEnabled"`
	// Whether the alarm notification is enabled or disabled, it will be Enabled by default.
	IsSplitNotificationEnabled bool `pulumi:"isSplitNotificationEnabled"`
	// List of members of this monitoring template.
	Members []GetMonitoringTemplateMember `pulumi:"members"`
	// The format to use for alarm notifications.
	MessageFormat        string `pulumi:"messageFormat"`
	MonitoringTemplateId string `pulumi:"monitoringTemplateId"`
	// The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
	RepeatNotificationDuration string `pulumi:"repeatNotificationDuration"`
	// The current lifecycle state of the monitoring template.
	State string `pulumi:"state"`
	// The current status of the monitoring template i.e. whether it is Applied or NotApplied.
	Status string `pulumi:"status"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	TenantId string `pulumi:"tenantId"`
	// The date and time the monitoringTemplate was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Total Alarm Conditions
	TotalAlarmConditions float64 `pulumi:"totalAlarmConditions"`
	// Total Applied Alarm Conditions
	TotalAppliedAlarmConditions float64 `pulumi:"totalAppliedAlarmConditions"`
}

func LookupMonitoringTemplateOutput(ctx *pulumi.Context, args LookupMonitoringTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupMonitoringTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMonitoringTemplateResultOutput, error) {
			args := v.(LookupMonitoringTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:StackMonitoring/getMonitoringTemplate:getMonitoringTemplate", args, LookupMonitoringTemplateResultOutput{}, options).(LookupMonitoringTemplateResultOutput), nil
		}).(LookupMonitoringTemplateResultOutput)
}

// A collection of arguments for invoking getMonitoringTemplate.
type LookupMonitoringTemplateOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId pulumi.StringInput `pulumi:"monitoringTemplateId"`
}

func (LookupMonitoringTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoringTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getMonitoringTemplate.
type LookupMonitoringTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupMonitoringTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoringTemplateResult)(nil)).Elem()
}

func (o LookupMonitoringTemplateResultOutput) ToLookupMonitoringTemplateResultOutput() LookupMonitoringTemplateResultOutput {
	return o
}

func (o LookupMonitoringTemplateResultOutput) ToLookupMonitoringTemplateResultOutputWithContext(ctx context.Context) LookupMonitoringTemplateResultOutput {
	return o
}

// The OCID of the compartment containing the monitoringTemplate.
func (o LookupMonitoringTemplateResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMonitoringTemplateResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupMonitoringTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource.
func (o LookupMonitoringTemplateResultOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// A user-friendly name for the monitoring template. It should be unique, and it's mutable in nature. Avoid entering confidential information.
func (o LookupMonitoringTemplateResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMonitoringTemplateResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the resourceInstance/resourceType/resourceGroup
func (o LookupMonitoringTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the alarm is enabled or disabled. Default value is enabled.
func (o LookupMonitoringTemplateResultOutput) IsAlarmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) bool { return v.IsAlarmsEnabled }).(pulumi.BoolOutput)
}

// Whether the alarm notification is enabled or disabled, it will be Enabled by default.
func (o LookupMonitoringTemplateResultOutput) IsSplitNotificationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) bool { return v.IsSplitNotificationEnabled }).(pulumi.BoolOutput)
}

// List of members of this monitoring template.
func (o LookupMonitoringTemplateResultOutput) Members() GetMonitoringTemplateMemberArrayOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) []GetMonitoringTemplateMember { return v.Members }).(GetMonitoringTemplateMemberArrayOutput)
}

// The format to use for alarm notifications.
func (o LookupMonitoringTemplateResultOutput) MessageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.MessageFormat }).(pulumi.StringOutput)
}

func (o LookupMonitoringTemplateResultOutput) MonitoringTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.MonitoringTemplateId }).(pulumi.StringOutput)
}

// The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
func (o LookupMonitoringTemplateResultOutput) RepeatNotificationDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.RepeatNotificationDuration }).(pulumi.StringOutput)
}

// The current lifecycle state of the monitoring template.
func (o LookupMonitoringTemplateResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.State }).(pulumi.StringOutput)
}

// The current status of the monitoring template i.e. whether it is Applied or NotApplied.
func (o LookupMonitoringTemplateResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.Status }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMonitoringTemplateResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
func (o LookupMonitoringTemplateResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// The date and time the monitoringTemplate was created. Format defined by RFC3339.
func (o LookupMonitoringTemplateResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
func (o LookupMonitoringTemplateResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Total Alarm Conditions
func (o LookupMonitoringTemplateResultOutput) TotalAlarmConditions() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) float64 { return v.TotalAlarmConditions }).(pulumi.Float64Output)
}

// Total Applied Alarm Conditions
func (o LookupMonitoringTemplateResultOutput) TotalAppliedAlarmConditions() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMonitoringTemplateResult) float64 { return v.TotalAppliedAlarmConditions }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitoringTemplateResultOutput{})
}
