// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Monitoring Template Alarm Condition resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// Gets a Alarm Condition by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/stackmonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stackmonitoring.GetMonitoringTemplateAlarmCondition(ctx, &stackmonitoring.GetMonitoringTemplateAlarmConditionArgs{
//				AlarmConditionId:     testAlarmCondition.Id,
//				MonitoringTemplateId: testMonitoringTemplate.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMonitoringTemplateAlarmCondition(ctx *pulumi.Context, args *LookupMonitoringTemplateAlarmConditionArgs, opts ...pulumi.InvokeOption) (*LookupMonitoringTemplateAlarmConditionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMonitoringTemplateAlarmConditionResult
	err := ctx.Invoke("oci:StackMonitoring/getMonitoringTemplateAlarmCondition:getMonitoringTemplateAlarmCondition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitoringTemplateAlarmCondition.
type LookupMonitoringTemplateAlarmConditionArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm condition.
	AlarmConditionId string `pulumi:"alarmConditionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId string `pulumi:"monitoringTemplateId"`
}

// A collection of values returned by getMonitoringTemplateAlarmCondition.
type LookupMonitoringTemplateAlarmConditionResult struct {
	AlarmConditionId string `pulumi:"alarmConditionId"`
	// The OCID of the composite resource type like EBS/PEOPLE_SOFT.
	CompositeType string `pulumi:"compositeType"`
	// Type of defined monitoring template.
	ConditionType string `pulumi:"conditionType"`
	// Monitoring template conditions
	Conditions []GetMonitoringTemplateAlarmConditionCondition `pulumi:"conditions"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Alarm Condition.
	Id string `pulumi:"id"`
	// The metric name.
	MetricName string `pulumi:"metricName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId string `pulumi:"monitoringTemplateId"`
	// The stack monitoring service or application emitting the metric that is evaluated by the alarm.
	Namespace string `pulumi:"namespace"`
	// The resource type OCID.
	ResourceType string `pulumi:"resourceType"`
	// The current lifecycle state of the monitoring template
	State string `pulumi:"state"`
	// The current status of the monitoring template i.e. whether it is Published or Unpublished
	Status string `pulumi:"status"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the alarm condition was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the alarm condition was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupMonitoringTemplateAlarmConditionOutput(ctx *pulumi.Context, args LookupMonitoringTemplateAlarmConditionOutputArgs, opts ...pulumi.InvokeOption) LookupMonitoringTemplateAlarmConditionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMonitoringTemplateAlarmConditionResultOutput, error) {
			args := v.(LookupMonitoringTemplateAlarmConditionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:StackMonitoring/getMonitoringTemplateAlarmCondition:getMonitoringTemplateAlarmCondition", args, LookupMonitoringTemplateAlarmConditionResultOutput{}, options).(LookupMonitoringTemplateAlarmConditionResultOutput), nil
		}).(LookupMonitoringTemplateAlarmConditionResultOutput)
}

// A collection of arguments for invoking getMonitoringTemplateAlarmCondition.
type LookupMonitoringTemplateAlarmConditionOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm condition.
	AlarmConditionId pulumi.StringInput `pulumi:"alarmConditionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId pulumi.StringInput `pulumi:"monitoringTemplateId"`
}

func (LookupMonitoringTemplateAlarmConditionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoringTemplateAlarmConditionArgs)(nil)).Elem()
}

// A collection of values returned by getMonitoringTemplateAlarmCondition.
type LookupMonitoringTemplateAlarmConditionResultOutput struct{ *pulumi.OutputState }

func (LookupMonitoringTemplateAlarmConditionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoringTemplateAlarmConditionResult)(nil)).Elem()
}

func (o LookupMonitoringTemplateAlarmConditionResultOutput) ToLookupMonitoringTemplateAlarmConditionResultOutput() LookupMonitoringTemplateAlarmConditionResultOutput {
	return o
}

func (o LookupMonitoringTemplateAlarmConditionResultOutput) ToLookupMonitoringTemplateAlarmConditionResultOutputWithContext(ctx context.Context) LookupMonitoringTemplateAlarmConditionResultOutput {
	return o
}

func (o LookupMonitoringTemplateAlarmConditionResultOutput) AlarmConditionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.AlarmConditionId }).(pulumi.StringOutput)
}

// The OCID of the composite resource type like EBS/PEOPLE_SOFT.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) CompositeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.CompositeType }).(pulumi.StringOutput)
}

// Type of defined monitoring template.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Monitoring template conditions
func (o LookupMonitoringTemplateAlarmConditionResultOutput) Conditions() GetMonitoringTemplateAlarmConditionConditionArrayOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) []GetMonitoringTemplateAlarmConditionCondition {
		return v.Conditions
	}).(GetMonitoringTemplateAlarmConditionConditionArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMonitoringTemplateAlarmConditionResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMonitoringTemplateAlarmConditionResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Alarm Condition.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The metric name.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.MetricName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) MonitoringTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.MonitoringTemplateId }).(pulumi.StringOutput)
}

// The stack monitoring service or application emitting the metric that is evaluated by the alarm.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The resource type OCID.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The current lifecycle state of the monitoring template
func (o LookupMonitoringTemplateAlarmConditionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.State }).(pulumi.StringOutput)
}

// The current status of the monitoring template i.e. whether it is Published or Unpublished
func (o LookupMonitoringTemplateAlarmConditionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.Status }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMonitoringTemplateAlarmConditionResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the alarm condition was created. Format defined by RFC3339.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the alarm condition was updated. Format defined by RFC3339.
func (o LookupMonitoringTemplateAlarmConditionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringTemplateAlarmConditionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitoringTemplateAlarmConditionResultOutput{})
}
