// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Monitoring Template Alarm Conditions in Oracle Cloud Infrastructure Stack Monitoring service.
//
// Returns a list of Alarm Conditions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/stackmonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stackmonitoring.GetMonitoringTemplateAlarmConditions(ctx, &stackmonitoring.GetMonitoringTemplateAlarmConditionsArgs{
//				MonitoringTemplateId: testMonitoringTemplate.Id,
//				MetricNames:          testMetric.Name,
//				ResourceTypes:        monitoringTemplateAlarmConditionResourceTypes,
//				State:                pulumi.StringRef(monitoringTemplateAlarmConditionState),
//				Status:               pulumi.StringRef(monitoringTemplateAlarmConditionStatus),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMonitoringTemplateAlarmConditions(ctx *pulumi.Context, args *GetMonitoringTemplateAlarmConditionsArgs, opts ...pulumi.InvokeOption) (*GetMonitoringTemplateAlarmConditionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMonitoringTemplateAlarmConditionsResult
	err := ctx.Invoke("oci:StackMonitoring/getMonitoringTemplateAlarmConditions:getMonitoringTemplateAlarmConditions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitoringTemplateAlarmConditions.
type GetMonitoringTemplateAlarmConditionsArgs struct {
	AlarmConditionId string                                       `pulumi:"alarmConditionId"`
	CompartmentId    *string                                      `pulumi:"compartmentId"`
	Filters          []GetMonitoringTemplateAlarmConditionsFilter `pulumi:"filters"`
	// metricName filter.
	MetricNames []string `pulumi:"metricNames"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId string `pulumi:"monitoringTemplateId"`
	// Multiple resource types filter.
	ResourceTypes []string `pulumi:"resourceTypes"`
	// A filter to return alarm condition based on Lifecycle State.
	State *string `pulumi:"state"`
	// A filter to return alarm condition based on input status.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getMonitoringTemplateAlarmConditions.
type GetMonitoringTemplateAlarmConditionsResult struct {
	// The list of alarm_condition_collection.
	AlarmConditionCollections []GetMonitoringTemplateAlarmConditionsAlarmConditionCollection `pulumi:"alarmConditionCollections"`
	AlarmConditionId          string                                                         `pulumi:"alarmConditionId"`
	CompartmentId             *string                                                        `pulumi:"compartmentId"`
	Filters                   []GetMonitoringTemplateAlarmConditionsFilter                   `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The metric name.
	MetricNames []string `pulumi:"metricNames"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId string   `pulumi:"monitoringTemplateId"`
	ResourceTypes        []string `pulumi:"resourceTypes"`
	// The current lifecycle state of the monitoring template
	State *string `pulumi:"state"`
	// The current status of the monitoring template i.e. whether it is Published or Unpublished
	Status *string `pulumi:"status"`
}

func GetMonitoringTemplateAlarmConditionsOutput(ctx *pulumi.Context, args GetMonitoringTemplateAlarmConditionsOutputArgs, opts ...pulumi.InvokeOption) GetMonitoringTemplateAlarmConditionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMonitoringTemplateAlarmConditionsResultOutput, error) {
			args := v.(GetMonitoringTemplateAlarmConditionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:StackMonitoring/getMonitoringTemplateAlarmConditions:getMonitoringTemplateAlarmConditions", args, GetMonitoringTemplateAlarmConditionsResultOutput{}, options).(GetMonitoringTemplateAlarmConditionsResultOutput), nil
		}).(GetMonitoringTemplateAlarmConditionsResultOutput)
}

// A collection of arguments for invoking getMonitoringTemplateAlarmConditions.
type GetMonitoringTemplateAlarmConditionsOutputArgs struct {
	AlarmConditionId pulumi.StringInput                                   `pulumi:"alarmConditionId"`
	CompartmentId    pulumi.StringPtrInput                                `pulumi:"compartmentId"`
	Filters          GetMonitoringTemplateAlarmConditionsFilterArrayInput `pulumi:"filters"`
	// metricName filter.
	MetricNames pulumi.StringArrayInput `pulumi:"metricNames"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
	MonitoringTemplateId pulumi.StringInput `pulumi:"monitoringTemplateId"`
	// Multiple resource types filter.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
	// A filter to return alarm condition based on Lifecycle State.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return alarm condition based on input status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetMonitoringTemplateAlarmConditionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringTemplateAlarmConditionsArgs)(nil)).Elem()
}

// A collection of values returned by getMonitoringTemplateAlarmConditions.
type GetMonitoringTemplateAlarmConditionsResultOutput struct{ *pulumi.OutputState }

func (GetMonitoringTemplateAlarmConditionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringTemplateAlarmConditionsResult)(nil)).Elem()
}

func (o GetMonitoringTemplateAlarmConditionsResultOutput) ToGetMonitoringTemplateAlarmConditionsResultOutput() GetMonitoringTemplateAlarmConditionsResultOutput {
	return o
}

func (o GetMonitoringTemplateAlarmConditionsResultOutput) ToGetMonitoringTemplateAlarmConditionsResultOutputWithContext(ctx context.Context) GetMonitoringTemplateAlarmConditionsResultOutput {
	return o
}

// The list of alarm_condition_collection.
func (o GetMonitoringTemplateAlarmConditionsResultOutput) AlarmConditionCollections() GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionArrayOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) []GetMonitoringTemplateAlarmConditionsAlarmConditionCollection {
		return v.AlarmConditionCollections
	}).(GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionArrayOutput)
}

func (o GetMonitoringTemplateAlarmConditionsResultOutput) AlarmConditionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) string { return v.AlarmConditionId }).(pulumi.StringOutput)
}

func (o GetMonitoringTemplateAlarmConditionsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetMonitoringTemplateAlarmConditionsResultOutput) Filters() GetMonitoringTemplateAlarmConditionsFilterArrayOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) []GetMonitoringTemplateAlarmConditionsFilter {
		return v.Filters
	}).(GetMonitoringTemplateAlarmConditionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMonitoringTemplateAlarmConditionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The metric name.
func (o GetMonitoringTemplateAlarmConditionsResultOutput) MetricNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) []string { return v.MetricNames }).(pulumi.StringArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
func (o GetMonitoringTemplateAlarmConditionsResultOutput) MonitoringTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) string { return v.MonitoringTemplateId }).(pulumi.StringOutput)
}

func (o GetMonitoringTemplateAlarmConditionsResultOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

// The current lifecycle state of the monitoring template
func (o GetMonitoringTemplateAlarmConditionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The current status of the monitoring template i.e. whether it is Published or Unpublished
func (o GetMonitoringTemplateAlarmConditionsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMonitoringTemplateAlarmConditionsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMonitoringTemplateAlarmConditionsResultOutput{})
}
