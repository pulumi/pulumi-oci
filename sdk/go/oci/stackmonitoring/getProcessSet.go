// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Process Set resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// API to get the details of a Process Set by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/StackMonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := StackMonitoring.GetProcessSet(ctx, &stackmonitoring.GetProcessSetArgs{
//				ProcessSetId: testProcessSetOciStackMonitoringProcessSet.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProcessSet(ctx *pulumi.Context, args *LookupProcessSetArgs, opts ...pulumi.InvokeOption) (*LookupProcessSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProcessSetResult
	err := ctx.Invoke("oci:StackMonitoring/getProcessSet:getProcessSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProcessSet.
type LookupProcessSetArgs struct {
	// The Process Set ID
	ProcessSetId string `pulumi:"processSetId"`
}

// A collection of values returned by getProcessSet.
type LookupProcessSetResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Name of the Process Set.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Process Set.
	Id           string `pulumi:"id"`
	ProcessSetId string `pulumi:"processSetId"`
	// The current revision of the Process Set.
	Revision string `pulumi:"revision"`
	// Collection of regular expression specifications used to identify the processes to be monitored.
	Specifications []GetProcessSetSpecification `pulumi:"specifications"`
	// The current state of the Resource.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the process set was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the process set was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupProcessSetOutput(ctx *pulumi.Context, args LookupProcessSetOutputArgs, opts ...pulumi.InvokeOption) LookupProcessSetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProcessSetResultOutput, error) {
			args := v.(LookupProcessSetArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupProcessSetResult
			secret, err := ctx.InvokePackageRaw("oci:StackMonitoring/getProcessSet:getProcessSet", args, &rv, "", opts...)
			if err != nil {
				return LookupProcessSetResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupProcessSetResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupProcessSetResultOutput), nil
			}
			return output, nil
		}).(LookupProcessSetResultOutput)
}

// A collection of arguments for invoking getProcessSet.
type LookupProcessSetOutputArgs struct {
	// The Process Set ID
	ProcessSetId pulumi.StringInput `pulumi:"processSetId"`
}

func (LookupProcessSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessSetArgs)(nil)).Elem()
}

// A collection of values returned by getProcessSet.
type LookupProcessSetResultOutput struct{ *pulumi.OutputState }

func (LookupProcessSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessSetResult)(nil)).Elem()
}

func (o LookupProcessSetResultOutput) ToLookupProcessSetResultOutput() LookupProcessSetResultOutput {
	return o
}

func (o LookupProcessSetResultOutput) ToLookupProcessSetResultOutputWithContext(ctx context.Context) LookupProcessSetResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupProcessSetResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupProcessSetResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProcessSetResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Name of the Process Set.
func (o LookupProcessSetResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupProcessSetResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProcessSetResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Process Set.
func (o LookupProcessSetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupProcessSetResultOutput) ProcessSetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.ProcessSetId }).(pulumi.StringOutput)
}

// The current revision of the Process Set.
func (o LookupProcessSetResultOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.Revision }).(pulumi.StringOutput)
}

// Collection of regular expression specifications used to identify the processes to be monitored.
func (o LookupProcessSetResultOutput) Specifications() GetProcessSetSpecificationArrayOutput {
	return o.ApplyT(func(v LookupProcessSetResult) []GetProcessSetSpecification { return v.Specifications }).(GetProcessSetSpecificationArrayOutput)
}

// The current state of the Resource.
func (o LookupProcessSetResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupProcessSetResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProcessSetResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the process set was created. An RFC3339 formatted datetime string.
func (o LookupProcessSetResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the process set was last updated. An RFC3339 formatted datetime string.
func (o LookupProcessSetResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessSetResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProcessSetResultOutput{})
}
