// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// # Creates a new monitored resource for the given resource type
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/StackMonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := StackMonitoring.NewMonitoredResource(ctx, "testMonitoredResource", &StackMonitoring.MonitoredResourceArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				Type:          pulumi.Any(_var.Monitored_resource_type),
//				Aliases: &stackmonitoring.MonitoredResourceAliasesArgs{
//					Credential: &stackmonitoring.MonitoredResourceAliasesCredentialArgs{
//						Name:    pulumi.Any(_var.Monitored_resource_aliases_credential_name),
//						Service: pulumi.Any(_var.Monitored_resource_aliases_credential_service),
//						Source:  pulumi.Any(_var.Monitored_resource_aliases_credential_source),
//					},
//					Name:   pulumi.Any(_var.Monitored_resource_aliases_name),
//					Source: pulumi.Any(_var.Monitored_resource_aliases_source),
//				},
//				Credentials: &stackmonitoring.MonitoredResourceCredentialsArgs{
//					CredentialType: pulumi.Any(_var.Monitored_resource_credentials_credential_type),
//					Description:    pulumi.Any(_var.Monitored_resource_credentials_description),
//					KeyId:          pulumi.Any(_var.Monitored_resource_credentials_key_id),
//					Name:           pulumi.Any(_var.Monitored_resource_credentials_name),
//					Properties: stackmonitoring.MonitoredResourceCredentialsPropertyArray{
//						&stackmonitoring.MonitoredResourceCredentialsPropertyArgs{
//							Name:  pulumi.Any(_var.Monitored_resource_credentials_properties_name),
//							Value: pulumi.Any(_var.Monitored_resource_credentials_properties_value),
//						},
//					},
//					Source: pulumi.Any(_var.Monitored_resource_credentials_source),
//					Type:   pulumi.Any(_var.Monitored_resource_credentials_type),
//				},
//				DatabaseConnectionDetails: &stackmonitoring.MonitoredResourceDatabaseConnectionDetailsArgs{
//					Port:         pulumi.Any(_var.Monitored_resource_database_connection_details_port),
//					Protocol:     pulumi.Any(_var.Monitored_resource_database_connection_details_protocol),
//					ServiceName:  pulumi.Any(_var.Monitored_resource_database_service_name),
//					ConnectorId:  pulumi.Any(_var.Monitored_resource_database_connector_id),
//					DbId:         pulumi.Any(_var.Monitored_resource_database_id),
//					DbUniqueName: pulumi.Any(_var.Monitored_resource_database_connection_details_db_unique_name),
//					SslSecretId:  pulumi.Any(oci_vault_secret.Test_secret.Id),
//				},
//				DisplayName:        pulumi.Any(_var.Monitored_resource_display_name),
//				ExternalResourceId: pulumi.Any(_var.Monitored_resource_external_resource_id),
//				ExternalId:         pulumi.Any(oci_stack_monitoring_external.Test_external.Id),
//				HostName:           pulumi.Any(_var.Monitored_resource_host_name),
//				ManagementAgentId:  pulumi.Any(oci_management_agent_management_agent.Test_management_agent.Id),
//				Properties: stackmonitoring.MonitoredResourcePropertyArray{
//					&stackmonitoring.MonitoredResourcePropertyArgs{
//						Name:  pulumi.Any(_var.Monitored_resource_properties_name),
//						Value: pulumi.Any(_var.Monitored_resource_properties_value),
//					},
//				},
//				ResourceTimeZone: pulumi.Any(_var.Monitored_resource_resource_time_zone),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MonitoredResources can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:StackMonitoring/monitoredResource:MonitoredResource test_monitored_resource "id"
//
// ```
type MonitoredResource struct {
	pulumi.CustomResourceState

	// (Updatable) Monitored Resource Alias Credential Details
	Aliases MonitoredResourceAliasesPtrOutput `pulumi:"aliases"`
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Monitored Resource Credential Details
	Credentials MonitoredResourceCredentialsPtrOutput `pulumi:"credentials"`
	// (Updatable) Connection details to connect to the database. HostName, protocol, and port should be specified.
	DatabaseConnectionDetails MonitoredResourceDatabaseConnectionDetailsPtrOutput `pulumi:"databaseConnectionDetails"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Monitored resource display name.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId pulumi.StringPtrOutput `pulumi:"externalId"`
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId pulumi.StringPtrOutput `pulumi:"externalResourceId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Host name of the monitored resource
	HostName pulumi.StringPtrOutput `pulumi:"hostName"`
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId pulumi.StringPtrOutput `pulumi:"managementAgentId"`
	// (Updatable) property name
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) List of monitored resource properties
	Properties MonitoredResourcePropertyArrayOutput `pulumi:"properties"`
	// (Updatable) Time zone in the form of tz database canonical zone ID.
	ResourceTimeZone pulumi.StringPtrOutput `pulumi:"resourceTimeZone"`
	// Lifecycle state of the monitored resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The time the the resource was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the the resource was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Monitored resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMonitoredResource registers a new resource with the given unique name, arguments, and options.
func NewMonitoredResource(ctx *pulumi.Context,
	name string, args *MonitoredResourceArgs, opts ...pulumi.ResourceOption) (*MonitoredResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource MonitoredResource
	err := ctx.RegisterResource("oci:StackMonitoring/monitoredResource:MonitoredResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitoredResource gets an existing MonitoredResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitoredResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitoredResourceState, opts ...pulumi.ResourceOption) (*MonitoredResource, error) {
	var resource MonitoredResource
	err := ctx.ReadResource("oci:StackMonitoring/monitoredResource:MonitoredResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MonitoredResource resources.
type monitoredResourceState struct {
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases *MonitoredResourceAliases `pulumi:"aliases"`
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Monitored Resource Credential Details
	Credentials *MonitoredResourceCredentials `pulumi:"credentials"`
	// (Updatable) Connection details to connect to the database. HostName, protocol, and port should be specified.
	DatabaseConnectionDetails *MonitoredResourceDatabaseConnectionDetails `pulumi:"databaseConnectionDetails"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Monitored resource display name.
	DisplayName *string `pulumi:"displayName"`
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId *string `pulumi:"externalId"`
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId *string `pulumi:"externalResourceId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Host name of the monitored resource
	HostName *string `pulumi:"hostName"`
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId *string `pulumi:"managementAgentId"`
	// (Updatable) property name
	Name *string `pulumi:"name"`
	// (Updatable) List of monitored resource properties
	Properties []MonitoredResourceProperty `pulumi:"properties"`
	// (Updatable) Time zone in the form of tz database canonical zone ID.
	ResourceTimeZone *string `pulumi:"resourceTimeZone"`
	// Lifecycle state of the monitored resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	TenantId *string `pulumi:"tenantId"`
	// The time the the resource was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the the resource was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Monitored resource type
	Type *string `pulumi:"type"`
}

type MonitoredResourceState struct {
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases MonitoredResourceAliasesPtrInput
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Monitored Resource Credential Details
	Credentials MonitoredResourceCredentialsPtrInput
	// (Updatable) Connection details to connect to the database. HostName, protocol, and port should be specified.
	DatabaseConnectionDetails MonitoredResourceDatabaseConnectionDetailsPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Monitored resource display name.
	DisplayName pulumi.StringPtrInput
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId pulumi.StringPtrInput
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId pulumi.StringPtrInput
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Host name of the monitored resource
	HostName pulumi.StringPtrInput
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId pulumi.StringPtrInput
	// (Updatable) property name
	Name pulumi.StringPtrInput
	// (Updatable) List of monitored resource properties
	Properties MonitoredResourcePropertyArrayInput
	// (Updatable) Time zone in the form of tz database canonical zone ID.
	ResourceTimeZone pulumi.StringPtrInput
	// Lifecycle state of the monitored resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	TenantId pulumi.StringPtrInput
	// The time the the resource was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the the resource was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
	// Monitored resource type
	Type pulumi.StringPtrInput
}

func (MonitoredResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoredResourceState)(nil)).Elem()
}

type monitoredResourceArgs struct {
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases *MonitoredResourceAliases `pulumi:"aliases"`
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Monitored Resource Credential Details
	Credentials *MonitoredResourceCredentials `pulumi:"credentials"`
	// (Updatable) Connection details to connect to the database. HostName, protocol, and port should be specified.
	DatabaseConnectionDetails *MonitoredResourceDatabaseConnectionDetails `pulumi:"databaseConnectionDetails"`
	// (Updatable) Monitored resource display name.
	DisplayName *string `pulumi:"displayName"`
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId *string `pulumi:"externalId"`
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId *string `pulumi:"externalResourceId"`
	// (Updatable) Host name of the monitored resource
	HostName *string `pulumi:"hostName"`
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId *string `pulumi:"managementAgentId"`
	// (Updatable) property name
	Name *string `pulumi:"name"`
	// (Updatable) List of monitored resource properties
	Properties []MonitoredResourceProperty `pulumi:"properties"`
	// (Updatable) Time zone in the form of tz database canonical zone ID.
	ResourceTimeZone *string `pulumi:"resourceTimeZone"`
	// Monitored resource type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a MonitoredResource resource.
type MonitoredResourceArgs struct {
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases MonitoredResourceAliasesPtrInput
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	CompartmentId pulumi.StringInput
	// (Updatable) Monitored Resource Credential Details
	Credentials MonitoredResourceCredentialsPtrInput
	// (Updatable) Connection details to connect to the database. HostName, protocol, and port should be specified.
	DatabaseConnectionDetails MonitoredResourceDatabaseConnectionDetailsPtrInput
	// (Updatable) Monitored resource display name.
	DisplayName pulumi.StringPtrInput
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId pulumi.StringPtrInput
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId pulumi.StringPtrInput
	// (Updatable) Host name of the monitored resource
	HostName pulumi.StringPtrInput
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId pulumi.StringPtrInput
	// (Updatable) property name
	Name pulumi.StringPtrInput
	// (Updatable) List of monitored resource properties
	Properties MonitoredResourcePropertyArrayInput
	// (Updatable) Time zone in the form of tz database canonical zone ID.
	ResourceTimeZone pulumi.StringPtrInput
	// Monitored resource type
	Type pulumi.StringInput
}

func (MonitoredResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoredResourceArgs)(nil)).Elem()
}

type MonitoredResourceInput interface {
	pulumi.Input

	ToMonitoredResourceOutput() MonitoredResourceOutput
	ToMonitoredResourceOutputWithContext(ctx context.Context) MonitoredResourceOutput
}

func (*MonitoredResource) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredResource)(nil)).Elem()
}

func (i *MonitoredResource) ToMonitoredResourceOutput() MonitoredResourceOutput {
	return i.ToMonitoredResourceOutputWithContext(context.Background())
}

func (i *MonitoredResource) ToMonitoredResourceOutputWithContext(ctx context.Context) MonitoredResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredResourceOutput)
}

// MonitoredResourceArrayInput is an input type that accepts MonitoredResourceArray and MonitoredResourceArrayOutput values.
// You can construct a concrete instance of `MonitoredResourceArrayInput` via:
//
//	MonitoredResourceArray{ MonitoredResourceArgs{...} }
type MonitoredResourceArrayInput interface {
	pulumi.Input

	ToMonitoredResourceArrayOutput() MonitoredResourceArrayOutput
	ToMonitoredResourceArrayOutputWithContext(context.Context) MonitoredResourceArrayOutput
}

type MonitoredResourceArray []MonitoredResourceInput

func (MonitoredResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitoredResource)(nil)).Elem()
}

func (i MonitoredResourceArray) ToMonitoredResourceArrayOutput() MonitoredResourceArrayOutput {
	return i.ToMonitoredResourceArrayOutputWithContext(context.Background())
}

func (i MonitoredResourceArray) ToMonitoredResourceArrayOutputWithContext(ctx context.Context) MonitoredResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredResourceArrayOutput)
}

// MonitoredResourceMapInput is an input type that accepts MonitoredResourceMap and MonitoredResourceMapOutput values.
// You can construct a concrete instance of `MonitoredResourceMapInput` via:
//
//	MonitoredResourceMap{ "key": MonitoredResourceArgs{...} }
type MonitoredResourceMapInput interface {
	pulumi.Input

	ToMonitoredResourceMapOutput() MonitoredResourceMapOutput
	ToMonitoredResourceMapOutputWithContext(context.Context) MonitoredResourceMapOutput
}

type MonitoredResourceMap map[string]MonitoredResourceInput

func (MonitoredResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitoredResource)(nil)).Elem()
}

func (i MonitoredResourceMap) ToMonitoredResourceMapOutput() MonitoredResourceMapOutput {
	return i.ToMonitoredResourceMapOutputWithContext(context.Background())
}

func (i MonitoredResourceMap) ToMonitoredResourceMapOutputWithContext(ctx context.Context) MonitoredResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredResourceMapOutput)
}

type MonitoredResourceOutput struct{ *pulumi.OutputState }

func (MonitoredResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredResource)(nil)).Elem()
}

func (o MonitoredResourceOutput) ToMonitoredResourceOutput() MonitoredResourceOutput {
	return o
}

func (o MonitoredResourceOutput) ToMonitoredResourceOutputWithContext(ctx context.Context) MonitoredResourceOutput {
	return o
}

// (Updatable) Monitored Resource Alias Credential Details
func (o MonitoredResourceOutput) Aliases() MonitoredResourceAliasesPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceAliasesPtrOutput { return v.Aliases }).(MonitoredResourceAliasesPtrOutput)
}

// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
func (o MonitoredResourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Monitored Resource Credential Details
func (o MonitoredResourceOutput) Credentials() MonitoredResourceCredentialsPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceCredentialsPtrOutput { return v.Credentials }).(MonitoredResourceCredentialsPtrOutput)
}

// (Updatable) Connection details to connect to the database. HostName, protocol, and port should be specified.
func (o MonitoredResourceOutput) DatabaseConnectionDetails() MonitoredResourceDatabaseConnectionDetailsPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceDatabaseConnectionDetailsPtrOutput {
		return v.DatabaseConnectionDetails
	}).(MonitoredResourceDatabaseConnectionDetailsPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MonitoredResourceOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Monitored resource display name.
func (o MonitoredResourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
func (o MonitoredResourceOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
func (o MonitoredResourceOutput) ExternalResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ExternalResourceId }).(pulumi.StringPtrOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MonitoredResourceOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Host name of the monitored resource
func (o MonitoredResourceOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.HostName }).(pulumi.StringPtrOutput)
}

// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o MonitoredResourceOutput) ManagementAgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ManagementAgentId }).(pulumi.StringPtrOutput)
}

// (Updatable) property name
func (o MonitoredResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) List of monitored resource properties
func (o MonitoredResourceOutput) Properties() MonitoredResourcePropertyArrayOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourcePropertyArrayOutput { return v.Properties }).(MonitoredResourcePropertyArrayOutput)
}

// (Updatable) Time zone in the form of tz database canonical zone ID.
func (o MonitoredResourceOutput) ResourceTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ResourceTimeZone }).(pulumi.StringPtrOutput)
}

// Lifecycle state of the monitored resource.
func (o MonitoredResourceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MonitoredResourceOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
func (o MonitoredResourceOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The time the the resource was created. An RFC3339 formatted datetime string
func (o MonitoredResourceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the the resource was updated. An RFC3339 formatted datetime string
func (o MonitoredResourceOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Monitored resource type
func (o MonitoredResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type MonitoredResourceArrayOutput struct{ *pulumi.OutputState }

func (MonitoredResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitoredResource)(nil)).Elem()
}

func (o MonitoredResourceArrayOutput) ToMonitoredResourceArrayOutput() MonitoredResourceArrayOutput {
	return o
}

func (o MonitoredResourceArrayOutput) ToMonitoredResourceArrayOutputWithContext(ctx context.Context) MonitoredResourceArrayOutput {
	return o
}

func (o MonitoredResourceArrayOutput) Index(i pulumi.IntInput) MonitoredResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MonitoredResource {
		return vs[0].([]*MonitoredResource)[vs[1].(int)]
	}).(MonitoredResourceOutput)
}

type MonitoredResourceMapOutput struct{ *pulumi.OutputState }

func (MonitoredResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitoredResource)(nil)).Elem()
}

func (o MonitoredResourceMapOutput) ToMonitoredResourceMapOutput() MonitoredResourceMapOutput {
	return o
}

func (o MonitoredResourceMapOutput) ToMonitoredResourceMapOutputWithContext(ctx context.Context) MonitoredResourceMapOutput {
	return o
}

func (o MonitoredResourceMapOutput) MapIndex(k pulumi.StringInput) MonitoredResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MonitoredResource {
		return vs[0].(map[string]*MonitoredResource)[vs[1].(string)]
	}).(MonitoredResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredResourceInput)(nil)).Elem(), &MonitoredResource{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredResourceArrayInput)(nil)).Elem(), MonitoredResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredResourceMapInput)(nil)).Elem(), MonitoredResourceMap{})
	pulumi.RegisterOutputType(MonitoredResourceOutput{})
	pulumi.RegisterOutputType(MonitoredResourceArrayOutput{})
	pulumi.RegisterOutputType(MonitoredResourceMapOutput{})
}
