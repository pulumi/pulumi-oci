// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// Creates a new monitored resource for the given resource type with the details and submits
// a work request for promoting the resource to agent. Once the resource is successfully
// added to agent, resource state will be marked active.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/StackMonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := StackMonitoring.NewMonitoredResource(ctx, "test_monitored_resource", &StackMonitoring.MonitoredResourceArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Name:          pulumi.Any(monitoredResourceName),
//				Type:          pulumi.Any(monitoredResourceType),
//				AdditionalAliases: stackmonitoring.MonitoredResourceAdditionalAliasArray{
//					&stackmonitoring.MonitoredResourceAdditionalAliasArgs{
//						Credential: &stackmonitoring.MonitoredResourceAdditionalAliasCredentialArgs{
//							Name:    pulumi.Any(monitoredResourceAdditionalAliasesCredentialName),
//							Service: pulumi.Any(monitoredResourceAdditionalAliasesCredentialService),
//							Source:  pulumi.Any(monitoredResourceAdditionalAliasesCredentialSource),
//						},
//						Name:   pulumi.Any(monitoredResourceAdditionalAliasesName),
//						Source: pulumi.Any(monitoredResourceAdditionalAliasesSource),
//					},
//				},
//				AdditionalCredentials: stackmonitoring.MonitoredResourceAdditionalCredentialArray{
//					&stackmonitoring.MonitoredResourceAdditionalCredentialArgs{
//						CredentialType: pulumi.Any(monitoredResourceAdditionalCredentialsCredentialType),
//						Description:    pulumi.Any(monitoredResourceAdditionalCredentialsDescription),
//						KeyId:          pulumi.Any(testKey.Id),
//						Name:           pulumi.Any(monitoredResourceAdditionalCredentialsName),
//						Properties: stackmonitoring.MonitoredResourceAdditionalCredentialPropertyArray{
//							&stackmonitoring.MonitoredResourceAdditionalCredentialPropertyArgs{
//								Name:  pulumi.Any(monitoredResourceAdditionalCredentialsPropertiesName),
//								Value: pulumi.Any(monitoredResourceAdditionalCredentialsPropertiesValue),
//							},
//						},
//						Source: pulumi.Any(monitoredResourceAdditionalCredentialsSource),
//						Type:   pulumi.Any(monitoredResourceAdditionalCredentialsType),
//					},
//				},
//				Aliases: &stackmonitoring.MonitoredResourceAliasesArgs{
//					Credential: &stackmonitoring.MonitoredResourceAliasesCredentialArgs{
//						Name:    pulumi.Any(monitoredResourceAliasesCredentialName),
//						Service: pulumi.Any(monitoredResourceAliasesCredentialService),
//						Source:  pulumi.Any(monitoredResourceAliasesCredentialSource),
//					},
//					Name:   pulumi.Any(monitoredResourceAliasesName),
//					Source: pulumi.Any(monitoredResourceAliasesSource),
//				},
//				Credentials: &stackmonitoring.MonitoredResourceCredentialsArgs{
//					CredentialType: pulumi.Any(monitoredResourceCredentialsCredentialType),
//					Description:    pulumi.Any(monitoredResourceCredentialsDescription),
//					KeyId:          pulumi.Any(monitoredResourceCredentialsKeyId),
//					Name:           pulumi.Any(monitoredResourceCredentialsName),
//					Properties: stackmonitoring.MonitoredResourceCredentialsPropertyArray{
//						&stackmonitoring.MonitoredResourceCredentialsPropertyArgs{
//							Name:  pulumi.Any(monitoredResourceCredentialsPropertiesName),
//							Value: pulumi.Any(monitoredResourceCredentialsPropertiesValue),
//						},
//					},
//					Source: pulumi.Any(monitoredResourceCredentialsSource),
//					Type:   pulumi.Any(monitoredResourceCredentialsType),
//				},
//				DatabaseConnectionDetails: &stackmonitoring.MonitoredResourceDatabaseConnectionDetailsArgs{
//					Port:         pulumi.Any(monitoredResourceDatabaseConnectionDetailsPort),
//					Protocol:     pulumi.Any(monitoredResourceDatabaseConnectionDetailsProtocol),
//					ServiceName:  pulumi.Any(monitoredResourceDatabaseServiceName),
//					ConnectorId:  pulumi.Any(monitoredResourceDatabaseConnectorId),
//					DbId:         pulumi.Any(monitoredResourceDatabaseId),
//					DbUniqueName: pulumi.Any(monitoredResourceDatabaseConnectionDetailsDbUniqueName),
//					SslSecretId:  pulumi.Any(testSecret.Id),
//				},
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName:        pulumi.Any(monitoredResourceDisplayName),
//				ExternalResourceId: pulumi.Any(monitoredResourceExternalResourceId),
//				ExternalId:         pulumi.Any(testExternal.Id),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				HostName:          pulumi.Any(monitoredResourceHostName),
//				License:           pulumi.Any(monitoredResourceLicense),
//				ManagementAgentId: pulumi.Any(testManagementAgent.Id),
//				Properties: stackmonitoring.MonitoredResourcePropertyArray{
//					&stackmonitoring.MonitoredResourcePropertyArgs{
//						Name:  pulumi.Any(monitoredResourcePropertiesName),
//						Value: pulumi.Any(monitoredResourcePropertiesValue),
//					},
//				},
//				ResourceTimeZone: pulumi.Any(monitoredResourceResourceTimeZone),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// MonitoredResources can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:StackMonitoring/monitoredResource:MonitoredResource test_monitored_resource "id"
// ```
type MonitoredResource struct {
	pulumi.CustomResourceState

	// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
	AdditionalAliases MonitoredResourceAdditionalAliasArrayOutput `pulumi:"additionalAliases"`
	// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
	AdditionalCredentials MonitoredResourceAdditionalCredentialArrayOutput `pulumi:"additionalCredentials"`
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases MonitoredResourceAliasesPtrOutput `pulumi:"aliases"`
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Monitored Resource Credential Details.
	Credentials MonitoredResourceCredentialsPtrOutput `pulumi:"credentials"`
	// (Updatable) Connection details for the database.
	DatabaseConnectionDetails MonitoredResourceDatabaseConnectionDetailsPtrOutput `pulumi:"databaseConnectionDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Monitored resource display name.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId pulumi.StringPtrOutput `pulumi:"externalId"`
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId pulumi.StringPtrOutput `pulumi:"externalResourceId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Host name of the monitored resource.
	HostName pulumi.StringPtrOutput `pulumi:"hostName"`
	// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
	License pulumi.StringOutput `pulumi:"license"`
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId pulumi.StringPtrOutput `pulumi:"managementAgentId"`
	// (Updatable) Property Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) List of monitored resource properties.
	Properties MonitoredResourcePropertyArrayOutput `pulumi:"properties"`
	// Resource Category to indicate the kind of resource type.
	ResourceCategory pulumi.StringOutput `pulumi:"resourceCategory"`
	// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
	ResourceTimeZone pulumi.StringPtrOutput `pulumi:"resourceTimeZone"`
	// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// Lifecycle state of the monitored resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Monitored Resource Type.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMonitoredResource registers a new resource with the given unique name, arguments, and options.
func NewMonitoredResource(ctx *pulumi.Context,
	name string, args *MonitoredResourceArgs, opts ...pulumi.ResourceOption) (*MonitoredResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MonitoredResource
	err := ctx.RegisterResource("oci:StackMonitoring/monitoredResource:MonitoredResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitoredResource gets an existing MonitoredResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitoredResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitoredResourceState, opts ...pulumi.ResourceOption) (*MonitoredResource, error) {
	var resource MonitoredResource
	err := ctx.ReadResource("oci:StackMonitoring/monitoredResource:MonitoredResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MonitoredResource resources.
type monitoredResourceState struct {
	// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
	AdditionalAliases []MonitoredResourceAdditionalAlias `pulumi:"additionalAliases"`
	// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
	AdditionalCredentials []MonitoredResourceAdditionalCredential `pulumi:"additionalCredentials"`
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases *MonitoredResourceAliases `pulumi:"aliases"`
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Monitored Resource Credential Details.
	Credentials *MonitoredResourceCredentials `pulumi:"credentials"`
	// (Updatable) Connection details for the database.
	DatabaseConnectionDetails *MonitoredResourceDatabaseConnectionDetails `pulumi:"databaseConnectionDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Monitored resource display name.
	DisplayName *string `pulumi:"displayName"`
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId *string `pulumi:"externalId"`
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId *string `pulumi:"externalResourceId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Host name of the monitored resource.
	HostName *string `pulumi:"hostName"`
	// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
	License *string `pulumi:"license"`
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId *string `pulumi:"managementAgentId"`
	// (Updatable) Property Name.
	Name *string `pulumi:"name"`
	// (Updatable) List of monitored resource properties.
	Properties []MonitoredResourceProperty `pulumi:"properties"`
	// Resource Category to indicate the kind of resource type.
	ResourceCategory *string `pulumi:"resourceCategory"`
	// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
	ResourceTimeZone *string `pulumi:"resourceTimeZone"`
	// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
	SourceType *string `pulumi:"sourceType"`
	// Lifecycle state of the monitored resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	TenantId *string `pulumi:"tenantId"`
	// The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Monitored Resource Type.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type *string `pulumi:"type"`
}

type MonitoredResourceState struct {
	// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
	AdditionalAliases MonitoredResourceAdditionalAliasArrayInput
	// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
	AdditionalCredentials MonitoredResourceAdditionalCredentialArrayInput
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases MonitoredResourceAliasesPtrInput
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Monitored Resource Credential Details.
	Credentials MonitoredResourceCredentialsPtrInput
	// (Updatable) Connection details for the database.
	DatabaseConnectionDetails MonitoredResourceDatabaseConnectionDetailsPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Monitored resource display name.
	DisplayName pulumi.StringPtrInput
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId pulumi.StringPtrInput
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Host name of the monitored resource.
	HostName pulumi.StringPtrInput
	// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
	License pulumi.StringPtrInput
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId pulumi.StringPtrInput
	// (Updatable) Property Name.
	Name pulumi.StringPtrInput
	// (Updatable) List of monitored resource properties.
	Properties MonitoredResourcePropertyArrayInput
	// Resource Category to indicate the kind of resource type.
	ResourceCategory pulumi.StringPtrInput
	// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
	ResourceTimeZone pulumi.StringPtrInput
	// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
	SourceType pulumi.StringPtrInput
	// Lifecycle state of the monitored resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	TenantId pulumi.StringPtrInput
	// The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated pulumi.StringPtrInput
	// The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated pulumi.StringPtrInput
	// Monitored Resource Type.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringPtrInput
}

func (MonitoredResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoredResourceState)(nil)).Elem()
}

type monitoredResourceArgs struct {
	// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
	AdditionalAliases []MonitoredResourceAdditionalAlias `pulumi:"additionalAliases"`
	// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
	AdditionalCredentials []MonitoredResourceAdditionalCredential `pulumi:"additionalCredentials"`
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases *MonitoredResourceAliases `pulumi:"aliases"`
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Monitored Resource Credential Details.
	Credentials *MonitoredResourceCredentials `pulumi:"credentials"`
	// (Updatable) Connection details for the database.
	DatabaseConnectionDetails *MonitoredResourceDatabaseConnectionDetails `pulumi:"databaseConnectionDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Monitored resource display name.
	DisplayName *string `pulumi:"displayName"`
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId *string `pulumi:"externalId"`
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId *string `pulumi:"externalResourceId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Host name of the monitored resource.
	HostName *string `pulumi:"hostName"`
	// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
	License *string `pulumi:"license"`
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId *string `pulumi:"managementAgentId"`
	// (Updatable) Property Name.
	Name *string `pulumi:"name"`
	// (Updatable) List of monitored resource properties.
	Properties []MonitoredResourceProperty `pulumi:"properties"`
	// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
	ResourceTimeZone *string `pulumi:"resourceTimeZone"`
	// Monitored Resource Type.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a MonitoredResource resource.
type MonitoredResourceArgs struct {
	// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
	AdditionalAliases MonitoredResourceAdditionalAliasArrayInput
	// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
	AdditionalCredentials MonitoredResourceAdditionalCredentialArrayInput
	// (Updatable) Monitored Resource Alias Credential Details
	Aliases MonitoredResourceAliasesPtrInput
	// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput
	// (Updatable) Monitored Resource Credential Details.
	Credentials MonitoredResourceCredentialsPtrInput
	// (Updatable) Connection details for the database.
	DatabaseConnectionDetails MonitoredResourceDatabaseConnectionDetailsPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Monitored resource display name.
	DisplayName pulumi.StringPtrInput
	// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
	ExternalId pulumi.StringPtrInput
	// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
	ExternalResourceId pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Host name of the monitored resource.
	HostName pulumi.StringPtrInput
	// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
	License pulumi.StringPtrInput
	// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ManagementAgentId pulumi.StringPtrInput
	// (Updatable) Property Name.
	Name pulumi.StringPtrInput
	// (Updatable) List of monitored resource properties.
	Properties MonitoredResourcePropertyArrayInput
	// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
	ResourceTimeZone pulumi.StringPtrInput
	// Monitored Resource Type.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Type pulumi.StringInput
}

func (MonitoredResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoredResourceArgs)(nil)).Elem()
}

type MonitoredResourceInput interface {
	pulumi.Input

	ToMonitoredResourceOutput() MonitoredResourceOutput
	ToMonitoredResourceOutputWithContext(ctx context.Context) MonitoredResourceOutput
}

func (*MonitoredResource) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredResource)(nil)).Elem()
}

func (i *MonitoredResource) ToMonitoredResourceOutput() MonitoredResourceOutput {
	return i.ToMonitoredResourceOutputWithContext(context.Background())
}

func (i *MonitoredResource) ToMonitoredResourceOutputWithContext(ctx context.Context) MonitoredResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredResourceOutput)
}

// MonitoredResourceArrayInput is an input type that accepts MonitoredResourceArray and MonitoredResourceArrayOutput values.
// You can construct a concrete instance of `MonitoredResourceArrayInput` via:
//
//	MonitoredResourceArray{ MonitoredResourceArgs{...} }
type MonitoredResourceArrayInput interface {
	pulumi.Input

	ToMonitoredResourceArrayOutput() MonitoredResourceArrayOutput
	ToMonitoredResourceArrayOutputWithContext(context.Context) MonitoredResourceArrayOutput
}

type MonitoredResourceArray []MonitoredResourceInput

func (MonitoredResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitoredResource)(nil)).Elem()
}

func (i MonitoredResourceArray) ToMonitoredResourceArrayOutput() MonitoredResourceArrayOutput {
	return i.ToMonitoredResourceArrayOutputWithContext(context.Background())
}

func (i MonitoredResourceArray) ToMonitoredResourceArrayOutputWithContext(ctx context.Context) MonitoredResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredResourceArrayOutput)
}

// MonitoredResourceMapInput is an input type that accepts MonitoredResourceMap and MonitoredResourceMapOutput values.
// You can construct a concrete instance of `MonitoredResourceMapInput` via:
//
//	MonitoredResourceMap{ "key": MonitoredResourceArgs{...} }
type MonitoredResourceMapInput interface {
	pulumi.Input

	ToMonitoredResourceMapOutput() MonitoredResourceMapOutput
	ToMonitoredResourceMapOutputWithContext(context.Context) MonitoredResourceMapOutput
}

type MonitoredResourceMap map[string]MonitoredResourceInput

func (MonitoredResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitoredResource)(nil)).Elem()
}

func (i MonitoredResourceMap) ToMonitoredResourceMapOutput() MonitoredResourceMapOutput {
	return i.ToMonitoredResourceMapOutputWithContext(context.Background())
}

func (i MonitoredResourceMap) ToMonitoredResourceMapOutputWithContext(ctx context.Context) MonitoredResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredResourceMapOutput)
}

type MonitoredResourceOutput struct{ *pulumi.OutputState }

func (MonitoredResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredResource)(nil)).Elem()
}

func (o MonitoredResourceOutput) ToMonitoredResourceOutput() MonitoredResourceOutput {
	return o
}

func (o MonitoredResourceOutput) ToMonitoredResourceOutputWithContext(ctx context.Context) MonitoredResourceOutput {
	return o
}

// (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
func (o MonitoredResourceOutput) AdditionalAliases() MonitoredResourceAdditionalAliasArrayOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceAdditionalAliasArrayOutput { return v.AdditionalAliases }).(MonitoredResourceAdditionalAliasArrayOutput)
}

// (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
func (o MonitoredResourceOutput) AdditionalCredentials() MonitoredResourceAdditionalCredentialArrayOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceAdditionalCredentialArrayOutput {
		return v.AdditionalCredentials
	}).(MonitoredResourceAdditionalCredentialArrayOutput)
}

// (Updatable) Monitored Resource Alias Credential Details
func (o MonitoredResourceOutput) Aliases() MonitoredResourceAliasesPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceAliasesPtrOutput { return v.Aliases }).(MonitoredResourceAliasesPtrOutput)
}

// (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o MonitoredResourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Monitored Resource Credential Details.
func (o MonitoredResourceOutput) Credentials() MonitoredResourceCredentialsPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceCredentialsPtrOutput { return v.Credentials }).(MonitoredResourceCredentialsPtrOutput)
}

// (Updatable) Connection details for the database.
func (o MonitoredResourceOutput) DatabaseConnectionDetails() MonitoredResourceDatabaseConnectionDetailsPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourceDatabaseConnectionDetailsPtrOutput {
		return v.DatabaseConnectionDetails
	}).(MonitoredResourceDatabaseConnectionDetailsPtrOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MonitoredResourceOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Monitored resource display name.
func (o MonitoredResourceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
func (o MonitoredResourceOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
func (o MonitoredResourceOutput) ExternalResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ExternalResourceId }).(pulumi.StringPtrOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MonitoredResourceOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Host name of the monitored resource.
func (o MonitoredResourceOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.HostName }).(pulumi.StringPtrOutput)
}

// (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
func (o MonitoredResourceOutput) License() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.License }).(pulumi.StringOutput)
}

// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o MonitoredResourceOutput) ManagementAgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ManagementAgentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Property Name.
func (o MonitoredResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) List of monitored resource properties.
func (o MonitoredResourceOutput) Properties() MonitoredResourcePropertyArrayOutput {
	return o.ApplyT(func(v *MonitoredResource) MonitoredResourcePropertyArrayOutput { return v.Properties }).(MonitoredResourcePropertyArrayOutput)
}

// Resource Category to indicate the kind of resource type.
func (o MonitoredResourceOutput) ResourceCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.ResourceCategory }).(pulumi.StringOutput)
}

// (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
func (o MonitoredResourceOutput) ResourceTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringPtrOutput { return v.ResourceTimeZone }).(pulumi.StringPtrOutput)
}

// Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
func (o MonitoredResourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// Lifecycle state of the monitored resource.
func (o MonitoredResourceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MonitoredResourceOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o MonitoredResourceOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o MonitoredResourceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o MonitoredResourceOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Monitored Resource Type.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MonitoredResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoredResource) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type MonitoredResourceArrayOutput struct{ *pulumi.OutputState }

func (MonitoredResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitoredResource)(nil)).Elem()
}

func (o MonitoredResourceArrayOutput) ToMonitoredResourceArrayOutput() MonitoredResourceArrayOutput {
	return o
}

func (o MonitoredResourceArrayOutput) ToMonitoredResourceArrayOutputWithContext(ctx context.Context) MonitoredResourceArrayOutput {
	return o
}

func (o MonitoredResourceArrayOutput) Index(i pulumi.IntInput) MonitoredResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MonitoredResource {
		return vs[0].([]*MonitoredResource)[vs[1].(int)]
	}).(MonitoredResourceOutput)
}

type MonitoredResourceMapOutput struct{ *pulumi.OutputState }

func (MonitoredResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitoredResource)(nil)).Elem()
}

func (o MonitoredResourceMapOutput) ToMonitoredResourceMapOutput() MonitoredResourceMapOutput {
	return o
}

func (o MonitoredResourceMapOutput) ToMonitoredResourceMapOutputWithContext(ctx context.Context) MonitoredResourceMapOutput {
	return o
}

func (o MonitoredResourceMapOutput) MapIndex(k pulumi.StringInput) MonitoredResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MonitoredResource {
		return vs[0].(map[string]*MonitoredResource)[vs[1].(string)]
	}).(MonitoredResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredResourceInput)(nil)).Elem(), &MonitoredResource{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredResourceArrayInput)(nil)).Elem(), MonitoredResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredResourceMapInput)(nil)).Elem(), MonitoredResourceMap{})
	pulumi.RegisterOutputType(MonitoredResourceOutput{})
	pulumi.RegisterOutputType(MonitoredResourceArrayOutput{})
	pulumi.RegisterOutputType(MonitoredResourceMapOutput{})
}
