// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackmonitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Monitoring Template resource in Oracle Cloud Infrastructure Stack Monitoring service.
//
// Creates a new monitoring template for a given compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/stackmonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stackmonitoring.NewMonitoringTemplate(ctx, "test_monitoring_template", &stackmonitoring.MonitoringTemplateArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Destinations:  pulumi.Any(monitoringTemplateDestinations),
//				DisplayName:   pulumi.Any(monitoringTemplateDisplayName),
//				Members: stackmonitoring.MonitoringTemplateMemberArray{
//					&stackmonitoring.MonitoringTemplateMemberArgs{
//						Id:            pulumi.Any(monitoringTemplateMembersId),
//						Type:          pulumi.Any(monitoringTemplateMembersType),
//						CompositeType: pulumi.Any(monitoringTemplateMembersCompositeType),
//					},
//				},
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(monitoringTemplateDescription),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				IsAlarmsEnabled:            pulumi.Any(monitoringTemplateIsAlarmsEnabled),
//				IsSplitNotificationEnabled: pulumi.Any(monitoringTemplateIsSplitNotificationEnabled),
//				MessageFormat:              pulumi.Any(monitoringTemplateMessageFormat),
//				RepeatNotificationDuration: pulumi.Any(monitoringTemplateRepeatNotificationDuration),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MonitoringTemplates can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:StackMonitoring/monitoringTemplate:MonitoringTemplate test_monitoring_template "id"
// ```
type MonitoringTemplate struct {
	pulumi.CustomResourceState

	// The OCID of the compartment containing the monitoringTemplate.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
	Destinations pulumi.StringArrayOutput `pulumi:"destinations"`
	// (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
	IsAlarmsEnabled pulumi.BoolOutput `pulumi:"isAlarmsEnabled"`
	// (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
	IsSplitNotificationEnabled pulumi.BoolOutput `pulumi:"isSplitNotificationEnabled"`
	// (Updatable) List of members of this monitoring template
	Members MonitoringTemplateMemberArrayOutput `pulumi:"members"`
	// (Updatable) The format to use for alarm notifications.
	MessageFormat pulumi.StringOutput `pulumi:"messageFormat"`
	// (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepeatNotificationDuration pulumi.StringOutput `pulumi:"repeatNotificationDuration"`
	// The current lifecycle state of the monitoring template.
	State pulumi.StringOutput `pulumi:"state"`
	// The current status of the monitoring template i.e. whether it is Applied or NotApplied.
	Status pulumi.StringOutput `pulumi:"status"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The date and time the monitoringTemplate was created. Format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// Total Alarm Conditions
	TotalAlarmConditions pulumi.Float64Output `pulumi:"totalAlarmConditions"`
	// Total Applied Alarm Conditions
	TotalAppliedAlarmConditions pulumi.Float64Output `pulumi:"totalAppliedAlarmConditions"`
}

// NewMonitoringTemplate registers a new resource with the given unique name, arguments, and options.
func NewMonitoringTemplate(ctx *pulumi.Context,
	name string, args *MonitoringTemplateArgs, opts ...pulumi.ResourceOption) (*MonitoringTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Destinations == nil {
		return nil, errors.New("invalid value for required argument 'Destinations'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MonitoringTemplate
	err := ctx.RegisterResource("oci:StackMonitoring/monitoringTemplate:MonitoringTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitoringTemplate gets an existing MonitoringTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitoringTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitoringTemplateState, opts ...pulumi.ResourceOption) (*MonitoringTemplate, error) {
	var resource MonitoringTemplate
	err := ctx.ReadResource("oci:StackMonitoring/monitoringTemplate:MonitoringTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MonitoringTemplate resources.
type monitoringTemplateState struct {
	// The OCID of the compartment containing the monitoringTemplate.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
	Destinations []string `pulumi:"destinations"`
	// (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
	IsAlarmsEnabled *bool `pulumi:"isAlarmsEnabled"`
	// (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
	IsSplitNotificationEnabled *bool `pulumi:"isSplitNotificationEnabled"`
	// (Updatable) List of members of this monitoring template
	Members []MonitoringTemplateMember `pulumi:"members"`
	// (Updatable) The format to use for alarm notifications.
	MessageFormat *string `pulumi:"messageFormat"`
	// (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepeatNotificationDuration *string `pulumi:"repeatNotificationDuration"`
	// The current lifecycle state of the monitoring template.
	State *string `pulumi:"state"`
	// The current status of the monitoring template i.e. whether it is Applied or NotApplied.
	Status *string `pulumi:"status"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	TenantId *string `pulumi:"tenantId"`
	// The date and time the monitoringTemplate was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Total Alarm Conditions
	TotalAlarmConditions *float64 `pulumi:"totalAlarmConditions"`
	// Total Applied Alarm Conditions
	TotalAppliedAlarmConditions *float64 `pulumi:"totalAppliedAlarmConditions"`
}

type MonitoringTemplateState struct {
	// The OCID of the compartment containing the monitoringTemplate.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
	Destinations pulumi.StringArrayInput
	// (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
	IsAlarmsEnabled pulumi.BoolPtrInput
	// (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
	IsSplitNotificationEnabled pulumi.BoolPtrInput
	// (Updatable) List of members of this monitoring template
	Members MonitoringTemplateMemberArrayInput
	// (Updatable) The format to use for alarm notifications.
	MessageFormat pulumi.StringPtrInput
	// (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepeatNotificationDuration pulumi.StringPtrInput
	// The current lifecycle state of the monitoring template.
	State pulumi.StringPtrInput
	// The current status of the monitoring template i.e. whether it is Applied or NotApplied.
	Status pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	TenantId pulumi.StringPtrInput
	// The date and time the monitoringTemplate was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
	// Total Alarm Conditions
	TotalAlarmConditions pulumi.Float64PtrInput
	// Total Applied Alarm Conditions
	TotalAppliedAlarmConditions pulumi.Float64PtrInput
}

func (MonitoringTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoringTemplateState)(nil)).Elem()
}

type monitoringTemplateArgs struct {
	// The OCID of the compartment containing the monitoringTemplate.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
	Destinations []string `pulumi:"destinations"`
	// (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
	IsAlarmsEnabled *bool `pulumi:"isAlarmsEnabled"`
	// (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
	IsSplitNotificationEnabled *bool `pulumi:"isSplitNotificationEnabled"`
	// (Updatable) List of members of this monitoring template
	Members []MonitoringTemplateMember `pulumi:"members"`
	// (Updatable) The format to use for alarm notifications.
	MessageFormat *string `pulumi:"messageFormat"`
	// (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepeatNotificationDuration *string `pulumi:"repeatNotificationDuration"`
}

// The set of arguments for constructing a MonitoringTemplate resource.
type MonitoringTemplateArgs struct {
	// The OCID of the compartment containing the monitoringTemplate.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
	Destinations pulumi.StringArrayInput
	// (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
	IsAlarmsEnabled pulumi.BoolPtrInput
	// (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
	IsSplitNotificationEnabled pulumi.BoolPtrInput
	// (Updatable) List of members of this monitoring template
	Members MonitoringTemplateMemberArrayInput
	// (Updatable) The format to use for alarm notifications.
	MessageFormat pulumi.StringPtrInput
	// (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepeatNotificationDuration pulumi.StringPtrInput
}

func (MonitoringTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoringTemplateArgs)(nil)).Elem()
}

type MonitoringTemplateInput interface {
	pulumi.Input

	ToMonitoringTemplateOutput() MonitoringTemplateOutput
	ToMonitoringTemplateOutputWithContext(ctx context.Context) MonitoringTemplateOutput
}

func (*MonitoringTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringTemplate)(nil)).Elem()
}

func (i *MonitoringTemplate) ToMonitoringTemplateOutput() MonitoringTemplateOutput {
	return i.ToMonitoringTemplateOutputWithContext(context.Background())
}

func (i *MonitoringTemplate) ToMonitoringTemplateOutputWithContext(ctx context.Context) MonitoringTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringTemplateOutput)
}

// MonitoringTemplateArrayInput is an input type that accepts MonitoringTemplateArray and MonitoringTemplateArrayOutput values.
// You can construct a concrete instance of `MonitoringTemplateArrayInput` via:
//
//	MonitoringTemplateArray{ MonitoringTemplateArgs{...} }
type MonitoringTemplateArrayInput interface {
	pulumi.Input

	ToMonitoringTemplateArrayOutput() MonitoringTemplateArrayOutput
	ToMonitoringTemplateArrayOutputWithContext(context.Context) MonitoringTemplateArrayOutput
}

type MonitoringTemplateArray []MonitoringTemplateInput

func (MonitoringTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitoringTemplate)(nil)).Elem()
}

func (i MonitoringTemplateArray) ToMonitoringTemplateArrayOutput() MonitoringTemplateArrayOutput {
	return i.ToMonitoringTemplateArrayOutputWithContext(context.Background())
}

func (i MonitoringTemplateArray) ToMonitoringTemplateArrayOutputWithContext(ctx context.Context) MonitoringTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringTemplateArrayOutput)
}

// MonitoringTemplateMapInput is an input type that accepts MonitoringTemplateMap and MonitoringTemplateMapOutput values.
// You can construct a concrete instance of `MonitoringTemplateMapInput` via:
//
//	MonitoringTemplateMap{ "key": MonitoringTemplateArgs{...} }
type MonitoringTemplateMapInput interface {
	pulumi.Input

	ToMonitoringTemplateMapOutput() MonitoringTemplateMapOutput
	ToMonitoringTemplateMapOutputWithContext(context.Context) MonitoringTemplateMapOutput
}

type MonitoringTemplateMap map[string]MonitoringTemplateInput

func (MonitoringTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitoringTemplate)(nil)).Elem()
}

func (i MonitoringTemplateMap) ToMonitoringTemplateMapOutput() MonitoringTemplateMapOutput {
	return i.ToMonitoringTemplateMapOutputWithContext(context.Background())
}

func (i MonitoringTemplateMap) ToMonitoringTemplateMapOutputWithContext(ctx context.Context) MonitoringTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringTemplateMapOutput)
}

type MonitoringTemplateOutput struct{ *pulumi.OutputState }

func (MonitoringTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringTemplate)(nil)).Elem()
}

func (o MonitoringTemplateOutput) ToMonitoringTemplateOutput() MonitoringTemplateOutput {
	return o
}

func (o MonitoringTemplateOutput) ToMonitoringTemplateOutputWithContext(ctx context.Context) MonitoringTemplateOutput {
	return o
}

// The OCID of the compartment containing the monitoringTemplate.
func (o MonitoringTemplateOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MonitoringTemplateOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o MonitoringTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
func (o MonitoringTemplateOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringArrayOutput { return v.Destinations }).(pulumi.StringArrayOutput)
}

// (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
func (o MonitoringTemplateOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MonitoringTemplateOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
func (o MonitoringTemplateOutput) IsAlarmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.BoolOutput { return v.IsAlarmsEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
func (o MonitoringTemplateOutput) IsSplitNotificationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.BoolOutput { return v.IsSplitNotificationEnabled }).(pulumi.BoolOutput)
}

// (Updatable) List of members of this monitoring template
func (o MonitoringTemplateOutput) Members() MonitoringTemplateMemberArrayOutput {
	return o.ApplyT(func(v *MonitoringTemplate) MonitoringTemplateMemberArrayOutput { return v.Members }).(MonitoringTemplateMemberArrayOutput)
}

// (Updatable) The format to use for alarm notifications.
func (o MonitoringTemplateOutput) MessageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.MessageFormat }).(pulumi.StringOutput)
}

// (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MonitoringTemplateOutput) RepeatNotificationDuration() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.RepeatNotificationDuration }).(pulumi.StringOutput)
}

// The current lifecycle state of the monitoring template.
func (o MonitoringTemplateOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The current status of the monitoring template i.e. whether it is Applied or NotApplied.
func (o MonitoringTemplateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MonitoringTemplateOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
func (o MonitoringTemplateOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The date and time the monitoringTemplate was created. Format defined by RFC3339.
func (o MonitoringTemplateOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
func (o MonitoringTemplateOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Total Alarm Conditions
func (o MonitoringTemplateOutput) TotalAlarmConditions() pulumi.Float64Output {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.Float64Output { return v.TotalAlarmConditions }).(pulumi.Float64Output)
}

// Total Applied Alarm Conditions
func (o MonitoringTemplateOutput) TotalAppliedAlarmConditions() pulumi.Float64Output {
	return o.ApplyT(func(v *MonitoringTemplate) pulumi.Float64Output { return v.TotalAppliedAlarmConditions }).(pulumi.Float64Output)
}

type MonitoringTemplateArrayOutput struct{ *pulumi.OutputState }

func (MonitoringTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitoringTemplate)(nil)).Elem()
}

func (o MonitoringTemplateArrayOutput) ToMonitoringTemplateArrayOutput() MonitoringTemplateArrayOutput {
	return o
}

func (o MonitoringTemplateArrayOutput) ToMonitoringTemplateArrayOutputWithContext(ctx context.Context) MonitoringTemplateArrayOutput {
	return o
}

func (o MonitoringTemplateArrayOutput) Index(i pulumi.IntInput) MonitoringTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MonitoringTemplate {
		return vs[0].([]*MonitoringTemplate)[vs[1].(int)]
	}).(MonitoringTemplateOutput)
}

type MonitoringTemplateMapOutput struct{ *pulumi.OutputState }

func (MonitoringTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitoringTemplate)(nil)).Elem()
}

func (o MonitoringTemplateMapOutput) ToMonitoringTemplateMapOutput() MonitoringTemplateMapOutput {
	return o
}

func (o MonitoringTemplateMapOutput) ToMonitoringTemplateMapOutputWithContext(ctx context.Context) MonitoringTemplateMapOutput {
	return o
}

func (o MonitoringTemplateMapOutput) MapIndex(k pulumi.StringInput) MonitoringTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MonitoringTemplate {
		return vs[0].(map[string]*MonitoringTemplate)[vs[1].(string)]
	}).(MonitoringTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringTemplateInput)(nil)).Elem(), &MonitoringTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringTemplateArrayInput)(nil)).Elem(), MonitoringTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringTemplateMapInput)(nil)).Elem(), MonitoringTemplateMap{})
	pulumi.RegisterOutputType(MonitoringTemplateOutput{})
	pulumi.RegisterOutputType(MonitoringTemplateArrayOutput{})
	pulumi.RegisterOutputType(MonitoringTemplateMapOutput{})
}
