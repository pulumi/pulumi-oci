// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streaming

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
//
// Starts the provisioning of a new connect harness.
// To track the progress of the provisioning, you can periodically call [GetConnectHarness].
// In the response, the `lifecycleState` parameter of the [ConnectHarness](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/ConnectHarness/) object tells you its current state.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Streaming"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Streaming.NewConnectHarness(ctx, "testConnectHarness", &Streaming.ConnectHarnessArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				Name:          pulumi.Any(_var.Connect_harness_name),
//				DefinedTags:   pulumi.Any(_var.Connect_harness_defined_tags),
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ConnectHarnesses can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Streaming/connectHarness:ConnectHarness test_connect_harness "id"
//
// ```
type ConnectHarness struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment that contains the connect harness.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Any additional details about the current state of the connect harness.
	LifecycleStateDetails pulumi.StringOutput `pulumi:"lifecycleStateDetails"`
	// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
	Name pulumi.StringOutput `pulumi:"name"`
	// The current state of the connect harness.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewConnectHarness registers a new resource with the given unique name, arguments, and options.
func NewConnectHarness(ctx *pulumi.Context,
	name string, args *ConnectHarnessArgs, opts ...pulumi.ResourceOption) (*ConnectHarness, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource ConnectHarness
	err := ctx.RegisterResource("oci:Streaming/connectHarness:ConnectHarness", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectHarness gets an existing ConnectHarness resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectHarness(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectHarnessState, opts ...pulumi.ResourceOption) (*ConnectHarness, error) {
	var resource ConnectHarness
	err := ctx.ReadResource("oci:Streaming/connectHarness:ConnectHarness", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectHarness resources.
type connectHarnessState struct {
	// (Updatable) The OCID of the compartment that contains the connect harness.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Any additional details about the current state of the connect harness.
	LifecycleStateDetails *string `pulumi:"lifecycleStateDetails"`
	// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
	Name *string `pulumi:"name"`
	// The current state of the connect harness.
	State *string `pulumi:"state"`
	// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type ConnectHarnessState struct {
	// (Updatable) The OCID of the compartment that contains the connect harness.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Any additional details about the current state of the connect harness.
	LifecycleStateDetails pulumi.StringPtrInput
	// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
	Name pulumi.StringPtrInput
	// The current state of the connect harness.
	State pulumi.StringPtrInput
	// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated pulumi.StringPtrInput
}

func (ConnectHarnessState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectHarnessState)(nil)).Elem()
}

type connectHarnessArgs struct {
	// (Updatable) The OCID of the compartment that contains the connect harness.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a ConnectHarness resource.
type ConnectHarnessArgs struct {
	// (Updatable) The OCID of the compartment that contains the connect harness.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
	Name pulumi.StringInput
}

func (ConnectHarnessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectHarnessArgs)(nil)).Elem()
}

type ConnectHarnessInput interface {
	pulumi.Input

	ToConnectHarnessOutput() ConnectHarnessOutput
	ToConnectHarnessOutputWithContext(ctx context.Context) ConnectHarnessOutput
}

func (*ConnectHarness) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectHarness)(nil)).Elem()
}

func (i *ConnectHarness) ToConnectHarnessOutput() ConnectHarnessOutput {
	return i.ToConnectHarnessOutputWithContext(context.Background())
}

func (i *ConnectHarness) ToConnectHarnessOutputWithContext(ctx context.Context) ConnectHarnessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectHarnessOutput)
}

// ConnectHarnessArrayInput is an input type that accepts ConnectHarnessArray and ConnectHarnessArrayOutput values.
// You can construct a concrete instance of `ConnectHarnessArrayInput` via:
//
//	ConnectHarnessArray{ ConnectHarnessArgs{...} }
type ConnectHarnessArrayInput interface {
	pulumi.Input

	ToConnectHarnessArrayOutput() ConnectHarnessArrayOutput
	ToConnectHarnessArrayOutputWithContext(context.Context) ConnectHarnessArrayOutput
}

type ConnectHarnessArray []ConnectHarnessInput

func (ConnectHarnessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectHarness)(nil)).Elem()
}

func (i ConnectHarnessArray) ToConnectHarnessArrayOutput() ConnectHarnessArrayOutput {
	return i.ToConnectHarnessArrayOutputWithContext(context.Background())
}

func (i ConnectHarnessArray) ToConnectHarnessArrayOutputWithContext(ctx context.Context) ConnectHarnessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectHarnessArrayOutput)
}

// ConnectHarnessMapInput is an input type that accepts ConnectHarnessMap and ConnectHarnessMapOutput values.
// You can construct a concrete instance of `ConnectHarnessMapInput` via:
//
//	ConnectHarnessMap{ "key": ConnectHarnessArgs{...} }
type ConnectHarnessMapInput interface {
	pulumi.Input

	ToConnectHarnessMapOutput() ConnectHarnessMapOutput
	ToConnectHarnessMapOutputWithContext(context.Context) ConnectHarnessMapOutput
}

type ConnectHarnessMap map[string]ConnectHarnessInput

func (ConnectHarnessMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectHarness)(nil)).Elem()
}

func (i ConnectHarnessMap) ToConnectHarnessMapOutput() ConnectHarnessMapOutput {
	return i.ToConnectHarnessMapOutputWithContext(context.Background())
}

func (i ConnectHarnessMap) ToConnectHarnessMapOutputWithContext(ctx context.Context) ConnectHarnessMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectHarnessMapOutput)
}

type ConnectHarnessOutput struct{ *pulumi.OutputState }

func (ConnectHarnessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectHarness)(nil)).Elem()
}

func (o ConnectHarnessOutput) ToConnectHarnessOutput() ConnectHarnessOutput {
	return o
}

func (o ConnectHarnessOutput) ToConnectHarnessOutputWithContext(ctx context.Context) ConnectHarnessOutput {
	return o
}

// (Updatable) The OCID of the compartment that contains the connect harness.
func (o ConnectHarnessOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectHarness) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o ConnectHarnessOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ConnectHarness) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ConnectHarnessOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ConnectHarness) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Any additional details about the current state of the connect harness.
func (o ConnectHarnessOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectHarness) pulumi.StringOutput { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
func (o ConnectHarnessOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectHarness) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current state of the connect harness.
func (o ConnectHarnessOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectHarness) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
func (o ConnectHarnessOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectHarness) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type ConnectHarnessArrayOutput struct{ *pulumi.OutputState }

func (ConnectHarnessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectHarness)(nil)).Elem()
}

func (o ConnectHarnessArrayOutput) ToConnectHarnessArrayOutput() ConnectHarnessArrayOutput {
	return o
}

func (o ConnectHarnessArrayOutput) ToConnectHarnessArrayOutputWithContext(ctx context.Context) ConnectHarnessArrayOutput {
	return o
}

func (o ConnectHarnessArrayOutput) Index(i pulumi.IntInput) ConnectHarnessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectHarness {
		return vs[0].([]*ConnectHarness)[vs[1].(int)]
	}).(ConnectHarnessOutput)
}

type ConnectHarnessMapOutput struct{ *pulumi.OutputState }

func (ConnectHarnessMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectHarness)(nil)).Elem()
}

func (o ConnectHarnessMapOutput) ToConnectHarnessMapOutput() ConnectHarnessMapOutput {
	return o
}

func (o ConnectHarnessMapOutput) ToConnectHarnessMapOutputWithContext(ctx context.Context) ConnectHarnessMapOutput {
	return o
}

func (o ConnectHarnessMapOutput) MapIndex(k pulumi.StringInput) ConnectHarnessOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectHarness {
		return vs[0].(map[string]*ConnectHarness)[vs[1].(string)]
	}).(ConnectHarnessOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectHarnessInput)(nil)).Elem(), &ConnectHarness{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectHarnessArrayInput)(nil)).Elem(), ConnectHarnessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectHarnessMapInput)(nil)).Elem(), ConnectHarnessMap{})
	pulumi.RegisterOutputType(ConnectHarnessOutput{})
	pulumi.RegisterOutputType(ConnectHarnessArrayOutput{})
	pulumi.RegisterOutputType(ConnectHarnessMapOutput{})
}
