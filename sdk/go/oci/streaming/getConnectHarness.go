// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streaming

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
//
// Gets detailed information about a connect harness.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Streaming"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Streaming.GetConnectHarness(ctx, &streaming.GetConnectHarnessArgs{
//				ConnectHarnessId: testConnectHarnes.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupConnectHarness(ctx *pulumi.Context, args *LookupConnectHarnessArgs, opts ...pulumi.InvokeOption) (*LookupConnectHarnessResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectHarnessResult
	err := ctx.Invoke("oci:Streaming/getConnectHarness:getConnectHarness", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectHarness.
type LookupConnectHarnessArgs struct {
	// The OCID of the connect harness.
	ConnectHarnessId string `pulumi:"connectHarnessId"`
}

// A collection of values returned by getConnectHarness.
type LookupConnectHarnessResult struct {
	// The OCID of the compartment that contains the connect harness.
	CompartmentId    string `pulumi:"compartmentId"`
	ConnectHarnessId string `pulumi:"connectHarnessId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the connect harness.
	Id string `pulumi:"id"`
	// Any additional details about the current state of the connect harness.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
	Name string `pulumi:"name"`
	// The current state of the connect harness.
	State string `pulumi:"state"`
	// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated string `pulumi:"timeCreated"`
}

func LookupConnectHarnessOutput(ctx *pulumi.Context, args LookupConnectHarnessOutputArgs, opts ...pulumi.InvokeOption) LookupConnectHarnessResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectHarnessResult, error) {
			args := v.(LookupConnectHarnessArgs)
			r, err := LookupConnectHarness(ctx, &args, opts...)
			var s LookupConnectHarnessResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectHarnessResultOutput)
}

// A collection of arguments for invoking getConnectHarness.
type LookupConnectHarnessOutputArgs struct {
	// The OCID of the connect harness.
	ConnectHarnessId pulumi.StringInput `pulumi:"connectHarnessId"`
}

func (LookupConnectHarnessOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectHarnessArgs)(nil)).Elem()
}

// A collection of values returned by getConnectHarness.
type LookupConnectHarnessResultOutput struct{ *pulumi.OutputState }

func (LookupConnectHarnessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectHarnessResult)(nil)).Elem()
}

func (o LookupConnectHarnessResultOutput) ToLookupConnectHarnessResultOutput() LookupConnectHarnessResultOutput {
	return o
}

func (o LookupConnectHarnessResultOutput) ToLookupConnectHarnessResultOutputWithContext(ctx context.Context) LookupConnectHarnessResultOutput {
	return o
}

// The OCID of the compartment that contains the connect harness.
func (o LookupConnectHarnessResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupConnectHarnessResultOutput) ConnectHarnessId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) string { return v.ConnectHarnessId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
func (o LookupConnectHarnessResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupConnectHarnessResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the connect harness.
func (o LookupConnectHarnessResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) string { return v.Id }).(pulumi.StringOutput)
}

// Any additional details about the current state of the connect harness.
func (o LookupConnectHarnessResultOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The name of the connect harness. Avoid entering confidential information.  Example: `JDBCConnector`
func (o LookupConnectHarnessResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the connect harness.
func (o LookupConnectHarnessResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
func (o LookupConnectHarnessResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectHarnessResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectHarnessResultOutput{})
}
