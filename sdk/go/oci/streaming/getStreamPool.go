// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streaming

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
//
// Gets detailed information about the stream pool, such as Kafka settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/streaming"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := streaming.GetStreamPool(ctx, &streaming.GetStreamPoolArgs{
//				StreamPoolId: testStreamPoolOciStreamingStreamPool.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStreamPool(ctx *pulumi.Context, args *LookupStreamPoolArgs, opts ...pulumi.InvokeOption) (*LookupStreamPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamPoolResult
	err := ctx.Invoke("oci:Streaming/getStreamPool:getStreamPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamPool.
type LookupStreamPoolArgs struct {
	// The OCID of the stream pool.
	StreamPoolId string `pulumi:"streamPoolId"`
}

// A collection of values returned by getStreamPool.
type LookupStreamPoolResult struct {
	// Compartment OCID that the pool belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Custom Encryption Key which will be used for encryption by all the streams in the pool.
	CustomEncryptionKeys []GetStreamPoolCustomEncryptionKey `pulumi:"customEncryptionKeys"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
	EndpointFqdn string `pulumi:"endpointFqdn"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the stream pool.
	Id string `pulumi:"id"`
	// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
	IsPrivate bool `pulumi:"isPrivate"`
	// Settings for the Kafka compatibility layer.
	KafkaSettings []GetStreamPoolKafkaSetting `pulumi:"kafkaSettings"`
	// Any additional details about the current state of the stream.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The name of the stream pool.
	Name string `pulumi:"name"`
	// Optional settings if the stream pool is private.
	PrivateEndpointSettings []GetStreamPoolPrivateEndpointSetting `pulumi:"privateEndpointSettings"`
	// The current state of the stream pool.
	State        string `pulumi:"state"`
	StreamPoolId string `pulumi:"streamPoolId"`
	// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated string `pulumi:"timeCreated"`
}

func LookupStreamPoolOutput(ctx *pulumi.Context, args LookupStreamPoolOutputArgs, opts ...pulumi.InvokeOption) LookupStreamPoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamPoolResultOutput, error) {
			args := v.(LookupStreamPoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Streaming/getStreamPool:getStreamPool", args, LookupStreamPoolResultOutput{}, options).(LookupStreamPoolResultOutput), nil
		}).(LookupStreamPoolResultOutput)
}

// A collection of arguments for invoking getStreamPool.
type LookupStreamPoolOutputArgs struct {
	// The OCID of the stream pool.
	StreamPoolId pulumi.StringInput `pulumi:"streamPoolId"`
}

func (LookupStreamPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamPoolArgs)(nil)).Elem()
}

// A collection of values returned by getStreamPool.
type LookupStreamPoolResultOutput struct{ *pulumi.OutputState }

func (LookupStreamPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamPoolResult)(nil)).Elem()
}

func (o LookupStreamPoolResultOutput) ToLookupStreamPoolResultOutput() LookupStreamPoolResultOutput {
	return o
}

func (o LookupStreamPoolResultOutput) ToLookupStreamPoolResultOutputWithContext(ctx context.Context) LookupStreamPoolResultOutput {
	return o
}

// Compartment OCID that the pool belongs to.
func (o LookupStreamPoolResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Custom Encryption Key which will be used for encryption by all the streams in the pool.
func (o LookupStreamPoolResultOutput) CustomEncryptionKeys() GetStreamPoolCustomEncryptionKeyArrayOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) []GetStreamPoolCustomEncryptionKey { return v.CustomEncryptionKeys }).(GetStreamPoolCustomEncryptionKeyArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
func (o LookupStreamPoolResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
func (o LookupStreamPoolResultOutput) EndpointFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.EndpointFqdn }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupStreamPoolResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the stream pool.
func (o LookupStreamPoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
func (o LookupStreamPoolResultOutput) IsPrivate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) bool { return v.IsPrivate }).(pulumi.BoolOutput)
}

// Settings for the Kafka compatibility layer.
func (o LookupStreamPoolResultOutput) KafkaSettings() GetStreamPoolKafkaSettingArrayOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) []GetStreamPoolKafkaSetting { return v.KafkaSettings }).(GetStreamPoolKafkaSettingArrayOutput)
}

// Any additional details about the current state of the stream.
func (o LookupStreamPoolResultOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The name of the stream pool.
func (o LookupStreamPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional settings if the stream pool is private.
func (o LookupStreamPoolResultOutput) PrivateEndpointSettings() GetStreamPoolPrivateEndpointSettingArrayOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) []GetStreamPoolPrivateEndpointSetting { return v.PrivateEndpointSettings }).(GetStreamPoolPrivateEndpointSettingArrayOutput)
}

// The current state of the stream pool.
func (o LookupStreamPoolResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupStreamPoolResultOutput) StreamPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.StreamPoolId }).(pulumi.StringOutput)
}

// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
func (o LookupStreamPoolResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPoolResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamPoolResultOutput{})
}
