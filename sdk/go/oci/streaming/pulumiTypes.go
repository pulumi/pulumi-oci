// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package streaming

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StreamPoolCustomEncryptionKey struct {
	// Life cycle State of the custom key
	KeyState *string `pulumi:"keyState"`
	// (Updatable) Custom Encryption Key (Master Key) ocid.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// StreamPoolCustomEncryptionKeyInput is an input type that accepts StreamPoolCustomEncryptionKeyArgs and StreamPoolCustomEncryptionKeyOutput values.
// You can construct a concrete instance of `StreamPoolCustomEncryptionKeyInput` via:
//
//	StreamPoolCustomEncryptionKeyArgs{...}
type StreamPoolCustomEncryptionKeyInput interface {
	pulumi.Input

	ToStreamPoolCustomEncryptionKeyOutput() StreamPoolCustomEncryptionKeyOutput
	ToStreamPoolCustomEncryptionKeyOutputWithContext(context.Context) StreamPoolCustomEncryptionKeyOutput
}

type StreamPoolCustomEncryptionKeyArgs struct {
	// Life cycle State of the custom key
	KeyState pulumi.StringPtrInput `pulumi:"keyState"`
	// (Updatable) Custom Encryption Key (Master Key) ocid.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (StreamPoolCustomEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (i StreamPoolCustomEncryptionKeyArgs) ToStreamPoolCustomEncryptionKeyOutput() StreamPoolCustomEncryptionKeyOutput {
	return i.ToStreamPoolCustomEncryptionKeyOutputWithContext(context.Background())
}

func (i StreamPoolCustomEncryptionKeyArgs) ToStreamPoolCustomEncryptionKeyOutputWithContext(ctx context.Context) StreamPoolCustomEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolCustomEncryptionKeyOutput)
}

func (i StreamPoolCustomEncryptionKeyArgs) ToStreamPoolCustomEncryptionKeyPtrOutput() StreamPoolCustomEncryptionKeyPtrOutput {
	return i.ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i StreamPoolCustomEncryptionKeyArgs) ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(ctx context.Context) StreamPoolCustomEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolCustomEncryptionKeyOutput).ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(ctx)
}

// StreamPoolCustomEncryptionKeyPtrInput is an input type that accepts StreamPoolCustomEncryptionKeyArgs, StreamPoolCustomEncryptionKeyPtr and StreamPoolCustomEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `StreamPoolCustomEncryptionKeyPtrInput` via:
//
//	        StreamPoolCustomEncryptionKeyArgs{...}
//
//	or:
//
//	        nil
type StreamPoolCustomEncryptionKeyPtrInput interface {
	pulumi.Input

	ToStreamPoolCustomEncryptionKeyPtrOutput() StreamPoolCustomEncryptionKeyPtrOutput
	ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(context.Context) StreamPoolCustomEncryptionKeyPtrOutput
}

type streamPoolCustomEncryptionKeyPtrType StreamPoolCustomEncryptionKeyArgs

func StreamPoolCustomEncryptionKeyPtr(v *StreamPoolCustomEncryptionKeyArgs) StreamPoolCustomEncryptionKeyPtrInput {
	return (*streamPoolCustomEncryptionKeyPtrType)(v)
}

func (*streamPoolCustomEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (i *streamPoolCustomEncryptionKeyPtrType) ToStreamPoolCustomEncryptionKeyPtrOutput() StreamPoolCustomEncryptionKeyPtrOutput {
	return i.ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *streamPoolCustomEncryptionKeyPtrType) ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(ctx context.Context) StreamPoolCustomEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolCustomEncryptionKeyPtrOutput)
}

type StreamPoolCustomEncryptionKeyOutput struct{ *pulumi.OutputState }

func (StreamPoolCustomEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (o StreamPoolCustomEncryptionKeyOutput) ToStreamPoolCustomEncryptionKeyOutput() StreamPoolCustomEncryptionKeyOutput {
	return o
}

func (o StreamPoolCustomEncryptionKeyOutput) ToStreamPoolCustomEncryptionKeyOutputWithContext(ctx context.Context) StreamPoolCustomEncryptionKeyOutput {
	return o
}

func (o StreamPoolCustomEncryptionKeyOutput) ToStreamPoolCustomEncryptionKeyPtrOutput() StreamPoolCustomEncryptionKeyPtrOutput {
	return o.ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o StreamPoolCustomEncryptionKeyOutput) ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(ctx context.Context) StreamPoolCustomEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamPoolCustomEncryptionKey) *StreamPoolCustomEncryptionKey {
		return &v
	}).(StreamPoolCustomEncryptionKeyPtrOutput)
}

// Life cycle State of the custom key
func (o StreamPoolCustomEncryptionKeyOutput) KeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPoolCustomEncryptionKey) *string { return v.KeyState }).(pulumi.StringPtrOutput)
}

// (Updatable) Custom Encryption Key (Master Key) ocid.
func (o StreamPoolCustomEncryptionKeyOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v StreamPoolCustomEncryptionKey) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type StreamPoolCustomEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (StreamPoolCustomEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (o StreamPoolCustomEncryptionKeyPtrOutput) ToStreamPoolCustomEncryptionKeyPtrOutput() StreamPoolCustomEncryptionKeyPtrOutput {
	return o
}

func (o StreamPoolCustomEncryptionKeyPtrOutput) ToStreamPoolCustomEncryptionKeyPtrOutputWithContext(ctx context.Context) StreamPoolCustomEncryptionKeyPtrOutput {
	return o
}

func (o StreamPoolCustomEncryptionKeyPtrOutput) Elem() StreamPoolCustomEncryptionKeyOutput {
	return o.ApplyT(func(v *StreamPoolCustomEncryptionKey) StreamPoolCustomEncryptionKey {
		if v != nil {
			return *v
		}
		var ret StreamPoolCustomEncryptionKey
		return ret
	}).(StreamPoolCustomEncryptionKeyOutput)
}

// Life cycle State of the custom key
func (o StreamPoolCustomEncryptionKeyPtrOutput) KeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamPoolCustomEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return v.KeyState
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Custom Encryption Key (Master Key) ocid.
func (o StreamPoolCustomEncryptionKeyPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamPoolCustomEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

type StreamPoolKafkaSettings struct {
	// (Updatable) Enable auto creation of topic on the server.
	AutoCreateTopicsEnable *bool `pulumi:"autoCreateTopicsEnable"`
	// (Updatable) Bootstrap servers.
	BootstrapServers *string `pulumi:"bootstrapServers"`
	// (Updatable) The number of hours to keep a log file before deleting it (in hours).
	LogRetentionHours *int `pulumi:"logRetentionHours"`
	// (Updatable) The default number of log partitions per topic.
	NumPartitions *int `pulumi:"numPartitions"`
}

// StreamPoolKafkaSettingsInput is an input type that accepts StreamPoolKafkaSettingsArgs and StreamPoolKafkaSettingsOutput values.
// You can construct a concrete instance of `StreamPoolKafkaSettingsInput` via:
//
//	StreamPoolKafkaSettingsArgs{...}
type StreamPoolKafkaSettingsInput interface {
	pulumi.Input

	ToStreamPoolKafkaSettingsOutput() StreamPoolKafkaSettingsOutput
	ToStreamPoolKafkaSettingsOutputWithContext(context.Context) StreamPoolKafkaSettingsOutput
}

type StreamPoolKafkaSettingsArgs struct {
	// (Updatable) Enable auto creation of topic on the server.
	AutoCreateTopicsEnable pulumi.BoolPtrInput `pulumi:"autoCreateTopicsEnable"`
	// (Updatable) Bootstrap servers.
	BootstrapServers pulumi.StringPtrInput `pulumi:"bootstrapServers"`
	// (Updatable) The number of hours to keep a log file before deleting it (in hours).
	LogRetentionHours pulumi.IntPtrInput `pulumi:"logRetentionHours"`
	// (Updatable) The default number of log partitions per topic.
	NumPartitions pulumi.IntPtrInput `pulumi:"numPartitions"`
}

func (StreamPoolKafkaSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPoolKafkaSettings)(nil)).Elem()
}

func (i StreamPoolKafkaSettingsArgs) ToStreamPoolKafkaSettingsOutput() StreamPoolKafkaSettingsOutput {
	return i.ToStreamPoolKafkaSettingsOutputWithContext(context.Background())
}

func (i StreamPoolKafkaSettingsArgs) ToStreamPoolKafkaSettingsOutputWithContext(ctx context.Context) StreamPoolKafkaSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolKafkaSettingsOutput)
}

func (i StreamPoolKafkaSettingsArgs) ToStreamPoolKafkaSettingsPtrOutput() StreamPoolKafkaSettingsPtrOutput {
	return i.ToStreamPoolKafkaSettingsPtrOutputWithContext(context.Background())
}

func (i StreamPoolKafkaSettingsArgs) ToStreamPoolKafkaSettingsPtrOutputWithContext(ctx context.Context) StreamPoolKafkaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolKafkaSettingsOutput).ToStreamPoolKafkaSettingsPtrOutputWithContext(ctx)
}

// StreamPoolKafkaSettingsPtrInput is an input type that accepts StreamPoolKafkaSettingsArgs, StreamPoolKafkaSettingsPtr and StreamPoolKafkaSettingsPtrOutput values.
// You can construct a concrete instance of `StreamPoolKafkaSettingsPtrInput` via:
//
//	        StreamPoolKafkaSettingsArgs{...}
//
//	or:
//
//	        nil
type StreamPoolKafkaSettingsPtrInput interface {
	pulumi.Input

	ToStreamPoolKafkaSettingsPtrOutput() StreamPoolKafkaSettingsPtrOutput
	ToStreamPoolKafkaSettingsPtrOutputWithContext(context.Context) StreamPoolKafkaSettingsPtrOutput
}

type streamPoolKafkaSettingsPtrType StreamPoolKafkaSettingsArgs

func StreamPoolKafkaSettingsPtr(v *StreamPoolKafkaSettingsArgs) StreamPoolKafkaSettingsPtrInput {
	return (*streamPoolKafkaSettingsPtrType)(v)
}

func (*streamPoolKafkaSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPoolKafkaSettings)(nil)).Elem()
}

func (i *streamPoolKafkaSettingsPtrType) ToStreamPoolKafkaSettingsPtrOutput() StreamPoolKafkaSettingsPtrOutput {
	return i.ToStreamPoolKafkaSettingsPtrOutputWithContext(context.Background())
}

func (i *streamPoolKafkaSettingsPtrType) ToStreamPoolKafkaSettingsPtrOutputWithContext(ctx context.Context) StreamPoolKafkaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolKafkaSettingsPtrOutput)
}

type StreamPoolKafkaSettingsOutput struct{ *pulumi.OutputState }

func (StreamPoolKafkaSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPoolKafkaSettings)(nil)).Elem()
}

func (o StreamPoolKafkaSettingsOutput) ToStreamPoolKafkaSettingsOutput() StreamPoolKafkaSettingsOutput {
	return o
}

func (o StreamPoolKafkaSettingsOutput) ToStreamPoolKafkaSettingsOutputWithContext(ctx context.Context) StreamPoolKafkaSettingsOutput {
	return o
}

func (o StreamPoolKafkaSettingsOutput) ToStreamPoolKafkaSettingsPtrOutput() StreamPoolKafkaSettingsPtrOutput {
	return o.ToStreamPoolKafkaSettingsPtrOutputWithContext(context.Background())
}

func (o StreamPoolKafkaSettingsOutput) ToStreamPoolKafkaSettingsPtrOutputWithContext(ctx context.Context) StreamPoolKafkaSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamPoolKafkaSettings) *StreamPoolKafkaSettings {
		return &v
	}).(StreamPoolKafkaSettingsPtrOutput)
}

// (Updatable) Enable auto creation of topic on the server.
func (o StreamPoolKafkaSettingsOutput) AutoCreateTopicsEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StreamPoolKafkaSettings) *bool { return v.AutoCreateTopicsEnable }).(pulumi.BoolPtrOutput)
}

// (Updatable) Bootstrap servers.
func (o StreamPoolKafkaSettingsOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPoolKafkaSettings) *string { return v.BootstrapServers }).(pulumi.StringPtrOutput)
}

// (Updatable) The number of hours to keep a log file before deleting it (in hours).
func (o StreamPoolKafkaSettingsOutput) LogRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StreamPoolKafkaSettings) *int { return v.LogRetentionHours }).(pulumi.IntPtrOutput)
}

// (Updatable) The default number of log partitions per topic.
func (o StreamPoolKafkaSettingsOutput) NumPartitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StreamPoolKafkaSettings) *int { return v.NumPartitions }).(pulumi.IntPtrOutput)
}

type StreamPoolKafkaSettingsPtrOutput struct{ *pulumi.OutputState }

func (StreamPoolKafkaSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPoolKafkaSettings)(nil)).Elem()
}

func (o StreamPoolKafkaSettingsPtrOutput) ToStreamPoolKafkaSettingsPtrOutput() StreamPoolKafkaSettingsPtrOutput {
	return o
}

func (o StreamPoolKafkaSettingsPtrOutput) ToStreamPoolKafkaSettingsPtrOutputWithContext(ctx context.Context) StreamPoolKafkaSettingsPtrOutput {
	return o
}

func (o StreamPoolKafkaSettingsPtrOutput) Elem() StreamPoolKafkaSettingsOutput {
	return o.ApplyT(func(v *StreamPoolKafkaSettings) StreamPoolKafkaSettings {
		if v != nil {
			return *v
		}
		var ret StreamPoolKafkaSettings
		return ret
	}).(StreamPoolKafkaSettingsOutput)
}

// (Updatable) Enable auto creation of topic on the server.
func (o StreamPoolKafkaSettingsPtrOutput) AutoCreateTopicsEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StreamPoolKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AutoCreateTopicsEnable
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Bootstrap servers.
func (o StreamPoolKafkaSettingsPtrOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamPoolKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapServers
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The number of hours to keep a log file before deleting it (in hours).
func (o StreamPoolKafkaSettingsPtrOutput) LogRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StreamPoolKafkaSettings) *int {
		if v == nil {
			return nil
		}
		return v.LogRetentionHours
	}).(pulumi.IntPtrOutput)
}

// (Updatable) The default number of log partitions per topic.
func (o StreamPoolKafkaSettingsPtrOutput) NumPartitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StreamPoolKafkaSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumPartitions
	}).(pulumi.IntPtrOutput)
}

type StreamPoolPrivateEndpointSettings struct {
	// The optional list of network security groups to be used with the private endpoint of the stream pool. That value cannot be changed.
	NsgIds []string `pulumi:"nsgIds"`
	// The optional private IP you want to be associated with your private stream pool. That parameter can only be specified when the subnetId parameter is set. It cannot be changed. The private IP needs to be part of the CIDR range of the specified subnetId or the creation will fail. If not specified a random IP inside the subnet will be chosen. After the stream pool is created, a custom FQDN, pointing to this private IP, is created. The FQDN is then used to access the service instead of the private IP.
	PrivateEndpointIp *string `pulumi:"privateEndpointIp"`
	// If specified, the stream pool will be private and only accessible from inside that subnet. Producing-to and consuming-from a stream inside a private stream pool can also only be done from inside the subnet. That value cannot be changed.
	SubnetId *string `pulumi:"subnetId"`
}

// StreamPoolPrivateEndpointSettingsInput is an input type that accepts StreamPoolPrivateEndpointSettingsArgs and StreamPoolPrivateEndpointSettingsOutput values.
// You can construct a concrete instance of `StreamPoolPrivateEndpointSettingsInput` via:
//
//	StreamPoolPrivateEndpointSettingsArgs{...}
type StreamPoolPrivateEndpointSettingsInput interface {
	pulumi.Input

	ToStreamPoolPrivateEndpointSettingsOutput() StreamPoolPrivateEndpointSettingsOutput
	ToStreamPoolPrivateEndpointSettingsOutputWithContext(context.Context) StreamPoolPrivateEndpointSettingsOutput
}

type StreamPoolPrivateEndpointSettingsArgs struct {
	// The optional list of network security groups to be used with the private endpoint of the stream pool. That value cannot be changed.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The optional private IP you want to be associated with your private stream pool. That parameter can only be specified when the subnetId parameter is set. It cannot be changed. The private IP needs to be part of the CIDR range of the specified subnetId or the creation will fail. If not specified a random IP inside the subnet will be chosen. After the stream pool is created, a custom FQDN, pointing to this private IP, is created. The FQDN is then used to access the service instead of the private IP.
	PrivateEndpointIp pulumi.StringPtrInput `pulumi:"privateEndpointIp"`
	// If specified, the stream pool will be private and only accessible from inside that subnet. Producing-to and consuming-from a stream inside a private stream pool can also only be done from inside the subnet. That value cannot be changed.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (StreamPoolPrivateEndpointSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPoolPrivateEndpointSettings)(nil)).Elem()
}

func (i StreamPoolPrivateEndpointSettingsArgs) ToStreamPoolPrivateEndpointSettingsOutput() StreamPoolPrivateEndpointSettingsOutput {
	return i.ToStreamPoolPrivateEndpointSettingsOutputWithContext(context.Background())
}

func (i StreamPoolPrivateEndpointSettingsArgs) ToStreamPoolPrivateEndpointSettingsOutputWithContext(ctx context.Context) StreamPoolPrivateEndpointSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolPrivateEndpointSettingsOutput)
}

func (i StreamPoolPrivateEndpointSettingsArgs) ToStreamPoolPrivateEndpointSettingsPtrOutput() StreamPoolPrivateEndpointSettingsPtrOutput {
	return i.ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(context.Background())
}

func (i StreamPoolPrivateEndpointSettingsArgs) ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(ctx context.Context) StreamPoolPrivateEndpointSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolPrivateEndpointSettingsOutput).ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(ctx)
}

// StreamPoolPrivateEndpointSettingsPtrInput is an input type that accepts StreamPoolPrivateEndpointSettingsArgs, StreamPoolPrivateEndpointSettingsPtr and StreamPoolPrivateEndpointSettingsPtrOutput values.
// You can construct a concrete instance of `StreamPoolPrivateEndpointSettingsPtrInput` via:
//
//	        StreamPoolPrivateEndpointSettingsArgs{...}
//
//	or:
//
//	        nil
type StreamPoolPrivateEndpointSettingsPtrInput interface {
	pulumi.Input

	ToStreamPoolPrivateEndpointSettingsPtrOutput() StreamPoolPrivateEndpointSettingsPtrOutput
	ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(context.Context) StreamPoolPrivateEndpointSettingsPtrOutput
}

type streamPoolPrivateEndpointSettingsPtrType StreamPoolPrivateEndpointSettingsArgs

func StreamPoolPrivateEndpointSettingsPtr(v *StreamPoolPrivateEndpointSettingsArgs) StreamPoolPrivateEndpointSettingsPtrInput {
	return (*streamPoolPrivateEndpointSettingsPtrType)(v)
}

func (*streamPoolPrivateEndpointSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPoolPrivateEndpointSettings)(nil)).Elem()
}

func (i *streamPoolPrivateEndpointSettingsPtrType) ToStreamPoolPrivateEndpointSettingsPtrOutput() StreamPoolPrivateEndpointSettingsPtrOutput {
	return i.ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(context.Background())
}

func (i *streamPoolPrivateEndpointSettingsPtrType) ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(ctx context.Context) StreamPoolPrivateEndpointSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamPoolPrivateEndpointSettingsPtrOutput)
}

type StreamPoolPrivateEndpointSettingsOutput struct{ *pulumi.OutputState }

func (StreamPoolPrivateEndpointSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamPoolPrivateEndpointSettings)(nil)).Elem()
}

func (o StreamPoolPrivateEndpointSettingsOutput) ToStreamPoolPrivateEndpointSettingsOutput() StreamPoolPrivateEndpointSettingsOutput {
	return o
}

func (o StreamPoolPrivateEndpointSettingsOutput) ToStreamPoolPrivateEndpointSettingsOutputWithContext(ctx context.Context) StreamPoolPrivateEndpointSettingsOutput {
	return o
}

func (o StreamPoolPrivateEndpointSettingsOutput) ToStreamPoolPrivateEndpointSettingsPtrOutput() StreamPoolPrivateEndpointSettingsPtrOutput {
	return o.ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(context.Background())
}

func (o StreamPoolPrivateEndpointSettingsOutput) ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(ctx context.Context) StreamPoolPrivateEndpointSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamPoolPrivateEndpointSettings) *StreamPoolPrivateEndpointSettings {
		return &v
	}).(StreamPoolPrivateEndpointSettingsPtrOutput)
}

// The optional list of network security groups to be used with the private endpoint of the stream pool. That value cannot be changed.
func (o StreamPoolPrivateEndpointSettingsOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StreamPoolPrivateEndpointSettings) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The optional private IP you want to be associated with your private stream pool. That parameter can only be specified when the subnetId parameter is set. It cannot be changed. The private IP needs to be part of the CIDR range of the specified subnetId or the creation will fail. If not specified a random IP inside the subnet will be chosen. After the stream pool is created, a custom FQDN, pointing to this private IP, is created. The FQDN is then used to access the service instead of the private IP.
func (o StreamPoolPrivateEndpointSettingsOutput) PrivateEndpointIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPoolPrivateEndpointSettings) *string { return v.PrivateEndpointIp }).(pulumi.StringPtrOutput)
}

// If specified, the stream pool will be private and only accessible from inside that subnet. Producing-to and consuming-from a stream inside a private stream pool can also only be done from inside the subnet. That value cannot be changed.
func (o StreamPoolPrivateEndpointSettingsOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamPoolPrivateEndpointSettings) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type StreamPoolPrivateEndpointSettingsPtrOutput struct{ *pulumi.OutputState }

func (StreamPoolPrivateEndpointSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamPoolPrivateEndpointSettings)(nil)).Elem()
}

func (o StreamPoolPrivateEndpointSettingsPtrOutput) ToStreamPoolPrivateEndpointSettingsPtrOutput() StreamPoolPrivateEndpointSettingsPtrOutput {
	return o
}

func (o StreamPoolPrivateEndpointSettingsPtrOutput) ToStreamPoolPrivateEndpointSettingsPtrOutputWithContext(ctx context.Context) StreamPoolPrivateEndpointSettingsPtrOutput {
	return o
}

func (o StreamPoolPrivateEndpointSettingsPtrOutput) Elem() StreamPoolPrivateEndpointSettingsOutput {
	return o.ApplyT(func(v *StreamPoolPrivateEndpointSettings) StreamPoolPrivateEndpointSettings {
		if v != nil {
			return *v
		}
		var ret StreamPoolPrivateEndpointSettings
		return ret
	}).(StreamPoolPrivateEndpointSettingsOutput)
}

// The optional list of network security groups to be used with the private endpoint of the stream pool. That value cannot be changed.
func (o StreamPoolPrivateEndpointSettingsPtrOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StreamPoolPrivateEndpointSettings) []string {
		if v == nil {
			return nil
		}
		return v.NsgIds
	}).(pulumi.StringArrayOutput)
}

// The optional private IP you want to be associated with your private stream pool. That parameter can only be specified when the subnetId parameter is set. It cannot be changed. The private IP needs to be part of the CIDR range of the specified subnetId or the creation will fail. If not specified a random IP inside the subnet will be chosen. After the stream pool is created, a custom FQDN, pointing to this private IP, is created. The FQDN is then used to access the service instead of the private IP.
func (o StreamPoolPrivateEndpointSettingsPtrOutput) PrivateEndpointIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamPoolPrivateEndpointSettings) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointIp
	}).(pulumi.StringPtrOutput)
}

// If specified, the stream pool will be private and only accessible from inside that subnet. Producing-to and consuming-from a stream inside a private stream pool can also only be done from inside the subnet. That value cannot be changed.
func (o StreamPoolPrivateEndpointSettingsPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamPoolPrivateEndpointSettings) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type GetConnectHarnessesConnectHarness struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only resources that match the given ID exactly.
	Id string `pulumi:"id"`
	// Any additional details about the current state of the connect harness.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// A filter to return only resources that match the given name exactly.
	Name string `pulumi:"name"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated string `pulumi:"timeCreated"`
}

// GetConnectHarnessesConnectHarnessInput is an input type that accepts GetConnectHarnessesConnectHarnessArgs and GetConnectHarnessesConnectHarnessOutput values.
// You can construct a concrete instance of `GetConnectHarnessesConnectHarnessInput` via:
//
//	GetConnectHarnessesConnectHarnessArgs{...}
type GetConnectHarnessesConnectHarnessInput interface {
	pulumi.Input

	ToGetConnectHarnessesConnectHarnessOutput() GetConnectHarnessesConnectHarnessOutput
	ToGetConnectHarnessesConnectHarnessOutputWithContext(context.Context) GetConnectHarnessesConnectHarnessOutput
}

type GetConnectHarnessesConnectHarnessArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only resources that match the given ID exactly.
	Id pulumi.StringInput `pulumi:"id"`
	// Any additional details about the current state of the connect harness.
	LifecycleStateDetails pulumi.StringInput `pulumi:"lifecycleStateDetails"`
	// A filter to return only resources that match the given name exactly.
	Name pulumi.StringInput `pulumi:"name"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetConnectHarnessesConnectHarnessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectHarnessesConnectHarness)(nil)).Elem()
}

func (i GetConnectHarnessesConnectHarnessArgs) ToGetConnectHarnessesConnectHarnessOutput() GetConnectHarnessesConnectHarnessOutput {
	return i.ToGetConnectHarnessesConnectHarnessOutputWithContext(context.Background())
}

func (i GetConnectHarnessesConnectHarnessArgs) ToGetConnectHarnessesConnectHarnessOutputWithContext(ctx context.Context) GetConnectHarnessesConnectHarnessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectHarnessesConnectHarnessOutput)
}

// GetConnectHarnessesConnectHarnessArrayInput is an input type that accepts GetConnectHarnessesConnectHarnessArray and GetConnectHarnessesConnectHarnessArrayOutput values.
// You can construct a concrete instance of `GetConnectHarnessesConnectHarnessArrayInput` via:
//
//	GetConnectHarnessesConnectHarnessArray{ GetConnectHarnessesConnectHarnessArgs{...} }
type GetConnectHarnessesConnectHarnessArrayInput interface {
	pulumi.Input

	ToGetConnectHarnessesConnectHarnessArrayOutput() GetConnectHarnessesConnectHarnessArrayOutput
	ToGetConnectHarnessesConnectHarnessArrayOutputWithContext(context.Context) GetConnectHarnessesConnectHarnessArrayOutput
}

type GetConnectHarnessesConnectHarnessArray []GetConnectHarnessesConnectHarnessInput

func (GetConnectHarnessesConnectHarnessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectHarnessesConnectHarness)(nil)).Elem()
}

func (i GetConnectHarnessesConnectHarnessArray) ToGetConnectHarnessesConnectHarnessArrayOutput() GetConnectHarnessesConnectHarnessArrayOutput {
	return i.ToGetConnectHarnessesConnectHarnessArrayOutputWithContext(context.Background())
}

func (i GetConnectHarnessesConnectHarnessArray) ToGetConnectHarnessesConnectHarnessArrayOutputWithContext(ctx context.Context) GetConnectHarnessesConnectHarnessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectHarnessesConnectHarnessArrayOutput)
}

type GetConnectHarnessesConnectHarnessOutput struct{ *pulumi.OutputState }

func (GetConnectHarnessesConnectHarnessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectHarnessesConnectHarness)(nil)).Elem()
}

func (o GetConnectHarnessesConnectHarnessOutput) ToGetConnectHarnessesConnectHarnessOutput() GetConnectHarnessesConnectHarnessOutput {
	return o
}

func (o GetConnectHarnessesConnectHarnessOutput) ToGetConnectHarnessesConnectHarnessOutputWithContext(ctx context.Context) GetConnectHarnessesConnectHarnessOutput {
	return o
}

// The OCID of the compartment.
func (o GetConnectHarnessesConnectHarnessOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
func (o GetConnectHarnessesConnectHarnessOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetConnectHarnessesConnectHarnessOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the given ID exactly.
func (o GetConnectHarnessesConnectHarnessOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) string { return v.Id }).(pulumi.StringOutput)
}

// Any additional details about the current state of the connect harness.
func (o GetConnectHarnessesConnectHarnessOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// A filter to return only resources that match the given name exactly.
func (o GetConnectHarnessesConnectHarnessOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) string { return v.Name }).(pulumi.StringOutput)
}

// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetConnectHarnessesConnectHarnessOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the connect harness was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
func (o GetConnectHarnessesConnectHarnessOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectHarnessesConnectHarness) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetConnectHarnessesConnectHarnessArrayOutput struct{ *pulumi.OutputState }

func (GetConnectHarnessesConnectHarnessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectHarnessesConnectHarness)(nil)).Elem()
}

func (o GetConnectHarnessesConnectHarnessArrayOutput) ToGetConnectHarnessesConnectHarnessArrayOutput() GetConnectHarnessesConnectHarnessArrayOutput {
	return o
}

func (o GetConnectHarnessesConnectHarnessArrayOutput) ToGetConnectHarnessesConnectHarnessArrayOutputWithContext(ctx context.Context) GetConnectHarnessesConnectHarnessArrayOutput {
	return o
}

func (o GetConnectHarnessesConnectHarnessArrayOutput) Index(i pulumi.IntInput) GetConnectHarnessesConnectHarnessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectHarnessesConnectHarness {
		return vs[0].([]GetConnectHarnessesConnectHarness)[vs[1].(int)]
	}).(GetConnectHarnessesConnectHarnessOutput)
}

type GetConnectHarnessesFilter struct {
	// A filter to return only resources that match the given name exactly.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetConnectHarnessesFilterInput is an input type that accepts GetConnectHarnessesFilterArgs and GetConnectHarnessesFilterOutput values.
// You can construct a concrete instance of `GetConnectHarnessesFilterInput` via:
//
//	GetConnectHarnessesFilterArgs{...}
type GetConnectHarnessesFilterInput interface {
	pulumi.Input

	ToGetConnectHarnessesFilterOutput() GetConnectHarnessesFilterOutput
	ToGetConnectHarnessesFilterOutputWithContext(context.Context) GetConnectHarnessesFilterOutput
}

type GetConnectHarnessesFilterArgs struct {
	// A filter to return only resources that match the given name exactly.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConnectHarnessesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectHarnessesFilter)(nil)).Elem()
}

func (i GetConnectHarnessesFilterArgs) ToGetConnectHarnessesFilterOutput() GetConnectHarnessesFilterOutput {
	return i.ToGetConnectHarnessesFilterOutputWithContext(context.Background())
}

func (i GetConnectHarnessesFilterArgs) ToGetConnectHarnessesFilterOutputWithContext(ctx context.Context) GetConnectHarnessesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectHarnessesFilterOutput)
}

// GetConnectHarnessesFilterArrayInput is an input type that accepts GetConnectHarnessesFilterArray and GetConnectHarnessesFilterArrayOutput values.
// You can construct a concrete instance of `GetConnectHarnessesFilterArrayInput` via:
//
//	GetConnectHarnessesFilterArray{ GetConnectHarnessesFilterArgs{...} }
type GetConnectHarnessesFilterArrayInput interface {
	pulumi.Input

	ToGetConnectHarnessesFilterArrayOutput() GetConnectHarnessesFilterArrayOutput
	ToGetConnectHarnessesFilterArrayOutputWithContext(context.Context) GetConnectHarnessesFilterArrayOutput
}

type GetConnectHarnessesFilterArray []GetConnectHarnessesFilterInput

func (GetConnectHarnessesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectHarnessesFilter)(nil)).Elem()
}

func (i GetConnectHarnessesFilterArray) ToGetConnectHarnessesFilterArrayOutput() GetConnectHarnessesFilterArrayOutput {
	return i.ToGetConnectHarnessesFilterArrayOutputWithContext(context.Background())
}

func (i GetConnectHarnessesFilterArray) ToGetConnectHarnessesFilterArrayOutputWithContext(ctx context.Context) GetConnectHarnessesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectHarnessesFilterArrayOutput)
}

type GetConnectHarnessesFilterOutput struct{ *pulumi.OutputState }

func (GetConnectHarnessesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectHarnessesFilter)(nil)).Elem()
}

func (o GetConnectHarnessesFilterOutput) ToGetConnectHarnessesFilterOutput() GetConnectHarnessesFilterOutput {
	return o
}

func (o GetConnectHarnessesFilterOutput) ToGetConnectHarnessesFilterOutputWithContext(ctx context.Context) GetConnectHarnessesFilterOutput {
	return o
}

// A filter to return only resources that match the given name exactly.
func (o GetConnectHarnessesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectHarnessesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConnectHarnessesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetConnectHarnessesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetConnectHarnessesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectHarnessesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConnectHarnessesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConnectHarnessesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectHarnessesFilter)(nil)).Elem()
}

func (o GetConnectHarnessesFilterArrayOutput) ToGetConnectHarnessesFilterArrayOutput() GetConnectHarnessesFilterArrayOutput {
	return o
}

func (o GetConnectHarnessesFilterArrayOutput) ToGetConnectHarnessesFilterArrayOutputWithContext(ctx context.Context) GetConnectHarnessesFilterArrayOutput {
	return o
}

func (o GetConnectHarnessesFilterArrayOutput) Index(i pulumi.IntInput) GetConnectHarnessesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectHarnessesFilter {
		return vs[0].([]GetConnectHarnessesFilter)[vs[1].(int)]
	}).(GetConnectHarnessesFilterOutput)
}

type GetStreamPoolCustomEncryptionKey struct {
	// Life cycle State of the custom key
	KeyState string `pulumi:"keyState"`
	// Custom Encryption Key (Master Key) ocid.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// GetStreamPoolCustomEncryptionKeyInput is an input type that accepts GetStreamPoolCustomEncryptionKeyArgs and GetStreamPoolCustomEncryptionKeyOutput values.
// You can construct a concrete instance of `GetStreamPoolCustomEncryptionKeyInput` via:
//
//	GetStreamPoolCustomEncryptionKeyArgs{...}
type GetStreamPoolCustomEncryptionKeyInput interface {
	pulumi.Input

	ToGetStreamPoolCustomEncryptionKeyOutput() GetStreamPoolCustomEncryptionKeyOutput
	ToGetStreamPoolCustomEncryptionKeyOutputWithContext(context.Context) GetStreamPoolCustomEncryptionKeyOutput
}

type GetStreamPoolCustomEncryptionKeyArgs struct {
	// Life cycle State of the custom key
	KeyState pulumi.StringInput `pulumi:"keyState"`
	// Custom Encryption Key (Master Key) ocid.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (GetStreamPoolCustomEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (i GetStreamPoolCustomEncryptionKeyArgs) ToGetStreamPoolCustomEncryptionKeyOutput() GetStreamPoolCustomEncryptionKeyOutput {
	return i.ToGetStreamPoolCustomEncryptionKeyOutputWithContext(context.Background())
}

func (i GetStreamPoolCustomEncryptionKeyArgs) ToGetStreamPoolCustomEncryptionKeyOutputWithContext(ctx context.Context) GetStreamPoolCustomEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolCustomEncryptionKeyOutput)
}

// GetStreamPoolCustomEncryptionKeyArrayInput is an input type that accepts GetStreamPoolCustomEncryptionKeyArray and GetStreamPoolCustomEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolCustomEncryptionKeyArrayInput` via:
//
//	GetStreamPoolCustomEncryptionKeyArray{ GetStreamPoolCustomEncryptionKeyArgs{...} }
type GetStreamPoolCustomEncryptionKeyArrayInput interface {
	pulumi.Input

	ToGetStreamPoolCustomEncryptionKeyArrayOutput() GetStreamPoolCustomEncryptionKeyArrayOutput
	ToGetStreamPoolCustomEncryptionKeyArrayOutputWithContext(context.Context) GetStreamPoolCustomEncryptionKeyArrayOutput
}

type GetStreamPoolCustomEncryptionKeyArray []GetStreamPoolCustomEncryptionKeyInput

func (GetStreamPoolCustomEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (i GetStreamPoolCustomEncryptionKeyArray) ToGetStreamPoolCustomEncryptionKeyArrayOutput() GetStreamPoolCustomEncryptionKeyArrayOutput {
	return i.ToGetStreamPoolCustomEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolCustomEncryptionKeyArray) ToGetStreamPoolCustomEncryptionKeyArrayOutputWithContext(ctx context.Context) GetStreamPoolCustomEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolCustomEncryptionKeyArrayOutput)
}

type GetStreamPoolCustomEncryptionKeyOutput struct{ *pulumi.OutputState }

func (GetStreamPoolCustomEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (o GetStreamPoolCustomEncryptionKeyOutput) ToGetStreamPoolCustomEncryptionKeyOutput() GetStreamPoolCustomEncryptionKeyOutput {
	return o
}

func (o GetStreamPoolCustomEncryptionKeyOutput) ToGetStreamPoolCustomEncryptionKeyOutputWithContext(ctx context.Context) GetStreamPoolCustomEncryptionKeyOutput {
	return o
}

// Life cycle State of the custom key
func (o GetStreamPoolCustomEncryptionKeyOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolCustomEncryptionKey) string { return v.KeyState }).(pulumi.StringOutput)
}

// Custom Encryption Key (Master Key) ocid.
func (o GetStreamPoolCustomEncryptionKeyOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolCustomEncryptionKey) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type GetStreamPoolCustomEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolCustomEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (o GetStreamPoolCustomEncryptionKeyArrayOutput) ToGetStreamPoolCustomEncryptionKeyArrayOutput() GetStreamPoolCustomEncryptionKeyArrayOutput {
	return o
}

func (o GetStreamPoolCustomEncryptionKeyArrayOutput) ToGetStreamPoolCustomEncryptionKeyArrayOutputWithContext(ctx context.Context) GetStreamPoolCustomEncryptionKeyArrayOutput {
	return o
}

func (o GetStreamPoolCustomEncryptionKeyArrayOutput) Index(i pulumi.IntInput) GetStreamPoolCustomEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolCustomEncryptionKey {
		return vs[0].([]GetStreamPoolCustomEncryptionKey)[vs[1].(int)]
	}).(GetStreamPoolCustomEncryptionKeyOutput)
}

type GetStreamPoolKafkaSetting struct {
	// Enable auto creation of topic on the server.
	AutoCreateTopicsEnable bool `pulumi:"autoCreateTopicsEnable"`
	// Bootstrap servers.
	BootstrapServers string `pulumi:"bootstrapServers"`
	// The number of hours to keep a log file before deleting it (in hours).
	LogRetentionHours int `pulumi:"logRetentionHours"`
	// The default number of log partitions per topic.
	NumPartitions int `pulumi:"numPartitions"`
}

// GetStreamPoolKafkaSettingInput is an input type that accepts GetStreamPoolKafkaSettingArgs and GetStreamPoolKafkaSettingOutput values.
// You can construct a concrete instance of `GetStreamPoolKafkaSettingInput` via:
//
//	GetStreamPoolKafkaSettingArgs{...}
type GetStreamPoolKafkaSettingInput interface {
	pulumi.Input

	ToGetStreamPoolKafkaSettingOutput() GetStreamPoolKafkaSettingOutput
	ToGetStreamPoolKafkaSettingOutputWithContext(context.Context) GetStreamPoolKafkaSettingOutput
}

type GetStreamPoolKafkaSettingArgs struct {
	// Enable auto creation of topic on the server.
	AutoCreateTopicsEnable pulumi.BoolInput `pulumi:"autoCreateTopicsEnable"`
	// Bootstrap servers.
	BootstrapServers pulumi.StringInput `pulumi:"bootstrapServers"`
	// The number of hours to keep a log file before deleting it (in hours).
	LogRetentionHours pulumi.IntInput `pulumi:"logRetentionHours"`
	// The default number of log partitions per topic.
	NumPartitions pulumi.IntInput `pulumi:"numPartitions"`
}

func (GetStreamPoolKafkaSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolKafkaSetting)(nil)).Elem()
}

func (i GetStreamPoolKafkaSettingArgs) ToGetStreamPoolKafkaSettingOutput() GetStreamPoolKafkaSettingOutput {
	return i.ToGetStreamPoolKafkaSettingOutputWithContext(context.Background())
}

func (i GetStreamPoolKafkaSettingArgs) ToGetStreamPoolKafkaSettingOutputWithContext(ctx context.Context) GetStreamPoolKafkaSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolKafkaSettingOutput)
}

// GetStreamPoolKafkaSettingArrayInput is an input type that accepts GetStreamPoolKafkaSettingArray and GetStreamPoolKafkaSettingArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolKafkaSettingArrayInput` via:
//
//	GetStreamPoolKafkaSettingArray{ GetStreamPoolKafkaSettingArgs{...} }
type GetStreamPoolKafkaSettingArrayInput interface {
	pulumi.Input

	ToGetStreamPoolKafkaSettingArrayOutput() GetStreamPoolKafkaSettingArrayOutput
	ToGetStreamPoolKafkaSettingArrayOutputWithContext(context.Context) GetStreamPoolKafkaSettingArrayOutput
}

type GetStreamPoolKafkaSettingArray []GetStreamPoolKafkaSettingInput

func (GetStreamPoolKafkaSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolKafkaSetting)(nil)).Elem()
}

func (i GetStreamPoolKafkaSettingArray) ToGetStreamPoolKafkaSettingArrayOutput() GetStreamPoolKafkaSettingArrayOutput {
	return i.ToGetStreamPoolKafkaSettingArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolKafkaSettingArray) ToGetStreamPoolKafkaSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolKafkaSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolKafkaSettingArrayOutput)
}

type GetStreamPoolKafkaSettingOutput struct{ *pulumi.OutputState }

func (GetStreamPoolKafkaSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolKafkaSetting)(nil)).Elem()
}

func (o GetStreamPoolKafkaSettingOutput) ToGetStreamPoolKafkaSettingOutput() GetStreamPoolKafkaSettingOutput {
	return o
}

func (o GetStreamPoolKafkaSettingOutput) ToGetStreamPoolKafkaSettingOutputWithContext(ctx context.Context) GetStreamPoolKafkaSettingOutput {
	return o
}

// Enable auto creation of topic on the server.
func (o GetStreamPoolKafkaSettingOutput) AutoCreateTopicsEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamPoolKafkaSetting) bool { return v.AutoCreateTopicsEnable }).(pulumi.BoolOutput)
}

// Bootstrap servers.
func (o GetStreamPoolKafkaSettingOutput) BootstrapServers() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolKafkaSetting) string { return v.BootstrapServers }).(pulumi.StringOutput)
}

// The number of hours to keep a log file before deleting it (in hours).
func (o GetStreamPoolKafkaSettingOutput) LogRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamPoolKafkaSetting) int { return v.LogRetentionHours }).(pulumi.IntOutput)
}

// The default number of log partitions per topic.
func (o GetStreamPoolKafkaSettingOutput) NumPartitions() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamPoolKafkaSetting) int { return v.NumPartitions }).(pulumi.IntOutput)
}

type GetStreamPoolKafkaSettingArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolKafkaSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolKafkaSetting)(nil)).Elem()
}

func (o GetStreamPoolKafkaSettingArrayOutput) ToGetStreamPoolKafkaSettingArrayOutput() GetStreamPoolKafkaSettingArrayOutput {
	return o
}

func (o GetStreamPoolKafkaSettingArrayOutput) ToGetStreamPoolKafkaSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolKafkaSettingArrayOutput {
	return o
}

func (o GetStreamPoolKafkaSettingArrayOutput) Index(i pulumi.IntInput) GetStreamPoolKafkaSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolKafkaSetting {
		return vs[0].([]GetStreamPoolKafkaSetting)[vs[1].(int)]
	}).(GetStreamPoolKafkaSettingOutput)
}

type GetStreamPoolPrivateEndpointSetting struct {
	// The optional list of network security groups that are associated with the private endpoint of the stream pool.
	NsgIds []string `pulumi:"nsgIds"`
	// The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
	PrivateEndpointIp string `pulumi:"privateEndpointIp"`
	// The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
	SubnetId string `pulumi:"subnetId"`
}

// GetStreamPoolPrivateEndpointSettingInput is an input type that accepts GetStreamPoolPrivateEndpointSettingArgs and GetStreamPoolPrivateEndpointSettingOutput values.
// You can construct a concrete instance of `GetStreamPoolPrivateEndpointSettingInput` via:
//
//	GetStreamPoolPrivateEndpointSettingArgs{...}
type GetStreamPoolPrivateEndpointSettingInput interface {
	pulumi.Input

	ToGetStreamPoolPrivateEndpointSettingOutput() GetStreamPoolPrivateEndpointSettingOutput
	ToGetStreamPoolPrivateEndpointSettingOutputWithContext(context.Context) GetStreamPoolPrivateEndpointSettingOutput
}

type GetStreamPoolPrivateEndpointSettingArgs struct {
	// The optional list of network security groups that are associated with the private endpoint of the stream pool.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
	PrivateEndpointIp pulumi.StringInput `pulumi:"privateEndpointIp"`
	// The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetStreamPoolPrivateEndpointSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (i GetStreamPoolPrivateEndpointSettingArgs) ToGetStreamPoolPrivateEndpointSettingOutput() GetStreamPoolPrivateEndpointSettingOutput {
	return i.ToGetStreamPoolPrivateEndpointSettingOutputWithContext(context.Background())
}

func (i GetStreamPoolPrivateEndpointSettingArgs) ToGetStreamPoolPrivateEndpointSettingOutputWithContext(ctx context.Context) GetStreamPoolPrivateEndpointSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolPrivateEndpointSettingOutput)
}

// GetStreamPoolPrivateEndpointSettingArrayInput is an input type that accepts GetStreamPoolPrivateEndpointSettingArray and GetStreamPoolPrivateEndpointSettingArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolPrivateEndpointSettingArrayInput` via:
//
//	GetStreamPoolPrivateEndpointSettingArray{ GetStreamPoolPrivateEndpointSettingArgs{...} }
type GetStreamPoolPrivateEndpointSettingArrayInput interface {
	pulumi.Input

	ToGetStreamPoolPrivateEndpointSettingArrayOutput() GetStreamPoolPrivateEndpointSettingArrayOutput
	ToGetStreamPoolPrivateEndpointSettingArrayOutputWithContext(context.Context) GetStreamPoolPrivateEndpointSettingArrayOutput
}

type GetStreamPoolPrivateEndpointSettingArray []GetStreamPoolPrivateEndpointSettingInput

func (GetStreamPoolPrivateEndpointSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (i GetStreamPoolPrivateEndpointSettingArray) ToGetStreamPoolPrivateEndpointSettingArrayOutput() GetStreamPoolPrivateEndpointSettingArrayOutput {
	return i.ToGetStreamPoolPrivateEndpointSettingArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolPrivateEndpointSettingArray) ToGetStreamPoolPrivateEndpointSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolPrivateEndpointSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolPrivateEndpointSettingArrayOutput)
}

type GetStreamPoolPrivateEndpointSettingOutput struct{ *pulumi.OutputState }

func (GetStreamPoolPrivateEndpointSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (o GetStreamPoolPrivateEndpointSettingOutput) ToGetStreamPoolPrivateEndpointSettingOutput() GetStreamPoolPrivateEndpointSettingOutput {
	return o
}

func (o GetStreamPoolPrivateEndpointSettingOutput) ToGetStreamPoolPrivateEndpointSettingOutputWithContext(ctx context.Context) GetStreamPoolPrivateEndpointSettingOutput {
	return o
}

// The optional list of network security groups that are associated with the private endpoint of the stream pool.
func (o GetStreamPoolPrivateEndpointSettingOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStreamPoolPrivateEndpointSetting) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
func (o GetStreamPoolPrivateEndpointSettingOutput) PrivateEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolPrivateEndpointSetting) string { return v.PrivateEndpointIp }).(pulumi.StringOutput)
}

// The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
func (o GetStreamPoolPrivateEndpointSettingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolPrivateEndpointSetting) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetStreamPoolPrivateEndpointSettingArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolPrivateEndpointSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (o GetStreamPoolPrivateEndpointSettingArrayOutput) ToGetStreamPoolPrivateEndpointSettingArrayOutput() GetStreamPoolPrivateEndpointSettingArrayOutput {
	return o
}

func (o GetStreamPoolPrivateEndpointSettingArrayOutput) ToGetStreamPoolPrivateEndpointSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolPrivateEndpointSettingArrayOutput {
	return o
}

func (o GetStreamPoolPrivateEndpointSettingArrayOutput) Index(i pulumi.IntInput) GetStreamPoolPrivateEndpointSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolPrivateEndpointSetting {
		return vs[0].([]GetStreamPoolPrivateEndpointSetting)[vs[1].(int)]
	}).(GetStreamPoolPrivateEndpointSettingOutput)
}

type GetStreamPoolsFilter struct {
	// A filter to return only resources that match the given name exactly.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetStreamPoolsFilterInput is an input type that accepts GetStreamPoolsFilterArgs and GetStreamPoolsFilterOutput values.
// You can construct a concrete instance of `GetStreamPoolsFilterInput` via:
//
//	GetStreamPoolsFilterArgs{...}
type GetStreamPoolsFilterInput interface {
	pulumi.Input

	ToGetStreamPoolsFilterOutput() GetStreamPoolsFilterOutput
	ToGetStreamPoolsFilterOutputWithContext(context.Context) GetStreamPoolsFilterOutput
}

type GetStreamPoolsFilterArgs struct {
	// A filter to return only resources that match the given name exactly.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetStreamPoolsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsFilter)(nil)).Elem()
}

func (i GetStreamPoolsFilterArgs) ToGetStreamPoolsFilterOutput() GetStreamPoolsFilterOutput {
	return i.ToGetStreamPoolsFilterOutputWithContext(context.Background())
}

func (i GetStreamPoolsFilterArgs) ToGetStreamPoolsFilterOutputWithContext(ctx context.Context) GetStreamPoolsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsFilterOutput)
}

// GetStreamPoolsFilterArrayInput is an input type that accepts GetStreamPoolsFilterArray and GetStreamPoolsFilterArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolsFilterArrayInput` via:
//
//	GetStreamPoolsFilterArray{ GetStreamPoolsFilterArgs{...} }
type GetStreamPoolsFilterArrayInput interface {
	pulumi.Input

	ToGetStreamPoolsFilterArrayOutput() GetStreamPoolsFilterArrayOutput
	ToGetStreamPoolsFilterArrayOutputWithContext(context.Context) GetStreamPoolsFilterArrayOutput
}

type GetStreamPoolsFilterArray []GetStreamPoolsFilterInput

func (GetStreamPoolsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsFilter)(nil)).Elem()
}

func (i GetStreamPoolsFilterArray) ToGetStreamPoolsFilterArrayOutput() GetStreamPoolsFilterArrayOutput {
	return i.ToGetStreamPoolsFilterArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolsFilterArray) ToGetStreamPoolsFilterArrayOutputWithContext(ctx context.Context) GetStreamPoolsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsFilterArrayOutput)
}

type GetStreamPoolsFilterOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsFilter)(nil)).Elem()
}

func (o GetStreamPoolsFilterOutput) ToGetStreamPoolsFilterOutput() GetStreamPoolsFilterOutput {
	return o
}

func (o GetStreamPoolsFilterOutput) ToGetStreamPoolsFilterOutputWithContext(ctx context.Context) GetStreamPoolsFilterOutput {
	return o
}

// A filter to return only resources that match the given name exactly.
func (o GetStreamPoolsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStreamPoolsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStreamPoolsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetStreamPoolsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStreamPoolsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetStreamPoolsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsFilter)(nil)).Elem()
}

func (o GetStreamPoolsFilterArrayOutput) ToGetStreamPoolsFilterArrayOutput() GetStreamPoolsFilterArrayOutput {
	return o
}

func (o GetStreamPoolsFilterArrayOutput) ToGetStreamPoolsFilterArrayOutputWithContext(ctx context.Context) GetStreamPoolsFilterArrayOutput {
	return o
}

func (o GetStreamPoolsFilterArrayOutput) Index(i pulumi.IntInput) GetStreamPoolsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolsFilter {
		return vs[0].([]GetStreamPoolsFilter)[vs[1].(int)]
	}).(GetStreamPoolsFilterOutput)
}

type GetStreamPoolsStreamPool struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Custom Encryption Key which will be used for encryption by all the streams in the pool.
	CustomEncryptionKeys []GetStreamPoolsStreamPoolCustomEncryptionKey `pulumi:"customEncryptionKeys"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
	EndpointFqdn string `pulumi:"endpointFqdn"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only resources that match the given ID exactly.
	Id string `pulumi:"id"`
	// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
	IsPrivate bool `pulumi:"isPrivate"`
	// Settings for the Kafka compatibility layer.
	KafkaSettings []GetStreamPoolsStreamPoolKafkaSetting `pulumi:"kafkaSettings"`
	// Any additional details about the current state of the stream.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// A filter to return only resources that match the given name exactly.
	Name string `pulumi:"name"`
	// Optional settings if the stream pool is private.
	PrivateEndpointSettings []GetStreamPoolsStreamPoolPrivateEndpointSetting `pulumi:"privateEndpointSettings"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated string `pulumi:"timeCreated"`
}

// GetStreamPoolsStreamPoolInput is an input type that accepts GetStreamPoolsStreamPoolArgs and GetStreamPoolsStreamPoolOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolInput` via:
//
//	GetStreamPoolsStreamPoolArgs{...}
type GetStreamPoolsStreamPoolInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolOutput() GetStreamPoolsStreamPoolOutput
	ToGetStreamPoolsStreamPoolOutputWithContext(context.Context) GetStreamPoolsStreamPoolOutput
}

type GetStreamPoolsStreamPoolArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Custom Encryption Key which will be used for encryption by all the streams in the pool.
	CustomEncryptionKeys GetStreamPoolsStreamPoolCustomEncryptionKeyArrayInput `pulumi:"customEncryptionKeys"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
	EndpointFqdn pulumi.StringInput `pulumi:"endpointFqdn"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only resources that match the given ID exactly.
	Id pulumi.StringInput `pulumi:"id"`
	// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
	IsPrivate pulumi.BoolInput `pulumi:"isPrivate"`
	// Settings for the Kafka compatibility layer.
	KafkaSettings GetStreamPoolsStreamPoolKafkaSettingArrayInput `pulumi:"kafkaSettings"`
	// Any additional details about the current state of the stream.
	LifecycleStateDetails pulumi.StringInput `pulumi:"lifecycleStateDetails"`
	// A filter to return only resources that match the given name exactly.
	Name pulumi.StringInput `pulumi:"name"`
	// Optional settings if the stream pool is private.
	PrivateEndpointSettings GetStreamPoolsStreamPoolPrivateEndpointSettingArrayInput `pulumi:"privateEndpointSettings"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetStreamPoolsStreamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPool)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolArgs) ToGetStreamPoolsStreamPoolOutput() GetStreamPoolsStreamPoolOutput {
	return i.ToGetStreamPoolsStreamPoolOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolArgs) ToGetStreamPoolsStreamPoolOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolOutput)
}

// GetStreamPoolsStreamPoolArrayInput is an input type that accepts GetStreamPoolsStreamPoolArray and GetStreamPoolsStreamPoolArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolArrayInput` via:
//
//	GetStreamPoolsStreamPoolArray{ GetStreamPoolsStreamPoolArgs{...} }
type GetStreamPoolsStreamPoolArrayInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolArrayOutput() GetStreamPoolsStreamPoolArrayOutput
	ToGetStreamPoolsStreamPoolArrayOutputWithContext(context.Context) GetStreamPoolsStreamPoolArrayOutput
}

type GetStreamPoolsStreamPoolArray []GetStreamPoolsStreamPoolInput

func (GetStreamPoolsStreamPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPool)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolArray) ToGetStreamPoolsStreamPoolArrayOutput() GetStreamPoolsStreamPoolArrayOutput {
	return i.ToGetStreamPoolsStreamPoolArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolArray) ToGetStreamPoolsStreamPoolArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolArrayOutput)
}

type GetStreamPoolsStreamPoolOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPool)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolOutput) ToGetStreamPoolsStreamPoolOutput() GetStreamPoolsStreamPoolOutput {
	return o
}

func (o GetStreamPoolsStreamPoolOutput) ToGetStreamPoolsStreamPoolOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolOutput {
	return o
}

// The OCID of the compartment.
func (o GetStreamPoolsStreamPoolOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Custom Encryption Key which will be used for encryption by all the streams in the pool.
func (o GetStreamPoolsStreamPoolOutput) CustomEncryptionKeys() GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) []GetStreamPoolsStreamPoolCustomEncryptionKey {
		return v.CustomEncryptionKeys
	}).(GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
func (o GetStreamPoolsStreamPoolOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
func (o GetStreamPoolsStreamPoolOutput) EndpointFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) string { return v.EndpointFqdn }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetStreamPoolsStreamPoolOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the given ID exactly.
func (o GetStreamPoolsStreamPoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) string { return v.Id }).(pulumi.StringOutput)
}

// True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
func (o GetStreamPoolsStreamPoolOutput) IsPrivate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) bool { return v.IsPrivate }).(pulumi.BoolOutput)
}

// Settings for the Kafka compatibility layer.
func (o GetStreamPoolsStreamPoolOutput) KafkaSettings() GetStreamPoolsStreamPoolKafkaSettingArrayOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) []GetStreamPoolsStreamPoolKafkaSetting { return v.KafkaSettings }).(GetStreamPoolsStreamPoolKafkaSettingArrayOutput)
}

// Any additional details about the current state of the stream.
func (o GetStreamPoolsStreamPoolOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// A filter to return only resources that match the given name exactly.
func (o GetStreamPoolsStreamPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) string { return v.Name }).(pulumi.StringOutput)
}

// Optional settings if the stream pool is private.
func (o GetStreamPoolsStreamPoolOutput) PrivateEndpointSettings() GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) []GetStreamPoolsStreamPoolPrivateEndpointSetting {
		return v.PrivateEndpointSettings
	}).(GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput)
}

// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetStreamPoolsStreamPoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
func (o GetStreamPoolsStreamPoolOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPool) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetStreamPoolsStreamPoolArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPool)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolArrayOutput) ToGetStreamPoolsStreamPoolArrayOutput() GetStreamPoolsStreamPoolArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolArrayOutput) ToGetStreamPoolsStreamPoolArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolArrayOutput) Index(i pulumi.IntInput) GetStreamPoolsStreamPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolsStreamPool {
		return vs[0].([]GetStreamPoolsStreamPool)[vs[1].(int)]
	}).(GetStreamPoolsStreamPoolOutput)
}

type GetStreamPoolsStreamPoolCustomEncryptionKey struct {
	// Life cycle State of the custom key
	KeyState string `pulumi:"keyState"`
	// Custom Encryption Key (Master Key) ocid.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// GetStreamPoolsStreamPoolCustomEncryptionKeyInput is an input type that accepts GetStreamPoolsStreamPoolCustomEncryptionKeyArgs and GetStreamPoolsStreamPoolCustomEncryptionKeyOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolCustomEncryptionKeyInput` via:
//
//	GetStreamPoolsStreamPoolCustomEncryptionKeyArgs{...}
type GetStreamPoolsStreamPoolCustomEncryptionKeyInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolCustomEncryptionKeyOutput() GetStreamPoolsStreamPoolCustomEncryptionKeyOutput
	ToGetStreamPoolsStreamPoolCustomEncryptionKeyOutputWithContext(context.Context) GetStreamPoolsStreamPoolCustomEncryptionKeyOutput
}

type GetStreamPoolsStreamPoolCustomEncryptionKeyArgs struct {
	// Life cycle State of the custom key
	KeyState pulumi.StringInput `pulumi:"keyState"`
	// Custom Encryption Key (Master Key) ocid.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (GetStreamPoolsStreamPoolCustomEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolCustomEncryptionKeyArgs) ToGetStreamPoolsStreamPoolCustomEncryptionKeyOutput() GetStreamPoolsStreamPoolCustomEncryptionKeyOutput {
	return i.ToGetStreamPoolsStreamPoolCustomEncryptionKeyOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolCustomEncryptionKeyArgs) ToGetStreamPoolsStreamPoolCustomEncryptionKeyOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolCustomEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolCustomEncryptionKeyOutput)
}

// GetStreamPoolsStreamPoolCustomEncryptionKeyArrayInput is an input type that accepts GetStreamPoolsStreamPoolCustomEncryptionKeyArray and GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolCustomEncryptionKeyArrayInput` via:
//
//	GetStreamPoolsStreamPoolCustomEncryptionKeyArray{ GetStreamPoolsStreamPoolCustomEncryptionKeyArgs{...} }
type GetStreamPoolsStreamPoolCustomEncryptionKeyArrayInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput() GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput
	ToGetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutputWithContext(context.Context) GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput
}

type GetStreamPoolsStreamPoolCustomEncryptionKeyArray []GetStreamPoolsStreamPoolCustomEncryptionKeyInput

func (GetStreamPoolsStreamPoolCustomEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolCustomEncryptionKeyArray) ToGetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput() GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput {
	return i.ToGetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolCustomEncryptionKeyArray) ToGetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput)
}

type GetStreamPoolsStreamPoolCustomEncryptionKeyOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolCustomEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolCustomEncryptionKeyOutput) ToGetStreamPoolsStreamPoolCustomEncryptionKeyOutput() GetStreamPoolsStreamPoolCustomEncryptionKeyOutput {
	return o
}

func (o GetStreamPoolsStreamPoolCustomEncryptionKeyOutput) ToGetStreamPoolsStreamPoolCustomEncryptionKeyOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolCustomEncryptionKeyOutput {
	return o
}

// Life cycle State of the custom key
func (o GetStreamPoolsStreamPoolCustomEncryptionKeyOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolCustomEncryptionKey) string { return v.KeyState }).(pulumi.StringOutput)
}

// Custom Encryption Key (Master Key) ocid.
func (o GetStreamPoolsStreamPoolCustomEncryptionKeyOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolCustomEncryptionKey) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPoolCustomEncryptionKey)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput) ToGetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput() GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput) ToGetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput) Index(i pulumi.IntInput) GetStreamPoolsStreamPoolCustomEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolsStreamPoolCustomEncryptionKey {
		return vs[0].([]GetStreamPoolsStreamPoolCustomEncryptionKey)[vs[1].(int)]
	}).(GetStreamPoolsStreamPoolCustomEncryptionKeyOutput)
}

type GetStreamPoolsStreamPoolKafkaSetting struct {
	// Enable auto creation of topic on the server.
	AutoCreateTopicsEnable bool `pulumi:"autoCreateTopicsEnable"`
	// Bootstrap servers.
	BootstrapServers string `pulumi:"bootstrapServers"`
	// The number of hours to keep a log file before deleting it (in hours).
	LogRetentionHours int `pulumi:"logRetentionHours"`
	// The default number of log partitions per topic.
	NumPartitions int `pulumi:"numPartitions"`
}

// GetStreamPoolsStreamPoolKafkaSettingInput is an input type that accepts GetStreamPoolsStreamPoolKafkaSettingArgs and GetStreamPoolsStreamPoolKafkaSettingOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolKafkaSettingInput` via:
//
//	GetStreamPoolsStreamPoolKafkaSettingArgs{...}
type GetStreamPoolsStreamPoolKafkaSettingInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolKafkaSettingOutput() GetStreamPoolsStreamPoolKafkaSettingOutput
	ToGetStreamPoolsStreamPoolKafkaSettingOutputWithContext(context.Context) GetStreamPoolsStreamPoolKafkaSettingOutput
}

type GetStreamPoolsStreamPoolKafkaSettingArgs struct {
	// Enable auto creation of topic on the server.
	AutoCreateTopicsEnable pulumi.BoolInput `pulumi:"autoCreateTopicsEnable"`
	// Bootstrap servers.
	BootstrapServers pulumi.StringInput `pulumi:"bootstrapServers"`
	// The number of hours to keep a log file before deleting it (in hours).
	LogRetentionHours pulumi.IntInput `pulumi:"logRetentionHours"`
	// The default number of log partitions per topic.
	NumPartitions pulumi.IntInput `pulumi:"numPartitions"`
}

func (GetStreamPoolsStreamPoolKafkaSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPoolKafkaSetting)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolKafkaSettingArgs) ToGetStreamPoolsStreamPoolKafkaSettingOutput() GetStreamPoolsStreamPoolKafkaSettingOutput {
	return i.ToGetStreamPoolsStreamPoolKafkaSettingOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolKafkaSettingArgs) ToGetStreamPoolsStreamPoolKafkaSettingOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolKafkaSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolKafkaSettingOutput)
}

// GetStreamPoolsStreamPoolKafkaSettingArrayInput is an input type that accepts GetStreamPoolsStreamPoolKafkaSettingArray and GetStreamPoolsStreamPoolKafkaSettingArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolKafkaSettingArrayInput` via:
//
//	GetStreamPoolsStreamPoolKafkaSettingArray{ GetStreamPoolsStreamPoolKafkaSettingArgs{...} }
type GetStreamPoolsStreamPoolKafkaSettingArrayInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolKafkaSettingArrayOutput() GetStreamPoolsStreamPoolKafkaSettingArrayOutput
	ToGetStreamPoolsStreamPoolKafkaSettingArrayOutputWithContext(context.Context) GetStreamPoolsStreamPoolKafkaSettingArrayOutput
}

type GetStreamPoolsStreamPoolKafkaSettingArray []GetStreamPoolsStreamPoolKafkaSettingInput

func (GetStreamPoolsStreamPoolKafkaSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPoolKafkaSetting)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolKafkaSettingArray) ToGetStreamPoolsStreamPoolKafkaSettingArrayOutput() GetStreamPoolsStreamPoolKafkaSettingArrayOutput {
	return i.ToGetStreamPoolsStreamPoolKafkaSettingArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolKafkaSettingArray) ToGetStreamPoolsStreamPoolKafkaSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolKafkaSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolKafkaSettingArrayOutput)
}

type GetStreamPoolsStreamPoolKafkaSettingOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolKafkaSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPoolKafkaSetting)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolKafkaSettingOutput) ToGetStreamPoolsStreamPoolKafkaSettingOutput() GetStreamPoolsStreamPoolKafkaSettingOutput {
	return o
}

func (o GetStreamPoolsStreamPoolKafkaSettingOutput) ToGetStreamPoolsStreamPoolKafkaSettingOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolKafkaSettingOutput {
	return o
}

// Enable auto creation of topic on the server.
func (o GetStreamPoolsStreamPoolKafkaSettingOutput) AutoCreateTopicsEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolKafkaSetting) bool { return v.AutoCreateTopicsEnable }).(pulumi.BoolOutput)
}

// Bootstrap servers.
func (o GetStreamPoolsStreamPoolKafkaSettingOutput) BootstrapServers() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolKafkaSetting) string { return v.BootstrapServers }).(pulumi.StringOutput)
}

// The number of hours to keep a log file before deleting it (in hours).
func (o GetStreamPoolsStreamPoolKafkaSettingOutput) LogRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolKafkaSetting) int { return v.LogRetentionHours }).(pulumi.IntOutput)
}

// The default number of log partitions per topic.
func (o GetStreamPoolsStreamPoolKafkaSettingOutput) NumPartitions() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolKafkaSetting) int { return v.NumPartitions }).(pulumi.IntOutput)
}

type GetStreamPoolsStreamPoolKafkaSettingArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolKafkaSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPoolKafkaSetting)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolKafkaSettingArrayOutput) ToGetStreamPoolsStreamPoolKafkaSettingArrayOutput() GetStreamPoolsStreamPoolKafkaSettingArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolKafkaSettingArrayOutput) ToGetStreamPoolsStreamPoolKafkaSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolKafkaSettingArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolKafkaSettingArrayOutput) Index(i pulumi.IntInput) GetStreamPoolsStreamPoolKafkaSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolsStreamPoolKafkaSetting {
		return vs[0].([]GetStreamPoolsStreamPoolKafkaSetting)[vs[1].(int)]
	}).(GetStreamPoolsStreamPoolKafkaSettingOutput)
}

type GetStreamPoolsStreamPoolPrivateEndpointSetting struct {
	// The optional list of network security groups that are associated with the private endpoint of the stream pool.
	NsgIds []string `pulumi:"nsgIds"`
	// The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
	PrivateEndpointIp string `pulumi:"privateEndpointIp"`
	// The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
	SubnetId string `pulumi:"subnetId"`
}

// GetStreamPoolsStreamPoolPrivateEndpointSettingInput is an input type that accepts GetStreamPoolsStreamPoolPrivateEndpointSettingArgs and GetStreamPoolsStreamPoolPrivateEndpointSettingOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolPrivateEndpointSettingInput` via:
//
//	GetStreamPoolsStreamPoolPrivateEndpointSettingArgs{...}
type GetStreamPoolsStreamPoolPrivateEndpointSettingInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolPrivateEndpointSettingOutput() GetStreamPoolsStreamPoolPrivateEndpointSettingOutput
	ToGetStreamPoolsStreamPoolPrivateEndpointSettingOutputWithContext(context.Context) GetStreamPoolsStreamPoolPrivateEndpointSettingOutput
}

type GetStreamPoolsStreamPoolPrivateEndpointSettingArgs struct {
	// The optional list of network security groups that are associated with the private endpoint of the stream pool.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
	PrivateEndpointIp pulumi.StringInput `pulumi:"privateEndpointIp"`
	// The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetStreamPoolsStreamPoolPrivateEndpointSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolPrivateEndpointSettingArgs) ToGetStreamPoolsStreamPoolPrivateEndpointSettingOutput() GetStreamPoolsStreamPoolPrivateEndpointSettingOutput {
	return i.ToGetStreamPoolsStreamPoolPrivateEndpointSettingOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolPrivateEndpointSettingArgs) ToGetStreamPoolsStreamPoolPrivateEndpointSettingOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolPrivateEndpointSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolPrivateEndpointSettingOutput)
}

// GetStreamPoolsStreamPoolPrivateEndpointSettingArrayInput is an input type that accepts GetStreamPoolsStreamPoolPrivateEndpointSettingArray and GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput values.
// You can construct a concrete instance of `GetStreamPoolsStreamPoolPrivateEndpointSettingArrayInput` via:
//
//	GetStreamPoolsStreamPoolPrivateEndpointSettingArray{ GetStreamPoolsStreamPoolPrivateEndpointSettingArgs{...} }
type GetStreamPoolsStreamPoolPrivateEndpointSettingArrayInput interface {
	pulumi.Input

	ToGetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput() GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput
	ToGetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutputWithContext(context.Context) GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput
}

type GetStreamPoolsStreamPoolPrivateEndpointSettingArray []GetStreamPoolsStreamPoolPrivateEndpointSettingInput

func (GetStreamPoolsStreamPoolPrivateEndpointSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (i GetStreamPoolsStreamPoolPrivateEndpointSettingArray) ToGetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput() GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput {
	return i.ToGetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutputWithContext(context.Background())
}

func (i GetStreamPoolsStreamPoolPrivateEndpointSettingArray) ToGetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput)
}

type GetStreamPoolsStreamPoolPrivateEndpointSettingOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolPrivateEndpointSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamPoolsStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolPrivateEndpointSettingOutput) ToGetStreamPoolsStreamPoolPrivateEndpointSettingOutput() GetStreamPoolsStreamPoolPrivateEndpointSettingOutput {
	return o
}

func (o GetStreamPoolsStreamPoolPrivateEndpointSettingOutput) ToGetStreamPoolsStreamPoolPrivateEndpointSettingOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolPrivateEndpointSettingOutput {
	return o
}

// The optional list of network security groups that are associated with the private endpoint of the stream pool.
func (o GetStreamPoolsStreamPoolPrivateEndpointSettingOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolPrivateEndpointSetting) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The private IP associated with the stream pool in the associated subnetId. The stream pool's FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
func (o GetStreamPoolsStreamPoolPrivateEndpointSettingOutput) PrivateEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolPrivateEndpointSetting) string { return v.PrivateEndpointIp }).(pulumi.StringOutput)
}

// The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
func (o GetStreamPoolsStreamPoolPrivateEndpointSettingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamPoolsStreamPoolPrivateEndpointSetting) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput struct{ *pulumi.OutputState }

func (GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamPoolsStreamPoolPrivateEndpointSetting)(nil)).Elem()
}

func (o GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput) ToGetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput() GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput) ToGetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutputWithContext(ctx context.Context) GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput {
	return o
}

func (o GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput) Index(i pulumi.IntInput) GetStreamPoolsStreamPoolPrivateEndpointSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamPoolsStreamPoolPrivateEndpointSetting {
		return vs[0].([]GetStreamPoolsStreamPoolPrivateEndpointSetting)[vs[1].(int)]
	}).(GetStreamPoolsStreamPoolPrivateEndpointSettingOutput)
}

type GetStreamsFilter struct {
	// A filter to return only resources that match the given name exactly.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetStreamsFilterInput is an input type that accepts GetStreamsFilterArgs and GetStreamsFilterOutput values.
// You can construct a concrete instance of `GetStreamsFilterInput` via:
//
//	GetStreamsFilterArgs{...}
type GetStreamsFilterInput interface {
	pulumi.Input

	ToGetStreamsFilterOutput() GetStreamsFilterOutput
	ToGetStreamsFilterOutputWithContext(context.Context) GetStreamsFilterOutput
}

type GetStreamsFilterArgs struct {
	// A filter to return only resources that match the given name exactly.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetStreamsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsFilter)(nil)).Elem()
}

func (i GetStreamsFilterArgs) ToGetStreamsFilterOutput() GetStreamsFilterOutput {
	return i.ToGetStreamsFilterOutputWithContext(context.Background())
}

func (i GetStreamsFilterArgs) ToGetStreamsFilterOutputWithContext(ctx context.Context) GetStreamsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsFilterOutput)
}

// GetStreamsFilterArrayInput is an input type that accepts GetStreamsFilterArray and GetStreamsFilterArrayOutput values.
// You can construct a concrete instance of `GetStreamsFilterArrayInput` via:
//
//	GetStreamsFilterArray{ GetStreamsFilterArgs{...} }
type GetStreamsFilterArrayInput interface {
	pulumi.Input

	ToGetStreamsFilterArrayOutput() GetStreamsFilterArrayOutput
	ToGetStreamsFilterArrayOutputWithContext(context.Context) GetStreamsFilterArrayOutput
}

type GetStreamsFilterArray []GetStreamsFilterInput

func (GetStreamsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamsFilter)(nil)).Elem()
}

func (i GetStreamsFilterArray) ToGetStreamsFilterArrayOutput() GetStreamsFilterArrayOutput {
	return i.ToGetStreamsFilterArrayOutputWithContext(context.Background())
}

func (i GetStreamsFilterArray) ToGetStreamsFilterArrayOutputWithContext(ctx context.Context) GetStreamsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsFilterArrayOutput)
}

type GetStreamsFilterOutput struct{ *pulumi.OutputState }

func (GetStreamsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsFilter)(nil)).Elem()
}

func (o GetStreamsFilterOutput) ToGetStreamsFilterOutput() GetStreamsFilterOutput {
	return o
}

func (o GetStreamsFilterOutput) ToGetStreamsFilterOutputWithContext(ctx context.Context) GetStreamsFilterOutput {
	return o
}

// A filter to return only resources that match the given name exactly.
func (o GetStreamsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStreamsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStreamsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetStreamsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStreamsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetStreamsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetStreamsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamsFilter)(nil)).Elem()
}

func (o GetStreamsFilterArrayOutput) ToGetStreamsFilterArrayOutput() GetStreamsFilterArrayOutput {
	return o
}

func (o GetStreamsFilterArrayOutput) ToGetStreamsFilterArrayOutputWithContext(ctx context.Context) GetStreamsFilterArrayOutput {
	return o
}

func (o GetStreamsFilterArrayOutput) Index(i pulumi.IntInput) GetStreamsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamsFilter {
		return vs[0].([]GetStreamsFilter)[vs[1].(int)]
	}).(GetStreamsFilterOutput)
}

type GetStreamsStream struct {
	// The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only resources that match the given ID exactly.
	Id string `pulumi:"id"`
	// Any additional details about the current state of the stream.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool's associated subnet.
	MessagesEndpoint string `pulumi:"messagesEndpoint"`
	// A filter to return only resources that match the given name exactly.
	Name string `pulumi:"name"`
	// The number of partitions in the stream.
	Partitions int `pulumi:"partitions"`
	// The retention period of the stream, in hours. This property is read-only.
	RetentionInHours int `pulumi:"retentionInHours"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
	StreamPoolId string `pulumi:"streamPoolId"`
	// The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated string `pulumi:"timeCreated"`
}

// GetStreamsStreamInput is an input type that accepts GetStreamsStreamArgs and GetStreamsStreamOutput values.
// You can construct a concrete instance of `GetStreamsStreamInput` via:
//
//	GetStreamsStreamArgs{...}
type GetStreamsStreamInput interface {
	pulumi.Input

	ToGetStreamsStreamOutput() GetStreamsStreamOutput
	ToGetStreamsStreamOutputWithContext(context.Context) GetStreamsStreamOutput
}

type GetStreamsStreamArgs struct {
	// The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only resources that match the given ID exactly.
	Id pulumi.StringInput `pulumi:"id"`
	// Any additional details about the current state of the stream.
	LifecycleStateDetails pulumi.StringInput `pulumi:"lifecycleStateDetails"`
	// The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool's associated subnet.
	MessagesEndpoint pulumi.StringInput `pulumi:"messagesEndpoint"`
	// A filter to return only resources that match the given name exactly.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of partitions in the stream.
	Partitions pulumi.IntInput `pulumi:"partitions"`
	// The retention period of the stream, in hours. This property is read-only.
	RetentionInHours pulumi.IntInput `pulumi:"retentionInHours"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
	StreamPoolId pulumi.StringInput `pulumi:"streamPoolId"`
	// The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetStreamsStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsStream)(nil)).Elem()
}

func (i GetStreamsStreamArgs) ToGetStreamsStreamOutput() GetStreamsStreamOutput {
	return i.ToGetStreamsStreamOutputWithContext(context.Background())
}

func (i GetStreamsStreamArgs) ToGetStreamsStreamOutputWithContext(ctx context.Context) GetStreamsStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsStreamOutput)
}

// GetStreamsStreamArrayInput is an input type that accepts GetStreamsStreamArray and GetStreamsStreamArrayOutput values.
// You can construct a concrete instance of `GetStreamsStreamArrayInput` via:
//
//	GetStreamsStreamArray{ GetStreamsStreamArgs{...} }
type GetStreamsStreamArrayInput interface {
	pulumi.Input

	ToGetStreamsStreamArrayOutput() GetStreamsStreamArrayOutput
	ToGetStreamsStreamArrayOutputWithContext(context.Context) GetStreamsStreamArrayOutput
}

type GetStreamsStreamArray []GetStreamsStreamInput

func (GetStreamsStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamsStream)(nil)).Elem()
}

func (i GetStreamsStreamArray) ToGetStreamsStreamArrayOutput() GetStreamsStreamArrayOutput {
	return i.ToGetStreamsStreamArrayOutputWithContext(context.Background())
}

func (i GetStreamsStreamArray) ToGetStreamsStreamArrayOutputWithContext(ctx context.Context) GetStreamsStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsStreamArrayOutput)
}

type GetStreamsStreamOutput struct{ *pulumi.OutputState }

func (GetStreamsStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsStream)(nil)).Elem()
}

func (o GetStreamsStreamOutput) ToGetStreamsStreamOutput() GetStreamsStreamOutput {
	return o
}

func (o GetStreamsStreamOutput) ToGetStreamsStreamOutputWithContext(ctx context.Context) GetStreamsStreamOutput {
	return o
}

// The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
func (o GetStreamsStreamOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations": {"CostCenter": "42"}}'
func (o GetStreamsStreamOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetStreamsStream) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetStreamsStreamOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetStreamsStream) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the given ID exactly.
func (o GetStreamsStreamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.Id }).(pulumi.StringOutput)
}

// Any additional details about the current state of the stream.
func (o GetStreamsStreamOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool's associated subnet.
func (o GetStreamsStreamOutput) MessagesEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.MessagesEndpoint }).(pulumi.StringOutput)
}

// A filter to return only resources that match the given name exactly.
func (o GetStreamsStreamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.Name }).(pulumi.StringOutput)
}

// The number of partitions in the stream.
func (o GetStreamsStreamOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamsStream) int { return v.Partitions }).(pulumi.IntOutput)
}

// The retention period of the stream, in hours. This property is read-only.
func (o GetStreamsStreamOutput) RetentionInHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamsStream) int { return v.RetentionInHours }).(pulumi.IntOutput)
}

// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetStreamsStreamOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.State }).(pulumi.StringOutput)
}

// The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
func (o GetStreamsStreamOutput) StreamPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.StreamPoolId }).(pulumi.StringOutput)
}

// The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
func (o GetStreamsStreamOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsStream) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetStreamsStreamArrayOutput struct{ *pulumi.OutputState }

func (GetStreamsStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamsStream)(nil)).Elem()
}

func (o GetStreamsStreamArrayOutput) ToGetStreamsStreamArrayOutput() GetStreamsStreamArrayOutput {
	return o
}

func (o GetStreamsStreamArrayOutput) ToGetStreamsStreamArrayOutputWithContext(ctx context.Context) GetStreamsStreamArrayOutput {
	return o
}

func (o GetStreamsStreamArrayOutput) Index(i pulumi.IntInput) GetStreamsStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamsStream {
		return vs[0].([]GetStreamsStream)[vs[1].(int)]
	}).(GetStreamsStreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPoolCustomEncryptionKeyInput)(nil)).Elem(), StreamPoolCustomEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPoolCustomEncryptionKeyPtrInput)(nil)).Elem(), StreamPoolCustomEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPoolKafkaSettingsInput)(nil)).Elem(), StreamPoolKafkaSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPoolKafkaSettingsPtrInput)(nil)).Elem(), StreamPoolKafkaSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPoolPrivateEndpointSettingsInput)(nil)).Elem(), StreamPoolPrivateEndpointSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamPoolPrivateEndpointSettingsPtrInput)(nil)).Elem(), StreamPoolPrivateEndpointSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectHarnessesConnectHarnessInput)(nil)).Elem(), GetConnectHarnessesConnectHarnessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectHarnessesConnectHarnessArrayInput)(nil)).Elem(), GetConnectHarnessesConnectHarnessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectHarnessesFilterInput)(nil)).Elem(), GetConnectHarnessesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectHarnessesFilterArrayInput)(nil)).Elem(), GetConnectHarnessesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolCustomEncryptionKeyInput)(nil)).Elem(), GetStreamPoolCustomEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolCustomEncryptionKeyArrayInput)(nil)).Elem(), GetStreamPoolCustomEncryptionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolKafkaSettingInput)(nil)).Elem(), GetStreamPoolKafkaSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolKafkaSettingArrayInput)(nil)).Elem(), GetStreamPoolKafkaSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolPrivateEndpointSettingInput)(nil)).Elem(), GetStreamPoolPrivateEndpointSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolPrivateEndpointSettingArrayInput)(nil)).Elem(), GetStreamPoolPrivateEndpointSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsFilterInput)(nil)).Elem(), GetStreamPoolsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsFilterArrayInput)(nil)).Elem(), GetStreamPoolsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolInput)(nil)).Elem(), GetStreamPoolsStreamPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolArrayInput)(nil)).Elem(), GetStreamPoolsStreamPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolCustomEncryptionKeyInput)(nil)).Elem(), GetStreamPoolsStreamPoolCustomEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolCustomEncryptionKeyArrayInput)(nil)).Elem(), GetStreamPoolsStreamPoolCustomEncryptionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolKafkaSettingInput)(nil)).Elem(), GetStreamPoolsStreamPoolKafkaSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolKafkaSettingArrayInput)(nil)).Elem(), GetStreamPoolsStreamPoolKafkaSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolPrivateEndpointSettingInput)(nil)).Elem(), GetStreamPoolsStreamPoolPrivateEndpointSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamPoolsStreamPoolPrivateEndpointSettingArrayInput)(nil)).Elem(), GetStreamPoolsStreamPoolPrivateEndpointSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsFilterInput)(nil)).Elem(), GetStreamsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsFilterArrayInput)(nil)).Elem(), GetStreamsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsStreamInput)(nil)).Elem(), GetStreamsStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsStreamArrayInput)(nil)).Elem(), GetStreamsStreamArray{})
	pulumi.RegisterOutputType(StreamPoolCustomEncryptionKeyOutput{})
	pulumi.RegisterOutputType(StreamPoolCustomEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(StreamPoolKafkaSettingsOutput{})
	pulumi.RegisterOutputType(StreamPoolKafkaSettingsPtrOutput{})
	pulumi.RegisterOutputType(StreamPoolPrivateEndpointSettingsOutput{})
	pulumi.RegisterOutputType(StreamPoolPrivateEndpointSettingsPtrOutput{})
	pulumi.RegisterOutputType(GetConnectHarnessesConnectHarnessOutput{})
	pulumi.RegisterOutputType(GetConnectHarnessesConnectHarnessArrayOutput{})
	pulumi.RegisterOutputType(GetConnectHarnessesFilterOutput{})
	pulumi.RegisterOutputType(GetConnectHarnessesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolCustomEncryptionKeyOutput{})
	pulumi.RegisterOutputType(GetStreamPoolCustomEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolKafkaSettingOutput{})
	pulumi.RegisterOutputType(GetStreamPoolKafkaSettingArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolPrivateEndpointSettingOutput{})
	pulumi.RegisterOutputType(GetStreamPoolPrivateEndpointSettingArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsFilterOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolCustomEncryptionKeyOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolCustomEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolKafkaSettingOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolKafkaSettingArrayOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolPrivateEndpointSettingOutput{})
	pulumi.RegisterOutputType(GetStreamPoolsStreamPoolPrivateEndpointSettingArrayOutput{})
	pulumi.RegisterOutputType(GetStreamsFilterOutput{})
	pulumi.RegisterOutputType(GetStreamsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetStreamsStreamOutput{})
	pulumi.RegisterOutputType(GetStreamsStreamArrayOutput{})
}
