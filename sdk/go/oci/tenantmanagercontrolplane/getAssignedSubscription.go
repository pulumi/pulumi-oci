// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Assigned Subscription resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Get the assigned subscription details by assigned subscription ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetAssignedSubscription(ctx, &tenantmanagercontrolplane.GetAssignedSubscriptionArgs{
//				AssignedSubscriptionId: testAssignedSubscriptionOciTenantmanagercontrolplaneAssignedSubscription.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAssignedSubscription(ctx *pulumi.Context, args *GetAssignedSubscriptionArgs, opts ...pulumi.InvokeOption) (*GetAssignedSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAssignedSubscriptionResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getAssignedSubscription:getAssignedSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAssignedSubscription.
type GetAssignedSubscriptionArgs struct {
	// OCID of the assigned Oracle Cloud Subscription.
	AssignedSubscriptionId string `pulumi:"assignedSubscriptionId"`
}

// A collection of values returned by getAssignedSubscription.
type GetAssignedSubscriptionResult struct {
	AssignedSubscriptionId string `pulumi:"assignedSubscriptionId"`
	// Subscription ID.
	ClassicSubscriptionId string `pulumi:"classicSubscriptionId"`
	// The currency code for the customer associated with the subscription.
	CloudAmountCurrency string `pulumi:"cloudAmountCurrency"`
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Customer service identifier for the customer associated with the subscription.
	CsiNumber string `pulumi:"csiNumber"`
	// Currency code. For example USD, MXN.
	CurrencyCode string `pulumi:"currencyCode"`
	// The country code for the customer associated with the subscription.
	CustomerCountryCode string `pulumi:"customerCountryCode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
	EntityVersion string `pulumi:"entityVersion"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Specifies whether or not the subscription is legacy.
	IsClassicSubscription bool `pulumi:"isClassicSubscription"`
	// Specifies whether or not the subscription is a government subscription.
	IsGovernmentSubscription bool `pulumi:"isGovernmentSubscription"`
	// Service or component which is used to provision and manage the subscription.
	ManagedBy string `pulumi:"managedBy"`
	// List of subscription order OCIDs that contributed to this subscription.
	OrderIds []string `pulumi:"orderIds"`
	// Specifies any program that is associated with the subscription.
	ProgramType string `pulumi:"programType"`
	// List of promotions related to the subscription.
	Promotions []GetAssignedSubscriptionPromotion `pulumi:"promotions"`
	// Purchase entitlement ID associated with the subscription.
	PurchaseEntitlementId string `pulumi:"purchaseEntitlementId"`
	// Region for the subscription.
	RegionAssignment string `pulumi:"regionAssignment"`
	// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
	ServiceName string `pulumi:"serviceName"`
	// List of SKUs linked to the subscription.
	Skuses []GetAssignedSubscriptionSkus `pulumi:"skuses"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
	// Lifecycle state of the subscription.
	State string `pulumi:"state"`
	// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
	SubscriptionNumber string `pulumi:"subscriptionNumber"`
	// Tier for the subscription, whether a free promotion subscription or a paid subscription.
	SubscriptionTier string `pulumi:"subscriptionTier"`
	// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetAssignedSubscriptionOutput(ctx *pulumi.Context, args GetAssignedSubscriptionOutputArgs, opts ...pulumi.InvokeOption) GetAssignedSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAssignedSubscriptionResultOutput, error) {
			args := v.(GetAssignedSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getAssignedSubscription:getAssignedSubscription", args, GetAssignedSubscriptionResultOutput{}, options).(GetAssignedSubscriptionResultOutput), nil
		}).(GetAssignedSubscriptionResultOutput)
}

// A collection of arguments for invoking getAssignedSubscription.
type GetAssignedSubscriptionOutputArgs struct {
	// OCID of the assigned Oracle Cloud Subscription.
	AssignedSubscriptionId pulumi.StringInput `pulumi:"assignedSubscriptionId"`
}

func (GetAssignedSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getAssignedSubscription.
type GetAssignedSubscriptionResultOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionResult)(nil)).Elem()
}

func (o GetAssignedSubscriptionResultOutput) ToGetAssignedSubscriptionResultOutput() GetAssignedSubscriptionResultOutput {
	return o
}

func (o GetAssignedSubscriptionResultOutput) ToGetAssignedSubscriptionResultOutputWithContext(ctx context.Context) GetAssignedSubscriptionResultOutput {
	return o
}

func (o GetAssignedSubscriptionResultOutput) AssignedSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.AssignedSubscriptionId }).(pulumi.StringOutput)
}

// Subscription ID.
func (o GetAssignedSubscriptionResultOutput) ClassicSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.ClassicSubscriptionId }).(pulumi.StringOutput)
}

// The currency code for the customer associated with the subscription.
func (o GetAssignedSubscriptionResultOutput) CloudAmountCurrency() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.CloudAmountCurrency }).(pulumi.StringOutput)
}

// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
func (o GetAssignedSubscriptionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Customer service identifier for the customer associated with the subscription.
func (o GetAssignedSubscriptionResultOutput) CsiNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.CsiNumber }).(pulumi.StringOutput)
}

// Currency code. For example USD, MXN.
func (o GetAssignedSubscriptionResultOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// The country code for the customer associated with the subscription.
func (o GetAssignedSubscriptionResultOutput) CustomerCountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.CustomerCountryCode }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetAssignedSubscriptionResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Date and time when the SKU ended.
func (o GetAssignedSubscriptionResultOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.EndDate }).(pulumi.StringOutput)
}

// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
func (o GetAssignedSubscriptionResultOutput) EntityVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.EntityVersion }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetAssignedSubscriptionResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAssignedSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether or not the subscription is legacy.
func (o GetAssignedSubscriptionResultOutput) IsClassicSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) bool { return v.IsClassicSubscription }).(pulumi.BoolOutput)
}

// Specifies whether or not the subscription is a government subscription.
func (o GetAssignedSubscriptionResultOutput) IsGovernmentSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) bool { return v.IsGovernmentSubscription }).(pulumi.BoolOutput)
}

// Service or component which is used to provision and manage the subscription.
func (o GetAssignedSubscriptionResultOutput) ManagedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.ManagedBy }).(pulumi.StringOutput)
}

// List of subscription order OCIDs that contributed to this subscription.
func (o GetAssignedSubscriptionResultOutput) OrderIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) []string { return v.OrderIds }).(pulumi.StringArrayOutput)
}

// Specifies any program that is associated with the subscription.
func (o GetAssignedSubscriptionResultOutput) ProgramType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.ProgramType }).(pulumi.StringOutput)
}

// List of promotions related to the subscription.
func (o GetAssignedSubscriptionResultOutput) Promotions() GetAssignedSubscriptionPromotionArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) []GetAssignedSubscriptionPromotion { return v.Promotions }).(GetAssignedSubscriptionPromotionArrayOutput)
}

// Purchase entitlement ID associated with the subscription.
func (o GetAssignedSubscriptionResultOutput) PurchaseEntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.PurchaseEntitlementId }).(pulumi.StringOutput)
}

// Region for the subscription.
func (o GetAssignedSubscriptionResultOutput) RegionAssignment() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.RegionAssignment }).(pulumi.StringOutput)
}

// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
func (o GetAssignedSubscriptionResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// List of SKUs linked to the subscription.
func (o GetAssignedSubscriptionResultOutput) Skuses() GetAssignedSubscriptionSkusArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) []GetAssignedSubscriptionSkus { return v.Skuses }).(GetAssignedSubscriptionSkusArrayOutput)
}

// Subscription start time.
func (o GetAssignedSubscriptionResultOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.StartDate }).(pulumi.StringOutput)
}

// Lifecycle state of the subscription.
func (o GetAssignedSubscriptionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.State }).(pulumi.StringOutput)
}

// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
func (o GetAssignedSubscriptionResultOutput) SubscriptionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.SubscriptionNumber }).(pulumi.StringOutput)
}

// Tier for the subscription, whether a free promotion subscription or a paid subscription.
func (o GetAssignedSubscriptionResultOutput) SubscriptionTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.SubscriptionTier }).(pulumi.StringOutput)
}

// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetAssignedSubscriptionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetAssignedSubscriptionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAssignedSubscriptionResultOutput{})
}
