// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Assigned Subscriptions in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Lists subscriptions that are consumed by the compartment. Only the root compartment is allowed.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetAssignedSubscriptions(ctx, &tenantmanagercontrolplane.GetAssignedSubscriptionsArgs{
//				CompartmentId:  compartmentId,
//				EntityVersion:  pulumi.StringRef(assignedSubscriptionEntityVersion),
//				SubscriptionId: pulumi.StringRef(testSubscription.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAssignedSubscriptions(ctx *pulumi.Context, args *GetAssignedSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetAssignedSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAssignedSubscriptionsResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getAssignedSubscriptions:getAssignedSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAssignedSubscriptions.
type GetAssignedSubscriptionsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The version of the subscription entity.
	EntityVersion *string                          `pulumi:"entityVersion"`
	Filters       []GetAssignedSubscriptionsFilter `pulumi:"filters"`
	// The ID of the subscription to which the tenancy is associated.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// A collection of values returned by getAssignedSubscriptions.
type GetAssignedSubscriptionsResult struct {
	// The list of assigned_subscription_collection.
	AssignedSubscriptionCollections []GetAssignedSubscriptionsAssignedSubscriptionCollection `pulumi:"assignedSubscriptionCollections"`
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
	EntityVersion *string                          `pulumi:"entityVersion"`
	Filters       []GetAssignedSubscriptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	SubscriptionId *string `pulumi:"subscriptionId"`
}

func GetAssignedSubscriptionsOutput(ctx *pulumi.Context, args GetAssignedSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetAssignedSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAssignedSubscriptionsResultOutput, error) {
			args := v.(GetAssignedSubscriptionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getAssignedSubscriptions:getAssignedSubscriptions", args, GetAssignedSubscriptionsResultOutput{}, options).(GetAssignedSubscriptionsResultOutput), nil
		}).(GetAssignedSubscriptionsResultOutput)
}

// A collection of arguments for invoking getAssignedSubscriptions.
type GetAssignedSubscriptionsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The version of the subscription entity.
	EntityVersion pulumi.StringPtrInput                    `pulumi:"entityVersion"`
	Filters       GetAssignedSubscriptionsFilterArrayInput `pulumi:"filters"`
	// The ID of the subscription to which the tenancy is associated.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (GetAssignedSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getAssignedSubscriptions.
type GetAssignedSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsResult)(nil)).Elem()
}

func (o GetAssignedSubscriptionsResultOutput) ToGetAssignedSubscriptionsResultOutput() GetAssignedSubscriptionsResultOutput {
	return o
}

func (o GetAssignedSubscriptionsResultOutput) ToGetAssignedSubscriptionsResultOutputWithContext(ctx context.Context) GetAssignedSubscriptionsResultOutput {
	return o
}

// The list of assigned_subscription_collection.
func (o GetAssignedSubscriptionsResultOutput) AssignedSubscriptionCollections() GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsResult) []GetAssignedSubscriptionsAssignedSubscriptionCollection {
		return v.AssignedSubscriptionCollections
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput)
}

// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
func (o GetAssignedSubscriptionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
func (o GetAssignedSubscriptionsResultOutput) EntityVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsResult) *string { return v.EntityVersion }).(pulumi.StringPtrOutput)
}

func (o GetAssignedSubscriptionsResultOutput) Filters() GetAssignedSubscriptionsFilterArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsResult) []GetAssignedSubscriptionsFilter { return v.Filters }).(GetAssignedSubscriptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAssignedSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAssignedSubscriptionsResultOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsResult) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAssignedSubscriptionsResultOutput{})
}
