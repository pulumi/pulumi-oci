// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Domain Governance resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Gets information about the domain governance entity.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetDomainGovernance(ctx, &tenantmanagercontrolplane.GetDomainGovernanceArgs{
//				DomainGovernanceId: testDomainGovernanceOciTenantmanagercontrolplaneDomainGovernance.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDomainGovernance(ctx *pulumi.Context, args *GetDomainGovernanceArgs, opts ...pulumi.InvokeOption) (*GetDomainGovernanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainGovernanceResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getDomainGovernance:getDomainGovernance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainGovernance.
type GetDomainGovernanceArgs struct {
	// The domain governance OCID.
	DomainGovernanceId string `pulumi:"domainGovernanceId"`
}

// A collection of values returned by getDomainGovernance.
type GetDomainGovernanceResult struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags        map[string]string `pulumi:"definedTags"`
	DomainGovernanceId string            `pulumi:"domainGovernanceId"`
	// The OCID of the domain associated with this domain governance entity.
	DomainId string `pulumi:"domainId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates whether governance is enabled for this domain.
	IsGovernanceEnabled bool `pulumi:"isGovernanceEnabled"`
	// The ONS subscription associated with this domain governance entity.
	OnsSubscriptionId string `pulumi:"onsSubscriptionId"`
	// The ONS topic associated with this domain governance entity.
	OnsTopicId string `pulumi:"onsTopicId"`
	// The OCID of the tenancy that owns this domain governance entity.
	OwnerId string `pulumi:"ownerId"`
	// Lifecycle state of the domain governance entity.
	State string `pulumi:"state"`
	// Email address to be used to notify the user, and that the ONS subscription will be created with.
	SubscriptionEmail string `pulumi:"subscriptionEmail"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Date-time when this domain governance was created. An RFC 3339-formatted date and time string.
	TimeCreated string `pulumi:"timeCreated"`
	// Date-time when this domain governance was last updated. An RFC 3339-formatted date and time string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetDomainGovernanceOutput(ctx *pulumi.Context, args GetDomainGovernanceOutputArgs, opts ...pulumi.InvokeOption) GetDomainGovernanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDomainGovernanceResultOutput, error) {
			args := v.(GetDomainGovernanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getDomainGovernance:getDomainGovernance", args, GetDomainGovernanceResultOutput{}, options).(GetDomainGovernanceResultOutput), nil
		}).(GetDomainGovernanceResultOutput)
}

// A collection of arguments for invoking getDomainGovernance.
type GetDomainGovernanceOutputArgs struct {
	// The domain governance OCID.
	DomainGovernanceId pulumi.StringInput `pulumi:"domainGovernanceId"`
}

func (GetDomainGovernanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernanceArgs)(nil)).Elem()
}

// A collection of values returned by getDomainGovernance.
type GetDomainGovernanceResultOutput struct{ *pulumi.OutputState }

func (GetDomainGovernanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernanceResult)(nil)).Elem()
}

func (o GetDomainGovernanceResultOutput) ToGetDomainGovernanceResultOutput() GetDomainGovernanceResultOutput {
	return o
}

func (o GetDomainGovernanceResultOutput) ToGetDomainGovernanceResultOutputWithContext(ctx context.Context) GetDomainGovernanceResultOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDomainGovernanceResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

func (o GetDomainGovernanceResultOutput) DomainGovernanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.DomainGovernanceId }).(pulumi.StringOutput)
}

// The OCID of the domain associated with this domain governance entity.
func (o GetDomainGovernanceResultOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.DomainId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDomainGovernanceResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainGovernanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether governance is enabled for this domain.
func (o GetDomainGovernanceResultOutput) IsGovernanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) bool { return v.IsGovernanceEnabled }).(pulumi.BoolOutput)
}

// The ONS subscription associated with this domain governance entity.
func (o GetDomainGovernanceResultOutput) OnsSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.OnsSubscriptionId }).(pulumi.StringOutput)
}

// The ONS topic associated with this domain governance entity.
func (o GetDomainGovernanceResultOutput) OnsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.OnsTopicId }).(pulumi.StringOutput)
}

// The OCID of the tenancy that owns this domain governance entity.
func (o GetDomainGovernanceResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Lifecycle state of the domain governance entity.
func (o GetDomainGovernanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.State }).(pulumi.StringOutput)
}

// Email address to be used to notify the user, and that the ONS subscription will be created with.
func (o GetDomainGovernanceResultOutput) SubscriptionEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.SubscriptionEmail }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDomainGovernanceResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Date-time when this domain governance was created. An RFC 3339-formatted date and time string.
func (o GetDomainGovernanceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date-time when this domain governance was last updated. An RFC 3339-formatted date and time string.
func (o GetDomainGovernanceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernanceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainGovernanceResultOutput{})
}
