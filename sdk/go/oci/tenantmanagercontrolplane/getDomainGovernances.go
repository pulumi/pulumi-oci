// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Domain Governances in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Return a (paginated) list of domain governance entities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetDomainGovernances(ctx, &tenantmanagercontrolplane.GetDomainGovernancesArgs{
//				CompartmentId:      compartmentId,
//				DomainGovernanceId: pulumi.StringRef(testDomainGovernance.Id),
//				DomainId:           pulumi.StringRef(testDomain.Id),
//				Name:               pulumi.StringRef(domainGovernanceName),
//				State:              pulumi.StringRef(domainGovernanceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDomainGovernances(ctx *pulumi.Context, args *GetDomainGovernancesArgs, opts ...pulumi.InvokeOption) (*GetDomainGovernancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainGovernancesResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getDomainGovernances:getDomainGovernances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainGovernances.
type GetDomainGovernancesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The domain governance OCID.
	DomainGovernanceId *string `pulumi:"domainGovernanceId"`
	// The domain OCID.
	DomainId *string                      `pulumi:"domainId"`
	Filters  []GetDomainGovernancesFilter `pulumi:"filters"`
	// A filter to return only resources that exactly match the name given.
	Name *string `pulumi:"name"`
	// The lifecycle state of the resource.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDomainGovernances.
type GetDomainGovernancesResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The list of domain_governance_collection.
	DomainGovernanceCollections []GetDomainGovernancesDomainGovernanceCollection `pulumi:"domainGovernanceCollections"`
	DomainGovernanceId          *string                                          `pulumi:"domainGovernanceId"`
	// The OCID of the domain associated with this domain governance entity.
	DomainId *string                      `pulumi:"domainId"`
	Filters  []GetDomainGovernancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// Lifecycle state of the domain governance entity.
	State *string `pulumi:"state"`
}

func GetDomainGovernancesOutput(ctx *pulumi.Context, args GetDomainGovernancesOutputArgs, opts ...pulumi.InvokeOption) GetDomainGovernancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDomainGovernancesResultOutput, error) {
			args := v.(GetDomainGovernancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getDomainGovernances:getDomainGovernances", args, GetDomainGovernancesResultOutput{}, options).(GetDomainGovernancesResultOutput), nil
		}).(GetDomainGovernancesResultOutput)
}

// A collection of arguments for invoking getDomainGovernances.
type GetDomainGovernancesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The domain governance OCID.
	DomainGovernanceId pulumi.StringPtrInput `pulumi:"domainGovernanceId"`
	// The domain OCID.
	DomainId pulumi.StringPtrInput                `pulumi:"domainId"`
	Filters  GetDomainGovernancesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that exactly match the name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The lifecycle state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDomainGovernancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesArgs)(nil)).Elem()
}

// A collection of values returned by getDomainGovernances.
type GetDomainGovernancesResultOutput struct{ *pulumi.OutputState }

func (GetDomainGovernancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesResult)(nil)).Elem()
}

func (o GetDomainGovernancesResultOutput) ToGetDomainGovernancesResultOutput() GetDomainGovernancesResultOutput {
	return o
}

func (o GetDomainGovernancesResultOutput) ToGetDomainGovernancesResultOutputWithContext(ctx context.Context) GetDomainGovernancesResultOutput {
	return o
}

func (o GetDomainGovernancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of domain_governance_collection.
func (o GetDomainGovernancesResultOutput) DomainGovernanceCollections() GetDomainGovernancesDomainGovernanceCollectionArrayOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) []GetDomainGovernancesDomainGovernanceCollection {
		return v.DomainGovernanceCollections
	}).(GetDomainGovernancesDomainGovernanceCollectionArrayOutput)
}

func (o GetDomainGovernancesResultOutput) DomainGovernanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) *string { return v.DomainGovernanceId }).(pulumi.StringPtrOutput)
}

// The OCID of the domain associated with this domain governance entity.
func (o GetDomainGovernancesResultOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

func (o GetDomainGovernancesResultOutput) Filters() GetDomainGovernancesFilterArrayOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) []GetDomainGovernancesFilter { return v.Filters }).(GetDomainGovernancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainGovernancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDomainGovernancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Lifecycle state of the domain governance entity.
func (o GetDomainGovernancesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainGovernancesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainGovernancesResultOutput{})
}
