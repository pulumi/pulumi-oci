// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Domains in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Return a (paginated) list of domains.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetDomains(ctx, &tenantmanagercontrolplane.GetDomainsArgs{
//				CompartmentId: compartmentId,
//				DomainId:      pulumi.StringRef(testDomain.Id),
//				Name:          pulumi.StringRef(domainName),
//				State:         pulumi.StringRef(domainState),
//				Status:        pulumi.StringRef(domainStatus),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDomains(ctx *pulumi.Context, args *GetDomainsArgs, opts ...pulumi.InvokeOption) (*GetDomainsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainsResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getDomains:getDomains", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomains.
type GetDomainsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The domain OCID.
	DomainId *string            `pulumi:"domainId"`
	Filters  []GetDomainsFilter `pulumi:"filters"`
	// A filter to return only resources that exactly match the name given.
	Name *string `pulumi:"name"`
	// The lifecycle state of the resource.
	State *string `pulumi:"state"`
	// The status of the domain.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getDomains.
type GetDomainsResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The list of domain_collection.
	DomainCollections []GetDomainsDomainCollection `pulumi:"domainCollections"`
	DomainId          *string                      `pulumi:"domainId"`
	Filters           []GetDomainsFilter           `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// Lifecycle state of the domain.
	State *string `pulumi:"state"`
	// Status of the domain.
	Status *string `pulumi:"status"`
}

func GetDomainsOutput(ctx *pulumi.Context, args GetDomainsOutputArgs, opts ...pulumi.InvokeOption) GetDomainsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDomainsResultOutput, error) {
			args := v.(GetDomainsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getDomains:getDomains", args, GetDomainsResultOutput{}, options).(GetDomainsResultOutput), nil
		}).(GetDomainsResultOutput)
}

// A collection of arguments for invoking getDomains.
type GetDomainsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The domain OCID.
	DomainId pulumi.StringPtrInput      `pulumi:"domainId"`
	Filters  GetDomainsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that exactly match the name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The lifecycle state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The status of the domain.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetDomainsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsArgs)(nil)).Elem()
}

// A collection of values returned by getDomains.
type GetDomainsResultOutput struct{ *pulumi.OutputState }

func (GetDomainsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsResult)(nil)).Elem()
}

func (o GetDomainsResultOutput) ToGetDomainsResultOutput() GetDomainsResultOutput {
	return o
}

func (o GetDomainsResultOutput) ToGetDomainsResultOutputWithContext(ctx context.Context) GetDomainsResultOutput {
	return o
}

func (o GetDomainsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of domain_collection.
func (o GetDomainsResultOutput) DomainCollections() GetDomainsDomainCollectionArrayOutput {
	return o.ApplyT(func(v GetDomainsResult) []GetDomainsDomainCollection { return v.DomainCollections }).(GetDomainsDomainCollectionArrayOutput)
}

func (o GetDomainsResultOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

func (o GetDomainsResultOutput) Filters() GetDomainsFilterArrayOutput {
	return o.ApplyT(func(v GetDomainsResult) []GetDomainsFilter { return v.Filters }).(GetDomainsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDomainsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Lifecycle state of the domain.
func (o GetDomainsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Status of the domain.
func (o GetDomainsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainsResultOutput{})
}
