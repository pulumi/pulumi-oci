// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Organization resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Gets information about the organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetOrganization(ctx, &tenantmanagercontrolplane.GetOrganizationArgs{
//				OrganizationId: testOrganizationOciTenantmanagercontrolplaneOrganization.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOrganization(ctx *pulumi.Context, args *GetOrganizationArgs, opts ...pulumi.InvokeOption) (*GetOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrganizationResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getOrganization:getOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganization.
type GetOrganizationArgs struct {
	// OCID of the organization to retrieve.
	OrganizationId string `pulumi:"organizationId"`
}

// A collection of values returned by getOrganization.
type GetOrganizationResult struct {
	// OCID of the compartment containing the organization. Always a tenancy OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// OCID of the default Universal Credits Model subscription. Any tenancy joining the organization will automatically get assigned this subscription, if a subscription is not explictly assigned.
	DefaultUcmSubscriptionId string `pulumi:"defaultUcmSubscriptionId"`
	// A display name for the organization. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	OrganizationId string `pulumi:"organizationId"`
	// The name of the tenancy that is the organization parent.
	ParentName string `pulumi:"parentName"`
	// Lifecycle state of the organization.
	State string `pulumi:"state"`
	// Date and time when the organization was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Date and time when the organization was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetOrganizationOutput(ctx *pulumi.Context, args GetOrganizationOutputArgs, opts ...pulumi.InvokeOption) GetOrganizationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOrganizationResultOutput, error) {
			args := v.(GetOrganizationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getOrganization:getOrganization", args, GetOrganizationResultOutput{}, options).(GetOrganizationResultOutput), nil
		}).(GetOrganizationResultOutput)
}

// A collection of arguments for invoking getOrganization.
type GetOrganizationOutputArgs struct {
	// OCID of the organization to retrieve.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (GetOrganizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationArgs)(nil)).Elem()
}

// A collection of values returned by getOrganization.
type GetOrganizationResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationResult)(nil)).Elem()
}

func (o GetOrganizationResultOutput) ToGetOrganizationResultOutput() GetOrganizationResultOutput {
	return o
}

func (o GetOrganizationResultOutput) ToGetOrganizationResultOutputWithContext(ctx context.Context) GetOrganizationResultOutput {
	return o
}

// OCID of the compartment containing the organization. Always a tenancy OCID.
func (o GetOrganizationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// OCID of the default Universal Credits Model subscription. Any tenancy joining the organization will automatically get assigned this subscription, if a subscription is not explictly assigned.
func (o GetOrganizationResultOutput) DefaultUcmSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.DefaultUcmSubscriptionId }).(pulumi.StringOutput)
}

// A display name for the organization. Avoid entering confidential information.
func (o GetOrganizationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrganizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOrganizationResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The name of the tenancy that is the organization parent.
func (o GetOrganizationResultOutput) ParentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.ParentName }).(pulumi.StringOutput)
}

// Lifecycle state of the organization.
func (o GetOrganizationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.State }).(pulumi.StringOutput)
}

// Date and time when the organization was created.
func (o GetOrganizationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time when the organization was last updated.
func (o GetOrganizationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrganizationResultOutput{})
}
