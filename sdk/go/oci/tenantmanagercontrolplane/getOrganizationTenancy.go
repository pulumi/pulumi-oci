// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Organization Tenancy resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Gets information about the organization's tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetOrganizationTenancy(ctx, &tenantmanagercontrolplane.GetOrganizationTenancyArgs{
//				OrganizationId: testOrganization.Id,
//				TenancyId:      testTenancy.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOrganizationTenancy(ctx *pulumi.Context, args *GetOrganizationTenancyArgs, opts ...pulumi.InvokeOption) (*GetOrganizationTenancyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrganizationTenancyResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getOrganizationTenancy:getOrganizationTenancy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationTenancy.
type GetOrganizationTenancyArgs struct {
	// OCID of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// OCID of the tenancy to retrieve.
	TenancyId string `pulumi:"tenancyId"`
}

// A collection of values returned by getOrganizationTenancy.
type GetOrganizationTenancyResult struct {
	// The governance status of the tenancy.
	GovernanceStatus string `pulumi:"governanceStatus"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Parameter to indicate the tenancy is approved for transfer to another organization.
	IsApprovedForTransfer bool `pulumi:"isApprovedForTransfer"`
	// Name of the tenancy.
	Name           string `pulumi:"name"`
	OrganizationId string `pulumi:"organizationId"`
	// Role of the organization tenancy.
	Role string `pulumi:"role"`
	// Lifecycle state of the organization tenancy.
	State string `pulumi:"state"`
	// OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
	// Date and time when the tenancy joined the organization.
	TimeJoined string `pulumi:"timeJoined"`
	// Date and time when the tenancy left the organization.
	TimeLeft string `pulumi:"timeLeft"`
}

func GetOrganizationTenancyOutput(ctx *pulumi.Context, args GetOrganizationTenancyOutputArgs, opts ...pulumi.InvokeOption) GetOrganizationTenancyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOrganizationTenancyResultOutput, error) {
			args := v.(GetOrganizationTenancyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getOrganizationTenancy:getOrganizationTenancy", args, GetOrganizationTenancyResultOutput{}, options).(GetOrganizationTenancyResultOutput), nil
		}).(GetOrganizationTenancyResultOutput)
}

// A collection of arguments for invoking getOrganizationTenancy.
type GetOrganizationTenancyOutputArgs struct {
	// OCID of the organization.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// OCID of the tenancy to retrieve.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
}

func (GetOrganizationTenancyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenancyArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationTenancy.
type GetOrganizationTenancyResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationTenancyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenancyResult)(nil)).Elem()
}

func (o GetOrganizationTenancyResultOutput) ToGetOrganizationTenancyResultOutput() GetOrganizationTenancyResultOutput {
	return o
}

func (o GetOrganizationTenancyResultOutput) ToGetOrganizationTenancyResultOutputWithContext(ctx context.Context) GetOrganizationTenancyResultOutput {
	return o
}

// The governance status of the tenancy.
func (o GetOrganizationTenancyResultOutput) GovernanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.GovernanceStatus }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrganizationTenancyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Parameter to indicate the tenancy is approved for transfer to another organization.
func (o GetOrganizationTenancyResultOutput) IsApprovedForTransfer() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) bool { return v.IsApprovedForTransfer }).(pulumi.BoolOutput)
}

// Name of the tenancy.
func (o GetOrganizationTenancyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOrganizationTenancyResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Role of the organization tenancy.
func (o GetOrganizationTenancyResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.Role }).(pulumi.StringOutput)
}

// Lifecycle state of the organization tenancy.
func (o GetOrganizationTenancyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.State }).(pulumi.StringOutput)
}

// OCID of the tenancy.
func (o GetOrganizationTenancyResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

// Date and time when the tenancy joined the organization.
func (o GetOrganizationTenancyResultOutput) TimeJoined() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.TimeJoined }).(pulumi.StringOutput)
}

// Date and time when the tenancy left the organization.
func (o GetOrganizationTenancyResultOutput) TimeLeft() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenancyResult) string { return v.TimeLeft }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrganizationTenancyResultOutput{})
}
