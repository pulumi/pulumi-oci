// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Gets the subscription details by subscription ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetSubscription(ctx, &tenantmanagercontrolplane.GetSubscriptionArgs{
//				SubscriptionId: testSubscriptionOciTenantmanagercontrolplaneSubscription.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscription(ctx *pulumi.Context, args *GetSubscriptionArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getSubscription:getSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscription.
type GetSubscriptionArgs struct {
	// OCID of the subscription.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// A collection of values returned by getSubscription.
type GetSubscriptionResult struct {
	// Classic subscription ID.
	ClassicSubscriptionId string `pulumi:"classicSubscriptionId"`
	// The currency code for the customer associated with the subscription.
	CloudAmountCurrency string `pulumi:"cloudAmountCurrency"`
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Customer service identifier for the customer associated with the subscription.
	CsiNumber string `pulumi:"csiNumber"`
	// Currency code. For example USD, MXN.
	CurrencyCode string `pulumi:"currencyCode"`
	// The country code for the customer associated with the subscription.
	CustomerCountryCode string `pulumi:"customerCountryCode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
	EntityVersion string `pulumi:"entityVersion"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Specifies whether or not the subscription is from classic systems.
	IsClassicSubscription bool `pulumi:"isClassicSubscription"`
	// Specifies whether or not the subscription is a government subscription.
	IsGovernmentSubscription bool `pulumi:"isGovernmentSubscription"`
	// The pay model of the subscription, such as 'Pay as you go' or 'Monthly'.
	PaymentModel string `pulumi:"paymentModel"`
	// Specifies any program that is associated with the subscription.
	ProgramType string `pulumi:"programType"`
	// List of promotions related to the subscription.
	Promotions []GetSubscriptionPromotion `pulumi:"promotions"`
	// Purchase entitlement ID associated with the subscription.
	PurchaseEntitlementId string `pulumi:"purchaseEntitlementId"`
	// Region for the subscription.
	RegionAssignment string `pulumi:"regionAssignment"`
	// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
	ServiceName string `pulumi:"serviceName"`
	// List of SKUs linked to this subscription.
	Skuses []GetSubscriptionSkus `pulumi:"skuses"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
	// Lifecycle state of the subscription.
	State          string `pulumi:"state"`
	SubscriptionId string `pulumi:"subscriptionId"`
	// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
	SubscriptionNumber string `pulumi:"subscriptionNumber"`
	// Tier for the subscription, whether a free promotion subscription or a paid subscription.
	SubscriptionTier string `pulumi:"subscriptionTier"`
	// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetSubscriptionOutput(ctx *pulumi.Context, args GetSubscriptionOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSubscriptionResultOutput, error) {
			args := v.(GetSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getSubscription:getSubscription", args, GetSubscriptionResultOutput{}, options).(GetSubscriptionResultOutput), nil
		}).(GetSubscriptionResultOutput)
}

// A collection of arguments for invoking getSubscription.
type GetSubscriptionOutputArgs struct {
	// OCID of the subscription.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (GetSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getSubscription.
type GetSubscriptionResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionResult)(nil)).Elem()
}

func (o GetSubscriptionResultOutput) ToGetSubscriptionResultOutput() GetSubscriptionResultOutput {
	return o
}

func (o GetSubscriptionResultOutput) ToGetSubscriptionResultOutputWithContext(ctx context.Context) GetSubscriptionResultOutput {
	return o
}

// Classic subscription ID.
func (o GetSubscriptionResultOutput) ClassicSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.ClassicSubscriptionId }).(pulumi.StringOutput)
}

// The currency code for the customer associated with the subscription.
func (o GetSubscriptionResultOutput) CloudAmountCurrency() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.CloudAmountCurrency }).(pulumi.StringOutput)
}

// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
func (o GetSubscriptionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Customer service identifier for the customer associated with the subscription.
func (o GetSubscriptionResultOutput) CsiNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.CsiNumber }).(pulumi.StringOutput)
}

// Currency code. For example USD, MXN.
func (o GetSubscriptionResultOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// The country code for the customer associated with the subscription.
func (o GetSubscriptionResultOutput) CustomerCountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.CustomerCountryCode }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSubscriptionResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Date and time when the SKU ended.
func (o GetSubscriptionResultOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.EndDate }).(pulumi.StringOutput)
}

// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
func (o GetSubscriptionResultOutput) EntityVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.EntityVersion }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSubscriptionResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether or not the subscription is from classic systems.
func (o GetSubscriptionResultOutput) IsClassicSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionResult) bool { return v.IsClassicSubscription }).(pulumi.BoolOutput)
}

// Specifies whether or not the subscription is a government subscription.
func (o GetSubscriptionResultOutput) IsGovernmentSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionResult) bool { return v.IsGovernmentSubscription }).(pulumi.BoolOutput)
}

// The pay model of the subscription, such as 'Pay as you go' or 'Monthly'.
func (o GetSubscriptionResultOutput) PaymentModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.PaymentModel }).(pulumi.StringOutput)
}

// Specifies any program that is associated with the subscription.
func (o GetSubscriptionResultOutput) ProgramType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.ProgramType }).(pulumi.StringOutput)
}

// List of promotions related to the subscription.
func (o GetSubscriptionResultOutput) Promotions() GetSubscriptionPromotionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionResult) []GetSubscriptionPromotion { return v.Promotions }).(GetSubscriptionPromotionArrayOutput)
}

// Purchase entitlement ID associated with the subscription.
func (o GetSubscriptionResultOutput) PurchaseEntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.PurchaseEntitlementId }).(pulumi.StringOutput)
}

// Region for the subscription.
func (o GetSubscriptionResultOutput) RegionAssignment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.RegionAssignment }).(pulumi.StringOutput)
}

// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
func (o GetSubscriptionResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// List of SKUs linked to this subscription.
func (o GetSubscriptionResultOutput) Skuses() GetSubscriptionSkusArrayOutput {
	return o.ApplyT(func(v GetSubscriptionResult) []GetSubscriptionSkus { return v.Skuses }).(GetSubscriptionSkusArrayOutput)
}

// Subscription start time.
func (o GetSubscriptionResultOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.StartDate }).(pulumi.StringOutput)
}

// Lifecycle state of the subscription.
func (o GetSubscriptionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetSubscriptionResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
func (o GetSubscriptionResultOutput) SubscriptionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.SubscriptionNumber }).(pulumi.StringOutput)
}

// Tier for the subscription, whether a free promotion subscription or a paid subscription.
func (o GetSubscriptionResultOutput) SubscriptionTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.SubscriptionTier }).(pulumi.StringOutput)
}

// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetSubscriptionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetSubscriptionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionResultOutput{})
}
