// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Subscription Mappings in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// Lists the subscription mappings for all the subscriptions owned by a given compartmentId. Only the root compartment is allowed.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetSubscriptionMappings(ctx, &tenantmanagercontrolplane.GetSubscriptionMappingsArgs{
//				SubscriptionId:        testSubscription.Id,
//				CompartmentId:         pulumi.StringRef(compartmentId),
//				State:                 pulumi.StringRef(subscriptionMappingState),
//				SubscriptionMappingId: pulumi.StringRef(testSubscriptionMapping.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscriptionMappings(ctx *pulumi.Context, args *GetSubscriptionMappingsArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionMappingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionMappingsResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getSubscriptionMappings:getSubscriptionMappings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionMappings.
type GetSubscriptionMappingsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string                         `pulumi:"compartmentId"`
	Filters       []GetSubscriptionMappingsFilter `pulumi:"filters"`
	// The lifecycle state of the resource.
	State *string `pulumi:"state"`
	// OCID of the subscription.
	SubscriptionId string `pulumi:"subscriptionId"`
	// A unique ID for subscription and tenancy mapping.
	SubscriptionMappingId *string `pulumi:"subscriptionMappingId"`
}

// A collection of values returned by getSubscriptionMappings.
type GetSubscriptionMappingsResult struct {
	// OCID of the compartment. Always a tenancy OCID.
	CompartmentId *string                         `pulumi:"compartmentId"`
	Filters       []GetSubscriptionMappingsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Lifecycle state of the subscriptionMapping.
	State *string `pulumi:"state"`
	// OCID of the subscription.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The list of subscription_mapping_collection.
	SubscriptionMappingCollections []GetSubscriptionMappingsSubscriptionMappingCollection `pulumi:"subscriptionMappingCollections"`
	SubscriptionMappingId          *string                                                `pulumi:"subscriptionMappingId"`
}

func GetSubscriptionMappingsOutput(ctx *pulumi.Context, args GetSubscriptionMappingsOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionMappingsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSubscriptionMappingsResultOutput, error) {
			args := v.(GetSubscriptionMappingsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getSubscriptionMappings:getSubscriptionMappings", args, GetSubscriptionMappingsResultOutput{}, options).(GetSubscriptionMappingsResultOutput), nil
		}).(GetSubscriptionMappingsResultOutput)
}

// A collection of arguments for invoking getSubscriptionMappings.
type GetSubscriptionMappingsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput                   `pulumi:"compartmentId"`
	Filters       GetSubscriptionMappingsFilterArrayInput `pulumi:"filters"`
	// The lifecycle state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// OCID of the subscription.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// A unique ID for subscription and tenancy mapping.
	SubscriptionMappingId pulumi.StringPtrInput `pulumi:"subscriptionMappingId"`
}

func (GetSubscriptionMappingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionMappings.
type GetSubscriptionMappingsResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionMappingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsResult)(nil)).Elem()
}

func (o GetSubscriptionMappingsResultOutput) ToGetSubscriptionMappingsResultOutput() GetSubscriptionMappingsResultOutput {
	return o
}

func (o GetSubscriptionMappingsResultOutput) ToGetSubscriptionMappingsResultOutputWithContext(ctx context.Context) GetSubscriptionMappingsResultOutput {
	return o
}

// OCID of the compartment. Always a tenancy OCID.
func (o GetSubscriptionMappingsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionMappingsResultOutput) Filters() GetSubscriptionMappingsFilterArrayOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsResult) []GetSubscriptionMappingsFilter { return v.Filters }).(GetSubscriptionMappingsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionMappingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Lifecycle state of the subscriptionMapping.
func (o GetSubscriptionMappingsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// OCID of the subscription.
func (o GetSubscriptionMappingsResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The list of subscription_mapping_collection.
func (o GetSubscriptionMappingsResultOutput) SubscriptionMappingCollections() GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsResult) []GetSubscriptionMappingsSubscriptionMappingCollection {
		return v.SubscriptionMappingCollections
	}).(GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput)
}

func (o GetSubscriptionMappingsResultOutput) SubscriptionMappingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsResult) *string { return v.SubscriptionMappingId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionMappingsResultOutput{})
}
