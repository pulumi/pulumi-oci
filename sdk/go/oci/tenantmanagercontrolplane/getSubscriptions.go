// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
//
// List the subscriptions that a compartment owns. Only the root compartment is allowed.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/tenantmanagercontrolplane"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tenantmanagercontrolplane.GetSubscriptions(ctx, &tenantmanagercontrolplane.GetSubscriptionsArgs{
//				CompartmentId:  pulumi.StringRef(compartmentId),
//				EntityVersion:  pulumi.StringRef(subscriptionEntityVersion),
//				SubscriptionId: pulumi.StringRef(testSubscription.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscriptions(ctx *pulumi.Context, args *GetSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionsResult
	err := ctx.Invoke("oci:Tenantmanagercontrolplane/getSubscriptions:getSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptions.
type GetSubscriptionsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// The version of the subscription entity.
	EntityVersion *string                  `pulumi:"entityVersion"`
	Filters       []GetSubscriptionsFilter `pulumi:"filters"`
	// The ID of the subscription to which the tenancy is associated.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// A collection of values returned by getSubscriptions.
type GetSubscriptionsResult struct {
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
	CompartmentId *string `pulumi:"compartmentId"`
	// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
	EntityVersion *string                  `pulumi:"entityVersion"`
	Filters       []GetSubscriptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of subscription_collection.
	SubscriptionCollections []GetSubscriptionsSubscriptionCollection `pulumi:"subscriptionCollections"`
	SubscriptionId          *string                                  `pulumi:"subscriptionId"`
}

func GetSubscriptionsOutput(ctx *pulumi.Context, args GetSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSubscriptionsResultOutput, error) {
			args := v.(GetSubscriptionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Tenantmanagercontrolplane/getSubscriptions:getSubscriptions", args, GetSubscriptionsResultOutput{}, options).(GetSubscriptionsResultOutput), nil
		}).(GetSubscriptionsResultOutput)
}

// A collection of arguments for invoking getSubscriptions.
type GetSubscriptionsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The version of the subscription entity.
	EntityVersion pulumi.StringPtrInput            `pulumi:"entityVersion"`
	Filters       GetSubscriptionsFilterArrayInput `pulumi:"filters"`
	// The ID of the subscription to which the tenancy is associated.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (GetSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptions.
type GetSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsResult)(nil)).Elem()
}

func (o GetSubscriptionsResultOutput) ToGetSubscriptionsResultOutput() GetSubscriptionsResultOutput {
	return o
}

func (o GetSubscriptionsResultOutput) ToGetSubscriptionsResultOutputWithContext(ctx context.Context) GetSubscriptionsResultOutput {
	return o
}

// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
func (o GetSubscriptionsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
func (o GetSubscriptionsResultOutput) EntityVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.EntityVersion }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionsResultOutput) Filters() GetSubscriptionsFilterArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) []GetSubscriptionsFilter { return v.Filters }).(GetSubscriptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of subscription_collection.
func (o GetSubscriptionsResultOutput) SubscriptionCollections() GetSubscriptionsSubscriptionCollectionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) []GetSubscriptionsSubscriptionCollection {
		return v.SubscriptionCollections
	}).(GetSubscriptionsSubscriptionCollectionArrayOutput)
}

func (o GetSubscriptionsResultOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsResult) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionsResultOutput{})
}
