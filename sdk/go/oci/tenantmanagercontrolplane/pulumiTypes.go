// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenantmanagercontrolplane

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection struct {
	// Array containing line item summaries in an assigned subscription.
	Items []GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem `pulumi:"items"`
}

// GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionInput is an input type that accepts GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs and GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionInput` via:
//
//	GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs{...}
type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput
	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutputWithContext(context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs struct {
	// Array containing line item summaries in an assigned subscription.
	Items GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayInput `pulumi:"items"`
}

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection)(nil)).Elem()
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput {
	return i.ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput)
}

// GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayInput is an input type that accepts GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArray and GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayInput` via:
//
//	GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArray{ GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs{...} }
type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput
	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutputWithContext(context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArray []GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionInput

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection)(nil)).Elem()
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArray) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput {
	return i.ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArray) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput)
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection)(nil)).Elem()
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput {
	return o
}

// Array containing line item summaries in an assigned subscription.
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput) Items() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection) []GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem {
		return v.Items
	}).(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput)
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection)(nil)).Elem()
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection {
		return vs[0].([]GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection)[vs[1].(int)]
	}).(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput)
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem struct {
	// Billing model supported by the associated line item.
	BillingModel string `pulumi:"billingModel"`
	// Subscription line item identifier.
	Id string `pulumi:"id"`
	// Product code.
	ProductCode string `pulumi:"productCode"`
	// Product number.
	Quantity float64 `pulumi:"quantity"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the subscription item and associated products should end. An RFC 3339 formatted date and time string.
	TimeEnded string `pulumi:"timeEnded"`
	// The time the subscription item and associated products should start. An RFC 3339 formatted date and time string.
	TimeStarted string `pulumi:"timeStarted"`
}

// GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemInput is an input type that accepts GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs and GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemInput` via:
//
//	GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs{...}
type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput
	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutputWithContext(context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs struct {
	// Billing model supported by the associated line item.
	BillingModel pulumi.StringInput `pulumi:"billingModel"`
	// Subscription line item identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// Product code.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// Product number.
	Quantity pulumi.Float64Input `pulumi:"quantity"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time the subscription item and associated products should end. An RFC 3339 formatted date and time string.
	TimeEnded pulumi.StringInput `pulumi:"timeEnded"`
	// The time the subscription item and associated products should start. An RFC 3339 formatted date and time string.
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
}

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput {
	return i.ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput)
}

// GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayInput is an input type that accepts GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArray and GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayInput` via:
//
//	GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArray{ GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs{...} }
type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput
	ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutputWithContext(context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArray []GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemInput

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArray) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput {
	return i.ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArray) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput)
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput {
	return o
}

// Billing model supported by the associated line item.
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) BillingModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem) string {
		return v.BillingModel
	}).(pulumi.StringOutput)
}

// Subscription line item identifier.
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Product code.
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem) string {
		return v.ProductCode
	}).(pulumi.StringOutput)
}

// Product number.
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) Quantity() pulumi.Float64Output {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem) float64 {
		return v.Quantity
	}).(pulumi.Float64Output)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The time the subscription item and associated products should end. An RFC 3339 formatted date and time string.
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) TimeEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem) string {
		return v.TimeEnded
	}).(pulumi.StringOutput)
}

// The time the subscription item and associated products should start. An RFC 3339 formatted date and time string.
func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem) string {
		return v.TimeStarted
	}).(pulumi.StringOutput)
}

type GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput() GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput) ToGetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem {
		return vs[0].([]GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItem)[vs[1].(int)]
	}).(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput)
}

type GetAssignedSubscriptionLineItemsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetAssignedSubscriptionLineItemsFilterInput is an input type that accepts GetAssignedSubscriptionLineItemsFilterArgs and GetAssignedSubscriptionLineItemsFilterOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionLineItemsFilterInput` via:
//
//	GetAssignedSubscriptionLineItemsFilterArgs{...}
type GetAssignedSubscriptionLineItemsFilterInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionLineItemsFilterOutput() GetAssignedSubscriptionLineItemsFilterOutput
	ToGetAssignedSubscriptionLineItemsFilterOutputWithContext(context.Context) GetAssignedSubscriptionLineItemsFilterOutput
}

type GetAssignedSubscriptionLineItemsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAssignedSubscriptionLineItemsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionLineItemsFilter)(nil)).Elem()
}

func (i GetAssignedSubscriptionLineItemsFilterArgs) ToGetAssignedSubscriptionLineItemsFilterOutput() GetAssignedSubscriptionLineItemsFilterOutput {
	return i.ToGetAssignedSubscriptionLineItemsFilterOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionLineItemsFilterArgs) ToGetAssignedSubscriptionLineItemsFilterOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionLineItemsFilterOutput)
}

// GetAssignedSubscriptionLineItemsFilterArrayInput is an input type that accepts GetAssignedSubscriptionLineItemsFilterArray and GetAssignedSubscriptionLineItemsFilterArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionLineItemsFilterArrayInput` via:
//
//	GetAssignedSubscriptionLineItemsFilterArray{ GetAssignedSubscriptionLineItemsFilterArgs{...} }
type GetAssignedSubscriptionLineItemsFilterArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionLineItemsFilterArrayOutput() GetAssignedSubscriptionLineItemsFilterArrayOutput
	ToGetAssignedSubscriptionLineItemsFilterArrayOutputWithContext(context.Context) GetAssignedSubscriptionLineItemsFilterArrayOutput
}

type GetAssignedSubscriptionLineItemsFilterArray []GetAssignedSubscriptionLineItemsFilterInput

func (GetAssignedSubscriptionLineItemsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionLineItemsFilter)(nil)).Elem()
}

func (i GetAssignedSubscriptionLineItemsFilterArray) ToGetAssignedSubscriptionLineItemsFilterArrayOutput() GetAssignedSubscriptionLineItemsFilterArrayOutput {
	return i.ToGetAssignedSubscriptionLineItemsFilterArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionLineItemsFilterArray) ToGetAssignedSubscriptionLineItemsFilterArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionLineItemsFilterArrayOutput)
}

type GetAssignedSubscriptionLineItemsFilterOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionLineItemsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionLineItemsFilter)(nil)).Elem()
}

func (o GetAssignedSubscriptionLineItemsFilterOutput) ToGetAssignedSubscriptionLineItemsFilterOutput() GetAssignedSubscriptionLineItemsFilterOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsFilterOutput) ToGetAssignedSubscriptionLineItemsFilterOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsFilterOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAssignedSubscriptionLineItemsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetAssignedSubscriptionLineItemsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionLineItemsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAssignedSubscriptionLineItemsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionLineItemsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionLineItemsFilter)(nil)).Elem()
}

func (o GetAssignedSubscriptionLineItemsFilterArrayOutput) ToGetAssignedSubscriptionLineItemsFilterArrayOutput() GetAssignedSubscriptionLineItemsFilterArrayOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsFilterArrayOutput) ToGetAssignedSubscriptionLineItemsFilterArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionLineItemsFilterArrayOutput {
	return o
}

func (o GetAssignedSubscriptionLineItemsFilterArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionLineItemsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionLineItemsFilter {
		return vs[0].([]GetAssignedSubscriptionLineItemsFilter)[vs[1].(int)]
	}).(GetAssignedSubscriptionLineItemsFilterOutput)
}

type GetAssignedSubscriptionPromotion struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount float64 `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit string `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration int `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit string `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay bool `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status string `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired string `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted string `pulumi:"timeStarted"`
}

// GetAssignedSubscriptionPromotionInput is an input type that accepts GetAssignedSubscriptionPromotionArgs and GetAssignedSubscriptionPromotionOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionPromotionInput` via:
//
//	GetAssignedSubscriptionPromotionArgs{...}
type GetAssignedSubscriptionPromotionInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionPromotionOutput() GetAssignedSubscriptionPromotionOutput
	ToGetAssignedSubscriptionPromotionOutputWithContext(context.Context) GetAssignedSubscriptionPromotionOutput
}

type GetAssignedSubscriptionPromotionArgs struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount pulumi.Float64Input `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit pulumi.StringInput `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit pulumi.StringInput `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay pulumi.BoolInput `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status pulumi.StringInput `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired pulumi.StringInput `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
}

func (GetAssignedSubscriptionPromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionPromotion)(nil)).Elem()
}

func (i GetAssignedSubscriptionPromotionArgs) ToGetAssignedSubscriptionPromotionOutput() GetAssignedSubscriptionPromotionOutput {
	return i.ToGetAssignedSubscriptionPromotionOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionPromotionArgs) ToGetAssignedSubscriptionPromotionOutputWithContext(ctx context.Context) GetAssignedSubscriptionPromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionPromotionOutput)
}

// GetAssignedSubscriptionPromotionArrayInput is an input type that accepts GetAssignedSubscriptionPromotionArray and GetAssignedSubscriptionPromotionArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionPromotionArrayInput` via:
//
//	GetAssignedSubscriptionPromotionArray{ GetAssignedSubscriptionPromotionArgs{...} }
type GetAssignedSubscriptionPromotionArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionPromotionArrayOutput() GetAssignedSubscriptionPromotionArrayOutput
	ToGetAssignedSubscriptionPromotionArrayOutputWithContext(context.Context) GetAssignedSubscriptionPromotionArrayOutput
}

type GetAssignedSubscriptionPromotionArray []GetAssignedSubscriptionPromotionInput

func (GetAssignedSubscriptionPromotionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionPromotion)(nil)).Elem()
}

func (i GetAssignedSubscriptionPromotionArray) ToGetAssignedSubscriptionPromotionArrayOutput() GetAssignedSubscriptionPromotionArrayOutput {
	return i.ToGetAssignedSubscriptionPromotionArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionPromotionArray) ToGetAssignedSubscriptionPromotionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionPromotionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionPromotionArrayOutput)
}

type GetAssignedSubscriptionPromotionOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionPromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionPromotion)(nil)).Elem()
}

func (o GetAssignedSubscriptionPromotionOutput) ToGetAssignedSubscriptionPromotionOutput() GetAssignedSubscriptionPromotionOutput {
	return o
}

func (o GetAssignedSubscriptionPromotionOutput) ToGetAssignedSubscriptionPromotionOutputWithContext(ctx context.Context) GetAssignedSubscriptionPromotionOutput {
	return o
}

// If a subscription is present, indicates the total amount of promotional subscription credits.
func (o GetAssignedSubscriptionPromotionOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) float64 { return v.Amount }).(pulumi.Float64Output)
}

// Currency unit associated with the promotion.
func (o GetAssignedSubscriptionPromotionOutput) CurrencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) string { return v.CurrencyUnit }).(pulumi.StringOutput)
}

// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
func (o GetAssignedSubscriptionPromotionOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) int { return v.Duration }).(pulumi.IntOutput)
}

// Unit for the duration.
func (o GetAssignedSubscriptionPromotionOutput) DurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) string { return v.DurationUnit }).(pulumi.StringOutput)
}

// Speficies whether or not the customer intends to pay after the promotion has expired.
func (o GetAssignedSubscriptionPromotionOutput) IsIntentToPay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) bool { return v.IsIntentToPay }).(pulumi.BoolOutput)
}

// If a subscription is present, indicates the current status of the subscription promotion.
func (o GetAssignedSubscriptionPromotionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) string { return v.Status }).(pulumi.StringOutput)
}

// Date and time when the promotion ends.
func (o GetAssignedSubscriptionPromotionOutput) TimeExpired() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) string { return v.TimeExpired }).(pulumi.StringOutput)
}

// Date and time when the promotion starts.
func (o GetAssignedSubscriptionPromotionOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionPromotion) string { return v.TimeStarted }).(pulumi.StringOutput)
}

type GetAssignedSubscriptionPromotionArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionPromotionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionPromotion)(nil)).Elem()
}

func (o GetAssignedSubscriptionPromotionArrayOutput) ToGetAssignedSubscriptionPromotionArrayOutput() GetAssignedSubscriptionPromotionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionPromotionArrayOutput) ToGetAssignedSubscriptionPromotionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionPromotionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionPromotionArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionPromotionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionPromotion {
		return vs[0].([]GetAssignedSubscriptionPromotion)[vs[1].(int)]
	}).(GetAssignedSubscriptionPromotionOutput)
}

type GetAssignedSubscriptionSkus struct {
	// Description of the stock units.
	Description string `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId string `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance bool `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent bool `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription string `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName string `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity int `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku string `pulumi:"sku"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
}

// GetAssignedSubscriptionSkusInput is an input type that accepts GetAssignedSubscriptionSkusArgs and GetAssignedSubscriptionSkusOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionSkusInput` via:
//
//	GetAssignedSubscriptionSkusArgs{...}
type GetAssignedSubscriptionSkusInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionSkusOutput() GetAssignedSubscriptionSkusOutput
	ToGetAssignedSubscriptionSkusOutputWithContext(context.Context) GetAssignedSubscriptionSkusOutput
}

type GetAssignedSubscriptionSkusArgs struct {
	// Description of the stock units.
	Description pulumi.StringInput `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId pulumi.StringInput `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance pulumi.BoolInput `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent pulumi.BoolInput `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription pulumi.StringInput `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity pulumi.IntInput `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Subscription start time.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (GetAssignedSubscriptionSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionSkus)(nil)).Elem()
}

func (i GetAssignedSubscriptionSkusArgs) ToGetAssignedSubscriptionSkusOutput() GetAssignedSubscriptionSkusOutput {
	return i.ToGetAssignedSubscriptionSkusOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionSkusArgs) ToGetAssignedSubscriptionSkusOutputWithContext(ctx context.Context) GetAssignedSubscriptionSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionSkusOutput)
}

// GetAssignedSubscriptionSkusArrayInput is an input type that accepts GetAssignedSubscriptionSkusArray and GetAssignedSubscriptionSkusArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionSkusArrayInput` via:
//
//	GetAssignedSubscriptionSkusArray{ GetAssignedSubscriptionSkusArgs{...} }
type GetAssignedSubscriptionSkusArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionSkusArrayOutput() GetAssignedSubscriptionSkusArrayOutput
	ToGetAssignedSubscriptionSkusArrayOutputWithContext(context.Context) GetAssignedSubscriptionSkusArrayOutput
}

type GetAssignedSubscriptionSkusArray []GetAssignedSubscriptionSkusInput

func (GetAssignedSubscriptionSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionSkus)(nil)).Elem()
}

func (i GetAssignedSubscriptionSkusArray) ToGetAssignedSubscriptionSkusArrayOutput() GetAssignedSubscriptionSkusArrayOutput {
	return i.ToGetAssignedSubscriptionSkusArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionSkusArray) ToGetAssignedSubscriptionSkusArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionSkusArrayOutput)
}

type GetAssignedSubscriptionSkusOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionSkus)(nil)).Elem()
}

func (o GetAssignedSubscriptionSkusOutput) ToGetAssignedSubscriptionSkusOutput() GetAssignedSubscriptionSkusOutput {
	return o
}

func (o GetAssignedSubscriptionSkusOutput) ToGetAssignedSubscriptionSkusOutputWithContext(ctx context.Context) GetAssignedSubscriptionSkusOutput {
	return o
}

// Description of the stock units.
func (o GetAssignedSubscriptionSkusOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) string { return v.Description }).(pulumi.StringOutput)
}

// Date and time when the SKU ended.
func (o GetAssignedSubscriptionSkusOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) string { return v.EndDate }).(pulumi.StringOutput)
}

// Sales order line identifier.
func (o GetAssignedSubscriptionSkusOutput) GsiOrderLineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) string { return v.GsiOrderLineId }).(pulumi.StringOutput)
}

// Specifies if an additional test instance can be provisioned by the SaaS application.
func (o GetAssignedSubscriptionSkusOutput) IsAdditionalInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) bool { return v.IsAdditionalInstance }).(pulumi.BoolOutput)
}

// Specifies if the SKU is considered as a parent or child.
func (o GetAssignedSubscriptionSkusOutput) IsBaseServiceComponent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) bool { return v.IsBaseServiceComponent }).(pulumi.BoolOutput)
}

// Description of the covered product belonging to this SKU.
func (o GetAssignedSubscriptionSkusOutput) LicensePartDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) string { return v.LicensePartDescription }).(pulumi.StringOutput)
}

// Base metric for billing the service.
func (o GetAssignedSubscriptionSkusOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) string { return v.MetricName }).(pulumi.StringOutput)
}

// Quantity of the stock units.
func (o GetAssignedSubscriptionSkusOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) int { return v.Quantity }).(pulumi.IntOutput)
}

// Stock Keeping Unit (SKU) ID.
func (o GetAssignedSubscriptionSkusOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) string { return v.Sku }).(pulumi.StringOutput)
}

// Subscription start time.
func (o GetAssignedSubscriptionSkusOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionSkus) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetAssignedSubscriptionSkusArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionSkus)(nil)).Elem()
}

func (o GetAssignedSubscriptionSkusArrayOutput) ToGetAssignedSubscriptionSkusArrayOutput() GetAssignedSubscriptionSkusArrayOutput {
	return o
}

func (o GetAssignedSubscriptionSkusArrayOutput) ToGetAssignedSubscriptionSkusArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionSkusArrayOutput {
	return o
}

func (o GetAssignedSubscriptionSkusArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionSkus {
		return vs[0].([]GetAssignedSubscriptionSkus)[vs[1].(int)]
	}).(GetAssignedSubscriptionSkusOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollection struct {
	Items []GetAssignedSubscriptionsAssignedSubscriptionCollectionItem `pulumi:"items"`
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs and GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs{...}
type GetAssignedSubscriptionsAssignedSubscriptionCollectionInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs struct {
	Items GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayInput `pulumi:"items"`
}

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollection)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput)
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionArray and GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionArray{ GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs{...} }
type GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionArray []GetAssignedSubscriptionsAssignedSubscriptionCollectionInput

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollection)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollection)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput) Items() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollection) []GetAssignedSubscriptionsAssignedSubscriptionCollectionItem {
		return v.Items
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollection)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionsAssignedSubscriptionCollection {
		return vs[0].([]GetAssignedSubscriptionsAssignedSubscriptionCollection)[vs[1].(int)]
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItem struct {
	// Subscription ID.
	ClassicSubscriptionId string `pulumi:"classicSubscriptionId"`
	// The currency code for the customer associated with the subscription.
	CloudAmountCurrency string `pulumi:"cloudAmountCurrency"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Customer service identifier for the customer associated with the subscription.
	CsiNumber string `pulumi:"csiNumber"`
	// Currency code. For example USD, MXN.
	CurrencyCode string `pulumi:"currencyCode"`
	// The country code for the customer associated with the subscription.
	CustomerCountryCode string `pulumi:"customerCountryCode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// The version of the subscription entity.
	EntityVersion string `pulumi:"entityVersion"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the subscription.
	Id string `pulumi:"id"`
	// Specifies whether or not the subscription is legacy.
	IsClassicSubscription bool `pulumi:"isClassicSubscription"`
	// Specifies whether or not the subscription is a government subscription.
	IsGovernmentSubscription bool `pulumi:"isGovernmentSubscription"`
	// Service or component which is used to provision and manage the subscription.
	ManagedBy string `pulumi:"managedBy"`
	// List of subscription order OCIDs that contributed to this subscription.
	OrderIds []string `pulumi:"orderIds"`
	// Specifies any program that is associated with the subscription.
	ProgramType string `pulumi:"programType"`
	// List of promotions related to the subscription.
	Promotions []GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion `pulumi:"promotions"`
	// Purchase entitlement ID associated with the subscription.
	PurchaseEntitlementId string `pulumi:"purchaseEntitlementId"`
	// Region for the subscription.
	RegionAssignment string `pulumi:"regionAssignment"`
	// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
	ServiceName string `pulumi:"serviceName"`
	// List of SKUs linked to the subscription.
	Skuses []GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus `pulumi:"skuses"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
	// Lifecycle state of the subscription.
	State string `pulumi:"state"`
	// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
	SubscriptionNumber string `pulumi:"subscriptionNumber"`
	// Tier for the subscription, whether a free promotion subscription or a paid subscription.
	SubscriptionTier string `pulumi:"subscriptionTier"`
	// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionItemInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs and GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionItemInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs{...}
type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs struct {
	// Subscription ID.
	ClassicSubscriptionId pulumi.StringInput `pulumi:"classicSubscriptionId"`
	// The currency code for the customer associated with the subscription.
	CloudAmountCurrency pulumi.StringInput `pulumi:"cloudAmountCurrency"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Customer service identifier for the customer associated with the subscription.
	CsiNumber pulumi.StringInput `pulumi:"csiNumber"`
	// Currency code. For example USD, MXN.
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// The country code for the customer associated with the subscription.
	CustomerCountryCode pulumi.StringInput `pulumi:"customerCountryCode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Date and time when the SKU ended.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// The version of the subscription entity.
	EntityVersion pulumi.StringInput `pulumi:"entityVersion"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the subscription.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether or not the subscription is legacy.
	IsClassicSubscription pulumi.BoolInput `pulumi:"isClassicSubscription"`
	// Specifies whether or not the subscription is a government subscription.
	IsGovernmentSubscription pulumi.BoolInput `pulumi:"isGovernmentSubscription"`
	// Service or component which is used to provision and manage the subscription.
	ManagedBy pulumi.StringInput `pulumi:"managedBy"`
	// List of subscription order OCIDs that contributed to this subscription.
	OrderIds pulumi.StringArrayInput `pulumi:"orderIds"`
	// Specifies any program that is associated with the subscription.
	ProgramType pulumi.StringInput `pulumi:"programType"`
	// List of promotions related to the subscription.
	Promotions GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayInput `pulumi:"promotions"`
	// Purchase entitlement ID associated with the subscription.
	PurchaseEntitlementId pulumi.StringInput `pulumi:"purchaseEntitlementId"`
	// Region for the subscription.
	RegionAssignment pulumi.StringInput `pulumi:"regionAssignment"`
	// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// List of SKUs linked to the subscription.
	Skuses GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayInput `pulumi:"skuses"`
	// Subscription start time.
	StartDate pulumi.StringInput `pulumi:"startDate"`
	// Lifecycle state of the subscription.
	State pulumi.StringInput `pulumi:"state"`
	// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
	SubscriptionNumber pulumi.StringInput `pulumi:"subscriptionNumber"`
	// Tier for the subscription, whether a free promotion subscription or a paid subscription.
	SubscriptionTier pulumi.StringInput `pulumi:"subscriptionTier"`
	// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItem)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput)
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArray and GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArray{ GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs{...} }
type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArray []GetAssignedSubscriptionsAssignedSubscriptionCollectionItemInput

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollectionItem)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItem)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput {
	return o
}

// Subscription ID.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) ClassicSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string {
		return v.ClassicSubscriptionId
	}).(pulumi.StringOutput)
}

// The currency code for the customer associated with the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) CloudAmountCurrency() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string {
		return v.CloudAmountCurrency
	}).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Customer service identifier for the customer associated with the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) CsiNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.CsiNumber }).(pulumi.StringOutput)
}

// Currency code. For example USD, MXN.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// The country code for the customer associated with the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) CustomerCountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string {
		return v.CustomerCountryCode
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// Date and time when the SKU ended.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.EndDate }).(pulumi.StringOutput)
}

// The version of the subscription entity.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) EntityVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.EntityVersion }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether or not the subscription is legacy.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) IsClassicSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) bool {
		return v.IsClassicSubscription
	}).(pulumi.BoolOutput)
}

// Specifies whether or not the subscription is a government subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) IsGovernmentSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) bool {
		return v.IsGovernmentSubscription
	}).(pulumi.BoolOutput)
}

// Service or component which is used to provision and manage the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) ManagedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.ManagedBy }).(pulumi.StringOutput)
}

// List of subscription order OCIDs that contributed to this subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) OrderIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) []string { return v.OrderIds }).(pulumi.StringArrayOutput)
}

// Specifies any program that is associated with the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) ProgramType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.ProgramType }).(pulumi.StringOutput)
}

// List of promotions related to the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) Promotions() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) []GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion {
		return v.Promotions
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput)
}

// Purchase entitlement ID associated with the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) PurchaseEntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string {
		return v.PurchaseEntitlementId
	}).(pulumi.StringOutput)
}

// Region for the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) RegionAssignment() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.RegionAssignment }).(pulumi.StringOutput)
}

// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.ServiceName }).(pulumi.StringOutput)
}

// List of SKUs linked to the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) Skuses() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) []GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus {
		return v.Skuses
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput)
}

// Subscription start time.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.StartDate }).(pulumi.StringOutput)
}

// Lifecycle state of the subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) SubscriptionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.SubscriptionNumber }).(pulumi.StringOutput)
}

// Tier for the subscription, whether a free promotion subscription or a paid subscription.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) SubscriptionTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.SubscriptionTier }).(pulumi.StringOutput)
}

// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollectionItem)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionsAssignedSubscriptionCollectionItem {
		return vs[0].([]GetAssignedSubscriptionsAssignedSubscriptionCollectionItem)[vs[1].(int)]
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount float64 `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit string `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration int `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit string `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay bool `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status string `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired string `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted string `pulumi:"timeStarted"`
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs and GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs{...}
type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount pulumi.Float64Input `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit pulumi.StringInput `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit pulumi.StringInput `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay pulumi.BoolInput `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status pulumi.StringInput `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired pulumi.StringInput `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
}

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput)
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArray and GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArray{ GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs{...} }
type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArray []GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionInput

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput {
	return o
}

// If a subscription is present, indicates the total amount of promotional subscription credits.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) float64 { return v.Amount }).(pulumi.Float64Output)
}

// Currency unit associated with the promotion.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) CurrencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) string {
		return v.CurrencyUnit
	}).(pulumi.StringOutput)
}

// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) int { return v.Duration }).(pulumi.IntOutput)
}

// Unit for the duration.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) DurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) string {
		return v.DurationUnit
	}).(pulumi.StringOutput)
}

// Speficies whether or not the customer intends to pay after the promotion has expired.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) IsIntentToPay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) bool {
		return v.IsIntentToPay
	}).(pulumi.BoolOutput)
}

// If a subscription is present, indicates the current status of the subscription promotion.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) string { return v.Status }).(pulumi.StringOutput)
}

// Date and time when the promotion ends.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) TimeExpired() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) string {
		return v.TimeExpired
	}).(pulumi.StringOutput)
}

// Date and time when the promotion starts.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion) string {
		return v.TimeStarted
	}).(pulumi.StringOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion {
		return vs[0].([]GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotion)[vs[1].(int)]
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus struct {
	// Description of the stock units.
	Description string `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId string `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance bool `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent bool `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription string `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName string `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity int `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku string `pulumi:"sku"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs and GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs{...}
type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs struct {
	// Description of the stock units.
	Description pulumi.StringInput `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId pulumi.StringInput `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance pulumi.BoolInput `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent pulumi.BoolInput `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription pulumi.StringInput `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity pulumi.IntInput `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Subscription start time.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput)
}

// GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayInput is an input type that accepts GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArray and GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayInput` via:
//
//	GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArray{ GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs{...} }
type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput
	ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutputWithContext(context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArray []GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusInput

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput {
	return i.ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArray) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput {
	return o
}

// Description of the stock units.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) string { return v.Description }).(pulumi.StringOutput)
}

// Date and time when the SKU ended.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) string { return v.EndDate }).(pulumi.StringOutput)
}

// Sales order line identifier.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) GsiOrderLineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) string { return v.GsiOrderLineId }).(pulumi.StringOutput)
}

// Specifies if an additional test instance can be provisioned by the SaaS application.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) IsAdditionalInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) bool {
		return v.IsAdditionalInstance
	}).(pulumi.BoolOutput)
}

// Specifies if the SKU is considered as a parent or child.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) IsBaseServiceComponent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) bool {
		return v.IsBaseServiceComponent
	}).(pulumi.BoolOutput)
}

// Description of the covered product belonging to this SKU.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) LicensePartDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) string {
		return v.LicensePartDescription
	}).(pulumi.StringOutput)
}

// Base metric for billing the service.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) string { return v.MetricName }).(pulumi.StringOutput)
}

// Quantity of the stock units.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) int { return v.Quantity }).(pulumi.IntOutput)
}

// Stock Keeping Unit (SKU) ID.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) string { return v.Sku }).(pulumi.StringOutput)
}

// Subscription start time.
func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput() GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput) ToGetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus {
		return vs[0].([]GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkus)[vs[1].(int)]
	}).(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput)
}

type GetAssignedSubscriptionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetAssignedSubscriptionsFilterInput is an input type that accepts GetAssignedSubscriptionsFilterArgs and GetAssignedSubscriptionsFilterOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsFilterInput` via:
//
//	GetAssignedSubscriptionsFilterArgs{...}
type GetAssignedSubscriptionsFilterInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsFilterOutput() GetAssignedSubscriptionsFilterOutput
	ToGetAssignedSubscriptionsFilterOutputWithContext(context.Context) GetAssignedSubscriptionsFilterOutput
}

type GetAssignedSubscriptionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAssignedSubscriptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsFilter)(nil)).Elem()
}

func (i GetAssignedSubscriptionsFilterArgs) ToGetAssignedSubscriptionsFilterOutput() GetAssignedSubscriptionsFilterOutput {
	return i.ToGetAssignedSubscriptionsFilterOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsFilterArgs) ToGetAssignedSubscriptionsFilterOutputWithContext(ctx context.Context) GetAssignedSubscriptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsFilterOutput)
}

// GetAssignedSubscriptionsFilterArrayInput is an input type that accepts GetAssignedSubscriptionsFilterArray and GetAssignedSubscriptionsFilterArrayOutput values.
// You can construct a concrete instance of `GetAssignedSubscriptionsFilterArrayInput` via:
//
//	GetAssignedSubscriptionsFilterArray{ GetAssignedSubscriptionsFilterArgs{...} }
type GetAssignedSubscriptionsFilterArrayInput interface {
	pulumi.Input

	ToGetAssignedSubscriptionsFilterArrayOutput() GetAssignedSubscriptionsFilterArrayOutput
	ToGetAssignedSubscriptionsFilterArrayOutputWithContext(context.Context) GetAssignedSubscriptionsFilterArrayOutput
}

type GetAssignedSubscriptionsFilterArray []GetAssignedSubscriptionsFilterInput

func (GetAssignedSubscriptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsFilter)(nil)).Elem()
}

func (i GetAssignedSubscriptionsFilterArray) ToGetAssignedSubscriptionsFilterArrayOutput() GetAssignedSubscriptionsFilterArrayOutput {
	return i.ToGetAssignedSubscriptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetAssignedSubscriptionsFilterArray) ToGetAssignedSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssignedSubscriptionsFilterArrayOutput)
}

type GetAssignedSubscriptionsFilterOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssignedSubscriptionsFilter)(nil)).Elem()
}

func (o GetAssignedSubscriptionsFilterOutput) ToGetAssignedSubscriptionsFilterOutput() GetAssignedSubscriptionsFilterOutput {
	return o
}

func (o GetAssignedSubscriptionsFilterOutput) ToGetAssignedSubscriptionsFilterOutputWithContext(ctx context.Context) GetAssignedSubscriptionsFilterOutput {
	return o
}

func (o GetAssignedSubscriptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAssignedSubscriptionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetAssignedSubscriptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAssignedSubscriptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAssignedSubscriptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAssignedSubscriptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssignedSubscriptionsFilter)(nil)).Elem()
}

func (o GetAssignedSubscriptionsFilterArrayOutput) ToGetAssignedSubscriptionsFilterArrayOutput() GetAssignedSubscriptionsFilterArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsFilterArrayOutput) ToGetAssignedSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetAssignedSubscriptionsFilterArrayOutput {
	return o
}

func (o GetAssignedSubscriptionsFilterArrayOutput) Index(i pulumi.IntInput) GetAssignedSubscriptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssignedSubscriptionsFilter {
		return vs[0].([]GetAssignedSubscriptionsFilter)[vs[1].(int)]
	}).(GetAssignedSubscriptionsFilterOutput)
}

type GetDomainGovernancesDomainGovernanceCollection struct {
	Items []GetDomainGovernancesDomainGovernanceCollectionItem `pulumi:"items"`
}

// GetDomainGovernancesDomainGovernanceCollectionInput is an input type that accepts GetDomainGovernancesDomainGovernanceCollectionArgs and GetDomainGovernancesDomainGovernanceCollectionOutput values.
// You can construct a concrete instance of `GetDomainGovernancesDomainGovernanceCollectionInput` via:
//
//	GetDomainGovernancesDomainGovernanceCollectionArgs{...}
type GetDomainGovernancesDomainGovernanceCollectionInput interface {
	pulumi.Input

	ToGetDomainGovernancesDomainGovernanceCollectionOutput() GetDomainGovernancesDomainGovernanceCollectionOutput
	ToGetDomainGovernancesDomainGovernanceCollectionOutputWithContext(context.Context) GetDomainGovernancesDomainGovernanceCollectionOutput
}

type GetDomainGovernancesDomainGovernanceCollectionArgs struct {
	Items GetDomainGovernancesDomainGovernanceCollectionItemArrayInput `pulumi:"items"`
}

func (GetDomainGovernancesDomainGovernanceCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollection)(nil)).Elem()
}

func (i GetDomainGovernancesDomainGovernanceCollectionArgs) ToGetDomainGovernancesDomainGovernanceCollectionOutput() GetDomainGovernancesDomainGovernanceCollectionOutput {
	return i.ToGetDomainGovernancesDomainGovernanceCollectionOutputWithContext(context.Background())
}

func (i GetDomainGovernancesDomainGovernanceCollectionArgs) ToGetDomainGovernancesDomainGovernanceCollectionOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGovernancesDomainGovernanceCollectionOutput)
}

// GetDomainGovernancesDomainGovernanceCollectionArrayInput is an input type that accepts GetDomainGovernancesDomainGovernanceCollectionArray and GetDomainGovernancesDomainGovernanceCollectionArrayOutput values.
// You can construct a concrete instance of `GetDomainGovernancesDomainGovernanceCollectionArrayInput` via:
//
//	GetDomainGovernancesDomainGovernanceCollectionArray{ GetDomainGovernancesDomainGovernanceCollectionArgs{...} }
type GetDomainGovernancesDomainGovernanceCollectionArrayInput interface {
	pulumi.Input

	ToGetDomainGovernancesDomainGovernanceCollectionArrayOutput() GetDomainGovernancesDomainGovernanceCollectionArrayOutput
	ToGetDomainGovernancesDomainGovernanceCollectionArrayOutputWithContext(context.Context) GetDomainGovernancesDomainGovernanceCollectionArrayOutput
}

type GetDomainGovernancesDomainGovernanceCollectionArray []GetDomainGovernancesDomainGovernanceCollectionInput

func (GetDomainGovernancesDomainGovernanceCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGovernancesDomainGovernanceCollection)(nil)).Elem()
}

func (i GetDomainGovernancesDomainGovernanceCollectionArray) ToGetDomainGovernancesDomainGovernanceCollectionArrayOutput() GetDomainGovernancesDomainGovernanceCollectionArrayOutput {
	return i.ToGetDomainGovernancesDomainGovernanceCollectionArrayOutputWithContext(context.Background())
}

func (i GetDomainGovernancesDomainGovernanceCollectionArray) ToGetDomainGovernancesDomainGovernanceCollectionArrayOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGovernancesDomainGovernanceCollectionArrayOutput)
}

type GetDomainGovernancesDomainGovernanceCollectionOutput struct{ *pulumi.OutputState }

func (GetDomainGovernancesDomainGovernanceCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollection)(nil)).Elem()
}

func (o GetDomainGovernancesDomainGovernanceCollectionOutput) ToGetDomainGovernancesDomainGovernanceCollectionOutput() GetDomainGovernancesDomainGovernanceCollectionOutput {
	return o
}

func (o GetDomainGovernancesDomainGovernanceCollectionOutput) ToGetDomainGovernancesDomainGovernanceCollectionOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionOutput {
	return o
}

func (o GetDomainGovernancesDomainGovernanceCollectionOutput) Items() GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollection) []GetDomainGovernancesDomainGovernanceCollectionItem {
		return v.Items
	}).(GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput)
}

type GetDomainGovernancesDomainGovernanceCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainGovernancesDomainGovernanceCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGovernancesDomainGovernanceCollection)(nil)).Elem()
}

func (o GetDomainGovernancesDomainGovernanceCollectionArrayOutput) ToGetDomainGovernancesDomainGovernanceCollectionArrayOutput() GetDomainGovernancesDomainGovernanceCollectionArrayOutput {
	return o
}

func (o GetDomainGovernancesDomainGovernanceCollectionArrayOutput) ToGetDomainGovernancesDomainGovernanceCollectionArrayOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionArrayOutput {
	return o
}

func (o GetDomainGovernancesDomainGovernanceCollectionArrayOutput) Index(i pulumi.IntInput) GetDomainGovernancesDomainGovernanceCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainGovernancesDomainGovernanceCollection {
		return vs[0].([]GetDomainGovernancesDomainGovernanceCollection)[vs[1].(int)]
	}).(GetDomainGovernancesDomainGovernanceCollectionOutput)
}

type GetDomainGovernancesDomainGovernanceCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The domain OCID.
	DomainId string `pulumi:"domainId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the domain governance entity.
	Id string `pulumi:"id"`
	// Indicates whether governance is enabled for this domain.
	IsGovernanceEnabled bool `pulumi:"isGovernanceEnabled"`
	// The ONS subscription associated with this domain governance entity.
	OnsSubscriptionId string `pulumi:"onsSubscriptionId"`
	// The ONS topic associated with this domain governance entity.
	OnsTopicId string `pulumi:"onsTopicId"`
	// The OCID of the tenancy that owns this domain governance entity.
	OwnerId string `pulumi:"ownerId"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// Email address to be used to notify the user, and that the ONS subscription will be created with.
	SubscriptionEmail string `pulumi:"subscriptionEmail"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Date-time when this domain governance was created. An RFC 3339-formatted date and time string.
	TimeCreated string `pulumi:"timeCreated"`
	// Date-time when this domain governance was last updated. An RFC 3339-formatted date and time string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDomainGovernancesDomainGovernanceCollectionItemInput is an input type that accepts GetDomainGovernancesDomainGovernanceCollectionItemArgs and GetDomainGovernancesDomainGovernanceCollectionItemOutput values.
// You can construct a concrete instance of `GetDomainGovernancesDomainGovernanceCollectionItemInput` via:
//
//	GetDomainGovernancesDomainGovernanceCollectionItemArgs{...}
type GetDomainGovernancesDomainGovernanceCollectionItemInput interface {
	pulumi.Input

	ToGetDomainGovernancesDomainGovernanceCollectionItemOutput() GetDomainGovernancesDomainGovernanceCollectionItemOutput
	ToGetDomainGovernancesDomainGovernanceCollectionItemOutputWithContext(context.Context) GetDomainGovernancesDomainGovernanceCollectionItemOutput
}

type GetDomainGovernancesDomainGovernanceCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The domain OCID.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the domain governance entity.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether governance is enabled for this domain.
	IsGovernanceEnabled pulumi.BoolInput `pulumi:"isGovernanceEnabled"`
	// The ONS subscription associated with this domain governance entity.
	OnsSubscriptionId pulumi.StringInput `pulumi:"onsSubscriptionId"`
	// The ONS topic associated with this domain governance entity.
	OnsTopicId pulumi.StringInput `pulumi:"onsTopicId"`
	// The OCID of the tenancy that owns this domain governance entity.
	OwnerId pulumi.StringInput `pulumi:"ownerId"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// Email address to be used to notify the user, and that the ONS subscription will be created with.
	SubscriptionEmail pulumi.StringInput `pulumi:"subscriptionEmail"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Date-time when this domain governance was created. An RFC 3339-formatted date and time string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Date-time when this domain governance was last updated. An RFC 3339-formatted date and time string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDomainGovernancesDomainGovernanceCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollectionItem)(nil)).Elem()
}

func (i GetDomainGovernancesDomainGovernanceCollectionItemArgs) ToGetDomainGovernancesDomainGovernanceCollectionItemOutput() GetDomainGovernancesDomainGovernanceCollectionItemOutput {
	return i.ToGetDomainGovernancesDomainGovernanceCollectionItemOutputWithContext(context.Background())
}

func (i GetDomainGovernancesDomainGovernanceCollectionItemArgs) ToGetDomainGovernancesDomainGovernanceCollectionItemOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGovernancesDomainGovernanceCollectionItemOutput)
}

// GetDomainGovernancesDomainGovernanceCollectionItemArrayInput is an input type that accepts GetDomainGovernancesDomainGovernanceCollectionItemArray and GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDomainGovernancesDomainGovernanceCollectionItemArrayInput` via:
//
//	GetDomainGovernancesDomainGovernanceCollectionItemArray{ GetDomainGovernancesDomainGovernanceCollectionItemArgs{...} }
type GetDomainGovernancesDomainGovernanceCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDomainGovernancesDomainGovernanceCollectionItemArrayOutput() GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput
	ToGetDomainGovernancesDomainGovernanceCollectionItemArrayOutputWithContext(context.Context) GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput
}

type GetDomainGovernancesDomainGovernanceCollectionItemArray []GetDomainGovernancesDomainGovernanceCollectionItemInput

func (GetDomainGovernancesDomainGovernanceCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGovernancesDomainGovernanceCollectionItem)(nil)).Elem()
}

func (i GetDomainGovernancesDomainGovernanceCollectionItemArray) ToGetDomainGovernancesDomainGovernanceCollectionItemArrayOutput() GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput {
	return i.ToGetDomainGovernancesDomainGovernanceCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDomainGovernancesDomainGovernanceCollectionItemArray) ToGetDomainGovernancesDomainGovernanceCollectionItemArrayOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput)
}

type GetDomainGovernancesDomainGovernanceCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDomainGovernancesDomainGovernanceCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollectionItem)(nil)).Elem()
}

func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) ToGetDomainGovernancesDomainGovernanceCollectionItemOutput() GetDomainGovernancesDomainGovernanceCollectionItemOutput {
	return o
}

func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) ToGetDomainGovernancesDomainGovernanceCollectionItemOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The domain OCID.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.DomainId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the domain governance entity.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether governance is enabled for this domain.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) IsGovernanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) bool { return v.IsGovernanceEnabled }).(pulumi.BoolOutput)
}

// The ONS subscription associated with this domain governance entity.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) OnsSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.OnsSubscriptionId }).(pulumi.StringOutput)
}

// The ONS topic associated with this domain governance entity.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) OnsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.OnsTopicId }).(pulumi.StringOutput)
}

// The OCID of the tenancy that owns this domain governance entity.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.OwnerId }).(pulumi.StringOutput)
}

// The lifecycle state of the resource.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Email address to be used to notify the user, and that the ONS subscription will be created with.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) SubscriptionEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.SubscriptionEmail }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Date-time when this domain governance was created. An RFC 3339-formatted date and time string.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date-time when this domain governance was last updated. An RFC 3339-formatted date and time string.
func (o GetDomainGovernancesDomainGovernanceCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesDomainGovernanceCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGovernancesDomainGovernanceCollectionItem)(nil)).Elem()
}

func (o GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput) ToGetDomainGovernancesDomainGovernanceCollectionItemArrayOutput() GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput {
	return o
}

func (o GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput) ToGetDomainGovernancesDomainGovernanceCollectionItemArrayOutputWithContext(ctx context.Context) GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput {
	return o
}

func (o GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDomainGovernancesDomainGovernanceCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainGovernancesDomainGovernanceCollectionItem {
		return vs[0].([]GetDomainGovernancesDomainGovernanceCollectionItem)[vs[1].(int)]
	}).(GetDomainGovernancesDomainGovernanceCollectionItemOutput)
}

type GetDomainGovernancesFilter struct {
	// A filter to return only resources that exactly match the name given.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDomainGovernancesFilterInput is an input type that accepts GetDomainGovernancesFilterArgs and GetDomainGovernancesFilterOutput values.
// You can construct a concrete instance of `GetDomainGovernancesFilterInput` via:
//
//	GetDomainGovernancesFilterArgs{...}
type GetDomainGovernancesFilterInput interface {
	pulumi.Input

	ToGetDomainGovernancesFilterOutput() GetDomainGovernancesFilterOutput
	ToGetDomainGovernancesFilterOutputWithContext(context.Context) GetDomainGovernancesFilterOutput
}

type GetDomainGovernancesFilterArgs struct {
	// A filter to return only resources that exactly match the name given.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDomainGovernancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesFilter)(nil)).Elem()
}

func (i GetDomainGovernancesFilterArgs) ToGetDomainGovernancesFilterOutput() GetDomainGovernancesFilterOutput {
	return i.ToGetDomainGovernancesFilterOutputWithContext(context.Background())
}

func (i GetDomainGovernancesFilterArgs) ToGetDomainGovernancesFilterOutputWithContext(ctx context.Context) GetDomainGovernancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGovernancesFilterOutput)
}

// GetDomainGovernancesFilterArrayInput is an input type that accepts GetDomainGovernancesFilterArray and GetDomainGovernancesFilterArrayOutput values.
// You can construct a concrete instance of `GetDomainGovernancesFilterArrayInput` via:
//
//	GetDomainGovernancesFilterArray{ GetDomainGovernancesFilterArgs{...} }
type GetDomainGovernancesFilterArrayInput interface {
	pulumi.Input

	ToGetDomainGovernancesFilterArrayOutput() GetDomainGovernancesFilterArrayOutput
	ToGetDomainGovernancesFilterArrayOutputWithContext(context.Context) GetDomainGovernancesFilterArrayOutput
}

type GetDomainGovernancesFilterArray []GetDomainGovernancesFilterInput

func (GetDomainGovernancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGovernancesFilter)(nil)).Elem()
}

func (i GetDomainGovernancesFilterArray) ToGetDomainGovernancesFilterArrayOutput() GetDomainGovernancesFilterArrayOutput {
	return i.ToGetDomainGovernancesFilterArrayOutputWithContext(context.Background())
}

func (i GetDomainGovernancesFilterArray) ToGetDomainGovernancesFilterArrayOutputWithContext(ctx context.Context) GetDomainGovernancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGovernancesFilterArrayOutput)
}

type GetDomainGovernancesFilterOutput struct{ *pulumi.OutputState }

func (GetDomainGovernancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGovernancesFilter)(nil)).Elem()
}

func (o GetDomainGovernancesFilterOutput) ToGetDomainGovernancesFilterOutput() GetDomainGovernancesFilterOutput {
	return o
}

func (o GetDomainGovernancesFilterOutput) ToGetDomainGovernancesFilterOutputWithContext(ctx context.Context) GetDomainGovernancesFilterOutput {
	return o
}

// A filter to return only resources that exactly match the name given.
func (o GetDomainGovernancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGovernancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDomainGovernancesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDomainGovernancesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDomainGovernancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainGovernancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDomainGovernancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDomainGovernancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGovernancesFilter)(nil)).Elem()
}

func (o GetDomainGovernancesFilterArrayOutput) ToGetDomainGovernancesFilterArrayOutput() GetDomainGovernancesFilterArrayOutput {
	return o
}

func (o GetDomainGovernancesFilterArrayOutput) ToGetDomainGovernancesFilterArrayOutputWithContext(ctx context.Context) GetDomainGovernancesFilterArrayOutput {
	return o
}

func (o GetDomainGovernancesFilterArrayOutput) Index(i pulumi.IntInput) GetDomainGovernancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainGovernancesFilter {
		return vs[0].([]GetDomainGovernancesFilter)[vs[1].(int)]
	}).(GetDomainGovernancesFilterOutput)
}

type GetDomainsDomainCollection struct {
	Items []GetDomainsDomainCollectionItem `pulumi:"items"`
}

// GetDomainsDomainCollectionInput is an input type that accepts GetDomainsDomainCollectionArgs and GetDomainsDomainCollectionOutput values.
// You can construct a concrete instance of `GetDomainsDomainCollectionInput` via:
//
//	GetDomainsDomainCollectionArgs{...}
type GetDomainsDomainCollectionInput interface {
	pulumi.Input

	ToGetDomainsDomainCollectionOutput() GetDomainsDomainCollectionOutput
	ToGetDomainsDomainCollectionOutputWithContext(context.Context) GetDomainsDomainCollectionOutput
}

type GetDomainsDomainCollectionArgs struct {
	Items GetDomainsDomainCollectionItemArrayInput `pulumi:"items"`
}

func (GetDomainsDomainCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainCollection)(nil)).Elem()
}

func (i GetDomainsDomainCollectionArgs) ToGetDomainsDomainCollectionOutput() GetDomainsDomainCollectionOutput {
	return i.ToGetDomainsDomainCollectionOutputWithContext(context.Background())
}

func (i GetDomainsDomainCollectionArgs) ToGetDomainsDomainCollectionOutputWithContext(ctx context.Context) GetDomainsDomainCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainCollectionOutput)
}

// GetDomainsDomainCollectionArrayInput is an input type that accepts GetDomainsDomainCollectionArray and GetDomainsDomainCollectionArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainCollectionArrayInput` via:
//
//	GetDomainsDomainCollectionArray{ GetDomainsDomainCollectionArgs{...} }
type GetDomainsDomainCollectionArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainCollectionArrayOutput() GetDomainsDomainCollectionArrayOutput
	ToGetDomainsDomainCollectionArrayOutputWithContext(context.Context) GetDomainsDomainCollectionArrayOutput
}

type GetDomainsDomainCollectionArray []GetDomainsDomainCollectionInput

func (GetDomainsDomainCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainCollection)(nil)).Elem()
}

func (i GetDomainsDomainCollectionArray) ToGetDomainsDomainCollectionArrayOutput() GetDomainsDomainCollectionArrayOutput {
	return i.ToGetDomainsDomainCollectionArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainCollectionArray) ToGetDomainsDomainCollectionArrayOutputWithContext(ctx context.Context) GetDomainsDomainCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainCollectionArrayOutput)
}

type GetDomainsDomainCollectionOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainCollection)(nil)).Elem()
}

func (o GetDomainsDomainCollectionOutput) ToGetDomainsDomainCollectionOutput() GetDomainsDomainCollectionOutput {
	return o
}

func (o GetDomainsDomainCollectionOutput) ToGetDomainsDomainCollectionOutputWithContext(ctx context.Context) GetDomainsDomainCollectionOutput {
	return o
}

func (o GetDomainsDomainCollectionOutput) Items() GetDomainsDomainCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDomainsDomainCollection) []GetDomainsDomainCollectionItem { return v.Items }).(GetDomainsDomainCollectionItemArrayOutput)
}

type GetDomainsDomainCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainCollection)(nil)).Elem()
}

func (o GetDomainsDomainCollectionArrayOutput) ToGetDomainsDomainCollectionArrayOutput() GetDomainsDomainCollectionArrayOutput {
	return o
}

func (o GetDomainsDomainCollectionArrayOutput) ToGetDomainsDomainCollectionArrayOutputWithContext(ctx context.Context) GetDomainsDomainCollectionArrayOutput {
	return o
}

func (o GetDomainsDomainCollectionArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainCollection {
		return vs[0].([]GetDomainsDomainCollection)[vs[1].(int)]
	}).(GetDomainsDomainCollectionOutput)
}

type GetDomainsDomainCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The domain name.
	DomainName string `pulumi:"domainName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the domain.
	Id                  string `pulumi:"id"`
	IsGovernanceEnabled bool   `pulumi:"isGovernanceEnabled"`
	// The OCID of the tenancy that has started the registration process for this domain.
	OwnerId string `pulumi:"ownerId"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// The status of the domain.
	Status            string `pulumi:"status"`
	SubscriptionEmail string `pulumi:"subscriptionEmail"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Date-time when this domain was created. An RFC 3339-formatted date and time string.
	TimeCreated string `pulumi:"timeCreated"`
	// Date-time when this domain was last updated. An RFC 3339-formatted date and time string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The code that the owner of the domain will need to add as a TXT record to their domain.
	TxtRecord string `pulumi:"txtRecord"`
}

// GetDomainsDomainCollectionItemInput is an input type that accepts GetDomainsDomainCollectionItemArgs and GetDomainsDomainCollectionItemOutput values.
// You can construct a concrete instance of `GetDomainsDomainCollectionItemInput` via:
//
//	GetDomainsDomainCollectionItemArgs{...}
type GetDomainsDomainCollectionItemInput interface {
	pulumi.Input

	ToGetDomainsDomainCollectionItemOutput() GetDomainsDomainCollectionItemOutput
	ToGetDomainsDomainCollectionItemOutputWithContext(context.Context) GetDomainsDomainCollectionItemOutput
}

type GetDomainsDomainCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The domain name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the domain.
	Id                  pulumi.StringInput `pulumi:"id"`
	IsGovernanceEnabled pulumi.BoolInput   `pulumi:"isGovernanceEnabled"`
	// The OCID of the tenancy that has started the registration process for this domain.
	OwnerId pulumi.StringInput `pulumi:"ownerId"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The status of the domain.
	Status            pulumi.StringInput `pulumi:"status"`
	SubscriptionEmail pulumi.StringInput `pulumi:"subscriptionEmail"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Date-time when this domain was created. An RFC 3339-formatted date and time string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Date-time when this domain was last updated. An RFC 3339-formatted date and time string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The code that the owner of the domain will need to add as a TXT record to their domain.
	TxtRecord pulumi.StringInput `pulumi:"txtRecord"`
}

func (GetDomainsDomainCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainCollectionItem)(nil)).Elem()
}

func (i GetDomainsDomainCollectionItemArgs) ToGetDomainsDomainCollectionItemOutput() GetDomainsDomainCollectionItemOutput {
	return i.ToGetDomainsDomainCollectionItemOutputWithContext(context.Background())
}

func (i GetDomainsDomainCollectionItemArgs) ToGetDomainsDomainCollectionItemOutputWithContext(ctx context.Context) GetDomainsDomainCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainCollectionItemOutput)
}

// GetDomainsDomainCollectionItemArrayInput is an input type that accepts GetDomainsDomainCollectionItemArray and GetDomainsDomainCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainCollectionItemArrayInput` via:
//
//	GetDomainsDomainCollectionItemArray{ GetDomainsDomainCollectionItemArgs{...} }
type GetDomainsDomainCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainCollectionItemArrayOutput() GetDomainsDomainCollectionItemArrayOutput
	ToGetDomainsDomainCollectionItemArrayOutputWithContext(context.Context) GetDomainsDomainCollectionItemArrayOutput
}

type GetDomainsDomainCollectionItemArray []GetDomainsDomainCollectionItemInput

func (GetDomainsDomainCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainCollectionItem)(nil)).Elem()
}

func (i GetDomainsDomainCollectionItemArray) ToGetDomainsDomainCollectionItemArrayOutput() GetDomainsDomainCollectionItemArrayOutput {
	return i.ToGetDomainsDomainCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainCollectionItemArray) ToGetDomainsDomainCollectionItemArrayOutputWithContext(ctx context.Context) GetDomainsDomainCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainCollectionItemArrayOutput)
}

type GetDomainsDomainCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainCollectionItem)(nil)).Elem()
}

func (o GetDomainsDomainCollectionItemOutput) ToGetDomainsDomainCollectionItemOutput() GetDomainsDomainCollectionItemOutput {
	return o
}

func (o GetDomainsDomainCollectionItemOutput) ToGetDomainsDomainCollectionItemOutputWithContext(ctx context.Context) GetDomainsDomainCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetDomainsDomainCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDomainsDomainCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The domain name.
func (o GetDomainsDomainCollectionItemOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.DomainName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDomainsDomainCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the domain.
func (o GetDomainsDomainCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDomainsDomainCollectionItemOutput) IsGovernanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) bool { return v.IsGovernanceEnabled }).(pulumi.BoolOutput)
}

// The OCID of the tenancy that has started the registration process for this domain.
func (o GetDomainsDomainCollectionItemOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.OwnerId }).(pulumi.StringOutput)
}

// The lifecycle state of the resource.
func (o GetDomainsDomainCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The status of the domain.
func (o GetDomainsDomainCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetDomainsDomainCollectionItemOutput) SubscriptionEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.SubscriptionEmail }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDomainsDomainCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Date-time when this domain was created. An RFC 3339-formatted date and time string.
func (o GetDomainsDomainCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date-time when this domain was last updated. An RFC 3339-formatted date and time string.
func (o GetDomainsDomainCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The code that the owner of the domain will need to add as a TXT record to their domain.
func (o GetDomainsDomainCollectionItemOutput) TxtRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainCollectionItem) string { return v.TxtRecord }).(pulumi.StringOutput)
}

type GetDomainsDomainCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainCollectionItem)(nil)).Elem()
}

func (o GetDomainsDomainCollectionItemArrayOutput) ToGetDomainsDomainCollectionItemArrayOutput() GetDomainsDomainCollectionItemArrayOutput {
	return o
}

func (o GetDomainsDomainCollectionItemArrayOutput) ToGetDomainsDomainCollectionItemArrayOutputWithContext(ctx context.Context) GetDomainsDomainCollectionItemArrayOutput {
	return o
}

func (o GetDomainsDomainCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainCollectionItem {
		return vs[0].([]GetDomainsDomainCollectionItem)[vs[1].(int)]
	}).(GetDomainsDomainCollectionItemOutput)
}

type GetDomainsFilter struct {
	// A filter to return only resources that exactly match the name given.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDomainsFilterInput is an input type that accepts GetDomainsFilterArgs and GetDomainsFilterOutput values.
// You can construct a concrete instance of `GetDomainsFilterInput` via:
//
//	GetDomainsFilterArgs{...}
type GetDomainsFilterInput interface {
	pulumi.Input

	ToGetDomainsFilterOutput() GetDomainsFilterOutput
	ToGetDomainsFilterOutputWithContext(context.Context) GetDomainsFilterOutput
}

type GetDomainsFilterArgs struct {
	// A filter to return only resources that exactly match the name given.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDomainsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsFilter)(nil)).Elem()
}

func (i GetDomainsFilterArgs) ToGetDomainsFilterOutput() GetDomainsFilterOutput {
	return i.ToGetDomainsFilterOutputWithContext(context.Background())
}

func (i GetDomainsFilterArgs) ToGetDomainsFilterOutputWithContext(ctx context.Context) GetDomainsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsFilterOutput)
}

// GetDomainsFilterArrayInput is an input type that accepts GetDomainsFilterArray and GetDomainsFilterArrayOutput values.
// You can construct a concrete instance of `GetDomainsFilterArrayInput` via:
//
//	GetDomainsFilterArray{ GetDomainsFilterArgs{...} }
type GetDomainsFilterArrayInput interface {
	pulumi.Input

	ToGetDomainsFilterArrayOutput() GetDomainsFilterArrayOutput
	ToGetDomainsFilterArrayOutputWithContext(context.Context) GetDomainsFilterArrayOutput
}

type GetDomainsFilterArray []GetDomainsFilterInput

func (GetDomainsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsFilter)(nil)).Elem()
}

func (i GetDomainsFilterArray) ToGetDomainsFilterArrayOutput() GetDomainsFilterArrayOutput {
	return i.ToGetDomainsFilterArrayOutputWithContext(context.Background())
}

func (i GetDomainsFilterArray) ToGetDomainsFilterArrayOutputWithContext(ctx context.Context) GetDomainsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsFilterArrayOutput)
}

type GetDomainsFilterOutput struct{ *pulumi.OutputState }

func (GetDomainsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsFilter)(nil)).Elem()
}

func (o GetDomainsFilterOutput) ToGetDomainsFilterOutput() GetDomainsFilterOutput {
	return o
}

func (o GetDomainsFilterOutput) ToGetDomainsFilterOutputWithContext(ctx context.Context) GetDomainsFilterOutput {
	return o
}

// A filter to return only resources that exactly match the name given.
func (o GetDomainsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDomainsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDomainsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDomainsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDomainsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsFilter)(nil)).Elem()
}

func (o GetDomainsFilterArrayOutput) ToGetDomainsFilterArrayOutput() GetDomainsFilterArrayOutput {
	return o
}

func (o GetDomainsFilterArrayOutput) ToGetDomainsFilterArrayOutputWithContext(ctx context.Context) GetDomainsFilterArrayOutput {
	return o
}

func (o GetDomainsFilterArrayOutput) Index(i pulumi.IntInput) GetDomainsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsFilter {
		return vs[0].([]GetDomainsFilter)[vs[1].(int)]
	}).(GetDomainsFilterOutput)
}

type GetLinksFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetLinksFilterInput is an input type that accepts GetLinksFilterArgs and GetLinksFilterOutput values.
// You can construct a concrete instance of `GetLinksFilterInput` via:
//
//	GetLinksFilterArgs{...}
type GetLinksFilterInput interface {
	pulumi.Input

	ToGetLinksFilterOutput() GetLinksFilterOutput
	ToGetLinksFilterOutputWithContext(context.Context) GetLinksFilterOutput
}

type GetLinksFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLinksFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinksFilter)(nil)).Elem()
}

func (i GetLinksFilterArgs) ToGetLinksFilterOutput() GetLinksFilterOutput {
	return i.ToGetLinksFilterOutputWithContext(context.Background())
}

func (i GetLinksFilterArgs) ToGetLinksFilterOutputWithContext(ctx context.Context) GetLinksFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinksFilterOutput)
}

// GetLinksFilterArrayInput is an input type that accepts GetLinksFilterArray and GetLinksFilterArrayOutput values.
// You can construct a concrete instance of `GetLinksFilterArrayInput` via:
//
//	GetLinksFilterArray{ GetLinksFilterArgs{...} }
type GetLinksFilterArrayInput interface {
	pulumi.Input

	ToGetLinksFilterArrayOutput() GetLinksFilterArrayOutput
	ToGetLinksFilterArrayOutputWithContext(context.Context) GetLinksFilterArrayOutput
}

type GetLinksFilterArray []GetLinksFilterInput

func (GetLinksFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinksFilter)(nil)).Elem()
}

func (i GetLinksFilterArray) ToGetLinksFilterArrayOutput() GetLinksFilterArrayOutput {
	return i.ToGetLinksFilterArrayOutputWithContext(context.Background())
}

func (i GetLinksFilterArray) ToGetLinksFilterArrayOutputWithContext(ctx context.Context) GetLinksFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinksFilterArrayOutput)
}

type GetLinksFilterOutput struct{ *pulumi.OutputState }

func (GetLinksFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinksFilter)(nil)).Elem()
}

func (o GetLinksFilterOutput) ToGetLinksFilterOutput() GetLinksFilterOutput {
	return o
}

func (o GetLinksFilterOutput) ToGetLinksFilterOutputWithContext(ctx context.Context) GetLinksFilterOutput {
	return o
}

func (o GetLinksFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLinksFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetLinksFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetLinksFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLinksFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLinksFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLinksFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinksFilter)(nil)).Elem()
}

func (o GetLinksFilterArrayOutput) ToGetLinksFilterArrayOutput() GetLinksFilterArrayOutput {
	return o
}

func (o GetLinksFilterArrayOutput) ToGetLinksFilterArrayOutputWithContext(ctx context.Context) GetLinksFilterArrayOutput {
	return o
}

func (o GetLinksFilterArrayOutput) Index(i pulumi.IntInput) GetLinksFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLinksFilter {
		return vs[0].([]GetLinksFilter)[vs[1].(int)]
	}).(GetLinksFilterOutput)
}

type GetLinksLinkCollection struct {
	Items []GetLinksLinkCollectionItem `pulumi:"items"`
}

// GetLinksLinkCollectionInput is an input type that accepts GetLinksLinkCollectionArgs and GetLinksLinkCollectionOutput values.
// You can construct a concrete instance of `GetLinksLinkCollectionInput` via:
//
//	GetLinksLinkCollectionArgs{...}
type GetLinksLinkCollectionInput interface {
	pulumi.Input

	ToGetLinksLinkCollectionOutput() GetLinksLinkCollectionOutput
	ToGetLinksLinkCollectionOutputWithContext(context.Context) GetLinksLinkCollectionOutput
}

type GetLinksLinkCollectionArgs struct {
	Items GetLinksLinkCollectionItemArrayInput `pulumi:"items"`
}

func (GetLinksLinkCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinksLinkCollection)(nil)).Elem()
}

func (i GetLinksLinkCollectionArgs) ToGetLinksLinkCollectionOutput() GetLinksLinkCollectionOutput {
	return i.ToGetLinksLinkCollectionOutputWithContext(context.Background())
}

func (i GetLinksLinkCollectionArgs) ToGetLinksLinkCollectionOutputWithContext(ctx context.Context) GetLinksLinkCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinksLinkCollectionOutput)
}

// GetLinksLinkCollectionArrayInput is an input type that accepts GetLinksLinkCollectionArray and GetLinksLinkCollectionArrayOutput values.
// You can construct a concrete instance of `GetLinksLinkCollectionArrayInput` via:
//
//	GetLinksLinkCollectionArray{ GetLinksLinkCollectionArgs{...} }
type GetLinksLinkCollectionArrayInput interface {
	pulumi.Input

	ToGetLinksLinkCollectionArrayOutput() GetLinksLinkCollectionArrayOutput
	ToGetLinksLinkCollectionArrayOutputWithContext(context.Context) GetLinksLinkCollectionArrayOutput
}

type GetLinksLinkCollectionArray []GetLinksLinkCollectionInput

func (GetLinksLinkCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinksLinkCollection)(nil)).Elem()
}

func (i GetLinksLinkCollectionArray) ToGetLinksLinkCollectionArrayOutput() GetLinksLinkCollectionArrayOutput {
	return i.ToGetLinksLinkCollectionArrayOutputWithContext(context.Background())
}

func (i GetLinksLinkCollectionArray) ToGetLinksLinkCollectionArrayOutputWithContext(ctx context.Context) GetLinksLinkCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinksLinkCollectionArrayOutput)
}

type GetLinksLinkCollectionOutput struct{ *pulumi.OutputState }

func (GetLinksLinkCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinksLinkCollection)(nil)).Elem()
}

func (o GetLinksLinkCollectionOutput) ToGetLinksLinkCollectionOutput() GetLinksLinkCollectionOutput {
	return o
}

func (o GetLinksLinkCollectionOutput) ToGetLinksLinkCollectionOutputWithContext(ctx context.Context) GetLinksLinkCollectionOutput {
	return o
}

func (o GetLinksLinkCollectionOutput) Items() GetLinksLinkCollectionItemArrayOutput {
	return o.ApplyT(func(v GetLinksLinkCollection) []GetLinksLinkCollectionItem { return v.Items }).(GetLinksLinkCollectionItemArrayOutput)
}

type GetLinksLinkCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetLinksLinkCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinksLinkCollection)(nil)).Elem()
}

func (o GetLinksLinkCollectionArrayOutput) ToGetLinksLinkCollectionArrayOutput() GetLinksLinkCollectionArrayOutput {
	return o
}

func (o GetLinksLinkCollectionArrayOutput) ToGetLinksLinkCollectionArrayOutputWithContext(ctx context.Context) GetLinksLinkCollectionArrayOutput {
	return o
}

func (o GetLinksLinkCollectionArrayOutput) Index(i pulumi.IntInput) GetLinksLinkCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLinksLinkCollection {
		return vs[0].([]GetLinksLinkCollection)[vs[1].(int)]
	}).(GetLinksLinkCollectionOutput)
}

type GetLinksLinkCollectionItem struct {
	// The ID of the child tenancy this link is associated with.
	ChildTenancyId string `pulumi:"childTenancyId"`
	// OCID of the link.
	Id string `pulumi:"id"`
	// The ID of the parent tenancy this link is associated with.
	ParentTenancyId string `pulumi:"parentTenancyId"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// Date-time when this link was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Date-time when this link was terminated.
	TimeTerminated string `pulumi:"timeTerminated"`
	// Date-time when this link was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetLinksLinkCollectionItemInput is an input type that accepts GetLinksLinkCollectionItemArgs and GetLinksLinkCollectionItemOutput values.
// You can construct a concrete instance of `GetLinksLinkCollectionItemInput` via:
//
//	GetLinksLinkCollectionItemArgs{...}
type GetLinksLinkCollectionItemInput interface {
	pulumi.Input

	ToGetLinksLinkCollectionItemOutput() GetLinksLinkCollectionItemOutput
	ToGetLinksLinkCollectionItemOutputWithContext(context.Context) GetLinksLinkCollectionItemOutput
}

type GetLinksLinkCollectionItemArgs struct {
	// The ID of the child tenancy this link is associated with.
	ChildTenancyId pulumi.StringInput `pulumi:"childTenancyId"`
	// OCID of the link.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the parent tenancy this link is associated with.
	ParentTenancyId pulumi.StringInput `pulumi:"parentTenancyId"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// Date-time when this link was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Date-time when this link was terminated.
	TimeTerminated pulumi.StringInput `pulumi:"timeTerminated"`
	// Date-time when this link was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetLinksLinkCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinksLinkCollectionItem)(nil)).Elem()
}

func (i GetLinksLinkCollectionItemArgs) ToGetLinksLinkCollectionItemOutput() GetLinksLinkCollectionItemOutput {
	return i.ToGetLinksLinkCollectionItemOutputWithContext(context.Background())
}

func (i GetLinksLinkCollectionItemArgs) ToGetLinksLinkCollectionItemOutputWithContext(ctx context.Context) GetLinksLinkCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinksLinkCollectionItemOutput)
}

// GetLinksLinkCollectionItemArrayInput is an input type that accepts GetLinksLinkCollectionItemArray and GetLinksLinkCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetLinksLinkCollectionItemArrayInput` via:
//
//	GetLinksLinkCollectionItemArray{ GetLinksLinkCollectionItemArgs{...} }
type GetLinksLinkCollectionItemArrayInput interface {
	pulumi.Input

	ToGetLinksLinkCollectionItemArrayOutput() GetLinksLinkCollectionItemArrayOutput
	ToGetLinksLinkCollectionItemArrayOutputWithContext(context.Context) GetLinksLinkCollectionItemArrayOutput
}

type GetLinksLinkCollectionItemArray []GetLinksLinkCollectionItemInput

func (GetLinksLinkCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinksLinkCollectionItem)(nil)).Elem()
}

func (i GetLinksLinkCollectionItemArray) ToGetLinksLinkCollectionItemArrayOutput() GetLinksLinkCollectionItemArrayOutput {
	return i.ToGetLinksLinkCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetLinksLinkCollectionItemArray) ToGetLinksLinkCollectionItemArrayOutputWithContext(ctx context.Context) GetLinksLinkCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinksLinkCollectionItemArrayOutput)
}

type GetLinksLinkCollectionItemOutput struct{ *pulumi.OutputState }

func (GetLinksLinkCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinksLinkCollectionItem)(nil)).Elem()
}

func (o GetLinksLinkCollectionItemOutput) ToGetLinksLinkCollectionItemOutput() GetLinksLinkCollectionItemOutput {
	return o
}

func (o GetLinksLinkCollectionItemOutput) ToGetLinksLinkCollectionItemOutputWithContext(ctx context.Context) GetLinksLinkCollectionItemOutput {
	return o
}

// The ID of the child tenancy this link is associated with.
func (o GetLinksLinkCollectionItemOutput) ChildTenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksLinkCollectionItem) string { return v.ChildTenancyId }).(pulumi.StringOutput)
}

// OCID of the link.
func (o GetLinksLinkCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksLinkCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the parent tenancy this link is associated with.
func (o GetLinksLinkCollectionItemOutput) ParentTenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksLinkCollectionItem) string { return v.ParentTenancyId }).(pulumi.StringOutput)
}

// The lifecycle state of the resource.
func (o GetLinksLinkCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksLinkCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Date-time when this link was created.
func (o GetLinksLinkCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksLinkCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date-time when this link was terminated.
func (o GetLinksLinkCollectionItemOutput) TimeTerminated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksLinkCollectionItem) string { return v.TimeTerminated }).(pulumi.StringOutput)
}

// Date-time when this link was last updated.
func (o GetLinksLinkCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinksLinkCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetLinksLinkCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetLinksLinkCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinksLinkCollectionItem)(nil)).Elem()
}

func (o GetLinksLinkCollectionItemArrayOutput) ToGetLinksLinkCollectionItemArrayOutput() GetLinksLinkCollectionItemArrayOutput {
	return o
}

func (o GetLinksLinkCollectionItemArrayOutput) ToGetLinksLinkCollectionItemArrayOutputWithContext(ctx context.Context) GetLinksLinkCollectionItemArrayOutput {
	return o
}

func (o GetLinksLinkCollectionItemArrayOutput) Index(i pulumi.IntInput) GetLinksLinkCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLinksLinkCollectionItem {
		return vs[0].([]GetLinksLinkCollectionItem)[vs[1].(int)]
	}).(GetLinksLinkCollectionItemOutput)
}

type GetOrganizationTenanciesFilter struct {
	// Name of the tenancy.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetOrganizationTenanciesFilterInput is an input type that accepts GetOrganizationTenanciesFilterArgs and GetOrganizationTenanciesFilterOutput values.
// You can construct a concrete instance of `GetOrganizationTenanciesFilterInput` via:
//
//	GetOrganizationTenanciesFilterArgs{...}
type GetOrganizationTenanciesFilterInput interface {
	pulumi.Input

	ToGetOrganizationTenanciesFilterOutput() GetOrganizationTenanciesFilterOutput
	ToGetOrganizationTenanciesFilterOutputWithContext(context.Context) GetOrganizationTenanciesFilterOutput
}

type GetOrganizationTenanciesFilterArgs struct {
	// Name of the tenancy.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOrganizationTenanciesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenanciesFilter)(nil)).Elem()
}

func (i GetOrganizationTenanciesFilterArgs) ToGetOrganizationTenanciesFilterOutput() GetOrganizationTenanciesFilterOutput {
	return i.ToGetOrganizationTenanciesFilterOutputWithContext(context.Background())
}

func (i GetOrganizationTenanciesFilterArgs) ToGetOrganizationTenanciesFilterOutputWithContext(ctx context.Context) GetOrganizationTenanciesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTenanciesFilterOutput)
}

// GetOrganizationTenanciesFilterArrayInput is an input type that accepts GetOrganizationTenanciesFilterArray and GetOrganizationTenanciesFilterArrayOutput values.
// You can construct a concrete instance of `GetOrganizationTenanciesFilterArrayInput` via:
//
//	GetOrganizationTenanciesFilterArray{ GetOrganizationTenanciesFilterArgs{...} }
type GetOrganizationTenanciesFilterArrayInput interface {
	pulumi.Input

	ToGetOrganizationTenanciesFilterArrayOutput() GetOrganizationTenanciesFilterArrayOutput
	ToGetOrganizationTenanciesFilterArrayOutputWithContext(context.Context) GetOrganizationTenanciesFilterArrayOutput
}

type GetOrganizationTenanciesFilterArray []GetOrganizationTenanciesFilterInput

func (GetOrganizationTenanciesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTenanciesFilter)(nil)).Elem()
}

func (i GetOrganizationTenanciesFilterArray) ToGetOrganizationTenanciesFilterArrayOutput() GetOrganizationTenanciesFilterArrayOutput {
	return i.ToGetOrganizationTenanciesFilterArrayOutputWithContext(context.Background())
}

func (i GetOrganizationTenanciesFilterArray) ToGetOrganizationTenanciesFilterArrayOutputWithContext(ctx context.Context) GetOrganizationTenanciesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTenanciesFilterArrayOutput)
}

type GetOrganizationTenanciesFilterOutput struct{ *pulumi.OutputState }

func (GetOrganizationTenanciesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenanciesFilter)(nil)).Elem()
}

func (o GetOrganizationTenanciesFilterOutput) ToGetOrganizationTenanciesFilterOutput() GetOrganizationTenanciesFilterOutput {
	return o
}

func (o GetOrganizationTenanciesFilterOutput) ToGetOrganizationTenanciesFilterOutputWithContext(ctx context.Context) GetOrganizationTenanciesFilterOutput {
	return o
}

// Name of the tenancy.
func (o GetOrganizationTenanciesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOrganizationTenanciesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetOrganizationTenanciesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOrganizationTenanciesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationTenanciesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTenanciesFilter)(nil)).Elem()
}

func (o GetOrganizationTenanciesFilterArrayOutput) ToGetOrganizationTenanciesFilterArrayOutput() GetOrganizationTenanciesFilterArrayOutput {
	return o
}

func (o GetOrganizationTenanciesFilterArrayOutput) ToGetOrganizationTenanciesFilterArrayOutputWithContext(ctx context.Context) GetOrganizationTenanciesFilterArrayOutput {
	return o
}

func (o GetOrganizationTenanciesFilterArrayOutput) Index(i pulumi.IntInput) GetOrganizationTenanciesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationTenanciesFilter {
		return vs[0].([]GetOrganizationTenanciesFilter)[vs[1].(int)]
	}).(GetOrganizationTenanciesFilterOutput)
}

type GetOrganizationTenanciesOrganizationTenancyCollection struct {
	Items []GetOrganizationTenanciesOrganizationTenancyCollectionItem `pulumi:"items"`
}

// GetOrganizationTenanciesOrganizationTenancyCollectionInput is an input type that accepts GetOrganizationTenanciesOrganizationTenancyCollectionArgs and GetOrganizationTenanciesOrganizationTenancyCollectionOutput values.
// You can construct a concrete instance of `GetOrganizationTenanciesOrganizationTenancyCollectionInput` via:
//
//	GetOrganizationTenanciesOrganizationTenancyCollectionArgs{...}
type GetOrganizationTenanciesOrganizationTenancyCollectionInput interface {
	pulumi.Input

	ToGetOrganizationTenanciesOrganizationTenancyCollectionOutput() GetOrganizationTenanciesOrganizationTenancyCollectionOutput
	ToGetOrganizationTenanciesOrganizationTenancyCollectionOutputWithContext(context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionOutput
}

type GetOrganizationTenanciesOrganizationTenancyCollectionArgs struct {
	Items GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayInput `pulumi:"items"`
}

func (GetOrganizationTenanciesOrganizationTenancyCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollection)(nil)).Elem()
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionArgs) ToGetOrganizationTenanciesOrganizationTenancyCollectionOutput() GetOrganizationTenanciesOrganizationTenancyCollectionOutput {
	return i.ToGetOrganizationTenanciesOrganizationTenancyCollectionOutputWithContext(context.Background())
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionArgs) ToGetOrganizationTenanciesOrganizationTenancyCollectionOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTenanciesOrganizationTenancyCollectionOutput)
}

// GetOrganizationTenanciesOrganizationTenancyCollectionArrayInput is an input type that accepts GetOrganizationTenanciesOrganizationTenancyCollectionArray and GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput values.
// You can construct a concrete instance of `GetOrganizationTenanciesOrganizationTenancyCollectionArrayInput` via:
//
//	GetOrganizationTenanciesOrganizationTenancyCollectionArray{ GetOrganizationTenanciesOrganizationTenancyCollectionArgs{...} }
type GetOrganizationTenanciesOrganizationTenancyCollectionArrayInput interface {
	pulumi.Input

	ToGetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput() GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput
	ToGetOrganizationTenanciesOrganizationTenancyCollectionArrayOutputWithContext(context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput
}

type GetOrganizationTenanciesOrganizationTenancyCollectionArray []GetOrganizationTenanciesOrganizationTenancyCollectionInput

func (GetOrganizationTenanciesOrganizationTenancyCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTenanciesOrganizationTenancyCollection)(nil)).Elem()
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionArray) ToGetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput() GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput {
	return i.ToGetOrganizationTenanciesOrganizationTenancyCollectionArrayOutputWithContext(context.Background())
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionArray) ToGetOrganizationTenanciesOrganizationTenancyCollectionArrayOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput)
}

type GetOrganizationTenanciesOrganizationTenancyCollectionOutput struct{ *pulumi.OutputState }

func (GetOrganizationTenanciesOrganizationTenancyCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollection)(nil)).Elem()
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionOutput() GetOrganizationTenanciesOrganizationTenancyCollectionOutput {
	return o
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionOutput {
	return o
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionOutput) Items() GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollection) []GetOrganizationTenanciesOrganizationTenancyCollectionItem {
		return v.Items
	}).(GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput)
}

type GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTenanciesOrganizationTenancyCollection)(nil)).Elem()
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput() GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput {
	return o
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionArrayOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput {
	return o
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput) Index(i pulumi.IntInput) GetOrganizationTenanciesOrganizationTenancyCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationTenanciesOrganizationTenancyCollection {
		return vs[0].([]GetOrganizationTenanciesOrganizationTenancyCollection)[vs[1].(int)]
	}).(GetOrganizationTenanciesOrganizationTenancyCollectionOutput)
}

type GetOrganizationTenanciesOrganizationTenancyCollectionItem struct {
	// The governance status of the tenancy.
	GovernanceStatus string `pulumi:"governanceStatus"`
	// Parameter to indicate the tenancy is approved for transfer to another organization.
	IsApprovedForTransfer bool `pulumi:"isApprovedForTransfer"`
	// Name of the tenancy.
	Name string `pulumi:"name"`
	// Role of the organization tenancy.
	Role string `pulumi:"role"`
	// Lifecycle state of the organization tenancy.
	State string `pulumi:"state"`
	// OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
	// Date and time when the tenancy joined the organization.
	TimeJoined string `pulumi:"timeJoined"`
	// Date and time when the tenancy left the organization.
	TimeLeft string `pulumi:"timeLeft"`
}

// GetOrganizationTenanciesOrganizationTenancyCollectionItemInput is an input type that accepts GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs and GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput values.
// You can construct a concrete instance of `GetOrganizationTenanciesOrganizationTenancyCollectionItemInput` via:
//
//	GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs{...}
type GetOrganizationTenanciesOrganizationTenancyCollectionItemInput interface {
	pulumi.Input

	ToGetOrganizationTenanciesOrganizationTenancyCollectionItemOutput() GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput
	ToGetOrganizationTenanciesOrganizationTenancyCollectionItemOutputWithContext(context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput
}

type GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs struct {
	// The governance status of the tenancy.
	GovernanceStatus pulumi.StringInput `pulumi:"governanceStatus"`
	// Parameter to indicate the tenancy is approved for transfer to another organization.
	IsApprovedForTransfer pulumi.BoolInput `pulumi:"isApprovedForTransfer"`
	// Name of the tenancy.
	Name pulumi.StringInput `pulumi:"name"`
	// Role of the organization tenancy.
	Role pulumi.StringInput `pulumi:"role"`
	// Lifecycle state of the organization tenancy.
	State pulumi.StringInput `pulumi:"state"`
	// OCID of the tenancy.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
	// Date and time when the tenancy joined the organization.
	TimeJoined pulumi.StringInput `pulumi:"timeJoined"`
	// Date and time when the tenancy left the organization.
	TimeLeft pulumi.StringInput `pulumi:"timeLeft"`
}

func (GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollectionItem)(nil)).Elem()
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemOutput() GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput {
	return i.ToGetOrganizationTenanciesOrganizationTenancyCollectionItemOutputWithContext(context.Background())
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput)
}

// GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayInput is an input type that accepts GetOrganizationTenanciesOrganizationTenancyCollectionItemArray and GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayInput` via:
//
//	GetOrganizationTenanciesOrganizationTenancyCollectionItemArray{ GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs{...} }
type GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayInput interface {
	pulumi.Input

	ToGetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput() GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput
	ToGetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutputWithContext(context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput
}

type GetOrganizationTenanciesOrganizationTenancyCollectionItemArray []GetOrganizationTenanciesOrganizationTenancyCollectionItemInput

func (GetOrganizationTenanciesOrganizationTenancyCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTenanciesOrganizationTenancyCollectionItem)(nil)).Elem()
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionItemArray) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput() GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput {
	return i.ToGetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetOrganizationTenanciesOrganizationTenancyCollectionItemArray) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput)
}

type GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput struct{ *pulumi.OutputState }

func (GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollectionItem)(nil)).Elem()
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemOutput() GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput {
	return o
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput {
	return o
}

// The governance status of the tenancy.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) GovernanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) string { return v.GovernanceStatus }).(pulumi.StringOutput)
}

// Parameter to indicate the tenancy is approved for transfer to another organization.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) IsApprovedForTransfer() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) bool { return v.IsApprovedForTransfer }).(pulumi.BoolOutput)
}

// Name of the tenancy.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// Role of the organization tenancy.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) string { return v.Role }).(pulumi.StringOutput)
}

// Lifecycle state of the organization tenancy.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// OCID of the tenancy.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) string { return v.TenancyId }).(pulumi.StringOutput)
}

// Date and time when the tenancy joined the organization.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) TimeJoined() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) string { return v.TimeJoined }).(pulumi.StringOutput)
}

// Date and time when the tenancy left the organization.
func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput) TimeLeft() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationTenanciesOrganizationTenancyCollectionItem) string { return v.TimeLeft }).(pulumi.StringOutput)
}

type GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationTenanciesOrganizationTenancyCollectionItem)(nil)).Elem()
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput() GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput {
	return o
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput) ToGetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutputWithContext(ctx context.Context) GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput {
	return o
}

func (o GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput) Index(i pulumi.IntInput) GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationTenanciesOrganizationTenancyCollectionItem {
		return vs[0].([]GetOrganizationTenanciesOrganizationTenancyCollectionItem)[vs[1].(int)]
	}).(GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput)
}

type GetOrganizationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetOrganizationsFilterInput is an input type that accepts GetOrganizationsFilterArgs and GetOrganizationsFilterOutput values.
// You can construct a concrete instance of `GetOrganizationsFilterInput` via:
//
//	GetOrganizationsFilterArgs{...}
type GetOrganizationsFilterInput interface {
	pulumi.Input

	ToGetOrganizationsFilterOutput() GetOrganizationsFilterOutput
	ToGetOrganizationsFilterOutputWithContext(context.Context) GetOrganizationsFilterOutput
}

type GetOrganizationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOrganizationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsFilter)(nil)).Elem()
}

func (i GetOrganizationsFilterArgs) ToGetOrganizationsFilterOutput() GetOrganizationsFilterOutput {
	return i.ToGetOrganizationsFilterOutputWithContext(context.Background())
}

func (i GetOrganizationsFilterArgs) ToGetOrganizationsFilterOutputWithContext(ctx context.Context) GetOrganizationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsFilterOutput)
}

// GetOrganizationsFilterArrayInput is an input type that accepts GetOrganizationsFilterArray and GetOrganizationsFilterArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsFilterArrayInput` via:
//
//	GetOrganizationsFilterArray{ GetOrganizationsFilterArgs{...} }
type GetOrganizationsFilterArrayInput interface {
	pulumi.Input

	ToGetOrganizationsFilterArrayOutput() GetOrganizationsFilterArrayOutput
	ToGetOrganizationsFilterArrayOutputWithContext(context.Context) GetOrganizationsFilterArrayOutput
}

type GetOrganizationsFilterArray []GetOrganizationsFilterInput

func (GetOrganizationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsFilter)(nil)).Elem()
}

func (i GetOrganizationsFilterArray) ToGetOrganizationsFilterArrayOutput() GetOrganizationsFilterArrayOutput {
	return i.ToGetOrganizationsFilterArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsFilterArray) ToGetOrganizationsFilterArrayOutputWithContext(ctx context.Context) GetOrganizationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsFilterArrayOutput)
}

type GetOrganizationsFilterOutput struct{ *pulumi.OutputState }

func (GetOrganizationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsFilter)(nil)).Elem()
}

func (o GetOrganizationsFilterOutput) ToGetOrganizationsFilterOutput() GetOrganizationsFilterOutput {
	return o
}

func (o GetOrganizationsFilterOutput) ToGetOrganizationsFilterOutputWithContext(ctx context.Context) GetOrganizationsFilterOutput {
	return o
}

func (o GetOrganizationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOrganizationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOrganizationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetOrganizationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOrganizationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsFilter)(nil)).Elem()
}

func (o GetOrganizationsFilterArrayOutput) ToGetOrganizationsFilterArrayOutput() GetOrganizationsFilterArrayOutput {
	return o
}

func (o GetOrganizationsFilterArrayOutput) ToGetOrganizationsFilterArrayOutputWithContext(ctx context.Context) GetOrganizationsFilterArrayOutput {
	return o
}

func (o GetOrganizationsFilterArrayOutput) Index(i pulumi.IntInput) GetOrganizationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsFilter {
		return vs[0].([]GetOrganizationsFilter)[vs[1].(int)]
	}).(GetOrganizationsFilterOutput)
}

type GetOrganizationsOrganizationCollection struct {
	Items []GetOrganizationsOrganizationCollectionItem `pulumi:"items"`
}

// GetOrganizationsOrganizationCollectionInput is an input type that accepts GetOrganizationsOrganizationCollectionArgs and GetOrganizationsOrganizationCollectionOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationCollectionInput` via:
//
//	GetOrganizationsOrganizationCollectionArgs{...}
type GetOrganizationsOrganizationCollectionInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationCollectionOutput() GetOrganizationsOrganizationCollectionOutput
	ToGetOrganizationsOrganizationCollectionOutputWithContext(context.Context) GetOrganizationsOrganizationCollectionOutput
}

type GetOrganizationsOrganizationCollectionArgs struct {
	Items GetOrganizationsOrganizationCollectionItemArrayInput `pulumi:"items"`
}

func (GetOrganizationsOrganizationCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganizationCollection)(nil)).Elem()
}

func (i GetOrganizationsOrganizationCollectionArgs) ToGetOrganizationsOrganizationCollectionOutput() GetOrganizationsOrganizationCollectionOutput {
	return i.ToGetOrganizationsOrganizationCollectionOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationCollectionArgs) ToGetOrganizationsOrganizationCollectionOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationCollectionOutput)
}

// GetOrganizationsOrganizationCollectionArrayInput is an input type that accepts GetOrganizationsOrganizationCollectionArray and GetOrganizationsOrganizationCollectionArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationCollectionArrayInput` via:
//
//	GetOrganizationsOrganizationCollectionArray{ GetOrganizationsOrganizationCollectionArgs{...} }
type GetOrganizationsOrganizationCollectionArrayInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationCollectionArrayOutput() GetOrganizationsOrganizationCollectionArrayOutput
	ToGetOrganizationsOrganizationCollectionArrayOutputWithContext(context.Context) GetOrganizationsOrganizationCollectionArrayOutput
}

type GetOrganizationsOrganizationCollectionArray []GetOrganizationsOrganizationCollectionInput

func (GetOrganizationsOrganizationCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganizationCollection)(nil)).Elem()
}

func (i GetOrganizationsOrganizationCollectionArray) ToGetOrganizationsOrganizationCollectionArrayOutput() GetOrganizationsOrganizationCollectionArrayOutput {
	return i.ToGetOrganizationsOrganizationCollectionArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationCollectionArray) ToGetOrganizationsOrganizationCollectionArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationCollectionArrayOutput)
}

type GetOrganizationsOrganizationCollectionOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganizationCollection)(nil)).Elem()
}

func (o GetOrganizationsOrganizationCollectionOutput) ToGetOrganizationsOrganizationCollectionOutput() GetOrganizationsOrganizationCollectionOutput {
	return o
}

func (o GetOrganizationsOrganizationCollectionOutput) ToGetOrganizationsOrganizationCollectionOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionOutput {
	return o
}

func (o GetOrganizationsOrganizationCollectionOutput) Items() GetOrganizationsOrganizationCollectionItemArrayOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollection) []GetOrganizationsOrganizationCollectionItem {
		return v.Items
	}).(GetOrganizationsOrganizationCollectionItemArrayOutput)
}

type GetOrganizationsOrganizationCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganizationCollection)(nil)).Elem()
}

func (o GetOrganizationsOrganizationCollectionArrayOutput) ToGetOrganizationsOrganizationCollectionArrayOutput() GetOrganizationsOrganizationCollectionArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationCollectionArrayOutput) ToGetOrganizationsOrganizationCollectionArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationCollectionArrayOutput) Index(i pulumi.IntInput) GetOrganizationsOrganizationCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsOrganizationCollection {
		return vs[0].([]GetOrganizationsOrganizationCollection)[vs[1].(int)]
	}).(GetOrganizationsOrganizationCollectionOutput)
}

type GetOrganizationsOrganizationCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// OCID of the default Universal Credits Model subscription. Any tenancy joining the organization will automatically get assigned this subscription, if a subscription is not explictly assigned.
	DefaultUcmSubscriptionId string `pulumi:"defaultUcmSubscriptionId"`
	// A display name for the organization. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// OCID of the organization.
	Id string `pulumi:"id"`
	// The name of the tenancy that is the organization parent.
	ParentName string `pulumi:"parentName"`
	// Lifecycle state of the organization.
	State string `pulumi:"state"`
	// Date and time when the organization was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Date and time when the organization was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetOrganizationsOrganizationCollectionItemInput is an input type that accepts GetOrganizationsOrganizationCollectionItemArgs and GetOrganizationsOrganizationCollectionItemOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationCollectionItemInput` via:
//
//	GetOrganizationsOrganizationCollectionItemArgs{...}
type GetOrganizationsOrganizationCollectionItemInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationCollectionItemOutput() GetOrganizationsOrganizationCollectionItemOutput
	ToGetOrganizationsOrganizationCollectionItemOutputWithContext(context.Context) GetOrganizationsOrganizationCollectionItemOutput
}

type GetOrganizationsOrganizationCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// OCID of the default Universal Credits Model subscription. Any tenancy joining the organization will automatically get assigned this subscription, if a subscription is not explictly assigned.
	DefaultUcmSubscriptionId pulumi.StringInput `pulumi:"defaultUcmSubscriptionId"`
	// A display name for the organization. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// OCID of the organization.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the tenancy that is the organization parent.
	ParentName pulumi.StringInput `pulumi:"parentName"`
	// Lifecycle state of the organization.
	State pulumi.StringInput `pulumi:"state"`
	// Date and time when the organization was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Date and time when the organization was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetOrganizationsOrganizationCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganizationCollectionItem)(nil)).Elem()
}

func (i GetOrganizationsOrganizationCollectionItemArgs) ToGetOrganizationsOrganizationCollectionItemOutput() GetOrganizationsOrganizationCollectionItemOutput {
	return i.ToGetOrganizationsOrganizationCollectionItemOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationCollectionItemArgs) ToGetOrganizationsOrganizationCollectionItemOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationCollectionItemOutput)
}

// GetOrganizationsOrganizationCollectionItemArrayInput is an input type that accepts GetOrganizationsOrganizationCollectionItemArray and GetOrganizationsOrganizationCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationCollectionItemArrayInput` via:
//
//	GetOrganizationsOrganizationCollectionItemArray{ GetOrganizationsOrganizationCollectionItemArgs{...} }
type GetOrganizationsOrganizationCollectionItemArrayInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationCollectionItemArrayOutput() GetOrganizationsOrganizationCollectionItemArrayOutput
	ToGetOrganizationsOrganizationCollectionItemArrayOutputWithContext(context.Context) GetOrganizationsOrganizationCollectionItemArrayOutput
}

type GetOrganizationsOrganizationCollectionItemArray []GetOrganizationsOrganizationCollectionItemInput

func (GetOrganizationsOrganizationCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganizationCollectionItem)(nil)).Elem()
}

func (i GetOrganizationsOrganizationCollectionItemArray) ToGetOrganizationsOrganizationCollectionItemArrayOutput() GetOrganizationsOrganizationCollectionItemArrayOutput {
	return i.ToGetOrganizationsOrganizationCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationCollectionItemArray) ToGetOrganizationsOrganizationCollectionItemArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationCollectionItemArrayOutput)
}

type GetOrganizationsOrganizationCollectionItemOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganizationCollectionItem)(nil)).Elem()
}

func (o GetOrganizationsOrganizationCollectionItemOutput) ToGetOrganizationsOrganizationCollectionItemOutput() GetOrganizationsOrganizationCollectionItemOutput {
	return o
}

func (o GetOrganizationsOrganizationCollectionItemOutput) ToGetOrganizationsOrganizationCollectionItemOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetOrganizationsOrganizationCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// OCID of the default Universal Credits Model subscription. Any tenancy joining the organization will automatically get assigned this subscription, if a subscription is not explictly assigned.
func (o GetOrganizationsOrganizationCollectionItemOutput) DefaultUcmSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.DefaultUcmSubscriptionId }).(pulumi.StringOutput)
}

// A display name for the organization. Avoid entering confidential information.
func (o GetOrganizationsOrganizationCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID of the organization.
func (o GetOrganizationsOrganizationCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the tenancy that is the organization parent.
func (o GetOrganizationsOrganizationCollectionItemOutput) ParentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.ParentName }).(pulumi.StringOutput)
}

// Lifecycle state of the organization.
func (o GetOrganizationsOrganizationCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Date and time when the organization was created.
func (o GetOrganizationsOrganizationCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time when the organization was last updated.
func (o GetOrganizationsOrganizationCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganizationCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetOrganizationsOrganizationCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganizationCollectionItem)(nil)).Elem()
}

func (o GetOrganizationsOrganizationCollectionItemArrayOutput) ToGetOrganizationsOrganizationCollectionItemArrayOutput() GetOrganizationsOrganizationCollectionItemArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationCollectionItemArrayOutput) ToGetOrganizationsOrganizationCollectionItemArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationCollectionItemArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationCollectionItemArrayOutput) Index(i pulumi.IntInput) GetOrganizationsOrganizationCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsOrganizationCollectionItem {
		return vs[0].([]GetOrganizationsOrganizationCollectionItem)[vs[1].(int)]
	}).(GetOrganizationsOrganizationCollectionItemOutput)
}

type GetRecipientInvitationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetRecipientInvitationsFilterInput is an input type that accepts GetRecipientInvitationsFilterArgs and GetRecipientInvitationsFilterOutput values.
// You can construct a concrete instance of `GetRecipientInvitationsFilterInput` via:
//
//	GetRecipientInvitationsFilterArgs{...}
type GetRecipientInvitationsFilterInput interface {
	pulumi.Input

	ToGetRecipientInvitationsFilterOutput() GetRecipientInvitationsFilterOutput
	ToGetRecipientInvitationsFilterOutputWithContext(context.Context) GetRecipientInvitationsFilterOutput
}

type GetRecipientInvitationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRecipientInvitationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientInvitationsFilter)(nil)).Elem()
}

func (i GetRecipientInvitationsFilterArgs) ToGetRecipientInvitationsFilterOutput() GetRecipientInvitationsFilterOutput {
	return i.ToGetRecipientInvitationsFilterOutputWithContext(context.Background())
}

func (i GetRecipientInvitationsFilterArgs) ToGetRecipientInvitationsFilterOutputWithContext(ctx context.Context) GetRecipientInvitationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecipientInvitationsFilterOutput)
}

// GetRecipientInvitationsFilterArrayInput is an input type that accepts GetRecipientInvitationsFilterArray and GetRecipientInvitationsFilterArrayOutput values.
// You can construct a concrete instance of `GetRecipientInvitationsFilterArrayInput` via:
//
//	GetRecipientInvitationsFilterArray{ GetRecipientInvitationsFilterArgs{...} }
type GetRecipientInvitationsFilterArrayInput interface {
	pulumi.Input

	ToGetRecipientInvitationsFilterArrayOutput() GetRecipientInvitationsFilterArrayOutput
	ToGetRecipientInvitationsFilterArrayOutputWithContext(context.Context) GetRecipientInvitationsFilterArrayOutput
}

type GetRecipientInvitationsFilterArray []GetRecipientInvitationsFilterInput

func (GetRecipientInvitationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecipientInvitationsFilter)(nil)).Elem()
}

func (i GetRecipientInvitationsFilterArray) ToGetRecipientInvitationsFilterArrayOutput() GetRecipientInvitationsFilterArrayOutput {
	return i.ToGetRecipientInvitationsFilterArrayOutputWithContext(context.Background())
}

func (i GetRecipientInvitationsFilterArray) ToGetRecipientInvitationsFilterArrayOutputWithContext(ctx context.Context) GetRecipientInvitationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecipientInvitationsFilterArrayOutput)
}

type GetRecipientInvitationsFilterOutput struct{ *pulumi.OutputState }

func (GetRecipientInvitationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientInvitationsFilter)(nil)).Elem()
}

func (o GetRecipientInvitationsFilterOutput) ToGetRecipientInvitationsFilterOutput() GetRecipientInvitationsFilterOutput {
	return o
}

func (o GetRecipientInvitationsFilterOutput) ToGetRecipientInvitationsFilterOutputWithContext(ctx context.Context) GetRecipientInvitationsFilterOutput {
	return o
}

func (o GetRecipientInvitationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRecipientInvitationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRecipientInvitationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetRecipientInvitationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRecipientInvitationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRecipientInvitationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRecipientInvitationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecipientInvitationsFilter)(nil)).Elem()
}

func (o GetRecipientInvitationsFilterArrayOutput) ToGetRecipientInvitationsFilterArrayOutput() GetRecipientInvitationsFilterArrayOutput {
	return o
}

func (o GetRecipientInvitationsFilterArrayOutput) ToGetRecipientInvitationsFilterArrayOutputWithContext(ctx context.Context) GetRecipientInvitationsFilterArrayOutput {
	return o
}

func (o GetRecipientInvitationsFilterArrayOutput) Index(i pulumi.IntInput) GetRecipientInvitationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecipientInvitationsFilter {
		return vs[0].([]GetRecipientInvitationsFilter)[vs[1].(int)]
	}).(GetRecipientInvitationsFilterOutput)
}

type GetRecipientInvitationsRecipientInvitationCollection struct {
	Items []GetRecipientInvitationsRecipientInvitationCollectionItem `pulumi:"items"`
}

// GetRecipientInvitationsRecipientInvitationCollectionInput is an input type that accepts GetRecipientInvitationsRecipientInvitationCollectionArgs and GetRecipientInvitationsRecipientInvitationCollectionOutput values.
// You can construct a concrete instance of `GetRecipientInvitationsRecipientInvitationCollectionInput` via:
//
//	GetRecipientInvitationsRecipientInvitationCollectionArgs{...}
type GetRecipientInvitationsRecipientInvitationCollectionInput interface {
	pulumi.Input

	ToGetRecipientInvitationsRecipientInvitationCollectionOutput() GetRecipientInvitationsRecipientInvitationCollectionOutput
	ToGetRecipientInvitationsRecipientInvitationCollectionOutputWithContext(context.Context) GetRecipientInvitationsRecipientInvitationCollectionOutput
}

type GetRecipientInvitationsRecipientInvitationCollectionArgs struct {
	Items GetRecipientInvitationsRecipientInvitationCollectionItemArrayInput `pulumi:"items"`
}

func (GetRecipientInvitationsRecipientInvitationCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollection)(nil)).Elem()
}

func (i GetRecipientInvitationsRecipientInvitationCollectionArgs) ToGetRecipientInvitationsRecipientInvitationCollectionOutput() GetRecipientInvitationsRecipientInvitationCollectionOutput {
	return i.ToGetRecipientInvitationsRecipientInvitationCollectionOutputWithContext(context.Background())
}

func (i GetRecipientInvitationsRecipientInvitationCollectionArgs) ToGetRecipientInvitationsRecipientInvitationCollectionOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecipientInvitationsRecipientInvitationCollectionOutput)
}

// GetRecipientInvitationsRecipientInvitationCollectionArrayInput is an input type that accepts GetRecipientInvitationsRecipientInvitationCollectionArray and GetRecipientInvitationsRecipientInvitationCollectionArrayOutput values.
// You can construct a concrete instance of `GetRecipientInvitationsRecipientInvitationCollectionArrayInput` via:
//
//	GetRecipientInvitationsRecipientInvitationCollectionArray{ GetRecipientInvitationsRecipientInvitationCollectionArgs{...} }
type GetRecipientInvitationsRecipientInvitationCollectionArrayInput interface {
	pulumi.Input

	ToGetRecipientInvitationsRecipientInvitationCollectionArrayOutput() GetRecipientInvitationsRecipientInvitationCollectionArrayOutput
	ToGetRecipientInvitationsRecipientInvitationCollectionArrayOutputWithContext(context.Context) GetRecipientInvitationsRecipientInvitationCollectionArrayOutput
}

type GetRecipientInvitationsRecipientInvitationCollectionArray []GetRecipientInvitationsRecipientInvitationCollectionInput

func (GetRecipientInvitationsRecipientInvitationCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecipientInvitationsRecipientInvitationCollection)(nil)).Elem()
}

func (i GetRecipientInvitationsRecipientInvitationCollectionArray) ToGetRecipientInvitationsRecipientInvitationCollectionArrayOutput() GetRecipientInvitationsRecipientInvitationCollectionArrayOutput {
	return i.ToGetRecipientInvitationsRecipientInvitationCollectionArrayOutputWithContext(context.Background())
}

func (i GetRecipientInvitationsRecipientInvitationCollectionArray) ToGetRecipientInvitationsRecipientInvitationCollectionArrayOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecipientInvitationsRecipientInvitationCollectionArrayOutput)
}

type GetRecipientInvitationsRecipientInvitationCollectionOutput struct{ *pulumi.OutputState }

func (GetRecipientInvitationsRecipientInvitationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollection)(nil)).Elem()
}

func (o GetRecipientInvitationsRecipientInvitationCollectionOutput) ToGetRecipientInvitationsRecipientInvitationCollectionOutput() GetRecipientInvitationsRecipientInvitationCollectionOutput {
	return o
}

func (o GetRecipientInvitationsRecipientInvitationCollectionOutput) ToGetRecipientInvitationsRecipientInvitationCollectionOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionOutput {
	return o
}

func (o GetRecipientInvitationsRecipientInvitationCollectionOutput) Items() GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollection) []GetRecipientInvitationsRecipientInvitationCollectionItem {
		return v.Items
	}).(GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput)
}

type GetRecipientInvitationsRecipientInvitationCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetRecipientInvitationsRecipientInvitationCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecipientInvitationsRecipientInvitationCollection)(nil)).Elem()
}

func (o GetRecipientInvitationsRecipientInvitationCollectionArrayOutput) ToGetRecipientInvitationsRecipientInvitationCollectionArrayOutput() GetRecipientInvitationsRecipientInvitationCollectionArrayOutput {
	return o
}

func (o GetRecipientInvitationsRecipientInvitationCollectionArrayOutput) ToGetRecipientInvitationsRecipientInvitationCollectionArrayOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionArrayOutput {
	return o
}

func (o GetRecipientInvitationsRecipientInvitationCollectionArrayOutput) Index(i pulumi.IntInput) GetRecipientInvitationsRecipientInvitationCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecipientInvitationsRecipientInvitationCollection {
		return vs[0].([]GetRecipientInvitationsRecipientInvitationCollection)[vs[1].(int)]
	}).(GetRecipientInvitationsRecipientInvitationCollectionOutput)
}

type GetRecipientInvitationsRecipientInvitationCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-created name to describe the invitation. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID of the recipient invitation.
	Id string `pulumi:"id"`
	// Email address of the recipient.
	RecipientEmailAddress string `pulumi:"recipientEmailAddress"`
	// OCID of the corresponding sender invitation.
	SenderInvitationId string `pulumi:"senderInvitationId"`
	// The tenancy that sent the invitation.
	SenderTenancyId string `pulumi:"senderTenancyId"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// The status of the recipient invitation.
	Status string `pulumi:"status"`
	// The list of subjects the invitation contains.
	Subjects []string `pulumi:"subjects"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Date and time when the recipient invitation was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Date and time when the recipient invitation was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetRecipientInvitationsRecipientInvitationCollectionItemInput is an input type that accepts GetRecipientInvitationsRecipientInvitationCollectionItemArgs and GetRecipientInvitationsRecipientInvitationCollectionItemOutput values.
// You can construct a concrete instance of `GetRecipientInvitationsRecipientInvitationCollectionItemInput` via:
//
//	GetRecipientInvitationsRecipientInvitationCollectionItemArgs{...}
type GetRecipientInvitationsRecipientInvitationCollectionItemInput interface {
	pulumi.Input

	ToGetRecipientInvitationsRecipientInvitationCollectionItemOutput() GetRecipientInvitationsRecipientInvitationCollectionItemOutput
	ToGetRecipientInvitationsRecipientInvitationCollectionItemOutputWithContext(context.Context) GetRecipientInvitationsRecipientInvitationCollectionItemOutput
}

type GetRecipientInvitationsRecipientInvitationCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A user-created name to describe the invitation. Avoid entering confidential information.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// OCID of the recipient invitation.
	Id pulumi.StringInput `pulumi:"id"`
	// Email address of the recipient.
	RecipientEmailAddress pulumi.StringInput `pulumi:"recipientEmailAddress"`
	// OCID of the corresponding sender invitation.
	SenderInvitationId pulumi.StringInput `pulumi:"senderInvitationId"`
	// The tenancy that sent the invitation.
	SenderTenancyId pulumi.StringInput `pulumi:"senderTenancyId"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The status of the recipient invitation.
	Status pulumi.StringInput `pulumi:"status"`
	// The list of subjects the invitation contains.
	Subjects pulumi.StringArrayInput `pulumi:"subjects"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Date and time when the recipient invitation was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Date and time when the recipient invitation was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetRecipientInvitationsRecipientInvitationCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollectionItem)(nil)).Elem()
}

func (i GetRecipientInvitationsRecipientInvitationCollectionItemArgs) ToGetRecipientInvitationsRecipientInvitationCollectionItemOutput() GetRecipientInvitationsRecipientInvitationCollectionItemOutput {
	return i.ToGetRecipientInvitationsRecipientInvitationCollectionItemOutputWithContext(context.Background())
}

func (i GetRecipientInvitationsRecipientInvitationCollectionItemArgs) ToGetRecipientInvitationsRecipientInvitationCollectionItemOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecipientInvitationsRecipientInvitationCollectionItemOutput)
}

// GetRecipientInvitationsRecipientInvitationCollectionItemArrayInput is an input type that accepts GetRecipientInvitationsRecipientInvitationCollectionItemArray and GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetRecipientInvitationsRecipientInvitationCollectionItemArrayInput` via:
//
//	GetRecipientInvitationsRecipientInvitationCollectionItemArray{ GetRecipientInvitationsRecipientInvitationCollectionItemArgs{...} }
type GetRecipientInvitationsRecipientInvitationCollectionItemArrayInput interface {
	pulumi.Input

	ToGetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput() GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput
	ToGetRecipientInvitationsRecipientInvitationCollectionItemArrayOutputWithContext(context.Context) GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput
}

type GetRecipientInvitationsRecipientInvitationCollectionItemArray []GetRecipientInvitationsRecipientInvitationCollectionItemInput

func (GetRecipientInvitationsRecipientInvitationCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecipientInvitationsRecipientInvitationCollectionItem)(nil)).Elem()
}

func (i GetRecipientInvitationsRecipientInvitationCollectionItemArray) ToGetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput() GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput {
	return i.ToGetRecipientInvitationsRecipientInvitationCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetRecipientInvitationsRecipientInvitationCollectionItemArray) ToGetRecipientInvitationsRecipientInvitationCollectionItemArrayOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput)
}

type GetRecipientInvitationsRecipientInvitationCollectionItemOutput struct{ *pulumi.OutputState }

func (GetRecipientInvitationsRecipientInvitationCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollectionItem)(nil)).Elem()
}

func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) ToGetRecipientInvitationsRecipientInvitationCollectionItemOutput() GetRecipientInvitationsRecipientInvitationCollectionItemOutput {
	return o
}

func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) ToGetRecipientInvitationsRecipientInvitationCollectionItemOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// A user-created name to describe the invitation. Avoid entering confidential information.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// OCID of the recipient invitation.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Email address of the recipient.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) RecipientEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string {
		return v.RecipientEmailAddress
	}).(pulumi.StringOutput)
}

// OCID of the corresponding sender invitation.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) SenderInvitationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.SenderInvitationId }).(pulumi.StringOutput)
}

// The tenancy that sent the invitation.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) SenderTenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.SenderTenancyId }).(pulumi.StringOutput)
}

// The lifecycle state of the resource.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The status of the recipient invitation.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// The list of subjects the invitation contains.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) Subjects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) []string { return v.Subjects }).(pulumi.StringArrayOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// Date and time when the recipient invitation was created.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time when the recipient invitation was last updated.
func (o GetRecipientInvitationsRecipientInvitationCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientInvitationsRecipientInvitationCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecipientInvitationsRecipientInvitationCollectionItem)(nil)).Elem()
}

func (o GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput) ToGetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput() GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput {
	return o
}

func (o GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput) ToGetRecipientInvitationsRecipientInvitationCollectionItemArrayOutputWithContext(ctx context.Context) GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput {
	return o
}

func (o GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput) Index(i pulumi.IntInput) GetRecipientInvitationsRecipientInvitationCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecipientInvitationsRecipientInvitationCollectionItem {
		return vs[0].([]GetRecipientInvitationsRecipientInvitationCollectionItem)[vs[1].(int)]
	}).(GetRecipientInvitationsRecipientInvitationCollectionItemOutput)
}

type GetSenderInvitationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSenderInvitationsFilterInput is an input type that accepts GetSenderInvitationsFilterArgs and GetSenderInvitationsFilterOutput values.
// You can construct a concrete instance of `GetSenderInvitationsFilterInput` via:
//
//	GetSenderInvitationsFilterArgs{...}
type GetSenderInvitationsFilterInput interface {
	pulumi.Input

	ToGetSenderInvitationsFilterOutput() GetSenderInvitationsFilterOutput
	ToGetSenderInvitationsFilterOutputWithContext(context.Context) GetSenderInvitationsFilterOutput
}

type GetSenderInvitationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSenderInvitationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSenderInvitationsFilter)(nil)).Elem()
}

func (i GetSenderInvitationsFilterArgs) ToGetSenderInvitationsFilterOutput() GetSenderInvitationsFilterOutput {
	return i.ToGetSenderInvitationsFilterOutputWithContext(context.Background())
}

func (i GetSenderInvitationsFilterArgs) ToGetSenderInvitationsFilterOutputWithContext(ctx context.Context) GetSenderInvitationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSenderInvitationsFilterOutput)
}

// GetSenderInvitationsFilterArrayInput is an input type that accepts GetSenderInvitationsFilterArray and GetSenderInvitationsFilterArrayOutput values.
// You can construct a concrete instance of `GetSenderInvitationsFilterArrayInput` via:
//
//	GetSenderInvitationsFilterArray{ GetSenderInvitationsFilterArgs{...} }
type GetSenderInvitationsFilterArrayInput interface {
	pulumi.Input

	ToGetSenderInvitationsFilterArrayOutput() GetSenderInvitationsFilterArrayOutput
	ToGetSenderInvitationsFilterArrayOutputWithContext(context.Context) GetSenderInvitationsFilterArrayOutput
}

type GetSenderInvitationsFilterArray []GetSenderInvitationsFilterInput

func (GetSenderInvitationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSenderInvitationsFilter)(nil)).Elem()
}

func (i GetSenderInvitationsFilterArray) ToGetSenderInvitationsFilterArrayOutput() GetSenderInvitationsFilterArrayOutput {
	return i.ToGetSenderInvitationsFilterArrayOutputWithContext(context.Background())
}

func (i GetSenderInvitationsFilterArray) ToGetSenderInvitationsFilterArrayOutputWithContext(ctx context.Context) GetSenderInvitationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSenderInvitationsFilterArrayOutput)
}

type GetSenderInvitationsFilterOutput struct{ *pulumi.OutputState }

func (GetSenderInvitationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSenderInvitationsFilter)(nil)).Elem()
}

func (o GetSenderInvitationsFilterOutput) ToGetSenderInvitationsFilterOutput() GetSenderInvitationsFilterOutput {
	return o
}

func (o GetSenderInvitationsFilterOutput) ToGetSenderInvitationsFilterOutputWithContext(ctx context.Context) GetSenderInvitationsFilterOutput {
	return o
}

func (o GetSenderInvitationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSenderInvitationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSenderInvitationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSenderInvitationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSenderInvitationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSenderInvitationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSenderInvitationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSenderInvitationsFilter)(nil)).Elem()
}

func (o GetSenderInvitationsFilterArrayOutput) ToGetSenderInvitationsFilterArrayOutput() GetSenderInvitationsFilterArrayOutput {
	return o
}

func (o GetSenderInvitationsFilterArrayOutput) ToGetSenderInvitationsFilterArrayOutputWithContext(ctx context.Context) GetSenderInvitationsFilterArrayOutput {
	return o
}

func (o GetSenderInvitationsFilterArrayOutput) Index(i pulumi.IntInput) GetSenderInvitationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSenderInvitationsFilter {
		return vs[0].([]GetSenderInvitationsFilter)[vs[1].(int)]
	}).(GetSenderInvitationsFilterOutput)
}

type GetSenderInvitationsSenderInvitationCollection struct {
	Items []GetSenderInvitationsSenderInvitationCollectionItem `pulumi:"items"`
}

// GetSenderInvitationsSenderInvitationCollectionInput is an input type that accepts GetSenderInvitationsSenderInvitationCollectionArgs and GetSenderInvitationsSenderInvitationCollectionOutput values.
// You can construct a concrete instance of `GetSenderInvitationsSenderInvitationCollectionInput` via:
//
//	GetSenderInvitationsSenderInvitationCollectionArgs{...}
type GetSenderInvitationsSenderInvitationCollectionInput interface {
	pulumi.Input

	ToGetSenderInvitationsSenderInvitationCollectionOutput() GetSenderInvitationsSenderInvitationCollectionOutput
	ToGetSenderInvitationsSenderInvitationCollectionOutputWithContext(context.Context) GetSenderInvitationsSenderInvitationCollectionOutput
}

type GetSenderInvitationsSenderInvitationCollectionArgs struct {
	Items GetSenderInvitationsSenderInvitationCollectionItemArrayInput `pulumi:"items"`
}

func (GetSenderInvitationsSenderInvitationCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollection)(nil)).Elem()
}

func (i GetSenderInvitationsSenderInvitationCollectionArgs) ToGetSenderInvitationsSenderInvitationCollectionOutput() GetSenderInvitationsSenderInvitationCollectionOutput {
	return i.ToGetSenderInvitationsSenderInvitationCollectionOutputWithContext(context.Background())
}

func (i GetSenderInvitationsSenderInvitationCollectionArgs) ToGetSenderInvitationsSenderInvitationCollectionOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSenderInvitationsSenderInvitationCollectionOutput)
}

// GetSenderInvitationsSenderInvitationCollectionArrayInput is an input type that accepts GetSenderInvitationsSenderInvitationCollectionArray and GetSenderInvitationsSenderInvitationCollectionArrayOutput values.
// You can construct a concrete instance of `GetSenderInvitationsSenderInvitationCollectionArrayInput` via:
//
//	GetSenderInvitationsSenderInvitationCollectionArray{ GetSenderInvitationsSenderInvitationCollectionArgs{...} }
type GetSenderInvitationsSenderInvitationCollectionArrayInput interface {
	pulumi.Input

	ToGetSenderInvitationsSenderInvitationCollectionArrayOutput() GetSenderInvitationsSenderInvitationCollectionArrayOutput
	ToGetSenderInvitationsSenderInvitationCollectionArrayOutputWithContext(context.Context) GetSenderInvitationsSenderInvitationCollectionArrayOutput
}

type GetSenderInvitationsSenderInvitationCollectionArray []GetSenderInvitationsSenderInvitationCollectionInput

func (GetSenderInvitationsSenderInvitationCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSenderInvitationsSenderInvitationCollection)(nil)).Elem()
}

func (i GetSenderInvitationsSenderInvitationCollectionArray) ToGetSenderInvitationsSenderInvitationCollectionArrayOutput() GetSenderInvitationsSenderInvitationCollectionArrayOutput {
	return i.ToGetSenderInvitationsSenderInvitationCollectionArrayOutputWithContext(context.Background())
}

func (i GetSenderInvitationsSenderInvitationCollectionArray) ToGetSenderInvitationsSenderInvitationCollectionArrayOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSenderInvitationsSenderInvitationCollectionArrayOutput)
}

type GetSenderInvitationsSenderInvitationCollectionOutput struct{ *pulumi.OutputState }

func (GetSenderInvitationsSenderInvitationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollection)(nil)).Elem()
}

func (o GetSenderInvitationsSenderInvitationCollectionOutput) ToGetSenderInvitationsSenderInvitationCollectionOutput() GetSenderInvitationsSenderInvitationCollectionOutput {
	return o
}

func (o GetSenderInvitationsSenderInvitationCollectionOutput) ToGetSenderInvitationsSenderInvitationCollectionOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionOutput {
	return o
}

func (o GetSenderInvitationsSenderInvitationCollectionOutput) Items() GetSenderInvitationsSenderInvitationCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollection) []GetSenderInvitationsSenderInvitationCollectionItem {
		return v.Items
	}).(GetSenderInvitationsSenderInvitationCollectionItemArrayOutput)
}

type GetSenderInvitationsSenderInvitationCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSenderInvitationsSenderInvitationCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSenderInvitationsSenderInvitationCollection)(nil)).Elem()
}

func (o GetSenderInvitationsSenderInvitationCollectionArrayOutput) ToGetSenderInvitationsSenderInvitationCollectionArrayOutput() GetSenderInvitationsSenderInvitationCollectionArrayOutput {
	return o
}

func (o GetSenderInvitationsSenderInvitationCollectionArrayOutput) ToGetSenderInvitationsSenderInvitationCollectionArrayOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionArrayOutput {
	return o
}

func (o GetSenderInvitationsSenderInvitationCollectionArrayOutput) Index(i pulumi.IntInput) GetSenderInvitationsSenderInvitationCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSenderInvitationsSenderInvitationCollection {
		return vs[0].([]GetSenderInvitationsSenderInvitationCollection)[vs[1].(int)]
	}).(GetSenderInvitationsSenderInvitationCollectionOutput)
}

type GetSenderInvitationsSenderInvitationCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID of the sender invitation.
	Id string `pulumi:"id"`
	// Email address of the recipient.
	RecipientEmailAddress string `pulumi:"recipientEmailAddress"`
	// OCID of the corresponding recipient invitation.
	RecipientInvitationId string `pulumi:"recipientInvitationId"`
	// The tenancy that the invitation is addressed to.
	RecipientTenancyId string `pulumi:"recipientTenancyId"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// The status of the sender invitation.
	Status string `pulumi:"status"`
	// The list of subjects the invitation contains.
	Subjects []string `pulumi:"subjects"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Date and time when the sender invitation was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Date and time when the sender invitation was last updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetSenderInvitationsSenderInvitationCollectionItemInput is an input type that accepts GetSenderInvitationsSenderInvitationCollectionItemArgs and GetSenderInvitationsSenderInvitationCollectionItemOutput values.
// You can construct a concrete instance of `GetSenderInvitationsSenderInvitationCollectionItemInput` via:
//
//	GetSenderInvitationsSenderInvitationCollectionItemArgs{...}
type GetSenderInvitationsSenderInvitationCollectionItemInput interface {
	pulumi.Input

	ToGetSenderInvitationsSenderInvitationCollectionItemOutput() GetSenderInvitationsSenderInvitationCollectionItemOutput
	ToGetSenderInvitationsSenderInvitationCollectionItemOutputWithContext(context.Context) GetSenderInvitationsSenderInvitationCollectionItemOutput
}

type GetSenderInvitationsSenderInvitationCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// OCID of the sender invitation.
	Id pulumi.StringInput `pulumi:"id"`
	// Email address of the recipient.
	RecipientEmailAddress pulumi.StringInput `pulumi:"recipientEmailAddress"`
	// OCID of the corresponding recipient invitation.
	RecipientInvitationId pulumi.StringInput `pulumi:"recipientInvitationId"`
	// The tenancy that the invitation is addressed to.
	RecipientTenancyId pulumi.StringInput `pulumi:"recipientTenancyId"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The status of the sender invitation.
	Status pulumi.StringInput `pulumi:"status"`
	// The list of subjects the invitation contains.
	Subjects pulumi.StringArrayInput `pulumi:"subjects"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// Date and time when the sender invitation was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Date and time when the sender invitation was last updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetSenderInvitationsSenderInvitationCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollectionItem)(nil)).Elem()
}

func (i GetSenderInvitationsSenderInvitationCollectionItemArgs) ToGetSenderInvitationsSenderInvitationCollectionItemOutput() GetSenderInvitationsSenderInvitationCollectionItemOutput {
	return i.ToGetSenderInvitationsSenderInvitationCollectionItemOutputWithContext(context.Background())
}

func (i GetSenderInvitationsSenderInvitationCollectionItemArgs) ToGetSenderInvitationsSenderInvitationCollectionItemOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSenderInvitationsSenderInvitationCollectionItemOutput)
}

// GetSenderInvitationsSenderInvitationCollectionItemArrayInput is an input type that accepts GetSenderInvitationsSenderInvitationCollectionItemArray and GetSenderInvitationsSenderInvitationCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSenderInvitationsSenderInvitationCollectionItemArrayInput` via:
//
//	GetSenderInvitationsSenderInvitationCollectionItemArray{ GetSenderInvitationsSenderInvitationCollectionItemArgs{...} }
type GetSenderInvitationsSenderInvitationCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSenderInvitationsSenderInvitationCollectionItemArrayOutput() GetSenderInvitationsSenderInvitationCollectionItemArrayOutput
	ToGetSenderInvitationsSenderInvitationCollectionItemArrayOutputWithContext(context.Context) GetSenderInvitationsSenderInvitationCollectionItemArrayOutput
}

type GetSenderInvitationsSenderInvitationCollectionItemArray []GetSenderInvitationsSenderInvitationCollectionItemInput

func (GetSenderInvitationsSenderInvitationCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSenderInvitationsSenderInvitationCollectionItem)(nil)).Elem()
}

func (i GetSenderInvitationsSenderInvitationCollectionItemArray) ToGetSenderInvitationsSenderInvitationCollectionItemArrayOutput() GetSenderInvitationsSenderInvitationCollectionItemArrayOutput {
	return i.ToGetSenderInvitationsSenderInvitationCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSenderInvitationsSenderInvitationCollectionItemArray) ToGetSenderInvitationsSenderInvitationCollectionItemArrayOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSenderInvitationsSenderInvitationCollectionItemArrayOutput)
}

type GetSenderInvitationsSenderInvitationCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSenderInvitationsSenderInvitationCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollectionItem)(nil)).Elem()
}

func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) ToGetSenderInvitationsSenderInvitationCollectionItemOutput() GetSenderInvitationsSenderInvitationCollectionItemOutput {
	return o
}

func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) ToGetSenderInvitationsSenderInvitationCollectionItemOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// OCID of the sender invitation.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Email address of the recipient.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) RecipientEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.RecipientEmailAddress }).(pulumi.StringOutput)
}

// OCID of the corresponding recipient invitation.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) RecipientInvitationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.RecipientInvitationId }).(pulumi.StringOutput)
}

// The tenancy that the invitation is addressed to.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) RecipientTenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.RecipientTenancyId }).(pulumi.StringOutput)
}

// The lifecycle state of the resource.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The status of the sender invitation.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// The list of subjects the invitation contains.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) Subjects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) []string { return v.Subjects }).(pulumi.StringArrayOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Date and time when the sender invitation was created.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time when the sender invitation was last updated.
func (o GetSenderInvitationsSenderInvitationCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSenderInvitationsSenderInvitationCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetSenderInvitationsSenderInvitationCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSenderInvitationsSenderInvitationCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSenderInvitationsSenderInvitationCollectionItem)(nil)).Elem()
}

func (o GetSenderInvitationsSenderInvitationCollectionItemArrayOutput) ToGetSenderInvitationsSenderInvitationCollectionItemArrayOutput() GetSenderInvitationsSenderInvitationCollectionItemArrayOutput {
	return o
}

func (o GetSenderInvitationsSenderInvitationCollectionItemArrayOutput) ToGetSenderInvitationsSenderInvitationCollectionItemArrayOutputWithContext(ctx context.Context) GetSenderInvitationsSenderInvitationCollectionItemArrayOutput {
	return o
}

func (o GetSenderInvitationsSenderInvitationCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSenderInvitationsSenderInvitationCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSenderInvitationsSenderInvitationCollectionItem {
		return vs[0].([]GetSenderInvitationsSenderInvitationCollectionItem)[vs[1].(int)]
	}).(GetSenderInvitationsSenderInvitationCollectionItemOutput)
}

type GetSubscriptionAvailableRegionsAvailableRegionCollection struct {
	// Array containing available region items.
	Items []GetSubscriptionAvailableRegionsAvailableRegionCollectionItem `pulumi:"items"`
}

// GetSubscriptionAvailableRegionsAvailableRegionCollectionInput is an input type that accepts GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs and GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput values.
// You can construct a concrete instance of `GetSubscriptionAvailableRegionsAvailableRegionCollectionInput` via:
//
//	GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs{...}
type GetSubscriptionAvailableRegionsAvailableRegionCollectionInput interface {
	pulumi.Input

	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput
	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionOutputWithContext(context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs struct {
	// Array containing available region items.
	Items GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayInput `pulumi:"items"`
}

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollection)(nil)).Elem()
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput {
	return i.ToGetSubscriptionAvailableRegionsAvailableRegionCollectionOutputWithContext(context.Background())
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput)
}

// GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayInput is an input type that accepts GetSubscriptionAvailableRegionsAvailableRegionCollectionArray and GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayInput` via:
//
//	GetSubscriptionAvailableRegionsAvailableRegionCollectionArray{ GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs{...} }
type GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput
	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutputWithContext(context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionArray []GetSubscriptionAvailableRegionsAvailableRegionCollectionInput

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionAvailableRegionsAvailableRegionCollection)(nil)).Elem()
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionArray) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput {
	return i.ToGetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionArray) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput)
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollection)(nil)).Elem()
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput {
	return o
}

// Array containing available region items.
func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput) Items() GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSubscriptionAvailableRegionsAvailableRegionCollection) []GetSubscriptionAvailableRegionsAvailableRegionCollectionItem {
		return v.Items
	}).(GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput)
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionAvailableRegionsAvailableRegionCollection)(nil)).Elem()
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionAvailableRegionsAvailableRegionCollection {
		return vs[0].([]GetSubscriptionAvailableRegionsAvailableRegionCollection)[vs[1].(int)]
	}).(GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput)
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionItem struct {
	// Region availability for the subscription.
	RegionName string `pulumi:"regionName"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
}

// GetSubscriptionAvailableRegionsAvailableRegionCollectionItemInput is an input type that accepts GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs and GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput values.
// You can construct a concrete instance of `GetSubscriptionAvailableRegionsAvailableRegionCollectionItemInput` via:
//
//	GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs{...}
type GetSubscriptionAvailableRegionsAvailableRegionCollectionItemInput interface {
	pulumi.Input

	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput
	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutputWithContext(context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs struct {
	// Region availability for the subscription.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
}

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput {
	return i.ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutputWithContext(context.Background())
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput)
}

// GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayInput is an input type that accepts GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArray and GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayInput` via:
//
//	GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArray{ GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs{...} }
type GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput
	ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutputWithContext(context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArray []GetSubscriptionAvailableRegionsAvailableRegionCollectionItemInput

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionAvailableRegionsAvailableRegionCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArray) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput {
	return i.ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArray) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput)
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput {
	return o
}

// Region availability for the subscription.
func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionAvailableRegionsAvailableRegionCollectionItem) string { return v.RegionName }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionAvailableRegionsAvailableRegionCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

type GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionAvailableRegionsAvailableRegionCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput() GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput) ToGetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionAvailableRegionsAvailableRegionCollectionItem {
		return vs[0].([]GetSubscriptionAvailableRegionsAvailableRegionCollectionItem)[vs[1].(int)]
	}).(GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput)
}

type GetSubscriptionAvailableRegionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSubscriptionAvailableRegionsFilterInput is an input type that accepts GetSubscriptionAvailableRegionsFilterArgs and GetSubscriptionAvailableRegionsFilterOutput values.
// You can construct a concrete instance of `GetSubscriptionAvailableRegionsFilterInput` via:
//
//	GetSubscriptionAvailableRegionsFilterArgs{...}
type GetSubscriptionAvailableRegionsFilterInput interface {
	pulumi.Input

	ToGetSubscriptionAvailableRegionsFilterOutput() GetSubscriptionAvailableRegionsFilterOutput
	ToGetSubscriptionAvailableRegionsFilterOutputWithContext(context.Context) GetSubscriptionAvailableRegionsFilterOutput
}

type GetSubscriptionAvailableRegionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubscriptionAvailableRegionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionAvailableRegionsFilter)(nil)).Elem()
}

func (i GetSubscriptionAvailableRegionsFilterArgs) ToGetSubscriptionAvailableRegionsFilterOutput() GetSubscriptionAvailableRegionsFilterOutput {
	return i.ToGetSubscriptionAvailableRegionsFilterOutputWithContext(context.Background())
}

func (i GetSubscriptionAvailableRegionsFilterArgs) ToGetSubscriptionAvailableRegionsFilterOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionAvailableRegionsFilterOutput)
}

// GetSubscriptionAvailableRegionsFilterArrayInput is an input type that accepts GetSubscriptionAvailableRegionsFilterArray and GetSubscriptionAvailableRegionsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionAvailableRegionsFilterArrayInput` via:
//
//	GetSubscriptionAvailableRegionsFilterArray{ GetSubscriptionAvailableRegionsFilterArgs{...} }
type GetSubscriptionAvailableRegionsFilterArrayInput interface {
	pulumi.Input

	ToGetSubscriptionAvailableRegionsFilterArrayOutput() GetSubscriptionAvailableRegionsFilterArrayOutput
	ToGetSubscriptionAvailableRegionsFilterArrayOutputWithContext(context.Context) GetSubscriptionAvailableRegionsFilterArrayOutput
}

type GetSubscriptionAvailableRegionsFilterArray []GetSubscriptionAvailableRegionsFilterInput

func (GetSubscriptionAvailableRegionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionAvailableRegionsFilter)(nil)).Elem()
}

func (i GetSubscriptionAvailableRegionsFilterArray) ToGetSubscriptionAvailableRegionsFilterArrayOutput() GetSubscriptionAvailableRegionsFilterArrayOutput {
	return i.ToGetSubscriptionAvailableRegionsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionAvailableRegionsFilterArray) ToGetSubscriptionAvailableRegionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionAvailableRegionsFilterArrayOutput)
}

type GetSubscriptionAvailableRegionsFilterOutput struct{ *pulumi.OutputState }

func (GetSubscriptionAvailableRegionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionAvailableRegionsFilter)(nil)).Elem()
}

func (o GetSubscriptionAvailableRegionsFilterOutput) ToGetSubscriptionAvailableRegionsFilterOutput() GetSubscriptionAvailableRegionsFilterOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsFilterOutput) ToGetSubscriptionAvailableRegionsFilterOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsFilterOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionAvailableRegionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubscriptionAvailableRegionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionAvailableRegionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSubscriptionAvailableRegionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionAvailableRegionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubscriptionAvailableRegionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionAvailableRegionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionAvailableRegionsFilter)(nil)).Elem()
}

func (o GetSubscriptionAvailableRegionsFilterArrayOutput) ToGetSubscriptionAvailableRegionsFilterArrayOutput() GetSubscriptionAvailableRegionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsFilterArrayOutput) ToGetSubscriptionAvailableRegionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionAvailableRegionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionAvailableRegionsFilterArrayOutput) Index(i pulumi.IntInput) GetSubscriptionAvailableRegionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionAvailableRegionsFilter {
		return vs[0].([]GetSubscriptionAvailableRegionsFilter)[vs[1].(int)]
	}).(GetSubscriptionAvailableRegionsFilterOutput)
}

type GetSubscriptionLineItemsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSubscriptionLineItemsFilterInput is an input type that accepts GetSubscriptionLineItemsFilterArgs and GetSubscriptionLineItemsFilterOutput values.
// You can construct a concrete instance of `GetSubscriptionLineItemsFilterInput` via:
//
//	GetSubscriptionLineItemsFilterArgs{...}
type GetSubscriptionLineItemsFilterInput interface {
	pulumi.Input

	ToGetSubscriptionLineItemsFilterOutput() GetSubscriptionLineItemsFilterOutput
	ToGetSubscriptionLineItemsFilterOutputWithContext(context.Context) GetSubscriptionLineItemsFilterOutput
}

type GetSubscriptionLineItemsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubscriptionLineItemsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionLineItemsFilter)(nil)).Elem()
}

func (i GetSubscriptionLineItemsFilterArgs) ToGetSubscriptionLineItemsFilterOutput() GetSubscriptionLineItemsFilterOutput {
	return i.ToGetSubscriptionLineItemsFilterOutputWithContext(context.Background())
}

func (i GetSubscriptionLineItemsFilterArgs) ToGetSubscriptionLineItemsFilterOutputWithContext(ctx context.Context) GetSubscriptionLineItemsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionLineItemsFilterOutput)
}

// GetSubscriptionLineItemsFilterArrayInput is an input type that accepts GetSubscriptionLineItemsFilterArray and GetSubscriptionLineItemsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionLineItemsFilterArrayInput` via:
//
//	GetSubscriptionLineItemsFilterArray{ GetSubscriptionLineItemsFilterArgs{...} }
type GetSubscriptionLineItemsFilterArrayInput interface {
	pulumi.Input

	ToGetSubscriptionLineItemsFilterArrayOutput() GetSubscriptionLineItemsFilterArrayOutput
	ToGetSubscriptionLineItemsFilterArrayOutputWithContext(context.Context) GetSubscriptionLineItemsFilterArrayOutput
}

type GetSubscriptionLineItemsFilterArray []GetSubscriptionLineItemsFilterInput

func (GetSubscriptionLineItemsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionLineItemsFilter)(nil)).Elem()
}

func (i GetSubscriptionLineItemsFilterArray) ToGetSubscriptionLineItemsFilterArrayOutput() GetSubscriptionLineItemsFilterArrayOutput {
	return i.ToGetSubscriptionLineItemsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionLineItemsFilterArray) ToGetSubscriptionLineItemsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionLineItemsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionLineItemsFilterArrayOutput)
}

type GetSubscriptionLineItemsFilterOutput struct{ *pulumi.OutputState }

func (GetSubscriptionLineItemsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionLineItemsFilter)(nil)).Elem()
}

func (o GetSubscriptionLineItemsFilterOutput) ToGetSubscriptionLineItemsFilterOutput() GetSubscriptionLineItemsFilterOutput {
	return o
}

func (o GetSubscriptionLineItemsFilterOutput) ToGetSubscriptionLineItemsFilterOutputWithContext(ctx context.Context) GetSubscriptionLineItemsFilterOutput {
	return o
}

func (o GetSubscriptionLineItemsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubscriptionLineItemsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSubscriptionLineItemsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubscriptionLineItemsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionLineItemsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionLineItemsFilter)(nil)).Elem()
}

func (o GetSubscriptionLineItemsFilterArrayOutput) ToGetSubscriptionLineItemsFilterArrayOutput() GetSubscriptionLineItemsFilterArrayOutput {
	return o
}

func (o GetSubscriptionLineItemsFilterArrayOutput) ToGetSubscriptionLineItemsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionLineItemsFilterArrayOutput {
	return o
}

func (o GetSubscriptionLineItemsFilterArrayOutput) Index(i pulumi.IntInput) GetSubscriptionLineItemsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionLineItemsFilter {
		return vs[0].([]GetSubscriptionLineItemsFilter)[vs[1].(int)]
	}).(GetSubscriptionLineItemsFilterOutput)
}

type GetSubscriptionLineItemsSubscriptionLineItemCollection struct {
	// Array containing line item summaries in a subscription.
	Items []GetSubscriptionLineItemsSubscriptionLineItemCollectionItem `pulumi:"items"`
}

// GetSubscriptionLineItemsSubscriptionLineItemCollectionInput is an input type that accepts GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs and GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput values.
// You can construct a concrete instance of `GetSubscriptionLineItemsSubscriptionLineItemCollectionInput` via:
//
//	GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs{...}
type GetSubscriptionLineItemsSubscriptionLineItemCollectionInput interface {
	pulumi.Input

	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput
	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionOutputWithContext(context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs struct {
	// Array containing line item summaries in a subscription.
	Items GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayInput `pulumi:"items"`
}

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollection)(nil)).Elem()
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput {
	return i.ToGetSubscriptionLineItemsSubscriptionLineItemCollectionOutputWithContext(context.Background())
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput)
}

// GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayInput is an input type that accepts GetSubscriptionLineItemsSubscriptionLineItemCollectionArray and GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayInput` via:
//
//	GetSubscriptionLineItemsSubscriptionLineItemCollectionArray{ GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs{...} }
type GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput
	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutputWithContext(context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionArray []GetSubscriptionLineItemsSubscriptionLineItemCollectionInput

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionLineItemsSubscriptionLineItemCollection)(nil)).Elem()
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionArray) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput {
	return i.ToGetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionArray) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput)
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollection)(nil)).Elem()
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput {
	return o
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput {
	return o
}

// Array containing line item summaries in a subscription.
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput) Items() GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollection) []GetSubscriptionLineItemsSubscriptionLineItemCollectionItem {
		return v.Items
	}).(GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput)
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionLineItemsSubscriptionLineItemCollection)(nil)).Elem()
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput {
	return o
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput {
	return o
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionLineItemsSubscriptionLineItemCollection {
		return vs[0].([]GetSubscriptionLineItemsSubscriptionLineItemCollection)[vs[1].(int)]
	}).(GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput)
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionItem struct {
	// Billing model supported by the associated line item.
	BillingModel string `pulumi:"billingModel"`
	// Subscription line item identifier.
	Id string `pulumi:"id"`
	// Product code.
	ProductCode string `pulumi:"productCode"`
	// Product number.
	Quantity float64 `pulumi:"quantity"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the subscription item and associated products should end. An RFC 3339 formatted date and time string.
	TimeEnded string `pulumi:"timeEnded"`
	// The time the subscription item and associated products should start. An RFC 3339 formatted date and time string.
	TimeStarted string `pulumi:"timeStarted"`
}

// GetSubscriptionLineItemsSubscriptionLineItemCollectionItemInput is an input type that accepts GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs and GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput values.
// You can construct a concrete instance of `GetSubscriptionLineItemsSubscriptionLineItemCollectionItemInput` via:
//
//	GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs{...}
type GetSubscriptionLineItemsSubscriptionLineItemCollectionItemInput interface {
	pulumi.Input

	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput
	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutputWithContext(context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs struct {
	// Billing model supported by the associated line item.
	BillingModel pulumi.StringInput `pulumi:"billingModel"`
	// Subscription line item identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// Product code.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// Product number.
	Quantity pulumi.Float64Input `pulumi:"quantity"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time the subscription item and associated products should end. An RFC 3339 formatted date and time string.
	TimeEnded pulumi.StringInput `pulumi:"timeEnded"`
	// The time the subscription item and associated products should start. An RFC 3339 formatted date and time string.
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
}

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput {
	return i.ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutputWithContext(context.Background())
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput)
}

// GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayInput is an input type that accepts GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArray and GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayInput` via:
//
//	GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArray{ GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs{...} }
type GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput
	ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutputWithContext(context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArray []GetSubscriptionLineItemsSubscriptionLineItemCollectionItemInput

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionLineItemsSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArray) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput {
	return i.ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArray) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput)
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput {
	return o
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput {
	return o
}

// Billing model supported by the associated line item.
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) BillingModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollectionItem) string { return v.BillingModel }).(pulumi.StringOutput)
}

// Subscription line item identifier.
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Product code.
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollectionItem) string { return v.ProductCode }).(pulumi.StringOutput)
}

// Product number.
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) Quantity() pulumi.Float64Output {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollectionItem) float64 { return v.Quantity }).(pulumi.Float64Output)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The time the subscription item and associated products should end. An RFC 3339 formatted date and time string.
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) TimeEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollectionItem) string { return v.TimeEnded }).(pulumi.StringOutput)
}

// The time the subscription item and associated products should start. An RFC 3339 formatted date and time string.
func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionLineItemsSubscriptionLineItemCollectionItem) string { return v.TimeStarted }).(pulumi.StringOutput)
}

type GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionLineItemsSubscriptionLineItemCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput() GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput) ToGetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionLineItemsSubscriptionLineItemCollectionItem {
		return vs[0].([]GetSubscriptionLineItemsSubscriptionLineItemCollectionItem)[vs[1].(int)]
	}).(GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput)
}

type GetSubscriptionMappingsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSubscriptionMappingsFilterInput is an input type that accepts GetSubscriptionMappingsFilterArgs and GetSubscriptionMappingsFilterOutput values.
// You can construct a concrete instance of `GetSubscriptionMappingsFilterInput` via:
//
//	GetSubscriptionMappingsFilterArgs{...}
type GetSubscriptionMappingsFilterInput interface {
	pulumi.Input

	ToGetSubscriptionMappingsFilterOutput() GetSubscriptionMappingsFilterOutput
	ToGetSubscriptionMappingsFilterOutputWithContext(context.Context) GetSubscriptionMappingsFilterOutput
}

type GetSubscriptionMappingsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubscriptionMappingsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsFilter)(nil)).Elem()
}

func (i GetSubscriptionMappingsFilterArgs) ToGetSubscriptionMappingsFilterOutput() GetSubscriptionMappingsFilterOutput {
	return i.ToGetSubscriptionMappingsFilterOutputWithContext(context.Background())
}

func (i GetSubscriptionMappingsFilterArgs) ToGetSubscriptionMappingsFilterOutputWithContext(ctx context.Context) GetSubscriptionMappingsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionMappingsFilterOutput)
}

// GetSubscriptionMappingsFilterArrayInput is an input type that accepts GetSubscriptionMappingsFilterArray and GetSubscriptionMappingsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionMappingsFilterArrayInput` via:
//
//	GetSubscriptionMappingsFilterArray{ GetSubscriptionMappingsFilterArgs{...} }
type GetSubscriptionMappingsFilterArrayInput interface {
	pulumi.Input

	ToGetSubscriptionMappingsFilterArrayOutput() GetSubscriptionMappingsFilterArrayOutput
	ToGetSubscriptionMappingsFilterArrayOutputWithContext(context.Context) GetSubscriptionMappingsFilterArrayOutput
}

type GetSubscriptionMappingsFilterArray []GetSubscriptionMappingsFilterInput

func (GetSubscriptionMappingsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionMappingsFilter)(nil)).Elem()
}

func (i GetSubscriptionMappingsFilterArray) ToGetSubscriptionMappingsFilterArrayOutput() GetSubscriptionMappingsFilterArrayOutput {
	return i.ToGetSubscriptionMappingsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionMappingsFilterArray) ToGetSubscriptionMappingsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionMappingsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionMappingsFilterArrayOutput)
}

type GetSubscriptionMappingsFilterOutput struct{ *pulumi.OutputState }

func (GetSubscriptionMappingsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsFilter)(nil)).Elem()
}

func (o GetSubscriptionMappingsFilterOutput) ToGetSubscriptionMappingsFilterOutput() GetSubscriptionMappingsFilterOutput {
	return o
}

func (o GetSubscriptionMappingsFilterOutput) ToGetSubscriptionMappingsFilterOutputWithContext(ctx context.Context) GetSubscriptionMappingsFilterOutput {
	return o
}

func (o GetSubscriptionMappingsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubscriptionMappingsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSubscriptionMappingsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubscriptionMappingsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionMappingsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionMappingsFilter)(nil)).Elem()
}

func (o GetSubscriptionMappingsFilterArrayOutput) ToGetSubscriptionMappingsFilterArrayOutput() GetSubscriptionMappingsFilterArrayOutput {
	return o
}

func (o GetSubscriptionMappingsFilterArrayOutput) ToGetSubscriptionMappingsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionMappingsFilterArrayOutput {
	return o
}

func (o GetSubscriptionMappingsFilterArrayOutput) Index(i pulumi.IntInput) GetSubscriptionMappingsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionMappingsFilter {
		return vs[0].([]GetSubscriptionMappingsFilter)[vs[1].(int)]
	}).(GetSubscriptionMappingsFilterOutput)
}

type GetSubscriptionMappingsSubscriptionMappingCollection struct {
	Items []GetSubscriptionMappingsSubscriptionMappingCollectionItem `pulumi:"items"`
}

// GetSubscriptionMappingsSubscriptionMappingCollectionInput is an input type that accepts GetSubscriptionMappingsSubscriptionMappingCollectionArgs and GetSubscriptionMappingsSubscriptionMappingCollectionOutput values.
// You can construct a concrete instance of `GetSubscriptionMappingsSubscriptionMappingCollectionInput` via:
//
//	GetSubscriptionMappingsSubscriptionMappingCollectionArgs{...}
type GetSubscriptionMappingsSubscriptionMappingCollectionInput interface {
	pulumi.Input

	ToGetSubscriptionMappingsSubscriptionMappingCollectionOutput() GetSubscriptionMappingsSubscriptionMappingCollectionOutput
	ToGetSubscriptionMappingsSubscriptionMappingCollectionOutputWithContext(context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionOutput
}

type GetSubscriptionMappingsSubscriptionMappingCollectionArgs struct {
	Items GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayInput `pulumi:"items"`
}

func (GetSubscriptionMappingsSubscriptionMappingCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollection)(nil)).Elem()
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionArgs) ToGetSubscriptionMappingsSubscriptionMappingCollectionOutput() GetSubscriptionMappingsSubscriptionMappingCollectionOutput {
	return i.ToGetSubscriptionMappingsSubscriptionMappingCollectionOutputWithContext(context.Background())
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionArgs) ToGetSubscriptionMappingsSubscriptionMappingCollectionOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionMappingsSubscriptionMappingCollectionOutput)
}

// GetSubscriptionMappingsSubscriptionMappingCollectionArrayInput is an input type that accepts GetSubscriptionMappingsSubscriptionMappingCollectionArray and GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionMappingsSubscriptionMappingCollectionArrayInput` via:
//
//	GetSubscriptionMappingsSubscriptionMappingCollectionArray{ GetSubscriptionMappingsSubscriptionMappingCollectionArgs{...} }
type GetSubscriptionMappingsSubscriptionMappingCollectionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput() GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput
	ToGetSubscriptionMappingsSubscriptionMappingCollectionArrayOutputWithContext(context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput
}

type GetSubscriptionMappingsSubscriptionMappingCollectionArray []GetSubscriptionMappingsSubscriptionMappingCollectionInput

func (GetSubscriptionMappingsSubscriptionMappingCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionMappingsSubscriptionMappingCollection)(nil)).Elem()
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionArray) ToGetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput() GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput {
	return i.ToGetSubscriptionMappingsSubscriptionMappingCollectionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionArray) ToGetSubscriptionMappingsSubscriptionMappingCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput)
}

type GetSubscriptionMappingsSubscriptionMappingCollectionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionMappingsSubscriptionMappingCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollection)(nil)).Elem()
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionOutput() GetSubscriptionMappingsSubscriptionMappingCollectionOutput {
	return o
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionOutput {
	return o
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionOutput) Items() GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollection) []GetSubscriptionMappingsSubscriptionMappingCollectionItem {
		return v.Items
	}).(GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput)
}

type GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionMappingsSubscriptionMappingCollection)(nil)).Elem()
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput() GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput {
	return o
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput {
	return o
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionMappingsSubscriptionMappingCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionMappingsSubscriptionMappingCollection {
		return vs[0].([]GetSubscriptionMappingsSubscriptionMappingCollection)[vs[1].(int)]
	}).(GetSubscriptionMappingsSubscriptionMappingCollectionOutput)
}

type GetSubscriptionMappingsSubscriptionMappingCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// OCID of the mapping between subscription and compartment identified by the tenancy.
	Id string `pulumi:"id"`
	// Denotes if the subscription is explicity assigned to the root compartment or tenancy.
	IsExplicitlyAssigned bool `pulumi:"isExplicitlyAssigned"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// OCID of the subscription.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Date-time when subscription mapping was created.
	TimeCreated string `pulumi:"timeCreated"`
	// Date-time when subscription mapping was terminated.
	TimeTerminated string `pulumi:"timeTerminated"`
	// Date-time when subscription mapping was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetSubscriptionMappingsSubscriptionMappingCollectionItemInput is an input type that accepts GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs and GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput values.
// You can construct a concrete instance of `GetSubscriptionMappingsSubscriptionMappingCollectionItemInput` via:
//
//	GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs{...}
type GetSubscriptionMappingsSubscriptionMappingCollectionItemInput interface {
	pulumi.Input

	ToGetSubscriptionMappingsSubscriptionMappingCollectionItemOutput() GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput
	ToGetSubscriptionMappingsSubscriptionMappingCollectionItemOutputWithContext(context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput
}

type GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// OCID of the mapping between subscription and compartment identified by the tenancy.
	Id pulumi.StringInput `pulumi:"id"`
	// Denotes if the subscription is explicity assigned to the root compartment or tenancy.
	IsExplicitlyAssigned pulumi.BoolInput `pulumi:"isExplicitlyAssigned"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// OCID of the subscription.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// Date-time when subscription mapping was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Date-time when subscription mapping was terminated.
	TimeTerminated pulumi.StringInput `pulumi:"timeTerminated"`
	// Date-time when subscription mapping was updated.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemOutput() GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput {
	return i.ToGetSubscriptionMappingsSubscriptionMappingCollectionItemOutputWithContext(context.Background())
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput)
}

// GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayInput is an input type that accepts GetSubscriptionMappingsSubscriptionMappingCollectionItemArray and GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayInput` via:
//
//	GetSubscriptionMappingsSubscriptionMappingCollectionItemArray{ GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs{...} }
type GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput() GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput
	ToGetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutputWithContext(context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput
}

type GetSubscriptionMappingsSubscriptionMappingCollectionItemArray []GetSubscriptionMappingsSubscriptionMappingCollectionItemInput

func (GetSubscriptionMappingsSubscriptionMappingCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionMappingsSubscriptionMappingCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionItemArray) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput() GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput {
	return i.ToGetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionMappingsSubscriptionMappingCollectionItemArray) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput)
}

type GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemOutput() GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput {
	return o
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// OCID of the mapping between subscription and compartment identified by the tenancy.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Denotes if the subscription is explicity assigned to the root compartment or tenancy.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) IsExplicitlyAssigned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) bool { return v.IsExplicitlyAssigned }).(pulumi.BoolOutput)
}

// The lifecycle state of the resource.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// OCID of the subscription.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Date-time when subscription mapping was created.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date-time when subscription mapping was terminated.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) TimeTerminated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) string { return v.TimeTerminated }).(pulumi.StringOutput)
}

// Date-time when subscription mapping was updated.
func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionMappingsSubscriptionMappingCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionMappingsSubscriptionMappingCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput() GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput) ToGetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionMappingsSubscriptionMappingCollectionItem {
		return vs[0].([]GetSubscriptionMappingsSubscriptionMappingCollectionItem)[vs[1].(int)]
	}).(GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput)
}

type GetSubscriptionPromotion struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount float64 `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit string `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration int `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit string `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay bool `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status string `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired string `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted string `pulumi:"timeStarted"`
}

// GetSubscriptionPromotionInput is an input type that accepts GetSubscriptionPromotionArgs and GetSubscriptionPromotionOutput values.
// You can construct a concrete instance of `GetSubscriptionPromotionInput` via:
//
//	GetSubscriptionPromotionArgs{...}
type GetSubscriptionPromotionInput interface {
	pulumi.Input

	ToGetSubscriptionPromotionOutput() GetSubscriptionPromotionOutput
	ToGetSubscriptionPromotionOutputWithContext(context.Context) GetSubscriptionPromotionOutput
}

type GetSubscriptionPromotionArgs struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount pulumi.Float64Input `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit pulumi.StringInput `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit pulumi.StringInput `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay pulumi.BoolInput `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status pulumi.StringInput `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired pulumi.StringInput `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
}

func (GetSubscriptionPromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionPromotion)(nil)).Elem()
}

func (i GetSubscriptionPromotionArgs) ToGetSubscriptionPromotionOutput() GetSubscriptionPromotionOutput {
	return i.ToGetSubscriptionPromotionOutputWithContext(context.Background())
}

func (i GetSubscriptionPromotionArgs) ToGetSubscriptionPromotionOutputWithContext(ctx context.Context) GetSubscriptionPromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionPromotionOutput)
}

// GetSubscriptionPromotionArrayInput is an input type that accepts GetSubscriptionPromotionArray and GetSubscriptionPromotionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionPromotionArrayInput` via:
//
//	GetSubscriptionPromotionArray{ GetSubscriptionPromotionArgs{...} }
type GetSubscriptionPromotionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionPromotionArrayOutput() GetSubscriptionPromotionArrayOutput
	ToGetSubscriptionPromotionArrayOutputWithContext(context.Context) GetSubscriptionPromotionArrayOutput
}

type GetSubscriptionPromotionArray []GetSubscriptionPromotionInput

func (GetSubscriptionPromotionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionPromotion)(nil)).Elem()
}

func (i GetSubscriptionPromotionArray) ToGetSubscriptionPromotionArrayOutput() GetSubscriptionPromotionArrayOutput {
	return i.ToGetSubscriptionPromotionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionPromotionArray) ToGetSubscriptionPromotionArrayOutputWithContext(ctx context.Context) GetSubscriptionPromotionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionPromotionArrayOutput)
}

type GetSubscriptionPromotionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionPromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionPromotion)(nil)).Elem()
}

func (o GetSubscriptionPromotionOutput) ToGetSubscriptionPromotionOutput() GetSubscriptionPromotionOutput {
	return o
}

func (o GetSubscriptionPromotionOutput) ToGetSubscriptionPromotionOutputWithContext(ctx context.Context) GetSubscriptionPromotionOutput {
	return o
}

// If a subscription is present, indicates the total amount of promotional subscription credits.
func (o GetSubscriptionPromotionOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v GetSubscriptionPromotion) float64 { return v.Amount }).(pulumi.Float64Output)
}

// Currency unit associated with the promotion.
func (o GetSubscriptionPromotionOutput) CurrencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionPromotion) string { return v.CurrencyUnit }).(pulumi.StringOutput)
}

// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
func (o GetSubscriptionPromotionOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscriptionPromotion) int { return v.Duration }).(pulumi.IntOutput)
}

// Unit for the duration.
func (o GetSubscriptionPromotionOutput) DurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionPromotion) string { return v.DurationUnit }).(pulumi.StringOutput)
}

// Speficies whether or not the customer intends to pay after the promotion has expired.
func (o GetSubscriptionPromotionOutput) IsIntentToPay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionPromotion) bool { return v.IsIntentToPay }).(pulumi.BoolOutput)
}

// If a subscription is present, indicates the current status of the subscription promotion.
func (o GetSubscriptionPromotionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionPromotion) string { return v.Status }).(pulumi.StringOutput)
}

// Date and time when the promotion ends.
func (o GetSubscriptionPromotionOutput) TimeExpired() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionPromotion) string { return v.TimeExpired }).(pulumi.StringOutput)
}

// Date and time when the promotion starts.
func (o GetSubscriptionPromotionOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionPromotion) string { return v.TimeStarted }).(pulumi.StringOutput)
}

type GetSubscriptionPromotionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionPromotionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionPromotion)(nil)).Elem()
}

func (o GetSubscriptionPromotionArrayOutput) ToGetSubscriptionPromotionArrayOutput() GetSubscriptionPromotionArrayOutput {
	return o
}

func (o GetSubscriptionPromotionArrayOutput) ToGetSubscriptionPromotionArrayOutputWithContext(ctx context.Context) GetSubscriptionPromotionArrayOutput {
	return o
}

func (o GetSubscriptionPromotionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionPromotionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionPromotion {
		return vs[0].([]GetSubscriptionPromotion)[vs[1].(int)]
	}).(GetSubscriptionPromotionOutput)
}

type GetSubscriptionSkus struct {
	// Description of the stock units.
	Description string `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId string `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance bool `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent bool `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription string `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName string `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity int `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku string `pulumi:"sku"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
}

// GetSubscriptionSkusInput is an input type that accepts GetSubscriptionSkusArgs and GetSubscriptionSkusOutput values.
// You can construct a concrete instance of `GetSubscriptionSkusInput` via:
//
//	GetSubscriptionSkusArgs{...}
type GetSubscriptionSkusInput interface {
	pulumi.Input

	ToGetSubscriptionSkusOutput() GetSubscriptionSkusOutput
	ToGetSubscriptionSkusOutputWithContext(context.Context) GetSubscriptionSkusOutput
}

type GetSubscriptionSkusArgs struct {
	// Description of the stock units.
	Description pulumi.StringInput `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId pulumi.StringInput `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance pulumi.BoolInput `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent pulumi.BoolInput `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription pulumi.StringInput `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity pulumi.IntInput `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Subscription start time.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (GetSubscriptionSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionSkus)(nil)).Elem()
}

func (i GetSubscriptionSkusArgs) ToGetSubscriptionSkusOutput() GetSubscriptionSkusOutput {
	return i.ToGetSubscriptionSkusOutputWithContext(context.Background())
}

func (i GetSubscriptionSkusArgs) ToGetSubscriptionSkusOutputWithContext(ctx context.Context) GetSubscriptionSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionSkusOutput)
}

// GetSubscriptionSkusArrayInput is an input type that accepts GetSubscriptionSkusArray and GetSubscriptionSkusArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionSkusArrayInput` via:
//
//	GetSubscriptionSkusArray{ GetSubscriptionSkusArgs{...} }
type GetSubscriptionSkusArrayInput interface {
	pulumi.Input

	ToGetSubscriptionSkusArrayOutput() GetSubscriptionSkusArrayOutput
	ToGetSubscriptionSkusArrayOutputWithContext(context.Context) GetSubscriptionSkusArrayOutput
}

type GetSubscriptionSkusArray []GetSubscriptionSkusInput

func (GetSubscriptionSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionSkus)(nil)).Elem()
}

func (i GetSubscriptionSkusArray) ToGetSubscriptionSkusArrayOutput() GetSubscriptionSkusArrayOutput {
	return i.ToGetSubscriptionSkusArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionSkusArray) ToGetSubscriptionSkusArrayOutputWithContext(ctx context.Context) GetSubscriptionSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionSkusArrayOutput)
}

type GetSubscriptionSkusOutput struct{ *pulumi.OutputState }

func (GetSubscriptionSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionSkus)(nil)).Elem()
}

func (o GetSubscriptionSkusOutput) ToGetSubscriptionSkusOutput() GetSubscriptionSkusOutput {
	return o
}

func (o GetSubscriptionSkusOutput) ToGetSubscriptionSkusOutputWithContext(ctx context.Context) GetSubscriptionSkusOutput {
	return o
}

// Description of the stock units.
func (o GetSubscriptionSkusOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) string { return v.Description }).(pulumi.StringOutput)
}

// Date and time when the SKU ended.
func (o GetSubscriptionSkusOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) string { return v.EndDate }).(pulumi.StringOutput)
}

// Sales order line identifier.
func (o GetSubscriptionSkusOutput) GsiOrderLineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) string { return v.GsiOrderLineId }).(pulumi.StringOutput)
}

// Specifies if an additional test instance can be provisioned by the SaaS application.
func (o GetSubscriptionSkusOutput) IsAdditionalInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) bool { return v.IsAdditionalInstance }).(pulumi.BoolOutput)
}

// Specifies if the SKU is considered as a parent or child.
func (o GetSubscriptionSkusOutput) IsBaseServiceComponent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) bool { return v.IsBaseServiceComponent }).(pulumi.BoolOutput)
}

// Description of the covered product belonging to this SKU.
func (o GetSubscriptionSkusOutput) LicensePartDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) string { return v.LicensePartDescription }).(pulumi.StringOutput)
}

// Base metric for billing the service.
func (o GetSubscriptionSkusOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) string { return v.MetricName }).(pulumi.StringOutput)
}

// Quantity of the stock units.
func (o GetSubscriptionSkusOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) int { return v.Quantity }).(pulumi.IntOutput)
}

// Stock Keeping Unit (SKU) ID.
func (o GetSubscriptionSkusOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) string { return v.Sku }).(pulumi.StringOutput)
}

// Subscription start time.
func (o GetSubscriptionSkusOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionSkus) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSubscriptionSkusArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionSkus)(nil)).Elem()
}

func (o GetSubscriptionSkusArrayOutput) ToGetSubscriptionSkusArrayOutput() GetSubscriptionSkusArrayOutput {
	return o
}

func (o GetSubscriptionSkusArrayOutput) ToGetSubscriptionSkusArrayOutputWithContext(ctx context.Context) GetSubscriptionSkusArrayOutput {
	return o
}

func (o GetSubscriptionSkusArrayOutput) Index(i pulumi.IntInput) GetSubscriptionSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionSkus {
		return vs[0].([]GetSubscriptionSkus)[vs[1].(int)]
	}).(GetSubscriptionSkusOutput)
}

type GetSubscriptionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSubscriptionsFilterInput is an input type that accepts GetSubscriptionsFilterArgs and GetSubscriptionsFilterOutput values.
// You can construct a concrete instance of `GetSubscriptionsFilterInput` via:
//
//	GetSubscriptionsFilterArgs{...}
type GetSubscriptionsFilterInput interface {
	pulumi.Input

	ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput
	ToGetSubscriptionsFilterOutputWithContext(context.Context) GetSubscriptionsFilterOutput
}

type GetSubscriptionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubscriptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsFilter)(nil)).Elem()
}

func (i GetSubscriptionsFilterArgs) ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput {
	return i.ToGetSubscriptionsFilterOutputWithContext(context.Background())
}

func (i GetSubscriptionsFilterArgs) ToGetSubscriptionsFilterOutputWithContext(ctx context.Context) GetSubscriptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsFilterOutput)
}

// GetSubscriptionsFilterArrayInput is an input type that accepts GetSubscriptionsFilterArray and GetSubscriptionsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsFilterArrayInput` via:
//
//	GetSubscriptionsFilterArray{ GetSubscriptionsFilterArgs{...} }
type GetSubscriptionsFilterArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput
	ToGetSubscriptionsFilterArrayOutputWithContext(context.Context) GetSubscriptionsFilterArrayOutput
}

type GetSubscriptionsFilterArray []GetSubscriptionsFilterInput

func (GetSubscriptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsFilter)(nil)).Elem()
}

func (i GetSubscriptionsFilterArray) ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput {
	return i.ToGetSubscriptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsFilterArray) ToGetSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsFilterArrayOutput)
}

type GetSubscriptionsFilterOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsFilter)(nil)).Elem()
}

func (o GetSubscriptionsFilterOutput) ToGetSubscriptionsFilterOutput() GetSubscriptionsFilterOutput {
	return o
}

func (o GetSubscriptionsFilterOutput) ToGetSubscriptionsFilterOutputWithContext(ctx context.Context) GetSubscriptionsFilterOutput {
	return o
}

func (o GetSubscriptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubscriptionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSubscriptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubscriptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsFilter)(nil)).Elem()
}

func (o GetSubscriptionsFilterArrayOutput) ToGetSubscriptionsFilterArrayOutput() GetSubscriptionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionsFilterArrayOutput) ToGetSubscriptionsFilterArrayOutputWithContext(ctx context.Context) GetSubscriptionsFilterArrayOutput {
	return o
}

func (o GetSubscriptionsFilterArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsFilter {
		return vs[0].([]GetSubscriptionsFilter)[vs[1].(int)]
	}).(GetSubscriptionsFilterOutput)
}

type GetSubscriptionsSubscriptionCollection struct {
	Items []GetSubscriptionsSubscriptionCollectionItem `pulumi:"items"`
}

// GetSubscriptionsSubscriptionCollectionInput is an input type that accepts GetSubscriptionsSubscriptionCollectionArgs and GetSubscriptionsSubscriptionCollectionOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionInput` via:
//
//	GetSubscriptionsSubscriptionCollectionArgs{...}
type GetSubscriptionsSubscriptionCollectionInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionOutput() GetSubscriptionsSubscriptionCollectionOutput
	ToGetSubscriptionsSubscriptionCollectionOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionOutput
}

type GetSubscriptionsSubscriptionCollectionArgs struct {
	Items GetSubscriptionsSubscriptionCollectionItemArrayInput `pulumi:"items"`
}

func (GetSubscriptionsSubscriptionCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollection)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionArgs) ToGetSubscriptionsSubscriptionCollectionOutput() GetSubscriptionsSubscriptionCollectionOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionArgs) ToGetSubscriptionsSubscriptionCollectionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionOutput)
}

// GetSubscriptionsSubscriptionCollectionArrayInput is an input type that accepts GetSubscriptionsSubscriptionCollectionArray and GetSubscriptionsSubscriptionCollectionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionArrayInput` via:
//
//	GetSubscriptionsSubscriptionCollectionArray{ GetSubscriptionsSubscriptionCollectionArgs{...} }
type GetSubscriptionsSubscriptionCollectionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionArrayOutput() GetSubscriptionsSubscriptionCollectionArrayOutput
	ToGetSubscriptionsSubscriptionCollectionArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionArrayOutput
}

type GetSubscriptionsSubscriptionCollectionArray []GetSubscriptionsSubscriptionCollectionInput

func (GetSubscriptionsSubscriptionCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollection)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionArray) ToGetSubscriptionsSubscriptionCollectionArrayOutput() GetSubscriptionsSubscriptionCollectionArrayOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionArray) ToGetSubscriptionsSubscriptionCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionArrayOutput)
}

type GetSubscriptionsSubscriptionCollectionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollection)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionOutput) ToGetSubscriptionsSubscriptionCollectionOutput() GetSubscriptionsSubscriptionCollectionOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionOutput) ToGetSubscriptionsSubscriptionCollectionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionOutput) Items() GetSubscriptionsSubscriptionCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollection) []GetSubscriptionsSubscriptionCollectionItem {
		return v.Items
	}).(GetSubscriptionsSubscriptionCollectionItemArrayOutput)
}

type GetSubscriptionsSubscriptionCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollection)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionArrayOutput) ToGetSubscriptionsSubscriptionCollectionArrayOutput() GetSubscriptionsSubscriptionCollectionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionArrayOutput) ToGetSubscriptionsSubscriptionCollectionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionCollection {
		return vs[0].([]GetSubscriptionsSubscriptionCollection)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionCollectionOutput)
}

type GetSubscriptionsSubscriptionCollectionItem struct {
	// Classic subscription ID.
	ClassicSubscriptionId string `pulumi:"classicSubscriptionId"`
	// The currency code for the customer associated with the subscription.
	CloudAmountCurrency string `pulumi:"cloudAmountCurrency"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Customer service identifier for the customer associated with the subscription.
	CsiNumber string `pulumi:"csiNumber"`
	// Currency code. For example USD, MXN.
	CurrencyCode string `pulumi:"currencyCode"`
	// The country code for the customer associated with the subscription.
	CustomerCountryCode string `pulumi:"customerCountryCode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// The version of the subscription entity.
	EntityVersion string `pulumi:"entityVersion"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the subscription.
	Id string `pulumi:"id"`
	// Specifies whether or not the subscription is from classic systems.
	IsClassicSubscription bool `pulumi:"isClassicSubscription"`
	// Specifies whether or not the subscription is a government subscription.
	IsGovernmentSubscription bool `pulumi:"isGovernmentSubscription"`
	// The pay model of the subscription, such as 'Pay as you go' or 'Monthly'.
	PaymentModel string `pulumi:"paymentModel"`
	// Specifies any program that is associated with the subscription.
	ProgramType string `pulumi:"programType"`
	// List of promotions related to the subscription.
	Promotions []GetSubscriptionsSubscriptionCollectionItemPromotion `pulumi:"promotions"`
	// Purchase entitlement ID associated with the subscription.
	PurchaseEntitlementId string `pulumi:"purchaseEntitlementId"`
	// Region for the subscription.
	RegionAssignment string `pulumi:"regionAssignment"`
	// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
	ServiceName string `pulumi:"serviceName"`
	// List of SKUs linked to this subscription.
	Skuses []GetSubscriptionsSubscriptionCollectionItemSkus `pulumi:"skuses"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
	// Lifecycle state of the subscription.
	State string `pulumi:"state"`
	// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
	SubscriptionNumber string `pulumi:"subscriptionNumber"`
	// Tier for the subscription, whether a free promotion subscription or a paid subscription.
	SubscriptionTier string `pulumi:"subscriptionTier"`
	// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetSubscriptionsSubscriptionCollectionItemInput is an input type that accepts GetSubscriptionsSubscriptionCollectionItemArgs and GetSubscriptionsSubscriptionCollectionItemOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionItemInput` via:
//
//	GetSubscriptionsSubscriptionCollectionItemArgs{...}
type GetSubscriptionsSubscriptionCollectionItemInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionItemOutput() GetSubscriptionsSubscriptionCollectionItemOutput
	ToGetSubscriptionsSubscriptionCollectionItemOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionItemOutput
}

type GetSubscriptionsSubscriptionCollectionItemArgs struct {
	// Classic subscription ID.
	ClassicSubscriptionId pulumi.StringInput `pulumi:"classicSubscriptionId"`
	// The currency code for the customer associated with the subscription.
	CloudAmountCurrency pulumi.StringInput `pulumi:"cloudAmountCurrency"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Customer service identifier for the customer associated with the subscription.
	CsiNumber pulumi.StringInput `pulumi:"csiNumber"`
	// Currency code. For example USD, MXN.
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// The country code for the customer associated with the subscription.
	CustomerCountryCode pulumi.StringInput `pulumi:"customerCountryCode"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Date and time when the SKU ended.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// The version of the subscription entity.
	EntityVersion pulumi.StringInput `pulumi:"entityVersion"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the subscription.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether or not the subscription is from classic systems.
	IsClassicSubscription pulumi.BoolInput `pulumi:"isClassicSubscription"`
	// Specifies whether or not the subscription is a government subscription.
	IsGovernmentSubscription pulumi.BoolInput `pulumi:"isGovernmentSubscription"`
	// The pay model of the subscription, such as 'Pay as you go' or 'Monthly'.
	PaymentModel pulumi.StringInput `pulumi:"paymentModel"`
	// Specifies any program that is associated with the subscription.
	ProgramType pulumi.StringInput `pulumi:"programType"`
	// List of promotions related to the subscription.
	Promotions GetSubscriptionsSubscriptionCollectionItemPromotionArrayInput `pulumi:"promotions"`
	// Purchase entitlement ID associated with the subscription.
	PurchaseEntitlementId pulumi.StringInput `pulumi:"purchaseEntitlementId"`
	// Region for the subscription.
	RegionAssignment pulumi.StringInput `pulumi:"regionAssignment"`
	// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// List of SKUs linked to this subscription.
	Skuses GetSubscriptionsSubscriptionCollectionItemSkusArrayInput `pulumi:"skuses"`
	// Subscription start time.
	StartDate pulumi.StringInput `pulumi:"startDate"`
	// Lifecycle state of the subscription.
	State pulumi.StringInput `pulumi:"state"`
	// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
	SubscriptionNumber pulumi.StringInput `pulumi:"subscriptionNumber"`
	// Tier for the subscription, whether a free promotion subscription or a paid subscription.
	SubscriptionTier pulumi.StringInput `pulumi:"subscriptionTier"`
	// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetSubscriptionsSubscriptionCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionItemArgs) ToGetSubscriptionsSubscriptionCollectionItemOutput() GetSubscriptionsSubscriptionCollectionItemOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionItemOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionItemArgs) ToGetSubscriptionsSubscriptionCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionItemOutput)
}

// GetSubscriptionsSubscriptionCollectionItemArrayInput is an input type that accepts GetSubscriptionsSubscriptionCollectionItemArray and GetSubscriptionsSubscriptionCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionItemArrayInput` via:
//
//	GetSubscriptionsSubscriptionCollectionItemArray{ GetSubscriptionsSubscriptionCollectionItemArgs{...} }
type GetSubscriptionsSubscriptionCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionItemArrayOutput() GetSubscriptionsSubscriptionCollectionItemArrayOutput
	ToGetSubscriptionsSubscriptionCollectionItemArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionItemArrayOutput
}

type GetSubscriptionsSubscriptionCollectionItemArray []GetSubscriptionsSubscriptionCollectionItemInput

func (GetSubscriptionsSubscriptionCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollectionItem)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionItemArray) ToGetSubscriptionsSubscriptionCollectionItemArrayOutput() GetSubscriptionsSubscriptionCollectionItemArrayOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionItemArray) ToGetSubscriptionsSubscriptionCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionItemArrayOutput)
}

type GetSubscriptionsSubscriptionCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionItemOutput) ToGetSubscriptionsSubscriptionCollectionItemOutput() GetSubscriptionsSubscriptionCollectionItemOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemOutput) ToGetSubscriptionsSubscriptionCollectionItemOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemOutput {
	return o
}

// Classic subscription ID.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) ClassicSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.ClassicSubscriptionId }).(pulumi.StringOutput)
}

// The currency code for the customer associated with the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) CloudAmountCurrency() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.CloudAmountCurrency }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Customer service identifier for the customer associated with the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) CsiNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.CsiNumber }).(pulumi.StringOutput)
}

// Currency code. For example USD, MXN.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// The country code for the customer associated with the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) CustomerCountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.CustomerCountryCode }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSubscriptionsSubscriptionCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Date and time when the SKU ended.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.EndDate }).(pulumi.StringOutput)
}

// The version of the subscription entity.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) EntityVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.EntityVersion }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSubscriptionsSubscriptionCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether or not the subscription is from classic systems.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) IsClassicSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) bool { return v.IsClassicSubscription }).(pulumi.BoolOutput)
}

// Specifies whether or not the subscription is a government subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) IsGovernmentSubscription() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) bool { return v.IsGovernmentSubscription }).(pulumi.BoolOutput)
}

// The pay model of the subscription, such as 'Pay as you go' or 'Monthly'.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) PaymentModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.PaymentModel }).(pulumi.StringOutput)
}

// Specifies any program that is associated with the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) ProgramType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.ProgramType }).(pulumi.StringOutput)
}

// List of promotions related to the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) Promotions() GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) []GetSubscriptionsSubscriptionCollectionItemPromotion {
		return v.Promotions
	}).(GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput)
}

// Purchase entitlement ID associated with the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) PurchaseEntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.PurchaseEntitlementId }).(pulumi.StringOutput)
}

// Region for the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) RegionAssignment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.RegionAssignment }).(pulumi.StringOutput)
}

// The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.ServiceName }).(pulumi.StringOutput)
}

// List of SKUs linked to this subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) Skuses() GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) []GetSubscriptionsSubscriptionCollectionItemSkus {
		return v.Skuses
	}).(GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput)
}

// Subscription start time.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.StartDate }).(pulumi.StringOutput)
}

// Lifecycle state of the subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) SubscriptionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.SubscriptionNumber }).(pulumi.StringOutput)
}

// Tier for the subscription, whether a free promotion subscription or a paid subscription.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) SubscriptionTier() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.SubscriptionTier }).(pulumi.StringOutput)
}

// The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
func (o GetSubscriptionsSubscriptionCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetSubscriptionsSubscriptionCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollectionItem)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionItemArrayOutput) ToGetSubscriptionsSubscriptionCollectionItemArrayOutput() GetSubscriptionsSubscriptionCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemArrayOutput) ToGetSubscriptionsSubscriptionCollectionItemArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionCollectionItem {
		return vs[0].([]GetSubscriptionsSubscriptionCollectionItem)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionCollectionItemOutput)
}

type GetSubscriptionsSubscriptionCollectionItemPromotion struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount float64 `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit string `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration int `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit string `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay bool `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status string `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired string `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted string `pulumi:"timeStarted"`
}

// GetSubscriptionsSubscriptionCollectionItemPromotionInput is an input type that accepts GetSubscriptionsSubscriptionCollectionItemPromotionArgs and GetSubscriptionsSubscriptionCollectionItemPromotionOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionItemPromotionInput` via:
//
//	GetSubscriptionsSubscriptionCollectionItemPromotionArgs{...}
type GetSubscriptionsSubscriptionCollectionItemPromotionInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionItemPromotionOutput() GetSubscriptionsSubscriptionCollectionItemPromotionOutput
	ToGetSubscriptionsSubscriptionCollectionItemPromotionOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionItemPromotionOutput
}

type GetSubscriptionsSubscriptionCollectionItemPromotionArgs struct {
	// If a subscription is present, indicates the total amount of promotional subscription credits.
	Amount pulumi.Float64Input `pulumi:"amount"`
	// Currency unit associated with the promotion.
	CurrencyUnit pulumi.StringInput `pulumi:"currencyUnit"`
	// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Unit for the duration.
	DurationUnit pulumi.StringInput `pulumi:"durationUnit"`
	// Speficies whether or not the customer intends to pay after the promotion has expired.
	IsIntentToPay pulumi.BoolInput `pulumi:"isIntentToPay"`
	// If a subscription is present, indicates the current status of the subscription promotion.
	Status pulumi.StringInput `pulumi:"status"`
	// Date and time when the promotion ends.
	TimeExpired pulumi.StringInput `pulumi:"timeExpired"`
	// Date and time when the promotion starts.
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
}

func (GetSubscriptionsSubscriptionCollectionItemPromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionItemPromotionArgs) ToGetSubscriptionsSubscriptionCollectionItemPromotionOutput() GetSubscriptionsSubscriptionCollectionItemPromotionOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionItemPromotionOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionItemPromotionArgs) ToGetSubscriptionsSubscriptionCollectionItemPromotionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemPromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionItemPromotionOutput)
}

// GetSubscriptionsSubscriptionCollectionItemPromotionArrayInput is an input type that accepts GetSubscriptionsSubscriptionCollectionItemPromotionArray and GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionItemPromotionArrayInput` via:
//
//	GetSubscriptionsSubscriptionCollectionItemPromotionArray{ GetSubscriptionsSubscriptionCollectionItemPromotionArgs{...} }
type GetSubscriptionsSubscriptionCollectionItemPromotionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput() GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput
	ToGetSubscriptionsSubscriptionCollectionItemPromotionArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput
}

type GetSubscriptionsSubscriptionCollectionItemPromotionArray []GetSubscriptionsSubscriptionCollectionItemPromotionInput

func (GetSubscriptionsSubscriptionCollectionItemPromotionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionItemPromotionArray) ToGetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput() GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionItemPromotionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionItemPromotionArray) ToGetSubscriptionsSubscriptionCollectionItemPromotionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput)
}

type GetSubscriptionsSubscriptionCollectionItemPromotionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionItemPromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) ToGetSubscriptionsSubscriptionCollectionItemPromotionOutput() GetSubscriptionsSubscriptionCollectionItemPromotionOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) ToGetSubscriptionsSubscriptionCollectionItemPromotionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemPromotionOutput {
	return o
}

// If a subscription is present, indicates the total amount of promotional subscription credits.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) float64 { return v.Amount }).(pulumi.Float64Output)
}

// Currency unit associated with the promotion.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) CurrencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) string { return v.CurrencyUnit }).(pulumi.StringOutput)
}

// Specifies how long the promotion related to the subscription, if any, is valid in duration units.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) int { return v.Duration }).(pulumi.IntOutput)
}

// Unit for the duration.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) DurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) string { return v.DurationUnit }).(pulumi.StringOutput)
}

// Speficies whether or not the customer intends to pay after the promotion has expired.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) IsIntentToPay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) bool { return v.IsIntentToPay }).(pulumi.BoolOutput)
}

// If a subscription is present, indicates the current status of the subscription promotion.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) string { return v.Status }).(pulumi.StringOutput)
}

// Date and time when the promotion ends.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) TimeExpired() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) string { return v.TimeExpired }).(pulumi.StringOutput)
}

// Date and time when the promotion starts.
func (o GetSubscriptionsSubscriptionCollectionItemPromotionOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemPromotion) string { return v.TimeStarted }).(pulumi.StringOutput)
}

type GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollectionItemPromotion)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput) ToGetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput() GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput) ToGetSubscriptionsSubscriptionCollectionItemPromotionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionCollectionItemPromotionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionCollectionItemPromotion {
		return vs[0].([]GetSubscriptionsSubscriptionCollectionItemPromotion)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionCollectionItemPromotionOutput)
}

type GetSubscriptionsSubscriptionCollectionItemSkus struct {
	// Description of the stock units.
	Description string `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate string `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId string `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance bool `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent bool `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription string `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName string `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity int `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku string `pulumi:"sku"`
	// Subscription start time.
	StartDate string `pulumi:"startDate"`
}

// GetSubscriptionsSubscriptionCollectionItemSkusInput is an input type that accepts GetSubscriptionsSubscriptionCollectionItemSkusArgs and GetSubscriptionsSubscriptionCollectionItemSkusOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionItemSkusInput` via:
//
//	GetSubscriptionsSubscriptionCollectionItemSkusArgs{...}
type GetSubscriptionsSubscriptionCollectionItemSkusInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionItemSkusOutput() GetSubscriptionsSubscriptionCollectionItemSkusOutput
	ToGetSubscriptionsSubscriptionCollectionItemSkusOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionItemSkusOutput
}

type GetSubscriptionsSubscriptionCollectionItemSkusArgs struct {
	// Description of the stock units.
	Description pulumi.StringInput `pulumi:"description"`
	// Date and time when the SKU ended.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// Sales order line identifier.
	GsiOrderLineId pulumi.StringInput `pulumi:"gsiOrderLineId"`
	// Specifies if an additional test instance can be provisioned by the SaaS application.
	IsAdditionalInstance pulumi.BoolInput `pulumi:"isAdditionalInstance"`
	// Specifies if the SKU is considered as a parent or child.
	IsBaseServiceComponent pulumi.BoolInput `pulumi:"isBaseServiceComponent"`
	// Description of the covered product belonging to this SKU.
	LicensePartDescription pulumi.StringInput `pulumi:"licensePartDescription"`
	// Base metric for billing the service.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Quantity of the stock units.
	Quantity pulumi.IntInput `pulumi:"quantity"`
	// Stock Keeping Unit (SKU) ID.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Subscription start time.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (GetSubscriptionsSubscriptionCollectionItemSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionItemSkusArgs) ToGetSubscriptionsSubscriptionCollectionItemSkusOutput() GetSubscriptionsSubscriptionCollectionItemSkusOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionItemSkusOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionItemSkusArgs) ToGetSubscriptionsSubscriptionCollectionItemSkusOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionItemSkusOutput)
}

// GetSubscriptionsSubscriptionCollectionItemSkusArrayInput is an input type that accepts GetSubscriptionsSubscriptionCollectionItemSkusArray and GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionCollectionItemSkusArrayInput` via:
//
//	GetSubscriptionsSubscriptionCollectionItemSkusArray{ GetSubscriptionsSubscriptionCollectionItemSkusArgs{...} }
type GetSubscriptionsSubscriptionCollectionItemSkusArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionCollectionItemSkusArrayOutput() GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput
	ToGetSubscriptionsSubscriptionCollectionItemSkusArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput
}

type GetSubscriptionsSubscriptionCollectionItemSkusArray []GetSubscriptionsSubscriptionCollectionItemSkusInput

func (GetSubscriptionsSubscriptionCollectionItemSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionCollectionItemSkusArray) ToGetSubscriptionsSubscriptionCollectionItemSkusArrayOutput() GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput {
	return i.ToGetSubscriptionsSubscriptionCollectionItemSkusArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionCollectionItemSkusArray) ToGetSubscriptionsSubscriptionCollectionItemSkusArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput)
}

type GetSubscriptionsSubscriptionCollectionItemSkusOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionItemSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) ToGetSubscriptionsSubscriptionCollectionItemSkusOutput() GetSubscriptionsSubscriptionCollectionItemSkusOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) ToGetSubscriptionsSubscriptionCollectionItemSkusOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemSkusOutput {
	return o
}

// Description of the stock units.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) string { return v.Description }).(pulumi.StringOutput)
}

// Date and time when the SKU ended.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) string { return v.EndDate }).(pulumi.StringOutput)
}

// Sales order line identifier.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) GsiOrderLineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) string { return v.GsiOrderLineId }).(pulumi.StringOutput)
}

// Specifies if an additional test instance can be provisioned by the SaaS application.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) IsAdditionalInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) bool { return v.IsAdditionalInstance }).(pulumi.BoolOutput)
}

// Specifies if the SKU is considered as a parent or child.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) IsBaseServiceComponent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) bool { return v.IsBaseServiceComponent }).(pulumi.BoolOutput)
}

// Description of the covered product belonging to this SKU.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) LicensePartDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) string { return v.LicensePartDescription }).(pulumi.StringOutput)
}

// Base metric for billing the service.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) string { return v.MetricName }).(pulumi.StringOutput)
}

// Quantity of the stock units.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) int { return v.Quantity }).(pulumi.IntOutput)
}

// Stock Keeping Unit (SKU) ID.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) string { return v.Sku }).(pulumi.StringOutput)
}

// Subscription start time.
func (o GetSubscriptionsSubscriptionCollectionItemSkusOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscriptionCollectionItemSkus) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscriptionCollectionItemSkus)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput) ToGetSubscriptionsSubscriptionCollectionItemSkusArrayOutput() GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput) ToGetSubscriptionsSubscriptionCollectionItemSkusArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionCollectionItemSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscriptionCollectionItemSkus {
		return vs[0].([]GetSubscriptionsSubscriptionCollectionItemSkus)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionCollectionItemSkusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionInput)(nil)).Elem(), GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayInput)(nil)).Elem(), GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemInput)(nil)).Elem(), GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayInput)(nil)).Elem(), GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionLineItemsFilterInput)(nil)).Elem(), GetAssignedSubscriptionLineItemsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionLineItemsFilterArrayInput)(nil)).Elem(), GetAssignedSubscriptionLineItemsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionPromotionInput)(nil)).Elem(), GetAssignedSubscriptionPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionPromotionArrayInput)(nil)).Elem(), GetAssignedSubscriptionPromotionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionSkusInput)(nil)).Elem(), GetAssignedSubscriptionSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionSkusArrayInput)(nil)).Elem(), GetAssignedSubscriptionSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayInput)(nil)).Elem(), GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsFilterInput)(nil)).Elem(), GetAssignedSubscriptionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssignedSubscriptionsFilterArrayInput)(nil)).Elem(), GetAssignedSubscriptionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollectionInput)(nil)).Elem(), GetDomainGovernancesDomainGovernanceCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollectionArrayInput)(nil)).Elem(), GetDomainGovernancesDomainGovernanceCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollectionItemInput)(nil)).Elem(), GetDomainGovernancesDomainGovernanceCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainGovernancesDomainGovernanceCollectionItemArrayInput)(nil)).Elem(), GetDomainGovernancesDomainGovernanceCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainGovernancesFilterInput)(nil)).Elem(), GetDomainGovernancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainGovernancesFilterArrayInput)(nil)).Elem(), GetDomainGovernancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainCollectionInput)(nil)).Elem(), GetDomainsDomainCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainCollectionArrayInput)(nil)).Elem(), GetDomainsDomainCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainCollectionItemInput)(nil)).Elem(), GetDomainsDomainCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainCollectionItemArrayInput)(nil)).Elem(), GetDomainsDomainCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsFilterInput)(nil)).Elem(), GetDomainsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsFilterArrayInput)(nil)).Elem(), GetDomainsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinksFilterInput)(nil)).Elem(), GetLinksFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinksFilterArrayInput)(nil)).Elem(), GetLinksFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinksLinkCollectionInput)(nil)).Elem(), GetLinksLinkCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinksLinkCollectionArrayInput)(nil)).Elem(), GetLinksLinkCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinksLinkCollectionItemInput)(nil)).Elem(), GetLinksLinkCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinksLinkCollectionItemArrayInput)(nil)).Elem(), GetLinksLinkCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTenanciesFilterInput)(nil)).Elem(), GetOrganizationTenanciesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTenanciesFilterArrayInput)(nil)).Elem(), GetOrganizationTenanciesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollectionInput)(nil)).Elem(), GetOrganizationTenanciesOrganizationTenancyCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollectionArrayInput)(nil)).Elem(), GetOrganizationTenanciesOrganizationTenancyCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollectionItemInput)(nil)).Elem(), GetOrganizationTenanciesOrganizationTenancyCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayInput)(nil)).Elem(), GetOrganizationTenanciesOrganizationTenancyCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsFilterInput)(nil)).Elem(), GetOrganizationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsFilterArrayInput)(nil)).Elem(), GetOrganizationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationCollectionInput)(nil)).Elem(), GetOrganizationsOrganizationCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationCollectionArrayInput)(nil)).Elem(), GetOrganizationsOrganizationCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationCollectionItemInput)(nil)).Elem(), GetOrganizationsOrganizationCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationCollectionItemArrayInput)(nil)).Elem(), GetOrganizationsOrganizationCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecipientInvitationsFilterInput)(nil)).Elem(), GetRecipientInvitationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecipientInvitationsFilterArrayInput)(nil)).Elem(), GetRecipientInvitationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollectionInput)(nil)).Elem(), GetRecipientInvitationsRecipientInvitationCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollectionArrayInput)(nil)).Elem(), GetRecipientInvitationsRecipientInvitationCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollectionItemInput)(nil)).Elem(), GetRecipientInvitationsRecipientInvitationCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecipientInvitationsRecipientInvitationCollectionItemArrayInput)(nil)).Elem(), GetRecipientInvitationsRecipientInvitationCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSenderInvitationsFilterInput)(nil)).Elem(), GetSenderInvitationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSenderInvitationsFilterArrayInput)(nil)).Elem(), GetSenderInvitationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollectionInput)(nil)).Elem(), GetSenderInvitationsSenderInvitationCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollectionArrayInput)(nil)).Elem(), GetSenderInvitationsSenderInvitationCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollectionItemInput)(nil)).Elem(), GetSenderInvitationsSenderInvitationCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSenderInvitationsSenderInvitationCollectionItemArrayInput)(nil)).Elem(), GetSenderInvitationsSenderInvitationCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollectionInput)(nil)).Elem(), GetSubscriptionAvailableRegionsAvailableRegionCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayInput)(nil)).Elem(), GetSubscriptionAvailableRegionsAvailableRegionCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollectionItemInput)(nil)).Elem(), GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayInput)(nil)).Elem(), GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionAvailableRegionsFilterInput)(nil)).Elem(), GetSubscriptionAvailableRegionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionAvailableRegionsFilterArrayInput)(nil)).Elem(), GetSubscriptionAvailableRegionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionLineItemsFilterInput)(nil)).Elem(), GetSubscriptionLineItemsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionLineItemsFilterArrayInput)(nil)).Elem(), GetSubscriptionLineItemsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollectionInput)(nil)).Elem(), GetSubscriptionLineItemsSubscriptionLineItemCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayInput)(nil)).Elem(), GetSubscriptionLineItemsSubscriptionLineItemCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollectionItemInput)(nil)).Elem(), GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayInput)(nil)).Elem(), GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionMappingsFilterInput)(nil)).Elem(), GetSubscriptionMappingsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionMappingsFilterArrayInput)(nil)).Elem(), GetSubscriptionMappingsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollectionInput)(nil)).Elem(), GetSubscriptionMappingsSubscriptionMappingCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollectionArrayInput)(nil)).Elem(), GetSubscriptionMappingsSubscriptionMappingCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollectionItemInput)(nil)).Elem(), GetSubscriptionMappingsSubscriptionMappingCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayInput)(nil)).Elem(), GetSubscriptionMappingsSubscriptionMappingCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionPromotionInput)(nil)).Elem(), GetSubscriptionPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionPromotionArrayInput)(nil)).Elem(), GetSubscriptionPromotionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionSkusInput)(nil)).Elem(), GetSubscriptionSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionSkusArrayInput)(nil)).Elem(), GetSubscriptionSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsFilterInput)(nil)).Elem(), GetSubscriptionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsFilterArrayInput)(nil)).Elem(), GetSubscriptionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemPromotionInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionItemPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemPromotionArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionItemPromotionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemSkusInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionItemSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionCollectionItemSkusArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionCollectionItemSkusArray{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionLineItemsFilterOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionLineItemsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionPromotionOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionPromotionArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionSkusOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionSkusArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemPromotionArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsAssignedSubscriptionCollectionItemSkusArrayOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsFilterOutput{})
	pulumi.RegisterOutputType(GetAssignedSubscriptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDomainGovernancesDomainGovernanceCollectionOutput{})
	pulumi.RegisterOutputType(GetDomainGovernancesDomainGovernanceCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainGovernancesDomainGovernanceCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDomainGovernancesDomainGovernanceCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDomainGovernancesFilterOutput{})
	pulumi.RegisterOutputType(GetDomainGovernancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainCollectionOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsFilterOutput{})
	pulumi.RegisterOutputType(GetDomainsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLinksFilterOutput{})
	pulumi.RegisterOutputType(GetLinksFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLinksLinkCollectionOutput{})
	pulumi.RegisterOutputType(GetLinksLinkCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetLinksLinkCollectionItemOutput{})
	pulumi.RegisterOutputType(GetLinksLinkCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationTenanciesFilterOutput{})
	pulumi.RegisterOutputType(GetOrganizationTenanciesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationTenanciesOrganizationTenancyCollectionOutput{})
	pulumi.RegisterOutputType(GetOrganizationTenanciesOrganizationTenancyCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationTenanciesOrganizationTenancyCollectionItemOutput{})
	pulumi.RegisterOutputType(GetOrganizationTenanciesOrganizationTenancyCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsFilterOutput{})
	pulumi.RegisterOutputType(GetOrganizationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationCollectionOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationCollectionItemOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetRecipientInvitationsFilterOutput{})
	pulumi.RegisterOutputType(GetRecipientInvitationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRecipientInvitationsRecipientInvitationCollectionOutput{})
	pulumi.RegisterOutputType(GetRecipientInvitationsRecipientInvitationCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetRecipientInvitationsRecipientInvitationCollectionItemOutput{})
	pulumi.RegisterOutputType(GetRecipientInvitationsRecipientInvitationCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSenderInvitationsFilterOutput{})
	pulumi.RegisterOutputType(GetSenderInvitationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSenderInvitationsSenderInvitationCollectionOutput{})
	pulumi.RegisterOutputType(GetSenderInvitationsSenderInvitationCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSenderInvitationsSenderInvitationCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSenderInvitationsSenderInvitationCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionAvailableRegionsAvailableRegionCollectionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionAvailableRegionsAvailableRegionCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionAvailableRegionsAvailableRegionCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSubscriptionAvailableRegionsAvailableRegionCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionAvailableRegionsFilterOutput{})
	pulumi.RegisterOutputType(GetSubscriptionAvailableRegionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionLineItemsFilterOutput{})
	pulumi.RegisterOutputType(GetSubscriptionLineItemsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionLineItemsSubscriptionLineItemCollectionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionLineItemsSubscriptionLineItemCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionLineItemsSubscriptionLineItemCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSubscriptionLineItemsSubscriptionLineItemCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionMappingsFilterOutput{})
	pulumi.RegisterOutputType(GetSubscriptionMappingsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionMappingsSubscriptionMappingCollectionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionMappingsSubscriptionMappingCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionMappingsSubscriptionMappingCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSubscriptionMappingsSubscriptionMappingCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionPromotionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionPromotionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionSkusOutput{})
	pulumi.RegisterOutputType(GetSubscriptionSkusArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsFilterOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionItemPromotionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionItemPromotionArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionItemSkusOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionCollectionItemSkusArrayOutput{})
}
