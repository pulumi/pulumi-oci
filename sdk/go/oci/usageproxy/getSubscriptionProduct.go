// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package usageproxy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Subscription Product resource in Oracle Cloud Infrastructure Usage Proxy service.
//
// Provides product information that is specific to a reward usage period and its usage details.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/usageproxy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := usageproxy.GetSubscriptionProduct(ctx, &usageproxy.GetSubscriptionProductArgs{
//				SubscriptionId: testSubscription.Id,
//				TenancyId:      testTenancy.Id,
//				UsagePeriodKey: subscriptionProductUsagePeriodKey,
//				Producttype:    pulumi.StringRef(subscriptionProductProducttype),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscriptionProduct(ctx *pulumi.Context, args *GetSubscriptionProductArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionProductResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionProductResult
	err := ctx.Invoke("oci:UsageProxy/getSubscriptionProduct:getSubscriptionProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionProduct.
type GetSubscriptionProductArgs struct {
	// The field to specify the type of product.
	Producttype *string `pulumi:"producttype"`
	// The subscription ID for which rewards information is requested for.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
	// The SPM Identifier for the usage period.
	UsagePeriodKey string `pulumi:"usagePeriodKey"`
}

// A collection of values returned by getSubscriptionProduct.
type GetSubscriptionProductResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of product rewards summaries.
	Items          []GetSubscriptionProductItem `pulumi:"items"`
	Producttype    *string                      `pulumi:"producttype"`
	SubscriptionId string                       `pulumi:"subscriptionId"`
	TenancyId      string                       `pulumi:"tenancyId"`
	UsagePeriodKey string                       `pulumi:"usagePeriodKey"`
}

func GetSubscriptionProductOutput(ctx *pulumi.Context, args GetSubscriptionProductOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionProductResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSubscriptionProductResultOutput, error) {
			args := v.(GetSubscriptionProductArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:UsageProxy/getSubscriptionProduct:getSubscriptionProduct", args, GetSubscriptionProductResultOutput{}, options).(GetSubscriptionProductResultOutput), nil
		}).(GetSubscriptionProductResultOutput)
}

// A collection of arguments for invoking getSubscriptionProduct.
type GetSubscriptionProductOutputArgs struct {
	// The field to specify the type of product.
	Producttype pulumi.StringPtrInput `pulumi:"producttype"`
	// The subscription ID for which rewards information is requested for.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
	// The SPM Identifier for the usage period.
	UsagePeriodKey pulumi.StringInput `pulumi:"usagePeriodKey"`
}

func (GetSubscriptionProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionProductArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionProduct.
type GetSubscriptionProductResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionProductResult)(nil)).Elem()
}

func (o GetSubscriptionProductResultOutput) ToGetSubscriptionProductResultOutput() GetSubscriptionProductResultOutput {
	return o
}

func (o GetSubscriptionProductResultOutput) ToGetSubscriptionProductResultOutputWithContext(ctx context.Context) GetSubscriptionProductResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionProductResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of product rewards summaries.
func (o GetSubscriptionProductResultOutput) Items() GetSubscriptionProductItemArrayOutput {
	return o.ApplyT(func(v GetSubscriptionProductResult) []GetSubscriptionProductItem { return v.Items }).(GetSubscriptionProductItemArrayOutput)
}

func (o GetSubscriptionProductResultOutput) Producttype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionProductResult) *string { return v.Producttype }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionProductResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o GetSubscriptionProductResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

func (o GetSubscriptionProductResultOutput) UsagePeriodKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductResult) string { return v.UsagePeriodKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionProductResultOutput{})
}
