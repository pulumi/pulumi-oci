// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package usageproxy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Subscription Products in Oracle Cloud Infrastructure Usage Proxy service.
//
// Provides product information that is specific to a reward usage period and its usage details.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/usageproxy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := usageproxy.GetSubscriptionProducts(ctx, &usageproxy.GetSubscriptionProductsArgs{
//				SubscriptionId: testSubscription.Id,
//				TenancyId:      testTenancy.Id,
//				UsagePeriodKey: subscriptionProductUsagePeriodKey,
//				Producttype:    pulumi.StringRef(subscriptionProductProducttype),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscriptionProducts(ctx *pulumi.Context, args *GetSubscriptionProductsArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionProductsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionProductsResult
	err := ctx.Invoke("oci:UsageProxy/getSubscriptionProducts:getSubscriptionProducts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionProducts.
type GetSubscriptionProductsArgs struct {
	Filters []GetSubscriptionProductsFilter `pulumi:"filters"`
	// The field to specify the type of product.
	Producttype *string `pulumi:"producttype"`
	// The subscription ID for which rewards information is requested for.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
	// The SPM Identifier for the usage period.
	UsagePeriodKey string `pulumi:"usagePeriodKey"`
}

// A collection of values returned by getSubscriptionProducts.
type GetSubscriptionProductsResult struct {
	Filters []GetSubscriptionProductsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of product_collection.
	ProductCollections []GetSubscriptionProductsProductCollection `pulumi:"productCollections"`
	Producttype        *string                                    `pulumi:"producttype"`
	SubscriptionId     string                                     `pulumi:"subscriptionId"`
	TenancyId          string                                     `pulumi:"tenancyId"`
	UsagePeriodKey     string                                     `pulumi:"usagePeriodKey"`
}

func GetSubscriptionProductsOutput(ctx *pulumi.Context, args GetSubscriptionProductsOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionProductsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSubscriptionProductsResultOutput, error) {
			args := v.(GetSubscriptionProductsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:UsageProxy/getSubscriptionProducts:getSubscriptionProducts", args, GetSubscriptionProductsResultOutput{}, options).(GetSubscriptionProductsResultOutput), nil
		}).(GetSubscriptionProductsResultOutput)
}

// A collection of arguments for invoking getSubscriptionProducts.
type GetSubscriptionProductsOutputArgs struct {
	Filters GetSubscriptionProductsFilterArrayInput `pulumi:"filters"`
	// The field to specify the type of product.
	Producttype pulumi.StringPtrInput `pulumi:"producttype"`
	// The subscription ID for which rewards information is requested for.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
	// The SPM Identifier for the usage period.
	UsagePeriodKey pulumi.StringInput `pulumi:"usagePeriodKey"`
}

func (GetSubscriptionProductsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionProductsArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionProducts.
type GetSubscriptionProductsResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionProductsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionProductsResult)(nil)).Elem()
}

func (o GetSubscriptionProductsResultOutput) ToGetSubscriptionProductsResultOutput() GetSubscriptionProductsResultOutput {
	return o
}

func (o GetSubscriptionProductsResultOutput) ToGetSubscriptionProductsResultOutputWithContext(ctx context.Context) GetSubscriptionProductsResultOutput {
	return o
}

func (o GetSubscriptionProductsResultOutput) Filters() GetSubscriptionProductsFilterArrayOutput {
	return o.ApplyT(func(v GetSubscriptionProductsResult) []GetSubscriptionProductsFilter { return v.Filters }).(GetSubscriptionProductsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionProductsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of product_collection.
func (o GetSubscriptionProductsResultOutput) ProductCollections() GetSubscriptionProductsProductCollectionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionProductsResult) []GetSubscriptionProductsProductCollection {
		return v.ProductCollections
	}).(GetSubscriptionProductsProductCollectionArrayOutput)
}

func (o GetSubscriptionProductsResultOutput) Producttype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionProductsResult) *string { return v.Producttype }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionProductsResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductsResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o GetSubscriptionProductsResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductsResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

func (o GetSubscriptionProductsResultOutput) UsagePeriodKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionProductsResult) string { return v.UsagePeriodKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionProductsResultOutput{})
}
