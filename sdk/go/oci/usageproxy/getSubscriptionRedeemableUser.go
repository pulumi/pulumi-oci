// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package usageproxy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Subscription Redeemable User resource in Oracle Cloud Infrastructure Usage Proxy service.
//
// Provides the email IDs of users that can redeem rewards for the given subscription ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/UsageProxy"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := UsageProxy.GetSubscriptionRedeemableUser(ctx, &usageproxy.GetSubscriptionRedeemableUserArgs{
// 			SubscriptionId: oci_ons_subscription.Test_subscription.Id,
// 			TenancyId:      oci_identity_tenancy.Test_tenancy.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupSubscriptionRedeemableUser(ctx *pulumi.Context, args *LookupSubscriptionRedeemableUserArgs, opts ...pulumi.InvokeOption) (*LookupSubscriptionRedeemableUserResult, error) {
	var rv LookupSubscriptionRedeemableUserResult
	err := ctx.Invoke("oci:UsageProxy/getSubscriptionRedeemableUser:getSubscriptionRedeemableUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionRedeemableUser.
type LookupSubscriptionRedeemableUserArgs struct {
	// The subscription ID for which rewards information is requested for.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
}

// A collection of values returned by getSubscriptionRedeemableUser.
type LookupSubscriptionRedeemableUserResult struct {
	Id string `pulumi:"id"`
	// The list of user email IDs that can redeem rewards.
	Items          []GetSubscriptionRedeemableUserItem `pulumi:"items"`
	SubscriptionId string                              `pulumi:"subscriptionId"`
	TenancyId      string                              `pulumi:"tenancyId"`
	UserId         string                              `pulumi:"userId"`
}

func LookupSubscriptionRedeemableUserOutput(ctx *pulumi.Context, args LookupSubscriptionRedeemableUserOutputArgs, opts ...pulumi.InvokeOption) LookupSubscriptionRedeemableUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubscriptionRedeemableUserResult, error) {
			args := v.(LookupSubscriptionRedeemableUserArgs)
			r, err := LookupSubscriptionRedeemableUser(ctx, &args, opts...)
			var s LookupSubscriptionRedeemableUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubscriptionRedeemableUserResultOutput)
}

// A collection of arguments for invoking getSubscriptionRedeemableUser.
type LookupSubscriptionRedeemableUserOutputArgs struct {
	// The subscription ID for which rewards information is requested for.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
}

func (LookupSubscriptionRedeemableUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionRedeemableUserArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionRedeemableUser.
type LookupSubscriptionRedeemableUserResultOutput struct{ *pulumi.OutputState }

func (LookupSubscriptionRedeemableUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionRedeemableUserResult)(nil)).Elem()
}

func (o LookupSubscriptionRedeemableUserResultOutput) ToLookupSubscriptionRedeemableUserResultOutput() LookupSubscriptionRedeemableUserResultOutput {
	return o
}

func (o LookupSubscriptionRedeemableUserResultOutput) ToLookupSubscriptionRedeemableUserResultOutputWithContext(ctx context.Context) LookupSubscriptionRedeemableUserResultOutput {
	return o
}

func (o LookupSubscriptionRedeemableUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionRedeemableUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of user email IDs that can redeem rewards.
func (o LookupSubscriptionRedeemableUserResultOutput) Items() GetSubscriptionRedeemableUserItemArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionRedeemableUserResult) []GetSubscriptionRedeemableUserItem { return v.Items }).(GetSubscriptionRedeemableUserItemArrayOutput)
}

func (o LookupSubscriptionRedeemableUserResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionRedeemableUserResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o LookupSubscriptionRedeemableUserResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionRedeemableUserResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

func (o LookupSubscriptionRedeemableUserResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionRedeemableUserResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubscriptionRedeemableUserResultOutput{})
}
