// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package usageproxy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Subscription Redeemable Users in Oracle Cloud Infrastructure Usage Proxy service.
//
// Provides the email IDs of users that can redeem rewards for the given subscription ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/UsageProxy"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := UsageProxy.GetSubscriptionRedeemableUsers(ctx, &usageproxy.GetSubscriptionRedeemableUsersArgs{
// 			SubscriptionId: oci_ons_subscription.Test_subscription.Id,
// 			TenancyId:      oci_identity_tenancy.Test_tenancy.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetSubscriptionRedeemableUsers(ctx *pulumi.Context, args *GetSubscriptionRedeemableUsersArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionRedeemableUsersResult, error) {
	var rv GetSubscriptionRedeemableUsersResult
	err := ctx.Invoke("oci:UsageProxy/getSubscriptionRedeemableUsers:getSubscriptionRedeemableUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionRedeemableUsers.
type GetSubscriptionRedeemableUsersArgs struct {
	Filters []GetSubscriptionRedeemableUsersFilter `pulumi:"filters"`
	// The subscription ID for which rewards information is requested for.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
}

// A collection of values returned by getSubscriptionRedeemableUsers.
type GetSubscriptionRedeemableUsersResult struct {
	Filters []GetSubscriptionRedeemableUsersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of redeemable_user_collection.
	RedeemableUserCollections []GetSubscriptionRedeemableUsersRedeemableUserCollection `pulumi:"redeemableUserCollections"`
	SubscriptionId            string                                                   `pulumi:"subscriptionId"`
	TenancyId                 string                                                   `pulumi:"tenancyId"`
}

func GetSubscriptionRedeemableUsersOutput(ctx *pulumi.Context, args GetSubscriptionRedeemableUsersOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionRedeemableUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubscriptionRedeemableUsersResult, error) {
			args := v.(GetSubscriptionRedeemableUsersArgs)
			r, err := GetSubscriptionRedeemableUsers(ctx, &args, opts...)
			var s GetSubscriptionRedeemableUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubscriptionRedeemableUsersResultOutput)
}

// A collection of arguments for invoking getSubscriptionRedeemableUsers.
type GetSubscriptionRedeemableUsersOutputArgs struct {
	Filters GetSubscriptionRedeemableUsersFilterArrayInput `pulumi:"filters"`
	// The subscription ID for which rewards information is requested for.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
}

func (GetSubscriptionRedeemableUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionRedeemableUsersArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionRedeemableUsers.
type GetSubscriptionRedeemableUsersResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionRedeemableUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionRedeemableUsersResult)(nil)).Elem()
}

func (o GetSubscriptionRedeemableUsersResultOutput) ToGetSubscriptionRedeemableUsersResultOutput() GetSubscriptionRedeemableUsersResultOutput {
	return o
}

func (o GetSubscriptionRedeemableUsersResultOutput) ToGetSubscriptionRedeemableUsersResultOutputWithContext(ctx context.Context) GetSubscriptionRedeemableUsersResultOutput {
	return o
}

func (o GetSubscriptionRedeemableUsersResultOutput) Filters() GetSubscriptionRedeemableUsersFilterArrayOutput {
	return o.ApplyT(func(v GetSubscriptionRedeemableUsersResult) []GetSubscriptionRedeemableUsersFilter { return v.Filters }).(GetSubscriptionRedeemableUsersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionRedeemableUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionRedeemableUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of redeemable_user_collection.
func (o GetSubscriptionRedeemableUsersResultOutput) RedeemableUserCollections() GetSubscriptionRedeemableUsersRedeemableUserCollectionArrayOutput {
	return o.ApplyT(func(v GetSubscriptionRedeemableUsersResult) []GetSubscriptionRedeemableUsersRedeemableUserCollection {
		return v.RedeemableUserCollections
	}).(GetSubscriptionRedeemableUsersRedeemableUserCollectionArrayOutput)
}

func (o GetSubscriptionRedeemableUsersResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionRedeemableUsersResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o GetSubscriptionRedeemableUsersResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionRedeemableUsersResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionRedeemableUsersResultOutput{})
}
