// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package usageproxy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Subscription Reward resource in Oracle Cloud Infrastructure Usage Proxy service.
//
// Returns the list of rewards for a subscription ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/UsageProxy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := UsageProxy.GetSubscriptionReward(ctx, &usageproxy.GetSubscriptionRewardArgs{
//				SubscriptionId: testSubscription.Id,
//				TenancyId:      testTenancy.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscriptionReward(ctx *pulumi.Context, args *GetSubscriptionRewardArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionRewardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionRewardResult
	err := ctx.Invoke("oci:UsageProxy/getSubscriptionReward:getSubscriptionReward", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionReward.
type GetSubscriptionRewardArgs struct {
	// The subscription ID for which rewards information is requested for.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId string `pulumi:"tenancyId"`
}

// A collection of values returned by getSubscriptionReward.
type GetSubscriptionRewardResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The monthly summary of rewards.
	Items []GetSubscriptionRewardItem `pulumi:"items"`
	// The entitlement ID from MQS, which is the same as the subcription ID.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The overall monthly reward summary.
	Summaries []GetSubscriptionRewardSummary `pulumi:"summaries"`
	// The OCID of the target tenancy.
	TenancyId string `pulumi:"tenancyId"`
}

func GetSubscriptionRewardOutput(ctx *pulumi.Context, args GetSubscriptionRewardOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionRewardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubscriptionRewardResultOutput, error) {
			args := v.(GetSubscriptionRewardArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetSubscriptionRewardResult
			secret, err := ctx.InvokePackageRaw("oci:UsageProxy/getSubscriptionReward:getSubscriptionReward", args, &rv, "", opts...)
			if err != nil {
				return GetSubscriptionRewardResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetSubscriptionRewardResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetSubscriptionRewardResultOutput), nil
			}
			return output, nil
		}).(GetSubscriptionRewardResultOutput)
}

// A collection of arguments for invoking getSubscriptionReward.
type GetSubscriptionRewardOutputArgs struct {
	// The subscription ID for which rewards information is requested for.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The OCID of the tenancy.
	TenancyId pulumi.StringInput `pulumi:"tenancyId"`
}

func (GetSubscriptionRewardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionRewardArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionReward.
type GetSubscriptionRewardResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionRewardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionRewardResult)(nil)).Elem()
}

func (o GetSubscriptionRewardResultOutput) ToGetSubscriptionRewardResultOutput() GetSubscriptionRewardResultOutput {
	return o
}

func (o GetSubscriptionRewardResultOutput) ToGetSubscriptionRewardResultOutputWithContext(ctx context.Context) GetSubscriptionRewardResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionRewardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionRewardResult) string { return v.Id }).(pulumi.StringOutput)
}

// The monthly summary of rewards.
func (o GetSubscriptionRewardResultOutput) Items() GetSubscriptionRewardItemArrayOutput {
	return o.ApplyT(func(v GetSubscriptionRewardResult) []GetSubscriptionRewardItem { return v.Items }).(GetSubscriptionRewardItemArrayOutput)
}

// The entitlement ID from MQS, which is the same as the subcription ID.
func (o GetSubscriptionRewardResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionRewardResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The overall monthly reward summary.
func (o GetSubscriptionRewardResultOutput) Summaries() GetSubscriptionRewardSummaryArrayOutput {
	return o.ApplyT(func(v GetSubscriptionRewardResult) []GetSubscriptionRewardSummary { return v.Summaries }).(GetSubscriptionRewardSummaryArrayOutput)
}

// The OCID of the target tenancy.
func (o GetSubscriptionRewardResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionRewardResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionRewardResultOutput{})
}
