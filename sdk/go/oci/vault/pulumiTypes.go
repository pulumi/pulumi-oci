// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vault

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type SecretRotationConfig struct {
	// (Updatable) Enables auto rotation, when set to true rotationInterval must be set.
	IsScheduledRotationEnabled *bool `pulumi:"isScheduledRotationEnabled"`
	// (Updatable) The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
	RotationInterval *string `pulumi:"rotationInterval"`
	// (Updatable) The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
	TargetSystemDetails SecretRotationConfigTargetSystemDetails `pulumi:"targetSystemDetails"`
}

// SecretRotationConfigInput is an input type that accepts SecretRotationConfigArgs and SecretRotationConfigOutput values.
// You can construct a concrete instance of `SecretRotationConfigInput` via:
//
//	SecretRotationConfigArgs{...}
type SecretRotationConfigInput interface {
	pulumi.Input

	ToSecretRotationConfigOutput() SecretRotationConfigOutput
	ToSecretRotationConfigOutputWithContext(context.Context) SecretRotationConfigOutput
}

type SecretRotationConfigArgs struct {
	// (Updatable) Enables auto rotation, when set to true rotationInterval must be set.
	IsScheduledRotationEnabled pulumi.BoolPtrInput `pulumi:"isScheduledRotationEnabled"`
	// (Updatable) The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
	RotationInterval pulumi.StringPtrInput `pulumi:"rotationInterval"`
	// (Updatable) The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
	TargetSystemDetails SecretRotationConfigTargetSystemDetailsInput `pulumi:"targetSystemDetails"`
}

func (SecretRotationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationConfig)(nil)).Elem()
}

func (i SecretRotationConfigArgs) ToSecretRotationConfigOutput() SecretRotationConfigOutput {
	return i.ToSecretRotationConfigOutputWithContext(context.Background())
}

func (i SecretRotationConfigArgs) ToSecretRotationConfigOutputWithContext(ctx context.Context) SecretRotationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationConfigOutput)
}

func (i SecretRotationConfigArgs) ToSecretRotationConfigPtrOutput() SecretRotationConfigPtrOutput {
	return i.ToSecretRotationConfigPtrOutputWithContext(context.Background())
}

func (i SecretRotationConfigArgs) ToSecretRotationConfigPtrOutputWithContext(ctx context.Context) SecretRotationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationConfigOutput).ToSecretRotationConfigPtrOutputWithContext(ctx)
}

// SecretRotationConfigPtrInput is an input type that accepts SecretRotationConfigArgs, SecretRotationConfigPtr and SecretRotationConfigPtrOutput values.
// You can construct a concrete instance of `SecretRotationConfigPtrInput` via:
//
//	        SecretRotationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretRotationConfigPtrInput interface {
	pulumi.Input

	ToSecretRotationConfigPtrOutput() SecretRotationConfigPtrOutput
	ToSecretRotationConfigPtrOutputWithContext(context.Context) SecretRotationConfigPtrOutput
}

type secretRotationConfigPtrType SecretRotationConfigArgs

func SecretRotationConfigPtr(v *SecretRotationConfigArgs) SecretRotationConfigPtrInput {
	return (*secretRotationConfigPtrType)(v)
}

func (*secretRotationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationConfig)(nil)).Elem()
}

func (i *secretRotationConfigPtrType) ToSecretRotationConfigPtrOutput() SecretRotationConfigPtrOutput {
	return i.ToSecretRotationConfigPtrOutputWithContext(context.Background())
}

func (i *secretRotationConfigPtrType) ToSecretRotationConfigPtrOutputWithContext(ctx context.Context) SecretRotationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationConfigPtrOutput)
}

type SecretRotationConfigOutput struct{ *pulumi.OutputState }

func (SecretRotationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationConfig)(nil)).Elem()
}

func (o SecretRotationConfigOutput) ToSecretRotationConfigOutput() SecretRotationConfigOutput {
	return o
}

func (o SecretRotationConfigOutput) ToSecretRotationConfigOutputWithContext(ctx context.Context) SecretRotationConfigOutput {
	return o
}

func (o SecretRotationConfigOutput) ToSecretRotationConfigPtrOutput() SecretRotationConfigPtrOutput {
	return o.ToSecretRotationConfigPtrOutputWithContext(context.Background())
}

func (o SecretRotationConfigOutput) ToSecretRotationConfigPtrOutputWithContext(ctx context.Context) SecretRotationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationConfig) *SecretRotationConfig {
		return &v
	}).(SecretRotationConfigPtrOutput)
}

// (Updatable) Enables auto rotation, when set to true rotationInterval must be set.
func (o SecretRotationConfigOutput) IsScheduledRotationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretRotationConfig) *bool { return v.IsScheduledRotationEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
func (o SecretRotationConfigOutput) RotationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotationConfig) *string { return v.RotationInterval }).(pulumi.StringPtrOutput)
}

// (Updatable) The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
func (o SecretRotationConfigOutput) TargetSystemDetails() SecretRotationConfigTargetSystemDetailsOutput {
	return o.ApplyT(func(v SecretRotationConfig) SecretRotationConfigTargetSystemDetails { return v.TargetSystemDetails }).(SecretRotationConfigTargetSystemDetailsOutput)
}

type SecretRotationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationConfig)(nil)).Elem()
}

func (o SecretRotationConfigPtrOutput) ToSecretRotationConfigPtrOutput() SecretRotationConfigPtrOutput {
	return o
}

func (o SecretRotationConfigPtrOutput) ToSecretRotationConfigPtrOutputWithContext(ctx context.Context) SecretRotationConfigPtrOutput {
	return o
}

func (o SecretRotationConfigPtrOutput) Elem() SecretRotationConfigOutput {
	return o.ApplyT(func(v *SecretRotationConfig) SecretRotationConfig {
		if v != nil {
			return *v
		}
		var ret SecretRotationConfig
		return ret
	}).(SecretRotationConfigOutput)
}

// (Updatable) Enables auto rotation, when set to true rotationInterval must be set.
func (o SecretRotationConfigPtrOutput) IsScheduledRotationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretRotationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledRotationEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
func (o SecretRotationConfigPtrOutput) RotationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationConfig) *string {
		if v == nil {
			return nil
		}
		return v.RotationInterval
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
func (o SecretRotationConfigPtrOutput) TargetSystemDetails() SecretRotationConfigTargetSystemDetailsPtrOutput {
	return o.ApplyT(func(v *SecretRotationConfig) *SecretRotationConfigTargetSystemDetails {
		if v == nil {
			return nil
		}
		return &v.TargetSystemDetails
	}).(SecretRotationConfigTargetSystemDetailsPtrOutput)
}

type SecretRotationConfigTargetSystemDetails struct {
	// (Updatable) The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
	AdbId *string `pulumi:"adbId"`
	// (Updatable) The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
	FunctionId *string `pulumi:"functionId"`
	// (Updatable) Unique identifier of the target system that Vault Secret connects to.
	TargetSystemType string `pulumi:"targetSystemType"`
}

// SecretRotationConfigTargetSystemDetailsInput is an input type that accepts SecretRotationConfigTargetSystemDetailsArgs and SecretRotationConfigTargetSystemDetailsOutput values.
// You can construct a concrete instance of `SecretRotationConfigTargetSystemDetailsInput` via:
//
//	SecretRotationConfigTargetSystemDetailsArgs{...}
type SecretRotationConfigTargetSystemDetailsInput interface {
	pulumi.Input

	ToSecretRotationConfigTargetSystemDetailsOutput() SecretRotationConfigTargetSystemDetailsOutput
	ToSecretRotationConfigTargetSystemDetailsOutputWithContext(context.Context) SecretRotationConfigTargetSystemDetailsOutput
}

type SecretRotationConfigTargetSystemDetailsArgs struct {
	// (Updatable) The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
	AdbId pulumi.StringPtrInput `pulumi:"adbId"`
	// (Updatable) The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
	FunctionId pulumi.StringPtrInput `pulumi:"functionId"`
	// (Updatable) Unique identifier of the target system that Vault Secret connects to.
	TargetSystemType pulumi.StringInput `pulumi:"targetSystemType"`
}

func (SecretRotationConfigTargetSystemDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationConfigTargetSystemDetails)(nil)).Elem()
}

func (i SecretRotationConfigTargetSystemDetailsArgs) ToSecretRotationConfigTargetSystemDetailsOutput() SecretRotationConfigTargetSystemDetailsOutput {
	return i.ToSecretRotationConfigTargetSystemDetailsOutputWithContext(context.Background())
}

func (i SecretRotationConfigTargetSystemDetailsArgs) ToSecretRotationConfigTargetSystemDetailsOutputWithContext(ctx context.Context) SecretRotationConfigTargetSystemDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationConfigTargetSystemDetailsOutput)
}

func (i SecretRotationConfigTargetSystemDetailsArgs) ToSecretRotationConfigTargetSystemDetailsPtrOutput() SecretRotationConfigTargetSystemDetailsPtrOutput {
	return i.ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(context.Background())
}

func (i SecretRotationConfigTargetSystemDetailsArgs) ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(ctx context.Context) SecretRotationConfigTargetSystemDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationConfigTargetSystemDetailsOutput).ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(ctx)
}

// SecretRotationConfigTargetSystemDetailsPtrInput is an input type that accepts SecretRotationConfigTargetSystemDetailsArgs, SecretRotationConfigTargetSystemDetailsPtr and SecretRotationConfigTargetSystemDetailsPtrOutput values.
// You can construct a concrete instance of `SecretRotationConfigTargetSystemDetailsPtrInput` via:
//
//	        SecretRotationConfigTargetSystemDetailsArgs{...}
//
//	or:
//
//	        nil
type SecretRotationConfigTargetSystemDetailsPtrInput interface {
	pulumi.Input

	ToSecretRotationConfigTargetSystemDetailsPtrOutput() SecretRotationConfigTargetSystemDetailsPtrOutput
	ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(context.Context) SecretRotationConfigTargetSystemDetailsPtrOutput
}

type secretRotationConfigTargetSystemDetailsPtrType SecretRotationConfigTargetSystemDetailsArgs

func SecretRotationConfigTargetSystemDetailsPtr(v *SecretRotationConfigTargetSystemDetailsArgs) SecretRotationConfigTargetSystemDetailsPtrInput {
	return (*secretRotationConfigTargetSystemDetailsPtrType)(v)
}

func (*secretRotationConfigTargetSystemDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationConfigTargetSystemDetails)(nil)).Elem()
}

func (i *secretRotationConfigTargetSystemDetailsPtrType) ToSecretRotationConfigTargetSystemDetailsPtrOutput() SecretRotationConfigTargetSystemDetailsPtrOutput {
	return i.ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(context.Background())
}

func (i *secretRotationConfigTargetSystemDetailsPtrType) ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(ctx context.Context) SecretRotationConfigTargetSystemDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationConfigTargetSystemDetailsPtrOutput)
}

type SecretRotationConfigTargetSystemDetailsOutput struct{ *pulumi.OutputState }

func (SecretRotationConfigTargetSystemDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationConfigTargetSystemDetails)(nil)).Elem()
}

func (o SecretRotationConfigTargetSystemDetailsOutput) ToSecretRotationConfigTargetSystemDetailsOutput() SecretRotationConfigTargetSystemDetailsOutput {
	return o
}

func (o SecretRotationConfigTargetSystemDetailsOutput) ToSecretRotationConfigTargetSystemDetailsOutputWithContext(ctx context.Context) SecretRotationConfigTargetSystemDetailsOutput {
	return o
}

func (o SecretRotationConfigTargetSystemDetailsOutput) ToSecretRotationConfigTargetSystemDetailsPtrOutput() SecretRotationConfigTargetSystemDetailsPtrOutput {
	return o.ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(context.Background())
}

func (o SecretRotationConfigTargetSystemDetailsOutput) ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(ctx context.Context) SecretRotationConfigTargetSystemDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationConfigTargetSystemDetails) *SecretRotationConfigTargetSystemDetails {
		return &v
	}).(SecretRotationConfigTargetSystemDetailsPtrOutput)
}

// (Updatable) The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
func (o SecretRotationConfigTargetSystemDetailsOutput) AdbId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotationConfigTargetSystemDetails) *string { return v.AdbId }).(pulumi.StringPtrOutput)
}

// (Updatable) The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
func (o SecretRotationConfigTargetSystemDetailsOutput) FunctionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotationConfigTargetSystemDetails) *string { return v.FunctionId }).(pulumi.StringPtrOutput)
}

// (Updatable) Unique identifier of the target system that Vault Secret connects to.
func (o SecretRotationConfigTargetSystemDetailsOutput) TargetSystemType() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationConfigTargetSystemDetails) string { return v.TargetSystemType }).(pulumi.StringOutput)
}

type SecretRotationConfigTargetSystemDetailsPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationConfigTargetSystemDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationConfigTargetSystemDetails)(nil)).Elem()
}

func (o SecretRotationConfigTargetSystemDetailsPtrOutput) ToSecretRotationConfigTargetSystemDetailsPtrOutput() SecretRotationConfigTargetSystemDetailsPtrOutput {
	return o
}

func (o SecretRotationConfigTargetSystemDetailsPtrOutput) ToSecretRotationConfigTargetSystemDetailsPtrOutputWithContext(ctx context.Context) SecretRotationConfigTargetSystemDetailsPtrOutput {
	return o
}

func (o SecretRotationConfigTargetSystemDetailsPtrOutput) Elem() SecretRotationConfigTargetSystemDetailsOutput {
	return o.ApplyT(func(v *SecretRotationConfigTargetSystemDetails) SecretRotationConfigTargetSystemDetails {
		if v != nil {
			return *v
		}
		var ret SecretRotationConfigTargetSystemDetails
		return ret
	}).(SecretRotationConfigTargetSystemDetailsOutput)
}

// (Updatable) The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
func (o SecretRotationConfigTargetSystemDetailsPtrOutput) AdbId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationConfigTargetSystemDetails) *string {
		if v == nil {
			return nil
		}
		return v.AdbId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
func (o SecretRotationConfigTargetSystemDetailsPtrOutput) FunctionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationConfigTargetSystemDetails) *string {
		if v == nil {
			return nil
		}
		return v.FunctionId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Unique identifier of the target system that Vault Secret connects to.
func (o SecretRotationConfigTargetSystemDetailsPtrOutput) TargetSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationConfigTargetSystemDetails) *string {
		if v == nil {
			return nil
		}
		return &v.TargetSystemType
	}).(pulumi.StringPtrOutput)
}

type SecretSecretContent struct {
	// (Updatable) The base64-encoded content of the secret.
	Content *string `pulumi:"content"`
	// (Updatable) The base64-encoded content of the secret.
	ContentType string `pulumi:"contentType"`
	// (Updatable) Names should be unique within a secret. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name *string `pulumi:"name"`
	// (Updatable) The rotation state of the secret content. The default is `CURRENT`, meaning that the secret is currently in use. A secret version that you mark as `PENDING` is staged and available for use, but you don't yet want to rotate it into current, active use. For example, you might create or update a secret and mark its rotation state as `PENDING` if you haven't yet updated the secret on the target system. When creating a secret, only the value `CURRENT` is applicable, although the value `LATEST` is also automatically applied. When updating a secret, you can specify a version's rotation state as either `CURRENT` or `PENDING`.
	Stage *string `pulumi:"stage"`
}

// SecretSecretContentInput is an input type that accepts SecretSecretContentArgs and SecretSecretContentOutput values.
// You can construct a concrete instance of `SecretSecretContentInput` via:
//
//	SecretSecretContentArgs{...}
type SecretSecretContentInput interface {
	pulumi.Input

	ToSecretSecretContentOutput() SecretSecretContentOutput
	ToSecretSecretContentOutputWithContext(context.Context) SecretSecretContentOutput
}

type SecretSecretContentArgs struct {
	// (Updatable) The base64-encoded content of the secret.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// (Updatable) The base64-encoded content of the secret.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// (Updatable) Names should be unique within a secret. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) The rotation state of the secret content. The default is `CURRENT`, meaning that the secret is currently in use. A secret version that you mark as `PENDING` is staged and available for use, but you don't yet want to rotate it into current, active use. For example, you might create or update a secret and mark its rotation state as `PENDING` if you haven't yet updated the secret on the target system. When creating a secret, only the value `CURRENT` is applicable, although the value `LATEST` is also automatically applied. When updating a secret, you can specify a version's rotation state as either `CURRENT` or `PENDING`.
	Stage pulumi.StringPtrInput `pulumi:"stage"`
}

func (SecretSecretContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSecretContent)(nil)).Elem()
}

func (i SecretSecretContentArgs) ToSecretSecretContentOutput() SecretSecretContentOutput {
	return i.ToSecretSecretContentOutputWithContext(context.Background())
}

func (i SecretSecretContentArgs) ToSecretSecretContentOutputWithContext(ctx context.Context) SecretSecretContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretContentOutput)
}

func (i SecretSecretContentArgs) ToSecretSecretContentPtrOutput() SecretSecretContentPtrOutput {
	return i.ToSecretSecretContentPtrOutputWithContext(context.Background())
}

func (i SecretSecretContentArgs) ToSecretSecretContentPtrOutputWithContext(ctx context.Context) SecretSecretContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretContentOutput).ToSecretSecretContentPtrOutputWithContext(ctx)
}

// SecretSecretContentPtrInput is an input type that accepts SecretSecretContentArgs, SecretSecretContentPtr and SecretSecretContentPtrOutput values.
// You can construct a concrete instance of `SecretSecretContentPtrInput` via:
//
//	        SecretSecretContentArgs{...}
//
//	or:
//
//	        nil
type SecretSecretContentPtrInput interface {
	pulumi.Input

	ToSecretSecretContentPtrOutput() SecretSecretContentPtrOutput
	ToSecretSecretContentPtrOutputWithContext(context.Context) SecretSecretContentPtrOutput
}

type secretSecretContentPtrType SecretSecretContentArgs

func SecretSecretContentPtr(v *SecretSecretContentArgs) SecretSecretContentPtrInput {
	return (*secretSecretContentPtrType)(v)
}

func (*secretSecretContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSecretContent)(nil)).Elem()
}

func (i *secretSecretContentPtrType) ToSecretSecretContentPtrOutput() SecretSecretContentPtrOutput {
	return i.ToSecretSecretContentPtrOutputWithContext(context.Background())
}

func (i *secretSecretContentPtrType) ToSecretSecretContentPtrOutputWithContext(ctx context.Context) SecretSecretContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretContentPtrOutput)
}

type SecretSecretContentOutput struct{ *pulumi.OutputState }

func (SecretSecretContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSecretContent)(nil)).Elem()
}

func (o SecretSecretContentOutput) ToSecretSecretContentOutput() SecretSecretContentOutput {
	return o
}

func (o SecretSecretContentOutput) ToSecretSecretContentOutputWithContext(ctx context.Context) SecretSecretContentOutput {
	return o
}

func (o SecretSecretContentOutput) ToSecretSecretContentPtrOutput() SecretSecretContentPtrOutput {
	return o.ToSecretSecretContentPtrOutputWithContext(context.Background())
}

func (o SecretSecretContentOutput) ToSecretSecretContentPtrOutputWithContext(ctx context.Context) SecretSecretContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSecretContent) *SecretSecretContent {
		return &v
	}).(SecretSecretContentPtrOutput)
}

// (Updatable) The base64-encoded content of the secret.
func (o SecretSecretContentOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSecretContent) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// (Updatable) The base64-encoded content of the secret.
func (o SecretSecretContentOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSecretContent) string { return v.ContentType }).(pulumi.StringOutput)
}

// (Updatable) Names should be unique within a secret. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
func (o SecretSecretContentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSecretContent) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) The rotation state of the secret content. The default is `CURRENT`, meaning that the secret is currently in use. A secret version that you mark as `PENDING` is staged and available for use, but you don't yet want to rotate it into current, active use. For example, you might create or update a secret and mark its rotation state as `PENDING` if you haven't yet updated the secret on the target system. When creating a secret, only the value `CURRENT` is applicable, although the value `LATEST` is also automatically applied. When updating a secret, you can specify a version's rotation state as either `CURRENT` or `PENDING`.
func (o SecretSecretContentOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSecretContent) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

type SecretSecretContentPtrOutput struct{ *pulumi.OutputState }

func (SecretSecretContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSecretContent)(nil)).Elem()
}

func (o SecretSecretContentPtrOutput) ToSecretSecretContentPtrOutput() SecretSecretContentPtrOutput {
	return o
}

func (o SecretSecretContentPtrOutput) ToSecretSecretContentPtrOutputWithContext(ctx context.Context) SecretSecretContentPtrOutput {
	return o
}

func (o SecretSecretContentPtrOutput) Elem() SecretSecretContentOutput {
	return o.ApplyT(func(v *SecretSecretContent) SecretSecretContent {
		if v != nil {
			return *v
		}
		var ret SecretSecretContent
		return ret
	}).(SecretSecretContentOutput)
}

// (Updatable) The base64-encoded content of the secret.
func (o SecretSecretContentPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSecretContent) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The base64-encoded content of the secret.
func (o SecretSecretContentPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSecretContent) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Names should be unique within a secret. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
func (o SecretSecretContentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSecretContent) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The rotation state of the secret content. The default is `CURRENT`, meaning that the secret is currently in use. A secret version that you mark as `PENDING` is staged and available for use, but you don't yet want to rotate it into current, active use. For example, you might create or update a secret and mark its rotation state as `PENDING` if you haven't yet updated the secret on the target system. When creating a secret, only the value `CURRENT` is applicable, although the value `LATEST` is also automatically applied. When updating a secret, you can specify a version's rotation state as either `CURRENT` or `PENDING`.
func (o SecretSecretContentPtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSecretContent) *string {
		if v == nil {
			return nil
		}
		return v.Stage
	}).(pulumi.StringPtrOutput)
}

type SecretSecretRule struct {
	// (Updatable) A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
	IsEnforcedOnDeletedSecretVersions *bool `pulumi:"isEnforcedOnDeletedSecretVersions"`
	// (Updatable) A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
	IsSecretContentRetrievalBlockedOnExpiry *bool `pulumi:"isSecretContentRetrievalBlockedOnExpiry"`
	// (Updatable) The type of rule, which either controls when the secret contents expire or whether they can be reused.
	RuleType string `pulumi:"ruleType"`
	// (Updatable) A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
	SecretVersionExpiryInterval *string `pulumi:"secretVersionExpiryInterval"`
	// (Updatable) An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
	TimeOfAbsoluteExpiry *string `pulumi:"timeOfAbsoluteExpiry"`
}

// SecretSecretRuleInput is an input type that accepts SecretSecretRuleArgs and SecretSecretRuleOutput values.
// You can construct a concrete instance of `SecretSecretRuleInput` via:
//
//	SecretSecretRuleArgs{...}
type SecretSecretRuleInput interface {
	pulumi.Input

	ToSecretSecretRuleOutput() SecretSecretRuleOutput
	ToSecretSecretRuleOutputWithContext(context.Context) SecretSecretRuleOutput
}

type SecretSecretRuleArgs struct {
	// (Updatable) A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
	IsEnforcedOnDeletedSecretVersions pulumi.BoolPtrInput `pulumi:"isEnforcedOnDeletedSecretVersions"`
	// (Updatable) A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
	IsSecretContentRetrievalBlockedOnExpiry pulumi.BoolPtrInput `pulumi:"isSecretContentRetrievalBlockedOnExpiry"`
	// (Updatable) The type of rule, which either controls when the secret contents expire or whether they can be reused.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// (Updatable) A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
	SecretVersionExpiryInterval pulumi.StringPtrInput `pulumi:"secretVersionExpiryInterval"`
	// (Updatable) An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
	TimeOfAbsoluteExpiry pulumi.StringPtrInput `pulumi:"timeOfAbsoluteExpiry"`
}

func (SecretSecretRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSecretRule)(nil)).Elem()
}

func (i SecretSecretRuleArgs) ToSecretSecretRuleOutput() SecretSecretRuleOutput {
	return i.ToSecretSecretRuleOutputWithContext(context.Background())
}

func (i SecretSecretRuleArgs) ToSecretSecretRuleOutputWithContext(ctx context.Context) SecretSecretRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretRuleOutput)
}

// SecretSecretRuleArrayInput is an input type that accepts SecretSecretRuleArray and SecretSecretRuleArrayOutput values.
// You can construct a concrete instance of `SecretSecretRuleArrayInput` via:
//
//	SecretSecretRuleArray{ SecretSecretRuleArgs{...} }
type SecretSecretRuleArrayInput interface {
	pulumi.Input

	ToSecretSecretRuleArrayOutput() SecretSecretRuleArrayOutput
	ToSecretSecretRuleArrayOutputWithContext(context.Context) SecretSecretRuleArrayOutput
}

type SecretSecretRuleArray []SecretSecretRuleInput

func (SecretSecretRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretSecretRule)(nil)).Elem()
}

func (i SecretSecretRuleArray) ToSecretSecretRuleArrayOutput() SecretSecretRuleArrayOutput {
	return i.ToSecretSecretRuleArrayOutputWithContext(context.Background())
}

func (i SecretSecretRuleArray) ToSecretSecretRuleArrayOutputWithContext(ctx context.Context) SecretSecretRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretRuleArrayOutput)
}

type SecretSecretRuleOutput struct{ *pulumi.OutputState }

func (SecretSecretRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSecretRule)(nil)).Elem()
}

func (o SecretSecretRuleOutput) ToSecretSecretRuleOutput() SecretSecretRuleOutput {
	return o
}

func (o SecretSecretRuleOutput) ToSecretSecretRuleOutputWithContext(ctx context.Context) SecretSecretRuleOutput {
	return o
}

// (Updatable) A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
func (o SecretSecretRuleOutput) IsEnforcedOnDeletedSecretVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSecretRule) *bool { return v.IsEnforcedOnDeletedSecretVersions }).(pulumi.BoolPtrOutput)
}

// (Updatable) A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
func (o SecretSecretRuleOutput) IsSecretContentRetrievalBlockedOnExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSecretRule) *bool { return v.IsSecretContentRetrievalBlockedOnExpiry }).(pulumi.BoolPtrOutput)
}

// (Updatable) The type of rule, which either controls when the secret contents expire or whether they can be reused.
func (o SecretSecretRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSecretRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// (Updatable) A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
func (o SecretSecretRuleOutput) SecretVersionExpiryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSecretRule) *string { return v.SecretVersionExpiryInterval }).(pulumi.StringPtrOutput)
}

// (Updatable) An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
func (o SecretSecretRuleOutput) TimeOfAbsoluteExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSecretRule) *string { return v.TimeOfAbsoluteExpiry }).(pulumi.StringPtrOutput)
}

type SecretSecretRuleArrayOutput struct{ *pulumi.OutputState }

func (SecretSecretRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretSecretRule)(nil)).Elem()
}

func (o SecretSecretRuleArrayOutput) ToSecretSecretRuleArrayOutput() SecretSecretRuleArrayOutput {
	return o
}

func (o SecretSecretRuleArrayOutput) ToSecretSecretRuleArrayOutputWithContext(ctx context.Context) SecretSecretRuleArrayOutput {
	return o
}

func (o SecretSecretRuleArrayOutput) Index(i pulumi.IntInput) SecretSecretRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretSecretRule {
		return vs[0].([]SecretSecretRule)[vs[1].(int)]
	}).(SecretSecretRuleOutput)
}

type GetSecretRotationConfig struct {
	// Enables auto rotation, when set to true rotationInterval must be set.
	IsScheduledRotationEnabled bool `pulumi:"isScheduledRotationEnabled"`
	// The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
	RotationInterval string `pulumi:"rotationInterval"`
	// The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
	TargetSystemDetails []GetSecretRotationConfigTargetSystemDetail `pulumi:"targetSystemDetails"`
}

// GetSecretRotationConfigInput is an input type that accepts GetSecretRotationConfigArgs and GetSecretRotationConfigOutput values.
// You can construct a concrete instance of `GetSecretRotationConfigInput` via:
//
//	GetSecretRotationConfigArgs{...}
type GetSecretRotationConfigInput interface {
	pulumi.Input

	ToGetSecretRotationConfigOutput() GetSecretRotationConfigOutput
	ToGetSecretRotationConfigOutputWithContext(context.Context) GetSecretRotationConfigOutput
}

type GetSecretRotationConfigArgs struct {
	// Enables auto rotation, when set to true rotationInterval must be set.
	IsScheduledRotationEnabled pulumi.BoolInput `pulumi:"isScheduledRotationEnabled"`
	// The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
	RotationInterval pulumi.StringInput `pulumi:"rotationInterval"`
	// The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
	TargetSystemDetails GetSecretRotationConfigTargetSystemDetailArrayInput `pulumi:"targetSystemDetails"`
}

func (GetSecretRotationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotationConfig)(nil)).Elem()
}

func (i GetSecretRotationConfigArgs) ToGetSecretRotationConfigOutput() GetSecretRotationConfigOutput {
	return i.ToGetSecretRotationConfigOutputWithContext(context.Background())
}

func (i GetSecretRotationConfigArgs) ToGetSecretRotationConfigOutputWithContext(ctx context.Context) GetSecretRotationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationConfigOutput)
}

// GetSecretRotationConfigArrayInput is an input type that accepts GetSecretRotationConfigArray and GetSecretRotationConfigArrayOutput values.
// You can construct a concrete instance of `GetSecretRotationConfigArrayInput` via:
//
//	GetSecretRotationConfigArray{ GetSecretRotationConfigArgs{...} }
type GetSecretRotationConfigArrayInput interface {
	pulumi.Input

	ToGetSecretRotationConfigArrayOutput() GetSecretRotationConfigArrayOutput
	ToGetSecretRotationConfigArrayOutputWithContext(context.Context) GetSecretRotationConfigArrayOutput
}

type GetSecretRotationConfigArray []GetSecretRotationConfigInput

func (GetSecretRotationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotationConfig)(nil)).Elem()
}

func (i GetSecretRotationConfigArray) ToGetSecretRotationConfigArrayOutput() GetSecretRotationConfigArrayOutput {
	return i.ToGetSecretRotationConfigArrayOutputWithContext(context.Background())
}

func (i GetSecretRotationConfigArray) ToGetSecretRotationConfigArrayOutputWithContext(ctx context.Context) GetSecretRotationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationConfigArrayOutput)
}

type GetSecretRotationConfigOutput struct{ *pulumi.OutputState }

func (GetSecretRotationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotationConfig)(nil)).Elem()
}

func (o GetSecretRotationConfigOutput) ToGetSecretRotationConfigOutput() GetSecretRotationConfigOutput {
	return o
}

func (o GetSecretRotationConfigOutput) ToGetSecretRotationConfigOutputWithContext(ctx context.Context) GetSecretRotationConfigOutput {
	return o
}

// Enables auto rotation, when set to true rotationInterval must be set.
func (o GetSecretRotationConfigOutput) IsScheduledRotationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecretRotationConfig) bool { return v.IsScheduledRotationEnabled }).(pulumi.BoolOutput)
}

// The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
func (o GetSecretRotationConfigOutput) RotationInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretRotationConfig) string { return v.RotationInterval }).(pulumi.StringOutput)
}

// The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
func (o GetSecretRotationConfigOutput) TargetSystemDetails() GetSecretRotationConfigTargetSystemDetailArrayOutput {
	return o.ApplyT(func(v GetSecretRotationConfig) []GetSecretRotationConfigTargetSystemDetail {
		return v.TargetSystemDetails
	}).(GetSecretRotationConfigTargetSystemDetailArrayOutput)
}

type GetSecretRotationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetSecretRotationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotationConfig)(nil)).Elem()
}

func (o GetSecretRotationConfigArrayOutput) ToGetSecretRotationConfigArrayOutput() GetSecretRotationConfigArrayOutput {
	return o
}

func (o GetSecretRotationConfigArrayOutput) ToGetSecretRotationConfigArrayOutputWithContext(ctx context.Context) GetSecretRotationConfigArrayOutput {
	return o
}

func (o GetSecretRotationConfigArrayOutput) Index(i pulumi.IntInput) GetSecretRotationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretRotationConfig {
		return vs[0].([]GetSecretRotationConfig)[vs[1].(int)]
	}).(GetSecretRotationConfigOutput)
}

type GetSecretRotationConfigTargetSystemDetail struct {
	// The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
	AdbId string `pulumi:"adbId"`
	// The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
	FunctionId string `pulumi:"functionId"`
	// Unique identifier of the target system that Vault Secret connects to.
	TargetSystemType string `pulumi:"targetSystemType"`
}

// GetSecretRotationConfigTargetSystemDetailInput is an input type that accepts GetSecretRotationConfigTargetSystemDetailArgs and GetSecretRotationConfigTargetSystemDetailOutput values.
// You can construct a concrete instance of `GetSecretRotationConfigTargetSystemDetailInput` via:
//
//	GetSecretRotationConfigTargetSystemDetailArgs{...}
type GetSecretRotationConfigTargetSystemDetailInput interface {
	pulumi.Input

	ToGetSecretRotationConfigTargetSystemDetailOutput() GetSecretRotationConfigTargetSystemDetailOutput
	ToGetSecretRotationConfigTargetSystemDetailOutputWithContext(context.Context) GetSecretRotationConfigTargetSystemDetailOutput
}

type GetSecretRotationConfigTargetSystemDetailArgs struct {
	// The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
	AdbId pulumi.StringInput `pulumi:"adbId"`
	// The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// Unique identifier of the target system that Vault Secret connects to.
	TargetSystemType pulumi.StringInput `pulumi:"targetSystemType"`
}

func (GetSecretRotationConfigTargetSystemDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (i GetSecretRotationConfigTargetSystemDetailArgs) ToGetSecretRotationConfigTargetSystemDetailOutput() GetSecretRotationConfigTargetSystemDetailOutput {
	return i.ToGetSecretRotationConfigTargetSystemDetailOutputWithContext(context.Background())
}

func (i GetSecretRotationConfigTargetSystemDetailArgs) ToGetSecretRotationConfigTargetSystemDetailOutputWithContext(ctx context.Context) GetSecretRotationConfigTargetSystemDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationConfigTargetSystemDetailOutput)
}

// GetSecretRotationConfigTargetSystemDetailArrayInput is an input type that accepts GetSecretRotationConfigTargetSystemDetailArray and GetSecretRotationConfigTargetSystemDetailArrayOutput values.
// You can construct a concrete instance of `GetSecretRotationConfigTargetSystemDetailArrayInput` via:
//
//	GetSecretRotationConfigTargetSystemDetailArray{ GetSecretRotationConfigTargetSystemDetailArgs{...} }
type GetSecretRotationConfigTargetSystemDetailArrayInput interface {
	pulumi.Input

	ToGetSecretRotationConfigTargetSystemDetailArrayOutput() GetSecretRotationConfigTargetSystemDetailArrayOutput
	ToGetSecretRotationConfigTargetSystemDetailArrayOutputWithContext(context.Context) GetSecretRotationConfigTargetSystemDetailArrayOutput
}

type GetSecretRotationConfigTargetSystemDetailArray []GetSecretRotationConfigTargetSystemDetailInput

func (GetSecretRotationConfigTargetSystemDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (i GetSecretRotationConfigTargetSystemDetailArray) ToGetSecretRotationConfigTargetSystemDetailArrayOutput() GetSecretRotationConfigTargetSystemDetailArrayOutput {
	return i.ToGetSecretRotationConfigTargetSystemDetailArrayOutputWithContext(context.Background())
}

func (i GetSecretRotationConfigTargetSystemDetailArray) ToGetSecretRotationConfigTargetSystemDetailArrayOutputWithContext(ctx context.Context) GetSecretRotationConfigTargetSystemDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationConfigTargetSystemDetailArrayOutput)
}

type GetSecretRotationConfigTargetSystemDetailOutput struct{ *pulumi.OutputState }

func (GetSecretRotationConfigTargetSystemDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (o GetSecretRotationConfigTargetSystemDetailOutput) ToGetSecretRotationConfigTargetSystemDetailOutput() GetSecretRotationConfigTargetSystemDetailOutput {
	return o
}

func (o GetSecretRotationConfigTargetSystemDetailOutput) ToGetSecretRotationConfigTargetSystemDetailOutputWithContext(ctx context.Context) GetSecretRotationConfigTargetSystemDetailOutput {
	return o
}

// The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
func (o GetSecretRotationConfigTargetSystemDetailOutput) AdbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretRotationConfigTargetSystemDetail) string { return v.AdbId }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
func (o GetSecretRotationConfigTargetSystemDetailOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretRotationConfigTargetSystemDetail) string { return v.FunctionId }).(pulumi.StringOutput)
}

// Unique identifier of the target system that Vault Secret connects to.
func (o GetSecretRotationConfigTargetSystemDetailOutput) TargetSystemType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretRotationConfigTargetSystemDetail) string { return v.TargetSystemType }).(pulumi.StringOutput)
}

type GetSecretRotationConfigTargetSystemDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSecretRotationConfigTargetSystemDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (o GetSecretRotationConfigTargetSystemDetailArrayOutput) ToGetSecretRotationConfigTargetSystemDetailArrayOutput() GetSecretRotationConfigTargetSystemDetailArrayOutput {
	return o
}

func (o GetSecretRotationConfigTargetSystemDetailArrayOutput) ToGetSecretRotationConfigTargetSystemDetailArrayOutputWithContext(ctx context.Context) GetSecretRotationConfigTargetSystemDetailArrayOutput {
	return o
}

func (o GetSecretRotationConfigTargetSystemDetailArrayOutput) Index(i pulumi.IntInput) GetSecretRotationConfigTargetSystemDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretRotationConfigTargetSystemDetail {
		return vs[0].([]GetSecretRotationConfigTargetSystemDetail)[vs[1].(int)]
	}).(GetSecretRotationConfigTargetSystemDetailOutput)
}

type GetSecretSecretContent struct {
	Content     string `pulumi:"content"`
	ContentType string `pulumi:"contentType"`
	Name        string `pulumi:"name"`
	Stage       string `pulumi:"stage"`
}

// GetSecretSecretContentInput is an input type that accepts GetSecretSecretContentArgs and GetSecretSecretContentOutput values.
// You can construct a concrete instance of `GetSecretSecretContentInput` via:
//
//	GetSecretSecretContentArgs{...}
type GetSecretSecretContentInput interface {
	pulumi.Input

	ToGetSecretSecretContentOutput() GetSecretSecretContentOutput
	ToGetSecretSecretContentOutputWithContext(context.Context) GetSecretSecretContentOutput
}

type GetSecretSecretContentArgs struct {
	Content     pulumi.StringInput `pulumi:"content"`
	ContentType pulumi.StringInput `pulumi:"contentType"`
	Name        pulumi.StringInput `pulumi:"name"`
	Stage       pulumi.StringInput `pulumi:"stage"`
}

func (GetSecretSecretContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSecretContent)(nil)).Elem()
}

func (i GetSecretSecretContentArgs) ToGetSecretSecretContentOutput() GetSecretSecretContentOutput {
	return i.ToGetSecretSecretContentOutputWithContext(context.Background())
}

func (i GetSecretSecretContentArgs) ToGetSecretSecretContentOutputWithContext(ctx context.Context) GetSecretSecretContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSecretContentOutput)
}

// GetSecretSecretContentArrayInput is an input type that accepts GetSecretSecretContentArray and GetSecretSecretContentArrayOutput values.
// You can construct a concrete instance of `GetSecretSecretContentArrayInput` via:
//
//	GetSecretSecretContentArray{ GetSecretSecretContentArgs{...} }
type GetSecretSecretContentArrayInput interface {
	pulumi.Input

	ToGetSecretSecretContentArrayOutput() GetSecretSecretContentArrayOutput
	ToGetSecretSecretContentArrayOutputWithContext(context.Context) GetSecretSecretContentArrayOutput
}

type GetSecretSecretContentArray []GetSecretSecretContentInput

func (GetSecretSecretContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSecretContent)(nil)).Elem()
}

func (i GetSecretSecretContentArray) ToGetSecretSecretContentArrayOutput() GetSecretSecretContentArrayOutput {
	return i.ToGetSecretSecretContentArrayOutputWithContext(context.Background())
}

func (i GetSecretSecretContentArray) ToGetSecretSecretContentArrayOutputWithContext(ctx context.Context) GetSecretSecretContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSecretContentArrayOutput)
}

type GetSecretSecretContentOutput struct{ *pulumi.OutputState }

func (GetSecretSecretContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSecretContent)(nil)).Elem()
}

func (o GetSecretSecretContentOutput) ToGetSecretSecretContentOutput() GetSecretSecretContentOutput {
	return o
}

func (o GetSecretSecretContentOutput) ToGetSecretSecretContentOutputWithContext(ctx context.Context) GetSecretSecretContentOutput {
	return o
}

func (o GetSecretSecretContentOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSecretContent) string { return v.Content }).(pulumi.StringOutput)
}

func (o GetSecretSecretContentOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSecretContent) string { return v.ContentType }).(pulumi.StringOutput)
}

func (o GetSecretSecretContentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSecretContent) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecretSecretContentOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSecretContent) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSecretSecretContentArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSecretContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSecretContent)(nil)).Elem()
}

func (o GetSecretSecretContentArrayOutput) ToGetSecretSecretContentArrayOutput() GetSecretSecretContentArrayOutput {
	return o
}

func (o GetSecretSecretContentArrayOutput) ToGetSecretSecretContentArrayOutputWithContext(ctx context.Context) GetSecretSecretContentArrayOutput {
	return o
}

func (o GetSecretSecretContentArrayOutput) Index(i pulumi.IntInput) GetSecretSecretContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSecretContent {
		return vs[0].([]GetSecretSecretContent)[vs[1].(int)]
	}).(GetSecretSecretContentOutput)
}

type GetSecretSecretRule struct {
	// A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
	IsEnforcedOnDeletedSecretVersions bool `pulumi:"isEnforcedOnDeletedSecretVersions"`
	// A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
	IsSecretContentRetrievalBlockedOnExpiry bool `pulumi:"isSecretContentRetrievalBlockedOnExpiry"`
	// The type of rule, which either controls when the secret contents expire or whether they can be reused.
	RuleType string `pulumi:"ruleType"`
	// A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
	SecretVersionExpiryInterval string `pulumi:"secretVersionExpiryInterval"`
	// An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
	TimeOfAbsoluteExpiry string `pulumi:"timeOfAbsoluteExpiry"`
}

// GetSecretSecretRuleInput is an input type that accepts GetSecretSecretRuleArgs and GetSecretSecretRuleOutput values.
// You can construct a concrete instance of `GetSecretSecretRuleInput` via:
//
//	GetSecretSecretRuleArgs{...}
type GetSecretSecretRuleInput interface {
	pulumi.Input

	ToGetSecretSecretRuleOutput() GetSecretSecretRuleOutput
	ToGetSecretSecretRuleOutputWithContext(context.Context) GetSecretSecretRuleOutput
}

type GetSecretSecretRuleArgs struct {
	// A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
	IsEnforcedOnDeletedSecretVersions pulumi.BoolInput `pulumi:"isEnforcedOnDeletedSecretVersions"`
	// A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
	IsSecretContentRetrievalBlockedOnExpiry pulumi.BoolInput `pulumi:"isSecretContentRetrievalBlockedOnExpiry"`
	// The type of rule, which either controls when the secret contents expire or whether they can be reused.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
	SecretVersionExpiryInterval pulumi.StringInput `pulumi:"secretVersionExpiryInterval"`
	// An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
	TimeOfAbsoluteExpiry pulumi.StringInput `pulumi:"timeOfAbsoluteExpiry"`
}

func (GetSecretSecretRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSecretRule)(nil)).Elem()
}

func (i GetSecretSecretRuleArgs) ToGetSecretSecretRuleOutput() GetSecretSecretRuleOutput {
	return i.ToGetSecretSecretRuleOutputWithContext(context.Background())
}

func (i GetSecretSecretRuleArgs) ToGetSecretSecretRuleOutputWithContext(ctx context.Context) GetSecretSecretRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSecretRuleOutput)
}

// GetSecretSecretRuleArrayInput is an input type that accepts GetSecretSecretRuleArray and GetSecretSecretRuleArrayOutput values.
// You can construct a concrete instance of `GetSecretSecretRuleArrayInput` via:
//
//	GetSecretSecretRuleArray{ GetSecretSecretRuleArgs{...} }
type GetSecretSecretRuleArrayInput interface {
	pulumi.Input

	ToGetSecretSecretRuleArrayOutput() GetSecretSecretRuleArrayOutput
	ToGetSecretSecretRuleArrayOutputWithContext(context.Context) GetSecretSecretRuleArrayOutput
}

type GetSecretSecretRuleArray []GetSecretSecretRuleInput

func (GetSecretSecretRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSecretRule)(nil)).Elem()
}

func (i GetSecretSecretRuleArray) ToGetSecretSecretRuleArrayOutput() GetSecretSecretRuleArrayOutput {
	return i.ToGetSecretSecretRuleArrayOutputWithContext(context.Background())
}

func (i GetSecretSecretRuleArray) ToGetSecretSecretRuleArrayOutputWithContext(ctx context.Context) GetSecretSecretRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSecretRuleArrayOutput)
}

type GetSecretSecretRuleOutput struct{ *pulumi.OutputState }

func (GetSecretSecretRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSecretRule)(nil)).Elem()
}

func (o GetSecretSecretRuleOutput) ToGetSecretSecretRuleOutput() GetSecretSecretRuleOutput {
	return o
}

func (o GetSecretSecretRuleOutput) ToGetSecretSecretRuleOutputWithContext(ctx context.Context) GetSecretSecretRuleOutput {
	return o
}

// A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
func (o GetSecretSecretRuleOutput) IsEnforcedOnDeletedSecretVersions() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecretSecretRule) bool { return v.IsEnforcedOnDeletedSecretVersions }).(pulumi.BoolOutput)
}

// A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
func (o GetSecretSecretRuleOutput) IsSecretContentRetrievalBlockedOnExpiry() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecretSecretRule) bool { return v.IsSecretContentRetrievalBlockedOnExpiry }).(pulumi.BoolOutput)
}

// The type of rule, which either controls when the secret contents expire or whether they can be reused.
func (o GetSecretSecretRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSecretRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
func (o GetSecretSecretRuleOutput) SecretVersionExpiryInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSecretRule) string { return v.SecretVersionExpiryInterval }).(pulumi.StringOutput)
}

// An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
func (o GetSecretSecretRuleOutput) TimeOfAbsoluteExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSecretRule) string { return v.TimeOfAbsoluteExpiry }).(pulumi.StringOutput)
}

type GetSecretSecretRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSecretRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSecretRule)(nil)).Elem()
}

func (o GetSecretSecretRuleArrayOutput) ToGetSecretSecretRuleArrayOutput() GetSecretSecretRuleArrayOutput {
	return o
}

func (o GetSecretSecretRuleArrayOutput) ToGetSecretSecretRuleArrayOutputWithContext(ctx context.Context) GetSecretSecretRuleArrayOutput {
	return o
}

func (o GetSecretSecretRuleArrayOutput) Index(i pulumi.IntInput) GetSecretSecretRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSecretRule {
		return vs[0].([]GetSecretSecretRule)[vs[1].(int)]
	}).(GetSecretSecretRuleOutput)
}

type GetSecretsFilter struct {
	// The secret name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSecretsFilterInput is an input type that accepts GetSecretsFilterArgs and GetSecretsFilterOutput values.
// You can construct a concrete instance of `GetSecretsFilterInput` via:
//
//	GetSecretsFilterArgs{...}
type GetSecretsFilterInput interface {
	pulumi.Input

	ToGetSecretsFilterOutput() GetSecretsFilterOutput
	ToGetSecretsFilterOutputWithContext(context.Context) GetSecretsFilterOutput
}

type GetSecretsFilterArgs struct {
	// The secret name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecretsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsFilter)(nil)).Elem()
}

func (i GetSecretsFilterArgs) ToGetSecretsFilterOutput() GetSecretsFilterOutput {
	return i.ToGetSecretsFilterOutputWithContext(context.Background())
}

func (i GetSecretsFilterArgs) ToGetSecretsFilterOutputWithContext(ctx context.Context) GetSecretsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsFilterOutput)
}

// GetSecretsFilterArrayInput is an input type that accepts GetSecretsFilterArray and GetSecretsFilterArrayOutput values.
// You can construct a concrete instance of `GetSecretsFilterArrayInput` via:
//
//	GetSecretsFilterArray{ GetSecretsFilterArgs{...} }
type GetSecretsFilterArrayInput interface {
	pulumi.Input

	ToGetSecretsFilterArrayOutput() GetSecretsFilterArrayOutput
	ToGetSecretsFilterArrayOutputWithContext(context.Context) GetSecretsFilterArrayOutput
}

type GetSecretsFilterArray []GetSecretsFilterInput

func (GetSecretsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsFilter)(nil)).Elem()
}

func (i GetSecretsFilterArray) ToGetSecretsFilterArrayOutput() GetSecretsFilterArrayOutput {
	return i.ToGetSecretsFilterArrayOutputWithContext(context.Background())
}

func (i GetSecretsFilterArray) ToGetSecretsFilterArrayOutputWithContext(ctx context.Context) GetSecretsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsFilterArrayOutput)
}

type GetSecretsFilterOutput struct{ *pulumi.OutputState }

func (GetSecretsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsFilter)(nil)).Elem()
}

func (o GetSecretsFilterOutput) ToGetSecretsFilterOutput() GetSecretsFilterOutput {
	return o
}

func (o GetSecretsFilterOutput) ToGetSecretsFilterOutputWithContext(ctx context.Context) GetSecretsFilterOutput {
	return o
}

// The secret name.
func (o GetSecretsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecretsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecretsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSecretsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecretsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecretsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsFilter)(nil)).Elem()
}

func (o GetSecretsFilterArrayOutput) ToGetSecretsFilterArrayOutput() GetSecretsFilterArrayOutput {
	return o
}

func (o GetSecretsFilterArrayOutput) ToGetSecretsFilterArrayOutputWithContext(ctx context.Context) GetSecretsFilterArrayOutput {
	return o
}

func (o GetSecretsFilterArrayOutput) Index(i pulumi.IntInput) GetSecretsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretsFilter {
		return vs[0].([]GetSecretsFilter)[vs[1].(int)]
	}).(GetSecretsFilterOutput)
}

type GetSecretsSecret struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The version number of the secret version that's currently in use.
	CurrentVersionNumber string `pulumi:"currentVersionNumber"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A brief description of the secret. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the secret.
	Id string `pulumi:"id"`
	// The OCID of the master encryption key that is used to encrypt the secret. You must specify a symmetric key to encrypt the secret during import to the vault. You cannot encrypt secrets with asymmetric keys. Furthermore, the key must exist in the vault that you specify.
	KeyId string `pulumi:"keyId"`
	// A property indicating when the secret was last rotated successfully, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	LastRotationTime string `pulumi:"lastRotationTime"`
	// Additional information about the current lifecycle state of the secret.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Additional metadata that you can use to provide context about how to use the secret or during rotation or other administrative tasks. For example, for a secret that you use to connect to a database, the additional metadata might specify the connection endpoint and the connection string. Provide additional metadata as key-value pairs.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// A property indicating when the secret is scheduled to be rotated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	NextRotationTime string `pulumi:"nextRotationTime"`
	// Defines the frequency of the rotation and the information about the target system
	RotationConfigs []GetSecretsSecretRotationConfig `pulumi:"rotationConfigs"`
	// Additional information about the status of the secret rotation
	RotationStatus string                          `pulumi:"rotationStatus"`
	SecretContents []GetSecretsSecretSecretContent `pulumi:"secretContents"`
	// The user-friendly name of the secret. Avoid entering confidential information.
	SecretName string `pulumi:"secretName"`
	// A list of rules that control how the secret is used and managed.
	SecretRules []GetSecretsSecretSecretRule `pulumi:"secretRules"`
	// A filter that returns only resources that match the specified lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// A property indicating when the secret was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when the current secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfCurrentVersionExpiry string `pulumi:"timeOfCurrentVersionExpiry"`
	// An optional property indicating when to delete the secret, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The OCID of the vault.
	VaultId string `pulumi:"vaultId"`
}

// GetSecretsSecretInput is an input type that accepts GetSecretsSecretArgs and GetSecretsSecretOutput values.
// You can construct a concrete instance of `GetSecretsSecretInput` via:
//
//	GetSecretsSecretArgs{...}
type GetSecretsSecretInput interface {
	pulumi.Input

	ToGetSecretsSecretOutput() GetSecretsSecretOutput
	ToGetSecretsSecretOutputWithContext(context.Context) GetSecretsSecretOutput
}

type GetSecretsSecretArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The version number of the secret version that's currently in use.
	CurrentVersionNumber pulumi.StringInput `pulumi:"currentVersionNumber"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A brief description of the secret. Avoid entering confidential information.
	Description pulumi.StringInput `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the secret.
	Id pulumi.StringInput `pulumi:"id"`
	// The OCID of the master encryption key that is used to encrypt the secret. You must specify a symmetric key to encrypt the secret during import to the vault. You cannot encrypt secrets with asymmetric keys. Furthermore, the key must exist in the vault that you specify.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// A property indicating when the secret was last rotated successfully, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	LastRotationTime pulumi.StringInput `pulumi:"lastRotationTime"`
	// Additional information about the current lifecycle state of the secret.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Additional metadata that you can use to provide context about how to use the secret or during rotation or other administrative tasks. For example, for a secret that you use to connect to a database, the additional metadata might specify the connection endpoint and the connection string. Provide additional metadata as key-value pairs.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// A property indicating when the secret is scheduled to be rotated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	NextRotationTime pulumi.StringInput `pulumi:"nextRotationTime"`
	// Defines the frequency of the rotation and the information about the target system
	RotationConfigs GetSecretsSecretRotationConfigArrayInput `pulumi:"rotationConfigs"`
	// Additional information about the status of the secret rotation
	RotationStatus pulumi.StringInput                      `pulumi:"rotationStatus"`
	SecretContents GetSecretsSecretSecretContentArrayInput `pulumi:"secretContents"`
	// The user-friendly name of the secret. Avoid entering confidential information.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// A list of rules that control how the secret is used and managed.
	SecretRules GetSecretsSecretSecretRuleArrayInput `pulumi:"secretRules"`
	// A filter that returns only resources that match the specified lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// A property indicating when the secret was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when the current secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfCurrentVersionExpiry pulumi.StringInput `pulumi:"timeOfCurrentVersionExpiry"`
	// An optional property indicating when to delete the secret, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// The OCID of the vault.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (GetSecretsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecret)(nil)).Elem()
}

func (i GetSecretsSecretArgs) ToGetSecretsSecretOutput() GetSecretsSecretOutput {
	return i.ToGetSecretsSecretOutputWithContext(context.Background())
}

func (i GetSecretsSecretArgs) ToGetSecretsSecretOutputWithContext(ctx context.Context) GetSecretsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretOutput)
}

// GetSecretsSecretArrayInput is an input type that accepts GetSecretsSecretArray and GetSecretsSecretArrayOutput values.
// You can construct a concrete instance of `GetSecretsSecretArrayInput` via:
//
//	GetSecretsSecretArray{ GetSecretsSecretArgs{...} }
type GetSecretsSecretArrayInput interface {
	pulumi.Input

	ToGetSecretsSecretArrayOutput() GetSecretsSecretArrayOutput
	ToGetSecretsSecretArrayOutputWithContext(context.Context) GetSecretsSecretArrayOutput
}

type GetSecretsSecretArray []GetSecretsSecretInput

func (GetSecretsSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecret)(nil)).Elem()
}

func (i GetSecretsSecretArray) ToGetSecretsSecretArrayOutput() GetSecretsSecretArrayOutput {
	return i.ToGetSecretsSecretArrayOutputWithContext(context.Background())
}

func (i GetSecretsSecretArray) ToGetSecretsSecretArrayOutputWithContext(ctx context.Context) GetSecretsSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretArrayOutput)
}

type GetSecretsSecretOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecret)(nil)).Elem()
}

func (o GetSecretsSecretOutput) ToGetSecretsSecretOutput() GetSecretsSecretOutput {
	return o
}

func (o GetSecretsSecretOutput) ToGetSecretsSecretOutputWithContext(ctx context.Context) GetSecretsSecretOutput {
	return o
}

// The OCID of the compartment.
func (o GetSecretsSecretOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The version number of the secret version that's currently in use.
func (o GetSecretsSecretOutput) CurrentVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.CurrentVersionNumber }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetSecretsSecretOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecretsSecret) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A brief description of the secret. Avoid entering confidential information.
func (o GetSecretsSecretOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.Description }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetSecretsSecretOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecretsSecret) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the secret.
func (o GetSecretsSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the master encryption key that is used to encrypt the secret. You must specify a symmetric key to encrypt the secret during import to the vault. You cannot encrypt secrets with asymmetric keys. Furthermore, the key must exist in the vault that you specify.
func (o GetSecretsSecretOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.KeyId }).(pulumi.StringOutput)
}

// A property indicating when the secret was last rotated successfully, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetSecretsSecretOutput) LastRotationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.LastRotationTime }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state of the secret.
func (o GetSecretsSecretOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Additional metadata that you can use to provide context about how to use the secret or during rotation or other administrative tasks. For example, for a secret that you use to connect to a database, the additional metadata might specify the connection endpoint and the connection string. Provide additional metadata as key-value pairs.
func (o GetSecretsSecretOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecretsSecret) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// A property indicating when the secret is scheduled to be rotated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetSecretsSecretOutput) NextRotationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.NextRotationTime }).(pulumi.StringOutput)
}

// Defines the frequency of the rotation and the information about the target system
func (o GetSecretsSecretOutput) RotationConfigs() GetSecretsSecretRotationConfigArrayOutput {
	return o.ApplyT(func(v GetSecretsSecret) []GetSecretsSecretRotationConfig { return v.RotationConfigs }).(GetSecretsSecretRotationConfigArrayOutput)
}

// Additional information about the status of the secret rotation
func (o GetSecretsSecretOutput) RotationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.RotationStatus }).(pulumi.StringOutput)
}

func (o GetSecretsSecretOutput) SecretContents() GetSecretsSecretSecretContentArrayOutput {
	return o.ApplyT(func(v GetSecretsSecret) []GetSecretsSecretSecretContent { return v.SecretContents }).(GetSecretsSecretSecretContentArrayOutput)
}

// The user-friendly name of the secret. Avoid entering confidential information.
func (o GetSecretsSecretOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.SecretName }).(pulumi.StringOutput)
}

// A list of rules that control how the secret is used and managed.
func (o GetSecretsSecretOutput) SecretRules() GetSecretsSecretSecretRuleArrayOutput {
	return o.ApplyT(func(v GetSecretsSecret) []GetSecretsSecretSecretRule { return v.SecretRules }).(GetSecretsSecretSecretRuleArrayOutput)
}

// A filter that returns only resources that match the specified lifecycle state. The state value is case-insensitive.
func (o GetSecretsSecretOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.State }).(pulumi.StringOutput)
}

// A property indicating when the secret was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetSecretsSecretOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when the current secret version will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetSecretsSecretOutput) TimeOfCurrentVersionExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.TimeOfCurrentVersionExpiry }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the secret, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetSecretsSecretOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// The OCID of the vault.
func (o GetSecretsSecretOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.VaultId }).(pulumi.StringOutput)
}

type GetSecretsSecretArrayOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecret)(nil)).Elem()
}

func (o GetSecretsSecretArrayOutput) ToGetSecretsSecretArrayOutput() GetSecretsSecretArrayOutput {
	return o
}

func (o GetSecretsSecretArrayOutput) ToGetSecretsSecretArrayOutputWithContext(ctx context.Context) GetSecretsSecretArrayOutput {
	return o
}

func (o GetSecretsSecretArrayOutput) Index(i pulumi.IntInput) GetSecretsSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretsSecret {
		return vs[0].([]GetSecretsSecret)[vs[1].(int)]
	}).(GetSecretsSecretOutput)
}

type GetSecretsSecretRotationConfig struct {
	// Enables auto rotation, when set to true rotationInterval must be set.
	IsScheduledRotationEnabled bool `pulumi:"isScheduledRotationEnabled"`
	// The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
	RotationInterval string `pulumi:"rotationInterval"`
	// The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
	TargetSystemDetails []GetSecretsSecretRotationConfigTargetSystemDetail `pulumi:"targetSystemDetails"`
}

// GetSecretsSecretRotationConfigInput is an input type that accepts GetSecretsSecretRotationConfigArgs and GetSecretsSecretRotationConfigOutput values.
// You can construct a concrete instance of `GetSecretsSecretRotationConfigInput` via:
//
//	GetSecretsSecretRotationConfigArgs{...}
type GetSecretsSecretRotationConfigInput interface {
	pulumi.Input

	ToGetSecretsSecretRotationConfigOutput() GetSecretsSecretRotationConfigOutput
	ToGetSecretsSecretRotationConfigOutputWithContext(context.Context) GetSecretsSecretRotationConfigOutput
}

type GetSecretsSecretRotationConfigArgs struct {
	// Enables auto rotation, when set to true rotationInterval must be set.
	IsScheduledRotationEnabled pulumi.BoolInput `pulumi:"isScheduledRotationEnabled"`
	// The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
	RotationInterval pulumi.StringInput `pulumi:"rotationInterval"`
	// The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
	TargetSystemDetails GetSecretsSecretRotationConfigTargetSystemDetailArrayInput `pulumi:"targetSystemDetails"`
}

func (GetSecretsSecretRotationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretRotationConfig)(nil)).Elem()
}

func (i GetSecretsSecretRotationConfigArgs) ToGetSecretsSecretRotationConfigOutput() GetSecretsSecretRotationConfigOutput {
	return i.ToGetSecretsSecretRotationConfigOutputWithContext(context.Background())
}

func (i GetSecretsSecretRotationConfigArgs) ToGetSecretsSecretRotationConfigOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretRotationConfigOutput)
}

// GetSecretsSecretRotationConfigArrayInput is an input type that accepts GetSecretsSecretRotationConfigArray and GetSecretsSecretRotationConfigArrayOutput values.
// You can construct a concrete instance of `GetSecretsSecretRotationConfigArrayInput` via:
//
//	GetSecretsSecretRotationConfigArray{ GetSecretsSecretRotationConfigArgs{...} }
type GetSecretsSecretRotationConfigArrayInput interface {
	pulumi.Input

	ToGetSecretsSecretRotationConfigArrayOutput() GetSecretsSecretRotationConfigArrayOutput
	ToGetSecretsSecretRotationConfigArrayOutputWithContext(context.Context) GetSecretsSecretRotationConfigArrayOutput
}

type GetSecretsSecretRotationConfigArray []GetSecretsSecretRotationConfigInput

func (GetSecretsSecretRotationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretRotationConfig)(nil)).Elem()
}

func (i GetSecretsSecretRotationConfigArray) ToGetSecretsSecretRotationConfigArrayOutput() GetSecretsSecretRotationConfigArrayOutput {
	return i.ToGetSecretsSecretRotationConfigArrayOutputWithContext(context.Background())
}

func (i GetSecretsSecretRotationConfigArray) ToGetSecretsSecretRotationConfigArrayOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretRotationConfigArrayOutput)
}

type GetSecretsSecretRotationConfigOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretRotationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretRotationConfig)(nil)).Elem()
}

func (o GetSecretsSecretRotationConfigOutput) ToGetSecretsSecretRotationConfigOutput() GetSecretsSecretRotationConfigOutput {
	return o
}

func (o GetSecretsSecretRotationConfigOutput) ToGetSecretsSecretRotationConfigOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigOutput {
	return o
}

// Enables auto rotation, when set to true rotationInterval must be set.
func (o GetSecretsSecretRotationConfigOutput) IsScheduledRotationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecretsSecretRotationConfig) bool { return v.IsScheduledRotationEnabled }).(pulumi.BoolOutput)
}

// The time interval that indicates the frequency for rotating secret data, as described in ISO 8601 format. The minimum value is 1 day and maximum value is 360 days. For example, if you want to set the time interval for rotating a secret data as 30 days, the duration is expressed as "P30D."
func (o GetSecretsSecretRotationConfigOutput) RotationInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretRotationConfig) string { return v.RotationInterval }).(pulumi.StringOutput)
}

// The TargetSystemDetails provides the targetSystem type and type-specific connection metadata
func (o GetSecretsSecretRotationConfigOutput) TargetSystemDetails() GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput {
	return o.ApplyT(func(v GetSecretsSecretRotationConfig) []GetSecretsSecretRotationConfigTargetSystemDetail {
		return v.TargetSystemDetails
	}).(GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput)
}

type GetSecretsSecretRotationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretRotationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretRotationConfig)(nil)).Elem()
}

func (o GetSecretsSecretRotationConfigArrayOutput) ToGetSecretsSecretRotationConfigArrayOutput() GetSecretsSecretRotationConfigArrayOutput {
	return o
}

func (o GetSecretsSecretRotationConfigArrayOutput) ToGetSecretsSecretRotationConfigArrayOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigArrayOutput {
	return o
}

func (o GetSecretsSecretRotationConfigArrayOutput) Index(i pulumi.IntInput) GetSecretsSecretRotationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretsSecretRotationConfig {
		return vs[0].([]GetSecretsSecretRotationConfig)[vs[1].(int)]
	}).(GetSecretsSecretRotationConfigOutput)
}

type GetSecretsSecretRotationConfigTargetSystemDetail struct {
	// The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
	AdbId string `pulumi:"adbId"`
	// The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
	FunctionId string `pulumi:"functionId"`
	// Unique identifier of the target system that Vault Secret connects to.
	TargetSystemType string `pulumi:"targetSystemType"`
}

// GetSecretsSecretRotationConfigTargetSystemDetailInput is an input type that accepts GetSecretsSecretRotationConfigTargetSystemDetailArgs and GetSecretsSecretRotationConfigTargetSystemDetailOutput values.
// You can construct a concrete instance of `GetSecretsSecretRotationConfigTargetSystemDetailInput` via:
//
//	GetSecretsSecretRotationConfigTargetSystemDetailArgs{...}
type GetSecretsSecretRotationConfigTargetSystemDetailInput interface {
	pulumi.Input

	ToGetSecretsSecretRotationConfigTargetSystemDetailOutput() GetSecretsSecretRotationConfigTargetSystemDetailOutput
	ToGetSecretsSecretRotationConfigTargetSystemDetailOutputWithContext(context.Context) GetSecretsSecretRotationConfigTargetSystemDetailOutput
}

type GetSecretsSecretRotationConfigTargetSystemDetailArgs struct {
	// The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
	AdbId pulumi.StringInput `pulumi:"adbId"`
	// The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// Unique identifier of the target system that Vault Secret connects to.
	TargetSystemType pulumi.StringInput `pulumi:"targetSystemType"`
}

func (GetSecretsSecretRotationConfigTargetSystemDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (i GetSecretsSecretRotationConfigTargetSystemDetailArgs) ToGetSecretsSecretRotationConfigTargetSystemDetailOutput() GetSecretsSecretRotationConfigTargetSystemDetailOutput {
	return i.ToGetSecretsSecretRotationConfigTargetSystemDetailOutputWithContext(context.Background())
}

func (i GetSecretsSecretRotationConfigTargetSystemDetailArgs) ToGetSecretsSecretRotationConfigTargetSystemDetailOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigTargetSystemDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretRotationConfigTargetSystemDetailOutput)
}

// GetSecretsSecretRotationConfigTargetSystemDetailArrayInput is an input type that accepts GetSecretsSecretRotationConfigTargetSystemDetailArray and GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput values.
// You can construct a concrete instance of `GetSecretsSecretRotationConfigTargetSystemDetailArrayInput` via:
//
//	GetSecretsSecretRotationConfigTargetSystemDetailArray{ GetSecretsSecretRotationConfigTargetSystemDetailArgs{...} }
type GetSecretsSecretRotationConfigTargetSystemDetailArrayInput interface {
	pulumi.Input

	ToGetSecretsSecretRotationConfigTargetSystemDetailArrayOutput() GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput
	ToGetSecretsSecretRotationConfigTargetSystemDetailArrayOutputWithContext(context.Context) GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput
}

type GetSecretsSecretRotationConfigTargetSystemDetailArray []GetSecretsSecretRotationConfigTargetSystemDetailInput

func (GetSecretsSecretRotationConfigTargetSystemDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (i GetSecretsSecretRotationConfigTargetSystemDetailArray) ToGetSecretsSecretRotationConfigTargetSystemDetailArrayOutput() GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput {
	return i.ToGetSecretsSecretRotationConfigTargetSystemDetailArrayOutputWithContext(context.Background())
}

func (i GetSecretsSecretRotationConfigTargetSystemDetailArray) ToGetSecretsSecretRotationConfigTargetSystemDetailArrayOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput)
}

type GetSecretsSecretRotationConfigTargetSystemDetailOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretRotationConfigTargetSystemDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (o GetSecretsSecretRotationConfigTargetSystemDetailOutput) ToGetSecretsSecretRotationConfigTargetSystemDetailOutput() GetSecretsSecretRotationConfigTargetSystemDetailOutput {
	return o
}

func (o GetSecretsSecretRotationConfigTargetSystemDetailOutput) ToGetSecretsSecretRotationConfigTargetSystemDetailOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigTargetSystemDetailOutput {
	return o
}

// The unique identifier (OCID) for the autonomous database that Vault Secret connects to.
func (o GetSecretsSecretRotationConfigTargetSystemDetailOutput) AdbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretRotationConfigTargetSystemDetail) string { return v.AdbId }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the Oracle Cloud Infrastructure Functions that vault secret connects to.
func (o GetSecretsSecretRotationConfigTargetSystemDetailOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretRotationConfigTargetSystemDetail) string { return v.FunctionId }).(pulumi.StringOutput)
}

// Unique identifier of the target system that Vault Secret connects to.
func (o GetSecretsSecretRotationConfigTargetSystemDetailOutput) TargetSystemType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretRotationConfigTargetSystemDetail) string { return v.TargetSystemType }).(pulumi.StringOutput)
}

type GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretRotationConfigTargetSystemDetail)(nil)).Elem()
}

func (o GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput) ToGetSecretsSecretRotationConfigTargetSystemDetailArrayOutput() GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput {
	return o
}

func (o GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput) ToGetSecretsSecretRotationConfigTargetSystemDetailArrayOutputWithContext(ctx context.Context) GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput {
	return o
}

func (o GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput) Index(i pulumi.IntInput) GetSecretsSecretRotationConfigTargetSystemDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretsSecretRotationConfigTargetSystemDetail {
		return vs[0].([]GetSecretsSecretRotationConfigTargetSystemDetail)[vs[1].(int)]
	}).(GetSecretsSecretRotationConfigTargetSystemDetailOutput)
}

type GetSecretsSecretSecretContent struct {
	Content     string `pulumi:"content"`
	ContentType string `pulumi:"contentType"`
	// The secret name.
	Name  string `pulumi:"name"`
	Stage string `pulumi:"stage"`
}

// GetSecretsSecretSecretContentInput is an input type that accepts GetSecretsSecretSecretContentArgs and GetSecretsSecretSecretContentOutput values.
// You can construct a concrete instance of `GetSecretsSecretSecretContentInput` via:
//
//	GetSecretsSecretSecretContentArgs{...}
type GetSecretsSecretSecretContentInput interface {
	pulumi.Input

	ToGetSecretsSecretSecretContentOutput() GetSecretsSecretSecretContentOutput
	ToGetSecretsSecretSecretContentOutputWithContext(context.Context) GetSecretsSecretSecretContentOutput
}

type GetSecretsSecretSecretContentArgs struct {
	Content     pulumi.StringInput `pulumi:"content"`
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The secret name.
	Name  pulumi.StringInput `pulumi:"name"`
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSecretsSecretSecretContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretSecretContent)(nil)).Elem()
}

func (i GetSecretsSecretSecretContentArgs) ToGetSecretsSecretSecretContentOutput() GetSecretsSecretSecretContentOutput {
	return i.ToGetSecretsSecretSecretContentOutputWithContext(context.Background())
}

func (i GetSecretsSecretSecretContentArgs) ToGetSecretsSecretSecretContentOutputWithContext(ctx context.Context) GetSecretsSecretSecretContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretSecretContentOutput)
}

// GetSecretsSecretSecretContentArrayInput is an input type that accepts GetSecretsSecretSecretContentArray and GetSecretsSecretSecretContentArrayOutput values.
// You can construct a concrete instance of `GetSecretsSecretSecretContentArrayInput` via:
//
//	GetSecretsSecretSecretContentArray{ GetSecretsSecretSecretContentArgs{...} }
type GetSecretsSecretSecretContentArrayInput interface {
	pulumi.Input

	ToGetSecretsSecretSecretContentArrayOutput() GetSecretsSecretSecretContentArrayOutput
	ToGetSecretsSecretSecretContentArrayOutputWithContext(context.Context) GetSecretsSecretSecretContentArrayOutput
}

type GetSecretsSecretSecretContentArray []GetSecretsSecretSecretContentInput

func (GetSecretsSecretSecretContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretSecretContent)(nil)).Elem()
}

func (i GetSecretsSecretSecretContentArray) ToGetSecretsSecretSecretContentArrayOutput() GetSecretsSecretSecretContentArrayOutput {
	return i.ToGetSecretsSecretSecretContentArrayOutputWithContext(context.Background())
}

func (i GetSecretsSecretSecretContentArray) ToGetSecretsSecretSecretContentArrayOutputWithContext(ctx context.Context) GetSecretsSecretSecretContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretSecretContentArrayOutput)
}

type GetSecretsSecretSecretContentOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretSecretContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretSecretContent)(nil)).Elem()
}

func (o GetSecretsSecretSecretContentOutput) ToGetSecretsSecretSecretContentOutput() GetSecretsSecretSecretContentOutput {
	return o
}

func (o GetSecretsSecretSecretContentOutput) ToGetSecretsSecretSecretContentOutputWithContext(ctx context.Context) GetSecretsSecretSecretContentOutput {
	return o
}

func (o GetSecretsSecretSecretContentOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretContent) string { return v.Content }).(pulumi.StringOutput)
}

func (o GetSecretsSecretSecretContentOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretContent) string { return v.ContentType }).(pulumi.StringOutput)
}

// The secret name.
func (o GetSecretsSecretSecretContentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretContent) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecretsSecretSecretContentOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretContent) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSecretsSecretSecretContentArrayOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretSecretContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretSecretContent)(nil)).Elem()
}

func (o GetSecretsSecretSecretContentArrayOutput) ToGetSecretsSecretSecretContentArrayOutput() GetSecretsSecretSecretContentArrayOutput {
	return o
}

func (o GetSecretsSecretSecretContentArrayOutput) ToGetSecretsSecretSecretContentArrayOutputWithContext(ctx context.Context) GetSecretsSecretSecretContentArrayOutput {
	return o
}

func (o GetSecretsSecretSecretContentArrayOutput) Index(i pulumi.IntInput) GetSecretsSecretSecretContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretsSecretSecretContent {
		return vs[0].([]GetSecretsSecretSecretContent)[vs[1].(int)]
	}).(GetSecretsSecretSecretContentOutput)
}

type GetSecretsSecretSecretRule struct {
	// A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
	IsEnforcedOnDeletedSecretVersions bool `pulumi:"isEnforcedOnDeletedSecretVersions"`
	// A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
	IsSecretContentRetrievalBlockedOnExpiry bool `pulumi:"isSecretContentRetrievalBlockedOnExpiry"`
	// The type of rule, which either controls when the secret contents expire or whether they can be reused.
	RuleType string `pulumi:"ruleType"`
	// A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
	SecretVersionExpiryInterval string `pulumi:"secretVersionExpiryInterval"`
	// An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
	TimeOfAbsoluteExpiry string `pulumi:"timeOfAbsoluteExpiry"`
}

// GetSecretsSecretSecretRuleInput is an input type that accepts GetSecretsSecretSecretRuleArgs and GetSecretsSecretSecretRuleOutput values.
// You can construct a concrete instance of `GetSecretsSecretSecretRuleInput` via:
//
//	GetSecretsSecretSecretRuleArgs{...}
type GetSecretsSecretSecretRuleInput interface {
	pulumi.Input

	ToGetSecretsSecretSecretRuleOutput() GetSecretsSecretSecretRuleOutput
	ToGetSecretsSecretSecretRuleOutputWithContext(context.Context) GetSecretsSecretSecretRuleOutput
}

type GetSecretsSecretSecretRuleArgs struct {
	// A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
	IsEnforcedOnDeletedSecretVersions pulumi.BoolInput `pulumi:"isEnforcedOnDeletedSecretVersions"`
	// A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
	IsSecretContentRetrievalBlockedOnExpiry pulumi.BoolInput `pulumi:"isSecretContentRetrievalBlockedOnExpiry"`
	// The type of rule, which either controls when the secret contents expire or whether they can be reused.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
	SecretVersionExpiryInterval pulumi.StringInput `pulumi:"secretVersionExpiryInterval"`
	// An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
	TimeOfAbsoluteExpiry pulumi.StringInput `pulumi:"timeOfAbsoluteExpiry"`
}

func (GetSecretsSecretSecretRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretSecretRule)(nil)).Elem()
}

func (i GetSecretsSecretSecretRuleArgs) ToGetSecretsSecretSecretRuleOutput() GetSecretsSecretSecretRuleOutput {
	return i.ToGetSecretsSecretSecretRuleOutputWithContext(context.Background())
}

func (i GetSecretsSecretSecretRuleArgs) ToGetSecretsSecretSecretRuleOutputWithContext(ctx context.Context) GetSecretsSecretSecretRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretSecretRuleOutput)
}

// GetSecretsSecretSecretRuleArrayInput is an input type that accepts GetSecretsSecretSecretRuleArray and GetSecretsSecretSecretRuleArrayOutput values.
// You can construct a concrete instance of `GetSecretsSecretSecretRuleArrayInput` via:
//
//	GetSecretsSecretSecretRuleArray{ GetSecretsSecretSecretRuleArgs{...} }
type GetSecretsSecretSecretRuleArrayInput interface {
	pulumi.Input

	ToGetSecretsSecretSecretRuleArrayOutput() GetSecretsSecretSecretRuleArrayOutput
	ToGetSecretsSecretSecretRuleArrayOutputWithContext(context.Context) GetSecretsSecretSecretRuleArrayOutput
}

type GetSecretsSecretSecretRuleArray []GetSecretsSecretSecretRuleInput

func (GetSecretsSecretSecretRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretSecretRule)(nil)).Elem()
}

func (i GetSecretsSecretSecretRuleArray) ToGetSecretsSecretSecretRuleArrayOutput() GetSecretsSecretSecretRuleArrayOutput {
	return i.ToGetSecretsSecretSecretRuleArrayOutputWithContext(context.Background())
}

func (i GetSecretsSecretSecretRuleArray) ToGetSecretsSecretSecretRuleArrayOutputWithContext(ctx context.Context) GetSecretsSecretSecretRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretSecretRuleArrayOutput)
}

type GetSecretsSecretSecretRuleOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretSecretRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecretSecretRule)(nil)).Elem()
}

func (o GetSecretsSecretSecretRuleOutput) ToGetSecretsSecretSecretRuleOutput() GetSecretsSecretSecretRuleOutput {
	return o
}

func (o GetSecretsSecretSecretRuleOutput) ToGetSecretsSecretSecretRuleOutputWithContext(ctx context.Context) GetSecretsSecretSecretRuleOutput {
	return o
}

// A property indicating whether the rule is applied even if the secret version with the content you are trying to reuse was deleted.
func (o GetSecretsSecretSecretRuleOutput) IsEnforcedOnDeletedSecretVersions() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretRule) bool { return v.IsEnforcedOnDeletedSecretVersions }).(pulumi.BoolOutput)
}

// A property indicating whether to block retrieval of the secret content, on expiry. The default is false. If the secret has already expired and you would like to retrieve the secret contents, you need to edit the secret rule to disable this property, to allow reading the secret content.
func (o GetSecretsSecretSecretRuleOutput) IsSecretContentRetrievalBlockedOnExpiry() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretRule) bool { return v.IsSecretContentRetrievalBlockedOnExpiry }).(pulumi.BoolOutput)
}

// The type of rule, which either controls when the secret contents expire or whether they can be reused.
func (o GetSecretsSecretSecretRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// A property indicating how long the secret contents will be considered valid, expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format. The secret needs to be updated when the secret content expires. The timer resets after you update the secret contents. The minimum value is 1 day and the maximum value is 90 days for this property. Currently, only intervals expressed in days are supported. For example, pass `P3D` to have the secret version expire every 3 days.
func (o GetSecretsSecretSecretRuleOutput) SecretVersionExpiryInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretRule) string { return v.SecretVersionExpiryInterval }).(pulumi.StringOutput)
}

// An optional property indicating the absolute time when this secret will expire, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. The minimum number of days from current time is 1 day and the maximum number of days from current time is 365 days. Example: `2019-04-03T21:10:29.600Z`
func (o GetSecretsSecretSecretRuleOutput) TimeOfAbsoluteExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecretSecretRule) string { return v.TimeOfAbsoluteExpiry }).(pulumi.StringOutput)
}

type GetSecretsSecretSecretRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretSecretRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecretSecretRule)(nil)).Elem()
}

func (o GetSecretsSecretSecretRuleArrayOutput) ToGetSecretsSecretSecretRuleArrayOutput() GetSecretsSecretSecretRuleArrayOutput {
	return o
}

func (o GetSecretsSecretSecretRuleArrayOutput) ToGetSecretsSecretSecretRuleArrayOutputWithContext(ctx context.Context) GetSecretsSecretSecretRuleArrayOutput {
	return o
}

func (o GetSecretsSecretSecretRuleArrayOutput) Index(i pulumi.IntInput) GetSecretsSecretSecretRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretsSecretSecretRule {
		return vs[0].([]GetSecretsSecretSecretRule)[vs[1].(int)]
	}).(GetSecretsSecretSecretRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationConfigInput)(nil)).Elem(), SecretRotationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationConfigPtrInput)(nil)).Elem(), SecretRotationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationConfigTargetSystemDetailsInput)(nil)).Elem(), SecretRotationConfigTargetSystemDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationConfigTargetSystemDetailsPtrInput)(nil)).Elem(), SecretRotationConfigTargetSystemDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSecretContentInput)(nil)).Elem(), SecretSecretContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSecretContentPtrInput)(nil)).Elem(), SecretSecretContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSecretRuleInput)(nil)).Elem(), SecretSecretRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSecretRuleArrayInput)(nil)).Elem(), SecretSecretRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretRotationConfigInput)(nil)).Elem(), GetSecretRotationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretRotationConfigArrayInput)(nil)).Elem(), GetSecretRotationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretRotationConfigTargetSystemDetailInput)(nil)).Elem(), GetSecretRotationConfigTargetSystemDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretRotationConfigTargetSystemDetailArrayInput)(nil)).Elem(), GetSecretRotationConfigTargetSystemDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSecretContentInput)(nil)).Elem(), GetSecretSecretContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSecretContentArrayInput)(nil)).Elem(), GetSecretSecretContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSecretRuleInput)(nil)).Elem(), GetSecretSecretRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSecretRuleArrayInput)(nil)).Elem(), GetSecretSecretRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsFilterInput)(nil)).Elem(), GetSecretsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsFilterArrayInput)(nil)).Elem(), GetSecretsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretInput)(nil)).Elem(), GetSecretsSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretArrayInput)(nil)).Elem(), GetSecretsSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretRotationConfigInput)(nil)).Elem(), GetSecretsSecretRotationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretRotationConfigArrayInput)(nil)).Elem(), GetSecretsSecretRotationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretRotationConfigTargetSystemDetailInput)(nil)).Elem(), GetSecretsSecretRotationConfigTargetSystemDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretRotationConfigTargetSystemDetailArrayInput)(nil)).Elem(), GetSecretsSecretRotationConfigTargetSystemDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretSecretContentInput)(nil)).Elem(), GetSecretsSecretSecretContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretSecretContentArrayInput)(nil)).Elem(), GetSecretsSecretSecretContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretSecretRuleInput)(nil)).Elem(), GetSecretsSecretSecretRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretSecretRuleArrayInput)(nil)).Elem(), GetSecretsSecretSecretRuleArray{})
	pulumi.RegisterOutputType(SecretRotationConfigOutput{})
	pulumi.RegisterOutputType(SecretRotationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationConfigTargetSystemDetailsOutput{})
	pulumi.RegisterOutputType(SecretRotationConfigTargetSystemDetailsPtrOutput{})
	pulumi.RegisterOutputType(SecretSecretContentOutput{})
	pulumi.RegisterOutputType(SecretSecretContentPtrOutput{})
	pulumi.RegisterOutputType(SecretSecretRuleOutput{})
	pulumi.RegisterOutputType(SecretSecretRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecretRotationConfigOutput{})
	pulumi.RegisterOutputType(GetSecretRotationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetSecretRotationConfigTargetSystemDetailOutput{})
	pulumi.RegisterOutputType(GetSecretRotationConfigTargetSystemDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSecretContentOutput{})
	pulumi.RegisterOutputType(GetSecretSecretContentArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSecretRuleOutput{})
	pulumi.RegisterOutputType(GetSecretSecretRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsFilterOutput{})
	pulumi.RegisterOutputType(GetSecretsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretRotationConfigOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretRotationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretRotationConfigTargetSystemDetailOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretRotationConfigTargetSystemDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretSecretContentOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretSecretContentArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretSecretRuleOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretSecretRuleArrayOutput{})
}
