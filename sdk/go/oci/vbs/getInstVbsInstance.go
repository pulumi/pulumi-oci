// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vbs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vbs Instance resource in Oracle Cloud Infrastructure Vbs Inst service.
//
// # Gets a VbsInstance by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Vbs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vbs.GetInstVbsInstance(ctx, &vbs.GetInstVbsInstanceArgs{
//				VbsInstanceId: testVbsInstanceOciVbsInstVbsInstance.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstVbsInstance(ctx *pulumi.Context, args *LookupInstVbsInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstVbsInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstVbsInstanceResult
	err := ctx.Invoke("oci:Vbs/getInstVbsInstance:getInstVbsInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstVbsInstance.
type LookupInstVbsInstanceArgs struct {
	// unique VbsInstance identifier
	VbsInstanceId string `pulumi:"vbsInstanceId"`
}

// A collection of values returned by getInstVbsInstance.
type LookupInstVbsInstanceResult struct {
	// Compartment of the service instance
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Service instance display name
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation
	Id              string `pulumi:"id"`
	IdcsAccessToken string `pulumi:"idcsAccessToken"`
	// Whether the VBS service instance owner explicitly approved VBS to create and use resources in the customer tenancy
	IsResourceUsageAgreementGranted bool `pulumi:"isResourceUsageAgreementGranted"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// Service instance name (unique identifier)
	Name string `pulumi:"name"`
	// Compartment where VBS may create additional resources for the service instance
	ResourceCompartmentId string `pulumi:"resourceCompartmentId"`
	// The current state of the VbsInstance.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the VbsInstance was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the VbsInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Public web URL for accessing the VBS service instance
	VbsAccessUrl  string `pulumi:"vbsAccessUrl"`
	VbsInstanceId string `pulumi:"vbsInstanceId"`
}

func LookupInstVbsInstanceOutput(ctx *pulumi.Context, args LookupInstVbsInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstVbsInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstVbsInstanceResult, error) {
			args := v.(LookupInstVbsInstanceArgs)
			r, err := LookupInstVbsInstance(ctx, &args, opts...)
			var s LookupInstVbsInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstVbsInstanceResultOutput)
}

// A collection of arguments for invoking getInstVbsInstance.
type LookupInstVbsInstanceOutputArgs struct {
	// unique VbsInstance identifier
	VbsInstanceId pulumi.StringInput `pulumi:"vbsInstanceId"`
}

func (LookupInstVbsInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstVbsInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstVbsInstance.
type LookupInstVbsInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstVbsInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstVbsInstanceResult)(nil)).Elem()
}

func (o LookupInstVbsInstanceResultOutput) ToLookupInstVbsInstanceResultOutput() LookupInstVbsInstanceResultOutput {
	return o
}

func (o LookupInstVbsInstanceResultOutput) ToLookupInstVbsInstanceResultOutputWithContext(ctx context.Context) LookupInstVbsInstanceResultOutput {
	return o
}

// Compartment of the service instance
func (o LookupInstVbsInstanceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupInstVbsInstanceResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Service instance display name
func (o LookupInstVbsInstanceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupInstVbsInstanceResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation
func (o LookupInstVbsInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstVbsInstanceResultOutput) IdcsAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.IdcsAccessToken }).(pulumi.StringOutput)
}

// Whether the VBS service instance owner explicitly approved VBS to create and use resources in the customer tenancy
func (o LookupInstVbsInstanceResultOutput) IsResourceUsageAgreementGranted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) bool { return v.IsResourceUsageAgreementGranted }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupInstVbsInstanceResultOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// Service instance name (unique identifier)
func (o LookupInstVbsInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Compartment where VBS may create additional resources for the service instance
func (o LookupInstVbsInstanceResultOutput) ResourceCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.ResourceCompartmentId }).(pulumi.StringOutput)
}

// The current state of the VbsInstance.
func (o LookupInstVbsInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupInstVbsInstanceResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the VbsInstance was created. An RFC3339 formatted datetime string
func (o LookupInstVbsInstanceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the VbsInstance was updated. An RFC3339 formatted datetime string
func (o LookupInstVbsInstanceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Public web URL for accessing the VBS service instance
func (o LookupInstVbsInstanceResultOutput) VbsAccessUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.VbsAccessUrl }).(pulumi.StringOutput)
}

func (o LookupInstVbsInstanceResultOutput) VbsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstVbsInstanceResult) string { return v.VbsInstanceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstVbsInstanceResultOutput{})
}
