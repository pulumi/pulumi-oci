// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vbs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Vbs Instances in Oracle Cloud Infrastructure Vbs Inst service.
//
// Returns a list of VbsInstances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Vbs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vbs.GetInstVbsInstances(ctx, &vbs.GetInstVbsInstancesArgs{
//				CompartmentId: compartmentId,
//				Id:            pulumi.StringRef(vbsInstanceId),
//				Name:          pulumi.StringRef(vbsInstanceName),
//				State:         pulumi.StringRef(vbsInstanceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstVbsInstances(ctx *pulumi.Context, args *GetInstVbsInstancesArgs, opts ...pulumi.InvokeOption) (*GetInstVbsInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstVbsInstancesResult
	err := ctx.Invoke("oci:Vbs/getInstVbsInstances:getInstVbsInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstVbsInstances.
type GetInstVbsInstancesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string                      `pulumi:"compartmentId"`
	Filters       []GetInstVbsInstancesFilter `pulumi:"filters"`
	// unique VbsInstance identifier
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name *string `pulumi:"name"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getInstVbsInstances.
type GetInstVbsInstancesResult struct {
	// Compartment of the service instance
	CompartmentId string                      `pulumi:"compartmentId"`
	Filters       []GetInstVbsInstancesFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation
	Id *string `pulumi:"id"`
	// Service instance name (unique identifier)
	Name *string `pulumi:"name"`
	// The current state of the VbsInstance.
	State *string `pulumi:"state"`
	// The list of vbs_instance_summary_collection.
	VbsInstanceSummaryCollections []GetInstVbsInstancesVbsInstanceSummaryCollection `pulumi:"vbsInstanceSummaryCollections"`
}

func GetInstVbsInstancesOutput(ctx *pulumi.Context, args GetInstVbsInstancesOutputArgs, opts ...pulumi.InvokeOption) GetInstVbsInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstVbsInstancesResult, error) {
			args := v.(GetInstVbsInstancesArgs)
			r, err := GetInstVbsInstances(ctx, &args, opts...)
			var s GetInstVbsInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstVbsInstancesResultOutput)
}

// A collection of arguments for invoking getInstVbsInstances.
type GetInstVbsInstancesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput                  `pulumi:"compartmentId"`
	Filters       GetInstVbsInstancesFilterArrayInput `pulumi:"filters"`
	// unique VbsInstance identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetInstVbsInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getInstVbsInstances.
type GetInstVbsInstancesResultOutput struct{ *pulumi.OutputState }

func (GetInstVbsInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesResult)(nil)).Elem()
}

func (o GetInstVbsInstancesResultOutput) ToGetInstVbsInstancesResultOutput() GetInstVbsInstancesResultOutput {
	return o
}

func (o GetInstVbsInstancesResultOutput) ToGetInstVbsInstancesResultOutputWithContext(ctx context.Context) GetInstVbsInstancesResultOutput {
	return o
}

// Compartment of the service instance
func (o GetInstVbsInstancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetInstVbsInstancesResultOutput) Filters() GetInstVbsInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetInstVbsInstancesResult) []GetInstVbsInstancesFilter { return v.Filters }).(GetInstVbsInstancesFilterArrayOutput)
}

// Unique identifier that is immutable on creation
func (o GetInstVbsInstancesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstVbsInstancesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Service instance name (unique identifier)
func (o GetInstVbsInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstVbsInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current state of the VbsInstance.
func (o GetInstVbsInstancesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstVbsInstancesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of vbs_instance_summary_collection.
func (o GetInstVbsInstancesResultOutput) VbsInstanceSummaryCollections() GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetInstVbsInstancesResult) []GetInstVbsInstancesVbsInstanceSummaryCollection {
		return v.VbsInstanceSummaryCollections
	}).(GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstVbsInstancesResultOutput{})
}
