// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vbs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GetInstVbsInstancesFilter struct {
	// A filter to return only resources that match the entire name given.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetInstVbsInstancesFilterInput is an input type that accepts GetInstVbsInstancesFilterArgs and GetInstVbsInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstVbsInstancesFilterInput` via:
//
//	GetInstVbsInstancesFilterArgs{...}
type GetInstVbsInstancesFilterInput interface {
	pulumi.Input

	ToGetInstVbsInstancesFilterOutput() GetInstVbsInstancesFilterOutput
	ToGetInstVbsInstancesFilterOutputWithContext(context.Context) GetInstVbsInstancesFilterOutput
}

type GetInstVbsInstancesFilterArgs struct {
	// A filter to return only resources that match the entire name given.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstVbsInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesFilter)(nil)).Elem()
}

func (i GetInstVbsInstancesFilterArgs) ToGetInstVbsInstancesFilterOutput() GetInstVbsInstancesFilterOutput {
	return i.ToGetInstVbsInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstVbsInstancesFilterArgs) ToGetInstVbsInstancesFilterOutputWithContext(ctx context.Context) GetInstVbsInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstVbsInstancesFilterOutput)
}

func (i GetInstVbsInstancesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstVbsInstancesFilter] {
	return pulumix.Output[GetInstVbsInstancesFilter]{
		OutputState: i.ToGetInstVbsInstancesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetInstVbsInstancesFilterArrayInput is an input type that accepts GetInstVbsInstancesFilterArray and GetInstVbsInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstVbsInstancesFilterArrayInput` via:
//
//	GetInstVbsInstancesFilterArray{ GetInstVbsInstancesFilterArgs{...} }
type GetInstVbsInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstVbsInstancesFilterArrayOutput() GetInstVbsInstancesFilterArrayOutput
	ToGetInstVbsInstancesFilterArrayOutputWithContext(context.Context) GetInstVbsInstancesFilterArrayOutput
}

type GetInstVbsInstancesFilterArray []GetInstVbsInstancesFilterInput

func (GetInstVbsInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstVbsInstancesFilter)(nil)).Elem()
}

func (i GetInstVbsInstancesFilterArray) ToGetInstVbsInstancesFilterArrayOutput() GetInstVbsInstancesFilterArrayOutput {
	return i.ToGetInstVbsInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstVbsInstancesFilterArray) ToGetInstVbsInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstVbsInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstVbsInstancesFilterArrayOutput)
}

func (i GetInstVbsInstancesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstVbsInstancesFilter] {
	return pulumix.Output[[]GetInstVbsInstancesFilter]{
		OutputState: i.ToGetInstVbsInstancesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstVbsInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstVbsInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesFilter)(nil)).Elem()
}

func (o GetInstVbsInstancesFilterOutput) ToGetInstVbsInstancesFilterOutput() GetInstVbsInstancesFilterOutput {
	return o
}

func (o GetInstVbsInstancesFilterOutput) ToGetInstVbsInstancesFilterOutputWithContext(ctx context.Context) GetInstVbsInstancesFilterOutput {
	return o
}

func (o GetInstVbsInstancesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstVbsInstancesFilter] {
	return pulumix.Output[GetInstVbsInstancesFilter]{
		OutputState: o.OutputState,
	}
}

// A filter to return only resources that match the entire name given.
func (o GetInstVbsInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstVbsInstancesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstVbsInstancesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetInstVbsInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstVbsInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstVbsInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstVbsInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstVbsInstancesFilter)(nil)).Elem()
}

func (o GetInstVbsInstancesFilterArrayOutput) ToGetInstVbsInstancesFilterArrayOutput() GetInstVbsInstancesFilterArrayOutput {
	return o
}

func (o GetInstVbsInstancesFilterArrayOutput) ToGetInstVbsInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstVbsInstancesFilterArrayOutput {
	return o
}

func (o GetInstVbsInstancesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstVbsInstancesFilter] {
	return pulumix.Output[[]GetInstVbsInstancesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetInstVbsInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstVbsInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstVbsInstancesFilter {
		return vs[0].([]GetInstVbsInstancesFilter)[vs[1].(int)]
	}).(GetInstVbsInstancesFilterOutput)
}

type GetInstVbsInstancesVbsInstanceSummaryCollection struct {
	Items []GetInstVbsInstancesVbsInstanceSummaryCollectionItem `pulumi:"items"`
}

// GetInstVbsInstancesVbsInstanceSummaryCollectionInput is an input type that accepts GetInstVbsInstancesVbsInstanceSummaryCollectionArgs and GetInstVbsInstancesVbsInstanceSummaryCollectionOutput values.
// You can construct a concrete instance of `GetInstVbsInstancesVbsInstanceSummaryCollectionInput` via:
//
//	GetInstVbsInstancesVbsInstanceSummaryCollectionArgs{...}
type GetInstVbsInstancesVbsInstanceSummaryCollectionInput interface {
	pulumi.Input

	ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionOutput
	ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutputWithContext(context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionOutput
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionArgs struct {
	Items GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayInput `pulumi:"items"`
}

func (GetInstVbsInstancesVbsInstanceSummaryCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollection)(nil)).Elem()
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionArgs) ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionOutput {
	return i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutputWithContext(context.Background())
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionArgs) ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstVbsInstancesVbsInstanceSummaryCollectionOutput)
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollection] {
	return pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollection]{
		OutputState: i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetInstVbsInstancesVbsInstanceSummaryCollectionArrayInput is an input type that accepts GetInstVbsInstancesVbsInstanceSummaryCollectionArray and GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput values.
// You can construct a concrete instance of `GetInstVbsInstancesVbsInstanceSummaryCollectionArrayInput` via:
//
//	GetInstVbsInstancesVbsInstanceSummaryCollectionArray{ GetInstVbsInstancesVbsInstanceSummaryCollectionArgs{...} }
type GetInstVbsInstancesVbsInstanceSummaryCollectionArrayInput interface {
	pulumi.Input

	ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput
	ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutputWithContext(context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionArray []GetInstVbsInstancesVbsInstanceSummaryCollectionInput

func (GetInstVbsInstancesVbsInstanceSummaryCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstVbsInstancesVbsInstanceSummaryCollection)(nil)).Elem()
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionArray) ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput {
	return i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutputWithContext(context.Background())
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionArray) ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput)
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollection] {
	return pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollection]{
		OutputState: i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionOutput struct{ *pulumi.OutputState }

func (GetInstVbsInstancesVbsInstanceSummaryCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollection)(nil)).Elem()
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollection] {
	return pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionOutput) Items() GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollection) []GetInstVbsInstancesVbsInstanceSummaryCollectionItem {
		return v.Items
	}).(GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput)
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstVbsInstancesVbsInstanceSummaryCollection)(nil)).Elem()
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollection] {
	return pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput) Index(i pulumi.IntInput) GetInstVbsInstancesVbsInstanceSummaryCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstVbsInstancesVbsInstanceSummaryCollection {
		return vs[0].([]GetInstVbsInstancesVbsInstanceSummaryCollection)[vs[1].(int)]
	}).(GetInstVbsInstancesVbsInstanceSummaryCollectionOutput)
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Service instance display name
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// unique VbsInstance identifier
	Id              string `pulumi:"id"`
	IdcsAccessToken string `pulumi:"idcsAccessToken"`
	// Whether the VBS service instance owner explicitly approved VBS to create and use resources in the customer tenancy
	IsResourceUsageAgreementGranted bool `pulumi:"isResourceUsageAgreementGranted"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// A filter to return only resources that match the entire name given.
	Name string `pulumi:"name"`
	// Compartment where VBS may create additional resources for the service instance
	ResourceCompartmentId string `pulumi:"resourceCompartmentId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the VbsInstance was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the VbsInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Public web URL for accessing the VBS service instance
	VbsAccessUrl string `pulumi:"vbsAccessUrl"`
}

// GetInstVbsInstancesVbsInstanceSummaryCollectionItemInput is an input type that accepts GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs and GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput values.
// You can construct a concrete instance of `GetInstVbsInstancesVbsInstanceSummaryCollectionItemInput` via:
//
//	GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs{...}
type GetInstVbsInstancesVbsInstanceSummaryCollectionItemInput interface {
	pulumi.Input

	ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput
	ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutputWithContext(context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Service instance display name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// unique VbsInstance identifier
	Id              pulumi.StringInput `pulumi:"id"`
	IdcsAccessToken pulumi.StringInput `pulumi:"idcsAccessToken"`
	// Whether the VBS service instance owner explicitly approved VBS to create and use resources in the customer tenancy
	IsResourceUsageAgreementGranted pulumi.BoolInput `pulumi:"isResourceUsageAgreementGranted"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringInput `pulumi:"name"`
	// Compartment where VBS may create additional resources for the service instance
	ResourceCompartmentId pulumi.StringInput `pulumi:"resourceCompartmentId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the the VbsInstance was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the VbsInstance was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Public web URL for accessing the VBS service instance
	VbsAccessUrl pulumi.StringInput `pulumi:"vbsAccessUrl"`
}

func (GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollectionItem)(nil)).Elem()
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput {
	return i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutputWithContext(context.Background())
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput)
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollectionItem] {
	return pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollectionItem]{
		OutputState: i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayInput is an input type that accepts GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray and GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayInput` via:
//
//	GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray{ GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs{...} }
type GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayInput interface {
	pulumi.Input

	ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput
	ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutputWithContext(context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray []GetInstVbsInstancesVbsInstanceSummaryCollectionItemInput

func (GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstVbsInstancesVbsInstanceSummaryCollectionItem)(nil)).Elem()
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput {
	return i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput)
}

func (i GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollectionItem] {
	return pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollectionItem]{
		OutputState: i.ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput struct{ *pulumi.OutputState }

func (GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollectionItem)(nil)).Elem()
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollectionItem] {
	return pulumix.Output[GetInstVbsInstancesVbsInstanceSummaryCollectionItem]{
		OutputState: o.OutputState,
	}
}

// The ID of the compartment in which to list resources.
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// Service instance display name
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// unique VbsInstance identifier
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) IdcsAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.IdcsAccessToken }).(pulumi.StringOutput)
}

// Whether the VBS service instance owner explicitly approved VBS to create and use resources in the customer tenancy
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) IsResourceUsageAgreementGranted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) bool {
		return v.IsResourceUsageAgreementGranted
	}).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire name given.
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// Compartment where VBS may create additional resources for the service instance
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) ResourceCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.ResourceCompartmentId }).(pulumi.StringOutput)
}

// A filter to return only resources their lifecycleState matches the given lifecycleState.
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The time the the VbsInstance was created. An RFC3339 formatted datetime string
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the VbsInstance was updated. An RFC3339 formatted datetime string
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Public web URL for accessing the VBS service instance
func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput) VbsAccessUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstVbsInstancesVbsInstanceSummaryCollectionItem) string { return v.VbsAccessUrl }).(pulumi.StringOutput)
}

type GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstVbsInstancesVbsInstanceSummaryCollectionItem)(nil)).Elem()
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput() GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput) ToGetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput {
	return o
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollectionItem] {
	return pulumix.Output[[]GetInstVbsInstancesVbsInstanceSummaryCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput) Index(i pulumi.IntInput) GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstVbsInstancesVbsInstanceSummaryCollectionItem {
		return vs[0].([]GetInstVbsInstancesVbsInstanceSummaryCollectionItem)[vs[1].(int)]
	}).(GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstVbsInstancesFilterInput)(nil)).Elem(), GetInstVbsInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstVbsInstancesFilterArrayInput)(nil)).Elem(), GetInstVbsInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollectionInput)(nil)).Elem(), GetInstVbsInstancesVbsInstanceSummaryCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollectionArrayInput)(nil)).Elem(), GetInstVbsInstancesVbsInstanceSummaryCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollectionItemInput)(nil)).Elem(), GetInstVbsInstancesVbsInstanceSummaryCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayInput)(nil)).Elem(), GetInstVbsInstancesVbsInstanceSummaryCollectionItemArray{})
	pulumi.RegisterOutputType(GetInstVbsInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstVbsInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstVbsInstancesVbsInstanceSummaryCollectionOutput{})
	pulumi.RegisterOutputType(GetInstVbsInstancesVbsInstanceSummaryCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetInstVbsInstancesVbsInstanceSummaryCollectionItemOutput{})
	pulumi.RegisterOutputType(GetInstVbsInstancesVbsInstanceSummaryCollectionItemArrayOutput{})
}
