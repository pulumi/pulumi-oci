// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package visualbuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vb Instance resource in Oracle Cloud Infrastructure Visual Builder service.
//
// # Gets a VbInstance by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/visualbuilder"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := visualbuilder.GetVbInstance(ctx, &visualbuilder.GetVbInstanceArgs{
//				VbInstanceId: testVbInstanceOciVisualBuilderVbInstance.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVbInstance(ctx *pulumi.Context, args *LookupVbInstanceArgs, opts ...pulumi.InvokeOption) (*LookupVbInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVbInstanceResult
	err := ctx.Invoke("oci:VisualBuilder/getVbInstance:getVbInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVbInstance.
type LookupVbInstanceArgs struct {
	// Unique Vb Instance identifier.
	VbInstanceId string `pulumi:"vbInstanceId"`
}

// A collection of values returned by getVbInstance.
type LookupVbInstanceResult struct {
	// A list of alternate custom endpoints used for the vb instance URL.
	AlternateCustomEndpoints []GetVbInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// The entitlement used for billing purposes.
	ConsumptionModel string `pulumi:"consumptionModel"`
	// Details for a custom endpoint for the vb instance.
	CustomEndpoints []GetVbInstanceCustomEndpoint `pulumi:"customEndpoints"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Vb Instance Identifier, can be renamed.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The Virtual Cloud Network OCID.
	Id         string `pulumi:"id"`
	IdcsOpenId string `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl string `pulumi:"instanceUrl"`
	// Visual Builder is enabled or not.
	IsVisualBuilderEnabled bool `pulumi:"isVisualBuilderEnabled"`
	// The NAT gateway IP address for the VB management VCN
	ManagementNatGatewayIp string `pulumi:"managementNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
	ManagementVcnId string `pulumi:"managementVcnId"`
	// Base representation of a network endpoint. In input payload to update an Visual Builder instance endpoint details, an empty payload will clear out any existing configuration for Public Visual Builder instance.
	NetworkEndpointDetails []GetVbInstanceNetworkEndpointDetail `pulumi:"networkEndpointDetails"`
	// The number of Nodes
	NodeCount int `pulumi:"nodeCount"`
	// The NAT gateway IP address for the VB service VCN
	ServiceNatGatewayIp string `pulumi:"serviceNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
	ServiceVcnId string `pulumi:"serviceVcnId"`
	// The current state of the vb instance.
	State string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage string `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated  string `pulumi:"timeUpdated"`
	VbInstanceId string `pulumi:"vbInstanceId"`
}

func LookupVbInstanceOutput(ctx *pulumi.Context, args LookupVbInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupVbInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVbInstanceResultOutput, error) {
			args := v.(LookupVbInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:VisualBuilder/getVbInstance:getVbInstance", args, LookupVbInstanceResultOutput{}, options).(LookupVbInstanceResultOutput), nil
		}).(LookupVbInstanceResultOutput)
}

// A collection of arguments for invoking getVbInstance.
type LookupVbInstanceOutputArgs struct {
	// Unique Vb Instance identifier.
	VbInstanceId pulumi.StringInput `pulumi:"vbInstanceId"`
}

func (LookupVbInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVbInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getVbInstance.
type LookupVbInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupVbInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVbInstanceResult)(nil)).Elem()
}

func (o LookupVbInstanceResultOutput) ToLookupVbInstanceResultOutput() LookupVbInstanceResultOutput {
	return o
}

func (o LookupVbInstanceResultOutput) ToLookupVbInstanceResultOutputWithContext(ctx context.Context) LookupVbInstanceResultOutput {
	return o
}

// A list of alternate custom endpoints used for the vb instance URL.
func (o LookupVbInstanceResultOutput) AlternateCustomEndpoints() GetVbInstanceAlternateCustomEndpointArrayOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) []GetVbInstanceAlternateCustomEndpoint {
		return v.AlternateCustomEndpoints
	}).(GetVbInstanceAlternateCustomEndpointArrayOutput)
}

// Compartment Identifier.
func (o LookupVbInstanceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The entitlement used for billing purposes.
func (o LookupVbInstanceResultOutput) ConsumptionModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.ConsumptionModel }).(pulumi.StringOutput)
}

// Details for a custom endpoint for the vb instance.
func (o LookupVbInstanceResultOutput) CustomEndpoints() GetVbInstanceCustomEndpointArrayOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) []GetVbInstanceCustomEndpoint { return v.CustomEndpoints }).(GetVbInstanceCustomEndpointArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupVbInstanceResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Vb Instance Identifier, can be renamed.
func (o LookupVbInstanceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupVbInstanceResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The Virtual Cloud Network OCID.
func (o LookupVbInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVbInstanceResultOutput) IdcsOpenId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.IdcsOpenId }).(pulumi.StringOutput)
}

// The Vb Instance URL.
func (o LookupVbInstanceResultOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

// Visual Builder is enabled or not.
func (o LookupVbInstanceResultOutput) IsVisualBuilderEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) bool { return v.IsVisualBuilderEnabled }).(pulumi.BoolOutput)
}

// The NAT gateway IP address for the VB management VCN
func (o LookupVbInstanceResultOutput) ManagementNatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.ManagementNatGatewayIp }).(pulumi.StringOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
func (o LookupVbInstanceResultOutput) ManagementVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.ManagementVcnId }).(pulumi.StringOutput)
}

// Base representation of a network endpoint. In input payload to update an Visual Builder instance endpoint details, an empty payload will clear out any existing configuration for Public Visual Builder instance.
func (o LookupVbInstanceResultOutput) NetworkEndpointDetails() GetVbInstanceNetworkEndpointDetailArrayOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) []GetVbInstanceNetworkEndpointDetail { return v.NetworkEndpointDetails }).(GetVbInstanceNetworkEndpointDetailArrayOutput)
}

// The number of Nodes
func (o LookupVbInstanceResultOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The NAT gateway IP address for the VB service VCN
func (o LookupVbInstanceResultOutput) ServiceNatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.ServiceNatGatewayIp }).(pulumi.StringOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
func (o LookupVbInstanceResultOutput) ServiceVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.ServiceVcnId }).(pulumi.StringOutput)
}

// The current state of the vb instance.
func (o LookupVbInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupVbInstanceResultOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.StateMessage }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupVbInstanceResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the VbInstance was created. An RFC3339 formatted datetime string.
func (o LookupVbInstanceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the VbInstance was updated. An RFC3339 formatted datetime string.
func (o LookupVbInstanceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o LookupVbInstanceResultOutput) VbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.VbInstanceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVbInstanceResultOutput{})
}
