// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package visualbuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vb Instance resource in Oracle Cloud Infrastructure Visual Builder service.
//
// # Gets a VbInstance by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/VisualBuilder"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := VisualBuilder.GetVbInstance(ctx, &visualbuilder.GetVbInstanceArgs{
//				VbInstanceId: oci_visual_builder_vb_instance.Test_vb_instance.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVbInstance(ctx *pulumi.Context, args *LookupVbInstanceArgs, opts ...pulumi.InvokeOption) (*LookupVbInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVbInstanceResult
	err := ctx.Invoke("oci:VisualBuilder/getVbInstance:getVbInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVbInstance.
type LookupVbInstanceArgs struct {
	// Unique Vb Instance identifier.
	VbInstanceId string `pulumi:"vbInstanceId"`
}

// A collection of values returned by getVbInstance.
type LookupVbInstanceResult struct {
	// A list of alternate custom endpoints used for the vb instance URL.
	AlternateCustomEndpoints []GetVbInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// A list of associated attachments to other services
	Attachments []GetVbInstanceAttachment `pulumi:"attachments"`
	// Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// The entitlement used for billing purposes.
	ConsumptionModel *string `pulumi:"consumptionModel"`
	// Details for a custom endpoint for the vb instance.
	CustomEndpoints []GetVbInstanceCustomEndpoint `pulumi:"customEndpoints"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Vb Instance Identifier, can be renamed.
	DisplayName *string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// Information for IDCS access
	IdcsInfos  []GetVbInstanceIdcsInfo `pulumi:"idcsInfos"`
	IdcsOpenId *string                 `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl *string `pulumi:"instanceUrl"`
	// Visual Builder is enabled or not.
	IsVisualBuilderEnabled *bool `pulumi:"isVisualBuilderEnabled"`
	// The NAT gateway IP address for the VB management VCN
	ManagementNatGatewayIp *string `pulumi:"managementNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
	ManagementVcnId *string `pulumi:"managementVcnId"`
	// The number of Nodes
	NodeCount *int `pulumi:"nodeCount"`
	// The NAT gateway IP address for the VB service VCN
	ServiceNatGatewayIp *string `pulumi:"serviceNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
	ServiceVcnId *string `pulumi:"serviceVcnId"`
	// The current state of the vb instance.
	State *string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage *string `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated  *string `pulumi:"timeUpdated"`
	VbInstanceId string  `pulumi:"vbInstanceId"`
}

func LookupVbInstanceOutput(ctx *pulumi.Context, args LookupVbInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupVbInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVbInstanceResult, error) {
			args := v.(LookupVbInstanceArgs)
			r, err := LookupVbInstance(ctx, &args, opts...)
			var s LookupVbInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVbInstanceResultOutput)
}

// A collection of arguments for invoking getVbInstance.
type LookupVbInstanceOutputArgs struct {
	// Unique Vb Instance identifier.
	VbInstanceId pulumi.StringInput `pulumi:"vbInstanceId"`
}

func (LookupVbInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVbInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getVbInstance.
type LookupVbInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupVbInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVbInstanceResult)(nil)).Elem()
}

func (o LookupVbInstanceResultOutput) ToLookupVbInstanceResultOutput() LookupVbInstanceResultOutput {
	return o
}

func (o LookupVbInstanceResultOutput) ToLookupVbInstanceResultOutputWithContext(ctx context.Context) LookupVbInstanceResultOutput {
	return o
}

// A list of alternate custom endpoints used for the vb instance URL.
func (o LookupVbInstanceResultOutput) AlternateCustomEndpoints() GetVbInstanceAlternateCustomEndpointArrayOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) []GetVbInstanceAlternateCustomEndpoint {
		return v.AlternateCustomEndpoints
	}).(GetVbInstanceAlternateCustomEndpointArrayOutput)
}

// A list of associated attachments to other services
func (o LookupVbInstanceResultOutput) Attachments() GetVbInstanceAttachmentArrayOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) []GetVbInstanceAttachment { return v.Attachments }).(GetVbInstanceAttachmentArrayOutput)
}

// Compartment Identifier.
func (o LookupVbInstanceResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The entitlement used for billing purposes.
func (o LookupVbInstanceResultOutput) ConsumptionModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.ConsumptionModel }).(pulumi.StringPtrOutput)
}

// Details for a custom endpoint for the vb instance.
func (o LookupVbInstanceResultOutput) CustomEndpoints() GetVbInstanceCustomEndpointArrayOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) []GetVbInstanceCustomEndpoint { return v.CustomEndpoints }).(GetVbInstanceCustomEndpointArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupVbInstanceResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Vb Instance Identifier, can be renamed.
func (o LookupVbInstanceResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupVbInstanceResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupVbInstanceResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Information for IDCS access
func (o LookupVbInstanceResultOutput) IdcsInfos() GetVbInstanceIdcsInfoArrayOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) []GetVbInstanceIdcsInfo { return v.IdcsInfos }).(GetVbInstanceIdcsInfoArrayOutput)
}

func (o LookupVbInstanceResultOutput) IdcsOpenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.IdcsOpenId }).(pulumi.StringPtrOutput)
}

// The Vb Instance URL.
func (o LookupVbInstanceResultOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.InstanceUrl }).(pulumi.StringPtrOutput)
}

// Visual Builder is enabled or not.
func (o LookupVbInstanceResultOutput) IsVisualBuilderEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *bool { return v.IsVisualBuilderEnabled }).(pulumi.BoolPtrOutput)
}

// The NAT gateway IP address for the VB management VCN
func (o LookupVbInstanceResultOutput) ManagementNatGatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.ManagementNatGatewayIp }).(pulumi.StringPtrOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
func (o LookupVbInstanceResultOutput) ManagementVcnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.ManagementVcnId }).(pulumi.StringPtrOutput)
}

// The number of Nodes
func (o LookupVbInstanceResultOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The NAT gateway IP address for the VB service VCN
func (o LookupVbInstanceResultOutput) ServiceNatGatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.ServiceNatGatewayIp }).(pulumi.StringPtrOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
func (o LookupVbInstanceResultOutput) ServiceVcnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.ServiceVcnId }).(pulumi.StringPtrOutput)
}

// The current state of the vb instance.
func (o LookupVbInstanceResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupVbInstanceResultOutput) StateMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.StateMessage }).(pulumi.StringPtrOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupVbInstanceResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the VbInstance was created. An RFC3339 formatted datetime string.
func (o LookupVbInstanceResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time the VbInstance was updated. An RFC3339 formatted datetime string.
func (o LookupVbInstanceResultOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

func (o LookupVbInstanceResultOutput) VbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVbInstanceResult) string { return v.VbInstanceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVbInstanceResultOutput{})
}
