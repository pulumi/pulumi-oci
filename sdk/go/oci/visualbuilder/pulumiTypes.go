// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package visualbuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type VbInstanceAlternateCustomEndpoint struct {
	// (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
	CertificateSecretId *string `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion *int `pulumi:"certificateSecretVersion"`
	// (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname string `pulumi:"hostname"`
}

// VbInstanceAlternateCustomEndpointInput is an input type that accepts VbInstanceAlternateCustomEndpointArgs and VbInstanceAlternateCustomEndpointOutput values.
// You can construct a concrete instance of `VbInstanceAlternateCustomEndpointInput` via:
//
//	VbInstanceAlternateCustomEndpointArgs{...}
type VbInstanceAlternateCustomEndpointInput interface {
	pulumi.Input

	ToVbInstanceAlternateCustomEndpointOutput() VbInstanceAlternateCustomEndpointOutput
	ToVbInstanceAlternateCustomEndpointOutputWithContext(context.Context) VbInstanceAlternateCustomEndpointOutput
}

type VbInstanceAlternateCustomEndpointArgs struct {
	// (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
	CertificateSecretId pulumi.StringPtrInput `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion pulumi.IntPtrInput `pulumi:"certificateSecretVersion"`
	// (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (VbInstanceAlternateCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (i VbInstanceAlternateCustomEndpointArgs) ToVbInstanceAlternateCustomEndpointOutput() VbInstanceAlternateCustomEndpointOutput {
	return i.ToVbInstanceAlternateCustomEndpointOutputWithContext(context.Background())
}

func (i VbInstanceAlternateCustomEndpointArgs) ToVbInstanceAlternateCustomEndpointOutputWithContext(ctx context.Context) VbInstanceAlternateCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceAlternateCustomEndpointOutput)
}

func (i VbInstanceAlternateCustomEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[VbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[VbInstanceAlternateCustomEndpoint]{
		OutputState: i.ToVbInstanceAlternateCustomEndpointOutputWithContext(ctx).OutputState,
	}
}

// VbInstanceAlternateCustomEndpointArrayInput is an input type that accepts VbInstanceAlternateCustomEndpointArray and VbInstanceAlternateCustomEndpointArrayOutput values.
// You can construct a concrete instance of `VbInstanceAlternateCustomEndpointArrayInput` via:
//
//	VbInstanceAlternateCustomEndpointArray{ VbInstanceAlternateCustomEndpointArgs{...} }
type VbInstanceAlternateCustomEndpointArrayInput interface {
	pulumi.Input

	ToVbInstanceAlternateCustomEndpointArrayOutput() VbInstanceAlternateCustomEndpointArrayOutput
	ToVbInstanceAlternateCustomEndpointArrayOutputWithContext(context.Context) VbInstanceAlternateCustomEndpointArrayOutput
}

type VbInstanceAlternateCustomEndpointArray []VbInstanceAlternateCustomEndpointInput

func (VbInstanceAlternateCustomEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (i VbInstanceAlternateCustomEndpointArray) ToVbInstanceAlternateCustomEndpointArrayOutput() VbInstanceAlternateCustomEndpointArrayOutput {
	return i.ToVbInstanceAlternateCustomEndpointArrayOutputWithContext(context.Background())
}

func (i VbInstanceAlternateCustomEndpointArray) ToVbInstanceAlternateCustomEndpointArrayOutputWithContext(ctx context.Context) VbInstanceAlternateCustomEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceAlternateCustomEndpointArrayOutput)
}

func (i VbInstanceAlternateCustomEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]VbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[[]VbInstanceAlternateCustomEndpoint]{
		OutputState: i.ToVbInstanceAlternateCustomEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type VbInstanceAlternateCustomEndpointOutput struct{ *pulumi.OutputState }

func (VbInstanceAlternateCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (o VbInstanceAlternateCustomEndpointOutput) ToVbInstanceAlternateCustomEndpointOutput() VbInstanceAlternateCustomEndpointOutput {
	return o
}

func (o VbInstanceAlternateCustomEndpointOutput) ToVbInstanceAlternateCustomEndpointOutputWithContext(ctx context.Context) VbInstanceAlternateCustomEndpointOutput {
	return o
}

func (o VbInstanceAlternateCustomEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[VbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[VbInstanceAlternateCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
func (o VbInstanceAlternateCustomEndpointOutput) CertificateSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceAlternateCustomEndpoint) *string { return v.CertificateSecretId }).(pulumi.StringPtrOutput)
}

// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
func (o VbInstanceAlternateCustomEndpointOutput) CertificateSecretVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VbInstanceAlternateCustomEndpoint) *int { return v.CertificateSecretVersion }).(pulumi.IntPtrOutput)
}

// (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
func (o VbInstanceAlternateCustomEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v VbInstanceAlternateCustomEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

type VbInstanceAlternateCustomEndpointArrayOutput struct{ *pulumi.OutputState }

func (VbInstanceAlternateCustomEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (o VbInstanceAlternateCustomEndpointArrayOutput) ToVbInstanceAlternateCustomEndpointArrayOutput() VbInstanceAlternateCustomEndpointArrayOutput {
	return o
}

func (o VbInstanceAlternateCustomEndpointArrayOutput) ToVbInstanceAlternateCustomEndpointArrayOutputWithContext(ctx context.Context) VbInstanceAlternateCustomEndpointArrayOutput {
	return o
}

func (o VbInstanceAlternateCustomEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[[]VbInstanceAlternateCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o VbInstanceAlternateCustomEndpointArrayOutput) Index(i pulumi.IntInput) VbInstanceAlternateCustomEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VbInstanceAlternateCustomEndpoint {
		return vs[0].([]VbInstanceAlternateCustomEndpoint)[vs[1].(int)]
	}).(VbInstanceAlternateCustomEndpointOutput)
}

type VbInstanceAttachment struct {
	// * If role == `PARENT`, the attached instance was created by this service instance
	// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
	IsImplicit *bool `pulumi:"isImplicit"`
	// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
	TargetId *string `pulumi:"targetId"`
	// The dataplane instance URL of the attached instance
	TargetInstanceUrl *string `pulumi:"targetInstanceUrl"`
	// The role of the target attachment.
	TargetRole *string `pulumi:"targetRole"`
	// The type of the target instance, such as "FUSION".
	TargetServiceType *string `pulumi:"targetServiceType"`
}

// VbInstanceAttachmentInput is an input type that accepts VbInstanceAttachmentArgs and VbInstanceAttachmentOutput values.
// You can construct a concrete instance of `VbInstanceAttachmentInput` via:
//
//	VbInstanceAttachmentArgs{...}
type VbInstanceAttachmentInput interface {
	pulumi.Input

	ToVbInstanceAttachmentOutput() VbInstanceAttachmentOutput
	ToVbInstanceAttachmentOutputWithContext(context.Context) VbInstanceAttachmentOutput
}

type VbInstanceAttachmentArgs struct {
	// * If role == `PARENT`, the attached instance was created by this service instance
	// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
	IsImplicit pulumi.BoolPtrInput `pulumi:"isImplicit"`
	// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// The dataplane instance URL of the attached instance
	TargetInstanceUrl pulumi.StringPtrInput `pulumi:"targetInstanceUrl"`
	// The role of the target attachment.
	TargetRole pulumi.StringPtrInput `pulumi:"targetRole"`
	// The type of the target instance, such as "FUSION".
	TargetServiceType pulumi.StringPtrInput `pulumi:"targetServiceType"`
}

func (VbInstanceAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceAttachment)(nil)).Elem()
}

func (i VbInstanceAttachmentArgs) ToVbInstanceAttachmentOutput() VbInstanceAttachmentOutput {
	return i.ToVbInstanceAttachmentOutputWithContext(context.Background())
}

func (i VbInstanceAttachmentArgs) ToVbInstanceAttachmentOutputWithContext(ctx context.Context) VbInstanceAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceAttachmentOutput)
}

func (i VbInstanceAttachmentArgs) ToOutput(ctx context.Context) pulumix.Output[VbInstanceAttachment] {
	return pulumix.Output[VbInstanceAttachment]{
		OutputState: i.ToVbInstanceAttachmentOutputWithContext(ctx).OutputState,
	}
}

// VbInstanceAttachmentArrayInput is an input type that accepts VbInstanceAttachmentArray and VbInstanceAttachmentArrayOutput values.
// You can construct a concrete instance of `VbInstanceAttachmentArrayInput` via:
//
//	VbInstanceAttachmentArray{ VbInstanceAttachmentArgs{...} }
type VbInstanceAttachmentArrayInput interface {
	pulumi.Input

	ToVbInstanceAttachmentArrayOutput() VbInstanceAttachmentArrayOutput
	ToVbInstanceAttachmentArrayOutputWithContext(context.Context) VbInstanceAttachmentArrayOutput
}

type VbInstanceAttachmentArray []VbInstanceAttachmentInput

func (VbInstanceAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VbInstanceAttachment)(nil)).Elem()
}

func (i VbInstanceAttachmentArray) ToVbInstanceAttachmentArrayOutput() VbInstanceAttachmentArrayOutput {
	return i.ToVbInstanceAttachmentArrayOutputWithContext(context.Background())
}

func (i VbInstanceAttachmentArray) ToVbInstanceAttachmentArrayOutputWithContext(ctx context.Context) VbInstanceAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceAttachmentArrayOutput)
}

func (i VbInstanceAttachmentArray) ToOutput(ctx context.Context) pulumix.Output[[]VbInstanceAttachment] {
	return pulumix.Output[[]VbInstanceAttachment]{
		OutputState: i.ToVbInstanceAttachmentArrayOutputWithContext(ctx).OutputState,
	}
}

type VbInstanceAttachmentOutput struct{ *pulumi.OutputState }

func (VbInstanceAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceAttachment)(nil)).Elem()
}

func (o VbInstanceAttachmentOutput) ToVbInstanceAttachmentOutput() VbInstanceAttachmentOutput {
	return o
}

func (o VbInstanceAttachmentOutput) ToVbInstanceAttachmentOutputWithContext(ctx context.Context) VbInstanceAttachmentOutput {
	return o
}

func (o VbInstanceAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[VbInstanceAttachment] {
	return pulumix.Output[VbInstanceAttachment]{
		OutputState: o.OutputState,
	}
}

// * If role == `PARENT`, the attached instance was created by this service instance
// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
func (o VbInstanceAttachmentOutput) IsImplicit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VbInstanceAttachment) *bool { return v.IsImplicit }).(pulumi.BoolPtrOutput)
}

// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
func (o VbInstanceAttachmentOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceAttachment) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// The dataplane instance URL of the attached instance
func (o VbInstanceAttachmentOutput) TargetInstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceAttachment) *string { return v.TargetInstanceUrl }).(pulumi.StringPtrOutput)
}

// The role of the target attachment.
func (o VbInstanceAttachmentOutput) TargetRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceAttachment) *string { return v.TargetRole }).(pulumi.StringPtrOutput)
}

// The type of the target instance, such as "FUSION".
func (o VbInstanceAttachmentOutput) TargetServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceAttachment) *string { return v.TargetServiceType }).(pulumi.StringPtrOutput)
}

type VbInstanceAttachmentArrayOutput struct{ *pulumi.OutputState }

func (VbInstanceAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VbInstanceAttachment)(nil)).Elem()
}

func (o VbInstanceAttachmentArrayOutput) ToVbInstanceAttachmentArrayOutput() VbInstanceAttachmentArrayOutput {
	return o
}

func (o VbInstanceAttachmentArrayOutput) ToVbInstanceAttachmentArrayOutputWithContext(ctx context.Context) VbInstanceAttachmentArrayOutput {
	return o
}

func (o VbInstanceAttachmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VbInstanceAttachment] {
	return pulumix.Output[[]VbInstanceAttachment]{
		OutputState: o.OutputState,
	}
}

func (o VbInstanceAttachmentArrayOutput) Index(i pulumi.IntInput) VbInstanceAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VbInstanceAttachment {
		return vs[0].([]VbInstanceAttachment)[vs[1].(int)]
	}).(VbInstanceAttachmentOutput)
}

type VbInstanceCustomEndpoint struct {
	// (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
	CertificateSecretId *string `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion *int `pulumi:"certificateSecretVersion"`
	// (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname string `pulumi:"hostname"`
}

// VbInstanceCustomEndpointInput is an input type that accepts VbInstanceCustomEndpointArgs and VbInstanceCustomEndpointOutput values.
// You can construct a concrete instance of `VbInstanceCustomEndpointInput` via:
//
//	VbInstanceCustomEndpointArgs{...}
type VbInstanceCustomEndpointInput interface {
	pulumi.Input

	ToVbInstanceCustomEndpointOutput() VbInstanceCustomEndpointOutput
	ToVbInstanceCustomEndpointOutputWithContext(context.Context) VbInstanceCustomEndpointOutput
}

type VbInstanceCustomEndpointArgs struct {
	// (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
	CertificateSecretId pulumi.StringPtrInput `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion pulumi.IntPtrInput `pulumi:"certificateSecretVersion"`
	// (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (VbInstanceCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceCustomEndpoint)(nil)).Elem()
}

func (i VbInstanceCustomEndpointArgs) ToVbInstanceCustomEndpointOutput() VbInstanceCustomEndpointOutput {
	return i.ToVbInstanceCustomEndpointOutputWithContext(context.Background())
}

func (i VbInstanceCustomEndpointArgs) ToVbInstanceCustomEndpointOutputWithContext(ctx context.Context) VbInstanceCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceCustomEndpointOutput)
}

func (i VbInstanceCustomEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[VbInstanceCustomEndpoint] {
	return pulumix.Output[VbInstanceCustomEndpoint]{
		OutputState: i.ToVbInstanceCustomEndpointOutputWithContext(ctx).OutputState,
	}
}

func (i VbInstanceCustomEndpointArgs) ToVbInstanceCustomEndpointPtrOutput() VbInstanceCustomEndpointPtrOutput {
	return i.ToVbInstanceCustomEndpointPtrOutputWithContext(context.Background())
}

func (i VbInstanceCustomEndpointArgs) ToVbInstanceCustomEndpointPtrOutputWithContext(ctx context.Context) VbInstanceCustomEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceCustomEndpointOutput).ToVbInstanceCustomEndpointPtrOutputWithContext(ctx)
}

// VbInstanceCustomEndpointPtrInput is an input type that accepts VbInstanceCustomEndpointArgs, VbInstanceCustomEndpointPtr and VbInstanceCustomEndpointPtrOutput values.
// You can construct a concrete instance of `VbInstanceCustomEndpointPtrInput` via:
//
//	        VbInstanceCustomEndpointArgs{...}
//
//	or:
//
//	        nil
type VbInstanceCustomEndpointPtrInput interface {
	pulumi.Input

	ToVbInstanceCustomEndpointPtrOutput() VbInstanceCustomEndpointPtrOutput
	ToVbInstanceCustomEndpointPtrOutputWithContext(context.Context) VbInstanceCustomEndpointPtrOutput
}

type vbInstanceCustomEndpointPtrType VbInstanceCustomEndpointArgs

func VbInstanceCustomEndpointPtr(v *VbInstanceCustomEndpointArgs) VbInstanceCustomEndpointPtrInput {
	return (*vbInstanceCustomEndpointPtrType)(v)
}

func (*vbInstanceCustomEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VbInstanceCustomEndpoint)(nil)).Elem()
}

func (i *vbInstanceCustomEndpointPtrType) ToVbInstanceCustomEndpointPtrOutput() VbInstanceCustomEndpointPtrOutput {
	return i.ToVbInstanceCustomEndpointPtrOutputWithContext(context.Background())
}

func (i *vbInstanceCustomEndpointPtrType) ToVbInstanceCustomEndpointPtrOutputWithContext(ctx context.Context) VbInstanceCustomEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceCustomEndpointPtrOutput)
}

func (i *vbInstanceCustomEndpointPtrType) ToOutput(ctx context.Context) pulumix.Output[*VbInstanceCustomEndpoint] {
	return pulumix.Output[*VbInstanceCustomEndpoint]{
		OutputState: i.ToVbInstanceCustomEndpointPtrOutputWithContext(ctx).OutputState,
	}
}

type VbInstanceCustomEndpointOutput struct{ *pulumi.OutputState }

func (VbInstanceCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceCustomEndpoint)(nil)).Elem()
}

func (o VbInstanceCustomEndpointOutput) ToVbInstanceCustomEndpointOutput() VbInstanceCustomEndpointOutput {
	return o
}

func (o VbInstanceCustomEndpointOutput) ToVbInstanceCustomEndpointOutputWithContext(ctx context.Context) VbInstanceCustomEndpointOutput {
	return o
}

func (o VbInstanceCustomEndpointOutput) ToVbInstanceCustomEndpointPtrOutput() VbInstanceCustomEndpointPtrOutput {
	return o.ToVbInstanceCustomEndpointPtrOutputWithContext(context.Background())
}

func (o VbInstanceCustomEndpointOutput) ToVbInstanceCustomEndpointPtrOutputWithContext(ctx context.Context) VbInstanceCustomEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VbInstanceCustomEndpoint) *VbInstanceCustomEndpoint {
		return &v
	}).(VbInstanceCustomEndpointPtrOutput)
}

func (o VbInstanceCustomEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[VbInstanceCustomEndpoint] {
	return pulumix.Output[VbInstanceCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
func (o VbInstanceCustomEndpointOutput) CertificateSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceCustomEndpoint) *string { return v.CertificateSecretId }).(pulumi.StringPtrOutput)
}

// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
func (o VbInstanceCustomEndpointOutput) CertificateSecretVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VbInstanceCustomEndpoint) *int { return v.CertificateSecretVersion }).(pulumi.IntPtrOutput)
}

// (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
func (o VbInstanceCustomEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v VbInstanceCustomEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

type VbInstanceCustomEndpointPtrOutput struct{ *pulumi.OutputState }

func (VbInstanceCustomEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VbInstanceCustomEndpoint)(nil)).Elem()
}

func (o VbInstanceCustomEndpointPtrOutput) ToVbInstanceCustomEndpointPtrOutput() VbInstanceCustomEndpointPtrOutput {
	return o
}

func (o VbInstanceCustomEndpointPtrOutput) ToVbInstanceCustomEndpointPtrOutputWithContext(ctx context.Context) VbInstanceCustomEndpointPtrOutput {
	return o
}

func (o VbInstanceCustomEndpointPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VbInstanceCustomEndpoint] {
	return pulumix.Output[*VbInstanceCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o VbInstanceCustomEndpointPtrOutput) Elem() VbInstanceCustomEndpointOutput {
	return o.ApplyT(func(v *VbInstanceCustomEndpoint) VbInstanceCustomEndpoint {
		if v != nil {
			return *v
		}
		var ret VbInstanceCustomEndpoint
		return ret
	}).(VbInstanceCustomEndpointOutput)
}

// (Updatable) Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname. All certificates should be stored in a single base64 encoded secret Note the update will fail if this is not a valid certificate.
func (o VbInstanceCustomEndpointPtrOutput) CertificateSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VbInstanceCustomEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.CertificateSecretId
	}).(pulumi.StringPtrOutput)
}

// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
func (o VbInstanceCustomEndpointPtrOutput) CertificateSecretVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VbInstanceCustomEndpoint) *int {
		if v == nil {
			return nil
		}
		return v.CertificateSecretVersion
	}).(pulumi.IntPtrOutput)
}

// (Updatable) A custom hostname to be used for the vb instance URL, in FQDN format.
func (o VbInstanceCustomEndpointPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VbInstanceCustomEndpoint) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

type VbInstanceIdcsInfo struct {
	// The IDCS application display name associated with the instance
	IdcsAppDisplayName *string `pulumi:"idcsAppDisplayName"`
	// The IDCS application ID associated with the instance
	IdcsAppId *string `pulumi:"idcsAppId"`
	// URL for the location of the IDCS Application (used by IDCS APIs)
	IdcsAppLocationUrl *string `pulumi:"idcsAppLocationUrl"`
	// The IDCS application name associated with the instance
	IdcsAppName *string `pulumi:"idcsAppName"`
	// The URL used as the primary audience for visual builder flows in this instance type: string
	InstancePrimaryAudienceUrl *string `pulumi:"instancePrimaryAudienceUrl"`
}

// VbInstanceIdcsInfoInput is an input type that accepts VbInstanceIdcsInfoArgs and VbInstanceIdcsInfoOutput values.
// You can construct a concrete instance of `VbInstanceIdcsInfoInput` via:
//
//	VbInstanceIdcsInfoArgs{...}
type VbInstanceIdcsInfoInput interface {
	pulumi.Input

	ToVbInstanceIdcsInfoOutput() VbInstanceIdcsInfoOutput
	ToVbInstanceIdcsInfoOutputWithContext(context.Context) VbInstanceIdcsInfoOutput
}

type VbInstanceIdcsInfoArgs struct {
	// The IDCS application display name associated with the instance
	IdcsAppDisplayName pulumi.StringPtrInput `pulumi:"idcsAppDisplayName"`
	// The IDCS application ID associated with the instance
	IdcsAppId pulumi.StringPtrInput `pulumi:"idcsAppId"`
	// URL for the location of the IDCS Application (used by IDCS APIs)
	IdcsAppLocationUrl pulumi.StringPtrInput `pulumi:"idcsAppLocationUrl"`
	// The IDCS application name associated with the instance
	IdcsAppName pulumi.StringPtrInput `pulumi:"idcsAppName"`
	// The URL used as the primary audience for visual builder flows in this instance type: string
	InstancePrimaryAudienceUrl pulumi.StringPtrInput `pulumi:"instancePrimaryAudienceUrl"`
}

func (VbInstanceIdcsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceIdcsInfo)(nil)).Elem()
}

func (i VbInstanceIdcsInfoArgs) ToVbInstanceIdcsInfoOutput() VbInstanceIdcsInfoOutput {
	return i.ToVbInstanceIdcsInfoOutputWithContext(context.Background())
}

func (i VbInstanceIdcsInfoArgs) ToVbInstanceIdcsInfoOutputWithContext(ctx context.Context) VbInstanceIdcsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceIdcsInfoOutput)
}

func (i VbInstanceIdcsInfoArgs) ToOutput(ctx context.Context) pulumix.Output[VbInstanceIdcsInfo] {
	return pulumix.Output[VbInstanceIdcsInfo]{
		OutputState: i.ToVbInstanceIdcsInfoOutputWithContext(ctx).OutputState,
	}
}

// VbInstanceIdcsInfoArrayInput is an input type that accepts VbInstanceIdcsInfoArray and VbInstanceIdcsInfoArrayOutput values.
// You can construct a concrete instance of `VbInstanceIdcsInfoArrayInput` via:
//
//	VbInstanceIdcsInfoArray{ VbInstanceIdcsInfoArgs{...} }
type VbInstanceIdcsInfoArrayInput interface {
	pulumi.Input

	ToVbInstanceIdcsInfoArrayOutput() VbInstanceIdcsInfoArrayOutput
	ToVbInstanceIdcsInfoArrayOutputWithContext(context.Context) VbInstanceIdcsInfoArrayOutput
}

type VbInstanceIdcsInfoArray []VbInstanceIdcsInfoInput

func (VbInstanceIdcsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VbInstanceIdcsInfo)(nil)).Elem()
}

func (i VbInstanceIdcsInfoArray) ToVbInstanceIdcsInfoArrayOutput() VbInstanceIdcsInfoArrayOutput {
	return i.ToVbInstanceIdcsInfoArrayOutputWithContext(context.Background())
}

func (i VbInstanceIdcsInfoArray) ToVbInstanceIdcsInfoArrayOutputWithContext(ctx context.Context) VbInstanceIdcsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceIdcsInfoArrayOutput)
}

func (i VbInstanceIdcsInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]VbInstanceIdcsInfo] {
	return pulumix.Output[[]VbInstanceIdcsInfo]{
		OutputState: i.ToVbInstanceIdcsInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type VbInstanceIdcsInfoOutput struct{ *pulumi.OutputState }

func (VbInstanceIdcsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VbInstanceIdcsInfo)(nil)).Elem()
}

func (o VbInstanceIdcsInfoOutput) ToVbInstanceIdcsInfoOutput() VbInstanceIdcsInfoOutput {
	return o
}

func (o VbInstanceIdcsInfoOutput) ToVbInstanceIdcsInfoOutputWithContext(ctx context.Context) VbInstanceIdcsInfoOutput {
	return o
}

func (o VbInstanceIdcsInfoOutput) ToOutput(ctx context.Context) pulumix.Output[VbInstanceIdcsInfo] {
	return pulumix.Output[VbInstanceIdcsInfo]{
		OutputState: o.OutputState,
	}
}

// The IDCS application display name associated with the instance
func (o VbInstanceIdcsInfoOutput) IdcsAppDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceIdcsInfo) *string { return v.IdcsAppDisplayName }).(pulumi.StringPtrOutput)
}

// The IDCS application ID associated with the instance
func (o VbInstanceIdcsInfoOutput) IdcsAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceIdcsInfo) *string { return v.IdcsAppId }).(pulumi.StringPtrOutput)
}

// URL for the location of the IDCS Application (used by IDCS APIs)
func (o VbInstanceIdcsInfoOutput) IdcsAppLocationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceIdcsInfo) *string { return v.IdcsAppLocationUrl }).(pulumi.StringPtrOutput)
}

// The IDCS application name associated with the instance
func (o VbInstanceIdcsInfoOutput) IdcsAppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceIdcsInfo) *string { return v.IdcsAppName }).(pulumi.StringPtrOutput)
}

// The URL used as the primary audience for visual builder flows in this instance type: string
func (o VbInstanceIdcsInfoOutput) InstancePrimaryAudienceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VbInstanceIdcsInfo) *string { return v.InstancePrimaryAudienceUrl }).(pulumi.StringPtrOutput)
}

type VbInstanceIdcsInfoArrayOutput struct{ *pulumi.OutputState }

func (VbInstanceIdcsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VbInstanceIdcsInfo)(nil)).Elem()
}

func (o VbInstanceIdcsInfoArrayOutput) ToVbInstanceIdcsInfoArrayOutput() VbInstanceIdcsInfoArrayOutput {
	return o
}

func (o VbInstanceIdcsInfoArrayOutput) ToVbInstanceIdcsInfoArrayOutputWithContext(ctx context.Context) VbInstanceIdcsInfoArrayOutput {
	return o
}

func (o VbInstanceIdcsInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VbInstanceIdcsInfo] {
	return pulumix.Output[[]VbInstanceIdcsInfo]{
		OutputState: o.OutputState,
	}
}

func (o VbInstanceIdcsInfoArrayOutput) Index(i pulumi.IntInput) VbInstanceIdcsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VbInstanceIdcsInfo {
		return vs[0].([]VbInstanceIdcsInfo)[vs[1].(int)]
	}).(VbInstanceIdcsInfoOutput)
}

type GetVbInstanceAlternateCustomEndpoint struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId string `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion int `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname string `pulumi:"hostname"`
}

// GetVbInstanceAlternateCustomEndpointInput is an input type that accepts GetVbInstanceAlternateCustomEndpointArgs and GetVbInstanceAlternateCustomEndpointOutput values.
// You can construct a concrete instance of `GetVbInstanceAlternateCustomEndpointInput` via:
//
//	GetVbInstanceAlternateCustomEndpointArgs{...}
type GetVbInstanceAlternateCustomEndpointInput interface {
	pulumi.Input

	ToGetVbInstanceAlternateCustomEndpointOutput() GetVbInstanceAlternateCustomEndpointOutput
	ToGetVbInstanceAlternateCustomEndpointOutputWithContext(context.Context) GetVbInstanceAlternateCustomEndpointOutput
}

type GetVbInstanceAlternateCustomEndpointArgs struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId pulumi.StringInput `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion pulumi.IntInput `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetVbInstanceAlternateCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstanceAlternateCustomEndpointArgs) ToGetVbInstanceAlternateCustomEndpointOutput() GetVbInstanceAlternateCustomEndpointOutput {
	return i.ToGetVbInstanceAlternateCustomEndpointOutputWithContext(context.Background())
}

func (i GetVbInstanceAlternateCustomEndpointArgs) ToGetVbInstanceAlternateCustomEndpointOutputWithContext(ctx context.Context) GetVbInstanceAlternateCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceAlternateCustomEndpointOutput)
}

func (i GetVbInstanceAlternateCustomEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[GetVbInstanceAlternateCustomEndpoint]{
		OutputState: i.ToGetVbInstanceAlternateCustomEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstanceAlternateCustomEndpointArrayInput is an input type that accepts GetVbInstanceAlternateCustomEndpointArray and GetVbInstanceAlternateCustomEndpointArrayOutput values.
// You can construct a concrete instance of `GetVbInstanceAlternateCustomEndpointArrayInput` via:
//
//	GetVbInstanceAlternateCustomEndpointArray{ GetVbInstanceAlternateCustomEndpointArgs{...} }
type GetVbInstanceAlternateCustomEndpointArrayInput interface {
	pulumi.Input

	ToGetVbInstanceAlternateCustomEndpointArrayOutput() GetVbInstanceAlternateCustomEndpointArrayOutput
	ToGetVbInstanceAlternateCustomEndpointArrayOutputWithContext(context.Context) GetVbInstanceAlternateCustomEndpointArrayOutput
}

type GetVbInstanceAlternateCustomEndpointArray []GetVbInstanceAlternateCustomEndpointInput

func (GetVbInstanceAlternateCustomEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstanceAlternateCustomEndpointArray) ToGetVbInstanceAlternateCustomEndpointArrayOutput() GetVbInstanceAlternateCustomEndpointArrayOutput {
	return i.ToGetVbInstanceAlternateCustomEndpointArrayOutputWithContext(context.Background())
}

func (i GetVbInstanceAlternateCustomEndpointArray) ToGetVbInstanceAlternateCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstanceAlternateCustomEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceAlternateCustomEndpointArrayOutput)
}

func (i GetVbInstanceAlternateCustomEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[[]GetVbInstanceAlternateCustomEndpoint]{
		OutputState: i.ToGetVbInstanceAlternateCustomEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstanceAlternateCustomEndpointOutput struct{ *pulumi.OutputState }

func (GetVbInstanceAlternateCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstanceAlternateCustomEndpointOutput) ToGetVbInstanceAlternateCustomEndpointOutput() GetVbInstanceAlternateCustomEndpointOutput {
	return o
}

func (o GetVbInstanceAlternateCustomEndpointOutput) ToGetVbInstanceAlternateCustomEndpointOutputWithContext(ctx context.Context) GetVbInstanceAlternateCustomEndpointOutput {
	return o
}

func (o GetVbInstanceAlternateCustomEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[GetVbInstanceAlternateCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
func (o GetVbInstanceAlternateCustomEndpointOutput) CertificateSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceAlternateCustomEndpoint) string { return v.CertificateSecretId }).(pulumi.StringOutput)
}

// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
func (o GetVbInstanceAlternateCustomEndpointOutput) CertificateSecretVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbInstanceAlternateCustomEndpoint) int { return v.CertificateSecretVersion }).(pulumi.IntOutput)
}

// A custom hostname to be used for the vb instance URL, in FQDN format.
func (o GetVbInstanceAlternateCustomEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceAlternateCustomEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetVbInstanceAlternateCustomEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstanceAlternateCustomEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceAlternateCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstanceAlternateCustomEndpointArrayOutput) ToGetVbInstanceAlternateCustomEndpointArrayOutput() GetVbInstanceAlternateCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstanceAlternateCustomEndpointArrayOutput) ToGetVbInstanceAlternateCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstanceAlternateCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstanceAlternateCustomEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceAlternateCustomEndpoint] {
	return pulumix.Output[[]GetVbInstanceAlternateCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstanceAlternateCustomEndpointArrayOutput) Index(i pulumi.IntInput) GetVbInstanceAlternateCustomEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstanceAlternateCustomEndpoint {
		return vs[0].([]GetVbInstanceAlternateCustomEndpoint)[vs[1].(int)]
	}).(GetVbInstanceAlternateCustomEndpointOutput)
}

type GetVbInstanceApplicationsApplicationSummaryCollection struct {
	Items []GetVbInstanceApplicationsApplicationSummaryCollectionItem `pulumi:"items"`
}

// GetVbInstanceApplicationsApplicationSummaryCollectionInput is an input type that accepts GetVbInstanceApplicationsApplicationSummaryCollectionArgs and GetVbInstanceApplicationsApplicationSummaryCollectionOutput values.
// You can construct a concrete instance of `GetVbInstanceApplicationsApplicationSummaryCollectionInput` via:
//
//	GetVbInstanceApplicationsApplicationSummaryCollectionArgs{...}
type GetVbInstanceApplicationsApplicationSummaryCollectionInput interface {
	pulumi.Input

	ToGetVbInstanceApplicationsApplicationSummaryCollectionOutput() GetVbInstanceApplicationsApplicationSummaryCollectionOutput
	ToGetVbInstanceApplicationsApplicationSummaryCollectionOutputWithContext(context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionOutput
}

type GetVbInstanceApplicationsApplicationSummaryCollectionArgs struct {
	Items GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayInput `pulumi:"items"`
}

func (GetVbInstanceApplicationsApplicationSummaryCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollection)(nil)).Elem()
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionArgs) ToGetVbInstanceApplicationsApplicationSummaryCollectionOutput() GetVbInstanceApplicationsApplicationSummaryCollectionOutput {
	return i.ToGetVbInstanceApplicationsApplicationSummaryCollectionOutputWithContext(context.Background())
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionArgs) ToGetVbInstanceApplicationsApplicationSummaryCollectionOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceApplicationsApplicationSummaryCollectionOutput)
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollection] {
	return pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollection]{
		OutputState: i.ToGetVbInstanceApplicationsApplicationSummaryCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstanceApplicationsApplicationSummaryCollectionArrayInput is an input type that accepts GetVbInstanceApplicationsApplicationSummaryCollectionArray and GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput values.
// You can construct a concrete instance of `GetVbInstanceApplicationsApplicationSummaryCollectionArrayInput` via:
//
//	GetVbInstanceApplicationsApplicationSummaryCollectionArray{ GetVbInstanceApplicationsApplicationSummaryCollectionArgs{...} }
type GetVbInstanceApplicationsApplicationSummaryCollectionArrayInput interface {
	pulumi.Input

	ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput() GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput
	ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutputWithContext(context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput
}

type GetVbInstanceApplicationsApplicationSummaryCollectionArray []GetVbInstanceApplicationsApplicationSummaryCollectionInput

func (GetVbInstanceApplicationsApplicationSummaryCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceApplicationsApplicationSummaryCollection)(nil)).Elem()
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionArray) ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput() GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput {
	return i.ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutputWithContext(context.Background())
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionArray) ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput)
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollection] {
	return pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollection]{
		OutputState: i.ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstanceApplicationsApplicationSummaryCollectionOutput struct{ *pulumi.OutputState }

func (GetVbInstanceApplicationsApplicationSummaryCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollection)(nil)).Elem()
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionOutput() GetVbInstanceApplicationsApplicationSummaryCollectionOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollection] {
	return pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionOutput) Items() GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput {
	return o.ApplyT(func(v GetVbInstanceApplicationsApplicationSummaryCollection) []GetVbInstanceApplicationsApplicationSummaryCollectionItem {
		return v.Items
	}).(GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput)
}

type GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceApplicationsApplicationSummaryCollection)(nil)).Elem()
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput() GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionArrayOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollection] {
	return pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput) Index(i pulumi.IntInput) GetVbInstanceApplicationsApplicationSummaryCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstanceApplicationsApplicationSummaryCollection {
		return vs[0].([]GetVbInstanceApplicationsApplicationSummaryCollection)[vs[1].(int)]
	}).(GetVbInstanceApplicationsApplicationSummaryCollectionOutput)
}

type GetVbInstanceApplicationsApplicationSummaryCollectionItem struct {
	// The Visual Builder application identifier.
	Id string `pulumi:"id"`
	// The Visual Builder application project identifier.
	ProjectId string `pulumi:"projectId"`
	// The state of visual builder application. Either LIVE or STAGED
	State string `pulumi:"state"`
	// The Visual Builder application version
	Version string `pulumi:"version"`
}

// GetVbInstanceApplicationsApplicationSummaryCollectionItemInput is an input type that accepts GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs and GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput values.
// You can construct a concrete instance of `GetVbInstanceApplicationsApplicationSummaryCollectionItemInput` via:
//
//	GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs{...}
type GetVbInstanceApplicationsApplicationSummaryCollectionItemInput interface {
	pulumi.Input

	ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutput() GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput
	ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutputWithContext(context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput
}

type GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs struct {
	// The Visual Builder application identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The Visual Builder application project identifier.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The state of visual builder application. Either LIVE or STAGED
	State pulumi.StringInput `pulumi:"state"`
	// The Visual Builder application version
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollectionItem)(nil)).Elem()
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutput() GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput {
	return i.ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutputWithContext(context.Background())
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput)
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollectionItem] {
	return pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollectionItem]{
		OutputState: i.ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayInput is an input type that accepts GetVbInstanceApplicationsApplicationSummaryCollectionItemArray and GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayInput` via:
//
//	GetVbInstanceApplicationsApplicationSummaryCollectionItemArray{ GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs{...} }
type GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayInput interface {
	pulumi.Input

	ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput() GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput
	ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutputWithContext(context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput
}

type GetVbInstanceApplicationsApplicationSummaryCollectionItemArray []GetVbInstanceApplicationsApplicationSummaryCollectionItemInput

func (GetVbInstanceApplicationsApplicationSummaryCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceApplicationsApplicationSummaryCollectionItem)(nil)).Elem()
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionItemArray) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput() GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput {
	return i.ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionItemArray) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput)
}

func (i GetVbInstanceApplicationsApplicationSummaryCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollectionItem] {
	return pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollectionItem]{
		OutputState: i.ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput struct{ *pulumi.OutputState }

func (GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollectionItem)(nil)).Elem()
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutput() GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollectionItem] {
	return pulumix.Output[GetVbInstanceApplicationsApplicationSummaryCollectionItem]{
		OutputState: o.OutputState,
	}
}

// The Visual Builder application identifier.
func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceApplicationsApplicationSummaryCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The Visual Builder application project identifier.
func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceApplicationsApplicationSummaryCollectionItem) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The state of visual builder application. Either LIVE or STAGED
func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceApplicationsApplicationSummaryCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The Visual Builder application version
func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceApplicationsApplicationSummaryCollectionItem) string { return v.Version }).(pulumi.StringOutput)
}

type GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceApplicationsApplicationSummaryCollectionItem)(nil)).Elem()
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput() GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput) ToGetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput {
	return o
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollectionItem] {
	return pulumix.Output[[]GetVbInstanceApplicationsApplicationSummaryCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput) Index(i pulumi.IntInput) GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstanceApplicationsApplicationSummaryCollectionItem {
		return vs[0].([]GetVbInstanceApplicationsApplicationSummaryCollectionItem)[vs[1].(int)]
	}).(GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput)
}

type GetVbInstanceAttachment struct {
	// * If role == `PARENT`, the attached instance was created by this service instance
	// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
	IsImplicit bool `pulumi:"isImplicit"`
	// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
	TargetId string `pulumi:"targetId"`
	// The dataplane instance URL of the attached instance
	TargetInstanceUrl string `pulumi:"targetInstanceUrl"`
	// The role of the target attachment.
	TargetRole string `pulumi:"targetRole"`
	// The type of the target instance, such as "FUSION".
	TargetServiceType string `pulumi:"targetServiceType"`
}

// GetVbInstanceAttachmentInput is an input type that accepts GetVbInstanceAttachmentArgs and GetVbInstanceAttachmentOutput values.
// You can construct a concrete instance of `GetVbInstanceAttachmentInput` via:
//
//	GetVbInstanceAttachmentArgs{...}
type GetVbInstanceAttachmentInput interface {
	pulumi.Input

	ToGetVbInstanceAttachmentOutput() GetVbInstanceAttachmentOutput
	ToGetVbInstanceAttachmentOutputWithContext(context.Context) GetVbInstanceAttachmentOutput
}

type GetVbInstanceAttachmentArgs struct {
	// * If role == `PARENT`, the attached instance was created by this service instance
	// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
	IsImplicit pulumi.BoolInput `pulumi:"isImplicit"`
	// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The dataplane instance URL of the attached instance
	TargetInstanceUrl pulumi.StringInput `pulumi:"targetInstanceUrl"`
	// The role of the target attachment.
	TargetRole pulumi.StringInput `pulumi:"targetRole"`
	// The type of the target instance, such as "FUSION".
	TargetServiceType pulumi.StringInput `pulumi:"targetServiceType"`
}

func (GetVbInstanceAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceAttachment)(nil)).Elem()
}

func (i GetVbInstanceAttachmentArgs) ToGetVbInstanceAttachmentOutput() GetVbInstanceAttachmentOutput {
	return i.ToGetVbInstanceAttachmentOutputWithContext(context.Background())
}

func (i GetVbInstanceAttachmentArgs) ToGetVbInstanceAttachmentOutputWithContext(ctx context.Context) GetVbInstanceAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceAttachmentOutput)
}

func (i GetVbInstanceAttachmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceAttachment] {
	return pulumix.Output[GetVbInstanceAttachment]{
		OutputState: i.ToGetVbInstanceAttachmentOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstanceAttachmentArrayInput is an input type that accepts GetVbInstanceAttachmentArray and GetVbInstanceAttachmentArrayOutput values.
// You can construct a concrete instance of `GetVbInstanceAttachmentArrayInput` via:
//
//	GetVbInstanceAttachmentArray{ GetVbInstanceAttachmentArgs{...} }
type GetVbInstanceAttachmentArrayInput interface {
	pulumi.Input

	ToGetVbInstanceAttachmentArrayOutput() GetVbInstanceAttachmentArrayOutput
	ToGetVbInstanceAttachmentArrayOutputWithContext(context.Context) GetVbInstanceAttachmentArrayOutput
}

type GetVbInstanceAttachmentArray []GetVbInstanceAttachmentInput

func (GetVbInstanceAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceAttachment)(nil)).Elem()
}

func (i GetVbInstanceAttachmentArray) ToGetVbInstanceAttachmentArrayOutput() GetVbInstanceAttachmentArrayOutput {
	return i.ToGetVbInstanceAttachmentArrayOutputWithContext(context.Background())
}

func (i GetVbInstanceAttachmentArray) ToGetVbInstanceAttachmentArrayOutputWithContext(ctx context.Context) GetVbInstanceAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceAttachmentArrayOutput)
}

func (i GetVbInstanceAttachmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceAttachment] {
	return pulumix.Output[[]GetVbInstanceAttachment]{
		OutputState: i.ToGetVbInstanceAttachmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstanceAttachmentOutput struct{ *pulumi.OutputState }

func (GetVbInstanceAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceAttachment)(nil)).Elem()
}

func (o GetVbInstanceAttachmentOutput) ToGetVbInstanceAttachmentOutput() GetVbInstanceAttachmentOutput {
	return o
}

func (o GetVbInstanceAttachmentOutput) ToGetVbInstanceAttachmentOutputWithContext(ctx context.Context) GetVbInstanceAttachmentOutput {
	return o
}

func (o GetVbInstanceAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceAttachment] {
	return pulumix.Output[GetVbInstanceAttachment]{
		OutputState: o.OutputState,
	}
}

// * If role == `PARENT`, the attached instance was created by this service instance
// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
func (o GetVbInstanceAttachmentOutput) IsImplicit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVbInstanceAttachment) bool { return v.IsImplicit }).(pulumi.BoolOutput)
}

// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
func (o GetVbInstanceAttachmentOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceAttachment) string { return v.TargetId }).(pulumi.StringOutput)
}

// The dataplane instance URL of the attached instance
func (o GetVbInstanceAttachmentOutput) TargetInstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceAttachment) string { return v.TargetInstanceUrl }).(pulumi.StringOutput)
}

// The role of the target attachment.
func (o GetVbInstanceAttachmentOutput) TargetRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceAttachment) string { return v.TargetRole }).(pulumi.StringOutput)
}

// The type of the target instance, such as "FUSION".
func (o GetVbInstanceAttachmentOutput) TargetServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceAttachment) string { return v.TargetServiceType }).(pulumi.StringOutput)
}

type GetVbInstanceAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstanceAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceAttachment)(nil)).Elem()
}

func (o GetVbInstanceAttachmentArrayOutput) ToGetVbInstanceAttachmentArrayOutput() GetVbInstanceAttachmentArrayOutput {
	return o
}

func (o GetVbInstanceAttachmentArrayOutput) ToGetVbInstanceAttachmentArrayOutputWithContext(ctx context.Context) GetVbInstanceAttachmentArrayOutput {
	return o
}

func (o GetVbInstanceAttachmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceAttachment] {
	return pulumix.Output[[]GetVbInstanceAttachment]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstanceAttachmentArrayOutput) Index(i pulumi.IntInput) GetVbInstanceAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstanceAttachment {
		return vs[0].([]GetVbInstanceAttachment)[vs[1].(int)]
	}).(GetVbInstanceAttachmentOutput)
}

type GetVbInstanceCustomEndpoint struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId string `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion int `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname string `pulumi:"hostname"`
}

// GetVbInstanceCustomEndpointInput is an input type that accepts GetVbInstanceCustomEndpointArgs and GetVbInstanceCustomEndpointOutput values.
// You can construct a concrete instance of `GetVbInstanceCustomEndpointInput` via:
//
//	GetVbInstanceCustomEndpointArgs{...}
type GetVbInstanceCustomEndpointInput interface {
	pulumi.Input

	ToGetVbInstanceCustomEndpointOutput() GetVbInstanceCustomEndpointOutput
	ToGetVbInstanceCustomEndpointOutputWithContext(context.Context) GetVbInstanceCustomEndpointOutput
}

type GetVbInstanceCustomEndpointArgs struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId pulumi.StringInput `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion pulumi.IntInput `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetVbInstanceCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstanceCustomEndpointArgs) ToGetVbInstanceCustomEndpointOutput() GetVbInstanceCustomEndpointOutput {
	return i.ToGetVbInstanceCustomEndpointOutputWithContext(context.Background())
}

func (i GetVbInstanceCustomEndpointArgs) ToGetVbInstanceCustomEndpointOutputWithContext(ctx context.Context) GetVbInstanceCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceCustomEndpointOutput)
}

func (i GetVbInstanceCustomEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceCustomEndpoint] {
	return pulumix.Output[GetVbInstanceCustomEndpoint]{
		OutputState: i.ToGetVbInstanceCustomEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstanceCustomEndpointArrayInput is an input type that accepts GetVbInstanceCustomEndpointArray and GetVbInstanceCustomEndpointArrayOutput values.
// You can construct a concrete instance of `GetVbInstanceCustomEndpointArrayInput` via:
//
//	GetVbInstanceCustomEndpointArray{ GetVbInstanceCustomEndpointArgs{...} }
type GetVbInstanceCustomEndpointArrayInput interface {
	pulumi.Input

	ToGetVbInstanceCustomEndpointArrayOutput() GetVbInstanceCustomEndpointArrayOutput
	ToGetVbInstanceCustomEndpointArrayOutputWithContext(context.Context) GetVbInstanceCustomEndpointArrayOutput
}

type GetVbInstanceCustomEndpointArray []GetVbInstanceCustomEndpointInput

func (GetVbInstanceCustomEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstanceCustomEndpointArray) ToGetVbInstanceCustomEndpointArrayOutput() GetVbInstanceCustomEndpointArrayOutput {
	return i.ToGetVbInstanceCustomEndpointArrayOutputWithContext(context.Background())
}

func (i GetVbInstanceCustomEndpointArray) ToGetVbInstanceCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstanceCustomEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceCustomEndpointArrayOutput)
}

func (i GetVbInstanceCustomEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceCustomEndpoint] {
	return pulumix.Output[[]GetVbInstanceCustomEndpoint]{
		OutputState: i.ToGetVbInstanceCustomEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstanceCustomEndpointOutput struct{ *pulumi.OutputState }

func (GetVbInstanceCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstanceCustomEndpointOutput) ToGetVbInstanceCustomEndpointOutput() GetVbInstanceCustomEndpointOutput {
	return o
}

func (o GetVbInstanceCustomEndpointOutput) ToGetVbInstanceCustomEndpointOutputWithContext(ctx context.Context) GetVbInstanceCustomEndpointOutput {
	return o
}

func (o GetVbInstanceCustomEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceCustomEndpoint] {
	return pulumix.Output[GetVbInstanceCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
func (o GetVbInstanceCustomEndpointOutput) CertificateSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceCustomEndpoint) string { return v.CertificateSecretId }).(pulumi.StringOutput)
}

// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
func (o GetVbInstanceCustomEndpointOutput) CertificateSecretVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbInstanceCustomEndpoint) int { return v.CertificateSecretVersion }).(pulumi.IntOutput)
}

// A custom hostname to be used for the vb instance URL, in FQDN format.
func (o GetVbInstanceCustomEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceCustomEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetVbInstanceCustomEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstanceCustomEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstanceCustomEndpointArrayOutput) ToGetVbInstanceCustomEndpointArrayOutput() GetVbInstanceCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstanceCustomEndpointArrayOutput) ToGetVbInstanceCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstanceCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstanceCustomEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceCustomEndpoint] {
	return pulumix.Output[[]GetVbInstanceCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstanceCustomEndpointArrayOutput) Index(i pulumi.IntInput) GetVbInstanceCustomEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstanceCustomEndpoint {
		return vs[0].([]GetVbInstanceCustomEndpoint)[vs[1].(int)]
	}).(GetVbInstanceCustomEndpointOutput)
}

type GetVbInstanceIdcsInfo struct {
	// The IDCS application display name associated with the instance
	IdcsAppDisplayName string `pulumi:"idcsAppDisplayName"`
	// The IDCS application ID associated with the instance
	IdcsAppId string `pulumi:"idcsAppId"`
	// URL for the location of the IDCS Application (used by IDCS APIs)
	IdcsAppLocationUrl string `pulumi:"idcsAppLocationUrl"`
	// The IDCS application name associated with the instance
	IdcsAppName string `pulumi:"idcsAppName"`
	// The URL used as the primary audience for visual builder flows in this instance type: string
	InstancePrimaryAudienceUrl string `pulumi:"instancePrimaryAudienceUrl"`
}

// GetVbInstanceIdcsInfoInput is an input type that accepts GetVbInstanceIdcsInfoArgs and GetVbInstanceIdcsInfoOutput values.
// You can construct a concrete instance of `GetVbInstanceIdcsInfoInput` via:
//
//	GetVbInstanceIdcsInfoArgs{...}
type GetVbInstanceIdcsInfoInput interface {
	pulumi.Input

	ToGetVbInstanceIdcsInfoOutput() GetVbInstanceIdcsInfoOutput
	ToGetVbInstanceIdcsInfoOutputWithContext(context.Context) GetVbInstanceIdcsInfoOutput
}

type GetVbInstanceIdcsInfoArgs struct {
	// The IDCS application display name associated with the instance
	IdcsAppDisplayName pulumi.StringInput `pulumi:"idcsAppDisplayName"`
	// The IDCS application ID associated with the instance
	IdcsAppId pulumi.StringInput `pulumi:"idcsAppId"`
	// URL for the location of the IDCS Application (used by IDCS APIs)
	IdcsAppLocationUrl pulumi.StringInput `pulumi:"idcsAppLocationUrl"`
	// The IDCS application name associated with the instance
	IdcsAppName pulumi.StringInput `pulumi:"idcsAppName"`
	// The URL used as the primary audience for visual builder flows in this instance type: string
	InstancePrimaryAudienceUrl pulumi.StringInput `pulumi:"instancePrimaryAudienceUrl"`
}

func (GetVbInstanceIdcsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceIdcsInfo)(nil)).Elem()
}

func (i GetVbInstanceIdcsInfoArgs) ToGetVbInstanceIdcsInfoOutput() GetVbInstanceIdcsInfoOutput {
	return i.ToGetVbInstanceIdcsInfoOutputWithContext(context.Background())
}

func (i GetVbInstanceIdcsInfoArgs) ToGetVbInstanceIdcsInfoOutputWithContext(ctx context.Context) GetVbInstanceIdcsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceIdcsInfoOutput)
}

func (i GetVbInstanceIdcsInfoArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceIdcsInfo] {
	return pulumix.Output[GetVbInstanceIdcsInfo]{
		OutputState: i.ToGetVbInstanceIdcsInfoOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstanceIdcsInfoArrayInput is an input type that accepts GetVbInstanceIdcsInfoArray and GetVbInstanceIdcsInfoArrayOutput values.
// You can construct a concrete instance of `GetVbInstanceIdcsInfoArrayInput` via:
//
//	GetVbInstanceIdcsInfoArray{ GetVbInstanceIdcsInfoArgs{...} }
type GetVbInstanceIdcsInfoArrayInput interface {
	pulumi.Input

	ToGetVbInstanceIdcsInfoArrayOutput() GetVbInstanceIdcsInfoArrayOutput
	ToGetVbInstanceIdcsInfoArrayOutputWithContext(context.Context) GetVbInstanceIdcsInfoArrayOutput
}

type GetVbInstanceIdcsInfoArray []GetVbInstanceIdcsInfoInput

func (GetVbInstanceIdcsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceIdcsInfo)(nil)).Elem()
}

func (i GetVbInstanceIdcsInfoArray) ToGetVbInstanceIdcsInfoArrayOutput() GetVbInstanceIdcsInfoArrayOutput {
	return i.ToGetVbInstanceIdcsInfoArrayOutputWithContext(context.Background())
}

func (i GetVbInstanceIdcsInfoArray) ToGetVbInstanceIdcsInfoArrayOutputWithContext(ctx context.Context) GetVbInstanceIdcsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstanceIdcsInfoArrayOutput)
}

func (i GetVbInstanceIdcsInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceIdcsInfo] {
	return pulumix.Output[[]GetVbInstanceIdcsInfo]{
		OutputState: i.ToGetVbInstanceIdcsInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstanceIdcsInfoOutput struct{ *pulumi.OutputState }

func (GetVbInstanceIdcsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstanceIdcsInfo)(nil)).Elem()
}

func (o GetVbInstanceIdcsInfoOutput) ToGetVbInstanceIdcsInfoOutput() GetVbInstanceIdcsInfoOutput {
	return o
}

func (o GetVbInstanceIdcsInfoOutput) ToGetVbInstanceIdcsInfoOutputWithContext(ctx context.Context) GetVbInstanceIdcsInfoOutput {
	return o
}

func (o GetVbInstanceIdcsInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstanceIdcsInfo] {
	return pulumix.Output[GetVbInstanceIdcsInfo]{
		OutputState: o.OutputState,
	}
}

// The IDCS application display name associated with the instance
func (o GetVbInstanceIdcsInfoOutput) IdcsAppDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceIdcsInfo) string { return v.IdcsAppDisplayName }).(pulumi.StringOutput)
}

// The IDCS application ID associated with the instance
func (o GetVbInstanceIdcsInfoOutput) IdcsAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceIdcsInfo) string { return v.IdcsAppId }).(pulumi.StringOutput)
}

// URL for the location of the IDCS Application (used by IDCS APIs)
func (o GetVbInstanceIdcsInfoOutput) IdcsAppLocationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceIdcsInfo) string { return v.IdcsAppLocationUrl }).(pulumi.StringOutput)
}

// The IDCS application name associated with the instance
func (o GetVbInstanceIdcsInfoOutput) IdcsAppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceIdcsInfo) string { return v.IdcsAppName }).(pulumi.StringOutput)
}

// The URL used as the primary audience for visual builder flows in this instance type: string
func (o GetVbInstanceIdcsInfoOutput) InstancePrimaryAudienceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstanceIdcsInfo) string { return v.InstancePrimaryAudienceUrl }).(pulumi.StringOutput)
}

type GetVbInstanceIdcsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstanceIdcsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstanceIdcsInfo)(nil)).Elem()
}

func (o GetVbInstanceIdcsInfoArrayOutput) ToGetVbInstanceIdcsInfoArrayOutput() GetVbInstanceIdcsInfoArrayOutput {
	return o
}

func (o GetVbInstanceIdcsInfoArrayOutput) ToGetVbInstanceIdcsInfoArrayOutputWithContext(ctx context.Context) GetVbInstanceIdcsInfoArrayOutput {
	return o
}

func (o GetVbInstanceIdcsInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstanceIdcsInfo] {
	return pulumix.Output[[]GetVbInstanceIdcsInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstanceIdcsInfoArrayOutput) Index(i pulumi.IntInput) GetVbInstanceIdcsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstanceIdcsInfo {
		return vs[0].([]GetVbInstanceIdcsInfo)[vs[1].(int)]
	}).(GetVbInstanceIdcsInfoOutput)
}

type GetVbInstancesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetVbInstancesFilterInput is an input type that accepts GetVbInstancesFilterArgs and GetVbInstancesFilterOutput values.
// You can construct a concrete instance of `GetVbInstancesFilterInput` via:
//
//	GetVbInstancesFilterArgs{...}
type GetVbInstancesFilterInput interface {
	pulumi.Input

	ToGetVbInstancesFilterOutput() GetVbInstancesFilterOutput
	ToGetVbInstancesFilterOutputWithContext(context.Context) GetVbInstancesFilterOutput
}

type GetVbInstancesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVbInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesFilter)(nil)).Elem()
}

func (i GetVbInstancesFilterArgs) ToGetVbInstancesFilterOutput() GetVbInstancesFilterOutput {
	return i.ToGetVbInstancesFilterOutputWithContext(context.Background())
}

func (i GetVbInstancesFilterArgs) ToGetVbInstancesFilterOutputWithContext(ctx context.Context) GetVbInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesFilterOutput)
}

func (i GetVbInstancesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesFilter] {
	return pulumix.Output[GetVbInstancesFilter]{
		OutputState: i.ToGetVbInstancesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstancesFilterArrayInput is an input type that accepts GetVbInstancesFilterArray and GetVbInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetVbInstancesFilterArrayInput` via:
//
//	GetVbInstancesFilterArray{ GetVbInstancesFilterArgs{...} }
type GetVbInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetVbInstancesFilterArrayOutput() GetVbInstancesFilterArrayOutput
	ToGetVbInstancesFilterArrayOutputWithContext(context.Context) GetVbInstancesFilterArrayOutput
}

type GetVbInstancesFilterArray []GetVbInstancesFilterInput

func (GetVbInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesFilter)(nil)).Elem()
}

func (i GetVbInstancesFilterArray) ToGetVbInstancesFilterArrayOutput() GetVbInstancesFilterArrayOutput {
	return i.ToGetVbInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetVbInstancesFilterArray) ToGetVbInstancesFilterArrayOutputWithContext(ctx context.Context) GetVbInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesFilterArrayOutput)
}

func (i GetVbInstancesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesFilter] {
	return pulumix.Output[[]GetVbInstancesFilter]{
		OutputState: i.ToGetVbInstancesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetVbInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesFilter)(nil)).Elem()
}

func (o GetVbInstancesFilterOutput) ToGetVbInstancesFilterOutput() GetVbInstancesFilterOutput {
	return o
}

func (o GetVbInstancesFilterOutput) ToGetVbInstancesFilterOutputWithContext(ctx context.Context) GetVbInstancesFilterOutput {
	return o
}

func (o GetVbInstancesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesFilter] {
	return pulumix.Output[GetVbInstancesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVbInstancesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVbInstancesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetVbInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVbInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVbInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesFilter)(nil)).Elem()
}

func (o GetVbInstancesFilterArrayOutput) ToGetVbInstancesFilterArrayOutput() GetVbInstancesFilterArrayOutput {
	return o
}

func (o GetVbInstancesFilterArrayOutput) ToGetVbInstancesFilterArrayOutputWithContext(ctx context.Context) GetVbInstancesFilterArrayOutput {
	return o
}

func (o GetVbInstancesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesFilter] {
	return pulumix.Output[[]GetVbInstancesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetVbInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstancesFilter {
		return vs[0].([]GetVbInstancesFilter)[vs[1].(int)]
	}).(GetVbInstancesFilterOutput)
}

type GetVbInstancesVbInstanceSummaryCollection struct {
	Items []GetVbInstancesVbInstanceSummaryCollectionItem `pulumi:"items"`
}

// GetVbInstancesVbInstanceSummaryCollectionInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionArgs and GetVbInstancesVbInstanceSummaryCollectionOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionArgs{...}
type GetVbInstancesVbInstanceSummaryCollectionInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionOutput() GetVbInstancesVbInstanceSummaryCollectionOutput
	ToGetVbInstancesVbInstanceSummaryCollectionOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionOutput
}

type GetVbInstancesVbInstanceSummaryCollectionArgs struct {
	Items GetVbInstancesVbInstanceSummaryCollectionItemArrayInput `pulumi:"items"`
}

func (GetVbInstancesVbInstanceSummaryCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollection)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionArgs) ToGetVbInstancesVbInstanceSummaryCollectionOutput() GetVbInstancesVbInstanceSummaryCollectionOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionArgs) ToGetVbInstancesVbInstanceSummaryCollectionOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollection] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollection]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstancesVbInstanceSummaryCollectionArrayInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionArray and GetVbInstancesVbInstanceSummaryCollectionArrayOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionArrayInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionArray{ GetVbInstancesVbInstanceSummaryCollectionArgs{...} }
type GetVbInstancesVbInstanceSummaryCollectionArrayInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionArrayOutput() GetVbInstancesVbInstanceSummaryCollectionArrayOutput
	ToGetVbInstancesVbInstanceSummaryCollectionArrayOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionArrayOutput
}

type GetVbInstancesVbInstanceSummaryCollectionArray []GetVbInstancesVbInstanceSummaryCollectionInput

func (GetVbInstancesVbInstanceSummaryCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollection)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionArray) ToGetVbInstancesVbInstanceSummaryCollectionArrayOutput() GetVbInstancesVbInstanceSummaryCollectionArrayOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionArrayOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionArray) ToGetVbInstancesVbInstanceSummaryCollectionArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionArrayOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollection] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollection]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstancesVbInstanceSummaryCollectionOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollection)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionOutput) ToGetVbInstancesVbInstanceSummaryCollectionOutput() GetVbInstancesVbInstanceSummaryCollectionOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionOutput) ToGetVbInstancesVbInstanceSummaryCollectionOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollection] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesVbInstanceSummaryCollectionOutput) Items() GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollection) []GetVbInstancesVbInstanceSummaryCollectionItem {
		return v.Items
	}).(GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollection)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionArrayOutput() GetVbInstancesVbInstanceSummaryCollectionArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollection] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesVbInstanceSummaryCollectionArrayOutput) Index(i pulumi.IntInput) GetVbInstancesVbInstanceSummaryCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstancesVbInstanceSummaryCollection {
		return vs[0].([]GetVbInstancesVbInstanceSummaryCollection)[vs[1].(int)]
	}).(GetVbInstancesVbInstanceSummaryCollectionOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItem struct {
	// A list of alternate custom endpoints used for the vb instance URL.
	AlternateCustomEndpoints []GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// A list of associated attachments to other services
	Attachments []GetVbInstancesVbInstanceSummaryCollectionItemAttachment `pulumi:"attachments"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The entitlement used for billing purposes.
	ConsumptionModel string `pulumi:"consumptionModel"`
	// Details for a custom endpoint for the vb instance.
	CustomEndpoints []GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint `pulumi:"customEndpoints"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// Information for IDCS access
	IdcsInfos  []GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo `pulumi:"idcsInfos"`
	IdcsOpenId string                                                  `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl string `pulumi:"instanceUrl"`
	// Visual Builder is enabled or not.
	IsVisualBuilderEnabled bool `pulumi:"isVisualBuilderEnabled"`
	// The NAT gateway IP address for the VB management VCN
	ManagementNatGatewayIp string `pulumi:"managementNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
	ManagementVcnId string `pulumi:"managementVcnId"`
	// The number of Nodes
	NodeCount int `pulumi:"nodeCount"`
	// The NAT gateway IP address for the VB service VCN
	ServiceNatGatewayIp string `pulumi:"serviceNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
	ServiceVcnId string `pulumi:"serviceVcnId"`
	// Life cycle state to query on.
	State string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage string `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetVbInstancesVbInstanceSummaryCollectionItemInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemArgs and GetVbInstancesVbInstanceSummaryCollectionItemOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemArgs{...}
type GetVbInstancesVbInstanceSummaryCollectionItemInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemOutput() GetVbInstancesVbInstanceSummaryCollectionItemOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemArgs struct {
	// A list of alternate custom endpoints used for the vb instance URL.
	AlternateCustomEndpoints GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayInput `pulumi:"alternateCustomEndpoints"`
	// A list of associated attachments to other services
	Attachments GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayInput `pulumi:"attachments"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The entitlement used for billing purposes.
	ConsumptionModel pulumi.StringInput `pulumi:"consumptionModel"`
	// Details for a custom endpoint for the vb instance.
	CustomEndpoints GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayInput `pulumi:"customEndpoints"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Information for IDCS access
	IdcsInfos  GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayInput `pulumi:"idcsInfos"`
	IdcsOpenId pulumi.StringInput                                              `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
	// Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolInput `pulumi:"isVisualBuilderEnabled"`
	// The NAT gateway IP address for the VB management VCN
	ManagementNatGatewayIp pulumi.StringInput `pulumi:"managementNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
	ManagementVcnId pulumi.StringInput `pulumi:"managementVcnId"`
	// The number of Nodes
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// The NAT gateway IP address for the VB service VCN
	ServiceNatGatewayIp pulumi.StringInput `pulumi:"serviceNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
	ServiceVcnId pulumi.StringInput `pulumi:"serviceVcnId"`
	// Life cycle state to query on.
	State pulumi.StringInput `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringInput `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetVbInstancesVbInstanceSummaryCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItem)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemOutput() GetVbInstancesVbInstanceSummaryCollectionItemOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItem] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItem]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstancesVbInstanceSummaryCollectionItemArrayInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemArray and GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemArrayInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemArray{ GetVbInstancesVbInstanceSummaryCollectionItemArgs{...} }
type GetVbInstancesVbInstanceSummaryCollectionItemArrayInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemArray []GetVbInstancesVbInstanceSummaryCollectionItemInput

func (GetVbInstancesVbInstanceSummaryCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItem)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemArray) ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemArray) ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItem] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItem]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstancesVbInstanceSummaryCollectionItemOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItem)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemOutput() GetVbInstancesVbInstanceSummaryCollectionItemOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItem] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItem]{
		OutputState: o.OutputState,
	}
}

// A list of alternate custom endpoints used for the vb instance URL.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) AlternateCustomEndpoints() GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) []GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint {
		return v.AlternateCustomEndpoints
	}).(GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput)
}

// A list of associated attachments to other services
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) Attachments() GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) []GetVbInstancesVbInstanceSummaryCollectionItemAttachment {
		return v.Attachments
	}).(GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput)
}

// The ID of the compartment in which to list resources.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The entitlement used for billing purposes.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ConsumptionModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.ConsumptionModel }).(pulumi.StringOutput)
}

// Details for a custom endpoint for the vb instance.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) CustomEndpoints() GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) []GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint {
		return v.CustomEndpoints
	}).(GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Information for IDCS access
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) IdcsInfos() GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) []GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo {
		return v.IdcsInfos
	}).(GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput)
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) IdcsOpenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.IdcsOpenId }).(pulumi.StringOutput)
}

// The Vb Instance URL.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

// Visual Builder is enabled or not.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) IsVisualBuilderEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) bool { return v.IsVisualBuilderEnabled }).(pulumi.BoolOutput)
}

// The NAT gateway IP address for the VB management VCN
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ManagementNatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.ManagementNatGatewayIp }).(pulumi.StringOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ManagementVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.ManagementVcnId }).(pulumi.StringOutput)
}

// The number of Nodes
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The NAT gateway IP address for the VB service VCN
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ServiceNatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.ServiceNatGatewayIp }).(pulumi.StringOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) ServiceVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.ServiceVcnId }).(pulumi.StringOutput)
}

// Life cycle state to query on.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.StateMessage }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the VbInstance was created. An RFC3339 formatted datetime string.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the VbInstance was updated. An RFC3339 formatted datetime string.
func (o GetVbInstancesVbInstanceSummaryCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItem)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItem] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput) Index(i pulumi.IntInput) GetVbInstancesVbInstanceSummaryCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstancesVbInstanceSummaryCollectionItem {
		return vs[0].([]GetVbInstancesVbInstanceSummaryCollectionItem)[vs[1].(int)]
	}).(GetVbInstancesVbInstanceSummaryCollectionItemOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId string `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion int `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname string `pulumi:"hostname"`
}

// GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs and GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs{...}
type GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput() GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId pulumi.StringInput `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion pulumi.IntInput `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput() GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray and GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray{ GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs{...} }
type GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray []GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointInput

func (GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput() GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput) CertificateSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint) string {
		return v.CertificateSecretId
	}).(pulumi.StringOutput)
}

// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput) CertificateSecretVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint) int {
		return v.CertificateSecretVersion
	}).(pulumi.IntOutput)
}

// A custom hostname to be used for the vb instance URL, in FQDN format.
func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput) Index(i pulumi.IntInput) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint {
		return vs[0].([]GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpoint)[vs[1].(int)]
	}).(GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemAttachment struct {
	// * If role == `PARENT`, the attached instance was created by this service instance
	// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
	IsImplicit bool `pulumi:"isImplicit"`
	// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
	TargetId string `pulumi:"targetId"`
	// The dataplane instance URL of the attached instance
	TargetInstanceUrl string `pulumi:"targetInstanceUrl"`
	// The role of the target attachment.
	TargetRole string `pulumi:"targetRole"`
	// The type of the target instance, such as "FUSION".
	TargetServiceType string `pulumi:"targetServiceType"`
}

// GetVbInstancesVbInstanceSummaryCollectionItemAttachmentInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs and GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemAttachmentInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs{...}
type GetVbInstancesVbInstanceSummaryCollectionItemAttachmentInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput() GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs struct {
	// * If role == `PARENT`, the attached instance was created by this service instance
	// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
	IsImplicit pulumi.BoolInput `pulumi:"isImplicit"`
	// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The dataplane instance URL of the attached instance
	TargetInstanceUrl pulumi.StringInput `pulumi:"targetInstanceUrl"`
	// The role of the target attachment.
	TargetRole pulumi.StringInput `pulumi:"targetRole"`
	// The type of the target instance, such as "FUSION".
	TargetServiceType pulumi.StringInput `pulumi:"targetServiceType"`
}

func (GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAttachment)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput() GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAttachment] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAttachment]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray and GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray{ GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs{...} }
type GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray []GetVbInstancesVbInstanceSummaryCollectionItemAttachmentInput

func (GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemAttachment)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAttachment] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAttachment]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAttachment)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput() GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAttachment] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemAttachment]{
		OutputState: o.OutputState,
	}
}

// * If role == `PARENT`, the attached instance was created by this service instance
// * If role == `CHILD`, this instance was created from attached instance on behalf of a user
func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) IsImplicit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAttachment) bool { return v.IsImplicit }).(pulumi.BoolOutput)
}

// The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAttachment) string { return v.TargetId }).(pulumi.StringOutput)
}

// The dataplane instance URL of the attached instance
func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) TargetInstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAttachment) string { return v.TargetInstanceUrl }).(pulumi.StringOutput)
}

// The role of the target attachment.
func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) TargetRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAttachment) string { return v.TargetRole }).(pulumi.StringOutput)
}

// The type of the target instance, such as "FUSION".
func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput) TargetServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemAttachment) string { return v.TargetServiceType }).(pulumi.StringOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemAttachment)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAttachment] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemAttachment]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput) Index(i pulumi.IntInput) GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstancesVbInstanceSummaryCollectionItemAttachment {
		return vs[0].([]GetVbInstancesVbInstanceSummaryCollectionItemAttachment)[vs[1].(int)]
	}).(GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId string `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion int `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname string `pulumi:"hostname"`
}

// GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs and GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs{...}
type GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput() GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs struct {
	// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
	CertificateSecretId pulumi.StringInput `pulumi:"certificateSecretId"`
	// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
	CertificateSecretVersion pulumi.IntInput `pulumi:"certificateSecretVersion"`
	// A custom hostname to be used for the vb instance URL, in FQDN format.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput() GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray and GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray{ GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs{...} }
type GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray []GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointInput

func (GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput() GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput) CertificateSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint) string {
		return v.CertificateSecretId
	}).(pulumi.StringOutput)
}

// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput) CertificateSecretVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint) int {
		return v.CertificateSecretVersion
	}).(pulumi.IntOutput)
}

// A custom hostname to be used for the vb instance URL, in FQDN format.
func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput) Index(i pulumi.IntInput) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint {
		return vs[0].([]GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpoint)[vs[1].(int)]
	}).(GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo struct {
	// The IDCS application display name associated with the instance
	IdcsAppDisplayName string `pulumi:"idcsAppDisplayName"`
	// The IDCS application ID associated with the instance
	IdcsAppId string `pulumi:"idcsAppId"`
	// URL for the location of the IDCS Application (used by IDCS APIs)
	IdcsAppLocationUrl string `pulumi:"idcsAppLocationUrl"`
	// The IDCS application name associated with the instance
	IdcsAppName string `pulumi:"idcsAppName"`
	// The URL used as the primary audience for visual builder flows in this instance type: string
	InstancePrimaryAudienceUrl string `pulumi:"instancePrimaryAudienceUrl"`
}

// GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs and GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs{...}
type GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput() GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs struct {
	// The IDCS application display name associated with the instance
	IdcsAppDisplayName pulumi.StringInput `pulumi:"idcsAppDisplayName"`
	// The IDCS application ID associated with the instance
	IdcsAppId pulumi.StringInput `pulumi:"idcsAppId"`
	// URL for the location of the IDCS Application (used by IDCS APIs)
	IdcsAppLocationUrl pulumi.StringInput `pulumi:"idcsAppLocationUrl"`
	// The IDCS application name associated with the instance
	IdcsAppName pulumi.StringInput `pulumi:"idcsAppName"`
	// The URL used as the primary audience for visual builder flows in this instance type: string
	InstancePrimaryAudienceUrl pulumi.StringInput `pulumi:"instancePrimaryAudienceUrl"`
}

func (GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput() GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutputWithContext(ctx).OutputState,
	}
}

// GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayInput is an input type that accepts GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray and GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput values.
// You can construct a concrete instance of `GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayInput` via:
//
//	GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray{ GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs{...} }
type GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayInput interface {
	pulumi.Input

	ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput
	ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutputWithContext(context.Context) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput
}

type GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray []GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoInput

func (GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo)(nil)).Elem()
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput {
	return i.ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutputWithContext(context.Background())
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput)
}

func (i GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo]{
		OutputState: i.ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput() GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo] {
	return pulumix.Output[GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo]{
		OutputState: o.OutputState,
	}
}

// The IDCS application display name associated with the instance
func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) IdcsAppDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo) string { return v.IdcsAppDisplayName }).(pulumi.StringOutput)
}

// The IDCS application ID associated with the instance
func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) IdcsAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo) string { return v.IdcsAppId }).(pulumi.StringOutput)
}

// URL for the location of the IDCS Application (used by IDCS APIs)
func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) IdcsAppLocationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo) string { return v.IdcsAppLocationUrl }).(pulumi.StringOutput)
}

// The IDCS application name associated with the instance
func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) IdcsAppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo) string { return v.IdcsAppName }).(pulumi.StringOutput)
}

// The URL used as the primary audience for visual builder flows in this instance type: string
func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput) InstancePrimaryAudienceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo) string {
		return v.InstancePrimaryAudienceUrl
	}).(pulumi.StringOutput)
}

type GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo)(nil)).Elem()
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput() GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput) ToGetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutputWithContext(ctx context.Context) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput {
	return o
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo] {
	return pulumix.Output[[]GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput) Index(i pulumi.IntInput) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo {
		return vs[0].([]GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfo)[vs[1].(int)]
	}).(GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceAlternateCustomEndpointInput)(nil)).Elem(), VbInstanceAlternateCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceAlternateCustomEndpointArrayInput)(nil)).Elem(), VbInstanceAlternateCustomEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceAttachmentInput)(nil)).Elem(), VbInstanceAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceAttachmentArrayInput)(nil)).Elem(), VbInstanceAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceCustomEndpointInput)(nil)).Elem(), VbInstanceCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceCustomEndpointPtrInput)(nil)).Elem(), VbInstanceCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceIdcsInfoInput)(nil)).Elem(), VbInstanceIdcsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceIdcsInfoArrayInput)(nil)).Elem(), VbInstanceIdcsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceAlternateCustomEndpointInput)(nil)).Elem(), GetVbInstanceAlternateCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceAlternateCustomEndpointArrayInput)(nil)).Elem(), GetVbInstanceAlternateCustomEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollectionInput)(nil)).Elem(), GetVbInstanceApplicationsApplicationSummaryCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollectionArrayInput)(nil)).Elem(), GetVbInstanceApplicationsApplicationSummaryCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollectionItemInput)(nil)).Elem(), GetVbInstanceApplicationsApplicationSummaryCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayInput)(nil)).Elem(), GetVbInstanceApplicationsApplicationSummaryCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceAttachmentInput)(nil)).Elem(), GetVbInstanceAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceAttachmentArrayInput)(nil)).Elem(), GetVbInstanceAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceCustomEndpointInput)(nil)).Elem(), GetVbInstanceCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceCustomEndpointArrayInput)(nil)).Elem(), GetVbInstanceCustomEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceIdcsInfoInput)(nil)).Elem(), GetVbInstanceIdcsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstanceIdcsInfoArrayInput)(nil)).Elem(), GetVbInstanceIdcsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesFilterInput)(nil)).Elem(), GetVbInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesFilterArrayInput)(nil)).Elem(), GetVbInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionArrayInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemArrayInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAttachmentInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayInput)(nil)).Elem(), GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArray{})
	pulumi.RegisterOutputType(VbInstanceAlternateCustomEndpointOutput{})
	pulumi.RegisterOutputType(VbInstanceAlternateCustomEndpointArrayOutput{})
	pulumi.RegisterOutputType(VbInstanceAttachmentOutput{})
	pulumi.RegisterOutputType(VbInstanceAttachmentArrayOutput{})
	pulumi.RegisterOutputType(VbInstanceCustomEndpointOutput{})
	pulumi.RegisterOutputType(VbInstanceCustomEndpointPtrOutput{})
	pulumi.RegisterOutputType(VbInstanceIdcsInfoOutput{})
	pulumi.RegisterOutputType(VbInstanceIdcsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstanceAlternateCustomEndpointOutput{})
	pulumi.RegisterOutputType(GetVbInstanceAlternateCustomEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstanceApplicationsApplicationSummaryCollectionOutput{})
	pulumi.RegisterOutputType(GetVbInstanceApplicationsApplicationSummaryCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstanceApplicationsApplicationSummaryCollectionItemOutput{})
	pulumi.RegisterOutputType(GetVbInstanceApplicationsApplicationSummaryCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstanceAttachmentOutput{})
	pulumi.RegisterOutputType(GetVbInstanceAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstanceCustomEndpointOutput{})
	pulumi.RegisterOutputType(GetVbInstanceCustomEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstanceIdcsInfoOutput{})
	pulumi.RegisterOutputType(GetVbInstanceIdcsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetVbInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemAlternateCustomEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemAttachmentOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemCustomEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoOutput{})
	pulumi.RegisterOutputType(GetVbInstancesVbInstanceSummaryCollectionItemIdcsInfoArrayOutput{})
}
