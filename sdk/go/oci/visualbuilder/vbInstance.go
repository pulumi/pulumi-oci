// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package visualbuilder

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vb Instance resource in Oracle Cloud Infrastructure Visual Builder service.
//
// Creates a new Vb Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/VisualBuilder"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := VisualBuilder.NewVbInstance(ctx, "testVbInstance", &VisualBuilder.VbInstanceArgs{
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			DisplayName:   pulumi.Any(_var.Vb_instance_display_name),
// 			NodeCount:     pulumi.Any(_var.Vb_instance_node_count),
// 			AlternateCustomEndpoints: visualbuilder.VbInstanceAlternateCustomEndpointArray{
// 				&visualbuilder.VbInstanceAlternateCustomEndpointArgs{
// 					Hostname:            pulumi.Any(_var.Vb_instance_alternate_custom_endpoints_hostname),
// 					CertificateSecretId: pulumi.Any(oci_vault_secret.Test_secret.Id),
// 				},
// 			},
// 			ConsumptionModel: pulumi.Any(_var.Vb_instance_consumption_model),
// 			CustomEndpoint: &visualbuilder.VbInstanceCustomEndpointArgs{
// 				Hostname:            pulumi.Any(_var.Vb_instance_custom_endpoint_hostname),
// 				CertificateSecretId: pulumi.Any(oci_vault_secret.Test_secret.Id),
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			IdcsOpenId:             pulumi.Any(oci_visual_builder_idcs_open.Test_idcs_open.Id),
// 			IsVisualBuilderEnabled: pulumi.Any(_var.Vb_instance_is_visual_builder_enabled),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// VbInstances can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:VisualBuilder/vbInstance:VbInstance test_vb_instance "id"
// ```
type VbInstance struct {
	pulumi.CustomResourceState

	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints VbInstanceAlternateCustomEndpointArrayOutput `pulumi:"alternateCustomEndpoints"`
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringOutput `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint VbInstanceCustomEndpointOutput `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Vb Instance Identifier.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId pulumi.StringPtrOutput `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl pulumi.StringOutput `pulumi:"instanceUrl"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolOutput `pulumi:"isVisualBuilderEnabled"`
	// (Updatable) The number of Nodes
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// The current state of the vb instance.
	State pulumi.StringOutput `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringOutput `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewVbInstance registers a new resource with the given unique name, arguments, and options.
func NewVbInstance(ctx *pulumi.Context,
	name string, args *VbInstanceArgs, opts ...pulumi.ResourceOption) (*VbInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.NodeCount == nil {
		return nil, errors.New("invalid value for required argument 'NodeCount'")
	}
	var resource VbInstance
	err := ctx.RegisterResource("oci:VisualBuilder/vbInstance:VbInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVbInstance gets an existing VbInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVbInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VbInstanceState, opts ...pulumi.ResourceOption) (*VbInstance, error) {
	var resource VbInstance
	err := ctx.ReadResource("oci:VisualBuilder/vbInstance:VbInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VbInstance resources.
type vbInstanceState struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints []VbInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// (Updatable) Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel *string `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint *VbInstanceCustomEndpoint `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Vb Instance Identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId *string `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl *string `pulumi:"instanceUrl"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled *bool `pulumi:"isVisualBuilderEnabled"`
	// (Updatable) The number of Nodes
	NodeCount *int `pulumi:"nodeCount"`
	// The current state of the vb instance.
	State *string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage *string `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type VbInstanceState struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints VbInstanceAlternateCustomEndpointArrayInput
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringPtrInput
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringPtrInput
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint VbInstanceCustomEndpointPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Vb Instance Identifier.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId pulumi.StringPtrInput
	// The Vb Instance URL.
	InstanceUrl pulumi.StringPtrInput
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolPtrInput
	// (Updatable) The number of Nodes
	NodeCount pulumi.IntPtrInput
	// The current state of the vb instance.
	State pulumi.StringPtrInput
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (VbInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*vbInstanceState)(nil)).Elem()
}

type vbInstanceArgs struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints []VbInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// (Updatable) Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel *string `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint *VbInstanceCustomEndpoint `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Vb Instance Identifier.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId *string `pulumi:"idcsOpenId"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled *bool `pulumi:"isVisualBuilderEnabled"`
	// (Updatable) The number of Nodes
	NodeCount int `pulumi:"nodeCount"`
}

// The set of arguments for constructing a VbInstance resource.
type VbInstanceArgs struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints VbInstanceAlternateCustomEndpointArrayInput
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringInput
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringPtrInput
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint VbInstanceCustomEndpointPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Vb Instance Identifier.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId pulumi.StringPtrInput
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolPtrInput
	// (Updatable) The number of Nodes
	NodeCount pulumi.IntInput
}

func (VbInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vbInstanceArgs)(nil)).Elem()
}

type VbInstanceInput interface {
	pulumi.Input

	ToVbInstanceOutput() VbInstanceOutput
	ToVbInstanceOutputWithContext(ctx context.Context) VbInstanceOutput
}

func (*VbInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**VbInstance)(nil)).Elem()
}

func (i *VbInstance) ToVbInstanceOutput() VbInstanceOutput {
	return i.ToVbInstanceOutputWithContext(context.Background())
}

func (i *VbInstance) ToVbInstanceOutputWithContext(ctx context.Context) VbInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceOutput)
}

// VbInstanceArrayInput is an input type that accepts VbInstanceArray and VbInstanceArrayOutput values.
// You can construct a concrete instance of `VbInstanceArrayInput` via:
//
//          VbInstanceArray{ VbInstanceArgs{...} }
type VbInstanceArrayInput interface {
	pulumi.Input

	ToVbInstanceArrayOutput() VbInstanceArrayOutput
	ToVbInstanceArrayOutputWithContext(context.Context) VbInstanceArrayOutput
}

type VbInstanceArray []VbInstanceInput

func (VbInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VbInstance)(nil)).Elem()
}

func (i VbInstanceArray) ToVbInstanceArrayOutput() VbInstanceArrayOutput {
	return i.ToVbInstanceArrayOutputWithContext(context.Background())
}

func (i VbInstanceArray) ToVbInstanceArrayOutputWithContext(ctx context.Context) VbInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceArrayOutput)
}

// VbInstanceMapInput is an input type that accepts VbInstanceMap and VbInstanceMapOutput values.
// You can construct a concrete instance of `VbInstanceMapInput` via:
//
//          VbInstanceMap{ "key": VbInstanceArgs{...} }
type VbInstanceMapInput interface {
	pulumi.Input

	ToVbInstanceMapOutput() VbInstanceMapOutput
	ToVbInstanceMapOutputWithContext(context.Context) VbInstanceMapOutput
}

type VbInstanceMap map[string]VbInstanceInput

func (VbInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VbInstance)(nil)).Elem()
}

func (i VbInstanceMap) ToVbInstanceMapOutput() VbInstanceMapOutput {
	return i.ToVbInstanceMapOutputWithContext(context.Background())
}

func (i VbInstanceMap) ToVbInstanceMapOutputWithContext(ctx context.Context) VbInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceMapOutput)
}

type VbInstanceOutput struct{ *pulumi.OutputState }

func (VbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VbInstance)(nil)).Elem()
}

func (o VbInstanceOutput) ToVbInstanceOutput() VbInstanceOutput {
	return o
}

func (o VbInstanceOutput) ToVbInstanceOutputWithContext(ctx context.Context) VbInstanceOutput {
	return o
}

type VbInstanceArrayOutput struct{ *pulumi.OutputState }

func (VbInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VbInstance)(nil)).Elem()
}

func (o VbInstanceArrayOutput) ToVbInstanceArrayOutput() VbInstanceArrayOutput {
	return o
}

func (o VbInstanceArrayOutput) ToVbInstanceArrayOutputWithContext(ctx context.Context) VbInstanceArrayOutput {
	return o
}

func (o VbInstanceArrayOutput) Index(i pulumi.IntInput) VbInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VbInstance {
		return vs[0].([]*VbInstance)[vs[1].(int)]
	}).(VbInstanceOutput)
}

type VbInstanceMapOutput struct{ *pulumi.OutputState }

func (VbInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VbInstance)(nil)).Elem()
}

func (o VbInstanceMapOutput) ToVbInstanceMapOutput() VbInstanceMapOutput {
	return o
}

func (o VbInstanceMapOutput) ToVbInstanceMapOutputWithContext(ctx context.Context) VbInstanceMapOutput {
	return o
}

func (o VbInstanceMapOutput) MapIndex(k pulumi.StringInput) VbInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VbInstance {
		return vs[0].(map[string]*VbInstance)[vs[1].(string)]
	}).(VbInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceInput)(nil)).Elem(), &VbInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceArrayInput)(nil)).Elem(), VbInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceMapInput)(nil)).Elem(), VbInstanceMap{})
	pulumi.RegisterOutputType(VbInstanceOutput{})
	pulumi.RegisterOutputType(VbInstanceArrayOutput{})
	pulumi.RegisterOutputType(VbInstanceMapOutput{})
}
