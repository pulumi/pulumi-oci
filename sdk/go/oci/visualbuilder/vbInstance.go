// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package visualbuilder

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vb Instance resource in Oracle Cloud Infrastructure Visual Builder service.
//
// Creates a new Vb Instance.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/VisualBuilder"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := VisualBuilder.NewVbInstance(ctx, "test_vb_instance", &VisualBuilder.VbInstanceArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DisplayName:   pulumi.Any(vbInstanceDisplayName),
//				NodeCount:     pulumi.Any(vbInstanceNodeCount),
//				AlternateCustomEndpoints: visualbuilder.VbInstanceAlternateCustomEndpointArray{
//					&visualbuilder.VbInstanceAlternateCustomEndpointArgs{
//						Hostname:            pulumi.Any(vbInstanceAlternateCustomEndpointsHostname),
//						CertificateSecretId: pulumi.Any(testSecret.Id),
//					},
//				},
//				ConsumptionModel: pulumi.Any(vbInstanceConsumptionModel),
//				CustomEndpoint: &visualbuilder.VbInstanceCustomEndpointArgs{
//					Hostname:            pulumi.Any(vbInstanceCustomEndpointHostname),
//					CertificateSecretId: pulumi.Any(testSecret.Id),
//				},
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				IdcsOpenId:             pulumi.Any(testIdcsOpen.Id),
//				IsVisualBuilderEnabled: pulumi.Any(vbInstanceIsVisualBuilderEnabled),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// VbInstances can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:VisualBuilder/vbInstance:VbInstance test_vb_instance "id"
// ```
type VbInstance struct {
	pulumi.CustomResourceState

	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints VbInstanceAlternateCustomEndpointArrayOutput `pulumi:"alternateCustomEndpoints"`
	// A list of associated attachments to other services
	Attachments VbInstanceAttachmentArrayOutput `pulumi:"attachments"`
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringOutput `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint VbInstanceCustomEndpointOutput `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Vb Instance Identifier.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Information for IDCS access
	IdcsInfos VbInstanceIdcsInfoArrayOutput `pulumi:"idcsInfos"`
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId pulumi.StringPtrOutput `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl pulumi.StringOutput `pulumi:"instanceUrl"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolOutput `pulumi:"isVisualBuilderEnabled"`
	// The NAT gateway IP address for the VB management VCN
	ManagementNatGatewayIp pulumi.StringOutput `pulumi:"managementNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
	ManagementVcnId pulumi.StringOutput `pulumi:"managementVcnId"`
	// (Updatable) The number of Nodes
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// The NAT gateway IP address for the VB service VCN
	ServiceNatGatewayIp pulumi.StringOutput `pulumi:"serviceNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
	ServiceVcnId pulumi.StringOutput `pulumi:"serviceVcnId"`
	// The current state of the vb instance.
	State pulumi.StringOutput `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringOutput `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewVbInstance registers a new resource with the given unique name, arguments, and options.
func NewVbInstance(ctx *pulumi.Context,
	name string, args *VbInstanceArgs, opts ...pulumi.ResourceOption) (*VbInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.NodeCount == nil {
		return nil, errors.New("invalid value for required argument 'NodeCount'")
	}
	if args.IdcsOpenId != nil {
		args.IdcsOpenId = pulumi.ToSecret(args.IdcsOpenId).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"idcsOpenId",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VbInstance
	err := ctx.RegisterResource("oci:VisualBuilder/vbInstance:VbInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVbInstance gets an existing VbInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVbInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VbInstanceState, opts ...pulumi.ResourceOption) (*VbInstance, error) {
	var resource VbInstance
	err := ctx.ReadResource("oci:VisualBuilder/vbInstance:VbInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VbInstance resources.
type vbInstanceState struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints []VbInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// A list of associated attachments to other services
	Attachments []VbInstanceAttachment `pulumi:"attachments"`
	// (Updatable) Compartment Identifier.
	CompartmentId *string `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel *string `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint *VbInstanceCustomEndpoint `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Vb Instance Identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Information for IDCS access
	IdcsInfos []VbInstanceIdcsInfo `pulumi:"idcsInfos"`
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId *string `pulumi:"idcsOpenId"`
	// The Vb Instance URL.
	InstanceUrl *string `pulumi:"instanceUrl"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled *bool `pulumi:"isVisualBuilderEnabled"`
	// The NAT gateway IP address for the VB management VCN
	ManagementNatGatewayIp *string `pulumi:"managementNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
	ManagementVcnId *string `pulumi:"managementVcnId"`
	// (Updatable) The number of Nodes
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NodeCount *int `pulumi:"nodeCount"`
	// The NAT gateway IP address for the VB service VCN
	ServiceNatGatewayIp *string `pulumi:"serviceNatGatewayIp"`
	// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
	ServiceVcnId *string `pulumi:"serviceVcnId"`
	// The current state of the vb instance.
	State *string `pulumi:"state"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage *string `pulumi:"stateMessage"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type VbInstanceState struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints VbInstanceAlternateCustomEndpointArrayInput
	// A list of associated attachments to other services
	Attachments VbInstanceAttachmentArrayInput
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringPtrInput
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringPtrInput
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint VbInstanceCustomEndpointPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Vb Instance Identifier.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Information for IDCS access
	IdcsInfos VbInstanceIdcsInfoArrayInput
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId pulumi.StringPtrInput
	// The Vb Instance URL.
	InstanceUrl pulumi.StringPtrInput
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolPtrInput
	// The NAT gateway IP address for the VB management VCN
	ManagementNatGatewayIp pulumi.StringPtrInput
	// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
	ManagementVcnId pulumi.StringPtrInput
	// (Updatable) The number of Nodes
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NodeCount pulumi.IntPtrInput
	// The NAT gateway IP address for the VB service VCN
	ServiceNatGatewayIp pulumi.StringPtrInput
	// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
	ServiceVcnId pulumi.StringPtrInput
	// The current state of the vb instance.
	State pulumi.StringPtrInput
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	StateMessage pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the the VbInstance was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the VbInstance was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (VbInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*vbInstanceState)(nil)).Elem()
}

type vbInstanceArgs struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints []VbInstanceAlternateCustomEndpoint `pulumi:"alternateCustomEndpoints"`
	// (Updatable) Compartment Identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel *string `pulumi:"consumptionModel"`
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint *VbInstanceCustomEndpoint `pulumi:"customEndpoint"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Vb Instance Identifier.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId *string `pulumi:"idcsOpenId"`
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled *bool `pulumi:"isVisualBuilderEnabled"`
	// (Updatable) The number of Nodes
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NodeCount int `pulumi:"nodeCount"`
}

// The set of arguments for constructing a VbInstance resource.
type VbInstanceArgs struct {
	// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
	AlternateCustomEndpoints VbInstanceAlternateCustomEndpointArrayInput
	// (Updatable) Compartment Identifier.
	CompartmentId pulumi.StringInput
	// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
	ConsumptionModel pulumi.StringPtrInput
	// (Updatable) Details for a custom endpoint for the vb instance (update).
	CustomEndpoint VbInstanceCustomEndpointPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Vb Instance Identifier.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
	IdcsOpenId pulumi.StringPtrInput
	// (Updatable) Visual Builder is enabled or not.
	IsVisualBuilderEnabled pulumi.BoolPtrInput
	// (Updatable) The number of Nodes
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	NodeCount pulumi.IntInput
}

func (VbInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vbInstanceArgs)(nil)).Elem()
}

type VbInstanceInput interface {
	pulumi.Input

	ToVbInstanceOutput() VbInstanceOutput
	ToVbInstanceOutputWithContext(ctx context.Context) VbInstanceOutput
}

func (*VbInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**VbInstance)(nil)).Elem()
}

func (i *VbInstance) ToVbInstanceOutput() VbInstanceOutput {
	return i.ToVbInstanceOutputWithContext(context.Background())
}

func (i *VbInstance) ToVbInstanceOutputWithContext(ctx context.Context) VbInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceOutput)
}

// VbInstanceArrayInput is an input type that accepts VbInstanceArray and VbInstanceArrayOutput values.
// You can construct a concrete instance of `VbInstanceArrayInput` via:
//
//	VbInstanceArray{ VbInstanceArgs{...} }
type VbInstanceArrayInput interface {
	pulumi.Input

	ToVbInstanceArrayOutput() VbInstanceArrayOutput
	ToVbInstanceArrayOutputWithContext(context.Context) VbInstanceArrayOutput
}

type VbInstanceArray []VbInstanceInput

func (VbInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VbInstance)(nil)).Elem()
}

func (i VbInstanceArray) ToVbInstanceArrayOutput() VbInstanceArrayOutput {
	return i.ToVbInstanceArrayOutputWithContext(context.Background())
}

func (i VbInstanceArray) ToVbInstanceArrayOutputWithContext(ctx context.Context) VbInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceArrayOutput)
}

// VbInstanceMapInput is an input type that accepts VbInstanceMap and VbInstanceMapOutput values.
// You can construct a concrete instance of `VbInstanceMapInput` via:
//
//	VbInstanceMap{ "key": VbInstanceArgs{...} }
type VbInstanceMapInput interface {
	pulumi.Input

	ToVbInstanceMapOutput() VbInstanceMapOutput
	ToVbInstanceMapOutputWithContext(context.Context) VbInstanceMapOutput
}

type VbInstanceMap map[string]VbInstanceInput

func (VbInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VbInstance)(nil)).Elem()
}

func (i VbInstanceMap) ToVbInstanceMapOutput() VbInstanceMapOutput {
	return i.ToVbInstanceMapOutputWithContext(context.Background())
}

func (i VbInstanceMap) ToVbInstanceMapOutputWithContext(ctx context.Context) VbInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VbInstanceMapOutput)
}

type VbInstanceOutput struct{ *pulumi.OutputState }

func (VbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VbInstance)(nil)).Elem()
}

func (o VbInstanceOutput) ToVbInstanceOutput() VbInstanceOutput {
	return o
}

func (o VbInstanceOutput) ToVbInstanceOutputWithContext(ctx context.Context) VbInstanceOutput {
	return o
}

// (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
func (o VbInstanceOutput) AlternateCustomEndpoints() VbInstanceAlternateCustomEndpointArrayOutput {
	return o.ApplyT(func(v *VbInstance) VbInstanceAlternateCustomEndpointArrayOutput { return v.AlternateCustomEndpoints }).(VbInstanceAlternateCustomEndpointArrayOutput)
}

// A list of associated attachments to other services
func (o VbInstanceOutput) Attachments() VbInstanceAttachmentArrayOutput {
	return o.ApplyT(func(v *VbInstance) VbInstanceAttachmentArrayOutput { return v.Attachments }).(VbInstanceAttachmentArrayOutput)
}

// (Updatable) Compartment Identifier.
func (o VbInstanceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
func (o VbInstanceOutput) ConsumptionModel() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.ConsumptionModel }).(pulumi.StringOutput)
}

// (Updatable) Details for a custom endpoint for the vb instance (update).
func (o VbInstanceOutput) CustomEndpoint() VbInstanceCustomEndpointOutput {
	return o.ApplyT(func(v *VbInstance) VbInstanceCustomEndpointOutput { return v.CustomEndpoint }).(VbInstanceCustomEndpointOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o VbInstanceOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Vb Instance Identifier.
func (o VbInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o VbInstanceOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Information for IDCS access
func (o VbInstanceOutput) IdcsInfos() VbInstanceIdcsInfoArrayOutput {
	return o.ApplyT(func(v *VbInstance) VbInstanceIdcsInfoArrayOutput { return v.IdcsInfos }).(VbInstanceIdcsInfoArrayOutput)
}

// (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
func (o VbInstanceOutput) IdcsOpenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringPtrOutput { return v.IdcsOpenId }).(pulumi.StringPtrOutput)
}

// The Vb Instance URL.
func (o VbInstanceOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.InstanceUrl }).(pulumi.StringOutput)
}

// (Updatable) Visual Builder is enabled or not.
func (o VbInstanceOutput) IsVisualBuilderEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.BoolOutput { return v.IsVisualBuilderEnabled }).(pulumi.BoolOutput)
}

// The NAT gateway IP address for the VB management VCN
func (o VbInstanceOutput) ManagementNatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.ManagementNatGatewayIp }).(pulumi.StringOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder management VCN
func (o VbInstanceOutput) ManagementVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.ManagementVcnId }).(pulumi.StringOutput)
}

// (Updatable) The number of Nodes
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o VbInstanceOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// The NAT gateway IP address for the VB service VCN
func (o VbInstanceOutput) ServiceNatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.ServiceNatGatewayIp }).(pulumi.StringOutput)
}

// The Oracle Cloud ID (OCID) of the Visual Builder service VCN
func (o VbInstanceOutput) ServiceVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.ServiceVcnId }).(pulumi.StringOutput)
}

// The current state of the vb instance.
func (o VbInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o VbInstanceOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.StateMessage }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o VbInstanceOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the VbInstance was created. An RFC3339 formatted datetime string.
func (o VbInstanceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the VbInstance was updated. An RFC3339 formatted datetime string.
func (o VbInstanceOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *VbInstance) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type VbInstanceArrayOutput struct{ *pulumi.OutputState }

func (VbInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VbInstance)(nil)).Elem()
}

func (o VbInstanceArrayOutput) ToVbInstanceArrayOutput() VbInstanceArrayOutput {
	return o
}

func (o VbInstanceArrayOutput) ToVbInstanceArrayOutputWithContext(ctx context.Context) VbInstanceArrayOutput {
	return o
}

func (o VbInstanceArrayOutput) Index(i pulumi.IntInput) VbInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VbInstance {
		return vs[0].([]*VbInstance)[vs[1].(int)]
	}).(VbInstanceOutput)
}

type VbInstanceMapOutput struct{ *pulumi.OutputState }

func (VbInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VbInstance)(nil)).Elem()
}

func (o VbInstanceMapOutput) ToVbInstanceMapOutput() VbInstanceMapOutput {
	return o
}

func (o VbInstanceMapOutput) ToVbInstanceMapOutputWithContext(ctx context.Context) VbInstanceMapOutput {
	return o
}

func (o VbInstanceMapOutput) MapIndex(k pulumi.StringInput) VbInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VbInstance {
		return vs[0].(map[string]*VbInstance)[vs[1].(string)]
	}).(VbInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceInput)(nil)).Elem(), &VbInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceArrayInput)(nil)).Elem(), VbInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VbInstanceMapInput)(nil)).Elem(), VbInstanceMap{})
	pulumi.RegisterOutputType(VbInstanceOutput{})
	pulumi.RegisterOutputType(VbInstanceArrayOutput{})
	pulumi.RegisterOutputType(VbInstanceMapOutput{})
}
