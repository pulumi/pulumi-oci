// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vnmonitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Path Analyzer Test resource in Oracle Cloud Infrastructure Vn Monitoring service.
//
// Creates a new `PathAnalyzerTest` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/VnMonitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := VnMonitoring.NewPathAnalyzerTest(ctx, "test_path_analyzer_test", &VnMonitoring.PathAnalyzerTestArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DestinationEndpoint: &vnmonitoring.PathAnalyzerTestDestinationEndpointArgs{
//					Type:                  pulumi.Any(pathAnalyzerTestDestinationEndpointType),
//					Address:               pulumi.Any(pathAnalyzerTestDestinationEndpointAddress),
//					InstanceId:            pulumi.Any(testInstance.Id),
//					ListenerId:            pulumi.Any(testListener.Id),
//					LoadBalancerId:        pulumi.Any(testLoadBalancer.Id),
//					NetworkLoadBalancerId: pulumi.Any(testNetworkLoadBalancer.Id),
//					SubnetId:              pulumi.Any(testSubnet.Id),
//					VlanId:                pulumi.Any(testVlan.Id),
//					VnicId:                pulumi.Any(testVnicAttachment.Id),
//				},
//				Protocol: pulumi.Any(pathAnalyzerTestProtocol),
//				SourceEndpoint: &vnmonitoring.PathAnalyzerTestSourceEndpointArgs{
//					Type:                  pulumi.Any(pathAnalyzerTestSourceEndpointType),
//					Address:               pulumi.Any(pathAnalyzerTestSourceEndpointAddress),
//					InstanceId:            pulumi.Any(testInstance.Id),
//					ListenerId:            pulumi.Any(testListener.Id),
//					LoadBalancerId:        pulumi.Any(testLoadBalancer.Id),
//					NetworkLoadBalancerId: pulumi.Any(testNetworkLoadBalancer.Id),
//					SubnetId:              pulumi.Any(testSubnet.Id),
//					VlanId:                pulumi.Any(testVlan.Id),
//					VnicId:                pulumi.Any(testVnicAttachment.Id),
//				},
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(pathAnalyzerTestDisplayName),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				ProtocolParameters: &vnmonitoring.PathAnalyzerTestProtocolParametersArgs{
//					Type:            pulumi.Any(pathAnalyzerTestProtocolParametersType),
//					DestinationPort: pulumi.Any(pathAnalyzerTestProtocolParametersDestinationPort),
//					IcmpCode:        pulumi.Any(pathAnalyzerTestProtocolParametersIcmpCode),
//					IcmpType:        pulumi.Any(pathAnalyzerTestProtocolParametersIcmpType),
//					SourcePort:      pulumi.Any(pathAnalyzerTestProtocolParametersSourcePort),
//				},
//				QueryOptions: &vnmonitoring.PathAnalyzerTestQueryOptionsArgs{
//					IsBiDirectionalAnalysis: pulumi.Any(pathAnalyzerTestQueryOptionsIsBiDirectionalAnalysis),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PathAnalyzerTests can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:VnMonitoring/pathAnalyzerTest:PathAnalyzerTest test_path_analyzer_test "id"
// ```
type PathAnalyzerTest struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the `PathAnalyzerTest` resource's compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	DestinationEndpoint PathAnalyzerTestDestinationEndpointOutput `pulumi:"destinationEndpoint"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The IP protocol to use in the `PathAnalyzerTest` resource.
	Protocol pulumi.IntOutput `pulumi:"protocol"`
	// (Updatable) Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
	ProtocolParameters PathAnalyzerTestProtocolParametersOutput `pulumi:"protocolParameters"`
	// (Updatable) Defines the query options required for a `PathAnalyzerTest` resource.
	QueryOptions PathAnalyzerTestQueryOptionsOutput `pulumi:"queryOptions"`
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	SourceEndpoint PathAnalyzerTestSourceEndpointOutput `pulumi:"sourceEndpoint"`
	// The current state of the `PathAnalyzerTest` resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time the `PathAnalyzerTest` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the `PathAnalyzerTest` resource was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewPathAnalyzerTest registers a new resource with the given unique name, arguments, and options.
func NewPathAnalyzerTest(ctx *pulumi.Context,
	name string, args *PathAnalyzerTestArgs, opts ...pulumi.ResourceOption) (*PathAnalyzerTest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DestinationEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'DestinationEndpoint'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.SourceEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'SourceEndpoint'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PathAnalyzerTest
	err := ctx.RegisterResource("oci:VnMonitoring/pathAnalyzerTest:PathAnalyzerTest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPathAnalyzerTest gets an existing PathAnalyzerTest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPathAnalyzerTest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PathAnalyzerTestState, opts ...pulumi.ResourceOption) (*PathAnalyzerTest, error) {
	var resource PathAnalyzerTest
	err := ctx.ReadResource("oci:VnMonitoring/pathAnalyzerTest:PathAnalyzerTest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PathAnalyzerTest resources.
type pathAnalyzerTestState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the `PathAnalyzerTest` resource's compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	DestinationEndpoint *PathAnalyzerTestDestinationEndpoint `pulumi:"destinationEndpoint"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The IP protocol to use in the `PathAnalyzerTest` resource.
	Protocol *int `pulumi:"protocol"`
	// (Updatable) Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
	ProtocolParameters *PathAnalyzerTestProtocolParameters `pulumi:"protocolParameters"`
	// (Updatable) Defines the query options required for a `PathAnalyzerTest` resource.
	QueryOptions *PathAnalyzerTestQueryOptions `pulumi:"queryOptions"`
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	SourceEndpoint *PathAnalyzerTestSourceEndpoint `pulumi:"sourceEndpoint"`
	// The current state of the `PathAnalyzerTest` resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the `PathAnalyzerTest` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the `PathAnalyzerTest` resource was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type PathAnalyzerTestState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the `PathAnalyzerTest` resource's compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	DestinationEndpoint PathAnalyzerTestDestinationEndpointPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The IP protocol to use in the `PathAnalyzerTest` resource.
	Protocol pulumi.IntPtrInput
	// (Updatable) Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
	ProtocolParameters PathAnalyzerTestProtocolParametersPtrInput
	// (Updatable) Defines the query options required for a `PathAnalyzerTest` resource.
	QueryOptions PathAnalyzerTestQueryOptionsPtrInput
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	SourceEndpoint PathAnalyzerTestSourceEndpointPtrInput
	// The current state of the `PathAnalyzerTest` resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The date and time the `PathAnalyzerTest` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The date and time the `PathAnalyzerTest` resource was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (PathAnalyzerTestState) ElementType() reflect.Type {
	return reflect.TypeOf((*pathAnalyzerTestState)(nil)).Elem()
}

type pathAnalyzerTestArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the `PathAnalyzerTest` resource's compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	DestinationEndpoint PathAnalyzerTestDestinationEndpoint `pulumi:"destinationEndpoint"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The IP protocol to use in the `PathAnalyzerTest` resource.
	Protocol int `pulumi:"protocol"`
	// (Updatable) Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
	ProtocolParameters *PathAnalyzerTestProtocolParameters `pulumi:"protocolParameters"`
	// (Updatable) Defines the query options required for a `PathAnalyzerTest` resource.
	QueryOptions *PathAnalyzerTestQueryOptions `pulumi:"queryOptions"`
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	SourceEndpoint PathAnalyzerTestSourceEndpoint `pulumi:"sourceEndpoint"`
}

// The set of arguments for constructing a PathAnalyzerTest resource.
type PathAnalyzerTestArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the `PathAnalyzerTest` resource's compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	DestinationEndpoint PathAnalyzerTestDestinationEndpointInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The IP protocol to use in the `PathAnalyzerTest` resource.
	Protocol pulumi.IntInput
	// (Updatable) Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
	ProtocolParameters PathAnalyzerTestProtocolParametersPtrInput
	// (Updatable) Defines the query options required for a `PathAnalyzerTest` resource.
	QueryOptions PathAnalyzerTestQueryOptionsPtrInput
	// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
	SourceEndpoint PathAnalyzerTestSourceEndpointInput
}

func (PathAnalyzerTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pathAnalyzerTestArgs)(nil)).Elem()
}

type PathAnalyzerTestInput interface {
	pulumi.Input

	ToPathAnalyzerTestOutput() PathAnalyzerTestOutput
	ToPathAnalyzerTestOutputWithContext(ctx context.Context) PathAnalyzerTestOutput
}

func (*PathAnalyzerTest) ElementType() reflect.Type {
	return reflect.TypeOf((**PathAnalyzerTest)(nil)).Elem()
}

func (i *PathAnalyzerTest) ToPathAnalyzerTestOutput() PathAnalyzerTestOutput {
	return i.ToPathAnalyzerTestOutputWithContext(context.Background())
}

func (i *PathAnalyzerTest) ToPathAnalyzerTestOutputWithContext(ctx context.Context) PathAnalyzerTestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PathAnalyzerTestOutput)
}

// PathAnalyzerTestArrayInput is an input type that accepts PathAnalyzerTestArray and PathAnalyzerTestArrayOutput values.
// You can construct a concrete instance of `PathAnalyzerTestArrayInput` via:
//
//	PathAnalyzerTestArray{ PathAnalyzerTestArgs{...} }
type PathAnalyzerTestArrayInput interface {
	pulumi.Input

	ToPathAnalyzerTestArrayOutput() PathAnalyzerTestArrayOutput
	ToPathAnalyzerTestArrayOutputWithContext(context.Context) PathAnalyzerTestArrayOutput
}

type PathAnalyzerTestArray []PathAnalyzerTestInput

func (PathAnalyzerTestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PathAnalyzerTest)(nil)).Elem()
}

func (i PathAnalyzerTestArray) ToPathAnalyzerTestArrayOutput() PathAnalyzerTestArrayOutput {
	return i.ToPathAnalyzerTestArrayOutputWithContext(context.Background())
}

func (i PathAnalyzerTestArray) ToPathAnalyzerTestArrayOutputWithContext(ctx context.Context) PathAnalyzerTestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PathAnalyzerTestArrayOutput)
}

// PathAnalyzerTestMapInput is an input type that accepts PathAnalyzerTestMap and PathAnalyzerTestMapOutput values.
// You can construct a concrete instance of `PathAnalyzerTestMapInput` via:
//
//	PathAnalyzerTestMap{ "key": PathAnalyzerTestArgs{...} }
type PathAnalyzerTestMapInput interface {
	pulumi.Input

	ToPathAnalyzerTestMapOutput() PathAnalyzerTestMapOutput
	ToPathAnalyzerTestMapOutputWithContext(context.Context) PathAnalyzerTestMapOutput
}

type PathAnalyzerTestMap map[string]PathAnalyzerTestInput

func (PathAnalyzerTestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PathAnalyzerTest)(nil)).Elem()
}

func (i PathAnalyzerTestMap) ToPathAnalyzerTestMapOutput() PathAnalyzerTestMapOutput {
	return i.ToPathAnalyzerTestMapOutputWithContext(context.Background())
}

func (i PathAnalyzerTestMap) ToPathAnalyzerTestMapOutputWithContext(ctx context.Context) PathAnalyzerTestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PathAnalyzerTestMapOutput)
}

type PathAnalyzerTestOutput struct{ *pulumi.OutputState }

func (PathAnalyzerTestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PathAnalyzerTest)(nil)).Elem()
}

func (o PathAnalyzerTestOutput) ToPathAnalyzerTestOutput() PathAnalyzerTestOutput {
	return o
}

func (o PathAnalyzerTestOutput) ToPathAnalyzerTestOutputWithContext(ctx context.Context) PathAnalyzerTestOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the `PathAnalyzerTest` resource's compartment.
func (o PathAnalyzerTestOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o PathAnalyzerTestOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
func (o PathAnalyzerTestOutput) DestinationEndpoint() PathAnalyzerTestDestinationEndpointOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) PathAnalyzerTestDestinationEndpointOutput { return v.DestinationEndpoint }).(PathAnalyzerTestDestinationEndpointOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o PathAnalyzerTestOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o PathAnalyzerTestOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) The IP protocol to use in the `PathAnalyzerTest` resource.
func (o PathAnalyzerTestOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.IntOutput { return v.Protocol }).(pulumi.IntOutput)
}

// (Updatable) Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
func (o PathAnalyzerTestOutput) ProtocolParameters() PathAnalyzerTestProtocolParametersOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) PathAnalyzerTestProtocolParametersOutput { return v.ProtocolParameters }).(PathAnalyzerTestProtocolParametersOutput)
}

// (Updatable) Defines the query options required for a `PathAnalyzerTest` resource.
func (o PathAnalyzerTestOutput) QueryOptions() PathAnalyzerTestQueryOptionsOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) PathAnalyzerTestQueryOptionsOutput { return v.QueryOptions }).(PathAnalyzerTestQueryOptionsOutput)
}

// (Updatable) Information describing a source or destination in a `PathAnalyzerTest` resource.
func (o PathAnalyzerTestOutput) SourceEndpoint() PathAnalyzerTestSourceEndpointOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) PathAnalyzerTestSourceEndpointOutput { return v.SourceEndpoint }).(PathAnalyzerTestSourceEndpointOutput)
}

// The current state of the `PathAnalyzerTest` resource.
func (o PathAnalyzerTestOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o PathAnalyzerTestOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the `PathAnalyzerTest` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o PathAnalyzerTestOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the `PathAnalyzerTest` resource was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o PathAnalyzerTestOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *PathAnalyzerTest) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type PathAnalyzerTestArrayOutput struct{ *pulumi.OutputState }

func (PathAnalyzerTestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PathAnalyzerTest)(nil)).Elem()
}

func (o PathAnalyzerTestArrayOutput) ToPathAnalyzerTestArrayOutput() PathAnalyzerTestArrayOutput {
	return o
}

func (o PathAnalyzerTestArrayOutput) ToPathAnalyzerTestArrayOutputWithContext(ctx context.Context) PathAnalyzerTestArrayOutput {
	return o
}

func (o PathAnalyzerTestArrayOutput) Index(i pulumi.IntInput) PathAnalyzerTestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PathAnalyzerTest {
		return vs[0].([]*PathAnalyzerTest)[vs[1].(int)]
	}).(PathAnalyzerTestOutput)
}

type PathAnalyzerTestMapOutput struct{ *pulumi.OutputState }

func (PathAnalyzerTestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PathAnalyzerTest)(nil)).Elem()
}

func (o PathAnalyzerTestMapOutput) ToPathAnalyzerTestMapOutput() PathAnalyzerTestMapOutput {
	return o
}

func (o PathAnalyzerTestMapOutput) ToPathAnalyzerTestMapOutputWithContext(ctx context.Context) PathAnalyzerTestMapOutput {
	return o
}

func (o PathAnalyzerTestMapOutput) MapIndex(k pulumi.StringInput) PathAnalyzerTestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PathAnalyzerTest {
		return vs[0].(map[string]*PathAnalyzerTest)[vs[1].(string)]
	}).(PathAnalyzerTestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PathAnalyzerTestInput)(nil)).Elem(), &PathAnalyzerTest{})
	pulumi.RegisterInputType(reflect.TypeOf((*PathAnalyzerTestArrayInput)(nil)).Elem(), PathAnalyzerTestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PathAnalyzerTestMapInput)(nil)).Elem(), PathAnalyzerTestMap{})
	pulumi.RegisterOutputType(PathAnalyzerTestOutput{})
	pulumi.RegisterOutputType(PathAnalyzerTestArrayOutput{})
	pulumi.RegisterOutputType(PathAnalyzerTestMapOutput{})
}
