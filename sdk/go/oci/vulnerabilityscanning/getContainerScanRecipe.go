// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vulnerabilityscanning

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Container Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
//
// Retrieves a ContainerScanRecipe identified by the recipe ID. A recipe determines the types of security issues that you want scanned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/VulnerabilityScanning"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := VulnerabilityScanning.GetContainerScanRecipe(ctx, &vulnerabilityscanning.GetContainerScanRecipeArgs{
//				ContainerScanRecipeId: testContainerScanRecipeOciVulnerabilityScanningContainerScanRecipe.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupContainerScanRecipe(ctx *pulumi.Context, args *LookupContainerScanRecipeArgs, opts ...pulumi.InvokeOption) (*LookupContainerScanRecipeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerScanRecipeResult
	err := ctx.Invoke("oci:VulnerabilityScanning/getContainerScanRecipe:getContainerScanRecipe", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerScanRecipe.
type LookupContainerScanRecipeArgs struct {
	// unique ContainerScanRecipe identifier
	ContainerScanRecipeId string `pulumi:"containerScanRecipeId"`
}

// A collection of values returned by getContainerScanRecipe.
type LookupContainerScanRecipeResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
	CompartmentId         string `pulumi:"compartmentId"`
	ContainerScanRecipeId string `pulumi:"containerScanRecipeId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// User friendly name of container scan recipe
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan recipe. Immutable and generated on creation.
	Id string `pulumi:"id"`
	// This field is set equal to the number of images we want to scan in the first go when the recipe is created
	ImageCount int `pulumi:"imageCount"`
	// A collection of container scan settings
	ScanSettings []GetContainerScanRecipeScanSetting `pulumi:"scanSettings"`
	// The current state of the config.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated string `pulumi:"timeCreated"`
	// Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupContainerScanRecipeOutput(ctx *pulumi.Context, args LookupContainerScanRecipeOutputArgs, opts ...pulumi.InvokeOption) LookupContainerScanRecipeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupContainerScanRecipeResultOutput, error) {
			args := v.(LookupContainerScanRecipeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:VulnerabilityScanning/getContainerScanRecipe:getContainerScanRecipe", args, LookupContainerScanRecipeResultOutput{}, options).(LookupContainerScanRecipeResultOutput), nil
		}).(LookupContainerScanRecipeResultOutput)
}

// A collection of arguments for invoking getContainerScanRecipe.
type LookupContainerScanRecipeOutputArgs struct {
	// unique ContainerScanRecipe identifier
	ContainerScanRecipeId pulumi.StringInput `pulumi:"containerScanRecipeId"`
}

func (LookupContainerScanRecipeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerScanRecipeArgs)(nil)).Elem()
}

// A collection of values returned by getContainerScanRecipe.
type LookupContainerScanRecipeResultOutput struct{ *pulumi.OutputState }

func (LookupContainerScanRecipeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerScanRecipeResult)(nil)).Elem()
}

func (o LookupContainerScanRecipeResultOutput) ToLookupContainerScanRecipeResultOutput() LookupContainerScanRecipeResultOutput {
	return o
}

func (o LookupContainerScanRecipeResultOutput) ToLookupContainerScanRecipeResultOutputWithContext(ctx context.Context) LookupContainerScanRecipeResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
func (o LookupContainerScanRecipeResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupContainerScanRecipeResultOutput) ContainerScanRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) string { return v.ContainerScanRecipeId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupContainerScanRecipeResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// User friendly name of container scan recipe
func (o LookupContainerScanRecipeResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupContainerScanRecipeResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan recipe. Immutable and generated on creation.
func (o LookupContainerScanRecipeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) string { return v.Id }).(pulumi.StringOutput)
}

// This field is set equal to the number of images we want to scan in the first go when the recipe is created
func (o LookupContainerScanRecipeResultOutput) ImageCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) int { return v.ImageCount }).(pulumi.IntOutput)
}

// A collection of container scan settings
func (o LookupContainerScanRecipeResultOutput) ScanSettings() GetContainerScanRecipeScanSettingArrayOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) []GetContainerScanRecipeScanSetting { return v.ScanSettings }).(GetContainerScanRecipeScanSettingArrayOutput)
}

// The current state of the config.
func (o LookupContainerScanRecipeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupContainerScanRecipeResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
func (o LookupContainerScanRecipeResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
func (o LookupContainerScanRecipeResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanRecipeResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerScanRecipeResultOutput{})
}
