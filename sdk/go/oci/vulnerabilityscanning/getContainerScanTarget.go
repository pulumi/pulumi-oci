// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vulnerabilityscanning

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Container Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
//
// Gets a ContainerScanTarget identified by the target ID. A container scan target specifies a group of one or more Docker image repositories in Oracle Cloud Infrastructure Registry (OCIR) that you want routinely scanned for security vulnerabilities.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/VulnerabilityScanning"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := VulnerabilityScanning.GetContainerScanTarget(ctx, &vulnerabilityscanning.GetContainerScanTargetArgs{
//				ContainerScanTargetId: testContainerScanTargetOciVulnerabilityScanningContainerScanTarget.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupContainerScanTarget(ctx *pulumi.Context, args *LookupContainerScanTargetArgs, opts ...pulumi.InvokeOption) (*LookupContainerScanTargetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerScanTargetResult
	err := ctx.Invoke("oci:VulnerabilityScanning/getContainerScanTarget:getContainerScanTarget", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerScanTarget.
type LookupContainerScanTargetArgs struct {
	// unique ContainerScanTarget identifier
	ContainerScanTargetId string `pulumi:"containerScanTargetId"`
}

// A collection of values returned by getContainerScanTarget.
type LookupContainerScanTargetResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// ID of the container scan recipe this target applies.
	ContainerScanRecipeId string `pulumi:"containerScanRecipeId"`
	ContainerScanTargetId string `pulumi:"containerScanTargetId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Target description.
	Description string `pulumi:"description"`
	// User friendly name of container scan target
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan target. Immutable and generated on creation.
	Id string `pulumi:"id"`
	// The current state of the config.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Registry information for a container scan target
	TargetRegistries []GetContainerScanTargetTargetRegistry `pulumi:"targetRegistries"`
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated string `pulumi:"timeCreated"`
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupContainerScanTargetOutput(ctx *pulumi.Context, args LookupContainerScanTargetOutputArgs, opts ...pulumi.InvokeOption) LookupContainerScanTargetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContainerScanTargetResult, error) {
			args := v.(LookupContainerScanTargetArgs)
			r, err := LookupContainerScanTarget(ctx, &args, opts...)
			var s LookupContainerScanTargetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContainerScanTargetResultOutput)
}

// A collection of arguments for invoking getContainerScanTarget.
type LookupContainerScanTargetOutputArgs struct {
	// unique ContainerScanTarget identifier
	ContainerScanTargetId pulumi.StringInput `pulumi:"containerScanTargetId"`
}

func (LookupContainerScanTargetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerScanTargetArgs)(nil)).Elem()
}

// A collection of values returned by getContainerScanTarget.
type LookupContainerScanTargetResultOutput struct{ *pulumi.OutputState }

func (LookupContainerScanTargetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerScanTargetResult)(nil)).Elem()
}

func (o LookupContainerScanTargetResultOutput) ToLookupContainerScanTargetResultOutput() LookupContainerScanTargetResultOutput {
	return o
}

func (o LookupContainerScanTargetResultOutput) ToLookupContainerScanTargetResultOutputWithContext(ctx context.Context) LookupContainerScanTargetResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
func (o LookupContainerScanTargetResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ID of the container scan recipe this target applies.
func (o LookupContainerScanTargetResultOutput) ContainerScanRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.ContainerScanRecipeId }).(pulumi.StringOutput)
}

func (o LookupContainerScanTargetResultOutput) ContainerScanTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.ContainerScanTargetId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupContainerScanTargetResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Target description.
func (o LookupContainerScanTargetResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.Description }).(pulumi.StringOutput)
}

// User friendly name of container scan target
func (o LookupContainerScanTargetResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupContainerScanTargetResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan target. Immutable and generated on creation.
func (o LookupContainerScanTargetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the config.
func (o LookupContainerScanTargetResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupContainerScanTargetResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Registry information for a container scan target
func (o LookupContainerScanTargetResultOutput) TargetRegistries() GetContainerScanTargetTargetRegistryArrayOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) []GetContainerScanTargetTargetRegistry {
		return v.TargetRegistries
	}).(GetContainerScanTargetTargetRegistryArrayOutput)
}

// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
func (o LookupContainerScanTargetResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
func (o LookupContainerScanTargetResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerScanTargetResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerScanTargetResultOutput{})
}
