// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vulnerabilityscanning

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Container Scan Targets in Oracle Cloud Infrastructure Vulnerability Scanning service.
//
// Retrieves a list of ContainerScanTargetSummary objects in a compartment. A container scan target specifies a group of one or more Docker image repositories in Oracle Cloud Infrastructure Registry (OCIR) that you want routinely scanned for security vulnerabilities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/VulnerabilityScanning"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := VulnerabilityScanning.GetContainerScanTargets(ctx, &vulnerabilityscanning.GetContainerScanTargetsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Container_scan_target_display_name),
//				State:         pulumi.StringRef(_var.Container_scan_target_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetContainerScanTargets(ctx *pulumi.Context, args *GetContainerScanTargetsArgs, opts ...pulumi.InvokeOption) (*GetContainerScanTargetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetContainerScanTargetsResult
	err := ctx.Invoke("oci:VulnerabilityScanning/getContainerScanTargets:getContainerScanTargets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerScanTargets.
type GetContainerScanTargetsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                         `pulumi:"displayName"`
	Filters     []GetContainerScanTargetsFilter `pulumi:"filters"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getContainerScanTargets.
type GetContainerScanTargetsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of container_scan_target_summary_collection.
	ContainerScanTargetSummaryCollections []GetContainerScanTargetsContainerScanTargetSummaryCollection `pulumi:"containerScanTargetSummaryCollections"`
	// User friendly name of container scan target
	DisplayName *string                         `pulumi:"displayName"`
	Filters     []GetContainerScanTargetsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the config.
	State *string `pulumi:"state"`
}

func GetContainerScanTargetsOutput(ctx *pulumi.Context, args GetContainerScanTargetsOutputArgs, opts ...pulumi.InvokeOption) GetContainerScanTargetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetContainerScanTargetsResult, error) {
			args := v.(GetContainerScanTargetsArgs)
			r, err := GetContainerScanTargets(ctx, &args, opts...)
			var s GetContainerScanTargetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetContainerScanTargetsResultOutput)
}

// A collection of arguments for invoking getContainerScanTargets.
type GetContainerScanTargetsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                   `pulumi:"displayName"`
	Filters     GetContainerScanTargetsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetContainerScanTargetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerScanTargetsArgs)(nil)).Elem()
}

// A collection of values returned by getContainerScanTargets.
type GetContainerScanTargetsResultOutput struct{ *pulumi.OutputState }

func (GetContainerScanTargetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerScanTargetsResult)(nil)).Elem()
}

func (o GetContainerScanTargetsResultOutput) ToGetContainerScanTargetsResultOutput() GetContainerScanTargetsResultOutput {
	return o
}

func (o GetContainerScanTargetsResultOutput) ToGetContainerScanTargetsResultOutputWithContext(ctx context.Context) GetContainerScanTargetsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
func (o GetContainerScanTargetsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerScanTargetsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of container_scan_target_summary_collection.
func (o GetContainerScanTargetsResultOutput) ContainerScanTargetSummaryCollections() GetContainerScanTargetsContainerScanTargetSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetContainerScanTargetsResult) []GetContainerScanTargetsContainerScanTargetSummaryCollection {
		return v.ContainerScanTargetSummaryCollections
	}).(GetContainerScanTargetsContainerScanTargetSummaryCollectionArrayOutput)
}

// User friendly name of container scan target
func (o GetContainerScanTargetsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerScanTargetsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetContainerScanTargetsResultOutput) Filters() GetContainerScanTargetsFilterArrayOutput {
	return o.ApplyT(func(v GetContainerScanTargetsResult) []GetContainerScanTargetsFilter { return v.Filters }).(GetContainerScanTargetsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetContainerScanTargetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerScanTargetsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the config.
func (o GetContainerScanTargetsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerScanTargetsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetContainerScanTargetsResultOutput{})
}
