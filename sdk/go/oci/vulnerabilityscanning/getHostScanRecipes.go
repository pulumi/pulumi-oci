// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vulnerabilityscanning

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Host Scan Recipes in Oracle Cloud Infrastructure Vulnerability Scanning service.
//
// Retrieves a list of HostScanRecipeSummary objects in a compartment. A recipe determines the types of security issues that you want scanned, and how often to scan.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/VulnerabilityScanning"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := VulnerabilityScanning.GetHostScanRecipes(ctx, &vulnerabilityscanning.GetHostScanRecipesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(hostScanRecipeDisplayName),
//				State:         pulumi.StringRef(hostScanRecipeState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetHostScanRecipes(ctx *pulumi.Context, args *GetHostScanRecipesArgs, opts ...pulumi.InvokeOption) (*GetHostScanRecipesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHostScanRecipesResult
	err := ctx.Invoke("oci:VulnerabilityScanning/getHostScanRecipes:getHostScanRecipes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHostScanRecipes.
type GetHostScanRecipesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetHostScanRecipesFilter `pulumi:"filters"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getHostScanRecipes.
type GetHostScanRecipesResult struct {
	// Compartment ID of the scan recipe
	CompartmentId string `pulumi:"compartmentId"`
	// Recipe identifier, which can be renamed
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetHostScanRecipesFilter `pulumi:"filters"`
	// The list of host_scan_recipe_summary_collection.
	HostScanRecipeSummaryCollections []GetHostScanRecipesHostScanRecipeSummaryCollection `pulumi:"hostScanRecipeSummaryCollections"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the config.
	State *string `pulumi:"state"`
}

func GetHostScanRecipesOutput(ctx *pulumi.Context, args GetHostScanRecipesOutputArgs, opts ...pulumi.InvokeOption) GetHostScanRecipesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHostScanRecipesResult, error) {
			args := v.(GetHostScanRecipesArgs)
			r, err := GetHostScanRecipes(ctx, &args, opts...)
			var s GetHostScanRecipesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHostScanRecipesResultOutput)
}

// A collection of arguments for invoking getHostScanRecipes.
type GetHostScanRecipesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput              `pulumi:"displayName"`
	Filters     GetHostScanRecipesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetHostScanRecipesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostScanRecipesArgs)(nil)).Elem()
}

// A collection of values returned by getHostScanRecipes.
type GetHostScanRecipesResultOutput struct{ *pulumi.OutputState }

func (GetHostScanRecipesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostScanRecipesResult)(nil)).Elem()
}

func (o GetHostScanRecipesResultOutput) ToGetHostScanRecipesResultOutput() GetHostScanRecipesResultOutput {
	return o
}

func (o GetHostScanRecipesResultOutput) ToGetHostScanRecipesResultOutputWithContext(ctx context.Context) GetHostScanRecipesResultOutput {
	return o
}

// Compartment ID of the scan recipe
func (o GetHostScanRecipesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostScanRecipesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Recipe identifier, which can be renamed
func (o GetHostScanRecipesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHostScanRecipesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetHostScanRecipesResultOutput) Filters() GetHostScanRecipesFilterArrayOutput {
	return o.ApplyT(func(v GetHostScanRecipesResult) []GetHostScanRecipesFilter { return v.Filters }).(GetHostScanRecipesFilterArrayOutput)
}

// The list of host_scan_recipe_summary_collection.
func (o GetHostScanRecipesResultOutput) HostScanRecipeSummaryCollections() GetHostScanRecipesHostScanRecipeSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetHostScanRecipesResult) []GetHostScanRecipesHostScanRecipeSummaryCollection {
		return v.HostScanRecipeSummaryCollections
	}).(GetHostScanRecipesHostScanRecipeSummaryCollectionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHostScanRecipesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostScanRecipesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the config.
func (o GetHostScanRecipesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHostScanRecipesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHostScanRecipesResultOutput{})
}
