// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vulnerabilityscanning

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Host Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
//
// Creates a new HostScanTarget. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/vulnerabilityscanning"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vulnerabilityscanning.NewHostScanTarget(ctx, "test_host_scan_target", &vulnerabilityscanning.HostScanTargetArgs{
//				CompartmentId:       pulumi.Any(compartmentId),
//				HostScanRecipeId:    pulumi.Any(testHostScanRecipe.Id),
//				TargetCompartmentId: pulumi.Any(testCompartment.Id),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(hostScanTargetDescription),
//				DisplayName: pulumi.Any(hostScanTargetDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				InstanceIds: pulumi.Any(hostScanTargetInstanceIds),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// HostScanTargets can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:VulnerabilityScanning/hostScanTarget:HostScanTarget test_host_scan_target "id"
// ```
type HostScanTarget struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment ID of the object (this).
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Target description.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId pulumi.StringOutput `pulumi:"hostScanRecipeId"`
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds pulumi.StringArrayOutput `pulumi:"instanceIds"`
	// The current state of the config.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetCompartmentId pulumi.StringOutput `pulumi:"targetCompartmentId"`
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewHostScanTarget registers a new resource with the given unique name, arguments, and options.
func NewHostScanTarget(ctx *pulumi.Context,
	name string, args *HostScanTargetArgs, opts ...pulumi.ResourceOption) (*HostScanTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.HostScanRecipeId == nil {
		return nil, errors.New("invalid value for required argument 'HostScanRecipeId'")
	}
	if args.TargetCompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'TargetCompartmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostScanTarget
	err := ctx.RegisterResource("oci:VulnerabilityScanning/hostScanTarget:HostScanTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostScanTarget gets an existing HostScanTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostScanTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostScanTargetState, opts ...pulumi.ResourceOption) (*HostScanTarget, error) {
	var resource HostScanTarget
	err := ctx.ReadResource("oci:VulnerabilityScanning/hostScanTarget:HostScanTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostScanTarget resources.
type hostScanTargetState struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Target description.
	Description *string `pulumi:"description"`
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId *string `pulumi:"hostScanRecipeId"`
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds []string `pulumi:"instanceIds"`
	// The current state of the config.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetCompartmentId *string `pulumi:"targetCompartmentId"`
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated *string `pulumi:"timeCreated"`
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type HostScanTargetState struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Target description.
	Description pulumi.StringPtrInput
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId pulumi.StringPtrInput
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds pulumi.StringArrayInput
	// The current state of the config.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetCompartmentId pulumi.StringPtrInput
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated pulumi.StringPtrInput
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated pulumi.StringPtrInput
}

func (HostScanTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostScanTargetState)(nil)).Elem()
}

type hostScanTargetArgs struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Target description.
	Description *string `pulumi:"description"`
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId string `pulumi:"hostScanRecipeId"`
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds []string `pulumi:"instanceIds"`
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetCompartmentId string `pulumi:"targetCompartmentId"`
}

// The set of arguments for constructing a HostScanTarget resource.
type HostScanTargetArgs struct {
	// (Updatable) Compartment ID of the object (this).
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Target description.
	Description pulumi.StringPtrInput
	// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) ID of the host scan recipe this target applies.
	HostScanRecipeId pulumi.StringInput
	// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds pulumi.StringArrayInput
	// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetCompartmentId pulumi.StringInput
}

func (HostScanTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostScanTargetArgs)(nil)).Elem()
}

type HostScanTargetInput interface {
	pulumi.Input

	ToHostScanTargetOutput() HostScanTargetOutput
	ToHostScanTargetOutputWithContext(ctx context.Context) HostScanTargetOutput
}

func (*HostScanTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**HostScanTarget)(nil)).Elem()
}

func (i *HostScanTarget) ToHostScanTargetOutput() HostScanTargetOutput {
	return i.ToHostScanTargetOutputWithContext(context.Background())
}

func (i *HostScanTarget) ToHostScanTargetOutputWithContext(ctx context.Context) HostScanTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostScanTargetOutput)
}

// HostScanTargetArrayInput is an input type that accepts HostScanTargetArray and HostScanTargetArrayOutput values.
// You can construct a concrete instance of `HostScanTargetArrayInput` via:
//
//	HostScanTargetArray{ HostScanTargetArgs{...} }
type HostScanTargetArrayInput interface {
	pulumi.Input

	ToHostScanTargetArrayOutput() HostScanTargetArrayOutput
	ToHostScanTargetArrayOutputWithContext(context.Context) HostScanTargetArrayOutput
}

type HostScanTargetArray []HostScanTargetInput

func (HostScanTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostScanTarget)(nil)).Elem()
}

func (i HostScanTargetArray) ToHostScanTargetArrayOutput() HostScanTargetArrayOutput {
	return i.ToHostScanTargetArrayOutputWithContext(context.Background())
}

func (i HostScanTargetArray) ToHostScanTargetArrayOutputWithContext(ctx context.Context) HostScanTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostScanTargetArrayOutput)
}

// HostScanTargetMapInput is an input type that accepts HostScanTargetMap and HostScanTargetMapOutput values.
// You can construct a concrete instance of `HostScanTargetMapInput` via:
//
//	HostScanTargetMap{ "key": HostScanTargetArgs{...} }
type HostScanTargetMapInput interface {
	pulumi.Input

	ToHostScanTargetMapOutput() HostScanTargetMapOutput
	ToHostScanTargetMapOutputWithContext(context.Context) HostScanTargetMapOutput
}

type HostScanTargetMap map[string]HostScanTargetInput

func (HostScanTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostScanTarget)(nil)).Elem()
}

func (i HostScanTargetMap) ToHostScanTargetMapOutput() HostScanTargetMapOutput {
	return i.ToHostScanTargetMapOutputWithContext(context.Background())
}

func (i HostScanTargetMap) ToHostScanTargetMapOutputWithContext(ctx context.Context) HostScanTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostScanTargetMapOutput)
}

type HostScanTargetOutput struct{ *pulumi.OutputState }

func (HostScanTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostScanTarget)(nil)).Elem()
}

func (o HostScanTargetOutput) ToHostScanTargetOutput() HostScanTargetOutput {
	return o
}

func (o HostScanTargetOutput) ToHostScanTargetOutputWithContext(ctx context.Context) HostScanTargetOutput {
	return o
}

// (Updatable) Compartment ID of the object (this).
func (o HostScanTargetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o HostScanTargetOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Target description.
func (o HostScanTargetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Target identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
func (o HostScanTargetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o HostScanTargetOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) ID of the host scan recipe this target applies.
func (o HostScanTargetOutput) HostScanRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.HostScanRecipeId }).(pulumi.StringOutput)
}

// (Updatable) List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
func (o HostScanTargetOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringArrayOutput { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// The current state of the config.
func (o HostScanTargetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o HostScanTargetOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// (Updatable) Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o HostScanTargetOutput) TargetCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.TargetCompartmentId }).(pulumi.StringOutput)
}

// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
func (o HostScanTargetOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
func (o HostScanTargetOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *HostScanTarget) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type HostScanTargetArrayOutput struct{ *pulumi.OutputState }

func (HostScanTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostScanTarget)(nil)).Elem()
}

func (o HostScanTargetArrayOutput) ToHostScanTargetArrayOutput() HostScanTargetArrayOutput {
	return o
}

func (o HostScanTargetArrayOutput) ToHostScanTargetArrayOutputWithContext(ctx context.Context) HostScanTargetArrayOutput {
	return o
}

func (o HostScanTargetArrayOutput) Index(i pulumi.IntInput) HostScanTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostScanTarget {
		return vs[0].([]*HostScanTarget)[vs[1].(int)]
	}).(HostScanTargetOutput)
}

type HostScanTargetMapOutput struct{ *pulumi.OutputState }

func (HostScanTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostScanTarget)(nil)).Elem()
}

func (o HostScanTargetMapOutput) ToHostScanTargetMapOutput() HostScanTargetMapOutput {
	return o
}

func (o HostScanTargetMapOutput) ToHostScanTargetMapOutputWithContext(ctx context.Context) HostScanTargetMapOutput {
	return o
}

func (o HostScanTargetMapOutput) MapIndex(k pulumi.StringInput) HostScanTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostScanTarget {
		return vs[0].(map[string]*HostScanTarget)[vs[1].(string)]
	}).(HostScanTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostScanTargetInput)(nil)).Elem(), &HostScanTarget{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostScanTargetArrayInput)(nil)).Elem(), HostScanTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostScanTargetMapInput)(nil)).Elem(), HostScanTargetMap{})
	pulumi.RegisterOutputType(HostScanTargetOutput{})
	pulumi.RegisterOutputType(HostScanTargetArrayOutput{})
	pulumi.RegisterOutputType(HostScanTargetMapOutput{})
}
