// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppAccelerationPolicyResponseCachingPolicy struct {
	// (Updatable) When false, responses will not be cached by the backend based on response headers.
	IsResponseHeaderBasedCachingEnabled *bool `pulumi:"isResponseHeaderBasedCachingEnabled"`
}

// AppAccelerationPolicyResponseCachingPolicyInput is an input type that accepts AppAccelerationPolicyResponseCachingPolicyArgs and AppAccelerationPolicyResponseCachingPolicyOutput values.
// You can construct a concrete instance of `AppAccelerationPolicyResponseCachingPolicyInput` via:
//
//	AppAccelerationPolicyResponseCachingPolicyArgs{...}
type AppAccelerationPolicyResponseCachingPolicyInput interface {
	pulumi.Input

	ToAppAccelerationPolicyResponseCachingPolicyOutput() AppAccelerationPolicyResponseCachingPolicyOutput
	ToAppAccelerationPolicyResponseCachingPolicyOutputWithContext(context.Context) AppAccelerationPolicyResponseCachingPolicyOutput
}

type AppAccelerationPolicyResponseCachingPolicyArgs struct {
	// (Updatable) When false, responses will not be cached by the backend based on response headers.
	IsResponseHeaderBasedCachingEnabled pulumi.BoolPtrInput `pulumi:"isResponseHeaderBasedCachingEnabled"`
}

func (AppAccelerationPolicyResponseCachingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (i AppAccelerationPolicyResponseCachingPolicyArgs) ToAppAccelerationPolicyResponseCachingPolicyOutput() AppAccelerationPolicyResponseCachingPolicyOutput {
	return i.ToAppAccelerationPolicyResponseCachingPolicyOutputWithContext(context.Background())
}

func (i AppAccelerationPolicyResponseCachingPolicyArgs) ToAppAccelerationPolicyResponseCachingPolicyOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCachingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCachingPolicyOutput)
}

func (i AppAccelerationPolicyResponseCachingPolicyArgs) ToAppAccelerationPolicyResponseCachingPolicyPtrOutput() AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return i.ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(context.Background())
}

func (i AppAccelerationPolicyResponseCachingPolicyArgs) ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCachingPolicyOutput).ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(ctx)
}

// AppAccelerationPolicyResponseCachingPolicyPtrInput is an input type that accepts AppAccelerationPolicyResponseCachingPolicyArgs, AppAccelerationPolicyResponseCachingPolicyPtr and AppAccelerationPolicyResponseCachingPolicyPtrOutput values.
// You can construct a concrete instance of `AppAccelerationPolicyResponseCachingPolicyPtrInput` via:
//
//	        AppAccelerationPolicyResponseCachingPolicyArgs{...}
//
//	or:
//
//	        nil
type AppAccelerationPolicyResponseCachingPolicyPtrInput interface {
	pulumi.Input

	ToAppAccelerationPolicyResponseCachingPolicyPtrOutput() AppAccelerationPolicyResponseCachingPolicyPtrOutput
	ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(context.Context) AppAccelerationPolicyResponseCachingPolicyPtrOutput
}

type appAccelerationPolicyResponseCachingPolicyPtrType AppAccelerationPolicyResponseCachingPolicyArgs

func AppAccelerationPolicyResponseCachingPolicyPtr(v *AppAccelerationPolicyResponseCachingPolicyArgs) AppAccelerationPolicyResponseCachingPolicyPtrInput {
	return (*appAccelerationPolicyResponseCachingPolicyPtrType)(v)
}

func (*appAccelerationPolicyResponseCachingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (i *appAccelerationPolicyResponseCachingPolicyPtrType) ToAppAccelerationPolicyResponseCachingPolicyPtrOutput() AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return i.ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(context.Background())
}

func (i *appAccelerationPolicyResponseCachingPolicyPtrType) ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCachingPolicyPtrOutput)
}

type AppAccelerationPolicyResponseCachingPolicyOutput struct{ *pulumi.OutputState }

func (AppAccelerationPolicyResponseCachingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (o AppAccelerationPolicyResponseCachingPolicyOutput) ToAppAccelerationPolicyResponseCachingPolicyOutput() AppAccelerationPolicyResponseCachingPolicyOutput {
	return o
}

func (o AppAccelerationPolicyResponseCachingPolicyOutput) ToAppAccelerationPolicyResponseCachingPolicyOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCachingPolicyOutput {
	return o
}

func (o AppAccelerationPolicyResponseCachingPolicyOutput) ToAppAccelerationPolicyResponseCachingPolicyPtrOutput() AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return o.ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(context.Background())
}

func (o AppAccelerationPolicyResponseCachingPolicyOutput) ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAccelerationPolicyResponseCachingPolicy) *AppAccelerationPolicyResponseCachingPolicy {
		return &v
	}).(AppAccelerationPolicyResponseCachingPolicyPtrOutput)
}

// (Updatable) When false, responses will not be cached by the backend based on response headers.
func (o AppAccelerationPolicyResponseCachingPolicyOutput) IsResponseHeaderBasedCachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppAccelerationPolicyResponseCachingPolicy) *bool { return v.IsResponseHeaderBasedCachingEnabled }).(pulumi.BoolPtrOutput)
}

type AppAccelerationPolicyResponseCachingPolicyPtrOutput struct{ *pulumi.OutputState }

func (AppAccelerationPolicyResponseCachingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (o AppAccelerationPolicyResponseCachingPolicyPtrOutput) ToAppAccelerationPolicyResponseCachingPolicyPtrOutput() AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return o
}

func (o AppAccelerationPolicyResponseCachingPolicyPtrOutput) ToAppAccelerationPolicyResponseCachingPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCachingPolicyPtrOutput {
	return o
}

func (o AppAccelerationPolicyResponseCachingPolicyPtrOutput) Elem() AppAccelerationPolicyResponseCachingPolicyOutput {
	return o.ApplyT(func(v *AppAccelerationPolicyResponseCachingPolicy) AppAccelerationPolicyResponseCachingPolicy {
		if v != nil {
			return *v
		}
		var ret AppAccelerationPolicyResponseCachingPolicy
		return ret
	}).(AppAccelerationPolicyResponseCachingPolicyOutput)
}

// (Updatable) When false, responses will not be cached by the backend based on response headers.
func (o AppAccelerationPolicyResponseCachingPolicyPtrOutput) IsResponseHeaderBasedCachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppAccelerationPolicyResponseCachingPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsResponseHeaderBasedCachingEnabled
	}).(pulumi.BoolPtrOutput)
}

type AppAccelerationPolicyResponseCompressionPolicy struct {
	// (Updatable) An object that specifies the gzip compression policy.
	GzipCompression *AppAccelerationPolicyResponseCompressionPolicyGzipCompression `pulumi:"gzipCompression"`
}

// AppAccelerationPolicyResponseCompressionPolicyInput is an input type that accepts AppAccelerationPolicyResponseCompressionPolicyArgs and AppAccelerationPolicyResponseCompressionPolicyOutput values.
// You can construct a concrete instance of `AppAccelerationPolicyResponseCompressionPolicyInput` via:
//
//	AppAccelerationPolicyResponseCompressionPolicyArgs{...}
type AppAccelerationPolicyResponseCompressionPolicyInput interface {
	pulumi.Input

	ToAppAccelerationPolicyResponseCompressionPolicyOutput() AppAccelerationPolicyResponseCompressionPolicyOutput
	ToAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(context.Context) AppAccelerationPolicyResponseCompressionPolicyOutput
}

type AppAccelerationPolicyResponseCompressionPolicyArgs struct {
	// (Updatable) An object that specifies the gzip compression policy.
	GzipCompression AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrInput `pulumi:"gzipCompression"`
}

func (AppAccelerationPolicyResponseCompressionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (i AppAccelerationPolicyResponseCompressionPolicyArgs) ToAppAccelerationPolicyResponseCompressionPolicyOutput() AppAccelerationPolicyResponseCompressionPolicyOutput {
	return i.ToAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(context.Background())
}

func (i AppAccelerationPolicyResponseCompressionPolicyArgs) ToAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCompressionPolicyOutput)
}

func (i AppAccelerationPolicyResponseCompressionPolicyArgs) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutput() AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return i.ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(context.Background())
}

func (i AppAccelerationPolicyResponseCompressionPolicyArgs) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCompressionPolicyOutput).ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(ctx)
}

// AppAccelerationPolicyResponseCompressionPolicyPtrInput is an input type that accepts AppAccelerationPolicyResponseCompressionPolicyArgs, AppAccelerationPolicyResponseCompressionPolicyPtr and AppAccelerationPolicyResponseCompressionPolicyPtrOutput values.
// You can construct a concrete instance of `AppAccelerationPolicyResponseCompressionPolicyPtrInput` via:
//
//	        AppAccelerationPolicyResponseCompressionPolicyArgs{...}
//
//	or:
//
//	        nil
type AppAccelerationPolicyResponseCompressionPolicyPtrInput interface {
	pulumi.Input

	ToAppAccelerationPolicyResponseCompressionPolicyPtrOutput() AppAccelerationPolicyResponseCompressionPolicyPtrOutput
	ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(context.Context) AppAccelerationPolicyResponseCompressionPolicyPtrOutput
}

type appAccelerationPolicyResponseCompressionPolicyPtrType AppAccelerationPolicyResponseCompressionPolicyArgs

func AppAccelerationPolicyResponseCompressionPolicyPtr(v *AppAccelerationPolicyResponseCompressionPolicyArgs) AppAccelerationPolicyResponseCompressionPolicyPtrInput {
	return (*appAccelerationPolicyResponseCompressionPolicyPtrType)(v)
}

func (*appAccelerationPolicyResponseCompressionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (i *appAccelerationPolicyResponseCompressionPolicyPtrType) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutput() AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return i.ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(context.Background())
}

func (i *appAccelerationPolicyResponseCompressionPolicyPtrType) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCompressionPolicyPtrOutput)
}

type AppAccelerationPolicyResponseCompressionPolicyOutput struct{ *pulumi.OutputState }

func (AppAccelerationPolicyResponseCompressionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (o AppAccelerationPolicyResponseCompressionPolicyOutput) ToAppAccelerationPolicyResponseCompressionPolicyOutput() AppAccelerationPolicyResponseCompressionPolicyOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyOutput) ToAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyOutput) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutput() AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return o.ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(context.Background())
}

func (o AppAccelerationPolicyResponseCompressionPolicyOutput) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAccelerationPolicyResponseCompressionPolicy) *AppAccelerationPolicyResponseCompressionPolicy {
		return &v
	}).(AppAccelerationPolicyResponseCompressionPolicyPtrOutput)
}

// (Updatable) An object that specifies the gzip compression policy.
func (o AppAccelerationPolicyResponseCompressionPolicyOutput) GzipCompression() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return o.ApplyT(func(v AppAccelerationPolicyResponseCompressionPolicy) *AppAccelerationPolicyResponseCompressionPolicyGzipCompression {
		return v.GzipCompression
	}).(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput)
}

type AppAccelerationPolicyResponseCompressionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AppAccelerationPolicyResponseCompressionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (o AppAccelerationPolicyResponseCompressionPolicyPtrOutput) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutput() AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyPtrOutput) ToAppAccelerationPolicyResponseCompressionPolicyPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyPtrOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyPtrOutput) Elem() AppAccelerationPolicyResponseCompressionPolicyOutput {
	return o.ApplyT(func(v *AppAccelerationPolicyResponseCompressionPolicy) AppAccelerationPolicyResponseCompressionPolicy {
		if v != nil {
			return *v
		}
		var ret AppAccelerationPolicyResponseCompressionPolicy
		return ret
	}).(AppAccelerationPolicyResponseCompressionPolicyOutput)
}

// (Updatable) An object that specifies the gzip compression policy.
func (o AppAccelerationPolicyResponseCompressionPolicyPtrOutput) GzipCompression() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return o.ApplyT(func(v *AppAccelerationPolicyResponseCompressionPolicy) *AppAccelerationPolicyResponseCompressionPolicyGzipCompression {
		if v == nil {
			return nil
		}
		return v.GzipCompression
	}).(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput)
}

type AppAccelerationPolicyResponseCompressionPolicyGzipCompression struct {
	// (Updatable) When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// AppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput is an input type that accepts AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs and AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput values.
// You can construct a concrete instance of `AppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput` via:
//
//	AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs{...}
type AppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput interface {
	pulumi.Input

	ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput
	ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput
}

type AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs struct {
	// (Updatable) When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (i AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return i.ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(context.Background())
}

func (i AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput)
}

func (i AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return i.ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(context.Background())
}

func (i AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput).ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(ctx)
}

// AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrInput is an input type that accepts AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs, AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtr and AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput values.
// You can construct a concrete instance of `AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrInput` via:
//
//	        AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs{...}
//
//	or:
//
//	        nil
type AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrInput interface {
	pulumi.Input

	ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput
	ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput
}

type appAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrType AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs

func AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtr(v *AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrInput {
	return (*appAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrType)(v)
}

func (*appAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (i *appAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrType) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return i.ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(context.Background())
}

func (i *appAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrType) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput)
}

type AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput struct{ *pulumi.OutputState }

func (AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return o.ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(context.Background())
}

func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAccelerationPolicyResponseCompressionPolicyGzipCompression) *AppAccelerationPolicyResponseCompressionPolicyGzipCompression {
		return &v
	}).(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput)
}

// (Updatable) When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppAccelerationPolicyResponseCompressionPolicyGzipCompression) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput struct{ *pulumi.OutputState }

func (AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput) ToAppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutputWithContext(ctx context.Context) AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput {
	return o
}

func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput) Elem() AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return o.ApplyT(func(v *AppAccelerationPolicyResponseCompressionPolicyGzipCompression) AppAccelerationPolicyResponseCompressionPolicyGzipCompression {
		if v != nil {
			return *v
		}
		var ret AppAccelerationPolicyResponseCompressionPolicyGzipCompression
		return ret
	}).(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput)
}

// (Updatable) When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
func (o AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppAccelerationPolicyResponseCompressionPolicyGzipCompression) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type GetAppAccelerationPoliciesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetAppAccelerationPoliciesFilterInput is an input type that accepts GetAppAccelerationPoliciesFilterArgs and GetAppAccelerationPoliciesFilterOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesFilterInput` via:
//
//	GetAppAccelerationPoliciesFilterArgs{...}
type GetAppAccelerationPoliciesFilterInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesFilterOutput() GetAppAccelerationPoliciesFilterOutput
	ToGetAppAccelerationPoliciesFilterOutputWithContext(context.Context) GetAppAccelerationPoliciesFilterOutput
}

type GetAppAccelerationPoliciesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAppAccelerationPoliciesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesFilter)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesFilterArgs) ToGetAppAccelerationPoliciesFilterOutput() GetAppAccelerationPoliciesFilterOutput {
	return i.ToGetAppAccelerationPoliciesFilterOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesFilterArgs) ToGetAppAccelerationPoliciesFilterOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesFilterOutput)
}

// GetAppAccelerationPoliciesFilterArrayInput is an input type that accepts GetAppAccelerationPoliciesFilterArray and GetAppAccelerationPoliciesFilterArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesFilterArrayInput` via:
//
//	GetAppAccelerationPoliciesFilterArray{ GetAppAccelerationPoliciesFilterArgs{...} }
type GetAppAccelerationPoliciesFilterArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesFilterArrayOutput() GetAppAccelerationPoliciesFilterArrayOutput
	ToGetAppAccelerationPoliciesFilterArrayOutputWithContext(context.Context) GetAppAccelerationPoliciesFilterArrayOutput
}

type GetAppAccelerationPoliciesFilterArray []GetAppAccelerationPoliciesFilterInput

func (GetAppAccelerationPoliciesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesFilter)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesFilterArray) ToGetAppAccelerationPoliciesFilterArrayOutput() GetAppAccelerationPoliciesFilterArrayOutput {
	return i.ToGetAppAccelerationPoliciesFilterArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesFilterArray) ToGetAppAccelerationPoliciesFilterArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesFilterArrayOutput)
}

type GetAppAccelerationPoliciesFilterOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesFilter)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesFilterOutput) ToGetAppAccelerationPoliciesFilterOutput() GetAppAccelerationPoliciesFilterOutput {
	return o
}

func (o GetAppAccelerationPoliciesFilterOutput) ToGetAppAccelerationPoliciesFilterOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesFilterOutput {
	return o
}

func (o GetAppAccelerationPoliciesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppAccelerationPoliciesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetAppAccelerationPoliciesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAppAccelerationPoliciesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesFilter)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesFilterArrayOutput) ToGetAppAccelerationPoliciesFilterArrayOutput() GetAppAccelerationPoliciesFilterArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesFilterArrayOutput) ToGetAppAccelerationPoliciesFilterArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesFilterArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesFilterArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPoliciesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPoliciesFilter {
		return vs[0].([]GetAppAccelerationPoliciesFilter)[vs[1].(int)]
	}).(GetAppAccelerationPoliciesFilterOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection struct {
	Items []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem `pulumi:"items"`
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs{...}
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs struct {
	Items GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayInput `pulumi:"items"`
}

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput)
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArray and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArray{ GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs{...} }
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArray []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionInput

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput) Items() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection) []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem {
		return v.Items
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection {
		return vs[0].([]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollection)[vs[1].(int)]
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only the WebAppAccelerationPolicy with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// An object that specifies an HTTP response caching policy.
	ResponseCachingPolicies []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy `pulumi:"responseCachingPolicies"`
	// An object that specifies a compression policy for HTTP response from ENABLEMENT POINT to the client.
	ResponseCompressionPolicies []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy `pulumi:"responseCompressionPolicies"`
	// A filter to return only resources that match the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the WebAppAccelerationPolicy was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the WebAppAccelerationPolicy was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs{...}
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only the WebAppAccelerationPolicy with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// An object that specifies an HTTP response caching policy.
	ResponseCachingPolicies GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayInput `pulumi:"responseCachingPolicies"`
	// An object that specifies a compression policy for HTTP response from ENABLEMENT POINT to the client.
	ResponseCompressionPolicies GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayInput `pulumi:"responseCompressionPolicies"`
	// A filter to return only resources that match the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the WebAppAccelerationPolicy was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the WebAppAccelerationPolicy was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput)
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArray and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArray{ GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs{...} }
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArray []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemInput

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// A filter to return only the WebAppAccelerationPolicy with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// An object that specifies an HTTP response caching policy.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) ResponseCachingPolicies() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy {
		return v.ResponseCachingPolicies
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput)
}

// An object that specifies a compression policy for HTTP response from ENABLEMENT POINT to the client.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) ResponseCompressionPolicies() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy {
		return v.ResponseCompressionPolicies
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput)
}

// A filter to return only resources that match the given lifecycleState.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The time the WebAppAccelerationPolicy was created. An RFC3339 formatted datetime string.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the WebAppAccelerationPolicy was updated. An RFC3339 formatted datetime string.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem {
		return vs[0].([]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItem)[vs[1].(int)]
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy struct {
	// When false, responses will not be cached by the backend based on response headers.
	IsResponseHeaderBasedCachingEnabled bool `pulumi:"isResponseHeaderBasedCachingEnabled"`
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs{...}
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs struct {
	// When false, responses will not be cached by the backend based on response headers.
	IsResponseHeaderBasedCachingEnabled pulumi.BoolInput `pulumi:"isResponseHeaderBasedCachingEnabled"`
}

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput)
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArray and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArray{ GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs{...} }
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArray []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyInput

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput {
	return o
}

// When false, responses will not be cached by the backend based on response headers.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput) IsResponseHeaderBasedCachingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy) bool {
		return v.IsResponseHeaderBasedCachingEnabled
	}).(pulumi.BoolOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy {
		return vs[0].([]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicy)[vs[1].(int)]
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy struct {
	// An object that specifies the gzip compression policy.
	GzipCompressions []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression `pulumi:"gzipCompressions"`
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs{...}
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs struct {
	// An object that specifies the gzip compression policy.
	GzipCompressions GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayInput `pulumi:"gzipCompressions"`
}

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput)
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArray and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArray{ GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs{...} }
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArray []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyInput

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput {
	return o
}

// An object that specifies the gzip compression policy.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput) GzipCompressions() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy) []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression {
		return v.GzipCompressions
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy {
		return vs[0].([]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicy)[vs[1].(int)]
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression struct {
	// When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs{...}
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs struct {
	// When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput)
}

// GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayInput is an input type that accepts GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArray and GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayInput` via:
//
//	GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArray{ GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs{...} }
type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput
	ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutputWithContext(context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArray []GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionInput

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput {
	return i.ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArray) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput {
	return o
}

// When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

type GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput() GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput) ToGetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutputWithContext(ctx context.Context) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput {
	return o
}

func (o GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression {
		return vs[0].([]GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompression)[vs[1].(int)]
	}).(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput)
}

type GetAppAccelerationPolicyResponseCachingPolicy struct {
	// When false, responses will not be cached by the backend based on response headers.
	IsResponseHeaderBasedCachingEnabled bool `pulumi:"isResponseHeaderBasedCachingEnabled"`
}

// GetAppAccelerationPolicyResponseCachingPolicyInput is an input type that accepts GetAppAccelerationPolicyResponseCachingPolicyArgs and GetAppAccelerationPolicyResponseCachingPolicyOutput values.
// You can construct a concrete instance of `GetAppAccelerationPolicyResponseCachingPolicyInput` via:
//
//	GetAppAccelerationPolicyResponseCachingPolicyArgs{...}
type GetAppAccelerationPolicyResponseCachingPolicyInput interface {
	pulumi.Input

	ToGetAppAccelerationPolicyResponseCachingPolicyOutput() GetAppAccelerationPolicyResponseCachingPolicyOutput
	ToGetAppAccelerationPolicyResponseCachingPolicyOutputWithContext(context.Context) GetAppAccelerationPolicyResponseCachingPolicyOutput
}

type GetAppAccelerationPolicyResponseCachingPolicyArgs struct {
	// When false, responses will not be cached by the backend based on response headers.
	IsResponseHeaderBasedCachingEnabled pulumi.BoolInput `pulumi:"isResponseHeaderBasedCachingEnabled"`
}

func (GetAppAccelerationPolicyResponseCachingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPolicyResponseCachingPolicyArgs) ToGetAppAccelerationPolicyResponseCachingPolicyOutput() GetAppAccelerationPolicyResponseCachingPolicyOutput {
	return i.ToGetAppAccelerationPolicyResponseCachingPolicyOutputWithContext(context.Background())
}

func (i GetAppAccelerationPolicyResponseCachingPolicyArgs) ToGetAppAccelerationPolicyResponseCachingPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCachingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPolicyResponseCachingPolicyOutput)
}

// GetAppAccelerationPolicyResponseCachingPolicyArrayInput is an input type that accepts GetAppAccelerationPolicyResponseCachingPolicyArray and GetAppAccelerationPolicyResponseCachingPolicyArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPolicyResponseCachingPolicyArrayInput` via:
//
//	GetAppAccelerationPolicyResponseCachingPolicyArray{ GetAppAccelerationPolicyResponseCachingPolicyArgs{...} }
type GetAppAccelerationPolicyResponseCachingPolicyArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPolicyResponseCachingPolicyArrayOutput() GetAppAccelerationPolicyResponseCachingPolicyArrayOutput
	ToGetAppAccelerationPolicyResponseCachingPolicyArrayOutputWithContext(context.Context) GetAppAccelerationPolicyResponseCachingPolicyArrayOutput
}

type GetAppAccelerationPolicyResponseCachingPolicyArray []GetAppAccelerationPolicyResponseCachingPolicyInput

func (GetAppAccelerationPolicyResponseCachingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPolicyResponseCachingPolicyArray) ToGetAppAccelerationPolicyResponseCachingPolicyArrayOutput() GetAppAccelerationPolicyResponseCachingPolicyArrayOutput {
	return i.ToGetAppAccelerationPolicyResponseCachingPolicyArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPolicyResponseCachingPolicyArray) ToGetAppAccelerationPolicyResponseCachingPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCachingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPolicyResponseCachingPolicyArrayOutput)
}

type GetAppAccelerationPolicyResponseCachingPolicyOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPolicyResponseCachingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPolicyResponseCachingPolicyOutput) ToGetAppAccelerationPolicyResponseCachingPolicyOutput() GetAppAccelerationPolicyResponseCachingPolicyOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCachingPolicyOutput) ToGetAppAccelerationPolicyResponseCachingPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCachingPolicyOutput {
	return o
}

// When false, responses will not be cached by the backend based on response headers.
func (o GetAppAccelerationPolicyResponseCachingPolicyOutput) IsResponseHeaderBasedCachingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppAccelerationPolicyResponseCachingPolicy) bool {
		return v.IsResponseHeaderBasedCachingEnabled
	}).(pulumi.BoolOutput)
}

type GetAppAccelerationPolicyResponseCachingPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPolicyResponseCachingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPolicyResponseCachingPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPolicyResponseCachingPolicyArrayOutput) ToGetAppAccelerationPolicyResponseCachingPolicyArrayOutput() GetAppAccelerationPolicyResponseCachingPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCachingPolicyArrayOutput) ToGetAppAccelerationPolicyResponseCachingPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCachingPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCachingPolicyArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPolicyResponseCachingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPolicyResponseCachingPolicy {
		return vs[0].([]GetAppAccelerationPolicyResponseCachingPolicy)[vs[1].(int)]
	}).(GetAppAccelerationPolicyResponseCachingPolicyOutput)
}

type GetAppAccelerationPolicyResponseCompressionPolicy struct {
	// An object that specifies the gzip compression policy.
	GzipCompressions []GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression `pulumi:"gzipCompressions"`
}

// GetAppAccelerationPolicyResponseCompressionPolicyInput is an input type that accepts GetAppAccelerationPolicyResponseCompressionPolicyArgs and GetAppAccelerationPolicyResponseCompressionPolicyOutput values.
// You can construct a concrete instance of `GetAppAccelerationPolicyResponseCompressionPolicyInput` via:
//
//	GetAppAccelerationPolicyResponseCompressionPolicyArgs{...}
type GetAppAccelerationPolicyResponseCompressionPolicyInput interface {
	pulumi.Input

	ToGetAppAccelerationPolicyResponseCompressionPolicyOutput() GetAppAccelerationPolicyResponseCompressionPolicyOutput
	ToGetAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(context.Context) GetAppAccelerationPolicyResponseCompressionPolicyOutput
}

type GetAppAccelerationPolicyResponseCompressionPolicyArgs struct {
	// An object that specifies the gzip compression policy.
	GzipCompressions GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayInput `pulumi:"gzipCompressions"`
}

func (GetAppAccelerationPolicyResponseCompressionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyArgs) ToGetAppAccelerationPolicyResponseCompressionPolicyOutput() GetAppAccelerationPolicyResponseCompressionPolicyOutput {
	return i.ToGetAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(context.Background())
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyArgs) ToGetAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPolicyResponseCompressionPolicyOutput)
}

// GetAppAccelerationPolicyResponseCompressionPolicyArrayInput is an input type that accepts GetAppAccelerationPolicyResponseCompressionPolicyArray and GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPolicyResponseCompressionPolicyArrayInput` via:
//
//	GetAppAccelerationPolicyResponseCompressionPolicyArray{ GetAppAccelerationPolicyResponseCompressionPolicyArgs{...} }
type GetAppAccelerationPolicyResponseCompressionPolicyArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPolicyResponseCompressionPolicyArrayOutput() GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput
	ToGetAppAccelerationPolicyResponseCompressionPolicyArrayOutputWithContext(context.Context) GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput
}

type GetAppAccelerationPolicyResponseCompressionPolicyArray []GetAppAccelerationPolicyResponseCompressionPolicyInput

func (GetAppAccelerationPolicyResponseCompressionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyArray) ToGetAppAccelerationPolicyResponseCompressionPolicyArrayOutput() GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput {
	return i.ToGetAppAccelerationPolicyResponseCompressionPolicyArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyArray) ToGetAppAccelerationPolicyResponseCompressionPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput)
}

type GetAppAccelerationPolicyResponseCompressionPolicyOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPolicyResponseCompressionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyOutput() GetAppAccelerationPolicyResponseCompressionPolicyOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyOutput {
	return o
}

// An object that specifies the gzip compression policy.
func (o GetAppAccelerationPolicyResponseCompressionPolicyOutput) GzipCompressions() GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationPolicyResponseCompressionPolicy) []GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression {
		return v.GzipCompressions
	}).(GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput)
}

type GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPolicyResponseCompressionPolicy)(nil)).Elem()
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyArrayOutput() GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyArrayOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPolicyResponseCompressionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPolicyResponseCompressionPolicy {
		return vs[0].([]GetAppAccelerationPolicyResponseCompressionPolicy)[vs[1].(int)]
	}).(GetAppAccelerationPolicyResponseCompressionPolicyOutput)
}

type GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression struct {
	// When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput is an input type that accepts GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs and GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput values.
// You can construct a concrete instance of `GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput` via:
//
//	GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs{...}
type GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput interface {
	pulumi.Input

	ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput() GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput
	ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(context.Context) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput
}

type GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs struct {
	// When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput() GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return i.ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(context.Background())
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput)
}

// GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayInput is an input type that accepts GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArray and GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayInput` via:
//
//	GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArray{ GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs{...} }
type GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput() GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput
	ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutputWithContext(context.Context) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput
}

type GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArray []GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput

func (GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArray) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput() GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput {
	return i.ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArray) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput)
}

type GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput() GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return o
}

// When true, support for gzip compression is enabled. HTTP responses will be compressed with gzip only if the client indicates support for gzip via the "Accept-Encoding: gzip" request header.
func (o GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression)(nil)).Elem()
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput() GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput) ToGetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutputWithContext(ctx context.Context) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput {
	return o
}

func (o GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression {
		return vs[0].([]GetAppAccelerationPolicyResponseCompressionPolicyGzipCompression)[vs[1].(int)]
	}).(GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput)
}

type GetAppAccelerationsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetAppAccelerationsFilterInput is an input type that accepts GetAppAccelerationsFilterArgs and GetAppAccelerationsFilterOutput values.
// You can construct a concrete instance of `GetAppAccelerationsFilterInput` via:
//
//	GetAppAccelerationsFilterArgs{...}
type GetAppAccelerationsFilterInput interface {
	pulumi.Input

	ToGetAppAccelerationsFilterOutput() GetAppAccelerationsFilterOutput
	ToGetAppAccelerationsFilterOutputWithContext(context.Context) GetAppAccelerationsFilterOutput
}

type GetAppAccelerationsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAppAccelerationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationsFilter)(nil)).Elem()
}

func (i GetAppAccelerationsFilterArgs) ToGetAppAccelerationsFilterOutput() GetAppAccelerationsFilterOutput {
	return i.ToGetAppAccelerationsFilterOutputWithContext(context.Background())
}

func (i GetAppAccelerationsFilterArgs) ToGetAppAccelerationsFilterOutputWithContext(ctx context.Context) GetAppAccelerationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationsFilterOutput)
}

// GetAppAccelerationsFilterArrayInput is an input type that accepts GetAppAccelerationsFilterArray and GetAppAccelerationsFilterArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationsFilterArrayInput` via:
//
//	GetAppAccelerationsFilterArray{ GetAppAccelerationsFilterArgs{...} }
type GetAppAccelerationsFilterArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationsFilterArrayOutput() GetAppAccelerationsFilterArrayOutput
	ToGetAppAccelerationsFilterArrayOutputWithContext(context.Context) GetAppAccelerationsFilterArrayOutput
}

type GetAppAccelerationsFilterArray []GetAppAccelerationsFilterInput

func (GetAppAccelerationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationsFilter)(nil)).Elem()
}

func (i GetAppAccelerationsFilterArray) ToGetAppAccelerationsFilterArrayOutput() GetAppAccelerationsFilterArrayOutput {
	return i.ToGetAppAccelerationsFilterArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationsFilterArray) ToGetAppAccelerationsFilterArrayOutputWithContext(ctx context.Context) GetAppAccelerationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationsFilterArrayOutput)
}

type GetAppAccelerationsFilterOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationsFilter)(nil)).Elem()
}

func (o GetAppAccelerationsFilterOutput) ToGetAppAccelerationsFilterOutput() GetAppAccelerationsFilterOutput {
	return o
}

func (o GetAppAccelerationsFilterOutput) ToGetAppAccelerationsFilterOutputWithContext(ctx context.Context) GetAppAccelerationsFilterOutput {
	return o
}

func (o GetAppAccelerationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppAccelerationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppAccelerationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetAppAccelerationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAppAccelerationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationsFilter)(nil)).Elem()
}

func (o GetAppAccelerationsFilterArrayOutput) ToGetAppAccelerationsFilterArrayOutput() GetAppAccelerationsFilterArrayOutput {
	return o
}

func (o GetAppAccelerationsFilterArrayOutput) ToGetAppAccelerationsFilterArrayOutputWithContext(ctx context.Context) GetAppAccelerationsFilterArrayOutput {
	return o
}

func (o GetAppAccelerationsFilterArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationsFilter {
		return vs[0].([]GetAppAccelerationsFilter)[vs[1].(int)]
	}).(GetAppAccelerationsFilterOutput)
}

type GetAppAccelerationsWebAppAccelerationCollection struct {
	Items []GetAppAccelerationsWebAppAccelerationCollectionItem `pulumi:"items"`
}

// GetAppAccelerationsWebAppAccelerationCollectionInput is an input type that accepts GetAppAccelerationsWebAppAccelerationCollectionArgs and GetAppAccelerationsWebAppAccelerationCollectionOutput values.
// You can construct a concrete instance of `GetAppAccelerationsWebAppAccelerationCollectionInput` via:
//
//	GetAppAccelerationsWebAppAccelerationCollectionArgs{...}
type GetAppAccelerationsWebAppAccelerationCollectionInput interface {
	pulumi.Input

	ToGetAppAccelerationsWebAppAccelerationCollectionOutput() GetAppAccelerationsWebAppAccelerationCollectionOutput
	ToGetAppAccelerationsWebAppAccelerationCollectionOutputWithContext(context.Context) GetAppAccelerationsWebAppAccelerationCollectionOutput
}

type GetAppAccelerationsWebAppAccelerationCollectionArgs struct {
	Items GetAppAccelerationsWebAppAccelerationCollectionItemArrayInput `pulumi:"items"`
}

func (GetAppAccelerationsWebAppAccelerationCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollection)(nil)).Elem()
}

func (i GetAppAccelerationsWebAppAccelerationCollectionArgs) ToGetAppAccelerationsWebAppAccelerationCollectionOutput() GetAppAccelerationsWebAppAccelerationCollectionOutput {
	return i.ToGetAppAccelerationsWebAppAccelerationCollectionOutputWithContext(context.Background())
}

func (i GetAppAccelerationsWebAppAccelerationCollectionArgs) ToGetAppAccelerationsWebAppAccelerationCollectionOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationsWebAppAccelerationCollectionOutput)
}

// GetAppAccelerationsWebAppAccelerationCollectionArrayInput is an input type that accepts GetAppAccelerationsWebAppAccelerationCollectionArray and GetAppAccelerationsWebAppAccelerationCollectionArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationsWebAppAccelerationCollectionArrayInput` via:
//
//	GetAppAccelerationsWebAppAccelerationCollectionArray{ GetAppAccelerationsWebAppAccelerationCollectionArgs{...} }
type GetAppAccelerationsWebAppAccelerationCollectionArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationsWebAppAccelerationCollectionArrayOutput() GetAppAccelerationsWebAppAccelerationCollectionArrayOutput
	ToGetAppAccelerationsWebAppAccelerationCollectionArrayOutputWithContext(context.Context) GetAppAccelerationsWebAppAccelerationCollectionArrayOutput
}

type GetAppAccelerationsWebAppAccelerationCollectionArray []GetAppAccelerationsWebAppAccelerationCollectionInput

func (GetAppAccelerationsWebAppAccelerationCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationsWebAppAccelerationCollection)(nil)).Elem()
}

func (i GetAppAccelerationsWebAppAccelerationCollectionArray) ToGetAppAccelerationsWebAppAccelerationCollectionArrayOutput() GetAppAccelerationsWebAppAccelerationCollectionArrayOutput {
	return i.ToGetAppAccelerationsWebAppAccelerationCollectionArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationsWebAppAccelerationCollectionArray) ToGetAppAccelerationsWebAppAccelerationCollectionArrayOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationsWebAppAccelerationCollectionArrayOutput)
}

type GetAppAccelerationsWebAppAccelerationCollectionOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationsWebAppAccelerationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollection)(nil)).Elem()
}

func (o GetAppAccelerationsWebAppAccelerationCollectionOutput) ToGetAppAccelerationsWebAppAccelerationCollectionOutput() GetAppAccelerationsWebAppAccelerationCollectionOutput {
	return o
}

func (o GetAppAccelerationsWebAppAccelerationCollectionOutput) ToGetAppAccelerationsWebAppAccelerationCollectionOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionOutput {
	return o
}

func (o GetAppAccelerationsWebAppAccelerationCollectionOutput) Items() GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollection) []GetAppAccelerationsWebAppAccelerationCollectionItem {
		return v.Items
	}).(GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput)
}

type GetAppAccelerationsWebAppAccelerationCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationsWebAppAccelerationCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationsWebAppAccelerationCollection)(nil)).Elem()
}

func (o GetAppAccelerationsWebAppAccelerationCollectionArrayOutput) ToGetAppAccelerationsWebAppAccelerationCollectionArrayOutput() GetAppAccelerationsWebAppAccelerationCollectionArrayOutput {
	return o
}

func (o GetAppAccelerationsWebAppAccelerationCollectionArrayOutput) ToGetAppAccelerationsWebAppAccelerationCollectionArrayOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionArrayOutput {
	return o
}

func (o GetAppAccelerationsWebAppAccelerationCollectionArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationsWebAppAccelerationCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationsWebAppAccelerationCollection {
		return vs[0].([]GetAppAccelerationsWebAppAccelerationCollection)[vs[1].(int)]
	}).(GetAppAccelerationsWebAppAccelerationCollectionOutput)
}

type GetAppAccelerationsWebAppAccelerationCollectionItem struct {
	// Type of the WebAppFirewall, as example LOAD_BALANCER.
	BackendType string `pulumi:"backendType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// LoadBalancer [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to which the WebAppAccelerationPolicy is attached to.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// A filter to return only resources that match the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the WebAppAcceleration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the WebAppAcceleration was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of related WebAppAccelerationPolicy.
	WebAppAccelerationPolicyId string `pulumi:"webAppAccelerationPolicyId"`
}

// GetAppAccelerationsWebAppAccelerationCollectionItemInput is an input type that accepts GetAppAccelerationsWebAppAccelerationCollectionItemArgs and GetAppAccelerationsWebAppAccelerationCollectionItemOutput values.
// You can construct a concrete instance of `GetAppAccelerationsWebAppAccelerationCollectionItemInput` via:
//
//	GetAppAccelerationsWebAppAccelerationCollectionItemArgs{...}
type GetAppAccelerationsWebAppAccelerationCollectionItemInput interface {
	pulumi.Input

	ToGetAppAccelerationsWebAppAccelerationCollectionItemOutput() GetAppAccelerationsWebAppAccelerationCollectionItemOutput
	ToGetAppAccelerationsWebAppAccelerationCollectionItemOutputWithContext(context.Context) GetAppAccelerationsWebAppAccelerationCollectionItemOutput
}

type GetAppAccelerationsWebAppAccelerationCollectionItemArgs struct {
	// Type of the WebAppFirewall, as example LOAD_BALANCER.
	BackendType pulumi.StringInput `pulumi:"backendType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// LoadBalancer [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to which the WebAppAccelerationPolicy is attached to.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// A filter to return only resources that match the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the WebAppAcceleration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the WebAppAcceleration was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of related WebAppAccelerationPolicy.
	WebAppAccelerationPolicyId pulumi.StringInput `pulumi:"webAppAccelerationPolicyId"`
}

func (GetAppAccelerationsWebAppAccelerationCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollectionItem)(nil)).Elem()
}

func (i GetAppAccelerationsWebAppAccelerationCollectionItemArgs) ToGetAppAccelerationsWebAppAccelerationCollectionItemOutput() GetAppAccelerationsWebAppAccelerationCollectionItemOutput {
	return i.ToGetAppAccelerationsWebAppAccelerationCollectionItemOutputWithContext(context.Background())
}

func (i GetAppAccelerationsWebAppAccelerationCollectionItemArgs) ToGetAppAccelerationsWebAppAccelerationCollectionItemOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationsWebAppAccelerationCollectionItemOutput)
}

// GetAppAccelerationsWebAppAccelerationCollectionItemArrayInput is an input type that accepts GetAppAccelerationsWebAppAccelerationCollectionItemArray and GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetAppAccelerationsWebAppAccelerationCollectionItemArrayInput` via:
//
//	GetAppAccelerationsWebAppAccelerationCollectionItemArray{ GetAppAccelerationsWebAppAccelerationCollectionItemArgs{...} }
type GetAppAccelerationsWebAppAccelerationCollectionItemArrayInput interface {
	pulumi.Input

	ToGetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput() GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput
	ToGetAppAccelerationsWebAppAccelerationCollectionItemArrayOutputWithContext(context.Context) GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput
}

type GetAppAccelerationsWebAppAccelerationCollectionItemArray []GetAppAccelerationsWebAppAccelerationCollectionItemInput

func (GetAppAccelerationsWebAppAccelerationCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationsWebAppAccelerationCollectionItem)(nil)).Elem()
}

func (i GetAppAccelerationsWebAppAccelerationCollectionItemArray) ToGetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput() GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput {
	return i.ToGetAppAccelerationsWebAppAccelerationCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetAppAccelerationsWebAppAccelerationCollectionItemArray) ToGetAppAccelerationsWebAppAccelerationCollectionItemArrayOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput)
}

type GetAppAccelerationsWebAppAccelerationCollectionItemOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationsWebAppAccelerationCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollectionItem)(nil)).Elem()
}

func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) ToGetAppAccelerationsWebAppAccelerationCollectionItemOutput() GetAppAccelerationsWebAppAccelerationCollectionItemOutput {
	return o
}

func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) ToGetAppAccelerationsWebAppAccelerationCollectionItemOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionItemOutput {
	return o
}

// Type of the WebAppFirewall, as example LOAD_BALANCER.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) BackendType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.BackendType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in FAILED state.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// LoadBalancer [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to which the WebAppAccelerationPolicy is attached to.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// A filter to return only resources that match the given lifecycleState.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The time the WebAppAcceleration was created. An RFC3339 formatted datetime string.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the WebAppAcceleration was updated. An RFC3339 formatted datetime string.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// A filter to return only the WebAppAcceleration with the given [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of related WebAppAccelerationPolicy.
func (o GetAppAccelerationsWebAppAccelerationCollectionItemOutput) WebAppAccelerationPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppAccelerationsWebAppAccelerationCollectionItem) string {
		return v.WebAppAccelerationPolicyId
	}).(pulumi.StringOutput)
}

type GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppAccelerationsWebAppAccelerationCollectionItem)(nil)).Elem()
}

func (o GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput) ToGetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput() GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput {
	return o
}

func (o GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput) ToGetAppAccelerationsWebAppAccelerationCollectionItemArrayOutputWithContext(ctx context.Context) GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput {
	return o
}

func (o GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput) Index(i pulumi.IntInput) GetAppAccelerationsWebAppAccelerationCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppAccelerationsWebAppAccelerationCollectionItem {
		return vs[0].([]GetAppAccelerationsWebAppAccelerationCollectionItem)[vs[1].(int)]
	}).(GetAppAccelerationsWebAppAccelerationCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppAccelerationPolicyResponseCachingPolicyInput)(nil)).Elem(), AppAccelerationPolicyResponseCachingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAccelerationPolicyResponseCachingPolicyPtrInput)(nil)).Elem(), AppAccelerationPolicyResponseCachingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicyInput)(nil)).Elem(), AppAccelerationPolicyResponseCompressionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicyPtrInput)(nil)).Elem(), AppAccelerationPolicyResponseCompressionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput)(nil)).Elem(), AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrInput)(nil)).Elem(), AppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesFilterInput)(nil)).Elem(), GetAppAccelerationPoliciesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesFilterArrayInput)(nil)).Elem(), GetAppAccelerationPoliciesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayInput)(nil)).Elem(), GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPolicyResponseCachingPolicyInput)(nil)).Elem(), GetAppAccelerationPolicyResponseCachingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPolicyResponseCachingPolicyArrayInput)(nil)).Elem(), GetAppAccelerationPolicyResponseCachingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicyInput)(nil)).Elem(), GetAppAccelerationPolicyResponseCompressionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicyArrayInput)(nil)).Elem(), GetAppAccelerationPolicyResponseCompressionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionInput)(nil)).Elem(), GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayInput)(nil)).Elem(), GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationsFilterInput)(nil)).Elem(), GetAppAccelerationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationsFilterArrayInput)(nil)).Elem(), GetAppAccelerationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollectionInput)(nil)).Elem(), GetAppAccelerationsWebAppAccelerationCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollectionArrayInput)(nil)).Elem(), GetAppAccelerationsWebAppAccelerationCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollectionItemInput)(nil)).Elem(), GetAppAccelerationsWebAppAccelerationCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppAccelerationsWebAppAccelerationCollectionItemArrayInput)(nil)).Elem(), GetAppAccelerationsWebAppAccelerationCollectionItemArray{})
	pulumi.RegisterOutputType(AppAccelerationPolicyResponseCachingPolicyOutput{})
	pulumi.RegisterOutputType(AppAccelerationPolicyResponseCachingPolicyPtrOutput{})
	pulumi.RegisterOutputType(AppAccelerationPolicyResponseCompressionPolicyOutput{})
	pulumi.RegisterOutputType(AppAccelerationPolicyResponseCompressionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput{})
	pulumi.RegisterOutputType(AppAccelerationPolicyResponseCompressionPolicyGzipCompressionPtrOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesFilterOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCachingPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPoliciesWebAppAccelerationPolicyCollectionItemResponseCompressionPolicyGzipCompressionArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPolicyResponseCachingPolicyOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPolicyResponseCachingPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPolicyResponseCompressionPolicyOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPolicyResponseCompressionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationPolicyResponseCompressionPolicyGzipCompressionArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationsFilterOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationsWebAppAccelerationCollectionOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationsWebAppAccelerationCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationsWebAppAccelerationCollectionItemOutput{})
	pulumi.RegisterOutputType(GetAppAccelerationsWebAppAccelerationCollectionItemArrayOutput{})
}
