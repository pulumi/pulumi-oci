// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Edge Subnets in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
//
// Return the list of the tenant's edge node subnets. Use these CIDR blocks to restrict incoming traffic to your origin. These subnets are owned by Oracle Cloud Infrastructure and forward traffic to customer origins. They are not associated with specific regions or compartments.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Waas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waas.GetEdgeSubnets(ctx, &waas.GetEdgeSubnetsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEdgeSubnets(ctx *pulumi.Context, args *GetEdgeSubnetsArgs, opts ...pulumi.InvokeOption) (*GetEdgeSubnetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEdgeSubnetsResult
	err := ctx.Invoke("oci:Waas/getEdgeSubnets:getEdgeSubnets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEdgeSubnets.
type GetEdgeSubnetsArgs struct {
	Filters []GetEdgeSubnetsFilter `pulumi:"filters"`
}

// A collection of values returned by getEdgeSubnets.
type GetEdgeSubnetsResult struct {
	// The list of edge_subnets.
	EdgeSubnets []GetEdgeSubnetsEdgeSubnet `pulumi:"edgeSubnets"`
	Filters     []GetEdgeSubnetsFilter     `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetEdgeSubnetsOutput(ctx *pulumi.Context, args GetEdgeSubnetsOutputArgs, opts ...pulumi.InvokeOption) GetEdgeSubnetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEdgeSubnetsResultOutput, error) {
			args := v.(GetEdgeSubnetsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetEdgeSubnetsResult
			secret, err := ctx.InvokePackageRaw("oci:Waas/getEdgeSubnets:getEdgeSubnets", args, &rv, "", opts...)
			if err != nil {
				return GetEdgeSubnetsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetEdgeSubnetsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetEdgeSubnetsResultOutput), nil
			}
			return output, nil
		}).(GetEdgeSubnetsResultOutput)
}

// A collection of arguments for invoking getEdgeSubnets.
type GetEdgeSubnetsOutputArgs struct {
	Filters GetEdgeSubnetsFilterArrayInput `pulumi:"filters"`
}

func (GetEdgeSubnetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgeSubnetsArgs)(nil)).Elem()
}

// A collection of values returned by getEdgeSubnets.
type GetEdgeSubnetsResultOutput struct{ *pulumi.OutputState }

func (GetEdgeSubnetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgeSubnetsResult)(nil)).Elem()
}

func (o GetEdgeSubnetsResultOutput) ToGetEdgeSubnetsResultOutput() GetEdgeSubnetsResultOutput {
	return o
}

func (o GetEdgeSubnetsResultOutput) ToGetEdgeSubnetsResultOutputWithContext(ctx context.Context) GetEdgeSubnetsResultOutput {
	return o
}

// The list of edge_subnets.
func (o GetEdgeSubnetsResultOutput) EdgeSubnets() GetEdgeSubnetsEdgeSubnetArrayOutput {
	return o.ApplyT(func(v GetEdgeSubnetsResult) []GetEdgeSubnetsEdgeSubnet { return v.EdgeSubnets }).(GetEdgeSubnetsEdgeSubnetArrayOutput)
}

func (o GetEdgeSubnetsResultOutput) Filters() GetEdgeSubnetsFilterArrayOutput {
	return o.ApplyT(func(v GetEdgeSubnetsResult) []GetEdgeSubnetsFilter { return v.Filters }).(GetEdgeSubnetsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEdgeSubnetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeSubnetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEdgeSubnetsResultOutput{})
}
