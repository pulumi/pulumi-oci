// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Protection Rule resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
//
// Gets the details of a protection rule in the Web Application Firewall configuration for a WAAS policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Waas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Waas.GetProtectionRule(ctx, &waas.GetProtectionRuleArgs{
//				ProtectionRuleKey: protectionRuleProtectionRuleKey,
//				WaasPolicyId:      testWaasPolicy.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProtectionRule(ctx *pulumi.Context, args *LookupProtectionRuleArgs, opts ...pulumi.InvokeOption) (*LookupProtectionRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProtectionRuleResult
	err := ctx.Invoke("oci:Waas/getProtectionRule:getProtectionRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProtectionRule.
type LookupProtectionRuleArgs struct {
	// The protection rule key.
	ProtectionRuleKey string `pulumi:"protectionRuleKey"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
	WaasPolicyId string `pulumi:"waasPolicyId"`
}

// A collection of values returned by getProtectionRule.
type LookupProtectionRuleResult struct {
	// The action to take when the traffic is detected as malicious. If unspecified, defaults to `OFF`.
	Action string `pulumi:"action"`
	// The description of the protection rule.
	Description string `pulumi:"description"`
	// An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
	Exclusions []GetProtectionRuleExclusion `pulumi:"exclusions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The unique key of the protection rule.
	Key string `pulumi:"key"`
	// The list of labels for the protection rule.
	Labels []string `pulumi:"labels"`
	// The list of the ModSecurity rule IDs that apply to this protection rule. For more information about ModSecurity's open source WAF rules, see [Mod Security's documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
	ModSecurityRuleIds []string `pulumi:"modSecurityRuleIds"`
	// The name of the protection rule.
	Name              string `pulumi:"name"`
	ProtectionRuleKey string `pulumi:"protectionRuleKey"`
	WaasPolicyId      string `pulumi:"waasPolicyId"`
}

func LookupProtectionRuleOutput(ctx *pulumi.Context, args LookupProtectionRuleOutputArgs, opts ...pulumi.InvokeOption) LookupProtectionRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProtectionRuleResult, error) {
			args := v.(LookupProtectionRuleArgs)
			r, err := LookupProtectionRule(ctx, &args, opts...)
			var s LookupProtectionRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProtectionRuleResultOutput)
}

// A collection of arguments for invoking getProtectionRule.
type LookupProtectionRuleOutputArgs struct {
	// The protection rule key.
	ProtectionRuleKey pulumi.StringInput `pulumi:"protectionRuleKey"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WAAS policy.
	WaasPolicyId pulumi.StringInput `pulumi:"waasPolicyId"`
}

func (LookupProtectionRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProtectionRuleArgs)(nil)).Elem()
}

// A collection of values returned by getProtectionRule.
type LookupProtectionRuleResultOutput struct{ *pulumi.OutputState }

func (LookupProtectionRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProtectionRuleResult)(nil)).Elem()
}

func (o LookupProtectionRuleResultOutput) ToLookupProtectionRuleResultOutput() LookupProtectionRuleResultOutput {
	return o
}

func (o LookupProtectionRuleResultOutput) ToLookupProtectionRuleResultOutputWithContext(ctx context.Context) LookupProtectionRuleResultOutput {
	return o
}

// The action to take when the traffic is detected as malicious. If unspecified, defaults to `OFF`.
func (o LookupProtectionRuleResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) string { return v.Action }).(pulumi.StringOutput)
}

// The description of the protection rule.
func (o LookupProtectionRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
func (o LookupProtectionRuleResultOutput) Exclusions() GetProtectionRuleExclusionArrayOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) []GetProtectionRuleExclusion { return v.Exclusions }).(GetProtectionRuleExclusionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupProtectionRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique key of the protection rule.
func (o LookupProtectionRuleResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) string { return v.Key }).(pulumi.StringOutput)
}

// The list of labels for the protection rule.
func (o LookupProtectionRuleResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The list of the ModSecurity rule IDs that apply to this protection rule. For more information about ModSecurity's open source WAF rules, see [Mod Security's documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
func (o LookupProtectionRuleResultOutput) ModSecurityRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) []string { return v.ModSecurityRuleIds }).(pulumi.StringArrayOutput)
}

// The name of the protection rule.
func (o LookupProtectionRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupProtectionRuleResultOutput) ProtectionRuleKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) string { return v.ProtectionRuleKey }).(pulumi.StringOutput)
}

func (o LookupProtectionRuleResultOutput) WaasPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProtectionRuleResult) string { return v.WaasPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProtectionRuleResultOutput{})
}
