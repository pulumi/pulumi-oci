// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waas

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Waas Policy resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
//
// Creates a new Web Application Acceleration and Security (WAAS) policy in the specified compartment. A WAAS policy must be established before creating Web Application Firewall (WAF) rules. To use WAF rules, your web application's origin servers must defined in the `WaasPolicy` schema.
//
// A domain name must be specified when creating a WAAS policy. The domain name should be different from the origins specified in your `WaasPolicy`. Once domain name is entered and stored, it is unchangeable.
//
// Use the record data returned in the `cname` field of the `WaasPolicy` object to create a CNAME record in your DNS configuration that will direct your domain's traffic through the WAF.
//
// For the purposes of access control, you must provide the OCID of the compartment where you want the service to reside. For information about access control and compartments, see [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
//
// You must specify a display name and domain for the WAAS policy. The display name does not have to be unique and can be changed. The domain name should be different from every origin specified in `WaasPolicy`.
//
// All Oracle Cloud Infrastructure resources, including WAAS policies, receive a unique, Oracle-assigned ID called an Oracle Cloud Identifier (OCID). When a resource is created, you can find its OCID in the response. You can also retrieve a resource's OCID by using a list API operation for that resource type, or by viewing the resource in the Console. Fore more information, see [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// **Note:** After sending the POST request, the new object's state will temporarily be `CREATING`. Ensure that the resource's state has changed to `ACTIVE` before use.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/waas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := waas.NewPolicy(ctx, "test_waas_policy", &waas.PolicyArgs{
//				CompartmentId:     pulumi.Any(compartmentId),
//				Domain:            pulumi.Any(waasPolicyDomain),
//				AdditionalDomains: pulumi.Any(waasPolicyAdditionalDomains),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				DisplayName: pulumi.Any(waasPolicyDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				OriginGroups: waas.PolicyOriginGroupArray{
//					&waas.PolicyOriginGroupArgs{
//						Origins: waasPolicyOriginGroupsOrigins,
//					},
//				},
//				Origins: waas.PolicyOriginArray{
//					&waas.PolicyOriginArgs{
//						Uri: pulumi.Any(waasPolicyOriginsUri),
//						CustomHeaders: waas.PolicyOriginCustomHeaderArray{
//							&waas.PolicyOriginCustomHeaderArgs{
//								Name:  pulumi.Any(waasPolicyOriginsCustomHeadersName),
//								Value: pulumi.Any(waasPolicyOriginsCustomHeadersValue),
//							},
//						},
//						HttpPort:  pulumi.Any(waasPolicyOriginsHttpPort),
//						HttpsPort: pulumi.Any(waasPolicyOriginsHttpsPort),
//					},
//				},
//				PolicyConfig: &waas.PolicyPolicyConfigArgs{
//					CertificateId:       pulumi.Any(testCertificate.Id),
//					CipherGroup:         pulumi.Any(waasPolicyPolicyConfigCipherGroup),
//					ClientAddressHeader: pulumi.Any(waasPolicyPolicyConfigClientAddressHeader),
//					HealthChecks: &waas.PolicyPolicyConfigHealthChecksArgs{
//						ExpectedResponseCodeGroups: pulumi.Any(waasPolicyPolicyConfigHealthChecksExpectedResponseCodeGroup),
//						ExpectedResponseText:       pulumi.Any(waasPolicyPolicyConfigHealthChecksExpectedResponseText),
//						Headers:                    pulumi.Any(waasPolicyPolicyConfigHealthChecksHeaders),
//						HealthyThreshold:           pulumi.Any(waasPolicyPolicyConfigHealthChecksHealthyThreshold),
//						IntervalInSeconds:          pulumi.Any(waasPolicyPolicyConfigHealthChecksIntervalInSeconds),
//						IsEnabled:                  pulumi.Any(waasPolicyPolicyConfigHealthChecksIsEnabled),
//						IsResponseTextCheckEnabled: pulumi.Any(waasPolicyPolicyConfigHealthChecksIsResponseTextCheckEnabled),
//						Method:                     pulumi.Any(waasPolicyPolicyConfigHealthChecksMethod),
//						Path:                       pulumi.Any(waasPolicyPolicyConfigHealthChecksPath),
//						TimeoutInSeconds:           pulumi.Any(waasPolicyPolicyConfigHealthChecksTimeoutInSeconds),
//						UnhealthyThreshold:         pulumi.Any(waasPolicyPolicyConfigHealthChecksUnhealthyThreshold),
//					},
//					IsBehindCdn:                pulumi.Any(waasPolicyPolicyConfigIsBehindCdn),
//					IsCacheControlRespected:    pulumi.Any(waasPolicyPolicyConfigIsCacheControlRespected),
//					IsHttpsEnabled:             pulumi.Any(waasPolicyPolicyConfigIsHttpsEnabled),
//					IsHttpsForced:              pulumi.Any(waasPolicyPolicyConfigIsHttpsForced),
//					IsOriginCompressionEnabled: pulumi.Any(waasPolicyPolicyConfigIsOriginCompressionEnabled),
//					IsResponseBufferingEnabled: pulumi.Any(waasPolicyPolicyConfigIsResponseBufferingEnabled),
//					IsSniEnabled:               pulumi.Any(waasPolicyPolicyConfigIsSniEnabled),
//					LoadBalancingMethod: &waas.PolicyPolicyConfigLoadBalancingMethodArgs{
//						Method:                  pulumi.Any(waasPolicyPolicyConfigLoadBalancingMethodMethod),
//						Domain:                  pulumi.Any(waasPolicyPolicyConfigLoadBalancingMethodDomain),
//						ExpirationTimeInSeconds: pulumi.Any(waasPolicyPolicyConfigLoadBalancingMethodExpirationTimeInSeconds),
//						Name:                    pulumi.Any(waasPolicyPolicyConfigLoadBalancingMethodName),
//					},
//					TlsProtocols:          pulumi.Any(waasPolicyPolicyConfigTlsProtocols),
//					WebsocketPathPrefixes: pulumi.Any(waasPolicyPolicyConfigWebsocketPathPrefixes),
//				},
//				WafConfig: &waas.PolicyWafConfigArgs{
//					AccessRules: waas.PolicyWafConfigAccessRuleArray{
//						&waas.PolicyWafConfigAccessRuleArgs{
//							Action: pulumi.Any(waasPolicyWafConfigAccessRulesAction),
//							Criterias: waas.PolicyWafConfigAccessRuleCriteriaArray{
//								&waas.PolicyWafConfigAccessRuleCriteriaArgs{
//									Condition:       pulumi.Any(waasPolicyWafConfigAccessRulesCriteriaCondition),
//									Value:           pulumi.Any(waasPolicyWafConfigAccessRulesCriteriaValue),
//									IsCaseSensitive: pulumi.Any(waasPolicyWafConfigAccessRulesCriteriaIsCaseSensitive),
//								},
//							},
//							Name:                      pulumi.Any(waasPolicyWafConfigAccessRulesName),
//							BlockAction:               pulumi.Any(waasPolicyWafConfigAccessRulesBlockAction),
//							BlockErrorPageCode:        pulumi.Any(waasPolicyWafConfigAccessRulesBlockErrorPageCode),
//							BlockErrorPageDescription: pulumi.Any(waasPolicyWafConfigAccessRulesBlockErrorPageDescription),
//							BlockErrorPageMessage:     pulumi.Any(waasPolicyWafConfigAccessRulesBlockErrorPageMessage),
//							BlockResponseCode:         pulumi.Any(waasPolicyWafConfigAccessRulesBlockResponseCode),
//							BypassChallenges:          pulumi.Any(waasPolicyWafConfigAccessRulesBypassChallenges),
//							CaptchaFooter:             pulumi.Any(waasPolicyWafConfigAccessRulesCaptchaFooter),
//							CaptchaHeader:             pulumi.Any(waasPolicyWafConfigAccessRulesCaptchaHeader),
//							CaptchaSubmitLabel:        pulumi.Any(waasPolicyWafConfigAccessRulesCaptchaSubmitLabel),
//							CaptchaTitle:              pulumi.Any(waasPolicyWafConfigAccessRulesCaptchaTitle),
//							RedirectResponseCode:      pulumi.Any(waasPolicyWafConfigAccessRulesRedirectResponseCode),
//							RedirectUrl:               pulumi.Any(waasPolicyWafConfigAccessRulesRedirectUrl),
//							ResponseHeaderManipulations: waas.PolicyWafConfigAccessRuleResponseHeaderManipulationArray{
//								&waas.PolicyWafConfigAccessRuleResponseHeaderManipulationArgs{
//									Action: pulumi.Any(waasPolicyWafConfigAccessRulesResponseHeaderManipulationAction),
//									Header: pulumi.Any(waasPolicyWafConfigAccessRulesResponseHeaderManipulationHeader),
//									Value:  pulumi.Any(waasPolicyWafConfigAccessRulesResponseHeaderManipulationValue),
//								},
//							},
//						},
//					},
//					AddressRateLimiting: &waas.PolicyWafConfigAddressRateLimitingArgs{
//						IsEnabled:                 pulumi.Any(waasPolicyWafConfigAddressRateLimitingIsEnabled),
//						AllowedRatePerAddress:     pulumi.Any(waasPolicyWafConfigAddressRateLimitingAllowedRatePerAddress),
//						BlockResponseCode:         pulumi.Any(waasPolicyWafConfigAddressRateLimitingBlockResponseCode),
//						MaxDelayedCountPerAddress: pulumi.Any(waasPolicyWafConfigAddressRateLimitingMaxDelayedCountPerAddress),
//					},
//					CachingRules: waas.PolicyWafConfigCachingRuleArray{
//						&waas.PolicyWafConfigCachingRuleArgs{
//							Action: pulumi.Any(waasPolicyWafConfigCachingRulesAction),
//							Criterias: waas.PolicyWafConfigCachingRuleCriteriaArray{
//								&waas.PolicyWafConfigCachingRuleCriteriaArgs{
//									Condition: pulumi.Any(waasPolicyWafConfigCachingRulesCriteriaCondition),
//									Value:     pulumi.Any(waasPolicyWafConfigCachingRulesCriteriaValue),
//								},
//							},
//							Name:                   pulumi.Any(waasPolicyWafConfigCachingRulesName),
//							CachingDuration:        pulumi.Any(waasPolicyWafConfigCachingRulesCachingDuration),
//							ClientCachingDuration:  pulumi.Any(waasPolicyWafConfigCachingRulesClientCachingDuration),
//							IsClientCachingEnabled: pulumi.Any(waasPolicyWafConfigCachingRulesIsClientCachingEnabled),
//							Key:                    pulumi.Any(waasPolicyWafConfigCachingRulesKey),
//						},
//					},
//					Captchas: waas.PolicyWafConfigCaptchaArray{
//						&waas.PolicyWafConfigCaptchaArgs{
//							FailureMessage:             pulumi.Any(waasPolicyWafConfigCaptchasFailureMessage),
//							SessionExpirationInSeconds: pulumi.Any(waasPolicyWafConfigCaptchasSessionExpirationInSeconds),
//							SubmitLabel:                pulumi.Any(waasPolicyWafConfigCaptchasSubmitLabel),
//							Title:                      pulumi.Any(waasPolicyWafConfigCaptchasTitle),
//							Url:                        pulumi.Any(waasPolicyWafConfigCaptchasUrl),
//							FooterText:                 pulumi.Any(waasPolicyWafConfigCaptchasFooterText),
//							HeaderText:                 pulumi.Any(waasPolicyWafConfigCaptchasHeaderText),
//						},
//					},
//					CustomProtectionRules: waas.PolicyWafConfigCustomProtectionRuleArray{
//						&waas.PolicyWafConfigCustomProtectionRuleArgs{
//							Action: pulumi.Any(waasPolicyWafConfigCustomProtectionRulesAction),
//							Exclusions: waas.PolicyWafConfigCustomProtectionRuleExclusionArray{
//								&waas.PolicyWafConfigCustomProtectionRuleExclusionArgs{
//									Exclusions: pulumi.Any(waasPolicyWafConfigCustomProtectionRulesExclusionsExclusions),
//									Target:     pulumi.Any(waasPolicyWafConfigCustomProtectionRulesExclusionsTarget),
//								},
//							},
//							Id: pulumi.Any(waasPolicyWafConfigCustomProtectionRulesId),
//						},
//					},
//					DeviceFingerprintChallenge: &waas.PolicyWafConfigDeviceFingerprintChallengeArgs{
//						IsEnabled:                 pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeIsEnabled),
//						Action:                    pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeAction),
//						ActionExpirationInSeconds: pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeActionExpirationInSeconds),
//						ChallengeSettings: &waas.PolicyWafConfigDeviceFingerprintChallengeChallengeSettingsArgs{
//							BlockAction:               pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsBlockAction),
//							BlockErrorPageCode:        pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsBlockErrorPageCode),
//							BlockErrorPageDescription: pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsBlockErrorPageDescription),
//							BlockErrorPageMessage:     pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsBlockErrorPageMessage),
//							BlockResponseCode:         pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsBlockResponseCode),
//							CaptchaFooter:             pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsCaptchaFooter),
//							CaptchaHeader:             pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsCaptchaHeader),
//							CaptchaSubmitLabel:        pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsCaptchaSubmitLabel),
//							CaptchaTitle:              pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeChallengeSettingsCaptchaTitle),
//						},
//						FailureThreshold:                    pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeFailureThreshold),
//						FailureThresholdExpirationInSeconds: pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeFailureThresholdExpirationInSeconds),
//						MaxAddressCount:                     pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeMaxAddressCount),
//						MaxAddressCountExpirationInSeconds:  pulumi.Any(waasPolicyWafConfigDeviceFingerprintChallengeMaxAddressCountExpirationInSeconds),
//					},
//					HumanInteractionChallenge: &waas.PolicyWafConfigHumanInteractionChallengeArgs{
//						IsEnabled:                 pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeIsEnabled),
//						Action:                    pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeAction),
//						ActionExpirationInSeconds: pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeActionExpirationInSeconds),
//						ChallengeSettings: &waas.PolicyWafConfigHumanInteractionChallengeChallengeSettingsArgs{
//							BlockAction:               pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsBlockAction),
//							BlockErrorPageCode:        pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsBlockErrorPageCode),
//							BlockErrorPageDescription: pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsBlockErrorPageDescription),
//							BlockErrorPageMessage:     pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsBlockErrorPageMessage),
//							BlockResponseCode:         pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsBlockResponseCode),
//							CaptchaFooter:             pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsCaptchaFooter),
//							CaptchaHeader:             pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsCaptchaHeader),
//							CaptchaSubmitLabel:        pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsCaptchaSubmitLabel),
//							CaptchaTitle:              pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeChallengeSettingsCaptchaTitle),
//						},
//						FailureThreshold:                    pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeFailureThreshold),
//						FailureThresholdExpirationInSeconds: pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeFailureThresholdExpirationInSeconds),
//						InteractionThreshold:                pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeInteractionThreshold),
//						IsNatEnabled:                        pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeIsNatEnabled),
//						RecordingPeriodInSeconds:            pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeRecordingPeriodInSeconds),
//						SetHttpHeader: &waas.PolicyWafConfigHumanInteractionChallengeSetHttpHeaderArgs{
//							Name:  pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeSetHttpHeaderName),
//							Value: pulumi.Any(waasPolicyWafConfigHumanInteractionChallengeSetHttpHeaderValue),
//						},
//					},
//					JsChallenge: &waas.PolicyWafConfigJsChallengeArgs{
//						IsEnabled:                 pulumi.Any(waasPolicyWafConfigJsChallengeIsEnabled),
//						Action:                    pulumi.Any(waasPolicyWafConfigJsChallengeAction),
//						ActionExpirationInSeconds: pulumi.Any(waasPolicyWafConfigJsChallengeActionExpirationInSeconds),
//						AreRedirectsChallenged:    pulumi.Any(waasPolicyWafConfigJsChallengeAreRedirectsChallenged),
//						ChallengeSettings: &waas.PolicyWafConfigJsChallengeChallengeSettingsArgs{
//							BlockAction:               pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsBlockAction),
//							BlockErrorPageCode:        pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsBlockErrorPageCode),
//							BlockErrorPageDescription: pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsBlockErrorPageDescription),
//							BlockErrorPageMessage:     pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsBlockErrorPageMessage),
//							BlockResponseCode:         pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsBlockResponseCode),
//							CaptchaFooter:             pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsCaptchaFooter),
//							CaptchaHeader:             pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsCaptchaHeader),
//							CaptchaSubmitLabel:        pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsCaptchaSubmitLabel),
//							CaptchaTitle:              pulumi.Any(waasPolicyWafConfigJsChallengeChallengeSettingsCaptchaTitle),
//						},
//						Criterias: waas.PolicyWafConfigJsChallengeCriteriaArray{
//							&waas.PolicyWafConfigJsChallengeCriteriaArgs{
//								Condition:       pulumi.Any(waasPolicyWafConfigJsChallengeCriteriaCondition),
//								Value:           pulumi.Any(waasPolicyWafConfigJsChallengeCriteriaValue),
//								IsCaseSensitive: pulumi.Any(waasPolicyWafConfigJsChallengeCriteriaIsCaseSensitive),
//							},
//						},
//						FailureThreshold: pulumi.Any(waasPolicyWafConfigJsChallengeFailureThreshold),
//						IsNatEnabled:     pulumi.Any(waasPolicyWafConfigJsChallengeIsNatEnabled),
//						SetHttpHeader: &waas.PolicyWafConfigJsChallengeSetHttpHeaderArgs{
//							Name:  pulumi.Any(waasPolicyWafConfigJsChallengeSetHttpHeaderName),
//							Value: pulumi.Any(waasPolicyWafConfigJsChallengeSetHttpHeaderValue),
//						},
//					},
//					Origin:       pulumi.Any(waasPolicyWafConfigOrigin),
//					OriginGroups: pulumi.Any(waasPolicyWafConfigOriginGroups),
//					ProtectionSettings: &waas.PolicyWafConfigProtectionSettingsArgs{
//						AllowedHttpMethods:            pulumi.Any(waasPolicyWafConfigProtectionSettingsAllowedHttpMethods),
//						BlockAction:                   pulumi.Any(waasPolicyWafConfigProtectionSettingsBlockAction),
//						BlockErrorPageCode:            pulumi.Any(waasPolicyWafConfigProtectionSettingsBlockErrorPageCode),
//						BlockErrorPageDescription:     pulumi.Any(waasPolicyWafConfigProtectionSettingsBlockErrorPageDescription),
//						BlockErrorPageMessage:         pulumi.Any(waasPolicyWafConfigProtectionSettingsBlockErrorPageMessage),
//						BlockResponseCode:             pulumi.Any(waasPolicyWafConfigProtectionSettingsBlockResponseCode),
//						IsResponseInspected:           pulumi.Any(waasPolicyWafConfigProtectionSettingsIsResponseInspected),
//						MaxArgumentCount:              pulumi.Any(waasPolicyWafConfigProtectionSettingsMaxArgumentCount),
//						MaxNameLengthPerArgument:      pulumi.Any(waasPolicyWafConfigProtectionSettingsMaxNameLengthPerArgument),
//						MaxResponseSizeInKiB:          pulumi.Any(waasPolicyWafConfigProtectionSettingsMaxResponseSizeInKiB),
//						MaxTotalNameLengthOfArguments: pulumi.Any(waasPolicyWafConfigProtectionSettingsMaxTotalNameLengthOfArguments),
//						MediaTypes:                    pulumi.Any(waasPolicyWafConfigProtectionSettingsMediaTypes),
//						RecommendationsPeriodInDays:   pulumi.Any(waasPolicyWafConfigProtectionSettingsRecommendationsPeriodInDays),
//					},
//					Whitelists: waas.PolicyWafConfigWhitelistArray{
//						&waas.PolicyWafConfigWhitelistArgs{
//							Name:         pulumi.Any(waasPolicyWafConfigWhitelistsName),
//							AddressLists: pulumi.Any(waasPolicyWafConfigWhitelistsAddressLists),
//							Addresses:    pulumi.Any(waasPolicyWafConfigWhitelistsAddresses),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WaasPolicies can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Waas/policy:Policy test_waas_policy "id"
// ```
type Policy struct {
	pulumi.CustomResourceState

	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains pulumi.StringArrayOutput `pulumi:"additionalDomains"`
	// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The web application domain that the WAAS policy protects.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups PolicyOriginGroupArrayOutput `pulumi:"originGroups"`
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins PolicyOriginArrayOutput `pulumi:"origins"`
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig PolicyPolicyConfigOutput `pulumi:"policyConfig"`
	// The current lifecycle state of the WAAS policy.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig PolicyWafConfigOutput `pulumi:"wafConfig"`
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Policy
	err := ctx.RegisterResource("oci:Waas/policy:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("oci:Waas/policy:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains []string `pulumi:"additionalDomains"`
	// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
	Cname *string `pulumi:"cname"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The web application domain that the WAAS policy protects.
	Domain *string `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups []PolicyOriginGroup `pulumi:"originGroups"`
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins []PolicyOrigin `pulumi:"origins"`
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig *PolicyPolicyConfig `pulumi:"policyConfig"`
	// The current lifecycle state of the WAAS policy.
	State *string `pulumi:"state"`
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig *PolicyWafConfig `pulumi:"wafConfig"`
}

type PolicyState struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains pulumi.StringArrayInput
	// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
	Cname pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The web application domain that the WAAS policy protects.
	Domain pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups PolicyOriginGroupArrayInput
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins PolicyOriginArrayInput
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig PolicyPolicyConfigPtrInput
	// The current lifecycle state of the WAAS policy.
	State pulumi.StringPtrInput
	// The date and time the policy was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig PolicyWafConfigPtrInput
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains []string `pulumi:"additionalDomains"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The web application domain that the WAAS policy protects.
	Domain string `pulumi:"domain"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups []PolicyOriginGroup `pulumi:"originGroups"`
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins []PolicyOrigin `pulumi:"origins"`
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig *PolicyPolicyConfig `pulumi:"policyConfig"`
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig *PolicyWafConfig `pulumi:"wafConfig"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	// (Updatable) An array of additional domains for the specified web application.
	AdditionalDomains pulumi.StringArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The web application domain that the WAAS policy protects.
	Domain pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
	OriginGroups PolicyOriginGroupArrayInput
	// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
	Origins PolicyOriginArrayInput
	// (Updatable) The configuration details for the WAAS policy.
	PolicyConfig PolicyPolicyConfigPtrInput
	// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
	WafConfig PolicyWafConfigPtrInput
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}

type PolicyInput interface {
	pulumi.Input

	ToPolicyOutput() PolicyOutput
	ToPolicyOutputWithContext(ctx context.Context) PolicyOutput
}

func (*Policy) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (i *Policy) ToPolicyOutput() PolicyOutput {
	return i.ToPolicyOutputWithContext(context.Background())
}

func (i *Policy) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOutput)
}

// PolicyArrayInput is an input type that accepts PolicyArray and PolicyArrayOutput values.
// You can construct a concrete instance of `PolicyArrayInput` via:
//
//	PolicyArray{ PolicyArgs{...} }
type PolicyArrayInput interface {
	pulumi.Input

	ToPolicyArrayOutput() PolicyArrayOutput
	ToPolicyArrayOutputWithContext(context.Context) PolicyArrayOutput
}

type PolicyArray []PolicyInput

func (PolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Policy)(nil)).Elem()
}

func (i PolicyArray) ToPolicyArrayOutput() PolicyArrayOutput {
	return i.ToPolicyArrayOutputWithContext(context.Background())
}

func (i PolicyArray) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyArrayOutput)
}

// PolicyMapInput is an input type that accepts PolicyMap and PolicyMapOutput values.
// You can construct a concrete instance of `PolicyMapInput` via:
//
//	PolicyMap{ "key": PolicyArgs{...} }
type PolicyMapInput interface {
	pulumi.Input

	ToPolicyMapOutput() PolicyMapOutput
	ToPolicyMapOutputWithContext(context.Context) PolicyMapOutput
}

type PolicyMap map[string]PolicyInput

func (PolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Policy)(nil)).Elem()
}

func (i PolicyMap) ToPolicyMapOutput() PolicyMapOutput {
	return i.ToPolicyMapOutputWithContext(context.Background())
}

func (i PolicyMap) ToPolicyMapOutputWithContext(ctx context.Context) PolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMapOutput)
}

type PolicyOutput struct{ *pulumi.OutputState }

func (PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (o PolicyOutput) ToPolicyOutput() PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return o
}

// (Updatable) An array of additional domains for the specified web application.
func (o PolicyOutput) AdditionalDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringArrayOutput { return v.AdditionalDomains }).(pulumi.StringArrayOutput)
}

// The CNAME record to add to your DNS configuration to route traffic for the domain, and all additional domains, through the WAF.
func (o PolicyOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Cname }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the WAAS policy.
func (o PolicyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o PolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly name for the WAAS policy. The name can be changed and does not need to be unique.
func (o PolicyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The web application domain that the WAAS policy protects.
func (o PolicyOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o PolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
func (o PolicyOutput) OriginGroups() PolicyOriginGroupArrayOutput {
	return o.ApplyT(func(v *Policy) PolicyOriginGroupArrayOutput { return v.OriginGroups }).(PolicyOriginGroupArrayOutput)
}

// (Updatable) A map of host to origin for the web application. The key should be a customer friendly name for the host, ex. primary, secondary, etc.
func (o PolicyOutput) Origins() PolicyOriginArrayOutput {
	return o.ApplyT(func(v *Policy) PolicyOriginArrayOutput { return v.Origins }).(PolicyOriginArrayOutput)
}

// (Updatable) The configuration details for the WAAS policy.
func (o PolicyOutput) PolicyConfig() PolicyPolicyConfigOutput {
	return o.ApplyT(func(v *Policy) PolicyPolicyConfigOutput { return v.PolicyConfig }).(PolicyPolicyConfigOutput)
}

// The current lifecycle state of the WAAS policy.
func (o PolicyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the policy was created, expressed in RFC 3339 timestamp format.
func (o PolicyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) The Web Application Firewall configuration for the WAAS policy creation.
func (o PolicyOutput) WafConfig() PolicyWafConfigOutput {
	return o.ApplyT(func(v *Policy) PolicyWafConfigOutput { return v.WafConfig }).(PolicyWafConfigOutput)
}

type PolicyArrayOutput struct{ *pulumi.OutputState }

func (PolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Policy)(nil)).Elem()
}

func (o PolicyArrayOutput) ToPolicyArrayOutput() PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) Index(i pulumi.IntInput) PolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Policy {
		return vs[0].([]*Policy)[vs[1].(int)]
	}).(PolicyOutput)
}

type PolicyMapOutput struct{ *pulumi.OutputState }

func (PolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Policy)(nil)).Elem()
}

func (o PolicyMapOutput) ToPolicyMapOutput() PolicyMapOutput {
	return o
}

func (o PolicyMapOutput) ToPolicyMapOutputWithContext(ctx context.Context) PolicyMapOutput {
	return o
}

func (o PolicyMapOutput) MapIndex(k pulumi.StringInput) PolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Policy {
		return vs[0].(map[string]*Policy)[vs[1].(string)]
	}).(PolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInput)(nil)).Elem(), &Policy{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyArrayInput)(nil)).Elem(), PolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyMapInput)(nil)).Elem(), PolicyMap{})
	pulumi.RegisterOutputType(PolicyOutput{})
	pulumi.RegisterOutputType(PolicyArrayOutput{})
	pulumi.RegisterOutputType(PolicyMapOutput{})
}
