// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Zpr Policies in Oracle Cloud Infrastructure Zpr service.
//
// Gets a list of ZprPolicies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/zpr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpr.GetZprPolicies(ctx, &zpr.GetZprPoliciesArgs{
//				CompartmentId: pulumi.StringRef(tenancyOcid),
//				Name:          pulumi.StringRef(zprPolicyName),
//				State:         pulumi.StringRef(zprPolicyState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetZprPolicies(ctx *pulumi.Context, args *GetZprPoliciesArgs, opts ...pulumi.InvokeOption) (*GetZprPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetZprPoliciesResult
	err := ctx.Invoke("oci:Zpr/getZprPolicies:getZprPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZprPolicies.
type GetZprPoliciesArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string                `pulumi:"compartmentId"`
	Filters       []GetZprPoliciesFilter `pulumi:"filters"`
	// A filter to return only resources that match the entire display name given.
	Name *string `pulumi:"name"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getZprPolicies.
type GetZprPoliciesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string                `pulumi:"compartmentId"`
	Filters       []GetZprPoliciesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
	Name *string `pulumi:"name"`
	// The current state of the ZprPolicy.
	State *string `pulumi:"state"`
	// The list of zpr_policies.
	ZprPolicies []GetZprPoliciesZprPolicy `pulumi:"zprPolicies"`
}

func GetZprPoliciesOutput(ctx *pulumi.Context, args GetZprPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetZprPoliciesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetZprPoliciesResultOutput, error) {
			args := v.(GetZprPoliciesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Zpr/getZprPolicies:getZprPolicies", args, GetZprPoliciesResultOutput{}, options).(GetZprPoliciesResultOutput), nil
		}).(GetZprPoliciesResultOutput)
}

// A collection of arguments for invoking getZprPolicies.
type GetZprPoliciesOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput          `pulumi:"compartmentId"`
	Filters       GetZprPoliciesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the entire display name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetZprPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZprPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getZprPolicies.
type GetZprPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetZprPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZprPoliciesResult)(nil)).Elem()
}

func (o GetZprPoliciesResultOutput) ToGetZprPoliciesResultOutput() GetZprPoliciesResultOutput {
	return o
}

func (o GetZprPoliciesResultOutput) ToGetZprPoliciesResultOutputWithContext(ctx context.Context) GetZprPoliciesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetZprPoliciesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZprPoliciesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetZprPoliciesResultOutput) Filters() GetZprPoliciesFilterArrayOutput {
	return o.ApplyT(func(v GetZprPoliciesResult) []GetZprPoliciesFilter { return v.Filters }).(GetZprPoliciesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetZprPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZprPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
func (o GetZprPoliciesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZprPoliciesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current state of the ZprPolicy.
func (o GetZprPoliciesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZprPoliciesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of zpr_policies.
func (o GetZprPoliciesResultOutput) ZprPolicies() GetZprPoliciesZprPolicyArrayOutput {
	return o.ApplyT(func(v GetZprPoliciesResult) []GetZprPoliciesZprPolicy { return v.ZprPolicies }).(GetZprPoliciesZprPolicyArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZprPoliciesResultOutput{})
}
