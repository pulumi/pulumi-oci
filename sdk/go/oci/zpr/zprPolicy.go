// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zpr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Zpr Policy resource in Oracle Cloud Infrastructure Zpr service.
//
// Creates a ZprPolicy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/zpr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zpr.NewZprPolicy(ctx, "test_zpr_policy", &zpr.ZprPolicyArgs{
//				CompartmentId: pulumi.Any(tenancyOcid),
//				Description:   pulumi.Any(zprPolicyDescription),
//				Name:          pulumi.Any(zprPolicyName),
//				Statements:    pulumi.Any(zprPolicyStatements),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ZprPolicies can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Zpr/zprPolicy:ZprPolicy test_zpr_policy "id"
// ```
type ZprPolicy struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the ZprPolicy in.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) The description you assign to the ZprPolicy during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message that describes the current state of the ZprPolicy in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
	Name pulumi.StringOutput `pulumi:"name"`
	// The current state of the ZprPolicy.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) An array of ZprPolicy statements(up to 25 statements per ZprPolicy) written in the Zero Trust Packet Routing Policy Language.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Statements pulumi.StringArrayOutput `pulumi:"statements"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the ZprPolicy was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the ZprPolicy was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewZprPolicy registers a new resource with the given unique name, arguments, and options.
func NewZprPolicy(ctx *pulumi.Context,
	name string, args *ZprPolicyArgs, opts ...pulumi.ResourceOption) (*ZprPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Statements == nil {
		return nil, errors.New("invalid value for required argument 'Statements'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZprPolicy
	err := ctx.RegisterResource("oci:Zpr/zprPolicy:ZprPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZprPolicy gets an existing ZprPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZprPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZprPolicyState, opts ...pulumi.ResourceOption) (*ZprPolicy, error) {
	var resource ZprPolicy
	err := ctx.ReadResource("oci:Zpr/zprPolicy:ZprPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZprPolicy resources.
type zprPolicyState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the ZprPolicy in.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description you assign to the ZprPolicy during creation. Does not have to be unique, and it's changeable.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message that describes the current state of the ZprPolicy in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
	Name *string `pulumi:"name"`
	// The current state of the ZprPolicy.
	State *string `pulumi:"state"`
	// (Updatable) An array of ZprPolicy statements(up to 25 statements per ZprPolicy) written in the Zero Trust Packet Routing Policy Language.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Statements []string `pulumi:"statements"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the ZprPolicy was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the ZprPolicy was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ZprPolicyState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the ZprPolicy in.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description you assign to the ZprPolicy during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// A message that describes the current state of the ZprPolicy in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
	Name pulumi.StringPtrInput
	// The current state of the ZprPolicy.
	State pulumi.StringPtrInput
	// (Updatable) An array of ZprPolicy statements(up to 25 statements per ZprPolicy) written in the Zero Trust Packet Routing Policy Language.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Statements pulumi.StringArrayInput
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the ZprPolicy was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time the ZprPolicy was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
}

func (ZprPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*zprPolicyState)(nil)).Elem()
}

type zprPolicyArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the ZprPolicy in.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description you assign to the ZprPolicy during creation. Does not have to be unique, and it's changeable.
	Description string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
	Name *string `pulumi:"name"`
	// (Updatable) An array of ZprPolicy statements(up to 25 statements per ZprPolicy) written in the Zero Trust Packet Routing Policy Language.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Statements []string `pulumi:"statements"`
}

// The set of arguments for constructing a ZprPolicy resource.
type ZprPolicyArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the ZprPolicy in.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description you assign to the ZprPolicy during creation. Does not have to be unique, and it's changeable.
	Description pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
	Name pulumi.StringPtrInput
	// (Updatable) An array of ZprPolicy statements(up to 25 statements per ZprPolicy) written in the Zero Trust Packet Routing Policy Language.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Statements pulumi.StringArrayInput
}

func (ZprPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zprPolicyArgs)(nil)).Elem()
}

type ZprPolicyInput interface {
	pulumi.Input

	ToZprPolicyOutput() ZprPolicyOutput
	ToZprPolicyOutputWithContext(ctx context.Context) ZprPolicyOutput
}

func (*ZprPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ZprPolicy)(nil)).Elem()
}

func (i *ZprPolicy) ToZprPolicyOutput() ZprPolicyOutput {
	return i.ToZprPolicyOutputWithContext(context.Background())
}

func (i *ZprPolicy) ToZprPolicyOutputWithContext(ctx context.Context) ZprPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZprPolicyOutput)
}

// ZprPolicyArrayInput is an input type that accepts ZprPolicyArray and ZprPolicyArrayOutput values.
// You can construct a concrete instance of `ZprPolicyArrayInput` via:
//
//	ZprPolicyArray{ ZprPolicyArgs{...} }
type ZprPolicyArrayInput interface {
	pulumi.Input

	ToZprPolicyArrayOutput() ZprPolicyArrayOutput
	ToZprPolicyArrayOutputWithContext(context.Context) ZprPolicyArrayOutput
}

type ZprPolicyArray []ZprPolicyInput

func (ZprPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZprPolicy)(nil)).Elem()
}

func (i ZprPolicyArray) ToZprPolicyArrayOutput() ZprPolicyArrayOutput {
	return i.ToZprPolicyArrayOutputWithContext(context.Background())
}

func (i ZprPolicyArray) ToZprPolicyArrayOutputWithContext(ctx context.Context) ZprPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZprPolicyArrayOutput)
}

// ZprPolicyMapInput is an input type that accepts ZprPolicyMap and ZprPolicyMapOutput values.
// You can construct a concrete instance of `ZprPolicyMapInput` via:
//
//	ZprPolicyMap{ "key": ZprPolicyArgs{...} }
type ZprPolicyMapInput interface {
	pulumi.Input

	ToZprPolicyMapOutput() ZprPolicyMapOutput
	ToZprPolicyMapOutputWithContext(context.Context) ZprPolicyMapOutput
}

type ZprPolicyMap map[string]ZprPolicyInput

func (ZprPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZprPolicy)(nil)).Elem()
}

func (i ZprPolicyMap) ToZprPolicyMapOutput() ZprPolicyMapOutput {
	return i.ToZprPolicyMapOutputWithContext(context.Background())
}

func (i ZprPolicyMap) ToZprPolicyMapOutputWithContext(ctx context.Context) ZprPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZprPolicyMapOutput)
}

type ZprPolicyOutput struct{ *pulumi.OutputState }

func (ZprPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZprPolicy)(nil)).Elem()
}

func (o ZprPolicyOutput) ToZprPolicyOutput() ZprPolicyOutput {
	return o
}

func (o ZprPolicyOutput) ToZprPolicyOutputWithContext(ctx context.Context) ZprPolicyOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the ZprPolicy in.
func (o ZprPolicyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o ZprPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) The description you assign to the ZprPolicy during creation. Does not have to be unique, and it's changeable.
func (o ZprPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ZprPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message that describes the current state of the ZprPolicy in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o ZprPolicyOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The name you assign to the ZprPolicy during creation. The name must be unique across all ZPL policies in the tenancy.
func (o ZprPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current state of the ZprPolicy.
func (o ZprPolicyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) An array of ZprPolicy statements(up to 25 statements per ZprPolicy) written in the Zero Trust Packet Routing Policy Language.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ZprPolicyOutput) Statements() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringArrayOutput { return v.Statements }).(pulumi.StringArrayOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ZprPolicyOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the ZprPolicy was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o ZprPolicyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the ZprPolicy was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o ZprPolicyOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ZprPolicy) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type ZprPolicyArrayOutput struct{ *pulumi.OutputState }

func (ZprPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZprPolicy)(nil)).Elem()
}

func (o ZprPolicyArrayOutput) ToZprPolicyArrayOutput() ZprPolicyArrayOutput {
	return o
}

func (o ZprPolicyArrayOutput) ToZprPolicyArrayOutputWithContext(ctx context.Context) ZprPolicyArrayOutput {
	return o
}

func (o ZprPolicyArrayOutput) Index(i pulumi.IntInput) ZprPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZprPolicy {
		return vs[0].([]*ZprPolicy)[vs[1].(int)]
	}).(ZprPolicyOutput)
}

type ZprPolicyMapOutput struct{ *pulumi.OutputState }

func (ZprPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZprPolicy)(nil)).Elem()
}

func (o ZprPolicyMapOutput) ToZprPolicyMapOutput() ZprPolicyMapOutput {
	return o
}

func (o ZprPolicyMapOutput) ToZprPolicyMapOutputWithContext(ctx context.Context) ZprPolicyMapOutput {
	return o
}

func (o ZprPolicyMapOutput) MapIndex(k pulumi.StringInput) ZprPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZprPolicy {
		return vs[0].(map[string]*ZprPolicy)[vs[1].(string)]
	}).(ZprPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZprPolicyInput)(nil)).Elem(), &ZprPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZprPolicyArrayInput)(nil)).Elem(), ZprPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZprPolicyMapInput)(nil)).Elem(), ZprPolicyMap{})
	pulumi.RegisterOutputType(ZprPolicyOutput{})
	pulumi.RegisterOutputType(ZprPolicyArrayOutput{})
	pulumi.RegisterOutputType(ZprPolicyMapOutput{})
}
