// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Adm.VulnerabilityAuditArgs;
import com.pulumi.oci.Adm.inputs.VulnerabilityAuditState;
import com.pulumi.oci.Adm.outputs.VulnerabilityAuditApplicationDependency;
import com.pulumi.oci.Adm.outputs.VulnerabilityAuditConfiguration;
import com.pulumi.oci.Adm.outputs.VulnerabilityAuditSource;
import com.pulumi.oci.Adm.outputs.VulnerabilityAuditVulnerability;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Vulnerability Audit resource in Oracle Cloud Infrastructure Adm service.
 * 
 * Creates a new Vulnerability Audit by providing a tree of Application Dependencies.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Adm.VulnerabilityAudit;
 * import com.pulumi.oci.Adm.VulnerabilityAuditArgs;
 * import com.pulumi.oci.Adm.inputs.VulnerabilityAuditApplicationDependencyArgs;
 * import com.pulumi.oci.Adm.inputs.VulnerabilityAuditConfigurationArgs;
 * import com.pulumi.oci.Adm.inputs.VulnerabilityAuditSourceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testVulnerabilityAudit = new VulnerabilityAudit(&#34;testVulnerabilityAudit&#34;, VulnerabilityAuditArgs.builder()        
 *             .buildType(var_.vulnerability_audit_build_type())
 *             .knowledgeBaseId(oci_adm_knowledge_base.test_knowledge_base().id())
 *             .applicationDependencies(VulnerabilityAuditApplicationDependencyArgs.builder()
 *                 .gav(var_.vulnerability_audit_application_dependencies_gav())
 *                 .nodeId(oci_adm_node.test_node().id())
 *                 .applicationDependencyNodeIds(var_.vulnerability_audit_application_dependencies_application_dependency_node_ids())
 *                 .build())
 *             .compartmentId(var_.compartment_id())
 *             .configuration(VulnerabilityAuditConfigurationArgs.builder()
 *                 .exclusions(var_.vulnerability_audit_configuration_exclusions())
 *                 .maxPermissibleCvssV2score(var_.vulnerability_audit_configuration_max_permissible_cvss_v2score())
 *                 .maxPermissibleCvssV3score(var_.vulnerability_audit_configuration_max_permissible_cvss_v3score())
 *                 .build())
 *             .definedTags(Map.of(&#34;foo-namespace.bar-key&#34;, &#34;value&#34;))
 *             .displayName(var_.vulnerability_audit_display_name())
 *             .freeformTags(Map.of(&#34;bar-key&#34;, &#34;value&#34;))
 *             .source(VulnerabilityAuditSourceArgs.builder()
 *                 .type(var_.vulnerability_audit_source_type())
 *                 .description(var_.vulnerability_audit_source_description())
 *                 .ociResourceId(oci_adm_oci_resource.test_oci_resource().id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * VulnerabilityAudits can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Adm/vulnerabilityAudit:VulnerabilityAudit test_vulnerability_audit &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Adm/vulnerabilityAudit:VulnerabilityAudit")
public class VulnerabilityAudit extends com.pulumi.resources.CustomResource {
    /**
     * List of application dependencies (without vulnerabilities).
     * 
     */
    @Export(name="applicationDependencies", refs={List.class,VulnerabilityAuditApplicationDependency.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VulnerabilityAuditApplicationDependency>> applicationDependencies;

    /**
     * @return List of application dependencies (without vulnerabilities).
     * 
     */
    public Output<Optional<List<VulnerabilityAuditApplicationDependency>>> applicationDependencies() {
        return Codegen.optional(this.applicationDependencies);
    }
    /**
     * The type of the build tool.
     * 
     */
    @Export(name="buildType", refs={String.class}, tree="[0]")
    private Output<String> buildType;

    /**
     * @return The type of the build tool.
     * 
     */
    public Output<String> buildType() {
        return this.buildType;
    }
    /**
     * (Updatable) The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.  If compartment identifier is not provided the compartment of the associated knowledge base will be used instead.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> compartmentId;

    /**
     * @return (Updatable) The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.  If compartment identifier is not provided the compartment of the associated knowledge base will be used instead.
     * 
     */
    public Output<Optional<String>> compartmentId() {
        return Codegen.optional(this.compartmentId);
    }
    /**
     * Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
     * 
     */
    @Export(name="configuration", refs={VulnerabilityAuditConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ VulnerabilityAuditConfiguration> configuration;

    /**
     * @return Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
     * 
     */
    public Output<Optional<VulnerabilityAuditConfiguration>> configuration() {
        return Codegen.optional(this.configuration);
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) The name of the vulnerability audit.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return (Updatable) The name of the vulnerability audit.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     * 
     */
    @Export(name="isSuccess", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isSuccess;

    /**
     * @return Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     * 
     */
    public Output<Optional<Boolean>> isSuccess() {
        return Codegen.optional(this.isSuccess);
    }
    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    @Export(name="knowledgeBaseId", refs={String.class}, tree="[0]")
    private Output<String> knowledgeBaseId;

    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    public Output<String> knowledgeBaseId() {
        return this.knowledgeBaseId;
    }
    /**
     * Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    @Export(name="maxObservedCvssV2score", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> maxObservedCvssV2score;

    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    public Output<Optional<Double>> maxObservedCvssV2score() {
        return Codegen.optional(this.maxObservedCvssV2score);
    }
    /**
     * Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    @Export(name="maxObservedCvssV2scoreWithIgnored", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> maxObservedCvssV2scoreWithIgnored;

    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    public Output<Optional<Double>> maxObservedCvssV2scoreWithIgnored() {
        return Codegen.optional(this.maxObservedCvssV2scoreWithIgnored);
    }
    /**
     * Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    @Export(name="maxObservedCvssV3score", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> maxObservedCvssV3score;

    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    public Output<Optional<Double>> maxObservedCvssV3score() {
        return Codegen.optional(this.maxObservedCvssV3score);
    }
    /**
     * Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    @Export(name="maxObservedCvssV3scoreWithIgnored", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> maxObservedCvssV3scoreWithIgnored;

    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    public Output<Optional<Double>> maxObservedCvssV3scoreWithIgnored() {
        return Codegen.optional(this.maxObservedCvssV3scoreWithIgnored);
    }
    /**
     * vulnerability audit source.
     * 
     */
    @Export(name="source", refs={VulnerabilityAuditSource.class}, tree="[0]")
    private Output</* @Nullable */ VulnerabilityAuditSource> source;

    /**
     * @return vulnerability audit source.
     * 
     */
    public Output<Optional<VulnerabilityAuditSource>> source() {
        return Codegen.optional(this.source);
    }
    /**
     * The current lifecycle state of the vulnerability audit.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The current lifecycle state of the vulnerability audit.
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> systemTags() {
        return Codegen.optional(this.systemTags);
    }
    /**
     * The creation date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The creation date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * The update date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeUpdated;

    /**
     * @return The update date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Output<Optional<String>> timeUpdated() {
        return Codegen.optional(this.timeUpdated);
    }
    /**
     * List of vulnerabilities found in the vulnerability audit.
     * 
     */
    @Export(name="vulnerabilities", refs={List.class,VulnerabilityAuditVulnerability.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VulnerabilityAuditVulnerability>> vulnerabilities;

    /**
     * @return List of vulnerabilities found in the vulnerability audit.
     * 
     */
    public Output<Optional<List<VulnerabilityAuditVulnerability>>> vulnerabilities() {
        return Codegen.optional(this.vulnerabilities);
    }
    /**
     * Count of non-ignored vulnerable application dependencies.
     * 
     */
    @Export(name="vulnerableArtifactsCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vulnerableArtifactsCount;

    /**
     * @return Count of non-ignored vulnerable application dependencies.
     * 
     */
    public Output<Optional<Integer>> vulnerableArtifactsCount() {
        return Codegen.optional(this.vulnerableArtifactsCount);
    }
    /**
     * Count of all vulnerable application dependencies.
     * 
     */
    @Export(name="vulnerableArtifactsCountWithIgnored", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vulnerableArtifactsCountWithIgnored;

    /**
     * @return Count of all vulnerable application dependencies.
     * 
     */
    public Output<Optional<Integer>> vulnerableArtifactsCountWithIgnored() {
        return Codegen.optional(this.vulnerableArtifactsCountWithIgnored);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VulnerabilityAudit(String name) {
        this(name, VulnerabilityAuditArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VulnerabilityAudit(String name, VulnerabilityAuditArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VulnerabilityAudit(String name, VulnerabilityAuditArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Adm/vulnerabilityAudit:VulnerabilityAudit", name, args == null ? VulnerabilityAuditArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VulnerabilityAudit(String name, Output<String> id, @Nullable VulnerabilityAuditState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Adm/vulnerabilityAudit:VulnerabilityAudit", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VulnerabilityAudit get(String name, Output<String> id, @Nullable VulnerabilityAuditState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VulnerabilityAudit(name, id, state, options);
    }
}
