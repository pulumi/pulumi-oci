// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Adm.inputs.VulnerabilityAuditApplicationDependencyArgs;
import com.pulumi.oci.Adm.inputs.VulnerabilityAuditConfigurationArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VulnerabilityAuditArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityAuditArgs Empty = new VulnerabilityAuditArgs();

    /**
     * List of Application Dependencies (without vulnerabilities).
     * 
     */
    @Import(name="applicationDependencies", required=true)
    private Output<List<VulnerabilityAuditApplicationDependencyArgs>> applicationDependencies;

    /**
     * @return List of Application Dependencies (without vulnerabilities).
     * 
     */
    public Output<List<VulnerabilityAuditApplicationDependencyArgs>> applicationDependencies() {
        return this.applicationDependencies;
    }

    /**
     * The type of the build tool.
     * 
     */
    @Import(name="buildType", required=true)
    private Output<String> buildType;

    /**
     * @return The type of the build tool.
     * 
     */
    public Output<String> buildType() {
        return this.buildType;
    }

    /**
     * (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Configuration for a Vulnerability Audit type: object
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<VulnerabilityAuditConfigurationArgs> configuration;

    /**
     * @return Configuration for a Vulnerability Audit type: object
     * 
     */
    public Optional<Output<VulnerabilityAuditConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The name of the Vulnerability Audit.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The name of the Vulnerability Audit.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
     * 
     */
    @Import(name="knowledgeBaseId", required=true)
    private Output<String> knowledgeBaseId;

    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
     * 
     */
    public Output<String> knowledgeBaseId() {
        return this.knowledgeBaseId;
    }

    private VulnerabilityAuditArgs() {}

    private VulnerabilityAuditArgs(VulnerabilityAuditArgs $) {
        this.applicationDependencies = $.applicationDependencies;
        this.buildType = $.buildType;
        this.compartmentId = $.compartmentId;
        this.configuration = $.configuration;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.knowledgeBaseId = $.knowledgeBaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityAuditArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityAuditArgs $;

        public Builder() {
            $ = new VulnerabilityAuditArgs();
        }

        public Builder(VulnerabilityAuditArgs defaults) {
            $ = new VulnerabilityAuditArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationDependencies List of Application Dependencies (without vulnerabilities).
         * 
         * @return builder
         * 
         */
        public Builder applicationDependencies(Output<List<VulnerabilityAuditApplicationDependencyArgs>> applicationDependencies) {
            $.applicationDependencies = applicationDependencies;
            return this;
        }

        /**
         * @param applicationDependencies List of Application Dependencies (without vulnerabilities).
         * 
         * @return builder
         * 
         */
        public Builder applicationDependencies(List<VulnerabilityAuditApplicationDependencyArgs> applicationDependencies) {
            return applicationDependencies(Output.of(applicationDependencies));
        }

        /**
         * @param applicationDependencies List of Application Dependencies (without vulnerabilities).
         * 
         * @return builder
         * 
         */
        public Builder applicationDependencies(VulnerabilityAuditApplicationDependencyArgs... applicationDependencies) {
            return applicationDependencies(List.of(applicationDependencies));
        }

        /**
         * @param buildType The type of the build tool.
         * 
         * @return builder
         * 
         */
        public Builder buildType(Output<String> buildType) {
            $.buildType = buildType;
            return this;
        }

        /**
         * @param buildType The type of the build tool.
         * 
         * @return builder
         * 
         */
        public Builder buildType(String buildType) {
            return buildType(Output.of(buildType));
        }

        /**
         * @param compartmentId (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configuration Configuration for a Vulnerability Audit type: object
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<VulnerabilityAuditConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Configuration for a Vulnerability Audit type: object
         * 
         * @return builder
         * 
         */
        public Builder configuration(VulnerabilityAuditConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The name of the Vulnerability Audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the Vulnerability Audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param knowledgeBaseId The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(Output<String> knowledgeBaseId) {
            $.knowledgeBaseId = knowledgeBaseId;
            return this;
        }

        /**
         * @param knowledgeBaseId The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(String knowledgeBaseId) {
            return knowledgeBaseId(Output.of(knowledgeBaseId));
        }

        public VulnerabilityAuditArgs build() {
            $.applicationDependencies = Objects.requireNonNull($.applicationDependencies, "expected parameter 'applicationDependencies' to be non-null");
            $.buildType = Objects.requireNonNull($.buildType, "expected parameter 'buildType' to be non-null");
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.knowledgeBaseId = Objects.requireNonNull($.knowledgeBaseId, "expected parameter 'knowledgeBaseId' to be non-null");
            return $;
        }
    }

}
