// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Adm.inputs.VulnerabilityAuditApplicationDependencyArgs;
import com.pulumi.oci.Adm.inputs.VulnerabilityAuditConfigurationArgs;
import com.pulumi.oci.Adm.inputs.VulnerabilityAuditSourceArgs;
import com.pulumi.oci.Adm.inputs.VulnerabilityAuditUsageDataArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VulnerabilityAuditArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityAuditArgs Empty = new VulnerabilityAuditArgs();

    /**
     * List of application dependencies (without vulnerabilities).
     * 
     */
    @Import(name="applicationDependencies")
    private @Nullable Output<List<VulnerabilityAuditApplicationDependencyArgs>> applicationDependencies;

    /**
     * @return List of application dependencies (without vulnerabilities).
     * 
     */
    public Optional<Output<List<VulnerabilityAuditApplicationDependencyArgs>>> applicationDependencies() {
        return Optional.ofNullable(this.applicationDependencies);
    }

    /**
     * The type of the build tool is restricted to only two values MAVEN or UNSET. Use UNSET when the list of application dependencies is not Maven-related or is a mix of Maven and other ecosystems. This option is soon to be deprecated.
     * 
     */
    @Import(name="buildType")
    private @Nullable Output<String> buildType;

    /**
     * @return The type of the build tool is restricted to only two values MAVEN or UNSET. Use UNSET when the list of application dependencies is not Maven-related or is a mix of Maven and other ecosystems. This option is soon to be deprecated.
     * 
     */
    public Optional<Output<String>> buildType() {
        return Optional.ofNullable(this.buildType);
    }

    /**
     * (Updatable) The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.  If compartment identifier is not provided the compartment of the associated knowledge base will be used instead.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.  If compartment identifier is not provided the compartment of the associated knowledge base will be used instead.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<VulnerabilityAuditConfigurationArgs> configuration;

    /**
     * @return Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
     * 
     */
    public Optional<Output<VulnerabilityAuditConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The name of the vulnerability audit.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The name of the vulnerability audit.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    @Import(name="knowledgeBaseId", required=true)
    private Output<String> knowledgeBaseId;

    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    public Output<String> knowledgeBaseId() {
        return this.knowledgeBaseId;
    }

    /**
     * vulnerability audit source.
     * 
     */
    @Import(name="source")
    private @Nullable Output<VulnerabilityAuditSourceArgs> source;

    /**
     * @return vulnerability audit source.
     * 
     */
    public Optional<Output<VulnerabilityAuditSourceArgs>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The source details of the usage data in object storage. The usage data file uploaded to object storage must be a gzip archive of the JSON usage data returned from the GraalVM native-image-inspect tool after a native-image build. Set `sourceType` to `objectStorageTuple` and use [UsageDataViaObjectStorageTupleDetails](https://docs.cloud.oracle.com/iaas/api/#/en/adm/latest/requests/UsageDataViaObjectStorageTupleDetails) when specifying the namespace, bucket name, and object name.
     * 
     */
    @Import(name="usageData")
    private @Nullable Output<VulnerabilityAuditUsageDataArgs> usageData;

    /**
     * @return The source details of the usage data in object storage. The usage data file uploaded to object storage must be a gzip archive of the JSON usage data returned from the GraalVM native-image-inspect tool after a native-image build. Set `sourceType` to `objectStorageTuple` and use [UsageDataViaObjectStorageTupleDetails](https://docs.cloud.oracle.com/iaas/api/#/en/adm/latest/requests/UsageDataViaObjectStorageTupleDetails) when specifying the namespace, bucket name, and object name.
     * 
     */
    public Optional<Output<VulnerabilityAuditUsageDataArgs>> usageData() {
        return Optional.ofNullable(this.usageData);
    }

    private VulnerabilityAuditArgs() {}

    private VulnerabilityAuditArgs(VulnerabilityAuditArgs $) {
        this.applicationDependencies = $.applicationDependencies;
        this.buildType = $.buildType;
        this.compartmentId = $.compartmentId;
        this.configuration = $.configuration;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.knowledgeBaseId = $.knowledgeBaseId;
        this.source = $.source;
        this.usageData = $.usageData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityAuditArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityAuditArgs $;

        public Builder() {
            $ = new VulnerabilityAuditArgs();
        }

        public Builder(VulnerabilityAuditArgs defaults) {
            $ = new VulnerabilityAuditArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationDependencies List of application dependencies (without vulnerabilities).
         * 
         * @return builder
         * 
         */
        public Builder applicationDependencies(@Nullable Output<List<VulnerabilityAuditApplicationDependencyArgs>> applicationDependencies) {
            $.applicationDependencies = applicationDependencies;
            return this;
        }

        /**
         * @param applicationDependencies List of application dependencies (without vulnerabilities).
         * 
         * @return builder
         * 
         */
        public Builder applicationDependencies(List<VulnerabilityAuditApplicationDependencyArgs> applicationDependencies) {
            return applicationDependencies(Output.of(applicationDependencies));
        }

        /**
         * @param applicationDependencies List of application dependencies (without vulnerabilities).
         * 
         * @return builder
         * 
         */
        public Builder applicationDependencies(VulnerabilityAuditApplicationDependencyArgs... applicationDependencies) {
            return applicationDependencies(List.of(applicationDependencies));
        }

        /**
         * @param buildType The type of the build tool is restricted to only two values MAVEN or UNSET. Use UNSET when the list of application dependencies is not Maven-related or is a mix of Maven and other ecosystems. This option is soon to be deprecated.
         * 
         * @return builder
         * 
         */
        public Builder buildType(@Nullable Output<String> buildType) {
            $.buildType = buildType;
            return this;
        }

        /**
         * @param buildType The type of the build tool is restricted to only two values MAVEN or UNSET. Use UNSET when the list of application dependencies is not Maven-related or is a mix of Maven and other ecosystems. This option is soon to be deprecated.
         * 
         * @return builder
         * 
         */
        public Builder buildType(String buildType) {
            return buildType(Output.of(buildType));
        }

        /**
         * @param compartmentId (Updatable) The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.  If compartment identifier is not provided the compartment of the associated knowledge base will be used instead.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.  If compartment identifier is not provided the compartment of the associated knowledge base will be used instead.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configuration Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<VulnerabilityAuditConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
         * 
         * @return builder
         * 
         */
        public Builder configuration(VulnerabilityAuditConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The name of the vulnerability audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the vulnerability audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param knowledgeBaseId The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(Output<String> knowledgeBaseId) {
            $.knowledgeBaseId = knowledgeBaseId;
            return this;
        }

        /**
         * @param knowledgeBaseId The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(String knowledgeBaseId) {
            return knowledgeBaseId(Output.of(knowledgeBaseId));
        }

        /**
         * @param source vulnerability audit source.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<VulnerabilityAuditSourceArgs> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source vulnerability audit source.
         * 
         * @return builder
         * 
         */
        public Builder source(VulnerabilityAuditSourceArgs source) {
            return source(Output.of(source));
        }

        /**
         * @param usageData The source details of the usage data in object storage. The usage data file uploaded to object storage must be a gzip archive of the JSON usage data returned from the GraalVM native-image-inspect tool after a native-image build. Set `sourceType` to `objectStorageTuple` and use [UsageDataViaObjectStorageTupleDetails](https://docs.cloud.oracle.com/iaas/api/#/en/adm/latest/requests/UsageDataViaObjectStorageTupleDetails) when specifying the namespace, bucket name, and object name.
         * 
         * @return builder
         * 
         */
        public Builder usageData(@Nullable Output<VulnerabilityAuditUsageDataArgs> usageData) {
            $.usageData = usageData;
            return this;
        }

        /**
         * @param usageData The source details of the usage data in object storage. The usage data file uploaded to object storage must be a gzip archive of the JSON usage data returned from the GraalVM native-image-inspect tool after a native-image build. Set `sourceType` to `objectStorageTuple` and use [UsageDataViaObjectStorageTupleDetails](https://docs.cloud.oracle.com/iaas/api/#/en/adm/latest/requests/UsageDataViaObjectStorageTupleDetails) when specifying the namespace, bucket name, and object name.
         * 
         * @return builder
         * 
         */
        public Builder usageData(VulnerabilityAuditUsageDataArgs usageData) {
            return usageData(Output.of(usageData));
        }

        public VulnerabilityAuditArgs build() {
            if ($.knowledgeBaseId == null) {
                throw new MissingRequiredPropertyException("VulnerabilityAuditArgs", "knowledgeBaseId");
            }
            return $;
        }
    }

}
