// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Adm.inputs.GetRemediationRunApplicationDependencyRecommendationsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRemediationRunApplicationDependencyRecommendationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRemediationRunApplicationDependencyRecommendationsArgs Empty = new GetRemediationRunApplicationDependencyRecommendationsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetRemediationRunApplicationDependencyRecommendationsFilterArgs>> filters;

    public Optional<Output<List<GetRemediationRunApplicationDependencyRecommendationsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    @Import(name="gav")
    private @Nullable Output<String> gav;

    /**
     * @return A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    public Optional<Output<String>> gav() {
        return Optional.ofNullable(this.gav);
    }

    /**
     * Unique Remediation Run identifier path parameter.
     * 
     */
    @Import(name="remediationRunId", required=true)
    private Output<String> remediationRunId;

    /**
     * @return Unique Remediation Run identifier path parameter.
     * 
     */
    public Output<String> remediationRunId() {
        return this.remediationRunId;
    }

    private GetRemediationRunApplicationDependencyRecommendationsArgs() {}

    private GetRemediationRunApplicationDependencyRecommendationsArgs(GetRemediationRunApplicationDependencyRecommendationsArgs $) {
        this.filters = $.filters;
        this.gav = $.gav;
        this.remediationRunId = $.remediationRunId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRemediationRunApplicationDependencyRecommendationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRemediationRunApplicationDependencyRecommendationsArgs $;

        public Builder() {
            $ = new GetRemediationRunApplicationDependencyRecommendationsArgs();
        }

        public Builder(GetRemediationRunApplicationDependencyRecommendationsArgs defaults) {
            $ = new GetRemediationRunApplicationDependencyRecommendationsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetRemediationRunApplicationDependencyRecommendationsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetRemediationRunApplicationDependencyRecommendationsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetRemediationRunApplicationDependencyRecommendationsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param gav A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
         * 
         * @return builder
         * 
         */
        public Builder gav(@Nullable Output<String> gav) {
            $.gav = gav;
            return this;
        }

        /**
         * @param gav A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
         * 
         * @return builder
         * 
         */
        public Builder gav(String gav) {
            return gav(Output.of(gav));
        }

        /**
         * @param remediationRunId Unique Remediation Run identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder remediationRunId(Output<String> remediationRunId) {
            $.remediationRunId = remediationRunId;
            return this;
        }

        /**
         * @param remediationRunId Unique Remediation Run identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder remediationRunId(String remediationRunId) {
            return remediationRunId(Output.of(remediationRunId));
        }

        public GetRemediationRunApplicationDependencyRecommendationsArgs build() {
            $.remediationRunId = Objects.requireNonNull($.remediationRunId, "expected parameter 'remediationRunId' to be non-null");
            return $;
        }
    }

}
