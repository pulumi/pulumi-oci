// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Adm.inputs.GetRemediationRunApplicationDependencyRecommendationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRemediationRunApplicationDependencyRecommendationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRemediationRunApplicationDependencyRecommendationsPlainArgs Empty = new GetRemediationRunApplicationDependencyRecommendationsPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetRemediationRunApplicationDependencyRecommendationsFilter> filters;

    public Optional<List<GetRemediationRunApplicationDependencyRecommendationsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    @Import(name="gav")
    private @Nullable String gav;

    /**
     * @return A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    public Optional<String> gav() {
        return Optional.ofNullable(this.gav);
    }

    /**
     * Unique Remediation Run identifier path parameter.
     * 
     */
    @Import(name="remediationRunId", required=true)
    private String remediationRunId;

    /**
     * @return Unique Remediation Run identifier path parameter.
     * 
     */
    public String remediationRunId() {
        return this.remediationRunId;
    }

    private GetRemediationRunApplicationDependencyRecommendationsPlainArgs() {}

    private GetRemediationRunApplicationDependencyRecommendationsPlainArgs(GetRemediationRunApplicationDependencyRecommendationsPlainArgs $) {
        this.filters = $.filters;
        this.gav = $.gav;
        this.remediationRunId = $.remediationRunId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRemediationRunApplicationDependencyRecommendationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRemediationRunApplicationDependencyRecommendationsPlainArgs $;

        public Builder() {
            $ = new GetRemediationRunApplicationDependencyRecommendationsPlainArgs();
        }

        public Builder(GetRemediationRunApplicationDependencyRecommendationsPlainArgs defaults) {
            $ = new GetRemediationRunApplicationDependencyRecommendationsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetRemediationRunApplicationDependencyRecommendationsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetRemediationRunApplicationDependencyRecommendationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param gav A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
         * 
         * @return builder
         * 
         */
        public Builder gav(@Nullable String gav) {
            $.gav = gav;
            return this;
        }

        /**
         * @param remediationRunId Unique Remediation Run identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder remediationRunId(String remediationRunId) {
            $.remediationRunId = remediationRunId;
            return this;
        }

        public GetRemediationRunApplicationDependencyRecommendationsPlainArgs build() {
            $.remediationRunId = Objects.requireNonNull($.remediationRunId, "expected parameter 'remediationRunId' to be non-null");
            return $;
        }
    }

}
