// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Adm.inputs.GetRemediationRunsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRemediationRunsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRemediationRunsArgs Empty = new GetRemediationRunsArgs();

    /**
     * A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetRemediationRunsFilterArgs>> filters;

    public Optional<Output<List<GetRemediationRunsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A filter to return only resources that match the specified Remediation Recipe identifier.
     * 
     */
    @Import(name="remediationRecipeId")
    private @Nullable Output<String> remediationRecipeId;

    /**
     * @return A filter to return only resources that match the specified Remediation Recipe identifier.
     * 
     */
    public Optional<Output<String>> remediationRecipeId() {
        return Optional.ofNullable(this.remediationRecipeId);
    }

    /**
     * A filter to return only Remediation Runs that match the specified lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only Remediation Runs that match the specified lifecycleState.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetRemediationRunsArgs() {}

    private GetRemediationRunsArgs(GetRemediationRunsArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.remediationRecipeId = $.remediationRecipeId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRemediationRunsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRemediationRunsArgs $;

        public Builder() {
            $ = new GetRemediationRunsArgs();
        }

        public Builder(GetRemediationRunsArgs defaults) {
            $ = new GetRemediationRunsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetRemediationRunsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetRemediationRunsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetRemediationRunsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param remediationRecipeId A filter to return only resources that match the specified Remediation Recipe identifier.
         * 
         * @return builder
         * 
         */
        public Builder remediationRecipeId(@Nullable Output<String> remediationRecipeId) {
            $.remediationRecipeId = remediationRecipeId;
            return this;
        }

        /**
         * @param remediationRecipeId A filter to return only resources that match the specified Remediation Recipe identifier.
         * 
         * @return builder
         * 
         */
        public Builder remediationRecipeId(String remediationRecipeId) {
            return remediationRecipeId(Output.of(remediationRecipeId));
        }

        /**
         * @param state A filter to return only Remediation Runs that match the specified lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only Remediation Runs that match the specified lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetRemediationRunsArgs build() {
            return $;
        }
    }

}
