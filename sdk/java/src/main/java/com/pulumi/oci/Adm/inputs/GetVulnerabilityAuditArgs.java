// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetVulnerabilityAuditArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVulnerabilityAuditArgs Empty = new GetVulnerabilityAuditArgs();

    /**
     * Unique Vulnerability Audit identifier path parameter.
     * 
     */
    @Import(name="vulnerabilityAuditId", required=true)
    private Output<String> vulnerabilityAuditId;

    /**
     * @return Unique Vulnerability Audit identifier path parameter.
     * 
     */
    public Output<String> vulnerabilityAuditId() {
        return this.vulnerabilityAuditId;
    }

    private GetVulnerabilityAuditArgs() {}

    private GetVulnerabilityAuditArgs(GetVulnerabilityAuditArgs $) {
        this.vulnerabilityAuditId = $.vulnerabilityAuditId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVulnerabilityAuditArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVulnerabilityAuditArgs $;

        public Builder() {
            $ = new GetVulnerabilityAuditArgs();
        }

        public Builder(GetVulnerabilityAuditArgs defaults) {
            $ = new GetVulnerabilityAuditArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param vulnerabilityAuditId Unique Vulnerability Audit identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder vulnerabilityAuditId(Output<String> vulnerabilityAuditId) {
            $.vulnerabilityAuditId = vulnerabilityAuditId;
            return this;
        }

        /**
         * @param vulnerabilityAuditId Unique Vulnerability Audit identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder vulnerabilityAuditId(String vulnerabilityAuditId) {
            return vulnerabilityAuditId(Output.of(vulnerabilityAuditId));
        }

        public GetVulnerabilityAuditArgs build() {
            $.vulnerabilityAuditId = Objects.requireNonNull($.vulnerabilityAuditId, "expected parameter 'vulnerabilityAuditId' to be non-null");
            return $;
        }
    }

}
