// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Adm.inputs.RemediationRecipeDetectConfigurationArgs;
import com.pulumi.oci.Adm.inputs.RemediationRecipeNetworkConfigurationArgs;
import com.pulumi.oci.Adm.inputs.RemediationRecipeScmConfigurationArgs;
import com.pulumi.oci.Adm.inputs.RemediationRecipeVerifyConfigurationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RemediationRecipeState extends com.pulumi.resources.ResourceArgs {

    public static final RemediationRecipeState Empty = new RemediationRecipeState();

    /**
     * (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A configuration to define the constraints when detecting vulnerable dependencies and recommending remediations.
     * 
     */
    @Import(name="detectConfiguration")
    private @Nullable Output<RemediationRecipeDetectConfigurationArgs> detectConfiguration;

    /**
     * @return (Updatable) A configuration to define the constraints when detecting vulnerable dependencies and recommending remediations.
     * 
     */
    public Optional<Output<RemediationRecipeDetectConfigurationArgs>> detectConfiguration() {
        return Optional.ofNullable(this.detectConfiguration);
    }

    /**
     * (Updatable) The name of the remediation recipe.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The name of the remediation recipe.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
     * 
     */
    @Import(name="isRunTriggeredOnKbChange")
    private @Nullable Output<Boolean> isRunTriggeredOnKbChange;

    /**
     * @return (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
     * 
     */
    public Optional<Output<Boolean>> isRunTriggeredOnKbChange() {
        return Optional.ofNullable(this.isRunTriggeredOnKbChange);
    }

    /**
     * (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    @Import(name="knowledgeBaseId")
    private @Nullable Output<String> knowledgeBaseId;

    /**
     * @return (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    public Optional<Output<String>> knowledgeBaseId() {
        return Optional.ofNullable(this.knowledgeBaseId);
    }

    /**
     * (Updatable) A network configuration defines the required network characteristics for the remediation run of the recipe to access the source repository and/or verify build services.
     * 
     */
    @Import(name="networkConfiguration")
    private @Nullable Output<RemediationRecipeNetworkConfigurationArgs> networkConfiguration;

    /**
     * @return (Updatable) A network configuration defines the required network characteristics for the remediation run of the recipe to access the source repository and/or verify build services.
     * 
     */
    public Optional<Output<RemediationRecipeNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    /**
     * (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
     * 
     */
    @Import(name="scmConfiguration")
    private @Nullable Output<RemediationRecipeScmConfigurationArgs> scmConfiguration;

    /**
     * @return (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
     * 
     */
    public Optional<Output<RemediationRecipeScmConfigurationArgs>> scmConfiguration() {
        return Optional.ofNullable(this.scmConfiguration);
    }

    /**
     * (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
     * 
     */
    @Import(name="verifyConfiguration")
    private @Nullable Output<RemediationRecipeVerifyConfigurationArgs> verifyConfiguration;

    /**
     * @return (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
     * 
     */
    public Optional<Output<RemediationRecipeVerifyConfigurationArgs>> verifyConfiguration() {
        return Optional.ofNullable(this.verifyConfiguration);
    }

    private RemediationRecipeState() {}

    private RemediationRecipeState(RemediationRecipeState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.detectConfiguration = $.detectConfiguration;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isRunTriggeredOnKbChange = $.isRunTriggeredOnKbChange;
        this.knowledgeBaseId = $.knowledgeBaseId;
        this.networkConfiguration = $.networkConfiguration;
        this.scmConfiguration = $.scmConfiguration;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.verifyConfiguration = $.verifyConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemediationRecipeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemediationRecipeState $;

        public Builder() {
            $ = new RemediationRecipeState();
        }

        public Builder(RemediationRecipeState defaults) {
            $ = new RemediationRecipeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param detectConfiguration (Updatable) A configuration to define the constraints when detecting vulnerable dependencies and recommending remediations.
         * 
         * @return builder
         * 
         */
        public Builder detectConfiguration(@Nullable Output<RemediationRecipeDetectConfigurationArgs> detectConfiguration) {
            $.detectConfiguration = detectConfiguration;
            return this;
        }

        /**
         * @param detectConfiguration (Updatable) A configuration to define the constraints when detecting vulnerable dependencies and recommending remediations.
         * 
         * @return builder
         * 
         */
        public Builder detectConfiguration(RemediationRecipeDetectConfigurationArgs detectConfiguration) {
            return detectConfiguration(Output.of(detectConfiguration));
        }

        /**
         * @param displayName (Updatable) The name of the remediation recipe.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the remediation recipe.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isRunTriggeredOnKbChange (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
         * 
         * @return builder
         * 
         */
        public Builder isRunTriggeredOnKbChange(@Nullable Output<Boolean> isRunTriggeredOnKbChange) {
            $.isRunTriggeredOnKbChange = isRunTriggeredOnKbChange;
            return this;
        }

        /**
         * @param isRunTriggeredOnKbChange (Updatable) Boolean indicating if a run should be automatically triggered once the knowledge base is updated.
         * 
         * @return builder
         * 
         */
        public Builder isRunTriggeredOnKbChange(Boolean isRunTriggeredOnKbChange) {
            return isRunTriggeredOnKbChange(Output.of(isRunTriggeredOnKbChange));
        }

        /**
         * @param knowledgeBaseId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(@Nullable Output<String> knowledgeBaseId) {
            $.knowledgeBaseId = knowledgeBaseId;
            return this;
        }

        /**
         * @param knowledgeBaseId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseId(String knowledgeBaseId) {
            return knowledgeBaseId(Output.of(knowledgeBaseId));
        }

        /**
         * @param networkConfiguration (Updatable) A network configuration defines the required network characteristics for the remediation run of the recipe to access the source repository and/or verify build services.
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(@Nullable Output<RemediationRecipeNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        /**
         * @param networkConfiguration (Updatable) A network configuration defines the required network characteristics for the remediation run of the recipe to access the source repository and/or verify build services.
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(RemediationRecipeNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        /**
         * @param scmConfiguration (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
         * 
         * @return builder
         * 
         */
        public Builder scmConfiguration(@Nullable Output<RemediationRecipeScmConfigurationArgs> scmConfiguration) {
            $.scmConfiguration = scmConfiguration;
            return this;
        }

        /**
         * @param scmConfiguration (Updatable) A configuration for the Source Code Management tool/platform used by a remediation recipe.
         * 
         * @return builder
         * 
         */
        public Builder scmConfiguration(RemediationRecipeScmConfigurationArgs scmConfiguration) {
            return scmConfiguration(Output.of(scmConfiguration));
        }

        /**
         * @param state (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the Remediation Recipe. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param verifyConfiguration (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
         * 
         * @return builder
         * 
         */
        public Builder verifyConfiguration(@Nullable Output<RemediationRecipeVerifyConfigurationArgs> verifyConfiguration) {
            $.verifyConfiguration = verifyConfiguration;
            return this;
        }

        /**
         * @param verifyConfiguration (Updatable) The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
         * 
         * @return builder
         * 
         */
        public Builder verifyConfiguration(RemediationRecipeVerifyConfigurationArgs verifyConfiguration) {
            return verifyConfiguration(Output.of(verifyConfiguration));
        }

        public RemediationRecipeState build() {
            return $;
        }
    }

}
