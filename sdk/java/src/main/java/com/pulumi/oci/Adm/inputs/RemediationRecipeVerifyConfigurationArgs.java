// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RemediationRecipeVerifyConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RemediationRecipeVerifyConfigurationArgs Empty = new RemediationRecipeVerifyConfigurationArgs();

    /**
     * (Updatable) Additional key-value pairs passed as parameters to the build service when running an experiment.
     * 
     */
    @Import(name="additionalParameters")
    private @Nullable Output<Map<String,String>> additionalParameters;

    /**
     * @return (Updatable) Additional key-value pairs passed as parameters to the build service when running an experiment.
     * 
     */
    public Optional<Output<Map<String,String>>> additionalParameters() {
        return Optional.ofNullable(this.additionalParameters);
    }

    /**
     * (Updatable) The type of Build Service.
     * 
     */
    @Import(name="buildServiceType", required=true)
    private Output<String> buildServiceType;

    /**
     * @return (Updatable) The type of Build Service.
     * 
     */
    public Output<String> buildServiceType() {
        return this.buildServiceType;
    }

    /**
     * (Updatable) The URL that locates the Jenkins pipeline.
     * 
     */
    @Import(name="jenkinsUrl")
    private @Nullable Output<String> jenkinsUrl;

    /**
     * @return (Updatable) The URL that locates the Jenkins pipeline.
     * 
     */
    public Optional<Output<String>> jenkinsUrl() {
        return Optional.ofNullable(this.jenkinsUrl);
    }

    /**
     * (Updatable) The name of the Jenkins pipeline job that identifies the build pipeline.
     * 
     */
    @Import(name="jobName")
    private @Nullable Output<String> jobName;

    /**
     * @return (Updatable) The name of the Jenkins pipeline job that identifies the build pipeline.
     * 
     */
    public Optional<Output<String>> jobName() {
        return Optional.ofNullable(this.jobName);
    }

    /**
     * (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Private Access Token (PAT) Secret. The PAT provides the credentials to access the Jenkins Pipeline.
     * 
     */
    @Import(name="patSecretId")
    private @Nullable Output<String> patSecretId;

    /**
     * @return (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Private Access Token (PAT) Secret. The PAT provides the credentials to access the Jenkins Pipeline.
     * 
     */
    public Optional<Output<String>> patSecretId() {
        return Optional.ofNullable(this.patSecretId);
    }

    /**
     * (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the user&#39;s DevOps Build Pipeline.
     * 
     */
    @Import(name="pipelineId")
    private @Nullable Output<String> pipelineId;

    /**
     * @return (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the user&#39;s DevOps Build Pipeline.
     * 
     */
    public Optional<Output<String>> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }

    /**
     * (Updatable) The location of the repository where the GitHub Actions is defined. For Non-Enterprise GitHub the expected format is &lt;https://github.com/[owner]/[repoName]&gt; For Enterprise GitHub the expected format is http(s)://[hostname]/api/v3/repos/[owner]/[repoName]
     * 
     */
    @Import(name="repositoryUrl")
    private @Nullable Output<String> repositoryUrl;

    /**
     * @return (Updatable) The location of the repository where the GitHub Actions is defined. For Non-Enterprise GitHub the expected format is &lt;https://github.com/[owner]/[repoName]&gt; For Enterprise GitHub the expected format is http(s)://[hostname]/api/v3/repos/[owner]/[repoName]
     * 
     */
    public Optional<Output<String>> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }

    /**
     * (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the trigger Secret. The Secret provides access to the trigger for a GitLab pipeline.
     * 
     */
    @Import(name="triggerSecretId")
    private @Nullable Output<String> triggerSecretId;

    /**
     * @return (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the trigger Secret. The Secret provides access to the trigger for a GitLab pipeline.
     * 
     */
    public Optional<Output<String>> triggerSecretId() {
        return Optional.ofNullable(this.triggerSecretId);
    }

    /**
     * (Updatable) The username that will be used to authenticate with Jenkins.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return (Updatable) The username that will be used to authenticate with Jenkins.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    /**
     * (Updatable) The name of the GitHub Actions workflow that defines the build pipeline.
     * 
     */
    @Import(name="workflowName")
    private @Nullable Output<String> workflowName;

    /**
     * @return (Updatable) The name of the GitHub Actions workflow that defines the build pipeline.
     * 
     */
    public Optional<Output<String>> workflowName() {
        return Optional.ofNullable(this.workflowName);
    }

    private RemediationRecipeVerifyConfigurationArgs() {}

    private RemediationRecipeVerifyConfigurationArgs(RemediationRecipeVerifyConfigurationArgs $) {
        this.additionalParameters = $.additionalParameters;
        this.buildServiceType = $.buildServiceType;
        this.jenkinsUrl = $.jenkinsUrl;
        this.jobName = $.jobName;
        this.patSecretId = $.patSecretId;
        this.pipelineId = $.pipelineId;
        this.repositoryUrl = $.repositoryUrl;
        this.triggerSecretId = $.triggerSecretId;
        this.username = $.username;
        this.workflowName = $.workflowName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemediationRecipeVerifyConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemediationRecipeVerifyConfigurationArgs $;

        public Builder() {
            $ = new RemediationRecipeVerifyConfigurationArgs();
        }

        public Builder(RemediationRecipeVerifyConfigurationArgs defaults) {
            $ = new RemediationRecipeVerifyConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalParameters (Updatable) Additional key-value pairs passed as parameters to the build service when running an experiment.
         * 
         * @return builder
         * 
         */
        public Builder additionalParameters(@Nullable Output<Map<String,String>> additionalParameters) {
            $.additionalParameters = additionalParameters;
            return this;
        }

        /**
         * @param additionalParameters (Updatable) Additional key-value pairs passed as parameters to the build service when running an experiment.
         * 
         * @return builder
         * 
         */
        public Builder additionalParameters(Map<String,String> additionalParameters) {
            return additionalParameters(Output.of(additionalParameters));
        }

        /**
         * @param buildServiceType (Updatable) The type of Build Service.
         * 
         * @return builder
         * 
         */
        public Builder buildServiceType(Output<String> buildServiceType) {
            $.buildServiceType = buildServiceType;
            return this;
        }

        /**
         * @param buildServiceType (Updatable) The type of Build Service.
         * 
         * @return builder
         * 
         */
        public Builder buildServiceType(String buildServiceType) {
            return buildServiceType(Output.of(buildServiceType));
        }

        /**
         * @param jenkinsUrl (Updatable) The URL that locates the Jenkins pipeline.
         * 
         * @return builder
         * 
         */
        public Builder jenkinsUrl(@Nullable Output<String> jenkinsUrl) {
            $.jenkinsUrl = jenkinsUrl;
            return this;
        }

        /**
         * @param jenkinsUrl (Updatable) The URL that locates the Jenkins pipeline.
         * 
         * @return builder
         * 
         */
        public Builder jenkinsUrl(String jenkinsUrl) {
            return jenkinsUrl(Output.of(jenkinsUrl));
        }

        /**
         * @param jobName (Updatable) The name of the Jenkins pipeline job that identifies the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder jobName(@Nullable Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        /**
         * @param jobName (Updatable) The name of the Jenkins pipeline job that identifies the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        /**
         * @param patSecretId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Private Access Token (PAT) Secret. The PAT provides the credentials to access the Jenkins Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder patSecretId(@Nullable Output<String> patSecretId) {
            $.patSecretId = patSecretId;
            return this;
        }

        /**
         * @param patSecretId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Private Access Token (PAT) Secret. The PAT provides the credentials to access the Jenkins Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder patSecretId(String patSecretId) {
            return patSecretId(Output.of(patSecretId));
        }

        /**
         * @param pipelineId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the user&#39;s DevOps Build Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(@Nullable Output<String> pipelineId) {
            $.pipelineId = pipelineId;
            return this;
        }

        /**
         * @param pipelineId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the user&#39;s DevOps Build Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(String pipelineId) {
            return pipelineId(Output.of(pipelineId));
        }

        /**
         * @param repositoryUrl (Updatable) The location of the repository where the GitHub Actions is defined. For Non-Enterprise GitHub the expected format is &lt;https://github.com/[owner]/[repoName]&gt; For Enterprise GitHub the expected format is http(s)://[hostname]/api/v3/repos/[owner]/[repoName]
         * 
         * @return builder
         * 
         */
        public Builder repositoryUrl(@Nullable Output<String> repositoryUrl) {
            $.repositoryUrl = repositoryUrl;
            return this;
        }

        /**
         * @param repositoryUrl (Updatable) The location of the repository where the GitHub Actions is defined. For Non-Enterprise GitHub the expected format is &lt;https://github.com/[owner]/[repoName]&gt; For Enterprise GitHub the expected format is http(s)://[hostname]/api/v3/repos/[owner]/[repoName]
         * 
         * @return builder
         * 
         */
        public Builder repositoryUrl(String repositoryUrl) {
            return repositoryUrl(Output.of(repositoryUrl));
        }

        /**
         * @param triggerSecretId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the trigger Secret. The Secret provides access to the trigger for a GitLab pipeline.
         * 
         * @return builder
         * 
         */
        public Builder triggerSecretId(@Nullable Output<String> triggerSecretId) {
            $.triggerSecretId = triggerSecretId;
            return this;
        }

        /**
         * @param triggerSecretId (Updatable) The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the trigger Secret. The Secret provides access to the trigger for a GitLab pipeline.
         * 
         * @return builder
         * 
         */
        public Builder triggerSecretId(String triggerSecretId) {
            return triggerSecretId(Output.of(triggerSecretId));
        }

        /**
         * @param username (Updatable) The username that will be used to authenticate with Jenkins.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username (Updatable) The username that will be used to authenticate with Jenkins.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param workflowName (Updatable) The name of the GitHub Actions workflow that defines the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder workflowName(@Nullable Output<String> workflowName) {
            $.workflowName = workflowName;
            return this;
        }

        /**
         * @param workflowName (Updatable) The name of the GitHub Actions workflow that defines the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder workflowName(String workflowName) {
            return workflowName(Output.of(workflowName));
        }

        public RemediationRecipeVerifyConfigurationArgs build() {
            if ($.buildServiceType == null) {
                throw new MissingRequiredPropertyException("RemediationRecipeVerifyConfigurationArgs", "buildServiceType");
            }
            return $;
        }
    }

}
