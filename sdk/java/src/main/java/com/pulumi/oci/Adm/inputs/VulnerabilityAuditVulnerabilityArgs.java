// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VulnerabilityAuditVulnerabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityAuditVulnerabilityArgs Empty = new VulnerabilityAuditVulnerabilityArgs();

    /**
     * Common Vulnerability Scoring System (CVSS) Version 2.
     * 
     */
    @Import(name="cvssV2score")
    private @Nullable Output<Double> cvssV2score;

    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 2.
     * 
     */
    public Optional<Output<Double>> cvssV2score() {
        return Optional.ofNullable(this.cvssV2score);
    }

    /**
     * Common Vulnerability Scoring System (CVSS) Version 3.
     * 
     */
    @Import(name="cvssV3score")
    private @Nullable Output<Double> cvssV3score;

    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 3.
     * 
     */
    public Optional<Output<Double>> cvssV3score() {
        return Optional.ofNullable(this.cvssV3score);
    }

    /**
     * Unique vulnerability identifier, e.g. CVE-1999-0067.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Unique vulnerability identifier, e.g. CVE-1999-0067.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Indicates if the vulnerability was ignored according to the audit configuration.
     * 
     */
    @Import(name="isIgnored")
    private @Nullable Output<Boolean> isIgnored;

    /**
     * @return Indicates if the vulnerability was ignored according to the audit configuration.
     * 
     */
    public Optional<Output<Boolean>> isIgnored() {
        return Optional.ofNullable(this.isIgnored);
    }

    private VulnerabilityAuditVulnerabilityArgs() {}

    private VulnerabilityAuditVulnerabilityArgs(VulnerabilityAuditVulnerabilityArgs $) {
        this.cvssV2score = $.cvssV2score;
        this.cvssV3score = $.cvssV3score;
        this.id = $.id;
        this.isIgnored = $.isIgnored;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityAuditVulnerabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityAuditVulnerabilityArgs $;

        public Builder() {
            $ = new VulnerabilityAuditVulnerabilityArgs();
        }

        public Builder(VulnerabilityAuditVulnerabilityArgs defaults) {
            $ = new VulnerabilityAuditVulnerabilityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cvssV2score Common Vulnerability Scoring System (CVSS) Version 2.
         * 
         * @return builder
         * 
         */
        public Builder cvssV2score(@Nullable Output<Double> cvssV2score) {
            $.cvssV2score = cvssV2score;
            return this;
        }

        /**
         * @param cvssV2score Common Vulnerability Scoring System (CVSS) Version 2.
         * 
         * @return builder
         * 
         */
        public Builder cvssV2score(Double cvssV2score) {
            return cvssV2score(Output.of(cvssV2score));
        }

        /**
         * @param cvssV3score Common Vulnerability Scoring System (CVSS) Version 3.
         * 
         * @return builder
         * 
         */
        public Builder cvssV3score(@Nullable Output<Double> cvssV3score) {
            $.cvssV3score = cvssV3score;
            return this;
        }

        /**
         * @param cvssV3score Common Vulnerability Scoring System (CVSS) Version 3.
         * 
         * @return builder
         * 
         */
        public Builder cvssV3score(Double cvssV3score) {
            return cvssV3score(Output.of(cvssV3score));
        }

        /**
         * @param id Unique vulnerability identifier, e.g. CVE-1999-0067.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Unique vulnerability identifier, e.g. CVE-1999-0067.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param isIgnored Indicates if the vulnerability was ignored according to the audit configuration.
         * 
         * @return builder
         * 
         */
        public Builder isIgnored(@Nullable Output<Boolean> isIgnored) {
            $.isIgnored = isIgnored;
            return this;
        }

        /**
         * @param isIgnored Indicates if the vulnerability was ignored according to the audit configuration.
         * 
         * @return builder
         * 
         */
        public Builder isIgnored(Boolean isIgnored) {
            return isIgnored(Output.of(isIgnored));
        }

        public VulnerabilityAuditVulnerabilityArgs build() {
            return $;
        }
    }

}
