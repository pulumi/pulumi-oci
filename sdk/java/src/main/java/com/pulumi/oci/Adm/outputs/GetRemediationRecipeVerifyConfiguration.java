// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRemediationRecipeVerifyConfiguration {
    /**
     * @return Additional key-value pairs passed as parameters to the build service when running an experiment.
     * 
     */
    private Map<String,Object> additionalParameters;
    /**
     * @return The type of Build Service.
     * 
     */
    private String buildServiceType;
    /**
     * @return The URL that locates the Jenkins pipeline.
     * 
     */
    private String jenkinsUrl;
    /**
     * @return The name of the Jenkins pipeline job that identifies the build pipeline.
     * 
     */
    private String jobName;
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Private Access Token (PAT) Secret. The PAT provides the credentials to access the Jenkins Pipeline.
     * 
     */
    private String patSecretId;
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the user&#39;s DevOps Build Pipeline.
     * 
     */
    private String pipelineId;
    /**
     * @return The location of the repository where the GitHub Actions is defined. For Non-Enterprise GitHub the expected format is https://github.com/[owner]/[repoName] For Enterprise GitHub the expected format is http(s)://[hostname]/api/v3/repos/[owner]/[repoName]
     * 
     */
    private String repositoryUrl;
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the trigger Secret. The Secret provides access to the trigger for a GitLab pipeline.
     * 
     */
    private String triggerSecretId;
    /**
     * @return The username that will be used to authenticate with Jenkins.
     * 
     */
    private String username;
    /**
     * @return The name of the GitHub Actions workflow that defines the build pipeline.
     * 
     */
    private String workflowName;

    private GetRemediationRecipeVerifyConfiguration() {}
    /**
     * @return Additional key-value pairs passed as parameters to the build service when running an experiment.
     * 
     */
    public Map<String,Object> additionalParameters() {
        return this.additionalParameters;
    }
    /**
     * @return The type of Build Service.
     * 
     */
    public String buildServiceType() {
        return this.buildServiceType;
    }
    /**
     * @return The URL that locates the Jenkins pipeline.
     * 
     */
    public String jenkinsUrl() {
        return this.jenkinsUrl;
    }
    /**
     * @return The name of the Jenkins pipeline job that identifies the build pipeline.
     * 
     */
    public String jobName() {
        return this.jobName;
    }
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Private Access Token (PAT) Secret. The PAT provides the credentials to access the Jenkins Pipeline.
     * 
     */
    public String patSecretId() {
        return this.patSecretId;
    }
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the user&#39;s DevOps Build Pipeline.
     * 
     */
    public String pipelineId() {
        return this.pipelineId;
    }
    /**
     * @return The location of the repository where the GitHub Actions is defined. For Non-Enterprise GitHub the expected format is https://github.com/[owner]/[repoName] For Enterprise GitHub the expected format is http(s)://[hostname]/api/v3/repos/[owner]/[repoName]
     * 
     */
    public String repositoryUrl() {
        return this.repositoryUrl;
    }
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the trigger Secret. The Secret provides access to the trigger for a GitLab pipeline.
     * 
     */
    public String triggerSecretId() {
        return this.triggerSecretId;
    }
    /**
     * @return The username that will be used to authenticate with Jenkins.
     * 
     */
    public String username() {
        return this.username;
    }
    /**
     * @return The name of the GitHub Actions workflow that defines the build pipeline.
     * 
     */
    public String workflowName() {
        return this.workflowName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemediationRecipeVerifyConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> additionalParameters;
        private String buildServiceType;
        private String jenkinsUrl;
        private String jobName;
        private String patSecretId;
        private String pipelineId;
        private String repositoryUrl;
        private String triggerSecretId;
        private String username;
        private String workflowName;
        public Builder() {}
        public Builder(GetRemediationRecipeVerifyConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalParameters = defaults.additionalParameters;
    	      this.buildServiceType = defaults.buildServiceType;
    	      this.jenkinsUrl = defaults.jenkinsUrl;
    	      this.jobName = defaults.jobName;
    	      this.patSecretId = defaults.patSecretId;
    	      this.pipelineId = defaults.pipelineId;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.triggerSecretId = defaults.triggerSecretId;
    	      this.username = defaults.username;
    	      this.workflowName = defaults.workflowName;
        }

        @CustomType.Setter
        public Builder additionalParameters(Map<String,Object> additionalParameters) {
            this.additionalParameters = Objects.requireNonNull(additionalParameters);
            return this;
        }
        @CustomType.Setter
        public Builder buildServiceType(String buildServiceType) {
            this.buildServiceType = Objects.requireNonNull(buildServiceType);
            return this;
        }
        @CustomType.Setter
        public Builder jenkinsUrl(String jenkinsUrl) {
            this.jenkinsUrl = Objects.requireNonNull(jenkinsUrl);
            return this;
        }
        @CustomType.Setter
        public Builder jobName(String jobName) {
            this.jobName = Objects.requireNonNull(jobName);
            return this;
        }
        @CustomType.Setter
        public Builder patSecretId(String patSecretId) {
            this.patSecretId = Objects.requireNonNull(patSecretId);
            return this;
        }
        @CustomType.Setter
        public Builder pipelineId(String pipelineId) {
            this.pipelineId = Objects.requireNonNull(pipelineId);
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(String repositoryUrl) {
            this.repositoryUrl = Objects.requireNonNull(repositoryUrl);
            return this;
        }
        @CustomType.Setter
        public Builder triggerSecretId(String triggerSecretId) {
            this.triggerSecretId = Objects.requireNonNull(triggerSecretId);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        @CustomType.Setter
        public Builder workflowName(String workflowName) {
            this.workflowName = Objects.requireNonNull(workflowName);
            return this;
        }
        public GetRemediationRecipeVerifyConfiguration build() {
            final var _resultValue = new GetRemediationRecipeVerifyConfiguration();
            _resultValue.additionalParameters = additionalParameters;
            _resultValue.buildServiceType = buildServiceType;
            _resultValue.jenkinsUrl = jenkinsUrl;
            _resultValue.jobName = jobName;
            _resultValue.patSecretId = patSecretId;
            _resultValue.pipelineId = pipelineId;
            _resultValue.repositoryUrl = repositoryUrl;
            _resultValue.triggerSecretId = triggerSecretId;
            _resultValue.username = username;
            _resultValue.workflowName = workflowName;
            return _resultValue;
        }
    }
}
