// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Adm.outputs.GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration;
import com.pulumi.oci.Adm.outputs.GetRemediationRecipesRemediationRecipeCollectionItemNetworkConfiguration;
import com.pulumi.oci.Adm.outputs.GetRemediationRecipesRemediationRecipeCollectionItemScmConfiguration;
import com.pulumi.oci.Adm.outputs.GetRemediationRecipesRemediationRecipeCollectionItemVerifyConfiguration;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRemediationRecipesRemediationRecipeCollectionItem {
    /**
     * @return A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A configuration to define the constraints when detecting vulnerable dependencies.
     * 
     */
    private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration> detectConfigurations;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     * 
     */
    private @Nullable String id;
    /**
     * @return Boolean indicating if a run should be automatically triggered once the Knowledge Base contents are updated.
     * 
     */
    private @Nullable Boolean isRunTriggeredOnKbChange;
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    private @Nullable String knowledgeBaseId;
    /**
     * @return A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
     * 
     */
    private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemNetworkConfiguration> networkConfigurations;
    /**
     * @return A configuration for the Source Code Management tool/platform used by a remediation recipe.
     * 
     */
    private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemScmConfiguration> scmConfigurations;
    /**
     * @return A filter to return only Remediation Recipes that match the specified lifecycleState.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
     * 
     */
    private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemVerifyConfiguration> verifyConfigurations;

    private GetRemediationRecipesRemediationRecipeCollectionItem() {}
    /**
     * @return A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A configuration to define the constraints when detecting vulnerable dependencies.
     * 
     */
    public List<GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration> detectConfigurations() {
        return this.detectConfigurations == null ? List.of() : this.detectConfigurations;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Boolean indicating if a run should be automatically triggered once the Knowledge Base contents are updated.
     * 
     */
    public Optional<Boolean> isRunTriggeredOnKbChange() {
        return Optional.ofNullable(this.isRunTriggeredOnKbChange);
    }
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    public Optional<String> knowledgeBaseId() {
        return Optional.ofNullable(this.knowledgeBaseId);
    }
    /**
     * @return A network configuration defines the required network characteristics for an ADM remediation recipe. A network configuration is required if the build service is one of: GitHub Actions, GitLab Pipeline, or Jenkins Pipeline.
     * 
     */
    public List<GetRemediationRecipesRemediationRecipeCollectionItemNetworkConfiguration> networkConfigurations() {
        return this.networkConfigurations == null ? List.of() : this.networkConfigurations;
    }
    /**
     * @return A configuration for the Source Code Management tool/platform used by a remediation recipe.
     * 
     */
    public List<GetRemediationRecipesRemediationRecipeCollectionItemScmConfiguration> scmConfigurations() {
        return this.scmConfigurations == null ? List.of() : this.scmConfigurations;
    }
    /**
     * @return A filter to return only Remediation Recipes that match the specified lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The creation date and time of the Remediation Recipe (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the Remediation Recipe was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The Verify stage configuration specifies a build service to run a pipeline for the recommended code changes. The build pipeline will be initiated to ensure that there is no breaking change after the dependency versions have been updated in source to avoid vulnerabilities.
     * 
     */
    public List<GetRemediationRecipesRemediationRecipeCollectionItemVerifyConfiguration> verifyConfigurations() {
        return this.verifyConfigurations == null ? List.of() : this.verifyConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemediationRecipesRemediationRecipeCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration> detectConfigurations;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isRunTriggeredOnKbChange;
        private @Nullable String knowledgeBaseId;
        private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemNetworkConfiguration> networkConfigurations;
        private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemScmConfiguration> scmConfigurations;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemVerifyConfiguration> verifyConfigurations;
        public Builder() {}
        public Builder(GetRemediationRecipesRemediationRecipeCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.detectConfigurations = defaults.detectConfigurations;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isRunTriggeredOnKbChange = defaults.isRunTriggeredOnKbChange;
    	      this.knowledgeBaseId = defaults.knowledgeBaseId;
    	      this.networkConfigurations = defaults.networkConfigurations;
    	      this.scmConfigurations = defaults.scmConfigurations;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.verifyConfigurations = defaults.verifyConfigurations;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder detectConfigurations(@Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration> detectConfigurations) {
            this.detectConfigurations = detectConfigurations;
            return this;
        }
        public Builder detectConfigurations(GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration... detectConfigurations) {
            return detectConfigurations(List.of(detectConfigurations));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isRunTriggeredOnKbChange(@Nullable Boolean isRunTriggeredOnKbChange) {
            this.isRunTriggeredOnKbChange = isRunTriggeredOnKbChange;
            return this;
        }
        @CustomType.Setter
        public Builder knowledgeBaseId(@Nullable String knowledgeBaseId) {
            this.knowledgeBaseId = knowledgeBaseId;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfigurations(@Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemNetworkConfiguration> networkConfigurations) {
            this.networkConfigurations = networkConfigurations;
            return this;
        }
        public Builder networkConfigurations(GetRemediationRecipesRemediationRecipeCollectionItemNetworkConfiguration... networkConfigurations) {
            return networkConfigurations(List.of(networkConfigurations));
        }
        @CustomType.Setter
        public Builder scmConfigurations(@Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemScmConfiguration> scmConfigurations) {
            this.scmConfigurations = scmConfigurations;
            return this;
        }
        public Builder scmConfigurations(GetRemediationRecipesRemediationRecipeCollectionItemScmConfiguration... scmConfigurations) {
            return scmConfigurations(List.of(scmConfigurations));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder verifyConfigurations(@Nullable List<GetRemediationRecipesRemediationRecipeCollectionItemVerifyConfiguration> verifyConfigurations) {
            this.verifyConfigurations = verifyConfigurations;
            return this;
        }
        public Builder verifyConfigurations(GetRemediationRecipesRemediationRecipeCollectionItemVerifyConfiguration... verifyConfigurations) {
            return verifyConfigurations(List.of(verifyConfigurations));
        }
        public GetRemediationRecipesRemediationRecipeCollectionItem build() {
            final var o = new GetRemediationRecipesRemediationRecipeCollectionItem();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.detectConfigurations = detectConfigurations;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isRunTriggeredOnKbChange = isRunTriggeredOnKbChange;
            o.knowledgeBaseId = knowledgeBaseId;
            o.networkConfigurations = networkConfigurations;
            o.scmConfigurations = scmConfigurations;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.verifyConfigurations = verifyConfigurations;
            return o;
        }
    }
}
