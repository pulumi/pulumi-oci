// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration {
    /**
     * @return The list of dependencies to be ignored by the recommendation algorithm. The dependency pattern is matched against the &#39;group:artifact:version&#39; or the purl of a dependency. An asterisk (*) at the end in the dependency pattern acts as a wildcard and matches zero or more characters.
     * 
     */
    private @Nullable List<String> exclusions;
    /**
     * @return The maximum Common Vulnerability Scoring System Version 2 (CVSS V2) score. An artifact with a CVSS V2 score below this value is not considered for patching.
     * 
     */
    private @Nullable Double maxPermissibleCvssV2score;
    /**
     * @return The maximum Common Vulnerability Scoring System Version 3 (CVSS V3) score. An artifact with a CVSS V3 score below this value is not considered for patching.
     * 
     */
    private @Nullable Double maxPermissibleCvssV3score;
    /**
     * @return The upgrade policy for recommendations. The `Nearest` upgrade policy upgrades a dependency to the oldest version that meets both of the following criteria: it is newer than the current version and it is not affected by a vulnerability.
     * 
     */
    private @Nullable String upgradePolicy;

    private GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration() {}
    /**
     * @return The list of dependencies to be ignored by the recommendation algorithm. The dependency pattern is matched against the &#39;group:artifact:version&#39; or the purl of a dependency. An asterisk (*) at the end in the dependency pattern acts as a wildcard and matches zero or more characters.
     * 
     */
    public List<String> exclusions() {
        return this.exclusions == null ? List.of() : this.exclusions;
    }
    /**
     * @return The maximum Common Vulnerability Scoring System Version 2 (CVSS V2) score. An artifact with a CVSS V2 score below this value is not considered for patching.
     * 
     */
    public Optional<Double> maxPermissibleCvssV2score() {
        return Optional.ofNullable(this.maxPermissibleCvssV2score);
    }
    /**
     * @return The maximum Common Vulnerability Scoring System Version 3 (CVSS V3) score. An artifact with a CVSS V3 score below this value is not considered for patching.
     * 
     */
    public Optional<Double> maxPermissibleCvssV3score() {
        return Optional.ofNullable(this.maxPermissibleCvssV3score);
    }
    /**
     * @return The upgrade policy for recommendations. The `Nearest` upgrade policy upgrades a dependency to the oldest version that meets both of the following criteria: it is newer than the current version and it is not affected by a vulnerability.
     * 
     */
    public Optional<String> upgradePolicy() {
        return Optional.ofNullable(this.upgradePolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> exclusions;
        private @Nullable Double maxPermissibleCvssV2score;
        private @Nullable Double maxPermissibleCvssV3score;
        private @Nullable String upgradePolicy;
        public Builder() {}
        public Builder(GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusions = defaults.exclusions;
    	      this.maxPermissibleCvssV2score = defaults.maxPermissibleCvssV2score;
    	      this.maxPermissibleCvssV3score = defaults.maxPermissibleCvssV3score;
    	      this.upgradePolicy = defaults.upgradePolicy;
        }

        @CustomType.Setter
        public Builder exclusions(@Nullable List<String> exclusions) {
            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(String... exclusions) {
            return exclusions(List.of(exclusions));
        }
        @CustomType.Setter
        public Builder maxPermissibleCvssV2score(@Nullable Double maxPermissibleCvssV2score) {
            this.maxPermissibleCvssV2score = maxPermissibleCvssV2score;
            return this;
        }
        @CustomType.Setter
        public Builder maxPermissibleCvssV3score(@Nullable Double maxPermissibleCvssV3score) {
            this.maxPermissibleCvssV3score = maxPermissibleCvssV3score;
            return this;
        }
        @CustomType.Setter
        public Builder upgradePolicy(@Nullable String upgradePolicy) {
            this.upgradePolicy = upgradePolicy;
            return this;
        }
        public GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration build() {
            final var o = new GetRemediationRecipesRemediationRecipeCollectionItemDetectConfiguration();
            o.exclusions = exclusions;
            o.maxPermissibleCvssV2score = maxPermissibleCvssV2score;
            o.maxPermissibleCvssV3score = maxPermissibleCvssV3score;
            o.upgradePolicy = upgradePolicy;
            return o;
        }
    }
}
