// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Adm.outputs.GetRemediationRunStage;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRemediationRunResult {
    /**
     * @return The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
     * 
     */
    private String compartmentId;
    /**
     * @return The type of the current stage of the remediation run.
     * 
     */
    private String currentStageType;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The name of the remediation run.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
     * 
     */
    private String id;
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Remediation Recipe.
     * 
     */
    private String remediationRecipeId;
    private String remediationRunId;
    /**
     * @return The source that triggered the Remediation Recipe.
     * 
     */
    private String remediationRunSource;
    /**
     * @return The list of remediation run stage summaries.
     * 
     */
    private List<GetRemediationRunStage> stages;
    /**
     * @return The current lifecycle state of the remediation run.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The creation date and time of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time of the finish of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeFinished;
    /**
     * @return The date and time of the start of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeStarted;
    /**
     * @return The date and time the remediation run was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeUpdated;

    private GetRemediationRunResult() {}
    /**
     * @return The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The type of the current stage of the remediation run.
     * 
     */
    public String currentStageType() {
        return this.currentStageType;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The name of the remediation run.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Remediation Recipe.
     * 
     */
    public String remediationRecipeId() {
        return this.remediationRecipeId;
    }
    public String remediationRunId() {
        return this.remediationRunId;
    }
    /**
     * @return The source that triggered the Remediation Recipe.
     * 
     */
    public String remediationRunSource() {
        return this.remediationRunSource;
    }
    /**
     * @return The list of remediation run stage summaries.
     * 
     */
    public List<GetRemediationRunStage> stages() {
        return this.stages;
    }
    /**
     * @return The current lifecycle state of the remediation run.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The creation date and time of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time of the finish of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return The date and time of the start of the remediation run (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }
    /**
     * @return The date and time the remediation run was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemediationRunResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String currentStageType;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String remediationRecipeId;
        private String remediationRunId;
        private String remediationRunSource;
        private List<GetRemediationRunStage> stages;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeFinished;
        private String timeStarted;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetRemediationRunResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.currentStageType = defaults.currentStageType;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.remediationRecipeId = defaults.remediationRecipeId;
    	      this.remediationRunId = defaults.remediationRunId;
    	      this.remediationRunSource = defaults.remediationRunSource;
    	      this.stages = defaults.stages;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder currentStageType(String currentStageType) {
            if (currentStageType == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "currentStageType");
            }
            this.currentStageType = currentStageType;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder remediationRecipeId(String remediationRecipeId) {
            if (remediationRecipeId == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "remediationRecipeId");
            }
            this.remediationRecipeId = remediationRecipeId;
            return this;
        }
        @CustomType.Setter
        public Builder remediationRunId(String remediationRunId) {
            if (remediationRunId == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "remediationRunId");
            }
            this.remediationRunId = remediationRunId;
            return this;
        }
        @CustomType.Setter
        public Builder remediationRunSource(String remediationRunSource) {
            if (remediationRunSource == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "remediationRunSource");
            }
            this.remediationRunSource = remediationRunSource;
            return this;
        }
        @CustomType.Setter
        public Builder stages(List<GetRemediationRunStage> stages) {
            if (stages == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "stages");
            }
            this.stages = stages;
            return this;
        }
        public Builder stages(GetRemediationRunStage... stages) {
            return stages(List.of(stages));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            if (timeFinished == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "timeFinished");
            }
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            if (timeStarted == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "timeStarted");
            }
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetRemediationRunResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetRemediationRunResult build() {
            final var _resultValue = new GetRemediationRunResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.currentStageType = currentStageType;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.remediationRecipeId = remediationRecipeId;
            _resultValue.remediationRunId = remediationRunId;
            _resultValue.remediationRunSource = remediationRunSource;
            _resultValue.stages = stages;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
