// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Adm.outputs.GetRemediationRunStagesRemediationRunStageCollectionItemPipelineProperty;
import com.pulumi.oci.Adm.outputs.GetRemediationRunStagesRemediationRunStageCollectionItemPullRequestProperty;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRemediationRunStagesRemediationRunStageCollectionItem {
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.
     * 
     */
    private String auditId;
    /**
     * @return The next type of stage in the remediation run.
     * 
     */
    private String nextStageType;
    /**
     * @return Pipeline properties which result from the run of the verify stage.
     * 
     */
    private List<GetRemediationRunStagesRemediationRunStageCollectionItemPipelineProperty> pipelineProperties;
    /**
     * @return The previous type of stage in the remediation run.
     * 
     */
    private String previousStageType;
    /**
     * @return Pull request properties from recommend stage of the remediation run.
     * 
     */
    private List<GetRemediationRunStagesRemediationRunStageCollectionItemPullRequestProperty> pullRequestProperties;
    /**
     * @return Count of recommended application dependencies to update.
     * 
     */
    private Integer recommendedUpdatesCount;
    /**
     * @return Unique Remediation Run identifier path parameter.
     * 
     */
    private String remediationRunId;
    /**
     * @return A filter to return only Stages that match the specified status.
     * 
     */
    private String status;
    /**
     * @return Information about the current step within the stage.
     * 
     */
    private String summary;
    /**
     * @return The creation date and time of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time of the finish of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeFinished;
    /**
     * @return The date and time of the start of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeStarted;
    /**
     * @return A filter to return only Stages that match the specified type.
     * 
     */
    private String type;

    private GetRemediationRunStagesRemediationRunStageCollectionItem() {}
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.
     * 
     */
    public String auditId() {
        return this.auditId;
    }
    /**
     * @return The next type of stage in the remediation run.
     * 
     */
    public String nextStageType() {
        return this.nextStageType;
    }
    /**
     * @return Pipeline properties which result from the run of the verify stage.
     * 
     */
    public List<GetRemediationRunStagesRemediationRunStageCollectionItemPipelineProperty> pipelineProperties() {
        return this.pipelineProperties;
    }
    /**
     * @return The previous type of stage in the remediation run.
     * 
     */
    public String previousStageType() {
        return this.previousStageType;
    }
    /**
     * @return Pull request properties from recommend stage of the remediation run.
     * 
     */
    public List<GetRemediationRunStagesRemediationRunStageCollectionItemPullRequestProperty> pullRequestProperties() {
        return this.pullRequestProperties;
    }
    /**
     * @return Count of recommended application dependencies to update.
     * 
     */
    public Integer recommendedUpdatesCount() {
        return this.recommendedUpdatesCount;
    }
    /**
     * @return Unique Remediation Run identifier path parameter.
     * 
     */
    public String remediationRunId() {
        return this.remediationRunId;
    }
    /**
     * @return A filter to return only Stages that match the specified status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Information about the current step within the stage.
     * 
     */
    public String summary() {
        return this.summary;
    }
    /**
     * @return The creation date and time of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time of the finish of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return The date and time of the start of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }
    /**
     * @return A filter to return only Stages that match the specified type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemediationRunStagesRemediationRunStageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String auditId;
        private String nextStageType;
        private List<GetRemediationRunStagesRemediationRunStageCollectionItemPipelineProperty> pipelineProperties;
        private String previousStageType;
        private List<GetRemediationRunStagesRemediationRunStageCollectionItemPullRequestProperty> pullRequestProperties;
        private Integer recommendedUpdatesCount;
        private String remediationRunId;
        private String status;
        private String summary;
        private String timeCreated;
        private String timeFinished;
        private String timeStarted;
        private String type;
        public Builder() {}
        public Builder(GetRemediationRunStagesRemediationRunStageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditId = defaults.auditId;
    	      this.nextStageType = defaults.nextStageType;
    	      this.pipelineProperties = defaults.pipelineProperties;
    	      this.previousStageType = defaults.previousStageType;
    	      this.pullRequestProperties = defaults.pullRequestProperties;
    	      this.recommendedUpdatesCount = defaults.recommendedUpdatesCount;
    	      this.remediationRunId = defaults.remediationRunId;
    	      this.status = defaults.status;
    	      this.summary = defaults.summary;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder auditId(String auditId) {
            this.auditId = Objects.requireNonNull(auditId);
            return this;
        }
        @CustomType.Setter
        public Builder nextStageType(String nextStageType) {
            this.nextStageType = Objects.requireNonNull(nextStageType);
            return this;
        }
        @CustomType.Setter
        public Builder pipelineProperties(List<GetRemediationRunStagesRemediationRunStageCollectionItemPipelineProperty> pipelineProperties) {
            this.pipelineProperties = Objects.requireNonNull(pipelineProperties);
            return this;
        }
        public Builder pipelineProperties(GetRemediationRunStagesRemediationRunStageCollectionItemPipelineProperty... pipelineProperties) {
            return pipelineProperties(List.of(pipelineProperties));
        }
        @CustomType.Setter
        public Builder previousStageType(String previousStageType) {
            this.previousStageType = Objects.requireNonNull(previousStageType);
            return this;
        }
        @CustomType.Setter
        public Builder pullRequestProperties(List<GetRemediationRunStagesRemediationRunStageCollectionItemPullRequestProperty> pullRequestProperties) {
            this.pullRequestProperties = Objects.requireNonNull(pullRequestProperties);
            return this;
        }
        public Builder pullRequestProperties(GetRemediationRunStagesRemediationRunStageCollectionItemPullRequestProperty... pullRequestProperties) {
            return pullRequestProperties(List.of(pullRequestProperties));
        }
        @CustomType.Setter
        public Builder recommendedUpdatesCount(Integer recommendedUpdatesCount) {
            this.recommendedUpdatesCount = Objects.requireNonNull(recommendedUpdatesCount);
            return this;
        }
        @CustomType.Setter
        public Builder remediationRunId(String remediationRunId) {
            this.remediationRunId = Objects.requireNonNull(remediationRunId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder summary(String summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            this.timeFinished = Objects.requireNonNull(timeFinished);
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            this.timeStarted = Objects.requireNonNull(timeStarted);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetRemediationRunStagesRemediationRunStageCollectionItem build() {
            final var _resultValue = new GetRemediationRunStagesRemediationRunStageCollectionItem();
            _resultValue.auditId = auditId;
            _resultValue.nextStageType = nextStageType;
            _resultValue.pipelineProperties = pipelineProperties;
            _resultValue.previousStageType = previousStageType;
            _resultValue.pullRequestProperties = pullRequestProperties;
            _resultValue.recommendedUpdatesCount = recommendedUpdatesCount;
            _resultValue.remediationRunId = remediationRunId;
            _resultValue.status = status;
            _resultValue.summary = summary;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
