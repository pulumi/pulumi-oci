// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerability;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem {
    /**
     * @return List of application dependencies on which this application dependency depends, each identified by its nodeId.
     * 
     */
    private @Nullable List<String> applicationDependencyNodeIds;
    /**
     * @return A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    private @Nullable String gav;
    /**
     * @return Indicates if the artifact is found in the knowledge base.
     * 
     */
    private @Nullable Boolean isFoundInKnowledgeBase;
    /**
     * @return Unique identifier of an application dependency, for example nodeId1.
     * 
     */
    private @Nullable String nodeId;
    /**
     * @return List of vulnerabilities for the application dependency.
     * 
     */
    private @Nullable List<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerability> vulnerabilities;

    private GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem() {}
    /**
     * @return List of application dependencies on which this application dependency depends, each identified by its nodeId.
     * 
     */
    public List<String> applicationDependencyNodeIds() {
        return this.applicationDependencyNodeIds == null ? List.of() : this.applicationDependencyNodeIds;
    }
    /**
     * @return A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    public Optional<String> gav() {
        return Optional.ofNullable(this.gav);
    }
    /**
     * @return Indicates if the artifact is found in the knowledge base.
     * 
     */
    public Optional<Boolean> isFoundInKnowledgeBase() {
        return Optional.ofNullable(this.isFoundInKnowledgeBase);
    }
    /**
     * @return Unique identifier of an application dependency, for example nodeId1.
     * 
     */
    public Optional<String> nodeId() {
        return Optional.ofNullable(this.nodeId);
    }
    /**
     * @return List of vulnerabilities for the application dependency.
     * 
     */
    public List<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerability> vulnerabilities() {
        return this.vulnerabilities == null ? List.of() : this.vulnerabilities;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> applicationDependencyNodeIds;
        private @Nullable String gav;
        private @Nullable Boolean isFoundInKnowledgeBase;
        private @Nullable String nodeId;
        private @Nullable List<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerability> vulnerabilities;
        public Builder() {}
        public Builder(GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationDependencyNodeIds = defaults.applicationDependencyNodeIds;
    	      this.gav = defaults.gav;
    	      this.isFoundInKnowledgeBase = defaults.isFoundInKnowledgeBase;
    	      this.nodeId = defaults.nodeId;
    	      this.vulnerabilities = defaults.vulnerabilities;
        }

        @CustomType.Setter
        public Builder applicationDependencyNodeIds(@Nullable List<String> applicationDependencyNodeIds) {
            this.applicationDependencyNodeIds = applicationDependencyNodeIds;
            return this;
        }
        public Builder applicationDependencyNodeIds(String... applicationDependencyNodeIds) {
            return applicationDependencyNodeIds(List.of(applicationDependencyNodeIds));
        }
        @CustomType.Setter
        public Builder gav(@Nullable String gav) {
            this.gav = gav;
            return this;
        }
        @CustomType.Setter
        public Builder isFoundInKnowledgeBase(@Nullable Boolean isFoundInKnowledgeBase) {
            this.isFoundInKnowledgeBase = isFoundInKnowledgeBase;
            return this;
        }
        @CustomType.Setter
        public Builder nodeId(@Nullable String nodeId) {
            this.nodeId = nodeId;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilities(@Nullable List<GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerability> vulnerabilities) {
            this.vulnerabilities = vulnerabilities;
            return this;
        }
        public Builder vulnerabilities(GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemVulnerability... vulnerabilities) {
            return vulnerabilities(List.of(vulnerabilities));
        }
        public GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem build() {
            final var o = new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItem();
            o.applicationDependencyNodeIds = applicationDependencyNodeIds;
            o.gav = gav;
            o.isFoundInKnowledgeBase = isFoundInKnowledgeBase;
            o.nodeId = nodeId;
            o.vulnerabilities = vulnerabilities;
            return o;
        }
    }
}
