// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability {
    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 2.
     * 
     */
    private final Double cvssV2score;
    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 3.
     * 
     */
    private final Double cvssV3score;
    /**
     * @return Unique vulnerability identifier.
     * 
     */
    private final String id;
    /**
     * @return Indicates if the vulnerability was ignored according to the audit configuration.
     * 
     */
    private final Boolean isIgnored;

    @CustomType.Constructor
    private GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability(
        @CustomType.Parameter("cvssV2score") Double cvssV2score,
        @CustomType.Parameter("cvssV3score") Double cvssV3score,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isIgnored") Boolean isIgnored) {
        this.cvssV2score = cvssV2score;
        this.cvssV3score = cvssV3score;
        this.id = id;
        this.isIgnored = isIgnored;
    }

    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 2.
     * 
     */
    public Double cvssV2score() {
        return this.cvssV2score;
    }
    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 3.
     * 
     */
    public Double cvssV3score() {
        return this.cvssV3score;
    }
    /**
     * @return Unique vulnerability identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if the vulnerability was ignored according to the audit configuration.
     * 
     */
    public Boolean isIgnored() {
        return this.isIgnored;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double cvssV2score;
        private Double cvssV3score;
        private String id;
        private Boolean isIgnored;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssV2score = defaults.cvssV2score;
    	      this.cvssV3score = defaults.cvssV3score;
    	      this.id = defaults.id;
    	      this.isIgnored = defaults.isIgnored;
        }

        public Builder cvssV2score(Double cvssV2score) {
            this.cvssV2score = Objects.requireNonNull(cvssV2score);
            return this;
        }
        public Builder cvssV3score(Double cvssV3score) {
            this.cvssV3score = Objects.requireNonNull(cvssV3score);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isIgnored(Boolean isIgnored) {
            this.isIgnored = Objects.requireNonNull(isIgnored);
            return this;
        }        public GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability build() {
            return new GetVulnerabilityAuditApplicationDependencyVulnerabilitiesApplicationDependencyVulnerabilityCollectionItemItemVulnerability(cvssV2score, cvssV3score, id, isIgnored);
        }
    }
}
