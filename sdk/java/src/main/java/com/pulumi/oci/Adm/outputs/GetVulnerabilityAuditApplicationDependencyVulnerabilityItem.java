// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVulnerabilityAuditApplicationDependencyVulnerabilityItem {
    /**
     * @return List of (Application Dependencies) node identifiers on which this node depends.
     * 
     */
    private List<String> applicationDependencyNodeIds;
    /**
     * @return A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    private String gav;
    /**
     * @return Indicates if the artifact is found in the knowledge base.
     * 
     */
    private Boolean isFoundInKnowledgeBase;
    /**
     * @return Unique identifier of an Application Dependency node.
     * 
     */
    private String nodeId;
    /**
     * @return List of vulnerabilities for the Application Dependency.
     * 
     */
    private List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability> vulnerabilities;

    private GetVulnerabilityAuditApplicationDependencyVulnerabilityItem() {}
    /**
     * @return List of (Application Dependencies) node identifiers on which this node depends.
     * 
     */
    public List<String> applicationDependencyNodeIds() {
        return this.applicationDependencyNodeIds;
    }
    /**
     * @return A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     * 
     */
    public String gav() {
        return this.gav;
    }
    /**
     * @return Indicates if the artifact is found in the knowledge base.
     * 
     */
    public Boolean isFoundInKnowledgeBase() {
        return this.isFoundInKnowledgeBase;
    }
    /**
     * @return Unique identifier of an Application Dependency node.
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return List of vulnerabilities for the Application Dependency.
     * 
     */
    public List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability> vulnerabilities() {
        return this.vulnerabilities;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityAuditApplicationDependencyVulnerabilityItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> applicationDependencyNodeIds;
        private String gav;
        private Boolean isFoundInKnowledgeBase;
        private String nodeId;
        private List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability> vulnerabilities;
        public Builder() {}
        public Builder(GetVulnerabilityAuditApplicationDependencyVulnerabilityItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationDependencyNodeIds = defaults.applicationDependencyNodeIds;
    	      this.gav = defaults.gav;
    	      this.isFoundInKnowledgeBase = defaults.isFoundInKnowledgeBase;
    	      this.nodeId = defaults.nodeId;
    	      this.vulnerabilities = defaults.vulnerabilities;
        }

        @CustomType.Setter
        public Builder applicationDependencyNodeIds(List<String> applicationDependencyNodeIds) {
            this.applicationDependencyNodeIds = Objects.requireNonNull(applicationDependencyNodeIds);
            return this;
        }
        public Builder applicationDependencyNodeIds(String... applicationDependencyNodeIds) {
            return applicationDependencyNodeIds(List.of(applicationDependencyNodeIds));
        }
        @CustomType.Setter
        public Builder gav(String gav) {
            this.gav = Objects.requireNonNull(gav);
            return this;
        }
        @CustomType.Setter
        public Builder isFoundInKnowledgeBase(Boolean isFoundInKnowledgeBase) {
            this.isFoundInKnowledgeBase = Objects.requireNonNull(isFoundInKnowledgeBase);
            return this;
        }
        @CustomType.Setter
        public Builder nodeId(String nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilities(List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability> vulnerabilities) {
            this.vulnerabilities = Objects.requireNonNull(vulnerabilities);
            return this;
        }
        public Builder vulnerabilities(GetVulnerabilityAuditApplicationDependencyVulnerabilityItemVulnerability... vulnerabilities) {
            return vulnerabilities(List.of(vulnerabilities));
        }
        public GetVulnerabilityAuditApplicationDependencyVulnerabilityItem build() {
            final var o = new GetVulnerabilityAuditApplicationDependencyVulnerabilityItem();
            o.applicationDependencyNodeIds = applicationDependencyNodeIds;
            o.gav = gav;
            o.isFoundInKnowledgeBase = isFoundInKnowledgeBase;
            o.nodeId = nodeId;
            o.vulnerabilities = vulnerabilities;
            return o;
        }
    }
}
