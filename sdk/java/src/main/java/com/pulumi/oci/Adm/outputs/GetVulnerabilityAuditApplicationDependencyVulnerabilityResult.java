// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditApplicationDependencyVulnerabilityItem;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVulnerabilityAuditApplicationDependencyVulnerabilityResult {
    private @Nullable Double cvssV2greaterThanOrEqual;
    private @Nullable Double cvssV3greaterThanOrEqual;
    private @Nullable Integer depth;
    /**
     * @return Group Artifact Version (GAV) identifier (Group:Artifact:Version), for example org.graalvm.nativeimage:svm:21.1.0.
     * 
     */
    private @Nullable String gav;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of Vulnerability Audit summaries.
     * 
     */
    private List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItem> items;
    private @Nullable String purl;
    private @Nullable String rootNodeId;
    private @Nullable String severityGreaterThanOrEqual;
    private @Nullable String sortBy;
    private String vulnerabilityAuditId;
    private @Nullable String vulnerabilityId;

    private GetVulnerabilityAuditApplicationDependencyVulnerabilityResult() {}
    public Optional<Double> cvssV2greaterThanOrEqual() {
        return Optional.ofNullable(this.cvssV2greaterThanOrEqual);
    }
    public Optional<Double> cvssV3greaterThanOrEqual() {
        return Optional.ofNullable(this.cvssV3greaterThanOrEqual);
    }
    public Optional<Integer> depth() {
        return Optional.ofNullable(this.depth);
    }
    /**
     * @return Group Artifact Version (GAV) identifier (Group:Artifact:Version), for example org.graalvm.nativeimage:svm:21.1.0.
     * 
     */
    public Optional<String> gav() {
        return Optional.ofNullable(this.gav);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of Vulnerability Audit summaries.
     * 
     */
    public List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItem> items() {
        return this.items;
    }
    public Optional<String> purl() {
        return Optional.ofNullable(this.purl);
    }
    public Optional<String> rootNodeId() {
        return Optional.ofNullable(this.rootNodeId);
    }
    public Optional<String> severityGreaterThanOrEqual() {
        return Optional.ofNullable(this.severityGreaterThanOrEqual);
    }
    public Optional<String> sortBy() {
        return Optional.ofNullable(this.sortBy);
    }
    public String vulnerabilityAuditId() {
        return this.vulnerabilityAuditId;
    }
    public Optional<String> vulnerabilityId() {
        return Optional.ofNullable(this.vulnerabilityId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityAuditApplicationDependencyVulnerabilityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double cvssV2greaterThanOrEqual;
        private @Nullable Double cvssV3greaterThanOrEqual;
        private @Nullable Integer depth;
        private @Nullable String gav;
        private String id;
        private List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItem> items;
        private @Nullable String purl;
        private @Nullable String rootNodeId;
        private @Nullable String severityGreaterThanOrEqual;
        private @Nullable String sortBy;
        private String vulnerabilityAuditId;
        private @Nullable String vulnerabilityId;
        public Builder() {}
        public Builder(GetVulnerabilityAuditApplicationDependencyVulnerabilityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssV2greaterThanOrEqual = defaults.cvssV2greaterThanOrEqual;
    	      this.cvssV3greaterThanOrEqual = defaults.cvssV3greaterThanOrEqual;
    	      this.depth = defaults.depth;
    	      this.gav = defaults.gav;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.purl = defaults.purl;
    	      this.rootNodeId = defaults.rootNodeId;
    	      this.severityGreaterThanOrEqual = defaults.severityGreaterThanOrEqual;
    	      this.sortBy = defaults.sortBy;
    	      this.vulnerabilityAuditId = defaults.vulnerabilityAuditId;
    	      this.vulnerabilityId = defaults.vulnerabilityId;
        }

        @CustomType.Setter
        public Builder cvssV2greaterThanOrEqual(@Nullable Double cvssV2greaterThanOrEqual) {

            this.cvssV2greaterThanOrEqual = cvssV2greaterThanOrEqual;
            return this;
        }
        @CustomType.Setter
        public Builder cvssV3greaterThanOrEqual(@Nullable Double cvssV3greaterThanOrEqual) {

            this.cvssV3greaterThanOrEqual = cvssV3greaterThanOrEqual;
            return this;
        }
        @CustomType.Setter
        public Builder depth(@Nullable Integer depth) {

            this.depth = depth;
            return this;
        }
        @CustomType.Setter
        public Builder gav(@Nullable String gav) {

            this.gav = gav;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityAuditApplicationDependencyVulnerabilityResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetVulnerabilityAuditApplicationDependencyVulnerabilityItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityAuditApplicationDependencyVulnerabilityResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetVulnerabilityAuditApplicationDependencyVulnerabilityItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder purl(@Nullable String purl) {

            this.purl = purl;
            return this;
        }
        @CustomType.Setter
        public Builder rootNodeId(@Nullable String rootNodeId) {

            this.rootNodeId = rootNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder severityGreaterThanOrEqual(@Nullable String severityGreaterThanOrEqual) {

            this.severityGreaterThanOrEqual = severityGreaterThanOrEqual;
            return this;
        }
        @CustomType.Setter
        public Builder sortBy(@Nullable String sortBy) {

            this.sortBy = sortBy;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilityAuditId(String vulnerabilityAuditId) {
            if (vulnerabilityAuditId == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityAuditApplicationDependencyVulnerabilityResult", "vulnerabilityAuditId");
            }
            this.vulnerabilityAuditId = vulnerabilityAuditId;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilityId(@Nullable String vulnerabilityId) {

            this.vulnerabilityId = vulnerabilityId;
            return this;
        }
        public GetVulnerabilityAuditApplicationDependencyVulnerabilityResult build() {
            final var _resultValue = new GetVulnerabilityAuditApplicationDependencyVulnerabilityResult();
            _resultValue.cvssV2greaterThanOrEqual = cvssV2greaterThanOrEqual;
            _resultValue.cvssV3greaterThanOrEqual = cvssV3greaterThanOrEqual;
            _resultValue.depth = depth;
            _resultValue.gav = gav;
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.purl = purl;
            _resultValue.rootNodeId = rootNodeId;
            _resultValue.severityGreaterThanOrEqual = severityGreaterThanOrEqual;
            _resultValue.sortBy = sortBy;
            _resultValue.vulnerabilityAuditId = vulnerabilityAuditId;
            _resultValue.vulnerabilityId = vulnerabilityId;
            return _resultValue;
        }
    }
}
