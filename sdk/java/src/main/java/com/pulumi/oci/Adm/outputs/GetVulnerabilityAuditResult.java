// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditApplicationDependency;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditConfiguration;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditSource;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditVulnerability;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVulnerabilityAuditResult {
    private @Nullable List<GetVulnerabilityAuditApplicationDependency> applicationDependencies;
    /**
     * @return The type of the build tool.
     * 
     */
    private @Nullable String buildType;
    /**
     * @return The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
     * 
     */
    private @Nullable List<GetVulnerabilityAuditConfiguration> configurations;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The name of the vulnerability audit.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique vulnerability identifier, e.g. CVE-1999-0067.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     * 
     */
    private @Nullable Boolean isSuccess;
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    private @Nullable String knowledgeBaseId;
    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    private @Nullable Double maxObservedCvssV2score;
    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    private @Nullable Double maxObservedCvssV2scoreWithIgnored;
    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    private @Nullable Double maxObservedCvssV3score;
    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    private @Nullable Double maxObservedCvssV3scoreWithIgnored;
    /**
     * @return vulnerability audit source.
     * 
     */
    private @Nullable List<GetVulnerabilityAuditSource> sources;
    /**
     * @return The current lifecycle state of the vulnerability audit.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The creation date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The update date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return List of vulnerabilities found in the vulnerability audit.
     * 
     */
    private @Nullable List<GetVulnerabilityAuditVulnerability> vulnerabilities;
    private String vulnerabilityAuditId;
    /**
     * @return Count of non-ignored vulnerable application dependencies.
     * 
     */
    private @Nullable Integer vulnerableArtifactsCount;
    /**
     * @return Count of all vulnerable application dependencies.
     * 
     */
    private @Nullable Integer vulnerableArtifactsCountWithIgnored;

    private GetVulnerabilityAuditResult() {}
    public List<GetVulnerabilityAuditApplicationDependency> applicationDependencies() {
        return this.applicationDependencies == null ? List.of() : this.applicationDependencies;
    }
    /**
     * @return The type of the build tool.
     * 
     */
    public Optional<String> buildType() {
        return Optional.ofNullable(this.buildType);
    }
    /**
     * @return The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Configuration for a vulnerability audit. A vulnerable application dependency is ignored if its name does match any of the items in `exclusions`, or all of the associated Vulnerabilies have a CVSS v2 score below `maxPermissibleCvssV2Score` and a CVSS v3 score below `maxPermissibleCvssV3Score`. type: object
     * 
     */
    public List<GetVulnerabilityAuditConfiguration> configurations() {
        return this.configurations == null ? List.of() : this.configurations;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The name of the vulnerability audit.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique vulnerability identifier, e.g. CVE-1999-0067.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     * 
     */
    public Optional<Boolean> isSuccess() {
        return Optional.ofNullable(this.isSuccess);
    }
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     * 
     */
    public Optional<String> knowledgeBaseId() {
        return Optional.ofNullable(this.knowledgeBaseId);
    }
    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    public Optional<Double> maxObservedCvssV2score() {
        return Optional.ofNullable(this.maxObservedCvssV2score);
    }
    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    public Optional<Double> maxObservedCvssV2scoreWithIgnored() {
        return Optional.ofNullable(this.maxObservedCvssV2scoreWithIgnored);
    }
    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable application dependencies.
     * 
     */
    public Optional<Double> maxObservedCvssV3score() {
        return Optional.ofNullable(this.maxObservedCvssV3score);
    }
    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable application dependencies including ignored ones.
     * 
     */
    public Optional<Double> maxObservedCvssV3scoreWithIgnored() {
        return Optional.ofNullable(this.maxObservedCvssV3scoreWithIgnored);
    }
    /**
     * @return vulnerability audit source.
     * 
     */
    public List<GetVulnerabilityAuditSource> sources() {
        return this.sources == null ? List.of() : this.sources;
    }
    /**
     * @return The current lifecycle state of the vulnerability audit.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The creation date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The update date and time of the vulnerability audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return List of vulnerabilities found in the vulnerability audit.
     * 
     */
    public List<GetVulnerabilityAuditVulnerability> vulnerabilities() {
        return this.vulnerabilities == null ? List.of() : this.vulnerabilities;
    }
    public String vulnerabilityAuditId() {
        return this.vulnerabilityAuditId;
    }
    /**
     * @return Count of non-ignored vulnerable application dependencies.
     * 
     */
    public Optional<Integer> vulnerableArtifactsCount() {
        return Optional.ofNullable(this.vulnerableArtifactsCount);
    }
    /**
     * @return Count of all vulnerable application dependencies.
     * 
     */
    public Optional<Integer> vulnerableArtifactsCountWithIgnored() {
        return Optional.ofNullable(this.vulnerableArtifactsCountWithIgnored);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityAuditResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetVulnerabilityAuditApplicationDependency> applicationDependencies;
        private @Nullable String buildType;
        private @Nullable String compartmentId;
        private @Nullable List<GetVulnerabilityAuditConfiguration> configurations;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isSuccess;
        private @Nullable String knowledgeBaseId;
        private @Nullable Double maxObservedCvssV2score;
        private @Nullable Double maxObservedCvssV2scoreWithIgnored;
        private @Nullable Double maxObservedCvssV3score;
        private @Nullable Double maxObservedCvssV3scoreWithIgnored;
        private @Nullable List<GetVulnerabilityAuditSource> sources;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable List<GetVulnerabilityAuditVulnerability> vulnerabilities;
        private String vulnerabilityAuditId;
        private @Nullable Integer vulnerableArtifactsCount;
        private @Nullable Integer vulnerableArtifactsCountWithIgnored;
        public Builder() {}
        public Builder(GetVulnerabilityAuditResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationDependencies = defaults.applicationDependencies;
    	      this.buildType = defaults.buildType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.configurations = defaults.configurations;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isSuccess = defaults.isSuccess;
    	      this.knowledgeBaseId = defaults.knowledgeBaseId;
    	      this.maxObservedCvssV2score = defaults.maxObservedCvssV2score;
    	      this.maxObservedCvssV2scoreWithIgnored = defaults.maxObservedCvssV2scoreWithIgnored;
    	      this.maxObservedCvssV3score = defaults.maxObservedCvssV3score;
    	      this.maxObservedCvssV3scoreWithIgnored = defaults.maxObservedCvssV3scoreWithIgnored;
    	      this.sources = defaults.sources;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vulnerabilities = defaults.vulnerabilities;
    	      this.vulnerabilityAuditId = defaults.vulnerabilityAuditId;
    	      this.vulnerableArtifactsCount = defaults.vulnerableArtifactsCount;
    	      this.vulnerableArtifactsCountWithIgnored = defaults.vulnerableArtifactsCountWithIgnored;
        }

        @CustomType.Setter
        public Builder applicationDependencies(@Nullable List<GetVulnerabilityAuditApplicationDependency> applicationDependencies) {
            this.applicationDependencies = applicationDependencies;
            return this;
        }
        public Builder applicationDependencies(GetVulnerabilityAuditApplicationDependency... applicationDependencies) {
            return applicationDependencies(List.of(applicationDependencies));
        }
        @CustomType.Setter
        public Builder buildType(@Nullable String buildType) {
            this.buildType = buildType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder configurations(@Nullable List<GetVulnerabilityAuditConfiguration> configurations) {
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(GetVulnerabilityAuditConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSuccess(@Nullable Boolean isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }
        @CustomType.Setter
        public Builder knowledgeBaseId(@Nullable String knowledgeBaseId) {
            this.knowledgeBaseId = knowledgeBaseId;
            return this;
        }
        @CustomType.Setter
        public Builder maxObservedCvssV2score(@Nullable Double maxObservedCvssV2score) {
            this.maxObservedCvssV2score = maxObservedCvssV2score;
            return this;
        }
        @CustomType.Setter
        public Builder maxObservedCvssV2scoreWithIgnored(@Nullable Double maxObservedCvssV2scoreWithIgnored) {
            this.maxObservedCvssV2scoreWithIgnored = maxObservedCvssV2scoreWithIgnored;
            return this;
        }
        @CustomType.Setter
        public Builder maxObservedCvssV3score(@Nullable Double maxObservedCvssV3score) {
            this.maxObservedCvssV3score = maxObservedCvssV3score;
            return this;
        }
        @CustomType.Setter
        public Builder maxObservedCvssV3scoreWithIgnored(@Nullable Double maxObservedCvssV3scoreWithIgnored) {
            this.maxObservedCvssV3scoreWithIgnored = maxObservedCvssV3scoreWithIgnored;
            return this;
        }
        @CustomType.Setter
        public Builder sources(@Nullable List<GetVulnerabilityAuditSource> sources) {
            this.sources = sources;
            return this;
        }
        public Builder sources(GetVulnerabilityAuditSource... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilities(@Nullable List<GetVulnerabilityAuditVulnerability> vulnerabilities) {
            this.vulnerabilities = vulnerabilities;
            return this;
        }
        public Builder vulnerabilities(GetVulnerabilityAuditVulnerability... vulnerabilities) {
            return vulnerabilities(List.of(vulnerabilities));
        }
        @CustomType.Setter
        public Builder vulnerabilityAuditId(String vulnerabilityAuditId) {
            this.vulnerabilityAuditId = Objects.requireNonNull(vulnerabilityAuditId);
            return this;
        }
        @CustomType.Setter
        public Builder vulnerableArtifactsCount(@Nullable Integer vulnerableArtifactsCount) {
            this.vulnerableArtifactsCount = vulnerableArtifactsCount;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerableArtifactsCountWithIgnored(@Nullable Integer vulnerableArtifactsCountWithIgnored) {
            this.vulnerableArtifactsCountWithIgnored = vulnerableArtifactsCountWithIgnored;
            return this;
        }
        public GetVulnerabilityAuditResult build() {
            final var o = new GetVulnerabilityAuditResult();
            o.applicationDependencies = applicationDependencies;
            o.buildType = buildType;
            o.compartmentId = compartmentId;
            o.configurations = configurations;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isSuccess = isSuccess;
            o.knowledgeBaseId = knowledgeBaseId;
            o.maxObservedCvssV2score = maxObservedCvssV2score;
            o.maxObservedCvssV2scoreWithIgnored = maxObservedCvssV2scoreWithIgnored;
            o.maxObservedCvssV3score = maxObservedCvssV3score;
            o.maxObservedCvssV3scoreWithIgnored = maxObservedCvssV3scoreWithIgnored;
            o.sources = sources;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.vulnerabilities = vulnerabilities;
            o.vulnerabilityAuditId = vulnerabilityAuditId;
            o.vulnerableArtifactsCount = vulnerableArtifactsCount;
            o.vulnerableArtifactsCountWithIgnored = vulnerableArtifactsCountWithIgnored;
            return o;
        }
    }
}
