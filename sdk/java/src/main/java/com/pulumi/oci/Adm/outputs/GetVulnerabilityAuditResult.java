// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditApplicationDependency;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditConfiguration;
import com.pulumi.oci.Adm.outputs.GetVulnerabilityAuditVulnerability;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVulnerabilityAuditResult {
    private final List<GetVulnerabilityAuditApplicationDependency> applicationDependencies;
    /**
     * @return The type of the build tool.
     * 
     */
    private final String buildType;
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
     * 
     */
    private final String compartmentId;
    /**
     * @return Configuration for a Vulnerability Audit type: object
     * 
     */
    private final List<GetVulnerabilityAuditConfiguration> configurations;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The name of the Vulnerability Audit.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Unique vulnerability identifier.
     * 
     */
    private final String id;
    /**
     * @return Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     * 
     */
    private final Boolean isSuccess;
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
     * 
     */
    private final String knowledgeBaseId;
    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score of vulnerabilities.
     * 
     */
    private final Double maxObservedCvssV2score;
    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score of vulnerabilities.
     * 
     */
    private final Double maxObservedCvssV3score;
    /**
     * @return The current lifecycle state of the Vulnerability Audit.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private final String timeCreated;
    /**
     * @return The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private final String timeUpdated;
    /**
     * @return List of vulnerabilities found in the Vulnerability Audit.
     * 
     */
    private final List<GetVulnerabilityAuditVulnerability> vulnerabilities;
    private final String vulnerabilityAuditId;
    /**
     * @return Count of vulnerable artifacts.
     * 
     */
    private final Integer vulnerableArtifactsCount;

    @CustomType.Constructor
    private GetVulnerabilityAuditResult(
        @CustomType.Parameter("applicationDependencies") List<GetVulnerabilityAuditApplicationDependency> applicationDependencies,
        @CustomType.Parameter("buildType") String buildType,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("configurations") List<GetVulnerabilityAuditConfiguration> configurations,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isSuccess") Boolean isSuccess,
        @CustomType.Parameter("knowledgeBaseId") String knowledgeBaseId,
        @CustomType.Parameter("maxObservedCvssV2score") Double maxObservedCvssV2score,
        @CustomType.Parameter("maxObservedCvssV3score") Double maxObservedCvssV3score,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("vulnerabilities") List<GetVulnerabilityAuditVulnerability> vulnerabilities,
        @CustomType.Parameter("vulnerabilityAuditId") String vulnerabilityAuditId,
        @CustomType.Parameter("vulnerableArtifactsCount") Integer vulnerableArtifactsCount) {
        this.applicationDependencies = applicationDependencies;
        this.buildType = buildType;
        this.compartmentId = compartmentId;
        this.configurations = configurations;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isSuccess = isSuccess;
        this.knowledgeBaseId = knowledgeBaseId;
        this.maxObservedCvssV2score = maxObservedCvssV2score;
        this.maxObservedCvssV3score = maxObservedCvssV3score;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.vulnerabilities = vulnerabilities;
        this.vulnerabilityAuditId = vulnerabilityAuditId;
        this.vulnerableArtifactsCount = vulnerableArtifactsCount;
    }

    public List<GetVulnerabilityAuditApplicationDependency> applicationDependencies() {
        return this.applicationDependencies;
    }
    /**
     * @return The type of the build tool.
     * 
     */
    public String buildType() {
        return this.buildType;
    }
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Configuration for a Vulnerability Audit type: object
     * 
     */
    public List<GetVulnerabilityAuditConfiguration> configurations() {
        return this.configurations;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The name of the Vulnerability Audit.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique vulnerability identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     * 
     */
    public Boolean isSuccess() {
        return this.isSuccess;
    }
    /**
     * @return The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
     * 
     */
    public String knowledgeBaseId() {
        return this.knowledgeBaseId;
    }
    /**
     * @return Maximum Common Vulnerability Scoring System Version 2 score of vulnerabilities.
     * 
     */
    public Double maxObservedCvssV2score() {
        return this.maxObservedCvssV2score;
    }
    /**
     * @return Maximum Common Vulnerability Scoring System Version 3 score of vulnerabilities.
     * 
     */
    public Double maxObservedCvssV3score() {
        return this.maxObservedCvssV3score;
    }
    /**
     * @return The current lifecycle state of the Vulnerability Audit.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return List of vulnerabilities found in the Vulnerability Audit.
     * 
     */
    public List<GetVulnerabilityAuditVulnerability> vulnerabilities() {
        return this.vulnerabilities;
    }
    public String vulnerabilityAuditId() {
        return this.vulnerabilityAuditId;
    }
    /**
     * @return Count of vulnerable artifacts.
     * 
     */
    public Integer vulnerableArtifactsCount() {
        return this.vulnerableArtifactsCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityAuditResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetVulnerabilityAuditApplicationDependency> applicationDependencies;
        private String buildType;
        private String compartmentId;
        private List<GetVulnerabilityAuditConfiguration> configurations;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isSuccess;
        private String knowledgeBaseId;
        private Double maxObservedCvssV2score;
        private Double maxObservedCvssV3score;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private List<GetVulnerabilityAuditVulnerability> vulnerabilities;
        private String vulnerabilityAuditId;
        private Integer vulnerableArtifactsCount;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVulnerabilityAuditResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationDependencies = defaults.applicationDependencies;
    	      this.buildType = defaults.buildType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.configurations = defaults.configurations;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isSuccess = defaults.isSuccess;
    	      this.knowledgeBaseId = defaults.knowledgeBaseId;
    	      this.maxObservedCvssV2score = defaults.maxObservedCvssV2score;
    	      this.maxObservedCvssV3score = defaults.maxObservedCvssV3score;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vulnerabilities = defaults.vulnerabilities;
    	      this.vulnerabilityAuditId = defaults.vulnerabilityAuditId;
    	      this.vulnerableArtifactsCount = defaults.vulnerableArtifactsCount;
        }

        public Builder applicationDependencies(List<GetVulnerabilityAuditApplicationDependency> applicationDependencies) {
            this.applicationDependencies = Objects.requireNonNull(applicationDependencies);
            return this;
        }
        public Builder applicationDependencies(GetVulnerabilityAuditApplicationDependency... applicationDependencies) {
            return applicationDependencies(List.of(applicationDependencies));
        }
        public Builder buildType(String buildType) {
            this.buildType = Objects.requireNonNull(buildType);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder configurations(List<GetVulnerabilityAuditConfiguration> configurations) {
            this.configurations = Objects.requireNonNull(configurations);
            return this;
        }
        public Builder configurations(GetVulnerabilityAuditConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isSuccess(Boolean isSuccess) {
            this.isSuccess = Objects.requireNonNull(isSuccess);
            return this;
        }
        public Builder knowledgeBaseId(String knowledgeBaseId) {
            this.knowledgeBaseId = Objects.requireNonNull(knowledgeBaseId);
            return this;
        }
        public Builder maxObservedCvssV2score(Double maxObservedCvssV2score) {
            this.maxObservedCvssV2score = Objects.requireNonNull(maxObservedCvssV2score);
            return this;
        }
        public Builder maxObservedCvssV3score(Double maxObservedCvssV3score) {
            this.maxObservedCvssV3score = Objects.requireNonNull(maxObservedCvssV3score);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder vulnerabilities(List<GetVulnerabilityAuditVulnerability> vulnerabilities) {
            this.vulnerabilities = Objects.requireNonNull(vulnerabilities);
            return this;
        }
        public Builder vulnerabilities(GetVulnerabilityAuditVulnerability... vulnerabilities) {
            return vulnerabilities(List.of(vulnerabilities));
        }
        public Builder vulnerabilityAuditId(String vulnerabilityAuditId) {
            this.vulnerabilityAuditId = Objects.requireNonNull(vulnerabilityAuditId);
            return this;
        }
        public Builder vulnerableArtifactsCount(Integer vulnerableArtifactsCount) {
            this.vulnerableArtifactsCount = Objects.requireNonNull(vulnerableArtifactsCount);
            return this;
        }        public GetVulnerabilityAuditResult build() {
            return new GetVulnerabilityAuditResult(applicationDependencies, buildType, compartmentId, configurations, definedTags, displayName, freeformTags, id, isSuccess, knowledgeBaseId, maxObservedCvssV2score, maxObservedCvssV3score, state, systemTags, timeCreated, timeUpdated, vulnerabilities, vulnerabilityAuditId, vulnerableArtifactsCount);
        }
    }
}
