// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VulnerabilityAuditApplicationDependency {
    /**
     * @return List of application dependencies on which this application dependency depends, each identified by its nodeId.
     * 
     */
    private @Nullable List<String> applicationDependencyNodeIds;
    /**
     * @return Group Artifact Version (GAV) identifier (Group:Artifact:Version). Example: org.graalvm.nativeimage:svm:21.1.0. &#34;N/A&#34; for non-maven artifacts.
     * 
     */
    private @Nullable String gav;
    /**
     * @return Unique identifier of an application dependency, for example nodeId1. The nodeId can be generated by assigning a unique id to each application dependency in the tree of application dependencies. Every node, even those who share the same GAV, should have a different nodeId. The preferred way of constructing a nodeId is to assign incremental integers during a breadth first or depth first search. A nodeId can be reused only it refers to the same subtree of application dependencies. (This is not equivalent to referring to the same GAV, that is, a GAV can have multiple transitive dependencies.)
     * 
     */
    private String nodeId;
    /**
     * @return Package URL defined in https://github.com/package-url/purl-spec, e.g. pkg:maven/org.graalvm.nativeimage/svm{@literal @}21.1.0
     * 
     */
    private @Nullable String purl;

    private VulnerabilityAuditApplicationDependency() {}
    /**
     * @return List of application dependencies on which this application dependency depends, each identified by its nodeId.
     * 
     */
    public List<String> applicationDependencyNodeIds() {
        return this.applicationDependencyNodeIds == null ? List.of() : this.applicationDependencyNodeIds;
    }
    /**
     * @return Group Artifact Version (GAV) identifier (Group:Artifact:Version). Example: org.graalvm.nativeimage:svm:21.1.0. &#34;N/A&#34; for non-maven artifacts.
     * 
     */
    public Optional<String> gav() {
        return Optional.ofNullable(this.gav);
    }
    /**
     * @return Unique identifier of an application dependency, for example nodeId1. The nodeId can be generated by assigning a unique id to each application dependency in the tree of application dependencies. Every node, even those who share the same GAV, should have a different nodeId. The preferred way of constructing a nodeId is to assign incremental integers during a breadth first or depth first search. A nodeId can be reused only it refers to the same subtree of application dependencies. (This is not equivalent to referring to the same GAV, that is, a GAV can have multiple transitive dependencies.)
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return Package URL defined in https://github.com/package-url/purl-spec, e.g. pkg:maven/org.graalvm.nativeimage/svm{@literal @}21.1.0
     * 
     */
    public Optional<String> purl() {
        return Optional.ofNullable(this.purl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityAuditApplicationDependency defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> applicationDependencyNodeIds;
        private @Nullable String gav;
        private String nodeId;
        private @Nullable String purl;
        public Builder() {}
        public Builder(VulnerabilityAuditApplicationDependency defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationDependencyNodeIds = defaults.applicationDependencyNodeIds;
    	      this.gav = defaults.gav;
    	      this.nodeId = defaults.nodeId;
    	      this.purl = defaults.purl;
        }

        @CustomType.Setter
        public Builder applicationDependencyNodeIds(@Nullable List<String> applicationDependencyNodeIds) {

            this.applicationDependencyNodeIds = applicationDependencyNodeIds;
            return this;
        }
        public Builder applicationDependencyNodeIds(String... applicationDependencyNodeIds) {
            return applicationDependencyNodeIds(List.of(applicationDependencyNodeIds));
        }
        @CustomType.Setter
        public Builder gav(@Nullable String gav) {

            this.gav = gav;
            return this;
        }
        @CustomType.Setter
        public Builder nodeId(String nodeId) {
            if (nodeId == null) {
              throw new MissingRequiredPropertyException("VulnerabilityAuditApplicationDependency", "nodeId");
            }
            this.nodeId = nodeId;
            return this;
        }
        @CustomType.Setter
        public Builder purl(@Nullable String purl) {

            this.purl = purl;
            return this;
        }
        public VulnerabilityAuditApplicationDependency build() {
            final var _resultValue = new VulnerabilityAuditApplicationDependency();
            _resultValue.applicationDependencyNodeIds = applicationDependencyNodeIds;
            _resultValue.gav = gav;
            _resultValue.nodeId = nodeId;
            _resultValue.purl = purl;
            return _resultValue;
        }
    }
}
