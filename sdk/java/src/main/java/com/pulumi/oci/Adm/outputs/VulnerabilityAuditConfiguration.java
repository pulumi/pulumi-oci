// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VulnerabilityAuditConfiguration {
    /**
     * @return Pattern to exclude artifacts from audit.
     * 
     */
    private final @Nullable List<String> exclusions;
    /**
     * @return The minimum CVSS V2 score for a vulnerability to be considered by the audit as failed.
     * 
     */
    private final @Nullable Double maxPermissibleCvssV2score;
    /**
     * @return The minimum CVSS V3 score for a vulnerability to be considered by the audit as failed.
     * 
     */
    private final @Nullable Double maxPermissibleCvssV3score;

    @CustomType.Constructor
    private VulnerabilityAuditConfiguration(
        @CustomType.Parameter("exclusions") @Nullable List<String> exclusions,
        @CustomType.Parameter("maxPermissibleCvssV2score") @Nullable Double maxPermissibleCvssV2score,
        @CustomType.Parameter("maxPermissibleCvssV3score") @Nullable Double maxPermissibleCvssV3score) {
        this.exclusions = exclusions;
        this.maxPermissibleCvssV2score = maxPermissibleCvssV2score;
        this.maxPermissibleCvssV3score = maxPermissibleCvssV3score;
    }

    /**
     * @return Pattern to exclude artifacts from audit.
     * 
     */
    public List<String> exclusions() {
        return this.exclusions == null ? List.of() : this.exclusions;
    }
    /**
     * @return The minimum CVSS V2 score for a vulnerability to be considered by the audit as failed.
     * 
     */
    public Optional<Double> maxPermissibleCvssV2score() {
        return Optional.ofNullable(this.maxPermissibleCvssV2score);
    }
    /**
     * @return The minimum CVSS V3 score for a vulnerability to be considered by the audit as failed.
     * 
     */
    public Optional<Double> maxPermissibleCvssV3score() {
        return Optional.ofNullable(this.maxPermissibleCvssV3score);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityAuditConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> exclusions;
        private @Nullable Double maxPermissibleCvssV2score;
        private @Nullable Double maxPermissibleCvssV3score;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityAuditConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusions = defaults.exclusions;
    	      this.maxPermissibleCvssV2score = defaults.maxPermissibleCvssV2score;
    	      this.maxPermissibleCvssV3score = defaults.maxPermissibleCvssV3score;
        }

        public Builder exclusions(@Nullable List<String> exclusions) {
            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(String... exclusions) {
            return exclusions(List.of(exclusions));
        }
        public Builder maxPermissibleCvssV2score(@Nullable Double maxPermissibleCvssV2score) {
            this.maxPermissibleCvssV2score = maxPermissibleCvssV2score;
            return this;
        }
        public Builder maxPermissibleCvssV3score(@Nullable Double maxPermissibleCvssV3score) {
            this.maxPermissibleCvssV3score = maxPermissibleCvssV3score;
            return this;
        }        public VulnerabilityAuditConfiguration build() {
            return new VulnerabilityAuditConfiguration(exclusions, maxPermissibleCvssV2score, maxPermissibleCvssV3score);
        }
    }
}
