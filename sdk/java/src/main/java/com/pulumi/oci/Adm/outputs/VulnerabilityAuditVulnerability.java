// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Adm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VulnerabilityAuditVulnerability {
    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 2.
     * 
     */
    private final @Nullable Double cvssV2score;
    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 3.
     * 
     */
    private final @Nullable Double cvssV3score;
    /**
     * @return Unique vulnerability identifier.
     * 
     */
    private final @Nullable String id;
    /**
     * @return Indicates if the vulnerability was ignored according to the audit configuration.
     * 
     */
    private final @Nullable Boolean isIgnored;

    @CustomType.Constructor
    private VulnerabilityAuditVulnerability(
        @CustomType.Parameter("cvssV2score") @Nullable Double cvssV2score,
        @CustomType.Parameter("cvssV3score") @Nullable Double cvssV3score,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("isIgnored") @Nullable Boolean isIgnored) {
        this.cvssV2score = cvssV2score;
        this.cvssV3score = cvssV3score;
        this.id = id;
        this.isIgnored = isIgnored;
    }

    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 2.
     * 
     */
    public Optional<Double> cvssV2score() {
        return Optional.ofNullable(this.cvssV2score);
    }
    /**
     * @return Common Vulnerability Scoring System (CVSS) Version 3.
     * 
     */
    public Optional<Double> cvssV3score() {
        return Optional.ofNullable(this.cvssV3score);
    }
    /**
     * @return Unique vulnerability identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates if the vulnerability was ignored according to the audit configuration.
     * 
     */
    public Optional<Boolean> isIgnored() {
        return Optional.ofNullable(this.isIgnored);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityAuditVulnerability defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Double cvssV2score;
        private @Nullable Double cvssV3score;
        private @Nullable String id;
        private @Nullable Boolean isIgnored;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityAuditVulnerability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssV2score = defaults.cvssV2score;
    	      this.cvssV3score = defaults.cvssV3score;
    	      this.id = defaults.id;
    	      this.isIgnored = defaults.isIgnored;
        }

        public Builder cvssV2score(@Nullable Double cvssV2score) {
            this.cvssV2score = cvssV2score;
            return this;
        }
        public Builder cvssV3score(@Nullable Double cvssV3score) {
            this.cvssV3score = cvssV3score;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder isIgnored(@Nullable Boolean isIgnored) {
            this.isIgnored = isIgnored;
            return this;
        }        public VulnerabilityAuditVulnerability build() {
            return new VulnerabilityAuditVulnerability(cvssV2score, cvssV3score, id, isIgnored);
        }
    }
}
