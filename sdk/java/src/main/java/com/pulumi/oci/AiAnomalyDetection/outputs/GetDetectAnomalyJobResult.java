// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiAnomalyDetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiAnomalyDetection.outputs.GetDetectAnomalyJobInputDetail;
import com.pulumi.oci.AiAnomalyDetection.outputs.GetDetectAnomalyJobOutputDetail;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDetectAnomalyJobResult {
    /**
     * @return The OCID of the compartment that starts the job.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Detect anomaly job description.
     * 
     */
    private String description;
    private String detectAnomalyJobId;
    /**
     * @return Detect anomaly job display name.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Id of the job.
     * 
     */
    private String id;
    /**
     * @return Input details for detect anomaly job.
     * 
     */
    private List<GetDetectAnomalyJobInputDetail> inputDetails;
    /**
     * @return The current state details of the batch document job.
     * 
     */
    private String lifecycleStateDetails;
    /**
     * @return The OCID of the trained model.
     * 
     */
    private String modelId;
    /**
     * @return Output details for detect anomaly job.
     * 
     */
    private List<GetDetectAnomalyJobOutputDetail> outputDetails;
    /**
     * @return The OCID of the project.
     * 
     */
    private String projectId;
    /**
     * @return The value that customer can adjust to control the sensitivity of anomaly detection
     * 
     */
    private Double sensitivity;
    /**
     * @return The current state of the batch document job.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return Job accepted time
     * 
     */
    private String timeAccepted;
    /**
     * @return Job finished time
     * 
     */
    private String timeFinished;
    /**
     * @return Job started time
     * 
     */
    private String timeStarted;

    private GetDetectAnomalyJobResult() {}
    /**
     * @return The OCID of the compartment that starts the job.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Detect anomaly job description.
     * 
     */
    public String description() {
        return this.description;
    }
    public String detectAnomalyJobId() {
        return this.detectAnomalyJobId;
    }
    /**
     * @return Detect anomaly job display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Id of the job.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Input details for detect anomaly job.
     * 
     */
    public List<GetDetectAnomalyJobInputDetail> inputDetails() {
        return this.inputDetails;
    }
    /**
     * @return The current state details of the batch document job.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return The OCID of the trained model.
     * 
     */
    public String modelId() {
        return this.modelId;
    }
    /**
     * @return Output details for detect anomaly job.
     * 
     */
    public List<GetDetectAnomalyJobOutputDetail> outputDetails() {
        return this.outputDetails;
    }
    /**
     * @return The OCID of the project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The value that customer can adjust to control the sensitivity of anomaly detection
     * 
     */
    public Double sensitivity() {
        return this.sensitivity;
    }
    /**
     * @return The current state of the batch document job.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Job accepted time
     * 
     */
    public String timeAccepted() {
        return this.timeAccepted;
    }
    /**
     * @return Job finished time
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return Job started time
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDetectAnomalyJobResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String detectAnomalyJobId;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetDetectAnomalyJobInputDetail> inputDetails;
        private String lifecycleStateDetails;
        private String modelId;
        private List<GetDetectAnomalyJobOutputDetail> outputDetails;
        private String projectId;
        private Double sensitivity;
        private String state;
        private Map<String,Object> systemTags;
        private String timeAccepted;
        private String timeFinished;
        private String timeStarted;
        public Builder() {}
        public Builder(GetDetectAnomalyJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.detectAnomalyJobId = defaults.detectAnomalyJobId;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.inputDetails = defaults.inputDetails;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.modelId = defaults.modelId;
    	      this.outputDetails = defaults.outputDetails;
    	      this.projectId = defaults.projectId;
    	      this.sensitivity = defaults.sensitivity;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder detectAnomalyJobId(String detectAnomalyJobId) {
            this.detectAnomalyJobId = Objects.requireNonNull(detectAnomalyJobId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inputDetails(List<GetDetectAnomalyJobInputDetail> inputDetails) {
            this.inputDetails = Objects.requireNonNull(inputDetails);
            return this;
        }
        public Builder inputDetails(GetDetectAnomalyJobInputDetail... inputDetails) {
            return inputDetails(List.of(inputDetails));
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            this.lifecycleStateDetails = Objects.requireNonNull(lifecycleStateDetails);
            return this;
        }
        @CustomType.Setter
        public Builder modelId(String modelId) {
            this.modelId = Objects.requireNonNull(modelId);
            return this;
        }
        @CustomType.Setter
        public Builder outputDetails(List<GetDetectAnomalyJobOutputDetail> outputDetails) {
            this.outputDetails = Objects.requireNonNull(outputDetails);
            return this;
        }
        public Builder outputDetails(GetDetectAnomalyJobOutputDetail... outputDetails) {
            return outputDetails(List.of(outputDetails));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder sensitivity(Double sensitivity) {
            this.sensitivity = Objects.requireNonNull(sensitivity);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(String timeAccepted) {
            this.timeAccepted = Objects.requireNonNull(timeAccepted);
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            this.timeFinished = Objects.requireNonNull(timeFinished);
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            this.timeStarted = Objects.requireNonNull(timeStarted);
            return this;
        }
        public GetDetectAnomalyJobResult build() {
            final var o = new GetDetectAnomalyJobResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.detectAnomalyJobId = detectAnomalyJobId;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.inputDetails = inputDetails;
            o.lifecycleStateDetails = lifecycleStateDetails;
            o.modelId = modelId;
            o.outputDetails = outputDetails;
            o.projectId = projectId;
            o.sensitivity = sensitivity;
            o.state = state;
            o.systemTags = systemTags;
            o.timeAccepted = timeAccepted;
            o.timeFinished = timeFinished;
            o.timeStarted = timeStarted;
            return o;
        }
    }
}
