// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiAnomalyDetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiAnomalyDetection.outputs.GetDetectAnomalyJobsDetectAnomalyJobCollectionItemInputDetail;
import com.pulumi.oci.AiAnomalyDetection.outputs.GetDetectAnomalyJobsDetectAnomalyJobCollectionItemOutputDetail;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDetectAnomalyJobsDetectAnomalyJobCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Detect anomaly job description.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Id of the job.
     * 
     */
    private String id;
    /**
     * @return Input details for detect anomaly job.
     * 
     */
    private List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemInputDetail> inputDetails;
    /**
     * @return The current state details of the batch document job.
     * 
     */
    private String lifecycleStateDetails;
    /**
     * @return The ID of the trained model for which to list the resources.
     * 
     */
    private String modelId;
    /**
     * @return Output details for detect anomaly job.
     * 
     */
    private List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemOutputDetail> outputDetails;
    /**
     * @return The ID of the project for which to list the objects.
     * 
     */
    private String projectId;
    /**
     * @return The value that customer can adjust to control the sensitivity of anomaly detection
     * 
     */
    private Double sensitivity;
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Job accepted time
     * 
     */
    private String timeAccepted;
    /**
     * @return Job finished time
     * 
     */
    private String timeFinished;
    /**
     * @return Job started time
     * 
     */
    private String timeStarted;

    private GetDetectAnomalyJobsDetectAnomalyJobCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Detect anomaly job description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Id of the job.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Input details for detect anomaly job.
     * 
     */
    public List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemInputDetail> inputDetails() {
        return this.inputDetails;
    }
    /**
     * @return The current state details of the batch document job.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return The ID of the trained model for which to list the resources.
     * 
     */
    public String modelId() {
        return this.modelId;
    }
    /**
     * @return Output details for detect anomaly job.
     * 
     */
    public List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemOutputDetail> outputDetails() {
        return this.outputDetails;
    }
    /**
     * @return The ID of the project for which to list the objects.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The value that customer can adjust to control the sensitivity of anomaly detection
     * 
     */
    public Double sensitivity() {
        return this.sensitivity;
    }
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Job accepted time
     * 
     */
    public String timeAccepted() {
        return this.timeAccepted;
    }
    /**
     * @return Job finished time
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return Job started time
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDetectAnomalyJobsDetectAnomalyJobCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemInputDetail> inputDetails;
        private String lifecycleStateDetails;
        private String modelId;
        private List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemOutputDetail> outputDetails;
        private String projectId;
        private Double sensitivity;
        private String state;
        private Map<String,String> systemTags;
        private String timeAccepted;
        private String timeFinished;
        private String timeStarted;
        public Builder() {}
        public Builder(GetDetectAnomalyJobsDetectAnomalyJobCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.inputDetails = defaults.inputDetails;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.modelId = defaults.modelId;
    	      this.outputDetails = defaults.outputDetails;
    	      this.projectId = defaults.projectId;
    	      this.sensitivity = defaults.sensitivity;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inputDetails(List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemInputDetail> inputDetails) {
            if (inputDetails == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "inputDetails");
            }
            this.inputDetails = inputDetails;
            return this;
        }
        public Builder inputDetails(GetDetectAnomalyJobsDetectAnomalyJobCollectionItemInputDetail... inputDetails) {
            return inputDetails(List.of(inputDetails));
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            if (lifecycleStateDetails == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "lifecycleStateDetails");
            }
            this.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder modelId(String modelId) {
            if (modelId == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "modelId");
            }
            this.modelId = modelId;
            return this;
        }
        @CustomType.Setter
        public Builder outputDetails(List<GetDetectAnomalyJobsDetectAnomalyJobCollectionItemOutputDetail> outputDetails) {
            if (outputDetails == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "outputDetails");
            }
            this.outputDetails = outputDetails;
            return this;
        }
        public Builder outputDetails(GetDetectAnomalyJobsDetectAnomalyJobCollectionItemOutputDetail... outputDetails) {
            return outputDetails(List.of(outputDetails));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder sensitivity(Double sensitivity) {
            if (sensitivity == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "sensitivity");
            }
            this.sensitivity = sensitivity;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(String timeAccepted) {
            if (timeAccepted == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "timeAccepted");
            }
            this.timeAccepted = timeAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            if (timeFinished == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "timeFinished");
            }
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            if (timeStarted == null) {
              throw new MissingRequiredPropertyException("GetDetectAnomalyJobsDetectAnomalyJobCollectionItem", "timeStarted");
            }
            this.timeStarted = timeStarted;
            return this;
        }
        public GetDetectAnomalyJobsDetectAnomalyJobCollectionItem build() {
            final var _resultValue = new GetDetectAnomalyJobsDetectAnomalyJobCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.inputDetails = inputDetails;
            _resultValue.lifecycleStateDetails = lifecycleStateDetails;
            _resultValue.modelId = modelId;
            _resultValue.outputDetails = outputDetails;
            _resultValue.projectId = projectId;
            _resultValue.sensitivity = sensitivity;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeAccepted = timeAccepted;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            return _resultValue;
        }
    }
}
