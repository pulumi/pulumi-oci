// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiAnomalyDetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiAnomalyDetection.outputs.GetDetectionModelModelTrainingResultRowReductionDetail;
import com.pulumi.oci.AiAnomalyDetection.outputs.GetDetectionModelModelTrainingResultSignalDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDetectionModelModelTrainingResult {
    /**
     * @return Accuracy metric for a signal.
     * 
     */
    private Double fap;
    /**
     * @return A boolean value to indicate if train goal/targetFap is achieved for trained model
     * 
     */
    private Boolean isTrainingGoalAchieved;
    /**
     * @return The model accuracy metric on timestamp level.
     * 
     */
    private Double multivariateFap;
    /**
     * @return Information regarding how/what row reduction methods will be applied. If this property is not present or is null, then it means row reduction is not applied.
     * 
     */
    private List<GetDetectionModelModelTrainingResultRowReductionDetail> rowReductionDetails;
    /**
     * @return The list of signal details.
     * 
     */
    private List<GetDetectionModelModelTrainingResultSignalDetail> signalDetails;
    /**
     * @return A warning message to explain the reason when targetFap cannot be achieved for trained model
     * 
     */
    private String warning;

    private GetDetectionModelModelTrainingResult() {}
    /**
     * @return Accuracy metric for a signal.
     * 
     */
    public Double fap() {
        return this.fap;
    }
    /**
     * @return A boolean value to indicate if train goal/targetFap is achieved for trained model
     * 
     */
    public Boolean isTrainingGoalAchieved() {
        return this.isTrainingGoalAchieved;
    }
    /**
     * @return The model accuracy metric on timestamp level.
     * 
     */
    public Double multivariateFap() {
        return this.multivariateFap;
    }
    /**
     * @return Information regarding how/what row reduction methods will be applied. If this property is not present or is null, then it means row reduction is not applied.
     * 
     */
    public List<GetDetectionModelModelTrainingResultRowReductionDetail> rowReductionDetails() {
        return this.rowReductionDetails;
    }
    /**
     * @return The list of signal details.
     * 
     */
    public List<GetDetectionModelModelTrainingResultSignalDetail> signalDetails() {
        return this.signalDetails;
    }
    /**
     * @return A warning message to explain the reason when targetFap cannot be achieved for trained model
     * 
     */
    public String warning() {
        return this.warning;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDetectionModelModelTrainingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double fap;
        private Boolean isTrainingGoalAchieved;
        private Double multivariateFap;
        private List<GetDetectionModelModelTrainingResultRowReductionDetail> rowReductionDetails;
        private List<GetDetectionModelModelTrainingResultSignalDetail> signalDetails;
        private String warning;
        public Builder() {}
        public Builder(GetDetectionModelModelTrainingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fap = defaults.fap;
    	      this.isTrainingGoalAchieved = defaults.isTrainingGoalAchieved;
    	      this.multivariateFap = defaults.multivariateFap;
    	      this.rowReductionDetails = defaults.rowReductionDetails;
    	      this.signalDetails = defaults.signalDetails;
    	      this.warning = defaults.warning;
        }

        @CustomType.Setter
        public Builder fap(Double fap) {
            this.fap = Objects.requireNonNull(fap);
            return this;
        }
        @CustomType.Setter
        public Builder isTrainingGoalAchieved(Boolean isTrainingGoalAchieved) {
            this.isTrainingGoalAchieved = Objects.requireNonNull(isTrainingGoalAchieved);
            return this;
        }
        @CustomType.Setter
        public Builder multivariateFap(Double multivariateFap) {
            this.multivariateFap = Objects.requireNonNull(multivariateFap);
            return this;
        }
        @CustomType.Setter
        public Builder rowReductionDetails(List<GetDetectionModelModelTrainingResultRowReductionDetail> rowReductionDetails) {
            this.rowReductionDetails = Objects.requireNonNull(rowReductionDetails);
            return this;
        }
        public Builder rowReductionDetails(GetDetectionModelModelTrainingResultRowReductionDetail... rowReductionDetails) {
            return rowReductionDetails(List.of(rowReductionDetails));
        }
        @CustomType.Setter
        public Builder signalDetails(List<GetDetectionModelModelTrainingResultSignalDetail> signalDetails) {
            this.signalDetails = Objects.requireNonNull(signalDetails);
            return this;
        }
        public Builder signalDetails(GetDetectionModelModelTrainingResultSignalDetail... signalDetails) {
            return signalDetails(List.of(signalDetails));
        }
        @CustomType.Setter
        public Builder warning(String warning) {
            this.warning = Objects.requireNonNull(warning);
            return this;
        }
        public GetDetectionModelModelTrainingResult build() {
            final var o = new GetDetectionModelModelTrainingResult();
            o.fap = fap;
            o.isTrainingGoalAchieved = isTrainingGoalAchieved;
            o.multivariateFap = multivariateFap;
            o.rowReductionDetails = rowReductionDetails;
            o.signalDetails = signalDetails;
            o.warning = warning;
            return o;
        }
    }
}
