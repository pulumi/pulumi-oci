// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiDocument.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.AiDocument.inputs.ModelMetricDatasetSummaryArgs;
import com.pulumi.oci.AiDocument.inputs.ModelMetricLabelMetricsReportArgs;
import com.pulumi.oci.AiDocument.inputs.ModelMetricOverallMetricsReportArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelMetricArgs Empty = new ModelMetricArgs();

    /**
     * Summary of count of samples used during model training.
     * 
     */
    @Import(name="datasetSummaries")
    private @Nullable Output<List<ModelMetricDatasetSummaryArgs>> datasetSummaries;

    /**
     * @return Summary of count of samples used during model training.
     * 
     */
    public Optional<Output<List<ModelMetricDatasetSummaryArgs>>> datasetSummaries() {
        return Optional.ofNullable(this.datasetSummaries);
    }

    /**
     * List of metrics entries per label.
     * 
     */
    @Import(name="labelMetricsReports")
    private @Nullable Output<List<ModelMetricLabelMetricsReportArgs>> labelMetricsReports;

    /**
     * @return List of metrics entries per label.
     * 
     */
    public Optional<Output<List<ModelMetricLabelMetricsReportArgs>>> labelMetricsReports() {
        return Optional.ofNullable(this.labelMetricsReports);
    }

    /**
     * The type of the Document model.
     * 
     */
    @Import(name="modelType")
    private @Nullable Output<String> modelType;

    /**
     * @return The type of the Document model.
     * 
     */
    public Optional<Output<String>> modelType() {
        return Optional.ofNullable(this.modelType);
    }

    /**
     * Overall Metrics report for Document Classification Model.
     * 
     */
    @Import(name="overallMetricsReports")
    private @Nullable Output<List<ModelMetricOverallMetricsReportArgs>> overallMetricsReports;

    /**
     * @return Overall Metrics report for Document Classification Model.
     * 
     */
    public Optional<Output<List<ModelMetricOverallMetricsReportArgs>>> overallMetricsReports() {
        return Optional.ofNullable(this.overallMetricsReports);
    }

    private ModelMetricArgs() {}

    private ModelMetricArgs(ModelMetricArgs $) {
        this.datasetSummaries = $.datasetSummaries;
        this.labelMetricsReports = $.labelMetricsReports;
        this.modelType = $.modelType;
        this.overallMetricsReports = $.overallMetricsReports;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelMetricArgs $;

        public Builder() {
            $ = new ModelMetricArgs();
        }

        public Builder(ModelMetricArgs defaults) {
            $ = new ModelMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetSummaries Summary of count of samples used during model training.
         * 
         * @return builder
         * 
         */
        public Builder datasetSummaries(@Nullable Output<List<ModelMetricDatasetSummaryArgs>> datasetSummaries) {
            $.datasetSummaries = datasetSummaries;
            return this;
        }

        /**
         * @param datasetSummaries Summary of count of samples used during model training.
         * 
         * @return builder
         * 
         */
        public Builder datasetSummaries(List<ModelMetricDatasetSummaryArgs> datasetSummaries) {
            return datasetSummaries(Output.of(datasetSummaries));
        }

        /**
         * @param datasetSummaries Summary of count of samples used during model training.
         * 
         * @return builder
         * 
         */
        public Builder datasetSummaries(ModelMetricDatasetSummaryArgs... datasetSummaries) {
            return datasetSummaries(List.of(datasetSummaries));
        }

        /**
         * @param labelMetricsReports List of metrics entries per label.
         * 
         * @return builder
         * 
         */
        public Builder labelMetricsReports(@Nullable Output<List<ModelMetricLabelMetricsReportArgs>> labelMetricsReports) {
            $.labelMetricsReports = labelMetricsReports;
            return this;
        }

        /**
         * @param labelMetricsReports List of metrics entries per label.
         * 
         * @return builder
         * 
         */
        public Builder labelMetricsReports(List<ModelMetricLabelMetricsReportArgs> labelMetricsReports) {
            return labelMetricsReports(Output.of(labelMetricsReports));
        }

        /**
         * @param labelMetricsReports List of metrics entries per label.
         * 
         * @return builder
         * 
         */
        public Builder labelMetricsReports(ModelMetricLabelMetricsReportArgs... labelMetricsReports) {
            return labelMetricsReports(List.of(labelMetricsReports));
        }

        /**
         * @param modelType The type of the Document model.
         * 
         * @return builder
         * 
         */
        public Builder modelType(@Nullable Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        /**
         * @param modelType The type of the Document model.
         * 
         * @return builder
         * 
         */
        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        /**
         * @param overallMetricsReports Overall Metrics report for Document Classification Model.
         * 
         * @return builder
         * 
         */
        public Builder overallMetricsReports(@Nullable Output<List<ModelMetricOverallMetricsReportArgs>> overallMetricsReports) {
            $.overallMetricsReports = overallMetricsReports;
            return this;
        }

        /**
         * @param overallMetricsReports Overall Metrics report for Document Classification Model.
         * 
         * @return builder
         * 
         */
        public Builder overallMetricsReports(List<ModelMetricOverallMetricsReportArgs> overallMetricsReports) {
            return overallMetricsReports(Output.of(overallMetricsReports));
        }

        /**
         * @param overallMetricsReports Overall Metrics report for Document Classification Model.
         * 
         * @return builder
         * 
         */
        public Builder overallMetricsReports(ModelMetricOverallMetricsReportArgs... overallMetricsReports) {
            return overallMetricsReports(List.of(overallMetricsReports));
        }

        public ModelMetricArgs build() {
            return $;
        }
    }

}
