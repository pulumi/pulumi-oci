// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiDocument.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelTrainingDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelTrainingDatasetArgs Empty = new ModelTrainingDatasetArgs();

    /**
     * The name of the Object Storage bucket that contains the input data file.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return The name of the Object Storage bucket that contains the input data file.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * OCID of the Data Labeling dataset.
     * 
     */
    @Import(name="datasetId")
    private @Nullable Output<String> datasetId;

    /**
     * @return OCID of the Data Labeling dataset.
     * 
     */
    public Optional<Output<String>> datasetId() {
        return Optional.ofNullable(this.datasetId);
    }

    /**
     * The dataset type, based on where it is stored.
     * 
     */
    @Import(name="datasetType", required=true)
    private Output<String> datasetType;

    /**
     * @return The dataset type, based on where it is stored.
     * 
     */
    public Output<String> datasetType() {
        return this.datasetType;
    }

    /**
     * The namespace name of the Object Storage bucket that contains the input data file.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace name of the Object Storage bucket that contains the input data file.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The object name of the input data file.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="object")
    private @Nullable Output<String> object;

    /**
     * @return The object name of the input data file.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> object() {
        return Optional.ofNullable(this.object);
    }

    private ModelTrainingDatasetArgs() {}

    private ModelTrainingDatasetArgs(ModelTrainingDatasetArgs $) {
        this.bucket = $.bucket;
        this.datasetId = $.datasetId;
        this.datasetType = $.datasetType;
        this.namespace = $.namespace;
        this.object = $.object;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelTrainingDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelTrainingDatasetArgs $;

        public Builder() {
            $ = new ModelTrainingDatasetArgs();
        }

        public Builder(ModelTrainingDatasetArgs defaults) {
            $ = new ModelTrainingDatasetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the Object Storage bucket that contains the input data file.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the Object Storage bucket that contains the input data file.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param datasetId OCID of the Data Labeling dataset.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(@Nullable Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param datasetId OCID of the Data Labeling dataset.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        /**
         * @param datasetType The dataset type, based on where it is stored.
         * 
         * @return builder
         * 
         */
        public Builder datasetType(Output<String> datasetType) {
            $.datasetType = datasetType;
            return this;
        }

        /**
         * @param datasetType The dataset type, based on where it is stored.
         * 
         * @return builder
         * 
         */
        public Builder datasetType(String datasetType) {
            return datasetType(Output.of(datasetType));
        }

        /**
         * @param namespace The namespace name of the Object Storage bucket that contains the input data file.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace name of the Object Storage bucket that contains the input data file.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param object The object name of the input data file.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder object(@Nullable Output<String> object) {
            $.object = object;
            return this;
        }

        /**
         * @param object The object name of the input data file.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            return object(Output.of(object));
        }

        public ModelTrainingDatasetArgs build() {
            $.datasetType = Objects.requireNonNull($.datasetType, "expected parameter 'datasetType' to be non-null");
            return $;
        }
    }

}
