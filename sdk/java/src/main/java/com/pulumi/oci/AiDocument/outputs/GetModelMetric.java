// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiDocument.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiDocument.outputs.GetModelMetricDatasetSummary;
import com.pulumi.oci.AiDocument.outputs.GetModelMetricLabelMetricsReport;
import com.pulumi.oci.AiDocument.outputs.GetModelMetricOverallMetricsReport;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelMetric {
    /**
     * @return Summary of count of samples used during model training.
     * 
     */
    private List<GetModelMetricDatasetSummary> datasetSummaries;
    /**
     * @return List of metrics entries per label.
     * 
     */
    private List<GetModelMetricLabelMetricsReport> labelMetricsReports;
    /**
     * @return The type of the Document model.
     * 
     */
    private String modelType;
    /**
     * @return Overall Metrics report for Document Classification Model.
     * 
     */
    private List<GetModelMetricOverallMetricsReport> overallMetricsReports;

    private GetModelMetric() {}
    /**
     * @return Summary of count of samples used during model training.
     * 
     */
    public List<GetModelMetricDatasetSummary> datasetSummaries() {
        return this.datasetSummaries;
    }
    /**
     * @return List of metrics entries per label.
     * 
     */
    public List<GetModelMetricLabelMetricsReport> labelMetricsReports() {
        return this.labelMetricsReports;
    }
    /**
     * @return The type of the Document model.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return Overall Metrics report for Document Classification Model.
     * 
     */
    public List<GetModelMetricOverallMetricsReport> overallMetricsReports() {
        return this.overallMetricsReports;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelMetric defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetModelMetricDatasetSummary> datasetSummaries;
        private List<GetModelMetricLabelMetricsReport> labelMetricsReports;
        private String modelType;
        private List<GetModelMetricOverallMetricsReport> overallMetricsReports;
        public Builder() {}
        public Builder(GetModelMetric defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetSummaries = defaults.datasetSummaries;
    	      this.labelMetricsReports = defaults.labelMetricsReports;
    	      this.modelType = defaults.modelType;
    	      this.overallMetricsReports = defaults.overallMetricsReports;
        }

        @CustomType.Setter
        public Builder datasetSummaries(List<GetModelMetricDatasetSummary> datasetSummaries) {
            if (datasetSummaries == null) {
              throw new MissingRequiredPropertyException("GetModelMetric", "datasetSummaries");
            }
            this.datasetSummaries = datasetSummaries;
            return this;
        }
        public Builder datasetSummaries(GetModelMetricDatasetSummary... datasetSummaries) {
            return datasetSummaries(List.of(datasetSummaries));
        }
        @CustomType.Setter
        public Builder labelMetricsReports(List<GetModelMetricLabelMetricsReport> labelMetricsReports) {
            if (labelMetricsReports == null) {
              throw new MissingRequiredPropertyException("GetModelMetric", "labelMetricsReports");
            }
            this.labelMetricsReports = labelMetricsReports;
            return this;
        }
        public Builder labelMetricsReports(GetModelMetricLabelMetricsReport... labelMetricsReports) {
            return labelMetricsReports(List.of(labelMetricsReports));
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetModelMetric", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder overallMetricsReports(List<GetModelMetricOverallMetricsReport> overallMetricsReports) {
            if (overallMetricsReports == null) {
              throw new MissingRequiredPropertyException("GetModelMetric", "overallMetricsReports");
            }
            this.overallMetricsReports = overallMetricsReports;
            return this;
        }
        public Builder overallMetricsReports(GetModelMetricOverallMetricsReport... overallMetricsReports) {
            return overallMetricsReports(List.of(overallMetricsReports));
        }
        public GetModelMetric build() {
            final var _resultValue = new GetModelMetric();
            _resultValue.datasetSummaries = datasetSummaries;
            _resultValue.labelMetricsReports = labelMetricsReports;
            _resultValue.modelType = modelType;
            _resultValue.overallMetricsReports = overallMetricsReports;
            return _resultValue;
        }
    }
}
