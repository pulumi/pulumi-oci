// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiDocument.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetModelsModelCollectionItemMetricDatasetSummary {
    /**
     * @return Number of samples used for testing the model.
     * 
     */
    private Integer testSampleCount;
    /**
     * @return Number of samples used for training the model.
     * 
     */
    private Integer trainingSampleCount;
    /**
     * @return Number of samples used for validating the model.
     * 
     */
    private Integer validationSampleCount;

    private GetModelsModelCollectionItemMetricDatasetSummary() {}
    /**
     * @return Number of samples used for testing the model.
     * 
     */
    public Integer testSampleCount() {
        return this.testSampleCount;
    }
    /**
     * @return Number of samples used for training the model.
     * 
     */
    public Integer trainingSampleCount() {
        return this.trainingSampleCount;
    }
    /**
     * @return Number of samples used for validating the model.
     * 
     */
    public Integer validationSampleCount() {
        return this.validationSampleCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModelCollectionItemMetricDatasetSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer testSampleCount;
        private Integer trainingSampleCount;
        private Integer validationSampleCount;
        public Builder() {}
        public Builder(GetModelsModelCollectionItemMetricDatasetSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.testSampleCount = defaults.testSampleCount;
    	      this.trainingSampleCount = defaults.trainingSampleCount;
    	      this.validationSampleCount = defaults.validationSampleCount;
        }

        @CustomType.Setter
        public Builder testSampleCount(Integer testSampleCount) {
            this.testSampleCount = Objects.requireNonNull(testSampleCount);
            return this;
        }
        @CustomType.Setter
        public Builder trainingSampleCount(Integer trainingSampleCount) {
            this.trainingSampleCount = Objects.requireNonNull(trainingSampleCount);
            return this;
        }
        @CustomType.Setter
        public Builder validationSampleCount(Integer validationSampleCount) {
            this.validationSampleCount = Objects.requireNonNull(validationSampleCount);
            return this;
        }
        public GetModelsModelCollectionItemMetricDatasetSummary build() {
            final var o = new GetModelsModelCollectionItemMetricDatasetSummary();
            o.testSampleCount = testSampleCount;
            o.trainingSampleCount = trainingSampleCount;
            o.validationSampleCount = validationSampleCount;
            return o;
        }
    }
}
