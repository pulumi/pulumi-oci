// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiDocument.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetModelsModelCollectionItemModelSubType {
    /**
     * @return The model sub type for PRE_TRAINED_KEY_VALUE_EXTRACTION The allowed values are:
     * * `RECEIPT`
     * * `INVOICE`
     * * `PASSPORT`
     * * `DRIVER_LICENSE`
     * * `HEALTH_INSURANCE_ID`
     * 
     */
    private String modelSubType;
    /**
     * @return The type of the Document model.
     * 
     */
    private String modelType;

    private GetModelsModelCollectionItemModelSubType() {}
    /**
     * @return The model sub type for PRE_TRAINED_KEY_VALUE_EXTRACTION The allowed values are:
     * * `RECEIPT`
     * * `INVOICE`
     * * `PASSPORT`
     * * `DRIVER_LICENSE`
     * * `HEALTH_INSURANCE_ID`
     * 
     */
    public String modelSubType() {
        return this.modelSubType;
    }
    /**
     * @return The type of the Document model.
     * 
     */
    public String modelType() {
        return this.modelType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModelCollectionItemModelSubType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String modelSubType;
        private String modelType;
        public Builder() {}
        public Builder(GetModelsModelCollectionItemModelSubType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.modelSubType = defaults.modelSubType;
    	      this.modelType = defaults.modelType;
        }

        @CustomType.Setter
        public Builder modelSubType(String modelSubType) {
            if (modelSubType == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItemModelSubType", "modelSubType");
            }
            this.modelSubType = modelSubType;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItemModelSubType", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        public GetModelsModelCollectionItemModelSubType build() {
            final var _resultValue = new GetModelsModelCollectionItemModelSubType();
            _resultValue.modelSubType = modelSubType;
            _resultValue.modelType = modelType;
            return _resultValue;
        }
    }
}
