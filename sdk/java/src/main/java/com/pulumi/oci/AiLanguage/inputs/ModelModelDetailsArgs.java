// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiLanguage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiLanguage.inputs.ModelModelDetailsClassificationModeArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelModelDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelModelDetailsArgs Empty = new ModelModelDetailsArgs();

    /**
     * possible text classification modes
     * 
     */
    @Import(name="classificationMode")
    private @Nullable Output<ModelModelDetailsClassificationModeArgs> classificationMode;

    /**
     * @return possible text classification modes
     * 
     */
    public Optional<Output<ModelModelDetailsClassificationModeArgs>> classificationMode() {
        return Optional.ofNullable(this.classificationMode);
    }

    /**
     * supported language default value is en
     * 
     */
    @Import(name="languageCode")
    private @Nullable Output<String> languageCode;

    /**
     * @return supported language default value is en
     * 
     */
    public Optional<Output<String>> languageCode() {
        return Optional.ofNullable(this.languageCode);
    }

    /**
     * Model type
     * 
     */
    @Import(name="modelType", required=true)
    private Output<String> modelType;

    /**
     * @return Model type
     * 
     */
    public Output<String> modelType() {
        return this.modelType;
    }

    /**
     * Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ModelModelDetailsArgs() {}

    private ModelModelDetailsArgs(ModelModelDetailsArgs $) {
        this.classificationMode = $.classificationMode;
        this.languageCode = $.languageCode;
        this.modelType = $.modelType;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelModelDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelModelDetailsArgs $;

        public Builder() {
            $ = new ModelModelDetailsArgs();
        }

        public Builder(ModelModelDetailsArgs defaults) {
            $ = new ModelModelDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param classificationMode possible text classification modes
         * 
         * @return builder
         * 
         */
        public Builder classificationMode(@Nullable Output<ModelModelDetailsClassificationModeArgs> classificationMode) {
            $.classificationMode = classificationMode;
            return this;
        }

        /**
         * @param classificationMode possible text classification modes
         * 
         * @return builder
         * 
         */
        public Builder classificationMode(ModelModelDetailsClassificationModeArgs classificationMode) {
            return classificationMode(Output.of(classificationMode));
        }

        /**
         * @param languageCode supported language default value is en
         * 
         * @return builder
         * 
         */
        public Builder languageCode(@Nullable Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        /**
         * @param languageCode supported language default value is en
         * 
         * @return builder
         * 
         */
        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        /**
         * @param modelType Model type
         * 
         * @return builder
         * 
         */
        public Builder modelType(Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        /**
         * @param modelType Model type
         * 
         * @return builder
         * 
         */
        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        /**
         * @param version Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ModelModelDetailsArgs build() {
            if ($.modelType == null) {
                throw new MissingRequiredPropertyException("ModelModelDetailsArgs", "modelType");
            }
            return $;
        }
    }

}
