// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiLanguage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelModelDetailsClassificationModeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelModelDetailsClassificationModeArgs Empty = new ModelModelDetailsClassificationModeArgs();

    /**
     * classification Modes
     * 
     */
    @Import(name="classificationMode", required=true)
    private Output<String> classificationMode;

    /**
     * @return classification Modes
     * 
     */
    public Output<String> classificationMode() {
        return this.classificationMode;
    }

    /**
     * Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ModelModelDetailsClassificationModeArgs() {}

    private ModelModelDetailsClassificationModeArgs(ModelModelDetailsClassificationModeArgs $) {
        this.classificationMode = $.classificationMode;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelModelDetailsClassificationModeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelModelDetailsClassificationModeArgs $;

        public Builder() {
            $ = new ModelModelDetailsClassificationModeArgs();
        }

        public Builder(ModelModelDetailsClassificationModeArgs defaults) {
            $ = new ModelModelDetailsClassificationModeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param classificationMode classification Modes
         * 
         * @return builder
         * 
         */
        public Builder classificationMode(Output<String> classificationMode) {
            $.classificationMode = classificationMode;
            return this;
        }

        /**
         * @param classificationMode classification Modes
         * 
         * @return builder
         * 
         */
        public Builder classificationMode(String classificationMode) {
            return classificationMode(Output.of(classificationMode));
        }

        /**
         * @param version Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ModelModelDetailsClassificationModeArgs build() {
            $.classificationMode = Objects.requireNonNull($.classificationMode, "expected parameter 'classificationMode' to be non-null");
            return $;
        }
    }

}
