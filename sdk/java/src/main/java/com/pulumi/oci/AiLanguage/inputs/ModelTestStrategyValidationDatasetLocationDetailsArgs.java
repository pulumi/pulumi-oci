// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiLanguage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ModelTestStrategyValidationDatasetLocationDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelTestStrategyValidationDatasetLocationDetailsArgs Empty = new ModelTestStrategyValidationDatasetLocationDetailsArgs();

    /**
     * Object storage bucket name
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return Object storage bucket name
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * Possible object storage location types
     * 
     */
    @Import(name="locationType", required=true)
    private Output<String> locationType;

    /**
     * @return Possible object storage location types
     * 
     */
    public Output<String> locationType() {
        return this.locationType;
    }

    /**
     * Object storage namespace
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return Object storage namespace
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * Array of files which need to be processed in the bucket
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="objectNames", required=true)
    private Output<List<String>> objectNames;

    /**
     * @return Array of files which need to be processed in the bucket
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<List<String>> objectNames() {
        return this.objectNames;
    }

    private ModelTestStrategyValidationDatasetLocationDetailsArgs() {}

    private ModelTestStrategyValidationDatasetLocationDetailsArgs(ModelTestStrategyValidationDatasetLocationDetailsArgs $) {
        this.bucket = $.bucket;
        this.locationType = $.locationType;
        this.namespace = $.namespace;
        this.objectNames = $.objectNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelTestStrategyValidationDatasetLocationDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelTestStrategyValidationDatasetLocationDetailsArgs $;

        public Builder() {
            $ = new ModelTestStrategyValidationDatasetLocationDetailsArgs();
        }

        public Builder(ModelTestStrategyValidationDatasetLocationDetailsArgs defaults) {
            $ = new ModelTestStrategyValidationDatasetLocationDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Object storage bucket name
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Object storage bucket name
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param locationType Possible object storage location types
         * 
         * @return builder
         * 
         */
        public Builder locationType(Output<String> locationType) {
            $.locationType = locationType;
            return this;
        }

        /**
         * @param locationType Possible object storage location types
         * 
         * @return builder
         * 
         */
        public Builder locationType(String locationType) {
            return locationType(Output.of(locationType));
        }

        /**
         * @param namespace Object storage namespace
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Object storage namespace
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param objectNames Array of files which need to be processed in the bucket
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder objectNames(Output<List<String>> objectNames) {
            $.objectNames = objectNames;
            return this;
        }

        /**
         * @param objectNames Array of files which need to be processed in the bucket
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder objectNames(List<String> objectNames) {
            return objectNames(Output.of(objectNames));
        }

        /**
         * @param objectNames Array of files which need to be processed in the bucket
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder objectNames(String... objectNames) {
            return objectNames(List.of(objectNames));
        }

        public ModelTestStrategyValidationDatasetLocationDetailsArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("ModelTestStrategyValidationDatasetLocationDetailsArgs", "bucket");
            }
            if ($.locationType == null) {
                throw new MissingRequiredPropertyException("ModelTestStrategyValidationDatasetLocationDetailsArgs", "locationType");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("ModelTestStrategyValidationDatasetLocationDetailsArgs", "namespace");
            }
            if ($.objectNames == null) {
                throw new MissingRequiredPropertyException("ModelTestStrategyValidationDatasetLocationDetailsArgs", "objectNames");
            }
            return $;
        }
    }

}
