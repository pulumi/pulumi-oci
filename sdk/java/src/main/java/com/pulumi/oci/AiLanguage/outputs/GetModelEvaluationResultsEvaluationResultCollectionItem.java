// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiLanguage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiLanguage.outputs.GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity;
import com.pulumi.oci.AiLanguage.outputs.GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetModelEvaluationResultsEvaluationResultCollectionItem {
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
     * 
     */
    private String location;
    /**
     * @return Model type
     * 
     */
    private String modelType;
    /**
     * @return List of true(actual) entities in test data for NER model
     * 
     */
    private List<GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity> predictedEntities;
    /**
     * @return List of predicted labels by custom multi class or multi label TextClassification model
     * 
     */
    private List<String> predictedLabels;
    /**
     * @return For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
     * 
     */
    private String record;
    /**
     * @return List of true(actual) entities in test data for NER model
     * 
     */
    private List<GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity> trueEntities;
    /**
     * @return List of true(actual) labels in test data for multi class or multi label TextClassification
     * 
     */
    private List<String> trueLabels;

    private GetModelEvaluationResultsEvaluationResultCollectionItem() {}
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Model type
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return List of true(actual) entities in test data for NER model
     * 
     */
    public List<GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity> predictedEntities() {
        return this.predictedEntities;
    }
    /**
     * @return List of predicted labels by custom multi class or multi label TextClassification model
     * 
     */
    public List<String> predictedLabels() {
        return this.predictedLabels;
    }
    /**
     * @return For CSV format location is rowId(1 is header) and for JSONL location is jsonL line sequence(1 is metadata)
     * 
     */
    public String record() {
        return this.record;
    }
    /**
     * @return List of true(actual) entities in test data for NER model
     * 
     */
    public List<GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity> trueEntities() {
        return this.trueEntities;
    }
    /**
     * @return List of true(actual) labels in test data for multi class or multi label TextClassification
     * 
     */
    public List<String> trueLabels() {
        return this.trueLabels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelEvaluationResultsEvaluationResultCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private String location;
        private String modelType;
        private List<GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity> predictedEntities;
        private List<String> predictedLabels;
        private String record;
        private List<GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity> trueEntities;
        private List<String> trueLabels;
        public Builder() {}
        public Builder(GetModelEvaluationResultsEvaluationResultCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.location = defaults.location;
    	      this.modelType = defaults.modelType;
    	      this.predictedEntities = defaults.predictedEntities;
    	      this.predictedLabels = defaults.predictedLabels;
    	      this.record = defaults.record;
    	      this.trueEntities = defaults.trueEntities;
    	      this.trueLabels = defaults.trueLabels;
        }

        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder predictedEntities(List<GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity> predictedEntities) {
            if (predictedEntities == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "predictedEntities");
            }
            this.predictedEntities = predictedEntities;
            return this;
        }
        public Builder predictedEntities(GetModelEvaluationResultsEvaluationResultCollectionItemPredictedEntity... predictedEntities) {
            return predictedEntities(List.of(predictedEntities));
        }
        @CustomType.Setter
        public Builder predictedLabels(List<String> predictedLabels) {
            if (predictedLabels == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "predictedLabels");
            }
            this.predictedLabels = predictedLabels;
            return this;
        }
        public Builder predictedLabels(String... predictedLabels) {
            return predictedLabels(List.of(predictedLabels));
        }
        @CustomType.Setter
        public Builder record(String record) {
            if (record == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "record");
            }
            this.record = record;
            return this;
        }
        @CustomType.Setter
        public Builder trueEntities(List<GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity> trueEntities) {
            if (trueEntities == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "trueEntities");
            }
            this.trueEntities = trueEntities;
            return this;
        }
        public Builder trueEntities(GetModelEvaluationResultsEvaluationResultCollectionItemTrueEntity... trueEntities) {
            return trueEntities(List.of(trueEntities));
        }
        @CustomType.Setter
        public Builder trueLabels(List<String> trueLabels) {
            if (trueLabels == null) {
              throw new MissingRequiredPropertyException("GetModelEvaluationResultsEvaluationResultCollectionItem", "trueLabels");
            }
            this.trueLabels = trueLabels;
            return this;
        }
        public Builder trueLabels(String... trueLabels) {
            return trueLabels(List.of(trueLabels));
        }
        public GetModelEvaluationResultsEvaluationResultCollectionItem build() {
            final var _resultValue = new GetModelEvaluationResultsEvaluationResultCollectionItem();
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.location = location;
            _resultValue.modelType = modelType;
            _resultValue.predictedEntities = predictedEntities;
            _resultValue.predictedLabels = predictedLabels;
            _resultValue.record = record;
            _resultValue.trueEntities = trueEntities;
            _resultValue.trueLabels = trueLabels;
            return _resultValue;
        }
    }
}
