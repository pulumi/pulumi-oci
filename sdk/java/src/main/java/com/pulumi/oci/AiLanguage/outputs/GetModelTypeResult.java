// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiLanguage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelTypeResult {
    /**
     * @return Model information capabilities related to version
     * 
     */
    private String capabilities;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String modelType;
    /**
     * @return Model versions available for this model type
     * 
     */
    private List<String> versions;

    private GetModelTypeResult() {}
    /**
     * @return Model information capabilities related to version
     * 
     */
    public String capabilities() {
        return this.capabilities;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return Model versions available for this model type
     * 
     */
    public List<String> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelTypeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String capabilities;
        private String id;
        private String modelType;
        private List<String> versions;
        public Builder() {}
        public Builder(GetModelTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capabilities = defaults.capabilities;
    	      this.id = defaults.id;
    	      this.modelType = defaults.modelType;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder capabilities(String capabilities) {
            this.capabilities = Objects.requireNonNull(capabilities);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            this.modelType = Objects.requireNonNull(modelType);
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<String> versions) {
            this.versions = Objects.requireNonNull(versions);
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public GetModelTypeResult build() {
            final var o = new GetModelTypeResult();
            o.capabilities = capabilities;
            o.id = id;
            o.modelType = modelType;
            o.versions = versions;
            return o;
        }
    }
}
