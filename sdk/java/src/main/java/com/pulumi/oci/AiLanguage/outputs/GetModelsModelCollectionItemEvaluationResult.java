// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiLanguage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiLanguage.outputs.GetModelsModelCollectionItemEvaluationResultClassMetric;
import com.pulumi.oci.AiLanguage.outputs.GetModelsModelCollectionItemEvaluationResultEntityMetric;
import com.pulumi.oci.AiLanguage.outputs.GetModelsModelCollectionItemEvaluationResultMetric;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelsModelCollectionItemEvaluationResult {
    /**
     * @return List of text classification metrics
     * 
     */
    private List<GetModelsModelCollectionItemEvaluationResultClassMetric> classMetrics;
    /**
     * @return class level confusion matrix
     * 
     */
    private String confusionMatrix;
    /**
     * @return List of entity metrics
     * 
     */
    private List<GetModelsModelCollectionItemEvaluationResultEntityMetric> entityMetrics;
    /**
     * @return labels
     * 
     */
    private List<String> labels;
    /**
     * @return Model level named entity recognition metrics
     * 
     */
    private List<GetModelsModelCollectionItemEvaluationResultMetric> metrics;
    /**
     * @return Model type
     * 
     */
    private String modelType;

    private GetModelsModelCollectionItemEvaluationResult() {}
    /**
     * @return List of text classification metrics
     * 
     */
    public List<GetModelsModelCollectionItemEvaluationResultClassMetric> classMetrics() {
        return this.classMetrics;
    }
    /**
     * @return class level confusion matrix
     * 
     */
    public String confusionMatrix() {
        return this.confusionMatrix;
    }
    /**
     * @return List of entity metrics
     * 
     */
    public List<GetModelsModelCollectionItemEvaluationResultEntityMetric> entityMetrics() {
        return this.entityMetrics;
    }
    /**
     * @return labels
     * 
     */
    public List<String> labels() {
        return this.labels;
    }
    /**
     * @return Model level named entity recognition metrics
     * 
     */
    public List<GetModelsModelCollectionItemEvaluationResultMetric> metrics() {
        return this.metrics;
    }
    /**
     * @return Model type
     * 
     */
    public String modelType() {
        return this.modelType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModelCollectionItemEvaluationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetModelsModelCollectionItemEvaluationResultClassMetric> classMetrics;
        private String confusionMatrix;
        private List<GetModelsModelCollectionItemEvaluationResultEntityMetric> entityMetrics;
        private List<String> labels;
        private List<GetModelsModelCollectionItemEvaluationResultMetric> metrics;
        private String modelType;
        public Builder() {}
        public Builder(GetModelsModelCollectionItemEvaluationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.classMetrics = defaults.classMetrics;
    	      this.confusionMatrix = defaults.confusionMatrix;
    	      this.entityMetrics = defaults.entityMetrics;
    	      this.labels = defaults.labels;
    	      this.metrics = defaults.metrics;
    	      this.modelType = defaults.modelType;
        }

        @CustomType.Setter
        public Builder classMetrics(List<GetModelsModelCollectionItemEvaluationResultClassMetric> classMetrics) {
            this.classMetrics = Objects.requireNonNull(classMetrics);
            return this;
        }
        public Builder classMetrics(GetModelsModelCollectionItemEvaluationResultClassMetric... classMetrics) {
            return classMetrics(List.of(classMetrics));
        }
        @CustomType.Setter
        public Builder confusionMatrix(String confusionMatrix) {
            this.confusionMatrix = Objects.requireNonNull(confusionMatrix);
            return this;
        }
        @CustomType.Setter
        public Builder entityMetrics(List<GetModelsModelCollectionItemEvaluationResultEntityMetric> entityMetrics) {
            this.entityMetrics = Objects.requireNonNull(entityMetrics);
            return this;
        }
        public Builder entityMetrics(GetModelsModelCollectionItemEvaluationResultEntityMetric... entityMetrics) {
            return entityMetrics(List.of(entityMetrics));
        }
        @CustomType.Setter
        public Builder labels(List<String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        @CustomType.Setter
        public Builder metrics(List<GetModelsModelCollectionItemEvaluationResultMetric> metrics) {
            this.metrics = Objects.requireNonNull(metrics);
            return this;
        }
        public Builder metrics(GetModelsModelCollectionItemEvaluationResultMetric... metrics) {
            return metrics(List.of(metrics));
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            this.modelType = Objects.requireNonNull(modelType);
            return this;
        }
        public GetModelsModelCollectionItemEvaluationResult build() {
            final var _resultValue = new GetModelsModelCollectionItemEvaluationResult();
            _resultValue.classMetrics = classMetrics;
            _resultValue.confusionMatrix = confusionMatrix;
            _resultValue.entityMetrics = entityMetrics;
            _resultValue.labels = labels;
            _resultValue.metrics = metrics;
            _resultValue.modelType = modelType;
            return _resultValue;
        }
    }
}
