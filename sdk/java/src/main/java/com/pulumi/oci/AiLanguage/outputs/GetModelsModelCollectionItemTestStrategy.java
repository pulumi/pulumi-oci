// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiLanguage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiLanguage.outputs.GetModelsModelCollectionItemTestStrategyTestingDataset;
import com.pulumi.oci.AiLanguage.outputs.GetModelsModelCollectionItemTestStrategyValidationDataset;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelsModelCollectionItemTestStrategy {
    /**
     * @return This information will define the test strategy different datasets for test and validation(optional) dataset.
     * 
     */
    private String strategyType;
    /**
     * @return Possible data set type
     * 
     */
    private List<GetModelsModelCollectionItemTestStrategyTestingDataset> testingDatasets;
    /**
     * @return Possible data set type
     * 
     */
    private List<GetModelsModelCollectionItemTestStrategyValidationDataset> validationDatasets;

    private GetModelsModelCollectionItemTestStrategy() {}
    /**
     * @return This information will define the test strategy different datasets for test and validation(optional) dataset.
     * 
     */
    public String strategyType() {
        return this.strategyType;
    }
    /**
     * @return Possible data set type
     * 
     */
    public List<GetModelsModelCollectionItemTestStrategyTestingDataset> testingDatasets() {
        return this.testingDatasets;
    }
    /**
     * @return Possible data set type
     * 
     */
    public List<GetModelsModelCollectionItemTestStrategyValidationDataset> validationDatasets() {
        return this.validationDatasets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModelCollectionItemTestStrategy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String strategyType;
        private List<GetModelsModelCollectionItemTestStrategyTestingDataset> testingDatasets;
        private List<GetModelsModelCollectionItemTestStrategyValidationDataset> validationDatasets;
        public Builder() {}
        public Builder(GetModelsModelCollectionItemTestStrategy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.strategyType = defaults.strategyType;
    	      this.testingDatasets = defaults.testingDatasets;
    	      this.validationDatasets = defaults.validationDatasets;
        }

        @CustomType.Setter
        public Builder strategyType(String strategyType) {
            this.strategyType = Objects.requireNonNull(strategyType);
            return this;
        }
        @CustomType.Setter
        public Builder testingDatasets(List<GetModelsModelCollectionItemTestStrategyTestingDataset> testingDatasets) {
            this.testingDatasets = Objects.requireNonNull(testingDatasets);
            return this;
        }
        public Builder testingDatasets(GetModelsModelCollectionItemTestStrategyTestingDataset... testingDatasets) {
            return testingDatasets(List.of(testingDatasets));
        }
        @CustomType.Setter
        public Builder validationDatasets(List<GetModelsModelCollectionItemTestStrategyValidationDataset> validationDatasets) {
            this.validationDatasets = Objects.requireNonNull(validationDatasets);
            return this;
        }
        public Builder validationDatasets(GetModelsModelCollectionItemTestStrategyValidationDataset... validationDatasets) {
            return validationDatasets(List.of(validationDatasets));
        }
        public GetModelsModelCollectionItemTestStrategy build() {
            final var o = new GetModelsModelCollectionItemTestStrategy();
            o.strategyType = strategyType;
            o.testingDatasets = testingDatasets;
            o.validationDatasets = validationDatasets;
            return o;
        }
    }
}
