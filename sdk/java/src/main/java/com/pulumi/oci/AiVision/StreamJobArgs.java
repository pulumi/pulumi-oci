// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiVision.inputs.StreamJobFeatureArgs;
import com.pulumi.oci.AiVision.inputs.StreamJobStreamOutputLocationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamJobArgs Empty = new StreamJobArgs();

    /**
     * (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Stream job display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Stream job display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) a list of stream analysis features.
     * 
     */
    @Import(name="features", required=true)
    private Output<List<StreamJobFeatureArgs>> features;

    /**
     * @return (Updatable) a list of stream analysis features.
     * 
     */
    public Output<List<StreamJobFeatureArgs>> features() {
        return this.features;
    }

    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) Details about a where results will be Sent
     * 
     */
    @Import(name="streamOutputLocation", required=true)
    private Output<StreamJobStreamOutputLocationArgs> streamOutputLocation;

    /**
     * @return (Updatable) Details about a where results will be Sent
     * 
     */
    public Output<StreamJobStreamOutputLocationArgs> streamOutputLocation() {
        return this.streamOutputLocation;
    }

    /**
     * (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
     * 
     */
    @Import(name="streamSourceId", required=true)
    private Output<String> streamSourceId;

    /**
     * @return (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
     * 
     */
    public Output<String> streamSourceId() {
        return this.streamSourceId;
    }

    private StreamJobArgs() {}

    private StreamJobArgs(StreamJobArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.features = $.features;
        this.freeformTags = $.freeformTags;
        this.state = $.state;
        this.streamOutputLocation = $.streamOutputLocation;
        this.streamSourceId = $.streamSourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamJobArgs $;

        public Builder() {
            $ = new StreamJobArgs();
        }

        public Builder(StreamJobArgs defaults) {
            $ = new StreamJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Stream job display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Stream job display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param features (Updatable) a list of stream analysis features.
         * 
         * @return builder
         * 
         */
        public Builder features(Output<List<StreamJobFeatureArgs>> features) {
            $.features = features;
            return this;
        }

        /**
         * @param features (Updatable) a list of stream analysis features.
         * 
         * @return builder
         * 
         */
        public Builder features(List<StreamJobFeatureArgs> features) {
            return features(Output.of(features));
        }

        /**
         * @param features (Updatable) a list of stream analysis features.
         * 
         * @return builder
         * 
         */
        public Builder features(StreamJobFeatureArgs... features) {
            return features(List.of(features));
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param state (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the Stream Job. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param streamOutputLocation (Updatable) Details about a where results will be Sent
         * 
         * @return builder
         * 
         */
        public Builder streamOutputLocation(Output<StreamJobStreamOutputLocationArgs> streamOutputLocation) {
            $.streamOutputLocation = streamOutputLocation;
            return this;
        }

        /**
         * @param streamOutputLocation (Updatable) Details about a where results will be Sent
         * 
         * @return builder
         * 
         */
        public Builder streamOutputLocation(StreamJobStreamOutputLocationArgs streamOutputLocation) {
            return streamOutputLocation(Output.of(streamOutputLocation));
        }

        /**
         * @param streamSourceId (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
         * 
         * @return builder
         * 
         */
        public Builder streamSourceId(Output<String> streamSourceId) {
            $.streamSourceId = streamSourceId;
            return this;
        }

        /**
         * @param streamSourceId (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of streamSource.
         * 
         * @return builder
         * 
         */
        public Builder streamSourceId(String streamSourceId) {
            return streamSourceId(Output.of(streamSourceId));
        }

        public StreamJobArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("StreamJobArgs", "compartmentId");
            }
            if ($.features == null) {
                throw new MissingRequiredPropertyException("StreamJobArgs", "features");
            }
            if ($.streamOutputLocation == null) {
                throw new MissingRequiredPropertyException("StreamJobArgs", "streamOutputLocation");
            }
            if ($.streamSourceId == null) {
                throw new MissingRequiredPropertyException("StreamJobArgs", "streamSourceId");
            }
            return $;
        }
    }

}
