// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.AiVision.StreamSourceArgs;
import com.pulumi.oci.AiVision.inputs.StreamSourceState;
import com.pulumi.oci.AiVision.outputs.StreamSourceStreamSourceDetails;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Stream Source resource in Oracle Cloud Infrastructure Ai Vision service.
 * 
 * Registration of new streamSource
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.AiVision.StreamSource;
 * import com.pulumi.oci.AiVision.StreamSourceArgs;
 * import com.pulumi.oci.AiVision.inputs.StreamSourceStreamSourceDetailsArgs;
 * import com.pulumi.oci.AiVision.inputs.StreamSourceStreamSourceDetailsStreamNetworkAccessDetailsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testStreamSource = new StreamSource("testStreamSource", StreamSourceArgs.builder()
 *             .compartmentId(compartmentId)
 *             .streamSourceDetails(StreamSourceStreamSourceDetailsArgs.builder()
 *                 .cameraUrl(streamSourceStreamSourceDetailsCameraUrl)
 *                 .sourceType(streamSourceStreamSourceDetailsSourceType)
 *                 .streamNetworkAccessDetails(StreamSourceStreamSourceDetailsStreamNetworkAccessDetailsArgs.builder()
 *                     .privateEndpointId(testPrivateEndpoint.id())
 *                     .streamAccessType(streamSourceStreamSourceDetailsStreamNetworkAccessDetailsStreamAccessType)
 *                     .build())
 *                 .secretId(testSecret.id())
 *                 .build())
 *             .definedTags(streamSourceDefinedTags)
 *             .displayName(streamSourceDisplayName)
 *             .freeformTags(streamSourceFreeformTags)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * StreamSources can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:AiVision/streamSource:StreamSource test_stream_source &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:AiVision/streamSource:StreamSource")
public class StreamSource extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A human-friendly name for the streamSource.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A human-friendly name for the streamSource.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * The current state of the streamSource.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the streamSource.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) Details about a stream source
     * 
     */
    @Export(name="streamSourceDetails", refs={StreamSourceStreamSourceDetails.class}, tree="[0]")
    private Output<StreamSourceStreamSourceDetails> streamSourceDetails;

    /**
     * @return (Updatable) Details about a stream source
     * 
     */
    public Output<StreamSourceStreamSourceDetails> streamSourceDetails() {
        return this.streamSourceDetails;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{&#34;orcl-cloud&#34;: {&#34;free-tier-retained&#34;: &#34;true&#34;}}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{&#34;orcl-cloud&#34;: {&#34;free-tier-retained&#34;: &#34;true&#34;}}`
     * 
     */
    public Output<Map<String,String>> systemTags() {
        return this.systemTags;
    }
    /**
     * When the streamSource was created, as an RFC3339 datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return When the streamSource was created, as an RFC3339 datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * When the streamSource was updated, as an RFC3339 datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return When the streamSource was updated, as an RFC3339 datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamSource(java.lang.String name) {
        this(name, StreamSourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamSource(java.lang.String name, StreamSourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamSource(java.lang.String name, StreamSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:AiVision/streamSource:StreamSource", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StreamSource(java.lang.String name, Output<java.lang.String> id, @Nullable StreamSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:AiVision/streamSource:StreamSource", name, state, makeResourceOptions(options, id), false);
    }

    private static StreamSourceArgs makeArgs(StreamSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StreamSourceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamSource get(java.lang.String name, Output<java.lang.String> id, @Nullable StreamSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StreamSource(name, id, state, options);
    }
}
