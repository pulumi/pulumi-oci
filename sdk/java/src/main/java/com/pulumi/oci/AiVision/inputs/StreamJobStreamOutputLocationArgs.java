// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamJobStreamOutputLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamJobStreamOutputLocationArgs Empty = new StreamJobStreamOutputLocationArgs();

    /**
     * (Updatable) The Object Storage bucket name.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return (Updatable) The Object Storage bucket name.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * (Updatable) The Object Storage namespace.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return (Updatable) The Object Storage namespace.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * (Updatable) Object storage output location
     * 
     */
    @Import(name="oboToken")
    private @Nullable Output<String> oboToken;

    /**
     * @return (Updatable) Object storage output location
     * 
     */
    public Optional<Output<String>> oboToken() {
        return Optional.ofNullable(this.oboToken);
    }

    /**
     * (Updatable) Type of device Allowed values are:
     * * OBJECT_STORAGE
     * * LIVEKIT_WEBRTC_AGENT
     * 
     */
    @Import(name="outputLocationType", required=true)
    private Output<String> outputLocationType;

    /**
     * @return (Updatable) Type of device Allowed values are:
     * * OBJECT_STORAGE
     * * LIVEKIT_WEBRTC_AGENT
     * 
     */
    public Output<String> outputLocationType() {
        return this.outputLocationType;
    }

    /**
     * (Updatable) The Object Storage folder name.
     * 
     */
    @Import(name="prefix", required=true)
    private Output<String> prefix;

    /**
     * @return (Updatable) The Object Storage folder name.
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }

    private StreamJobStreamOutputLocationArgs() {}

    private StreamJobStreamOutputLocationArgs(StreamJobStreamOutputLocationArgs $) {
        this.bucket = $.bucket;
        this.namespace = $.namespace;
        this.oboToken = $.oboToken;
        this.outputLocationType = $.outputLocationType;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamJobStreamOutputLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamJobStreamOutputLocationArgs $;

        public Builder() {
            $ = new StreamJobStreamOutputLocationArgs();
        }

        public Builder(StreamJobStreamOutputLocationArgs defaults) {
            $ = new StreamJobStreamOutputLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket (Updatable) The Object Storage bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket (Updatable) The Object Storage bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param namespace (Updatable) The Object Storage namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) The Object Storage namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param oboToken (Updatable) Object storage output location
         * 
         * @return builder
         * 
         */
        public Builder oboToken(@Nullable Output<String> oboToken) {
            $.oboToken = oboToken;
            return this;
        }

        /**
         * @param oboToken (Updatable) Object storage output location
         * 
         * @return builder
         * 
         */
        public Builder oboToken(String oboToken) {
            return oboToken(Output.of(oboToken));
        }

        /**
         * @param outputLocationType (Updatable) Type of device Allowed values are:
         * * OBJECT_STORAGE
         * * LIVEKIT_WEBRTC_AGENT
         * 
         * @return builder
         * 
         */
        public Builder outputLocationType(Output<String> outputLocationType) {
            $.outputLocationType = outputLocationType;
            return this;
        }

        /**
         * @param outputLocationType (Updatable) Type of device Allowed values are:
         * * OBJECT_STORAGE
         * * LIVEKIT_WEBRTC_AGENT
         * 
         * @return builder
         * 
         */
        public Builder outputLocationType(String outputLocationType) {
            return outputLocationType(Output.of(outputLocationType));
        }

        /**
         * @param prefix (Updatable) The Object Storage folder name.
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix (Updatable) The Object Storage folder name.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public StreamJobStreamOutputLocationArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("StreamJobStreamOutputLocationArgs", "bucket");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("StreamJobStreamOutputLocationArgs", "namespace");
            }
            if ($.outputLocationType == null) {
                throw new MissingRequiredPropertyException("StreamJobStreamOutputLocationArgs", "outputLocationType");
            }
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("StreamJobStreamOutputLocationArgs", "prefix");
            }
            return $;
        }
    }

}
