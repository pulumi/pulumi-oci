// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiVision.inputs.StreamSourceStreamSourceDetailsStreamNetworkAccessDetailsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamSourceStreamSourceDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamSourceStreamSourceDetailsArgs Empty = new StreamSourceStreamSourceDetailsArgs();

    /**
     * (Updatable) url of camera
     * 
     */
    @Import(name="cameraUrl", required=true)
    private Output<String> cameraUrl;

    /**
     * @return (Updatable) url of camera
     * 
     */
    public Output<String> cameraUrl() {
        return this.cameraUrl;
    }

    /**
     * (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
     * 
     */
    @Import(name="secretId")
    private @Nullable Output<String> secretId;

    /**
     * @return (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
     * 
     */
    public Optional<Output<String>> secretId() {
        return Optional.ofNullable(this.secretId);
    }

    /**
     * (Updatable) Type of source Allowed values are:
     * * RTSP
     * 
     */
    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    /**
     * @return (Updatable) Type of source Allowed values are:
     * * RTSP
     * 
     */
    public Output<String> sourceType() {
        return this.sourceType;
    }

    /**
     * (Updatable) Details about a stream Connection type
     * 
     */
    @Import(name="streamNetworkAccessDetails", required=true)
    private Output<StreamSourceStreamSourceDetailsStreamNetworkAccessDetailsArgs> streamNetworkAccessDetails;

    /**
     * @return (Updatable) Details about a stream Connection type
     * 
     */
    public Output<StreamSourceStreamSourceDetailsStreamNetworkAccessDetailsArgs> streamNetworkAccessDetails() {
        return this.streamNetworkAccessDetails;
    }

    private StreamSourceStreamSourceDetailsArgs() {}

    private StreamSourceStreamSourceDetailsArgs(StreamSourceStreamSourceDetailsArgs $) {
        this.cameraUrl = $.cameraUrl;
        this.secretId = $.secretId;
        this.sourceType = $.sourceType;
        this.streamNetworkAccessDetails = $.streamNetworkAccessDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamSourceStreamSourceDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamSourceStreamSourceDetailsArgs $;

        public Builder() {
            $ = new StreamSourceStreamSourceDetailsArgs();
        }

        public Builder(StreamSourceStreamSourceDetailsArgs defaults) {
            $ = new StreamSourceStreamSourceDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cameraUrl (Updatable) url of camera
         * 
         * @return builder
         * 
         */
        public Builder cameraUrl(Output<String> cameraUrl) {
            $.cameraUrl = cameraUrl;
            return this;
        }

        /**
         * @param cameraUrl (Updatable) url of camera
         * 
         * @return builder
         * 
         */
        public Builder cameraUrl(String cameraUrl) {
            return cameraUrl(Output.of(cameraUrl));
        }

        /**
         * @param secretId (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
         * 
         * @return builder
         * 
         */
        public Builder secretId(@Nullable Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        /**
         * @param secretId (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
         * 
         * @return builder
         * 
         */
        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        /**
         * @param sourceType (Updatable) Type of source Allowed values are:
         * * RTSP
         * 
         * @return builder
         * 
         */
        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType (Updatable) Type of source Allowed values are:
         * * RTSP
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        /**
         * @param streamNetworkAccessDetails (Updatable) Details about a stream Connection type
         * 
         * @return builder
         * 
         */
        public Builder streamNetworkAccessDetails(Output<StreamSourceStreamSourceDetailsStreamNetworkAccessDetailsArgs> streamNetworkAccessDetails) {
            $.streamNetworkAccessDetails = streamNetworkAccessDetails;
            return this;
        }

        /**
         * @param streamNetworkAccessDetails (Updatable) Details about a stream Connection type
         * 
         * @return builder
         * 
         */
        public Builder streamNetworkAccessDetails(StreamSourceStreamSourceDetailsStreamNetworkAccessDetailsArgs streamNetworkAccessDetails) {
            return streamNetworkAccessDetails(Output.of(streamNetworkAccessDetails));
        }

        public StreamSourceStreamSourceDetailsArgs build() {
            if ($.cameraUrl == null) {
                throw new MissingRequiredPropertyException("StreamSourceStreamSourceDetailsArgs", "cameraUrl");
            }
            if ($.sourceType == null) {
                throw new MissingRequiredPropertyException("StreamSourceStreamSourceDetailsArgs", "sourceType");
            }
            if ($.streamNetworkAccessDetails == null) {
                throw new MissingRequiredPropertyException("StreamSourceStreamSourceDetailsArgs", "streamNetworkAccessDetails");
            }
            return $;
        }
    }

}
