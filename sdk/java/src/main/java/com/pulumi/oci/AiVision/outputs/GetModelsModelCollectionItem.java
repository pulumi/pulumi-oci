// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiVision.outputs.GetModelsModelCollectionItemTestingDataset;
import com.pulumi.oci.AiVision.outputs.GetModelsModelCollectionItemTrainingDataset;
import com.pulumi.oci.AiVision.outputs.GetModelsModelCollectionItemValidationDataset;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetModelsModelCollectionItem {
    /**
     * @return Average precision of the trained model
     * 
     */
    private @Nullable Double averagePrecision;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Confidence ratio of the calculation
     * 
     */
    private @Nullable Double confidenceThreshold;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A short description of the model.
     * 
     */
    private @Nullable String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return unique Model identifier
     * 
     */
    private @Nullable String id;
    /**
     * @return If It&#39;s true, Training is set for recommended epochs needed for quick training.
     * 
     */
    private @Nullable Boolean isQuickMode;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The maximum duration in hours for which the training will run.
     * 
     */
    private @Nullable Double maxTrainingDurationInHours;
    /**
     * @return Complete Training Metrics for successful trained model
     * 
     */
    private @Nullable String metrics;
    /**
     * @return Type of the Model.
     * 
     */
    private @Nullable String modelType;
    /**
     * @return The version of the model
     * 
     */
    private @Nullable String modelVersion;
    /**
     * @return Precision of the trained model
     * 
     */
    private @Nullable Double precision;
    /**
     * @return The ID of the project for which to list the objects.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Recall of the trained model
     * 
     */
    private @Nullable Double recall;
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return Total number of testing Images
     * 
     */
    private @Nullable Integer testImageCount;
    /**
     * @return The base entity for a Dataset, which is the input for Model creation.
     * 
     */
    private @Nullable List<GetModelsModelCollectionItemTestingDataset> testingDatasets;
    /**
     * @return The time the Model was created. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the Model was updated. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Total number of training Images
     * 
     */
    private @Nullable Integer totalImageCount;
    /**
     * @return Total hours actually used for training
     * 
     */
    private @Nullable Double trainedDurationInHours;
    /**
     * @return The base entity for a Dataset, which is the input for Model creation.
     * 
     */
    private @Nullable List<GetModelsModelCollectionItemTrainingDataset> trainingDatasets;
    /**
     * @return The base entity for a Dataset, which is the input for Model creation.
     * 
     */
    private @Nullable List<GetModelsModelCollectionItemValidationDataset> validationDatasets;

    private GetModelsModelCollectionItem() {}
    /**
     * @return Average precision of the trained model
     * 
     */
    public Optional<Double> averagePrecision() {
        return Optional.ofNullable(this.averagePrecision);
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Confidence ratio of the calculation
     * 
     */
    public Optional<Double> confidenceThreshold() {
        return Optional.ofNullable(this.confidenceThreshold);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A short description of the model.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return unique Model identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return If It&#39;s true, Training is set for recommended epochs needed for quick training.
     * 
     */
    public Optional<Boolean> isQuickMode() {
        return Optional.ofNullable(this.isQuickMode);
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The maximum duration in hours for which the training will run.
     * 
     */
    public Optional<Double> maxTrainingDurationInHours() {
        return Optional.ofNullable(this.maxTrainingDurationInHours);
    }
    /**
     * @return Complete Training Metrics for successful trained model
     * 
     */
    public Optional<String> metrics() {
        return Optional.ofNullable(this.metrics);
    }
    /**
     * @return Type of the Model.
     * 
     */
    public Optional<String> modelType() {
        return Optional.ofNullable(this.modelType);
    }
    /**
     * @return The version of the model
     * 
     */
    public Optional<String> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }
    /**
     * @return Precision of the trained model
     * 
     */
    public Optional<Double> precision() {
        return Optional.ofNullable(this.precision);
    }
    /**
     * @return The ID of the project for which to list the objects.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Recall of the trained model
     * 
     */
    public Optional<Double> recall() {
        return Optional.ofNullable(this.recall);
    }
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return Total number of testing Images
     * 
     */
    public Optional<Integer> testImageCount() {
        return Optional.ofNullable(this.testImageCount);
    }
    /**
     * @return The base entity for a Dataset, which is the input for Model creation.
     * 
     */
    public List<GetModelsModelCollectionItemTestingDataset> testingDatasets() {
        return this.testingDatasets == null ? List.of() : this.testingDatasets;
    }
    /**
     * @return The time the Model was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the Model was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Total number of training Images
     * 
     */
    public Optional<Integer> totalImageCount() {
        return Optional.ofNullable(this.totalImageCount);
    }
    /**
     * @return Total hours actually used for training
     * 
     */
    public Optional<Double> trainedDurationInHours() {
        return Optional.ofNullable(this.trainedDurationInHours);
    }
    /**
     * @return The base entity for a Dataset, which is the input for Model creation.
     * 
     */
    public List<GetModelsModelCollectionItemTrainingDataset> trainingDatasets() {
        return this.trainingDatasets == null ? List.of() : this.trainingDatasets;
    }
    /**
     * @return The base entity for a Dataset, which is the input for Model creation.
     * 
     */
    public List<GetModelsModelCollectionItemValidationDataset> validationDatasets() {
        return this.validationDatasets == null ? List.of() : this.validationDatasets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModelCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double averagePrecision;
        private @Nullable String compartmentId;
        private @Nullable Double confidenceThreshold;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isQuickMode;
        private @Nullable String lifecycleDetails;
        private @Nullable Double maxTrainingDurationInHours;
        private @Nullable String metrics;
        private @Nullable String modelType;
        private @Nullable String modelVersion;
        private @Nullable Double precision;
        private @Nullable String projectId;
        private @Nullable Double recall;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable Integer testImageCount;
        private @Nullable List<GetModelsModelCollectionItemTestingDataset> testingDatasets;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable Integer totalImageCount;
        private @Nullable Double trainedDurationInHours;
        private @Nullable List<GetModelsModelCollectionItemTrainingDataset> trainingDatasets;
        private @Nullable List<GetModelsModelCollectionItemValidationDataset> validationDatasets;
        public Builder() {}
        public Builder(GetModelsModelCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.averagePrecision = defaults.averagePrecision;
    	      this.compartmentId = defaults.compartmentId;
    	      this.confidenceThreshold = defaults.confidenceThreshold;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isQuickMode = defaults.isQuickMode;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maxTrainingDurationInHours = defaults.maxTrainingDurationInHours;
    	      this.metrics = defaults.metrics;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.precision = defaults.precision;
    	      this.projectId = defaults.projectId;
    	      this.recall = defaults.recall;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.testImageCount = defaults.testImageCount;
    	      this.testingDatasets = defaults.testingDatasets;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalImageCount = defaults.totalImageCount;
    	      this.trainedDurationInHours = defaults.trainedDurationInHours;
    	      this.trainingDatasets = defaults.trainingDatasets;
    	      this.validationDatasets = defaults.validationDatasets;
        }

        @CustomType.Setter
        public Builder averagePrecision(@Nullable Double averagePrecision) {
            this.averagePrecision = averagePrecision;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder confidenceThreshold(@Nullable Double confidenceThreshold) {
            this.confidenceThreshold = confidenceThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isQuickMode(@Nullable Boolean isQuickMode) {
            this.isQuickMode = isQuickMode;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maxTrainingDurationInHours(@Nullable Double maxTrainingDurationInHours) {
            this.maxTrainingDurationInHours = maxTrainingDurationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder metrics(@Nullable String metrics) {
            this.metrics = metrics;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(@Nullable String modelType) {
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(@Nullable String modelVersion) {
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder precision(@Nullable Double precision) {
            this.precision = precision;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder recall(@Nullable Double recall) {
            this.recall = recall;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder testImageCount(@Nullable Integer testImageCount) {
            this.testImageCount = testImageCount;
            return this;
        }
        @CustomType.Setter
        public Builder testingDatasets(@Nullable List<GetModelsModelCollectionItemTestingDataset> testingDatasets) {
            this.testingDatasets = testingDatasets;
            return this;
        }
        public Builder testingDatasets(GetModelsModelCollectionItemTestingDataset... testingDatasets) {
            return testingDatasets(List.of(testingDatasets));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder totalImageCount(@Nullable Integer totalImageCount) {
            this.totalImageCount = totalImageCount;
            return this;
        }
        @CustomType.Setter
        public Builder trainedDurationInHours(@Nullable Double trainedDurationInHours) {
            this.trainedDurationInHours = trainedDurationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder trainingDatasets(@Nullable List<GetModelsModelCollectionItemTrainingDataset> trainingDatasets) {
            this.trainingDatasets = trainingDatasets;
            return this;
        }
        public Builder trainingDatasets(GetModelsModelCollectionItemTrainingDataset... trainingDatasets) {
            return trainingDatasets(List.of(trainingDatasets));
        }
        @CustomType.Setter
        public Builder validationDatasets(@Nullable List<GetModelsModelCollectionItemValidationDataset> validationDatasets) {
            this.validationDatasets = validationDatasets;
            return this;
        }
        public Builder validationDatasets(GetModelsModelCollectionItemValidationDataset... validationDatasets) {
            return validationDatasets(List.of(validationDatasets));
        }
        public GetModelsModelCollectionItem build() {
            final var o = new GetModelsModelCollectionItem();
            o.averagePrecision = averagePrecision;
            o.compartmentId = compartmentId;
            o.confidenceThreshold = confidenceThreshold;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isQuickMode = isQuickMode;
            o.lifecycleDetails = lifecycleDetails;
            o.maxTrainingDurationInHours = maxTrainingDurationInHours;
            o.metrics = metrics;
            o.modelType = modelType;
            o.modelVersion = modelVersion;
            o.precision = precision;
            o.projectId = projectId;
            o.recall = recall;
            o.state = state;
            o.systemTags = systemTags;
            o.testImageCount = testImageCount;
            o.testingDatasets = testingDatasets;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.totalImageCount = totalImageCount;
            o.trainedDurationInHours = trainedDurationInHours;
            o.trainingDatasets = trainingDatasets;
            o.validationDatasets = validationDatasets;
            return o;
        }
    }
}
