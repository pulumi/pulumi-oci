// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiVision.outputs.GetStreamJobFeatureTrackingType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetStreamJobFeature {
    /**
     * @return The feature of video analysis. Allowed values are:
     * * OBJECT_TRACKING: Object tracking feature(OT).
     * * FACE_DETECTION: Face detection feature(FD).
     * 
     */
    private String featureType;
    /**
     * @return The maximum number of results to return.
     * 
     */
    private Integer maxResults;
    /**
     * @return Whether or not return face landmarks.
     * 
     */
    private Boolean shouldReturnLandmarks;
    /**
     * @return List of details of what to track.
     * 
     */
    private List<GetStreamJobFeatureTrackingType> trackingTypes;

    private GetStreamJobFeature() {}
    /**
     * @return The feature of video analysis. Allowed values are:
     * * OBJECT_TRACKING: Object tracking feature(OT).
     * * FACE_DETECTION: Face detection feature(FD).
     * 
     */
    public String featureType() {
        return this.featureType;
    }
    /**
     * @return The maximum number of results to return.
     * 
     */
    public Integer maxResults() {
        return this.maxResults;
    }
    /**
     * @return Whether or not return face landmarks.
     * 
     */
    public Boolean shouldReturnLandmarks() {
        return this.shouldReturnLandmarks;
    }
    /**
     * @return List of details of what to track.
     * 
     */
    public List<GetStreamJobFeatureTrackingType> trackingTypes() {
        return this.trackingTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamJobFeature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String featureType;
        private Integer maxResults;
        private Boolean shouldReturnLandmarks;
        private List<GetStreamJobFeatureTrackingType> trackingTypes;
        public Builder() {}
        public Builder(GetStreamJobFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.featureType = defaults.featureType;
    	      this.maxResults = defaults.maxResults;
    	      this.shouldReturnLandmarks = defaults.shouldReturnLandmarks;
    	      this.trackingTypes = defaults.trackingTypes;
        }

        @CustomType.Setter
        public Builder featureType(String featureType) {
            if (featureType == null) {
              throw new MissingRequiredPropertyException("GetStreamJobFeature", "featureType");
            }
            this.featureType = featureType;
            return this;
        }
        @CustomType.Setter
        public Builder maxResults(Integer maxResults) {
            if (maxResults == null) {
              throw new MissingRequiredPropertyException("GetStreamJobFeature", "maxResults");
            }
            this.maxResults = maxResults;
            return this;
        }
        @CustomType.Setter
        public Builder shouldReturnLandmarks(Boolean shouldReturnLandmarks) {
            if (shouldReturnLandmarks == null) {
              throw new MissingRequiredPropertyException("GetStreamJobFeature", "shouldReturnLandmarks");
            }
            this.shouldReturnLandmarks = shouldReturnLandmarks;
            return this;
        }
        @CustomType.Setter
        public Builder trackingTypes(List<GetStreamJobFeatureTrackingType> trackingTypes) {
            if (trackingTypes == null) {
              throw new MissingRequiredPropertyException("GetStreamJobFeature", "trackingTypes");
            }
            this.trackingTypes = trackingTypes;
            return this;
        }
        public Builder trackingTypes(GetStreamJobFeatureTrackingType... trackingTypes) {
            return trackingTypes(List.of(trackingTypes));
        }
        public GetStreamJobFeature build() {
            final var _resultValue = new GetStreamJobFeature();
            _resultValue.featureType = featureType;
            _resultValue.maxResults = maxResults;
            _resultValue.shouldReturnLandmarks = shouldReturnLandmarks;
            _resultValue.trackingTypes = trackingTypes;
            return _resultValue;
        }
    }
}
