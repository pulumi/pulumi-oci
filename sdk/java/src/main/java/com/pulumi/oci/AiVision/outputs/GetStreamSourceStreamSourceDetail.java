// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiVision.outputs.GetStreamSourceStreamSourceDetailStreamNetworkAccessDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetStreamSourceStreamSourceDetail {
    /**
     * @return url of camera
     * 
     */
    private String cameraUrl;
    /**
     * @return [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
     * 
     */
    private String secretId;
    /**
     * @return Type of source Allowed values are:
     * * RTSP
     * 
     */
    private String sourceType;
    /**
     * @return Details about a stream Connection type
     * 
     */
    private List<GetStreamSourceStreamSourceDetailStreamNetworkAccessDetail> streamNetworkAccessDetails;

    private GetStreamSourceStreamSourceDetail() {}
    /**
     * @return url of camera
     * 
     */
    public String cameraUrl() {
        return this.cameraUrl;
    }
    /**
     * @return [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
     * 
     */
    public String secretId() {
        return this.secretId;
    }
    /**
     * @return Type of source Allowed values are:
     * * RTSP
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return Details about a stream Connection type
     * 
     */
    public List<GetStreamSourceStreamSourceDetailStreamNetworkAccessDetail> streamNetworkAccessDetails() {
        return this.streamNetworkAccessDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamSourceStreamSourceDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cameraUrl;
        private String secretId;
        private String sourceType;
        private List<GetStreamSourceStreamSourceDetailStreamNetworkAccessDetail> streamNetworkAccessDetails;
        public Builder() {}
        public Builder(GetStreamSourceStreamSourceDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cameraUrl = defaults.cameraUrl;
    	      this.secretId = defaults.secretId;
    	      this.sourceType = defaults.sourceType;
    	      this.streamNetworkAccessDetails = defaults.streamNetworkAccessDetails;
        }

        @CustomType.Setter
        public Builder cameraUrl(String cameraUrl) {
            if (cameraUrl == null) {
              throw new MissingRequiredPropertyException("GetStreamSourceStreamSourceDetail", "cameraUrl");
            }
            this.cameraUrl = cameraUrl;
            return this;
        }
        @CustomType.Setter
        public Builder secretId(String secretId) {
            if (secretId == null) {
              throw new MissingRequiredPropertyException("GetStreamSourceStreamSourceDetail", "secretId");
            }
            this.secretId = secretId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("GetStreamSourceStreamSourceDetail", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder streamNetworkAccessDetails(List<GetStreamSourceStreamSourceDetailStreamNetworkAccessDetail> streamNetworkAccessDetails) {
            if (streamNetworkAccessDetails == null) {
              throw new MissingRequiredPropertyException("GetStreamSourceStreamSourceDetail", "streamNetworkAccessDetails");
            }
            this.streamNetworkAccessDetails = streamNetworkAccessDetails;
            return this;
        }
        public Builder streamNetworkAccessDetails(GetStreamSourceStreamSourceDetailStreamNetworkAccessDetail... streamNetworkAccessDetails) {
            return streamNetworkAccessDetails(List.of(streamNetworkAccessDetails));
        }
        public GetStreamSourceStreamSourceDetail build() {
            final var _resultValue = new GetStreamSourceStreamSourceDetail();
            _resultValue.cameraUrl = cameraUrl;
            _resultValue.secretId = secretId;
            _resultValue.sourceType = sourceType;
            _resultValue.streamNetworkAccessDetails = streamNetworkAccessDetails;
            return _resultValue;
        }
    }
}
