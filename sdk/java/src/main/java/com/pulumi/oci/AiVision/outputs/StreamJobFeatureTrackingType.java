// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamJobFeatureTrackingType {
    /**
     * @return (Updatable) compartment Id of biometric compartment.
     * 
     */
    private @Nullable String biometricStoreCompartmentId;
    /**
     * @return (Updatable) Which biometric store user wants to do face recognition
     * 
     */
    private @Nullable String biometricStoreId;
    /**
     * @return (Updatable) The detection model OCID.
     * 
     */
    private @Nullable String detectionModelId;
    /**
     * @return (Updatable) The maximum number of results to return.
     * 
     */
    private @Nullable Integer maxResults;
    /**
     * @return (Updatable) List of the objects to be tracked.
     * 
     */
    private @Nullable List<String> objects;
    /**
     * @return (Updatable) Whether or not return face landmarks.
     * 
     */
    private @Nullable Boolean shouldReturnLandmarks;
    /**
     * @return (Updatable) The tracking model OCID.
     * 
     */
    private @Nullable String trackingModelId;

    private StreamJobFeatureTrackingType() {}
    /**
     * @return (Updatable) compartment Id of biometric compartment.
     * 
     */
    public Optional<String> biometricStoreCompartmentId() {
        return Optional.ofNullable(this.biometricStoreCompartmentId);
    }
    /**
     * @return (Updatable) Which biometric store user wants to do face recognition
     * 
     */
    public Optional<String> biometricStoreId() {
        return Optional.ofNullable(this.biometricStoreId);
    }
    /**
     * @return (Updatable) The detection model OCID.
     * 
     */
    public Optional<String> detectionModelId() {
        return Optional.ofNullable(this.detectionModelId);
    }
    /**
     * @return (Updatable) The maximum number of results to return.
     * 
     */
    public Optional<Integer> maxResults() {
        return Optional.ofNullable(this.maxResults);
    }
    /**
     * @return (Updatable) List of the objects to be tracked.
     * 
     */
    public List<String> objects() {
        return this.objects == null ? List.of() : this.objects;
    }
    /**
     * @return (Updatable) Whether or not return face landmarks.
     * 
     */
    public Optional<Boolean> shouldReturnLandmarks() {
        return Optional.ofNullable(this.shouldReturnLandmarks);
    }
    /**
     * @return (Updatable) The tracking model OCID.
     * 
     */
    public Optional<String> trackingModelId() {
        return Optional.ofNullable(this.trackingModelId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamJobFeatureTrackingType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String biometricStoreCompartmentId;
        private @Nullable String biometricStoreId;
        private @Nullable String detectionModelId;
        private @Nullable Integer maxResults;
        private @Nullable List<String> objects;
        private @Nullable Boolean shouldReturnLandmarks;
        private @Nullable String trackingModelId;
        public Builder() {}
        public Builder(StreamJobFeatureTrackingType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.biometricStoreCompartmentId = defaults.biometricStoreCompartmentId;
    	      this.biometricStoreId = defaults.biometricStoreId;
    	      this.detectionModelId = defaults.detectionModelId;
    	      this.maxResults = defaults.maxResults;
    	      this.objects = defaults.objects;
    	      this.shouldReturnLandmarks = defaults.shouldReturnLandmarks;
    	      this.trackingModelId = defaults.trackingModelId;
        }

        @CustomType.Setter
        public Builder biometricStoreCompartmentId(@Nullable String biometricStoreCompartmentId) {

            this.biometricStoreCompartmentId = biometricStoreCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder biometricStoreId(@Nullable String biometricStoreId) {

            this.biometricStoreId = biometricStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder detectionModelId(@Nullable String detectionModelId) {

            this.detectionModelId = detectionModelId;
            return this;
        }
        @CustomType.Setter
        public Builder maxResults(@Nullable Integer maxResults) {

            this.maxResults = maxResults;
            return this;
        }
        @CustomType.Setter
        public Builder objects(@Nullable List<String> objects) {

            this.objects = objects;
            return this;
        }
        public Builder objects(String... objects) {
            return objects(List.of(objects));
        }
        @CustomType.Setter
        public Builder shouldReturnLandmarks(@Nullable Boolean shouldReturnLandmarks) {

            this.shouldReturnLandmarks = shouldReturnLandmarks;
            return this;
        }
        @CustomType.Setter
        public Builder trackingModelId(@Nullable String trackingModelId) {

            this.trackingModelId = trackingModelId;
            return this;
        }
        public StreamJobFeatureTrackingType build() {
            final var _resultValue = new StreamJobFeatureTrackingType();
            _resultValue.biometricStoreCompartmentId = biometricStoreCompartmentId;
            _resultValue.biometricStoreId = biometricStoreId;
            _resultValue.detectionModelId = detectionModelId;
            _resultValue.maxResults = maxResults;
            _resultValue.objects = objects;
            _resultValue.shouldReturnLandmarks = shouldReturnLandmarks;
            _resultValue.trackingModelId = trackingModelId;
            return _resultValue;
        }
    }
}
