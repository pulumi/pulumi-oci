// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.AiVision.outputs.StreamSourceStreamSourceDetailsStreamNetworkAccessDetails;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamSourceStreamSourceDetails {
    /**
     * @return (Updatable) url of camera
     * 
     */
    private String cameraUrl;
    /**
     * @return (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
     * 
     */
    private @Nullable String secretId;
    /**
     * @return (Updatable) Type of source Allowed values are:
     * * RTSP
     * 
     */
    private String sourceType;
    /**
     * @return (Updatable) Details about a stream Connection type
     * 
     */
    private StreamSourceStreamSourceDetailsStreamNetworkAccessDetails streamNetworkAccessDetails;

    private StreamSourceStreamSourceDetails() {}
    /**
     * @return (Updatable) url of camera
     * 
     */
    public String cameraUrl() {
        return this.cameraUrl;
    }
    /**
     * @return (Updatable) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of secret where credentials are stored in username:password format.
     * 
     */
    public Optional<String> secretId() {
        return Optional.ofNullable(this.secretId);
    }
    /**
     * @return (Updatable) Type of source Allowed values are:
     * * RTSP
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return (Updatable) Details about a stream Connection type
     * 
     */
    public StreamSourceStreamSourceDetailsStreamNetworkAccessDetails streamNetworkAccessDetails() {
        return this.streamNetworkAccessDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamSourceStreamSourceDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cameraUrl;
        private @Nullable String secretId;
        private String sourceType;
        private StreamSourceStreamSourceDetailsStreamNetworkAccessDetails streamNetworkAccessDetails;
        public Builder() {}
        public Builder(StreamSourceStreamSourceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cameraUrl = defaults.cameraUrl;
    	      this.secretId = defaults.secretId;
    	      this.sourceType = defaults.sourceType;
    	      this.streamNetworkAccessDetails = defaults.streamNetworkAccessDetails;
        }

        @CustomType.Setter
        public Builder cameraUrl(String cameraUrl) {
            if (cameraUrl == null) {
              throw new MissingRequiredPropertyException("StreamSourceStreamSourceDetails", "cameraUrl");
            }
            this.cameraUrl = cameraUrl;
            return this;
        }
        @CustomType.Setter
        public Builder secretId(@Nullable String secretId) {

            this.secretId = secretId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("StreamSourceStreamSourceDetails", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder streamNetworkAccessDetails(StreamSourceStreamSourceDetailsStreamNetworkAccessDetails streamNetworkAccessDetails) {
            if (streamNetworkAccessDetails == null) {
              throw new MissingRequiredPropertyException("StreamSourceStreamSourceDetails", "streamNetworkAccessDetails");
            }
            this.streamNetworkAccessDetails = streamNetworkAccessDetails;
            return this;
        }
        public StreamSourceStreamSourceDetails build() {
            final var _resultValue = new StreamSourceStreamSourceDetails();
            _resultValue.cameraUrl = cameraUrl;
            _resultValue.secretId = secretId;
            _resultValue.sourceType = sourceType;
            _resultValue.streamNetworkAccessDetails = streamNetworkAccessDetails;
            return _resultValue;
        }
    }
}
