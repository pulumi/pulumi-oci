// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Analytics.inputs.AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneArgs;
import com.pulumi.oci.Analytics.inputs.AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsInstancePrivateAccessChannelArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsInstancePrivateAccessChannelArgs Empty = new AnalyticsInstancePrivateAccessChannelArgs();

    /**
     * The OCID of the AnalyticsInstance.
     * 
     */
    @Import(name="analyticsInstanceId", required=true)
    private Output<String> analyticsInstanceId;

    /**
     * @return The OCID of the AnalyticsInstance.
     * 
     */
    public Output<String> analyticsInstanceId() {
        return this.analyticsInstanceId;
    }

    /**
     * (Updatable) Display Name of the Private Access Channel.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) Display Name of the Private Access Channel.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Network Security Group OCIDs for an Analytics instance.
     * 
     */
    @Import(name="networkSecurityGroupIds")
    private @Nullable Output<List<String>> networkSecurityGroupIds;

    /**
     * @return (Updatable) Network Security Group OCIDs for an Analytics instance.
     * 
     */
    public Optional<Output<List<String>>> networkSecurityGroupIds() {
        return Optional.ofNullable(this.networkSecurityGroupIds);
    }

    /**
     * (Updatable) List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
     * 
     */
    @Import(name="privateSourceDnsZones", required=true)
    private Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneArgs>> privateSourceDnsZones;

    /**
     * @return (Updatable) List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
     * 
     */
    public Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneArgs>> privateSourceDnsZones() {
        return this.privateSourceDnsZones;
    }

    /**
     * (Updatable) List of Private Source DB SCAN hosts registered with Private Access Channel for access from Analytics Instance.
     * 
     */
    @Import(name="privateSourceScanHosts")
    private @Nullable Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs>> privateSourceScanHosts;

    /**
     * @return (Updatable) List of Private Source DB SCAN hosts registered with Private Access Channel for access from Analytics Instance.
     * 
     */
    public Optional<Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs>>> privateSourceScanHosts() {
        return Optional.ofNullable(this.privateSourceScanHosts);
    }

    /**
     * (Updatable) OCID of the customer subnet connected to private access channel.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return (Updatable) OCID of the customer subnet connected to private access channel.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * (Updatable) OCID of the customer VCN peered with private access channel.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="vcnId", required=true)
    private Output<String> vcnId;

    /**
     * @return (Updatable) OCID of the customer VCN peered with private access channel.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> vcnId() {
        return this.vcnId;
    }

    private AnalyticsInstancePrivateAccessChannelArgs() {}

    private AnalyticsInstancePrivateAccessChannelArgs(AnalyticsInstancePrivateAccessChannelArgs $) {
        this.analyticsInstanceId = $.analyticsInstanceId;
        this.displayName = $.displayName;
        this.networkSecurityGroupIds = $.networkSecurityGroupIds;
        this.privateSourceDnsZones = $.privateSourceDnsZones;
        this.privateSourceScanHosts = $.privateSourceScanHosts;
        this.subnetId = $.subnetId;
        this.vcnId = $.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsInstancePrivateAccessChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsInstancePrivateAccessChannelArgs $;

        public Builder() {
            $ = new AnalyticsInstancePrivateAccessChannelArgs();
        }

        public Builder(AnalyticsInstancePrivateAccessChannelArgs defaults) {
            $ = new AnalyticsInstancePrivateAccessChannelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param analyticsInstanceId The OCID of the AnalyticsInstance.
         * 
         * @return builder
         * 
         */
        public Builder analyticsInstanceId(Output<String> analyticsInstanceId) {
            $.analyticsInstanceId = analyticsInstanceId;
            return this;
        }

        /**
         * @param analyticsInstanceId The OCID of the AnalyticsInstance.
         * 
         * @return builder
         * 
         */
        public Builder analyticsInstanceId(String analyticsInstanceId) {
            return analyticsInstanceId(Output.of(analyticsInstanceId));
        }

        /**
         * @param displayName (Updatable) Display Name of the Private Access Channel.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Display Name of the Private Access Channel.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param networkSecurityGroupIds (Updatable) Network Security Group OCIDs for an Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(@Nullable Output<List<String>> networkSecurityGroupIds) {
            $.networkSecurityGroupIds = networkSecurityGroupIds;
            return this;
        }

        /**
         * @param networkSecurityGroupIds (Updatable) Network Security Group OCIDs for an Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(List<String> networkSecurityGroupIds) {
            return networkSecurityGroupIds(Output.of(networkSecurityGroupIds));
        }

        /**
         * @param networkSecurityGroupIds (Updatable) Network Security Group OCIDs for an Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(String... networkSecurityGroupIds) {
            return networkSecurityGroupIds(List.of(networkSecurityGroupIds));
        }

        /**
         * @param privateSourceDnsZones (Updatable) List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
         * 
         * @return builder
         * 
         */
        public Builder privateSourceDnsZones(Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneArgs>> privateSourceDnsZones) {
            $.privateSourceDnsZones = privateSourceDnsZones;
            return this;
        }

        /**
         * @param privateSourceDnsZones (Updatable) List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
         * 
         * @return builder
         * 
         */
        public Builder privateSourceDnsZones(List<AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneArgs> privateSourceDnsZones) {
            return privateSourceDnsZones(Output.of(privateSourceDnsZones));
        }

        /**
         * @param privateSourceDnsZones (Updatable) List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
         * 
         * @return builder
         * 
         */
        public Builder privateSourceDnsZones(AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZoneArgs... privateSourceDnsZones) {
            return privateSourceDnsZones(List.of(privateSourceDnsZones));
        }

        /**
         * @param privateSourceScanHosts (Updatable) List of Private Source DB SCAN hosts registered with Private Access Channel for access from Analytics Instance.
         * 
         * @return builder
         * 
         */
        public Builder privateSourceScanHosts(@Nullable Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs>> privateSourceScanHosts) {
            $.privateSourceScanHosts = privateSourceScanHosts;
            return this;
        }

        /**
         * @param privateSourceScanHosts (Updatable) List of Private Source DB SCAN hosts registered with Private Access Channel for access from Analytics Instance.
         * 
         * @return builder
         * 
         */
        public Builder privateSourceScanHosts(List<AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs> privateSourceScanHosts) {
            return privateSourceScanHosts(Output.of(privateSourceScanHosts));
        }

        /**
         * @param privateSourceScanHosts (Updatable) List of Private Source DB SCAN hosts registered with Private Access Channel for access from Analytics Instance.
         * 
         * @return builder
         * 
         */
        public Builder privateSourceScanHosts(AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs... privateSourceScanHosts) {
            return privateSourceScanHosts(List.of(privateSourceScanHosts));
        }

        /**
         * @param subnetId (Updatable) OCID of the customer subnet connected to private access channel.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId (Updatable) OCID of the customer subnet connected to private access channel.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param vcnId (Updatable) OCID of the customer VCN peered with private access channel.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vcnId(Output<String> vcnId) {
            $.vcnId = vcnId;
            return this;
        }

        /**
         * @param vcnId (Updatable) OCID of the customer VCN peered with private access channel.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vcnId(String vcnId) {
            return vcnId(Output.of(vcnId));
        }

        public AnalyticsInstancePrivateAccessChannelArgs build() {
            $.analyticsInstanceId = Objects.requireNonNull($.analyticsInstanceId, "expected parameter 'analyticsInstanceId' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.privateSourceDnsZones = Objects.requireNonNull($.privateSourceDnsZones, "expected parameter 'privateSourceDnsZones' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            $.vcnId = Objects.requireNonNull($.vcnId, "expected parameter 'vcnId' to be non-null");
            return $;
        }
    }

}
