// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Analytics.inputs.AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcnArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsInstanceNetworkEndpointDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsInstanceNetworkEndpointDetailsArgs Empty = new AnalyticsInstanceNetworkEndpointDetailsArgs();

    /**
     * The type of network endpoint.
     * 
     */
    @Import(name="networkEndpointType", required=true)
    private Output<String> networkEndpointType;

    /**
     * @return The type of network endpoint.
     * 
     */
    public Output<String> networkEndpointType() {
        return this.networkEndpointType;
    }

    /**
     * Network Security Group OCIDs for an Analytics instance.
     * 
     */
    @Import(name="networkSecurityGroupIds")
    private @Nullable Output<List<String>> networkSecurityGroupIds;

    /**
     * @return Network Security Group OCIDs for an Analytics instance.
     * 
     */
    public Optional<Output<List<String>>> networkSecurityGroupIds() {
        return Optional.ofNullable(this.networkSecurityGroupIds);
    }

    /**
     * The subnet OCID for the private endpoint.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return The subnet OCID for the private endpoint.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * The VCN OCID for the private endpoint.
     * 
     */
    @Import(name="vcnId")
    private @Nullable Output<String> vcnId;

    /**
     * @return The VCN OCID for the private endpoint.
     * 
     */
    public Optional<Output<String>> vcnId() {
        return Optional.ofNullable(this.vcnId);
    }

    /**
     * Source IP addresses or IP address ranges in ingress rules.
     * 
     */
    @Import(name="whitelistedIps")
    private @Nullable Output<List<String>> whitelistedIps;

    /**
     * @return Source IP addresses or IP address ranges in ingress rules.
     * 
     */
    public Optional<Output<List<String>>> whitelistedIps() {
        return Optional.ofNullable(this.whitelistedIps);
    }

    /**
     * Oracle Cloud Services that are allowed to access this Analytics instance.
     * 
     */
    @Import(name="whitelistedServices")
    private @Nullable Output<List<String>> whitelistedServices;

    /**
     * @return Oracle Cloud Services that are allowed to access this Analytics instance.
     * 
     */
    public Optional<Output<List<String>>> whitelistedServices() {
        return Optional.ofNullable(this.whitelistedServices);
    }

    /**
     * Virtual Cloud Networks allowed to access this network endpoint.
     * 
     */
    @Import(name="whitelistedVcns")
    private @Nullable Output<List<AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcnArgs>> whitelistedVcns;

    /**
     * @return Virtual Cloud Networks allowed to access this network endpoint.
     * 
     */
    public Optional<Output<List<AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcnArgs>>> whitelistedVcns() {
        return Optional.ofNullable(this.whitelistedVcns);
    }

    private AnalyticsInstanceNetworkEndpointDetailsArgs() {}

    private AnalyticsInstanceNetworkEndpointDetailsArgs(AnalyticsInstanceNetworkEndpointDetailsArgs $) {
        this.networkEndpointType = $.networkEndpointType;
        this.networkSecurityGroupIds = $.networkSecurityGroupIds;
        this.subnetId = $.subnetId;
        this.vcnId = $.vcnId;
        this.whitelistedIps = $.whitelistedIps;
        this.whitelistedServices = $.whitelistedServices;
        this.whitelistedVcns = $.whitelistedVcns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsInstanceNetworkEndpointDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsInstanceNetworkEndpointDetailsArgs $;

        public Builder() {
            $ = new AnalyticsInstanceNetworkEndpointDetailsArgs();
        }

        public Builder(AnalyticsInstanceNetworkEndpointDetailsArgs defaults) {
            $ = new AnalyticsInstanceNetworkEndpointDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkEndpointType The type of network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointType(Output<String> networkEndpointType) {
            $.networkEndpointType = networkEndpointType;
            return this;
        }

        /**
         * @param networkEndpointType The type of network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointType(String networkEndpointType) {
            return networkEndpointType(Output.of(networkEndpointType));
        }

        /**
         * @param networkSecurityGroupIds Network Security Group OCIDs for an Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(@Nullable Output<List<String>> networkSecurityGroupIds) {
            $.networkSecurityGroupIds = networkSecurityGroupIds;
            return this;
        }

        /**
         * @param networkSecurityGroupIds Network Security Group OCIDs for an Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(List<String> networkSecurityGroupIds) {
            return networkSecurityGroupIds(Output.of(networkSecurityGroupIds));
        }

        /**
         * @param networkSecurityGroupIds Network Security Group OCIDs for an Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(String... networkSecurityGroupIds) {
            return networkSecurityGroupIds(List.of(networkSecurityGroupIds));
        }

        /**
         * @param subnetId The subnet OCID for the private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The subnet OCID for the private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param vcnId The VCN OCID for the private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder vcnId(@Nullable Output<String> vcnId) {
            $.vcnId = vcnId;
            return this;
        }

        /**
         * @param vcnId The VCN OCID for the private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder vcnId(String vcnId) {
            return vcnId(Output.of(vcnId));
        }

        /**
         * @param whitelistedIps Source IP addresses or IP address ranges in ingress rules.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedIps(@Nullable Output<List<String>> whitelistedIps) {
            $.whitelistedIps = whitelistedIps;
            return this;
        }

        /**
         * @param whitelistedIps Source IP addresses or IP address ranges in ingress rules.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedIps(List<String> whitelistedIps) {
            return whitelistedIps(Output.of(whitelistedIps));
        }

        /**
         * @param whitelistedIps Source IP addresses or IP address ranges in ingress rules.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedIps(String... whitelistedIps) {
            return whitelistedIps(List.of(whitelistedIps));
        }

        /**
         * @param whitelistedServices Oracle Cloud Services that are allowed to access this Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedServices(@Nullable Output<List<String>> whitelistedServices) {
            $.whitelistedServices = whitelistedServices;
            return this;
        }

        /**
         * @param whitelistedServices Oracle Cloud Services that are allowed to access this Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedServices(List<String> whitelistedServices) {
            return whitelistedServices(Output.of(whitelistedServices));
        }

        /**
         * @param whitelistedServices Oracle Cloud Services that are allowed to access this Analytics instance.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedServices(String... whitelistedServices) {
            return whitelistedServices(List.of(whitelistedServices));
        }

        /**
         * @param whitelistedVcns Virtual Cloud Networks allowed to access this network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedVcns(@Nullable Output<List<AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcnArgs>> whitelistedVcns) {
            $.whitelistedVcns = whitelistedVcns;
            return this;
        }

        /**
         * @param whitelistedVcns Virtual Cloud Networks allowed to access this network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedVcns(List<AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcnArgs> whitelistedVcns) {
            return whitelistedVcns(Output.of(whitelistedVcns));
        }

        /**
         * @param whitelistedVcns Virtual Cloud Networks allowed to access this network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedVcns(AnalyticsInstanceNetworkEndpointDetailsWhitelistedVcnArgs... whitelistedVcns) {
            return whitelistedVcns(List.of(whitelistedVcns));
        }

        public AnalyticsInstanceNetworkEndpointDetailsArgs build() {
            if ($.networkEndpointType == null) {
                throw new MissingRequiredPropertyException("AnalyticsInstanceNetworkEndpointDetailsArgs", "networkEndpointType");
            }
            return $;
        }
    }

}
