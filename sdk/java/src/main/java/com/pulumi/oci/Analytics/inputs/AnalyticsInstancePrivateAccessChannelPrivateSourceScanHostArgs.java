// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs Empty = new AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs();

    /**
     * (Updatable) Description of private source scan host zone.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of private source scan host zone.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Private Source Scan hostname. Ex: db01-scan.corp.example.com, prd-db01-scan.mycompany.com.
     * 
     */
    @Import(name="scanHostname", required=true)
    private Output<String> scanHostname;

    /**
     * @return (Updatable) Private Source Scan hostname. Ex: db01-scan.corp.example.com, prd-db01-scan.mycompany.com.
     * 
     */
    public Output<String> scanHostname() {
        return this.scanHostname;
    }

    /**
     * (Updatable) Private Source Scan host port. This is the source port where SCAN protocol will get connected (e.g. 1521).
     * 
     */
    @Import(name="scanPort", required=true)
    private Output<Integer> scanPort;

    /**
     * @return (Updatable) Private Source Scan host port. This is the source port where SCAN protocol will get connected (e.g. 1521).
     * 
     */
    public Output<Integer> scanPort() {
        return this.scanPort;
    }

    private AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs() {}

    private AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs(AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs $) {
        this.description = $.description;
        this.scanHostname = $.scanHostname;
        this.scanPort = $.scanPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs $;

        public Builder() {
            $ = new AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs();
        }

        public Builder(AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs defaults) {
            $ = new AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description (Updatable) Description of private source scan host zone.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of private source scan host zone.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param scanHostname (Updatable) Private Source Scan hostname. Ex: db01-scan.corp.example.com, prd-db01-scan.mycompany.com.
         * 
         * @return builder
         * 
         */
        public Builder scanHostname(Output<String> scanHostname) {
            $.scanHostname = scanHostname;
            return this;
        }

        /**
         * @param scanHostname (Updatable) Private Source Scan hostname. Ex: db01-scan.corp.example.com, prd-db01-scan.mycompany.com.
         * 
         * @return builder
         * 
         */
        public Builder scanHostname(String scanHostname) {
            return scanHostname(Output.of(scanHostname));
        }

        /**
         * @param scanPort (Updatable) Private Source Scan host port. This is the source port where SCAN protocol will get connected (e.g. 1521).
         * 
         * @return builder
         * 
         */
        public Builder scanPort(Output<Integer> scanPort) {
            $.scanPort = scanPort;
            return this;
        }

        /**
         * @param scanPort (Updatable) Private Source Scan host port. This is the source port where SCAN protocol will get connected (e.g. 1521).
         * 
         * @return builder
         * 
         */
        public Builder scanPort(Integer scanPort) {
            return scanPort(Output.of(scanPort));
        }

        public AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs build() {
            if ($.scanHostname == null) {
                throw new MissingRequiredPropertyException("AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs", "scanHostname");
            }
            if ($.scanPort == null) {
                throw new MissingRequiredPropertyException("AnalyticsInstancePrivateAccessChannelPrivateSourceScanHostArgs", "scanPort");
            }
            return $;
        }
    }

}
