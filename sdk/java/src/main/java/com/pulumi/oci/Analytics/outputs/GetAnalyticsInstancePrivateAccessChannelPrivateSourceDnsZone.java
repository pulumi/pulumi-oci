// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone {
    /**
     * @return Description of private source scan host zone.
     * 
     */
    private String description;
    /**
     * @return Private Source DNS Zone. Ex: example-vcn.oraclevcn.com, corp.example.com.
     * 
     */
    private String dnsZone;

    private GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone() {}
    /**
     * @return Description of private source scan host zone.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Private Source DNS Zone. Ex: example-vcn.oraclevcn.com, corp.example.com.
     * 
     */
    public String dnsZone() {
        return this.dnsZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String dnsZone;
        public Builder() {}
        public Builder(GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.dnsZone = defaults.dnsZone;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder dnsZone(String dnsZone) {
            if (dnsZone == null) {
              throw new MissingRequiredPropertyException("GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone", "dnsZone");
            }
            this.dnsZone = dnsZone;
            return this;
        }
        public GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone build() {
            final var _resultValue = new GetAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone();
            _resultValue.description = description;
            _resultValue.dnsZone = dnsZone;
            return _resultValue;
        }
    }
}
