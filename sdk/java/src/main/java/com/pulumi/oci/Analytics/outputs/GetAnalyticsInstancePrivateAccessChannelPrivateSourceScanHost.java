// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHost {
    /**
     * @return Description of private source scan host zone.
     * 
     */
    private String description;
    /**
     * @return Private Source Scan hostname. Ex: db01-scan.corp.example.com, prd-db01-scan.mycompany.com.
     * 
     */
    private String scanHostname;
    /**
     * @return Private Source Scan host port. This is the source port where SCAN protocol will get connected (e.g. 1521).
     * 
     */
    private Integer scanPort;

    private GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHost() {}
    /**
     * @return Description of private source scan host zone.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Private Source Scan hostname. Ex: db01-scan.corp.example.com, prd-db01-scan.mycompany.com.
     * 
     */
    public String scanHostname() {
        return this.scanHostname;
    }
    /**
     * @return Private Source Scan host port. This is the source port where SCAN protocol will get connected (e.g. 1521).
     * 
     */
    public Integer scanPort() {
        return this.scanPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHost defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String scanHostname;
        private Integer scanPort;
        public Builder() {}
        public Builder(GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHost defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.scanHostname = defaults.scanHostname;
    	      this.scanPort = defaults.scanPort;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder scanHostname(String scanHostname) {
            this.scanHostname = Objects.requireNonNull(scanHostname);
            return this;
        }
        @CustomType.Setter
        public Builder scanPort(Integer scanPort) {
            this.scanPort = Objects.requireNonNull(scanPort);
            return this;
        }
        public GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHost build() {
            final var _resultValue = new GetAnalyticsInstancePrivateAccessChannelPrivateSourceScanHost();
            _resultValue.description = description;
            _resultValue.scanHostname = scanHostname;
            _resultValue.scanPort = scanPort;
            return _resultValue;
        }
    }
}
