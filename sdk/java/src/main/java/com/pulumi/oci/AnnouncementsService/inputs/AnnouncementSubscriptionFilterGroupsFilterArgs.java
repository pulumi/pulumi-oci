// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AnnouncementsService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AnnouncementSubscriptionFilterGroupsFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnnouncementSubscriptionFilterGroupsFilterArgs Empty = new AnnouncementSubscriptionFilterGroupsFilterArgs();

    /**
     * The type of filter. You cannot combine the RESOURCE_ID filter with any other type of filter within a given filter group. For filter types that support multiple values, specify the values individually.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of filter. You cannot combine the RESOURCE_ID filter with any other type of filter within a given filter group. For filter types that support multiple values, specify the values individually.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The value of the filter.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The value of the filter.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private AnnouncementSubscriptionFilterGroupsFilterArgs() {}

    private AnnouncementSubscriptionFilterGroupsFilterArgs(AnnouncementSubscriptionFilterGroupsFilterArgs $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnnouncementSubscriptionFilterGroupsFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnnouncementSubscriptionFilterGroupsFilterArgs $;

        public Builder() {
            $ = new AnnouncementSubscriptionFilterGroupsFilterArgs();
        }

        public Builder(AnnouncementSubscriptionFilterGroupsFilterArgs defaults) {
            $ = new AnnouncementSubscriptionFilterGroupsFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The type of filter. You cannot combine the RESOURCE_ID filter with any other type of filter within a given filter group. For filter types that support multiple values, specify the values individually.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of filter. You cannot combine the RESOURCE_ID filter with any other type of filter within a given filter group. For filter types that support multiple values, specify the values individually.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value The value of the filter.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of the filter.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public AnnouncementSubscriptionFilterGroupsFilterArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AnnouncementSubscriptionFilterGroupsFilterArgs", "type");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("AnnouncementSubscriptionFilterGroupsFilterArgs", "value");
            }
            return $;
        }
    }

}
