// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AnnouncementsService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AnnouncementsService.outputs.GetAnnouncementSubscriptionFilterGroup;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAnnouncementSubscriptionResult {
    private String announcementSubscriptionId;
    /**
     * @return The OCID of the compartment that contains the announcement subscription.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A description of the announcement subscription. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return A user-friendly name for the announcement subscription. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
     * 
     */
    private List<GetAnnouncementSubscriptionFilterGroup> filterGroups;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
     * 
     */
    private String id;
    /**
     * @return A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
     * 
     */
    private String onsTopicId;
    /**
     * @return (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
     * 
     */
    private String preferredLanguage;
    /**
     * @return The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
     * 
     */
    private String preferredTimeZone;
    /**
     * @return The current lifecycle state of the announcement subscription.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    private String timeUpdated;

    private GetAnnouncementSubscriptionResult() {}
    public String announcementSubscriptionId() {
        return this.announcementSubscriptionId;
    }
    /**
     * @return The OCID of the compartment that contains the announcement subscription.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A description of the announcement subscription. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly name for the announcement subscription. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
     * 
     */
    public List<GetAnnouncementSubscriptionFilterGroup> filterGroups() {
        return this.filterGroups;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
     * 
     */
    public String onsTopicId() {
        return this.onsTopicId;
    }
    /**
     * @return (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
     * 
     */
    public String preferredLanguage() {
        return this.preferredLanguage;
    }
    /**
     * @return The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
     * 
     */
    public String preferredTimeZone() {
        return this.preferredTimeZone;
    }
    /**
     * @return The current lifecycle state of the announcement subscription.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnnouncementSubscriptionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String announcementSubscriptionId;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private List<GetAnnouncementSubscriptionFilterGroup> filterGroups;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String onsTopicId;
        private String preferredLanguage;
        private String preferredTimeZone;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetAnnouncementSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.announcementSubscriptionId = defaults.announcementSubscriptionId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.filterGroups = defaults.filterGroups;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.onsTopicId = defaults.onsTopicId;
    	      this.preferredLanguage = defaults.preferredLanguage;
    	      this.preferredTimeZone = defaults.preferredTimeZone;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder announcementSubscriptionId(String announcementSubscriptionId) {
            this.announcementSubscriptionId = Objects.requireNonNull(announcementSubscriptionId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder filterGroups(List<GetAnnouncementSubscriptionFilterGroup> filterGroups) {
            this.filterGroups = Objects.requireNonNull(filterGroups);
            return this;
        }
        public Builder filterGroups(GetAnnouncementSubscriptionFilterGroup... filterGroups) {
            return filterGroups(List.of(filterGroups));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder onsTopicId(String onsTopicId) {
            this.onsTopicId = Objects.requireNonNull(onsTopicId);
            return this;
        }
        @CustomType.Setter
        public Builder preferredLanguage(String preferredLanguage) {
            this.preferredLanguage = Objects.requireNonNull(preferredLanguage);
            return this;
        }
        @CustomType.Setter
        public Builder preferredTimeZone(String preferredTimeZone) {
            this.preferredTimeZone = Objects.requireNonNull(preferredTimeZone);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetAnnouncementSubscriptionResult build() {
            final var o = new GetAnnouncementSubscriptionResult();
            o.announcementSubscriptionId = announcementSubscriptionId;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.filterGroups = filterGroups;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.onsTopicId = onsTopicId;
            o.preferredLanguage = preferredLanguage;
            o.preferredTimeZone = preferredTimeZone;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
