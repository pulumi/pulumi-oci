// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.ApiGateway.DeploymentArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentState;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecification;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Deployment resource in Oracle Cloud Infrastructure API Gateway service.
 * 
 * Creates a new deployment.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.ApiGateway.Deployment;
 * import com.pulumi.oci.ApiGateway.DeploymentArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationLoggingPoliciesArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationLoggingPoliciesAccessLogArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationLoggingPoliciesExecutionLogArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationPublicKeysArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyClientDetailsArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeadersArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeadersArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicySourceUriDetailsArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyClientDetailsArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicySourceUriDetailsArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesCorsArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesMutualTlsArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesRateLimitingArgs;
 * import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesUsagePlansArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testDeployment = new Deployment("testDeployment", DeploymentArgs.builder()
 *             .compartmentId(compartmentId)
 *             .gatewayId(testGateway.id())
 *             .pathPrefix(deploymentPathPrefix)
 *             .specification(DeploymentSpecificationArgs.builder()
 *                 .loggingPolicies(DeploymentSpecificationLoggingPoliciesArgs.builder()
 *                     .accessLog(DeploymentSpecificationLoggingPoliciesAccessLogArgs.builder()
 *                         .isEnabled(deploymentSpecificationLoggingPoliciesAccessLogIsEnabled)
 *                         .build())
 *                     .executionLog(DeploymentSpecificationLoggingPoliciesExecutionLogArgs.builder()
 *                         .isEnabled(deploymentSpecificationLoggingPoliciesExecutionLogIsEnabled)
 *                         .logLevel(deploymentSpecificationLoggingPoliciesExecutionLogLogLevel)
 *                         .build())
 *                     .build())
 *                 .requestPolicies(DeploymentSpecificationRequestPoliciesArgs.builder()
 *                     .authentication(DeploymentSpecificationRequestPoliciesAuthenticationArgs.builder()
 *                         .type(deploymentSpecificationRequestPoliciesAuthenticationType)
 *                         .audiences(deploymentSpecificationRequestPoliciesAuthenticationAudiences)
 *                         .cacheKeys(deploymentSpecificationRequestPoliciesAuthenticationCacheKey)
 *                         .functionId(testFunction.id())
 *                         .isAnonymousAccessAllowed(deploymentSpecificationRequestPoliciesAuthenticationIsAnonymousAccessAllowed)
 *                         .issuers(deploymentSpecificationRequestPoliciesAuthenticationIssuers)
 *                         .maxClockSkewInSeconds(deploymentSpecificationRequestPoliciesAuthenticationMaxClockSkewInSeconds)
 *                         .parameters(deploymentSpecificationRequestPoliciesAuthenticationParameters)
 *                         .publicKeys(DeploymentSpecificationRequestPoliciesAuthenticationPublicKeysArgs.builder()
 *                             .type(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysType)
 *                             .isSslVerifyDisabled(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysIsSslVerifyDisabled)
 *                             .keys(DeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeyArgs.builder()
 *                                 .format(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysFormat)
 *                                 .alg(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysAlg)
 *                                 .e(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysE)
 *                                 .key(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysKey)
 *                                 .keyOps(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysKeyOps)
 *                                 .kid(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysKid)
 *                                 .kty(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysKty)
 *                                 .n(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysN)
 *                                 .use(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysKeysUse)
 *                                 .build())
 *                             .maxCacheDurationInHours(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysMaxCacheDurationInHours)
 *                             .uri(deploymentSpecificationRequestPoliciesAuthenticationPublicKeysUri)
 *                             .build())
 *                         .tokenAuthScheme(deploymentSpecificationRequestPoliciesAuthenticationTokenAuthScheme)
 *                         .tokenHeader(deploymentSpecificationRequestPoliciesAuthenticationTokenHeader)
 *                         .tokenQueryParam(deploymentSpecificationRequestPoliciesAuthenticationTokenQueryParam)
 *                         .validationFailurePolicy(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyArgs.builder()
 *                             .type(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyType)
 *                             .clientDetails(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyClientDetailsArgs.builder()
 *                                 .type(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyClientDetailsType)
 *                                 .clientId(testClient.id())
 *                                 .clientSecretId(testSecret.id())
 *                                 .clientSecretVersionNumber(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyClientDetailsClientSecretVersionNumber)
 *                                 .build())
 *                             .fallbackRedirectPath(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyFallbackRedirectPath)
 *                             .logoutPath(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyLogoutPath)
 *                             .maxExpiryDurationInHours(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyMaxExpiryDurationInHours)
 *                             .responseCode(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseCode)
 *                             .responseHeaderTransformations(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsArgs.builder()
 *                                 .filterHeaders(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeadersArgs.builder()
 *                                     .items(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItemArgs.builder()
 *                                         .name(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItemsName)
 *                                         .build())
 *                                     .type(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeadersType)
 *                                     .build())
 *                                 .renameHeaders(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeadersArgs.builder()
 *                                     .items(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItemArgs.builder()
 *                                         .from(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItemsFrom)
 *                                         .to(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItemsTo)
 *                                         .build())
 *                                     .build())
 *                                 .setHeaders(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersArgs.builder()
 *                                     .items(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemArgs.builder()
 *                                         .ifExists(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemsIfExists)
 *                                         .name(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemsName)
 *                                         .values(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemsValues)
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .responseMessage(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseMessage)
 *                             .responseType(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseType)
 *                             .scopes(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyScopes)
 *                             .sourceUriDetails(DeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicySourceUriDetailsArgs.builder()
 *                                 .type(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicySourceUriDetailsType)
 *                                 .uri(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicySourceUriDetailsUri)
 *                                 .build())
 *                             .useCookiesForIntermediateSteps(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyUseCookiesForIntermediateSteps)
 *                             .useCookiesForSession(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyUseCookiesForSession)
 *                             .usePkce(deploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyUsePkce)
 *                             .build())
 *                         .validationPolicy(DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyArgs.builder()
 *                             .type(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyType)
 *                             .additionalValidationPolicy(DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyArgs.builder()
 *                                 .audiences(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyAudiences)
 *                                 .issuers(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyIssuers)
 *                                 .verifyClaims(DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyVerifyClaimArgs.builder()
 *                                     .isRequired(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyVerifyClaimsIsRequired)
 *                                     .key(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyVerifyClaimsKey)
 *                                     .values(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyVerifyClaimsValues)
 *                                     .build())
 *                                 .build())
 *                             .clientDetails(DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyClientDetailsArgs.builder()
 *                                 .type(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyClientDetailsType)
 *                                 .clientId(testClient.id())
 *                                 .clientSecretId(testSecret.id())
 *                                 .clientSecretVersionNumber(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyClientDetailsClientSecretVersionNumber)
 *                                 .build())
 *                             .isSslVerifyDisabled(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyIsSslVerifyDisabled)
 *                             .keys(DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeyArgs.builder()
 *                                 .format(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysFormat)
 *                                 .alg(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysAlg)
 *                                 .e(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysE)
 *                                 .key(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysKey)
 *                                 .keyOps(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysKeyOps)
 *                                 .kid(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysKid)
 *                                 .kty(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysKty)
 *                                 .n(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysN)
 *                                 .use(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKeysUse)
 *                                 .build())
 *                             .maxCacheDurationInHours(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyMaxCacheDurationInHours)
 *                             .sourceUriDetails(DeploymentSpecificationRequestPoliciesAuthenticationValidationPolicySourceUriDetailsArgs.builder()
 *                                 .type(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicySourceUriDetailsType)
 *                                 .uri(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicySourceUriDetailsUri)
 *                                 .build())
 *                             .uri(deploymentSpecificationRequestPoliciesAuthenticationValidationPolicyUri)
 *                             .build())
 *                         .verifyClaims(DeploymentSpecificationRequestPoliciesAuthenticationVerifyClaimArgs.builder()
 *                             .isRequired(deploymentSpecificationRequestPoliciesAuthenticationVerifyClaimsIsRequired)
 *                             .key(deploymentSpecificationRequestPoliciesAuthenticationVerifyClaimsKey)
 *                             .values(deploymentSpecificationRequestPoliciesAuthenticationVerifyClaimsValues)
 *                             .build())
 *                         .build())
 *                     .cors(DeploymentSpecificationRequestPoliciesCorsArgs.builder()
 *                         .allowedOrigins(deploymentSpecificationRequestPoliciesCorsAllowedOrigins)
 *                         .allowedHeaders(deploymentSpecificationRequestPoliciesCorsAllowedHeaders)
 *                         .allowedMethods(deploymentSpecificationRequestPoliciesCorsAllowedMethods)
 *                         .exposedHeaders(deploymentSpecificationRequestPoliciesCorsExposedHeaders)
 *                         .isAllowCredentialsEnabled(deploymentSpecificationRequestPoliciesCorsIsAllowCredentialsEnabled)
 *                         .maxAgeInSeconds(deploymentSpecificationRequestPoliciesCorsMaxAgeInSeconds)
 *                         .build())
 *                     .dynamicAuthentication(DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs.builder()
 *                         .authenticationServers(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerArgs.builder()
 *                             .authenticationServerDetail(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailArgs.builder()
 *                                 .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailType)
 *                                 .audiences(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailAudiences)
 *                                 .functionId(testFunction.id())
 *                                 .isAnonymousAccessAllowed(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailIsAnonymousAccessAllowed)
 *                                 .issuers(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailIssuers)
 *                                 .maxClockSkewInSeconds(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailMaxClockSkewInSeconds)
 *                                 .publicKeys(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeysArgs.builder()
 *                                     .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysType)
 *                                     .isSslVerifyDisabled(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysIsSslVerifyDisabled)
 *                                     .keys(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeysKeyArgs.builder()
 *                                         .format(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysFormat)
 *                                         .alg(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysAlg)
 *                                         .e(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysE)
 *                                         .key(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysKey)
 *                                         .keyOps(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysKeyOps)
 *                                         .kid(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysKid)
 *                                         .kty(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysKty)
 *                                         .n(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysN)
 *                                         .use(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysKeysUse)
 *                                         .build())
 *                                     .maxCacheDurationInHours(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysMaxCacheDurationInHours)
 *                                     .uri(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailPublicKeysUri)
 *                                     .build())
 *                                 .tokenAuthScheme(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailTokenAuthScheme)
 *                                 .tokenHeader(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailTokenHeader)
 *                                 .tokenQueryParam(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailTokenQueryParam)
 *                                 .validationFailurePolicy(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs.builder()
 *                                     .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyType)
 *                                     .clientDetails(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetailsArgs.builder()
 *                                         .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyClientDetailsType)
 *                                         .clientId(testClient.id())
 *                                         .clientSecretId(testSecret.id())
 *                                         .clientSecretVersionNumber(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyClientDetailsClientSecretVersionNumber)
 *                                         .build())
 *                                     .fallbackRedirectPath(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyFallbackRedirectPath)
 *                                     .logoutPath(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyLogoutPath)
 *                                     .maxExpiryDurationInHours(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyMaxExpiryDurationInHours)
 *                                     .responseCode(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseCode)
 *                                     .responseHeaderTransformations(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsArgs.builder()
 *                                         .filterHeaders(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeadersArgs.builder()
 *                                             .items(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItemArgs.builder()
 *                                                 .name(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItemsName)
 *                                                 .build())
 *                                             .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeadersType)
 *                                             .build())
 *                                         .renameHeaders(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeadersArgs.builder()
 *                                             .items(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItemArgs.builder()
 *                                                 .from(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItemsFrom)
 *                                                 .to(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItemsTo)
 *                                                 .build())
 *                                             .build())
 *                                         .setHeaders(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeadersArgs.builder()
 *                                             .items(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemArgs.builder()
 *                                                 .ifExists(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemsIfExists)
 *                                                 .name(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemsName)
 *                                                 .values(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeadersItemsValues)
 *                                                 .build())
 *                                             .build())
 *                                         .build())
 *                                     .responseMessage(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseMessage)
 *                                     .responseType(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyResponseType)
 *                                     .scopes(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyScopes)
 *                                     .sourceUriDetails(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetailsArgs.builder()
 *                                         .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicySourceUriDetailsType)
 *                                         .uri(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicySourceUriDetailsUri)
 *                                         .build())
 *                                     .useCookiesForIntermediateSteps(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyUseCookiesForIntermediateSteps)
 *                                     .useCookiesForSession(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyUseCookiesForSession)
 *                                     .usePkce(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationFailurePolicyUsePkce)
 *                                     .build())
 *                                 .validationPolicy(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyArgs.builder()
 *                                     .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyType)
 *                                     .additionalValidationPolicy(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs.builder()
 *                                         .audiences(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyAudiences)
 *                                         .issuers(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyIssuers)
 *                                         .verifyClaims(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimArgs.builder()
 *                                             .isRequired(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimsIsRequired)
 *                                             .key(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimsKey)
 *                                             .values(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimsValues)
 *                                             .build())
 *                                         .build())
 *                                     .clientDetails(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyClientDetailsArgs.builder()
 *                                         .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyClientDetailsType)
 *                                         .clientId(testClient.id())
 *                                         .clientSecretId(testSecret.id())
 *                                         .clientSecretVersionNumber(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyClientDetailsClientSecretVersionNumber)
 *                                         .build())
 *                                     .isSslVerifyDisabled(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyIsSslVerifyDisabled)
 *                                     .keys(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyKeyArgs.builder()
 *                                         .format(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysFormat)
 *                                         .alg(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysAlg)
 *                                         .e(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysE)
 *                                         .key(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysKey)
 *                                         .keyOps(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysKeyOps)
 *                                         .kid(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysKid)
 *                                         .kty(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysKty)
 *                                         .n(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysN)
 *                                         .use(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyKeysUse)
 *                                         .build())
 *                                     .maxCacheDurationInHours(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyMaxCacheDurationInHours)
 *                                     .sourceUriDetails(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicySourceUriDetailsArgs.builder()
 *                                         .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicySourceUriDetailsType)
 *                                         .uri(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicySourceUriDetailsUri)
 *                                         .build())
 *                                     .uri(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailValidationPolicyUri)
 *                                     .build())
 *                                 .verifyClaims(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailVerifyClaimArgs.builder()
 *                                     .isRequired(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailVerifyClaimsIsRequired)
 *                                     .key(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailVerifyClaimsKey)
 *                                     .values(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersAuthenticationServerDetailVerifyClaimsValues)
 *                                     .build())
 *                                 .build())
 *                             .key(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerKeyArgs.builder()
 *                                 .name(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyName)
 *                                 .expression(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyExpression)
 *                                 .isDefault(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyIsDefault)
 *                                 .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyType)
 *                                 .values(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyValues)
 *                                 .build())
 *                             .build())
 *                         .selectionSource(DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs.builder()
 *                             .selector(deploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceSelector)
 *                             .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceType)
 *                             .build())
 *                         .build())
 *                     .mutualTls(DeploymentSpecificationRequestPoliciesMutualTlsArgs.builder()
 *                         .allowedSans(deploymentSpecificationRequestPoliciesMutualTlsAllowedSans)
 *                         .isVerifiedCertificateRequired(deploymentSpecificationRequestPoliciesMutualTlsIsVerifiedCertificateRequired)
 *                         .build())
 *                     .rateLimiting(DeploymentSpecificationRequestPoliciesRateLimitingArgs.builder()
 *                         .rateInRequestsPerSecond(deploymentSpecificationRequestPoliciesRateLimitingRateInRequestsPerSecond)
 *                         .rateKey(deploymentSpecificationRequestPoliciesRateLimitingRateKey)
 *                         .build())
 *                     .usagePlans(DeploymentSpecificationRequestPoliciesUsagePlansArgs.builder()
 *                         .tokenLocations(deploymentSpecificationRequestPoliciesUsagePlansTokenLocations)
 *                         .build())
 *                     .build())
 *                 .routes(DeploymentSpecificationRouteArgs.builder()
 *                     .backend(DeploymentSpecificationRouteBackendArgs.builder()
 *                         .type(deploymentSpecificationRoutesBackendType)
 *                         .allowedPostLogoutUris(deploymentSpecificationRoutesBackendAllowedPostLogoutUris)
 *                         .body(deploymentSpecificationRoutesBackendBody)
 *                         .connectTimeoutInSeconds(deploymentSpecificationRoutesBackendConnectTimeoutInSeconds)
 *                         .functionId(testFunction.id())
 *                         .headers(DeploymentSpecificationRouteBackendHeaderArgs.builder()
 *                             .name(deploymentSpecificationRoutesBackendHeadersName)
 *                             .value(deploymentSpecificationRoutesBackendHeadersValue)
 *                             .build())
 *                         .isSslVerifyDisabled(deploymentSpecificationRoutesBackendIsSslVerifyDisabled)
 *                         .postLogoutState(deploymentSpecificationRoutesBackendPostLogoutState)
 *                         .readTimeoutInSeconds(deploymentSpecificationRoutesBackendReadTimeoutInSeconds)
 *                         .routingBackends(DeploymentSpecificationRouteBackendRoutingBackendArgs.builder()
 *                             .backend(DeploymentSpecificationRouteBackendRoutingBackendBackendArgs.builder()
 *                                 .type(deploymentSpecificationRoutesBackendRoutingBackendsBackendType)
 *                                 .body(deploymentSpecificationRoutesBackendRoutingBackendsBackendBody)
 *                                 .connectTimeoutInSeconds(deploymentSpecificationRoutesBackendRoutingBackendsBackendConnectTimeoutInSeconds)
 *                                 .functionId(testFunction.id())
 *                                 .headers(DeploymentSpecificationRouteBackendRoutingBackendBackendHeaderArgs.builder()
 *                                     .name(deploymentSpecificationRoutesBackendRoutingBackendsBackendHeadersName)
 *                                     .value(deploymentSpecificationRoutesBackendRoutingBackendsBackendHeadersValue)
 *                                     .build())
 *                                 .isSslVerifyDisabled(deploymentSpecificationRoutesBackendRoutingBackendsBackendIsSslVerifyDisabled)
 *                                 .readTimeoutInSeconds(deploymentSpecificationRoutesBackendRoutingBackendsBackendReadTimeoutInSeconds)
 *                                 .sendTimeoutInSeconds(deploymentSpecificationRoutesBackendRoutingBackendsBackendSendTimeoutInSeconds)
 *                                 .status(deploymentSpecificationRoutesBackendRoutingBackendsBackendStatus)
 *                                 .url(deploymentSpecificationRoutesBackendRoutingBackendsBackendUrl)
 *                                 .build())
 *                             .key(DeploymentSpecificationRouteBackendRoutingBackendKeyArgs.builder()
 *                                 .name(deploymentSpecificationRoutesBackendRoutingBackendsKeyName)
 *                                 .type(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyType)
 *                                 .expression(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyExpression)
 *                                 .isDefault(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyIsDefault)
 *                                 .values(deploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServersKeyValues)
 *                                 .build())
 *                             .build())
 *                         .selectionSource(DeploymentSpecificationRouteBackendSelectionSourceArgs.builder()
 *                             .selector(deploymentSpecificationRoutesBackendSelectionSourceSelector)
 *                             .type(deploymentSpecificationRoutesBackendSelectionSourceType)
 *                             .build())
 *                         .sendTimeoutInSeconds(deploymentSpecificationRoutesBackendSendTimeoutInSeconds)
 *                         .status(deploymentSpecificationRoutesBackendStatus)
 *                         .url(deploymentSpecificationRoutesBackendUrl)
 *                         .build())
 *                     .path(deploymentSpecificationRoutesPath)
 *                     .loggingPolicies(DeploymentSpecificationRouteLoggingPoliciesArgs.builder()
 *                         .accessLog(DeploymentSpecificationRouteLoggingPoliciesAccessLogArgs.builder()
 *                             .isEnabled(deploymentSpecificationRoutesLoggingPoliciesAccessLogIsEnabled)
 *                             .build())
 *                         .executionLog(DeploymentSpecificationRouteLoggingPoliciesExecutionLogArgs.builder()
 *                             .isEnabled(deploymentSpecificationRoutesLoggingPoliciesExecutionLogIsEnabled)
 *                             .logLevel(deploymentSpecificationRoutesLoggingPoliciesExecutionLogLogLevel)
 *                             .build())
 *                         .build())
 *                     .methods(deploymentSpecificationRoutesMethods)
 *                     .requestPolicies(DeploymentSpecificationRouteRequestPoliciesArgs.builder()
 *                         .authorization(DeploymentSpecificationRouteRequestPoliciesAuthorizationArgs.builder()
 *                             .allowedScopes(deploymentSpecificationRoutesRequestPoliciesAuthorizationAllowedScope)
 *                             .type(deploymentSpecificationRoutesRequestPoliciesAuthorizationType)
 *                             .build())
 *                         .bodyValidation(DeploymentSpecificationRouteRequestPoliciesBodyValidationArgs.builder()
 *                             .contents(DeploymentSpecificationRouteRequestPoliciesBodyValidationContentArgs.builder()
 *                                 .mediaType(deploymentSpecificationRoutesRequestPoliciesBodyValidationContentMediaType)
 *                                 .validationType(deploymentSpecificationRoutesRequestPoliciesBodyValidationContentValidationType)
 *                                 .build())
 *                             .required(deploymentSpecificationRoutesRequestPoliciesBodyValidationRequired)
 *                             .validationMode(deploymentSpecificationRoutesRequestPoliciesBodyValidationValidationMode)
 *                             .build())
 *                         .cors(DeploymentSpecificationRouteRequestPoliciesCorsArgs.builder()
 *                             .allowedOrigins(deploymentSpecificationRoutesRequestPoliciesCorsAllowedOrigins)
 *                             .allowedHeaders(deploymentSpecificationRoutesRequestPoliciesCorsAllowedHeaders)
 *                             .allowedMethods(deploymentSpecificationRoutesRequestPoliciesCorsAllowedMethods)
 *                             .exposedHeaders(deploymentSpecificationRoutesRequestPoliciesCorsExposedHeaders)
 *                             .isAllowCredentialsEnabled(deploymentSpecificationRoutesRequestPoliciesCorsIsAllowCredentialsEnabled)
 *                             .maxAgeInSeconds(deploymentSpecificationRoutesRequestPoliciesCorsMaxAgeInSeconds)
 *                             .build())
 *                         .headerTransformations(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs.builder()
 *                             .filterHeaders(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItemArgs.builder()
 *                                     .name(deploymentSpecificationRoutesRequestPoliciesHeaderTransformationsFilterHeadersItemsName)
 *                                     .build())
 *                                 .type(deploymentSpecificationRoutesRequestPoliciesHeaderTransformationsFilterHeadersType)
 *                                 .build())
 *                             .renameHeaders(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItemArgs.builder()
 *                                     .from(deploymentSpecificationRoutesRequestPoliciesHeaderTransformationsRenameHeadersItemsFrom)
 *                                     .to(deploymentSpecificationRoutesRequestPoliciesHeaderTransformationsRenameHeadersItemsTo)
 *                                     .build())
 *                                 .build())
 *                             .setHeaders(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItemArgs.builder()
 *                                     .name(deploymentSpecificationRoutesRequestPoliciesHeaderTransformationsSetHeadersItemsName)
 *                                     .values(deploymentSpecificationRoutesRequestPoliciesHeaderTransformationsSetHeadersItemsValues)
 *                                     .ifExists(deploymentSpecificationRoutesRequestPoliciesHeaderTransformationsSetHeadersItemsIfExists)
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .headerValidations(DeploymentSpecificationRouteRequestPoliciesHeaderValidationsArgs.builder()
 *                             .headers(DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeaderArgs.builder()
 *                                 .name(deploymentSpecificationRoutesRequestPoliciesHeaderValidationsHeadersName)
 *                                 .required(deploymentSpecificationRoutesRequestPoliciesHeaderValidationsHeadersRequired)
 *                                 .build())
 *                             .validationMode(deploymentSpecificationRoutesRequestPoliciesHeaderValidationsValidationMode)
 *                             .build())
 *                         .queryParameterTransformations(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs.builder()
 *                             .filterQueryParameters(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItemArgs.builder()
 *                                     .name(deploymentSpecificationRoutesRequestPoliciesQueryParameterTransformationsFilterQueryParametersItemsName)
 *                                     .build())
 *                                 .type(deploymentSpecificationRoutesRequestPoliciesQueryParameterTransformationsFilterQueryParametersType)
 *                                 .build())
 *                             .renameQueryParameters(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItemArgs.builder()
 *                                     .from(deploymentSpecificationRoutesRequestPoliciesQueryParameterTransformationsRenameQueryParametersItemsFrom)
 *                                     .to(deploymentSpecificationRoutesRequestPoliciesQueryParameterTransformationsRenameQueryParametersItemsTo)
 *                                     .build())
 *                                 .build())
 *                             .setQueryParameters(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItemArgs.builder()
 *                                     .name(deploymentSpecificationRoutesRequestPoliciesQueryParameterTransformationsSetQueryParametersItemsName)
 *                                     .values(deploymentSpecificationRoutesRequestPoliciesQueryParameterTransformationsSetQueryParametersItemsValues)
 *                                     .ifExists(deploymentSpecificationRoutesRequestPoliciesQueryParameterTransformationsSetQueryParametersItemsIfExists)
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .queryParameterValidations(DeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsArgs.builder()
 *                             .parameters(DeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameterArgs.builder()
 *                                 .name(deploymentSpecificationRoutesRequestPoliciesQueryParameterValidationsParametersName)
 *                                 .required(deploymentSpecificationRoutesRequestPoliciesQueryParameterValidationsParametersRequired)
 *                                 .build())
 *                             .validationMode(deploymentSpecificationRoutesRequestPoliciesQueryParameterValidationsValidationMode)
 *                             .build())
 *                         .responseCacheLookup(DeploymentSpecificationRouteRequestPoliciesResponseCacheLookupArgs.builder()
 *                             .type(deploymentSpecificationRoutesRequestPoliciesResponseCacheLookupType)
 *                             .cacheKeyAdditions(deploymentSpecificationRoutesRequestPoliciesResponseCacheLookupCacheKeyAdditions)
 *                             .isEnabled(deploymentSpecificationRoutesRequestPoliciesResponseCacheLookupIsEnabled)
 *                             .isPrivateCachingEnabled(deploymentSpecificationRoutesRequestPoliciesResponseCacheLookupIsPrivateCachingEnabled)
 *                             .build())
 *                         .build())
 *                     .responsePolicies(DeploymentSpecificationRouteResponsePoliciesArgs.builder()
 *                         .headerTransformations(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsArgs.builder()
 *                             .filterHeaders(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItemArgs.builder()
 *                                     .name(deploymentSpecificationRoutesResponsePoliciesHeaderTransformationsFilterHeadersItemsName)
 *                                     .build())
 *                                 .type(deploymentSpecificationRoutesResponsePoliciesHeaderTransformationsFilterHeadersType)
 *                                 .build())
 *                             .renameHeaders(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItemArgs.builder()
 *                                     .from(deploymentSpecificationRoutesResponsePoliciesHeaderTransformationsRenameHeadersItemsFrom)
 *                                     .to(deploymentSpecificationRoutesResponsePoliciesHeaderTransformationsRenameHeadersItemsTo)
 *                                     .build())
 *                                 .build())
 *                             .setHeaders(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersArgs.builder()
 *                                 .items(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItemArgs.builder()
 *                                     .name(deploymentSpecificationRoutesResponsePoliciesHeaderTransformationsSetHeadersItemsName)
 *                                     .values(deploymentSpecificationRoutesResponsePoliciesHeaderTransformationsSetHeadersItemsValues)
 *                                     .ifExists(deploymentSpecificationRoutesResponsePoliciesHeaderTransformationsSetHeadersItemsIfExists)
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .responseCacheStore(DeploymentSpecificationRouteResponsePoliciesResponseCacheStoreArgs.builder()
 *                             .timeToLiveInSeconds(deploymentSpecificationRoutesResponsePoliciesResponseCacheStoreTimeToLiveInSeconds)
 *                             .type(deploymentSpecificationRoutesResponsePoliciesResponseCacheStoreType)
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .definedTags(Map.of("Operations.CostCenter", "42"))
 *             .displayName(deploymentDisplayName)
 *             .freeformTags(Map.of("Department", "Finance"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Deployments can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:ApiGateway/deployment:Deployment test_deployment &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:ApiGateway/deployment:Deployment")
public class Deployment extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The endpoint to access this deployment on the gateway.
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return The endpoint to access this deployment on the gateway.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    @Export(name="gatewayId", refs={String.class}, tree="[0]")
    private Output<String> gatewayId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    public Output<String> gatewayId() {
        return this.gatewayId;
    }
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * A path on which to deploy all routes contained in the API deployment specification. For more information, see [Deploying an API on an API Gateway by Creating an API Deployment](https://docs.cloud.oracle.com/iaas/Content/APIGateway/Tasks/apigatewaycreatingdeployment.htm).
     * 
     */
    @Export(name="pathPrefix", refs={String.class}, tree="[0]")
    private Output<String> pathPrefix;

    /**
     * @return A path on which to deploy all routes contained in the API deployment specification. For more information, see [Deploying an API on an API Gateway by Creating an API Deployment](https://docs.cloud.oracle.com/iaas/Content/APIGateway/Tasks/apigatewaycreatingdeployment.htm).
     * 
     */
    public Output<String> pathPrefix() {
        return this.pathPrefix;
    }
    /**
     * (Updatable) The logical configuration of the API exposed by a deployment.
     * 
     */
    @Export(name="specification", refs={DeploymentSpecification.class}, tree="[0]")
    private Output<DeploymentSpecification> specification;

    /**
     * @return (Updatable) The logical configuration of the API exposed by a deployment.
     * 
     */
    public Output<DeploymentSpecification> specification() {
        return this.specification;
    }
    /**
     * The current state of the deployment.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the deployment.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Deployment(String name) {
        this(name, DeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Deployment(String name, DeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Deployment(String name, DeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ApiGateway/deployment:Deployment", name, args == null ? DeploymentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Deployment(String name, Output<String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ApiGateway/deployment:Deployment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Deployment get(String name, Output<String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Deployment(name, id, state, options);
    }
}
