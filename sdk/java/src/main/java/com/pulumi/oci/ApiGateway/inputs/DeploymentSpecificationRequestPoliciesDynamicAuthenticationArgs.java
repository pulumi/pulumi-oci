// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs;
import java.util.List;
import java.util.Objects;


public final class DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs Empty = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs();

    /**
     * (Updatable) List of authentication servers to choose from during dynamic authentication.
     * 
     */
    @Import(name="authenticationServers", required=true)
    private Output<List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerArgs>> authenticationServers;

    /**
     * @return (Updatable) List of authentication servers to choose from during dynamic authentication.
     * 
     */
    public Output<List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerArgs>> authenticationServers() {
        return this.authenticationServers;
    }

    /**
     * (Updatable) The type of selector to use when dynamically routing and dynamically authenticating requests.
     * 
     */
    @Import(name="selectionSource", required=true)
    private Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs> selectionSource;

    /**
     * @return (Updatable) The type of selector to use when dynamically routing and dynamically authenticating requests.
     * 
     */
    public Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs> selectionSource() {
        return this.selectionSource;
    }

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs() {}

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs(DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs $) {
        this.authenticationServers = $.authenticationServers;
        this.selectionSource = $.selectionSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs();
        }

        public Builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs defaults) {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationServers (Updatable) List of authentication servers to choose from during dynamic authentication.
         * 
         * @return builder
         * 
         */
        public Builder authenticationServers(Output<List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerArgs>> authenticationServers) {
            $.authenticationServers = authenticationServers;
            return this;
        }

        /**
         * @param authenticationServers (Updatable) List of authentication servers to choose from during dynamic authentication.
         * 
         * @return builder
         * 
         */
        public Builder authenticationServers(List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerArgs> authenticationServers) {
            return authenticationServers(Output.of(authenticationServers));
        }

        /**
         * @param authenticationServers (Updatable) List of authentication servers to choose from during dynamic authentication.
         * 
         * @return builder
         * 
         */
        public Builder authenticationServers(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerArgs... authenticationServers) {
            return authenticationServers(List.of(authenticationServers));
        }

        /**
         * @param selectionSource (Updatable) The type of selector to use when dynamically routing and dynamically authenticating requests.
         * 
         * @return builder
         * 
         */
        public Builder selectionSource(Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs> selectionSource) {
            $.selectionSource = selectionSource;
            return this;
        }

        /**
         * @param selectionSource (Updatable) The type of selector to use when dynamically routing and dynamically authenticating requests.
         * 
         * @return builder
         * 
         */
        public Builder selectionSource(DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs selectionSource) {
            return selectionSource(Output.of(selectionSource));
        }

        public DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs build() {
            if ($.authenticationServers == null) {
                throw new MissingRequiredPropertyException("DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs", "authenticationServers");
            }
            if ($.selectionSource == null) {
                throw new MissingRequiredPropertyException("DeploymentSpecificationRequestPoliciesDynamicAuthenticationArgs", "selectionSource");
            }
            return $;
        }
    }

}
