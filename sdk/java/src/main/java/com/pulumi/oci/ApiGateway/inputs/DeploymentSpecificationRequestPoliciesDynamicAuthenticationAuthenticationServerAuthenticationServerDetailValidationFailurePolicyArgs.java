// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetailsArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetailsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs Empty = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs();

    /**
     * (Updatable) Client App Credential details.
     * 
     */
    @Import(name="clientDetails")
    private @Nullable Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetailsArgs> clientDetails;

    /**
     * @return (Updatable) Client App Credential details.
     * 
     */
    public Optional<Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetailsArgs>> clientDetails() {
        return Optional.ofNullable(this.clientDetails);
    }

    /**
     * (Updatable) The path to be used as fallback after OAuth2.
     * 
     */
    @Import(name="fallbackRedirectPath")
    private @Nullable Output<String> fallbackRedirectPath;

    /**
     * @return (Updatable) The path to be used as fallback after OAuth2.
     * 
     */
    public Optional<Output<String>> fallbackRedirectPath() {
        return Optional.ofNullable(this.fallbackRedirectPath);
    }

    /**
     * (Updatable) The path to be used as logout.
     * 
     */
    @Import(name="logoutPath")
    private @Nullable Output<String> logoutPath;

    /**
     * @return (Updatable) The path to be used as logout.
     * 
     */
    public Optional<Output<String>> logoutPath() {
        return Optional.ofNullable(this.logoutPath);
    }

    /**
     * (Updatable) The duration for which the OAuth2 success token should be cached before it is fetched again.
     * 
     */
    @Import(name="maxExpiryDurationInHours")
    private @Nullable Output<Integer> maxExpiryDurationInHours;

    /**
     * @return (Updatable) The duration for which the OAuth2 success token should be cached before it is fetched again.
     * 
     */
    public Optional<Output<Integer>> maxExpiryDurationInHours() {
        return Optional.ofNullable(this.maxExpiryDurationInHours);
    }

    /**
     * (Updatable) HTTP response code, can include context variables.
     * 
     */
    @Import(name="responseCode")
    private @Nullable Output<String> responseCode;

    /**
     * @return (Updatable) HTTP response code, can include context variables.
     * 
     */
    public Optional<Output<String>> responseCode() {
        return Optional.ofNullable(this.responseCode);
    }

    /**
     * (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    @Import(name="responseHeaderTransformations")
    private @Nullable Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsArgs> responseHeaderTransformations;

    /**
     * @return (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    public Optional<Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsArgs>> responseHeaderTransformations() {
        return Optional.ofNullable(this.responseHeaderTransformations);
    }

    /**
     * (Updatable) HTTP response message.
     * 
     */
    @Import(name="responseMessage")
    private @Nullable Output<String> responseMessage;

    /**
     * @return (Updatable) HTTP response message.
     * 
     */
    public Optional<Output<String>> responseMessage() {
        return Optional.ofNullable(this.responseMessage);
    }

    /**
     * (Updatable) Response Type.
     * 
     */
    @Import(name="responseType")
    private @Nullable Output<String> responseType;

    /**
     * @return (Updatable) Response Type.
     * 
     */
    public Optional<Output<String>> responseType() {
        return Optional.ofNullable(this.responseType);
    }

    /**
     * (Updatable) List of scopes.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return (Updatable) List of scopes.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * (Updatable) Auth endpoint details.
     * 
     */
    @Import(name="sourceUriDetails")
    private @Nullable Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetailsArgs> sourceUriDetails;

    /**
     * @return (Updatable) Auth endpoint details.
     * 
     */
    public Optional<Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetailsArgs>> sourceUriDetails() {
        return Optional.ofNullable(this.sourceUriDetails);
    }

    /**
     * (Updatable) Type of the Response Cache Store Policy.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of the Response Cache Store Policy.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * (Updatable) Defines whether or not to use cookies for OAuth2 intermediate steps.
     * 
     */
    @Import(name="useCookiesForIntermediateSteps")
    private @Nullable Output<Boolean> useCookiesForIntermediateSteps;

    /**
     * @return (Updatable) Defines whether or not to use cookies for OAuth2 intermediate steps.
     * 
     */
    public Optional<Output<Boolean>> useCookiesForIntermediateSteps() {
        return Optional.ofNullable(this.useCookiesForIntermediateSteps);
    }

    /**
     * (Updatable) Defines whether or not to use cookies for session maintenance.
     * 
     */
    @Import(name="useCookiesForSession")
    private @Nullable Output<Boolean> useCookiesForSession;

    /**
     * @return (Updatable) Defines whether or not to use cookies for session maintenance.
     * 
     */
    public Optional<Output<Boolean>> useCookiesForSession() {
        return Optional.ofNullable(this.useCookiesForSession);
    }

    /**
     * (Updatable) Defines whether or not to support PKCE.
     * 
     */
    @Import(name="usePkce")
    private @Nullable Output<Boolean> usePkce;

    /**
     * @return (Updatable) Defines whether or not to support PKCE.
     * 
     */
    public Optional<Output<Boolean>> usePkce() {
        return Optional.ofNullable(this.usePkce);
    }

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs() {}

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs $) {
        this.clientDetails = $.clientDetails;
        this.fallbackRedirectPath = $.fallbackRedirectPath;
        this.logoutPath = $.logoutPath;
        this.maxExpiryDurationInHours = $.maxExpiryDurationInHours;
        this.responseCode = $.responseCode;
        this.responseHeaderTransformations = $.responseHeaderTransformations;
        this.responseMessage = $.responseMessage;
        this.responseType = $.responseType;
        this.scopes = $.scopes;
        this.sourceUriDetails = $.sourceUriDetails;
        this.type = $.type;
        this.useCookiesForIntermediateSteps = $.useCookiesForIntermediateSteps;
        this.useCookiesForSession = $.useCookiesForSession;
        this.usePkce = $.usePkce;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs();
        }

        public Builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs defaults) {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientDetails (Updatable) Client App Credential details.
         * 
         * @return builder
         * 
         */
        public Builder clientDetails(@Nullable Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetailsArgs> clientDetails) {
            $.clientDetails = clientDetails;
            return this;
        }

        /**
         * @param clientDetails (Updatable) Client App Credential details.
         * 
         * @return builder
         * 
         */
        public Builder clientDetails(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetailsArgs clientDetails) {
            return clientDetails(Output.of(clientDetails));
        }

        /**
         * @param fallbackRedirectPath (Updatable) The path to be used as fallback after OAuth2.
         * 
         * @return builder
         * 
         */
        public Builder fallbackRedirectPath(@Nullable Output<String> fallbackRedirectPath) {
            $.fallbackRedirectPath = fallbackRedirectPath;
            return this;
        }

        /**
         * @param fallbackRedirectPath (Updatable) The path to be used as fallback after OAuth2.
         * 
         * @return builder
         * 
         */
        public Builder fallbackRedirectPath(String fallbackRedirectPath) {
            return fallbackRedirectPath(Output.of(fallbackRedirectPath));
        }

        /**
         * @param logoutPath (Updatable) The path to be used as logout.
         * 
         * @return builder
         * 
         */
        public Builder logoutPath(@Nullable Output<String> logoutPath) {
            $.logoutPath = logoutPath;
            return this;
        }

        /**
         * @param logoutPath (Updatable) The path to be used as logout.
         * 
         * @return builder
         * 
         */
        public Builder logoutPath(String logoutPath) {
            return logoutPath(Output.of(logoutPath));
        }

        /**
         * @param maxExpiryDurationInHours (Updatable) The duration for which the OAuth2 success token should be cached before it is fetched again.
         * 
         * @return builder
         * 
         */
        public Builder maxExpiryDurationInHours(@Nullable Output<Integer> maxExpiryDurationInHours) {
            $.maxExpiryDurationInHours = maxExpiryDurationInHours;
            return this;
        }

        /**
         * @param maxExpiryDurationInHours (Updatable) The duration for which the OAuth2 success token should be cached before it is fetched again.
         * 
         * @return builder
         * 
         */
        public Builder maxExpiryDurationInHours(Integer maxExpiryDurationInHours) {
            return maxExpiryDurationInHours(Output.of(maxExpiryDurationInHours));
        }

        /**
         * @param responseCode (Updatable) HTTP response code, can include context variables.
         * 
         * @return builder
         * 
         */
        public Builder responseCode(@Nullable Output<String> responseCode) {
            $.responseCode = responseCode;
            return this;
        }

        /**
         * @param responseCode (Updatable) HTTP response code, can include context variables.
         * 
         * @return builder
         * 
         */
        public Builder responseCode(String responseCode) {
            return responseCode(Output.of(responseCode));
        }

        /**
         * @param responseHeaderTransformations (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder responseHeaderTransformations(@Nullable Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsArgs> responseHeaderTransformations) {
            $.responseHeaderTransformations = responseHeaderTransformations;
            return this;
        }

        /**
         * @param responseHeaderTransformations (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder responseHeaderTransformations(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsArgs responseHeaderTransformations) {
            return responseHeaderTransformations(Output.of(responseHeaderTransformations));
        }

        /**
         * @param responseMessage (Updatable) HTTP response message.
         * 
         * @return builder
         * 
         */
        public Builder responseMessage(@Nullable Output<String> responseMessage) {
            $.responseMessage = responseMessage;
            return this;
        }

        /**
         * @param responseMessage (Updatable) HTTP response message.
         * 
         * @return builder
         * 
         */
        public Builder responseMessage(String responseMessage) {
            return responseMessage(Output.of(responseMessage));
        }

        /**
         * @param responseType (Updatable) Response Type.
         * 
         * @return builder
         * 
         */
        public Builder responseType(@Nullable Output<String> responseType) {
            $.responseType = responseType;
            return this;
        }

        /**
         * @param responseType (Updatable) Response Type.
         * 
         * @return builder
         * 
         */
        public Builder responseType(String responseType) {
            return responseType(Output.of(responseType));
        }

        /**
         * @param scopes (Updatable) List of scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes (Updatable) List of scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes (Updatable) List of scopes.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param sourceUriDetails (Updatable) Auth endpoint details.
         * 
         * @return builder
         * 
         */
        public Builder sourceUriDetails(@Nullable Output<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetailsArgs> sourceUriDetails) {
            $.sourceUriDetails = sourceUriDetails;
            return this;
        }

        /**
         * @param sourceUriDetails (Updatable) Auth endpoint details.
         * 
         * @return builder
         * 
         */
        public Builder sourceUriDetails(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetailsArgs sourceUriDetails) {
            return sourceUriDetails(Output.of(sourceUriDetails));
        }

        /**
         * @param type (Updatable) Type of the Response Cache Store Policy.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of the Response Cache Store Policy.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param useCookiesForIntermediateSteps (Updatable) Defines whether or not to use cookies for OAuth2 intermediate steps.
         * 
         * @return builder
         * 
         */
        public Builder useCookiesForIntermediateSteps(@Nullable Output<Boolean> useCookiesForIntermediateSteps) {
            $.useCookiesForIntermediateSteps = useCookiesForIntermediateSteps;
            return this;
        }

        /**
         * @param useCookiesForIntermediateSteps (Updatable) Defines whether or not to use cookies for OAuth2 intermediate steps.
         * 
         * @return builder
         * 
         */
        public Builder useCookiesForIntermediateSteps(Boolean useCookiesForIntermediateSteps) {
            return useCookiesForIntermediateSteps(Output.of(useCookiesForIntermediateSteps));
        }

        /**
         * @param useCookiesForSession (Updatable) Defines whether or not to use cookies for session maintenance.
         * 
         * @return builder
         * 
         */
        public Builder useCookiesForSession(@Nullable Output<Boolean> useCookiesForSession) {
            $.useCookiesForSession = useCookiesForSession;
            return this;
        }

        /**
         * @param useCookiesForSession (Updatable) Defines whether or not to use cookies for session maintenance.
         * 
         * @return builder
         * 
         */
        public Builder useCookiesForSession(Boolean useCookiesForSession) {
            return useCookiesForSession(Output.of(useCookiesForSession));
        }

        /**
         * @param usePkce (Updatable) Defines whether or not to support PKCE.
         * 
         * @return builder
         * 
         */
        public Builder usePkce(@Nullable Output<Boolean> usePkce) {
            $.usePkce = usePkce;
            return this;
        }

        /**
         * @param usePkce (Updatable) Defines whether or not to support PKCE.
         * 
         * @return builder
         * 
         */
        public Builder usePkce(Boolean usePkce) {
            return usePkce(Output.of(usePkce));
        }

        public DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
