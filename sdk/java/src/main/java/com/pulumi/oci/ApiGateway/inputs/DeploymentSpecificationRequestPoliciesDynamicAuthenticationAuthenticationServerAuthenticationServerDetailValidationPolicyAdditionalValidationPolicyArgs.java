// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs Empty = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs();

    /**
     * (Updatable) The list of intended recipients for the token.
     * 
     */
    @Import(name="audiences")
    private @Nullable Output<List<String>> audiences;

    /**
     * @return (Updatable) The list of intended recipients for the token.
     * 
     */
    public Optional<Output<List<String>>> audiences() {
        return Optional.ofNullable(this.audiences);
    }

    /**
     * (Updatable) A list of parties that could have issued the token.
     * 
     */
    @Import(name="issuers")
    private @Nullable Output<List<String>> issuers;

    /**
     * @return (Updatable) A list of parties that could have issued the token.
     * 
     */
    public Optional<Output<List<String>>> issuers() {
        return Optional.ofNullable(this.issuers);
    }

    /**
     * (Updatable) A list of claims which should be validated to consider the token valid.
     * 
     */
    @Import(name="verifyClaims")
    private @Nullable Output<List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimArgs>> verifyClaims;

    /**
     * @return (Updatable) A list of claims which should be validated to consider the token valid.
     * 
     */
    public Optional<Output<List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimArgs>>> verifyClaims() {
        return Optional.ofNullable(this.verifyClaims);
    }

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs() {}

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs $) {
        this.audiences = $.audiences;
        this.issuers = $.issuers;
        this.verifyClaims = $.verifyClaims;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs();
        }

        public Builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs defaults) {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audiences (Updatable) The list of intended recipients for the token.
         * 
         * @return builder
         * 
         */
        public Builder audiences(@Nullable Output<List<String>> audiences) {
            $.audiences = audiences;
            return this;
        }

        /**
         * @param audiences (Updatable) The list of intended recipients for the token.
         * 
         * @return builder
         * 
         */
        public Builder audiences(List<String> audiences) {
            return audiences(Output.of(audiences));
        }

        /**
         * @param audiences (Updatable) The list of intended recipients for the token.
         * 
         * @return builder
         * 
         */
        public Builder audiences(String... audiences) {
            return audiences(List.of(audiences));
        }

        /**
         * @param issuers (Updatable) A list of parties that could have issued the token.
         * 
         * @return builder
         * 
         */
        public Builder issuers(@Nullable Output<List<String>> issuers) {
            $.issuers = issuers;
            return this;
        }

        /**
         * @param issuers (Updatable) A list of parties that could have issued the token.
         * 
         * @return builder
         * 
         */
        public Builder issuers(List<String> issuers) {
            return issuers(Output.of(issuers));
        }

        /**
         * @param issuers (Updatable) A list of parties that could have issued the token.
         * 
         * @return builder
         * 
         */
        public Builder issuers(String... issuers) {
            return issuers(List.of(issuers));
        }

        /**
         * @param verifyClaims (Updatable) A list of claims which should be validated to consider the token valid.
         * 
         * @return builder
         * 
         */
        public Builder verifyClaims(@Nullable Output<List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimArgs>> verifyClaims) {
            $.verifyClaims = verifyClaims;
            return this;
        }

        /**
         * @param verifyClaims (Updatable) A list of claims which should be validated to consider the token valid.
         * 
         * @return builder
         * 
         */
        public Builder verifyClaims(List<DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimArgs> verifyClaims) {
            return verifyClaims(Output.of(verifyClaims));
        }

        /**
         * @param verifyClaims (Updatable) A list of claims which should be validated to consider the token valid.
         * 
         * @return builder
         * 
         */
        public Builder verifyClaims(DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaimArgs... verifyClaims) {
            return verifyClaims(List.of(verifyClaims));
        }

        public DeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyArgs build() {
            return $;
        }
    }

}
