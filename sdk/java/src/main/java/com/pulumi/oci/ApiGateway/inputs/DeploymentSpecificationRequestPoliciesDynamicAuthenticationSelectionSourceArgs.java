// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs Empty = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs();

    /**
     * (Updatable) String describing the context variable used as selector.
     * 
     */
    @Import(name="selector", required=true)
    private Output<String> selector;

    /**
     * @return (Updatable) String describing the context variable used as selector.
     * 
     */
    public Output<String> selector() {
        return this.selector;
    }

    /**
     * (Updatable) Type of the Response Cache Store Policy.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of the Response Cache Store Policy.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs() {}

    private DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs(DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs $) {
        this.selector = $.selector;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs();
        }

        public Builder(DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs defaults) {
            $ = new DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param selector (Updatable) String describing the context variable used as selector.
         * 
         * @return builder
         * 
         */
        public Builder selector(Output<String> selector) {
            $.selector = selector;
            return this;
        }

        /**
         * @param selector (Updatable) String describing the context variable used as selector.
         * 
         * @return builder
         * 
         */
        public Builder selector(String selector) {
            return selector(Output.of(selector));
        }

        /**
         * @param type (Updatable) Type of the Response Cache Store Policy.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of the Response Cache Store Policy.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs build() {
            if ($.selector == null) {
                throw new MissingRequiredPropertyException("DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs", "selector");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSourceArgs", "type");
            }
            return $;
        }
    }

}
