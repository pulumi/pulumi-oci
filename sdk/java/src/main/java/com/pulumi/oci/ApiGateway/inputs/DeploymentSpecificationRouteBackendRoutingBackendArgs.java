// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteBackendRoutingBackendBackendArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteBackendRoutingBackendKeyArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentSpecificationRouteBackendRoutingBackendArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRouteBackendRoutingBackendArgs Empty = new DeploymentSpecificationRouteBackendRoutingBackendArgs();

    /**
     * (Updatable) The backend to forward requests to.
     * 
     */
    @Import(name="backend")
    private @Nullable Output<DeploymentSpecificationRouteBackendRoutingBackendBackendArgs> backend;

    /**
     * @return (Updatable) The backend to forward requests to.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteBackendRoutingBackendBackendArgs>> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * (Updatable) Information around the values for selector of an authentication/ routing branch.
     * 
     */
    @Import(name="key")
    private @Nullable Output<DeploymentSpecificationRouteBackendRoutingBackendKeyArgs> key;

    /**
     * @return (Updatable) Information around the values for selector of an authentication/ routing branch.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteBackendRoutingBackendKeyArgs>> key() {
        return Optional.ofNullable(this.key);
    }

    private DeploymentSpecificationRouteBackendRoutingBackendArgs() {}

    private DeploymentSpecificationRouteBackendRoutingBackendArgs(DeploymentSpecificationRouteBackendRoutingBackendArgs $) {
        this.backend = $.backend;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRouteBackendRoutingBackendArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRouteBackendRoutingBackendArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRouteBackendRoutingBackendArgs();
        }

        public Builder(DeploymentSpecificationRouteBackendRoutingBackendArgs defaults) {
            $ = new DeploymentSpecificationRouteBackendRoutingBackendArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend (Updatable) The backend to forward requests to.
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable Output<DeploymentSpecificationRouteBackendRoutingBackendBackendArgs> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend (Updatable) The backend to forward requests to.
         * 
         * @return builder
         * 
         */
        public Builder backend(DeploymentSpecificationRouteBackendRoutingBackendBackendArgs backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param key (Updatable) Information around the values for selector of an authentication/ routing branch.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<DeploymentSpecificationRouteBackendRoutingBackendKeyArgs> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key (Updatable) Information around the values for selector of an authentication/ routing branch.
         * 
         * @return builder
         * 
         */
        public Builder key(DeploymentSpecificationRouteBackendRoutingBackendKeyArgs key) {
            return key(Output.of(key));
        }

        public DeploymentSpecificationRouteBackendRoutingBackendArgs build() {
            return $;
        }
    }

}
