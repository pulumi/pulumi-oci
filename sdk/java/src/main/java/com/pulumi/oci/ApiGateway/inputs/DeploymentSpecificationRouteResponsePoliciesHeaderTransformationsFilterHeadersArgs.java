// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItemArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs Empty = new DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs();

    /**
     * (Updatable) The list of headers.
     * 
     */
    @Import(name="items", required=true)
    private Output<List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItemArgs>> items;

    /**
     * @return (Updatable) The list of headers.
     * 
     */
    public Output<List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItemArgs>> items() {
        return this.items;
    }

    /**
     * (Updatable) BLOCK drops any headers that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the headers in the list and removes all others, so it acts as an inclusion list.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) BLOCK drops any headers that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the headers in the list and removes all others, so it acts as an inclusion list.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs() {}

    private DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs $) {
        this.items = $.items;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs();
        }

        public Builder(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs defaults) {
            $ = new DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param items (Updatable) The list of headers.
         * 
         * @return builder
         * 
         */
        public Builder items(Output<List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItemArgs>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items (Updatable) The list of headers.
         * 
         * @return builder
         * 
         */
        public Builder items(List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItemArgs> items) {
            return items(Output.of(items));
        }

        /**
         * @param items (Updatable) The list of headers.
         * 
         * @return builder
         * 
         */
        public Builder items(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param type (Updatable) BLOCK drops any headers that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the headers in the list and removes all others, so it acts as an inclusion list.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) BLOCK drops any headers that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the headers in the list and removes all others, so it acts as an inclusion list.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs build() {
            if ($.items == null) {
                throw new MissingRequiredPropertyException("DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs", "items");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersArgs", "type");
            }
            return $;
        }
    }

}
