// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteBackend;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteLoggingPolicies;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteRequestPolicies;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteResponsePolicies;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentSpecificationRoute {
    /**
     * @return (Updatable) The backend to forward requests to.
     * 
     */
    private DeploymentSpecificationRouteBackend backend;
    /**
     * @return (Updatable) Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     * 
     */
    private @Nullable DeploymentSpecificationRouteLoggingPolicies loggingPolicies;
    /**
     * @return (Updatable) A list of allowed methods on this route.
     * 
     */
    private @Nullable List<String> methods;
    /**
     * @return (Updatable) A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     * 
     */
    private String path;
    /**
     * @return (Updatable) Behavior applied to any requests received by the API on this route.
     * 
     */
    private @Nullable DeploymentSpecificationRouteRequestPolicies requestPolicies;
    /**
     * @return (Updatable) Behavior applied to any responses sent by the API for requests on this route.
     * 
     */
    private @Nullable DeploymentSpecificationRouteResponsePolicies responsePolicies;

    private DeploymentSpecificationRoute() {}
    /**
     * @return (Updatable) The backend to forward requests to.
     * 
     */
    public DeploymentSpecificationRouteBackend backend() {
        return this.backend;
    }
    /**
     * @return (Updatable) Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     * 
     */
    public Optional<DeploymentSpecificationRouteLoggingPolicies> loggingPolicies() {
        return Optional.ofNullable(this.loggingPolicies);
    }
    /**
     * @return (Updatable) A list of allowed methods on this route.
     * 
     */
    public List<String> methods() {
        return this.methods == null ? List.of() : this.methods;
    }
    /**
     * @return (Updatable) A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return (Updatable) Behavior applied to any requests received by the API on this route.
     * 
     */
    public Optional<DeploymentSpecificationRouteRequestPolicies> requestPolicies() {
        return Optional.ofNullable(this.requestPolicies);
    }
    /**
     * @return (Updatable) Behavior applied to any responses sent by the API for requests on this route.
     * 
     */
    public Optional<DeploymentSpecificationRouteResponsePolicies> responsePolicies() {
        return Optional.ofNullable(this.responsePolicies);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSpecificationRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private DeploymentSpecificationRouteBackend backend;
        private @Nullable DeploymentSpecificationRouteLoggingPolicies loggingPolicies;
        private @Nullable List<String> methods;
        private String path;
        private @Nullable DeploymentSpecificationRouteRequestPolicies requestPolicies;
        private @Nullable DeploymentSpecificationRouteResponsePolicies responsePolicies;
        public Builder() {}
        public Builder(DeploymentSpecificationRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backend = defaults.backend;
    	      this.loggingPolicies = defaults.loggingPolicies;
    	      this.methods = defaults.methods;
    	      this.path = defaults.path;
    	      this.requestPolicies = defaults.requestPolicies;
    	      this.responsePolicies = defaults.responsePolicies;
        }

        @CustomType.Setter
        public Builder backend(DeploymentSpecificationRouteBackend backend) {
            this.backend = Objects.requireNonNull(backend);
            return this;
        }
        @CustomType.Setter
        public Builder loggingPolicies(@Nullable DeploymentSpecificationRouteLoggingPolicies loggingPolicies) {
            this.loggingPolicies = loggingPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder methods(@Nullable List<String> methods) {
            this.methods = methods;
            return this;
        }
        public Builder methods(String... methods) {
            return methods(List.of(methods));
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        @CustomType.Setter
        public Builder requestPolicies(@Nullable DeploymentSpecificationRouteRequestPolicies requestPolicies) {
            this.requestPolicies = requestPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder responsePolicies(@Nullable DeploymentSpecificationRouteResponsePolicies responsePolicies) {
            this.responsePolicies = responsePolicies;
            return this;
        }
        public DeploymentSpecificationRoute build() {
            final var o = new DeploymentSpecificationRoute();
            o.backend = backend;
            o.loggingPolicies = loggingPolicies;
            o.methods = methods;
            o.path = path;
            o.requestPolicies = requestPolicies;
            o.responsePolicies = responsePolicies;
            return o;
        }
    }
}
