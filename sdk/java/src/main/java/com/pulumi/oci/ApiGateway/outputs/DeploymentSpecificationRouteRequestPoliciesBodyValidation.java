// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteRequestPoliciesBodyValidationContent;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentSpecificationRouteRequestPoliciesBodyValidation {
    /**
     * @return (Updatable) The content of the request body.
     * 
     */
    private @Nullable List<DeploymentSpecificationRouteRequestPoliciesBodyValidationContent> contents;
    /**
     * @return (Updatable) Determines if the request body is required in the request.
     * 
     */
    private @Nullable Boolean required;
    /**
     * @return (Updatable) Validation behavior mode.
     * 
     * In `ENFORCING` mode, upon a validation failure, the request will be rejected with a 4xx response and not sent to the backend.
     * 
     * In `PERMISSIVE` mode, the result of the validation will be exposed as metrics while the request will follow the normal path.
     * 
     * `DISABLED` type turns the validation off.
     * 
     */
    private @Nullable String validationMode;

    private DeploymentSpecificationRouteRequestPoliciesBodyValidation() {}
    /**
     * @return (Updatable) The content of the request body.
     * 
     */
    public List<DeploymentSpecificationRouteRequestPoliciesBodyValidationContent> contents() {
        return this.contents == null ? List.of() : this.contents;
    }
    /**
     * @return (Updatable) Determines if the request body is required in the request.
     * 
     */
    public Optional<Boolean> required() {
        return Optional.ofNullable(this.required);
    }
    /**
     * @return (Updatable) Validation behavior mode.
     * 
     * In `ENFORCING` mode, upon a validation failure, the request will be rejected with a 4xx response and not sent to the backend.
     * 
     * In `PERMISSIVE` mode, the result of the validation will be exposed as metrics while the request will follow the normal path.
     * 
     * `DISABLED` type turns the validation off.
     * 
     */
    public Optional<String> validationMode() {
        return Optional.ofNullable(this.validationMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSpecificationRouteRequestPoliciesBodyValidation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DeploymentSpecificationRouteRequestPoliciesBodyValidationContent> contents;
        private @Nullable Boolean required;
        private @Nullable String validationMode;
        public Builder() {}
        public Builder(DeploymentSpecificationRouteRequestPoliciesBodyValidation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contents = defaults.contents;
    	      this.required = defaults.required;
    	      this.validationMode = defaults.validationMode;
        }

        @CustomType.Setter
        public Builder contents(@Nullable List<DeploymentSpecificationRouteRequestPoliciesBodyValidationContent> contents) {

            this.contents = contents;
            return this;
        }
        public Builder contents(DeploymentSpecificationRouteRequestPoliciesBodyValidationContent... contents) {
            return contents(List.of(contents));
        }
        @CustomType.Setter
        public Builder required(@Nullable Boolean required) {

            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder validationMode(@Nullable String validationMode) {

            this.validationMode = validationMode;
            return this;
        }
        public DeploymentSpecificationRouteRequestPoliciesBodyValidation build() {
            final var _resultValue = new DeploymentSpecificationRouteRequestPoliciesBodyValidation();
            _resultValue.contents = contents;
            _resultValue.required = required;
            _resultValue.validationMode = validationMode;
            return _resultValue;
        }
    }
}
