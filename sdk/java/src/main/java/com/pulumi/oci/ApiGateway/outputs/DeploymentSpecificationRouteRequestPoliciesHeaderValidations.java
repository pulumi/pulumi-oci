// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentSpecificationRouteRequestPoliciesHeaderValidations {
    /**
     * @return (Updatable)
     * 
     */
    private @Nullable List<DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader> headers;
    /**
     * @return (Updatable) Validation behavior mode.
     * 
     * In `ENFORCING` mode, upon a validation failure, the request will be rejected with a 4xx response and not sent to the backend.
     * 
     * In `PERMISSIVE` mode, the result of the validation will be exposed as metrics while the request will follow the normal path.
     * 
     * `DISABLED` type turns the validation off.
     * 
     */
    private @Nullable String validationMode;

    private DeploymentSpecificationRouteRequestPoliciesHeaderValidations() {}
    /**
     * @return (Updatable)
     * 
     */
    public List<DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader> headers() {
        return this.headers == null ? List.of() : this.headers;
    }
    /**
     * @return (Updatable) Validation behavior mode.
     * 
     * In `ENFORCING` mode, upon a validation failure, the request will be rejected with a 4xx response and not sent to the backend.
     * 
     * In `PERMISSIVE` mode, the result of the validation will be exposed as metrics while the request will follow the normal path.
     * 
     * `DISABLED` type turns the validation off.
     * 
     */
    public Optional<String> validationMode() {
        return Optional.ofNullable(this.validationMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSpecificationRouteRequestPoliciesHeaderValidations defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader> headers;
        private @Nullable String validationMode;
        public Builder() {}
        public Builder(DeploymentSpecificationRouteRequestPoliciesHeaderValidations defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headers = defaults.headers;
    	      this.validationMode = defaults.validationMode;
        }

        @CustomType.Setter
        public Builder headers(@Nullable List<DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader> headers) {
            this.headers = headers;
            return this;
        }
        public Builder headers(DeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder validationMode(@Nullable String validationMode) {
            this.validationMode = validationMode;
            return this;
        }
        public DeploymentSpecificationRouteRequestPoliciesHeaderValidations build() {
            final var _resultValue = new DeploymentSpecificationRouteRequestPoliciesHeaderValidations();
            _resultValue.headers = headers;
            _resultValue.validationMode = validationMode;
            return _resultValue;
        }
    }
}
