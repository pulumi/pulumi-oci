// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters {
    /**
     * @return (Updatable) The list of query parameters.
     * 
     */
    private List<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem> items;
    /**
     * @return (Updatable) BLOCK drops any query parameters that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the parameters in the list and removes all others, so it acts as an inclusion list.
     * 
     */
    private String type;

    private DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters() {}
    /**
     * @return (Updatable) The list of query parameters.
     * 
     */
    public List<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem> items() {
        return this.items;
    }
    /**
     * @return (Updatable) BLOCK drops any query parameters that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the parameters in the list and removes all others, so it acts as an inclusion list.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem> items;
        private String type;
        public Builder() {}
        public Builder(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.items = defaults.items;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder items(List<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters", "type");
            }
            this.type = type;
            return this;
        }
        public DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters build() {
            final var _resultValue = new DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters();
            _resultValue.items = items;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
