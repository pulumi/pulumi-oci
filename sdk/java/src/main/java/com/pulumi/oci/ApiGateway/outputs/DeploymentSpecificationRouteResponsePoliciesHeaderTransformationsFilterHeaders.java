// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders {
    /**
     * @return (Updatable) The list of headers.
     * 
     */
    private List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem> items;
    /**
     * @return (Updatable) BLOCK drops any headers that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the headers in the list and removes all others, so it acts as an inclusion list.
     * 
     */
    private String type;

    private DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders() {}
    /**
     * @return (Updatable) The list of headers.
     * 
     */
    public List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem> items() {
        return this.items;
    }
    /**
     * @return (Updatable) BLOCK drops any headers that are in the list of items, so it acts as an exclusion list.  ALLOW permits only the headers in the list and removes all others, so it acts as an inclusion list.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem> items;
        private String type;
        public Builder() {}
        public Builder(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.items = defaults.items;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder items(List<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders", "type");
            }
            this.type = type;
            return this;
        }
        public DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders build() {
            final var _resultValue = new DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders();
            _resultValue.items = items;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
