// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.GatewayResponseCacheDetailsServer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GatewayResponseCacheDetails {
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
     * 
     */
    private @Nullable String authenticationSecretId;
    /**
     * @return (Updatable) The version number of the authentication secret to use.
     * 
     */
    private @Nullable String authenticationSecretVersionNumber;
    /**
     * @return (Updatable) Defines the timeout for establishing a connection with the Response Cache.
     * 
     */
    private @Nullable Integer connectTimeoutInMs;
    /**
     * @return (Updatable) Defines if the connection should be over SSL.
     * 
     */
    private @Nullable Boolean isSslEnabled;
    /**
     * @return (Updatable) Defines whether or not to uphold SSL verification.
     * 
     */
    private @Nullable Boolean isSslVerifyDisabled;
    /**
     * @return (Updatable) Defines the timeout for reading data from the Response Cache.
     * 
     */
    private @Nullable Integer readTimeoutInMs;
    /**
     * @return (Updatable) Defines the timeout for transmitting data to the Response Cache.
     * 
     */
    private @Nullable Integer sendTimeoutInMs;
    /**
     * @return (Updatable) The set of cache store members to connect to. At present only a single server is supported.
     * 
     */
    private @Nullable List<GatewayResponseCacheDetailsServer> servers;
    /**
     * @return (Updatable) Type of the Response Cache.
     * 
     */
    private String type;

    private GatewayResponseCacheDetails() {}
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
     * 
     */
    public Optional<String> authenticationSecretId() {
        return Optional.ofNullable(this.authenticationSecretId);
    }
    /**
     * @return (Updatable) The version number of the authentication secret to use.
     * 
     */
    public Optional<String> authenticationSecretVersionNumber() {
        return Optional.ofNullable(this.authenticationSecretVersionNumber);
    }
    /**
     * @return (Updatable) Defines the timeout for establishing a connection with the Response Cache.
     * 
     */
    public Optional<Integer> connectTimeoutInMs() {
        return Optional.ofNullable(this.connectTimeoutInMs);
    }
    /**
     * @return (Updatable) Defines if the connection should be over SSL.
     * 
     */
    public Optional<Boolean> isSslEnabled() {
        return Optional.ofNullable(this.isSslEnabled);
    }
    /**
     * @return (Updatable) Defines whether or not to uphold SSL verification.
     * 
     */
    public Optional<Boolean> isSslVerifyDisabled() {
        return Optional.ofNullable(this.isSslVerifyDisabled);
    }
    /**
     * @return (Updatable) Defines the timeout for reading data from the Response Cache.
     * 
     */
    public Optional<Integer> readTimeoutInMs() {
        return Optional.ofNullable(this.readTimeoutInMs);
    }
    /**
     * @return (Updatable) Defines the timeout for transmitting data to the Response Cache.
     * 
     */
    public Optional<Integer> sendTimeoutInMs() {
        return Optional.ofNullable(this.sendTimeoutInMs);
    }
    /**
     * @return (Updatable) The set of cache store members to connect to. At present only a single server is supported.
     * 
     */
    public List<GatewayResponseCacheDetailsServer> servers() {
        return this.servers == null ? List.of() : this.servers;
    }
    /**
     * @return (Updatable) Type of the Response Cache.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayResponseCacheDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authenticationSecretId;
        private @Nullable String authenticationSecretVersionNumber;
        private @Nullable Integer connectTimeoutInMs;
        private @Nullable Boolean isSslEnabled;
        private @Nullable Boolean isSslVerifyDisabled;
        private @Nullable Integer readTimeoutInMs;
        private @Nullable Integer sendTimeoutInMs;
        private @Nullable List<GatewayResponseCacheDetailsServer> servers;
        private String type;
        public Builder() {}
        public Builder(GatewayResponseCacheDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationSecretId = defaults.authenticationSecretId;
    	      this.authenticationSecretVersionNumber = defaults.authenticationSecretVersionNumber;
    	      this.connectTimeoutInMs = defaults.connectTimeoutInMs;
    	      this.isSslEnabled = defaults.isSslEnabled;
    	      this.isSslVerifyDisabled = defaults.isSslVerifyDisabled;
    	      this.readTimeoutInMs = defaults.readTimeoutInMs;
    	      this.sendTimeoutInMs = defaults.sendTimeoutInMs;
    	      this.servers = defaults.servers;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder authenticationSecretId(@Nullable String authenticationSecretId) {

            this.authenticationSecretId = authenticationSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationSecretVersionNumber(@Nullable String authenticationSecretVersionNumber) {

            this.authenticationSecretVersionNumber = authenticationSecretVersionNumber;
            return this;
        }
        @CustomType.Setter
        public Builder connectTimeoutInMs(@Nullable Integer connectTimeoutInMs) {

            this.connectTimeoutInMs = connectTimeoutInMs;
            return this;
        }
        @CustomType.Setter
        public Builder isSslEnabled(@Nullable Boolean isSslEnabled) {

            this.isSslEnabled = isSslEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSslVerifyDisabled(@Nullable Boolean isSslVerifyDisabled) {

            this.isSslVerifyDisabled = isSslVerifyDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder readTimeoutInMs(@Nullable Integer readTimeoutInMs) {

            this.readTimeoutInMs = readTimeoutInMs;
            return this;
        }
        @CustomType.Setter
        public Builder sendTimeoutInMs(@Nullable Integer sendTimeoutInMs) {

            this.sendTimeoutInMs = sendTimeoutInMs;
            return this;
        }
        @CustomType.Setter
        public Builder servers(@Nullable List<GatewayResponseCacheDetailsServer> servers) {

            this.servers = servers;
            return this;
        }
        public Builder servers(GatewayResponseCacheDetailsServer... servers) {
            return servers(List.of(servers));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GatewayResponseCacheDetails", "type");
            }
            this.type = type;
            return this;
        }
        public GatewayResponseCacheDetails build() {
            final var _resultValue = new GatewayResponseCacheDetails();
            _resultValue.authenticationSecretId = authenticationSecretId;
            _resultValue.authenticationSecretVersionNumber = authenticationSecretVersionNumber;
            _resultValue.connectTimeoutInMs = connectTimeoutInMs;
            _resultValue.isSslEnabled = isSslEnabled;
            _resultValue.isSslVerifyDisabled = isSslVerifyDisabled;
            _resultValue.readTimeoutInMs = readTimeoutInMs;
            _resultValue.sendTimeoutInMs = sendTimeoutInMs;
            _resultValue.servers = servers;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
