// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey {
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    private Boolean isSslVerifyDisabled;
    /**
     * @return The set of static public keys.
     * 
     */
    private List<GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys;
    /**
     * @return The duration for which the introspect URL response should be cached before it is fetched again.
     * 
     */
    private Integer maxCacheDurationInHours;
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    private String type;
    /**
     * @return The uri from which to retrieve the key. It must be accessible without authentication.
     * 
     */
    private String uri;

    private GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey() {}
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    public Boolean isSslVerifyDisabled() {
        return this.isSslVerifyDisabled;
    }
    /**
     * @return The set of static public keys.
     * 
     */
    public List<GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys() {
        return this.keys;
    }
    /**
     * @return The duration for which the introspect URL response should be cached before it is fetched again.
     * 
     */
    public Integer maxCacheDurationInHours() {
        return this.maxCacheDurationInHours;
    }
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The uri from which to retrieve the key. It must be accessible without authentication.
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isSslVerifyDisabled;
        private List<GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys;
        private Integer maxCacheDurationInHours;
        private String type;
        private String uri;
        public Builder() {}
        public Builder(GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isSslVerifyDisabled = defaults.isSslVerifyDisabled;
    	      this.keys = defaults.keys;
    	      this.maxCacheDurationInHours = defaults.maxCacheDurationInHours;
    	      this.type = defaults.type;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder isSslVerifyDisabled(Boolean isSslVerifyDisabled) {
            if (isSslVerifyDisabled == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey", "isSslVerifyDisabled");
            }
            this.isSslVerifyDisabled = isSslVerifyDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder keys(List<GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys) {
            if (keys == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey", "keys");
            }
            this.keys = keys;
            return this;
        }
        public Builder keys(GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey... keys) {
            return keys(List.of(keys));
        }
        @CustomType.Setter
        public Builder maxCacheDurationInHours(Integer maxCacheDurationInHours) {
            if (maxCacheDurationInHours == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey", "maxCacheDurationInHours");
            }
            this.maxCacheDurationInHours = maxCacheDurationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uri(String uri) {
            if (uri == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey", "uri");
            }
            this.uri = uri;
            return this;
        }
        public GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey build() {
            final var _resultValue = new GetApiDeploymentSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey();
            _resultValue.isSslVerifyDisabled = isSslVerifyDisabled;
            _resultValue.keys = keys;
            _resultValue.maxCacheDurationInHours = maxCacheDurationInHours;
            _resultValue.type = type;
            _resultValue.uri = uri;
            return _resultValue;
        }
    }
}
