// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend {
    /**
     * @return The body of the stock response from the mock backend.
     * 
     */
    private @Nullable String body;
    /**
     * @return Defines a timeout for establishing a connection with a proxied server.
     * 
     */
    private @Nullable Double connectTimeoutInSeconds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     * 
     */
    private @Nullable String functionId;
    private @Nullable List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers;
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    private @Nullable Boolean isSslVerifyDisabled;
    /**
     * @return Defines a timeout for reading a response from the proxied server.
     * 
     */
    private @Nullable Double readTimeoutInSeconds;
    /**
     * @return Defines a timeout for transmitting a request to the proxied server.
     * 
     */
    private @Nullable Double sendTimeoutInSeconds;
    /**
     * @return The status code of the stock response from the mock backend.
     * 
     */
    private @Nullable Integer status;
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    private @Nullable String type;
    private @Nullable String url;

    private GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend() {}
    /**
     * @return The body of the stock response from the mock backend.
     * 
     */
    public Optional<String> body() {
        return Optional.ofNullable(this.body);
    }
    /**
     * @return Defines a timeout for establishing a connection with a proxied server.
     * 
     */
    public Optional<Double> connectTimeoutInSeconds() {
        return Optional.ofNullable(this.connectTimeoutInSeconds);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     * 
     */
    public Optional<String> functionId() {
        return Optional.ofNullable(this.functionId);
    }
    public List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers() {
        return this.headers == null ? List.of() : this.headers;
    }
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    public Optional<Boolean> isSslVerifyDisabled() {
        return Optional.ofNullable(this.isSslVerifyDisabled);
    }
    /**
     * @return Defines a timeout for reading a response from the proxied server.
     * 
     */
    public Optional<Double> readTimeoutInSeconds() {
        return Optional.ofNullable(this.readTimeoutInSeconds);
    }
    /**
     * @return Defines a timeout for transmitting a request to the proxied server.
     * 
     */
    public Optional<Double> sendTimeoutInSeconds() {
        return Optional.ofNullable(this.sendTimeoutInSeconds);
    }
    /**
     * @return The status code of the stock response from the mock backend.
     * 
     */
    public Optional<Integer> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String body;
        private @Nullable Double connectTimeoutInSeconds;
        private @Nullable String functionId;
        private @Nullable List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers;
        private @Nullable Boolean isSslVerifyDisabled;
        private @Nullable Double readTimeoutInSeconds;
        private @Nullable Double sendTimeoutInSeconds;
        private @Nullable Integer status;
        private @Nullable String type;
        private @Nullable String url;
        public Builder() {}
        public Builder(GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.connectTimeoutInSeconds = defaults.connectTimeoutInSeconds;
    	      this.functionId = defaults.functionId;
    	      this.headers = defaults.headers;
    	      this.isSslVerifyDisabled = defaults.isSslVerifyDisabled;
    	      this.readTimeoutInSeconds = defaults.readTimeoutInSeconds;
    	      this.sendTimeoutInSeconds = defaults.sendTimeoutInSeconds;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder body(@Nullable String body) {
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder connectTimeoutInSeconds(@Nullable Double connectTimeoutInSeconds) {
            this.connectTimeoutInSeconds = connectTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder functionId(@Nullable String functionId) {
            this.functionId = functionId;
            return this;
        }
        @CustomType.Setter
        public Builder headers(@Nullable List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers) {
            this.headers = headers;
            return this;
        }
        public Builder headers(GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder isSslVerifyDisabled(@Nullable Boolean isSslVerifyDisabled) {
            this.isSslVerifyDisabled = isSslVerifyDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder readTimeoutInSeconds(@Nullable Double readTimeoutInSeconds) {
            this.readTimeoutInSeconds = readTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder sendTimeoutInSeconds(@Nullable Double sendTimeoutInSeconds) {
            this.sendTimeoutInSeconds = sendTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable Integer status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend build() {
            final var o = new GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend();
            o.body = body;
            o.connectTimeoutInSeconds = connectTimeoutInSeconds;
            o.functionId = functionId;
            o.headers = headers;
            o.isSslVerifyDisabled = isSslVerifyDisabled;
            o.readTimeoutInSeconds = readTimeoutInSeconds;
            o.sendTimeoutInSeconds = sendTimeoutInSeconds;
            o.status = status;
            o.type = type;
            o.url = url;
            return o;
        }
    }
}
