// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend {
    /**
     * @return The body of the stock response from the mock backend.
     * 
     */
    private String body;
    /**
     * @return Defines a timeout for establishing a connection with a proxied server.
     * 
     */
    private Double connectTimeoutInSeconds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     * 
     */
    private String functionId;
    /**
     * @return The List of Headers
     * 
     */
    private List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers;
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    private Boolean isSslVerifyDisabled;
    /**
     * @return Defines a timeout for reading a response from the proxied server.
     * 
     */
    private Double readTimeoutInSeconds;
    /**
     * @return Defines a timeout for transmitting a request to the proxied server.
     * 
     */
    private Double sendTimeoutInSeconds;
    /**
     * @return The status code of the stock response from the mock backend.
     * 
     */
    private Integer status;
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    private String type;
    /**
     * @return The url of the HTTP Backend
     * 
     */
    private String url;

    private GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend() {}
    /**
     * @return The body of the stock response from the mock backend.
     * 
     */
    public String body() {
        return this.body;
    }
    /**
     * @return Defines a timeout for establishing a connection with a proxied server.
     * 
     */
    public Double connectTimeoutInSeconds() {
        return this.connectTimeoutInSeconds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
     * 
     */
    public String functionId() {
        return this.functionId;
    }
    /**
     * @return The List of Headers
     * 
     */
    public List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers() {
        return this.headers;
    }
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    public Boolean isSslVerifyDisabled() {
        return this.isSslVerifyDisabled;
    }
    /**
     * @return Defines a timeout for reading a response from the proxied server.
     * 
     */
    public Double readTimeoutInSeconds() {
        return this.readTimeoutInSeconds;
    }
    /**
     * @return Defines a timeout for transmitting a request to the proxied server.
     * 
     */
    public Double sendTimeoutInSeconds() {
        return this.sendTimeoutInSeconds;
    }
    /**
     * @return The status code of the stock response from the mock backend.
     * 
     */
    public Integer status() {
        return this.status;
    }
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The url of the HTTP Backend
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String body;
        private Double connectTimeoutInSeconds;
        private String functionId;
        private List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers;
        private Boolean isSslVerifyDisabled;
        private Double readTimeoutInSeconds;
        private Double sendTimeoutInSeconds;
        private Integer status;
        private String type;
        private String url;
        public Builder() {}
        public Builder(GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.connectTimeoutInSeconds = defaults.connectTimeoutInSeconds;
    	      this.functionId = defaults.functionId;
    	      this.headers = defaults.headers;
    	      this.isSslVerifyDisabled = defaults.isSslVerifyDisabled;
    	      this.readTimeoutInSeconds = defaults.readTimeoutInSeconds;
    	      this.sendTimeoutInSeconds = defaults.sendTimeoutInSeconds;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder body(String body) {
            if (body == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "body");
            }
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder connectTimeoutInSeconds(Double connectTimeoutInSeconds) {
            if (connectTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "connectTimeoutInSeconds");
            }
            this.connectTimeoutInSeconds = connectTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder functionId(String functionId) {
            if (functionId == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "functionId");
            }
            this.functionId = functionId;
            return this;
        }
        @CustomType.Setter
        public Builder headers(List<GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader> headers) {
            if (headers == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "headers");
            }
            this.headers = headers;
            return this;
        }
        public Builder headers(GetApiDeploymentSpecificationRouteBackendRoutingBackendBackendHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder isSslVerifyDisabled(Boolean isSslVerifyDisabled) {
            if (isSslVerifyDisabled == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "isSslVerifyDisabled");
            }
            this.isSslVerifyDisabled = isSslVerifyDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder readTimeoutInSeconds(Double readTimeoutInSeconds) {
            if (readTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "readTimeoutInSeconds");
            }
            this.readTimeoutInSeconds = readTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder sendTimeoutInSeconds(Double sendTimeoutInSeconds) {
            if (sendTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "sendTimeoutInSeconds");
            }
            this.sendTimeoutInSeconds = sendTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder status(Integer status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend", "url");
            }
            this.url = url;
            return this;
        }
        public GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend build() {
            final var _resultValue = new GetApiDeploymentSpecificationRouteBackendRoutingBackendBackend();
            _resultValue.body = body;
            _resultValue.connectTimeoutInSeconds = connectTimeoutInSeconds;
            _resultValue.functionId = functionId;
            _resultValue.headers = headers;
            _resultValue.isSslVerifyDisabled = isSslVerifyDisabled;
            _resultValue.readTimeoutInSeconds = readTimeoutInSeconds;
            _resultValue.sendTimeoutInSeconds = sendTimeoutInSeconds;
            _resultValue.status = status;
            _resultValue.type = type;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
