// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApiDeploymentSpecificationRouteRequestPolicyAuthorization {
    /**
     * @return A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
     * 
     */
    private List<String> allowedScopes;
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    private String type;

    private GetApiDeploymentSpecificationRouteRequestPolicyAuthorization() {}
    /**
     * @return A user whose scope includes any of these access ranges is allowed on this route. Access ranges are case-sensitive.
     * 
     */
    public List<String> allowedScopes() {
        return this.allowedScopes;
    }
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiDeploymentSpecificationRouteRequestPolicyAuthorization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedScopes;
        private String type;
        public Builder() {}
        public Builder(GetApiDeploymentSpecificationRouteRequestPolicyAuthorization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedScopes = defaults.allowedScopes;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder allowedScopes(List<String> allowedScopes) {
            if (allowedScopes == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteRequestPolicyAuthorization", "allowedScopes");
            }
            this.allowedScopes = allowedScopes;
            return this;
        }
        public Builder allowedScopes(String... allowedScopes) {
            return allowedScopes(List.of(allowedScopes));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetApiDeploymentSpecificationRouteRequestPolicyAuthorization", "type");
            }
            this.type = type;
            return this;
        }
        public GetApiDeploymentSpecificationRouteRequestPolicyAuthorization build() {
            final var _resultValue = new GetApiDeploymentSpecificationRouteRequestPolicyAuthorization();
            _resultValue.allowedScopes = allowedScopes;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
