// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.GetApisApiCollectionItemValidationResult;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApisApiCollectionItem {
    /**
     * @return The ocid of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    private String content;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    private String id;
    /**
     * @return A message describing the current lifecycleState in more detail. For ACTIVE state it describes if the document has been validated and the possible values are:
     * * &#39;New&#39; for just updated API Specifications
     * * &#39;Validating&#39; for a document which is being validated.
     * * &#39;Valid&#39; the document has been validated without any errors or warnings
     * * &#39;Warning&#39; the document has been validated and contains warnings
     * * &#39;Error&#39; the document has been validated and contains errors
     * * &#39;Failed&#39; the document validation failed
     * * &#39;Canceled&#39; the document validation was canceled
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Type of API Specification file.
     * 
     */
    private String specificationType;
    /**
     * @return A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     * 
     */
    private String state;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    /**
     * @return Status of each feature available from the API.
     * 
     */
    private List<GetApisApiCollectionItemValidationResult> validationResults;

    private GetApisApiCollectionItem() {}
    /**
     * @return The ocid of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String content() {
        return this.content;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current lifecycleState in more detail. For ACTIVE state it describes if the document has been validated and the possible values are:
     * * &#39;New&#39; for just updated API Specifications
     * * &#39;Validating&#39; for a document which is being validated.
     * * &#39;Valid&#39; the document has been validated without any errors or warnings
     * * &#39;Warning&#39; the document has been validated and contains warnings
     * * &#39;Error&#39; the document has been validated and contains errors
     * * &#39;Failed&#39; the document validation failed
     * * &#39;Canceled&#39; the document validation was canceled
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Type of API Specification file.
     * 
     */
    public String specificationType() {
        return this.specificationType;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Status of each feature available from the API.
     * 
     */
    public List<GetApisApiCollectionItemValidationResult> validationResults() {
        return this.validationResults;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApisApiCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String content;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String specificationType;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        private List<GetApisApiCollectionItemValidationResult> validationResults;
        public Builder() {}
        public Builder(GetApisApiCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.content = defaults.content;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.specificationType = defaults.specificationType;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.validationResults = defaults.validationResults;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder specificationType(String specificationType) {
            if (specificationType == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "specificationType");
            }
            this.specificationType = specificationType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder validationResults(List<GetApisApiCollectionItemValidationResult> validationResults) {
            if (validationResults == null) {
              throw new MissingRequiredPropertyException("GetApisApiCollectionItem", "validationResults");
            }
            this.validationResults = validationResults;
            return this;
        }
        public Builder validationResults(GetApisApiCollectionItemValidationResult... validationResults) {
            return validationResults(List.of(validationResults));
        }
        public GetApisApiCollectionItem build() {
            final var _resultValue = new GetApisApiCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.content = content;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.specificationType = specificationType;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.validationResults = validationResults;
            return _resultValue;
        }
    }
}
