// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.GetCertificatesCertificateCollectionItemLock;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCertificatesCertificateCollectionItem {
    /**
     * @return The data of the leaf certificate in pem format.
     * 
     */
    private String certificate;
    /**
     * @return The ocid of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    private String id;
    /**
     * @return The intermediate certificate data associated with the certificate in pem format.
     * 
     */
    private String intermediateCertificates;
    private Boolean isLockOverride;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetCertificatesCertificateCollectionItemLock> locks;
    private String privateKey;
    /**
     * @return A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE` or `DELETED`
     * 
     */
    private String state;
    /**
     * @return The entity to be secured by the certificate and additional host names.
     * 
     */
    private List<String> subjectNames;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the certificate will expire.
     * 
     */
    private String timeNotValidAfter;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetCertificatesCertificateCollectionItem() {}
    /**
     * @return The data of the leaf certificate in pem format.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    /**
     * @return The ocid of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The intermediate certificate data associated with the certificate in pem format.
     * 
     */
    public String intermediateCertificates() {
        return this.intermediateCertificates;
    }
    public Boolean isLockOverride() {
        return this.isLockOverride;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetCertificatesCertificateCollectionItemLock> locks() {
        return this.locks;
    }
    public String privateKey() {
        return this.privateKey;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE` or `DELETED`
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The entity to be secured by the certificate and additional host names.
     * 
     */
    public List<String> subjectNames() {
        return this.subjectNames;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the certificate will expire.
     * 
     */
    public String timeNotValidAfter() {
        return this.timeNotValidAfter;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificatesCertificateCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificate;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String intermediateCertificates;
        private Boolean isLockOverride;
        private String lifecycleDetails;
        private List<GetCertificatesCertificateCollectionItemLock> locks;
        private String privateKey;
        private String state;
        private List<String> subjectNames;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeNotValidAfter;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetCertificatesCertificateCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.intermediateCertificates = defaults.intermediateCertificates;
    	      this.isLockOverride = defaults.isLockOverride;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.locks = defaults.locks;
    	      this.privateKey = defaults.privateKey;
    	      this.state = defaults.state;
    	      this.subjectNames = defaults.subjectNames;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeNotValidAfter = defaults.timeNotValidAfter;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder certificate(String certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder intermediateCertificates(String intermediateCertificates) {
            if (intermediateCertificates == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "intermediateCertificates");
            }
            this.intermediateCertificates = intermediateCertificates;
            return this;
        }
        @CustomType.Setter
        public Builder isLockOverride(Boolean isLockOverride) {
            if (isLockOverride == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "isLockOverride");
            }
            this.isLockOverride = isLockOverride;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetCertificatesCertificateCollectionItemLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetCertificatesCertificateCollectionItemLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder privateKey(String privateKey) {
            if (privateKey == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "privateKey");
            }
            this.privateKey = privateKey;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subjectNames(List<String> subjectNames) {
            if (subjectNames == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "subjectNames");
            }
            this.subjectNames = subjectNames;
            return this;
        }
        public Builder subjectNames(String... subjectNames) {
            return subjectNames(List.of(subjectNames));
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeNotValidAfter(String timeNotValidAfter) {
            if (timeNotValidAfter == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "timeNotValidAfter");
            }
            this.timeNotValidAfter = timeNotValidAfter;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificateCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetCertificatesCertificateCollectionItem build() {
            final var _resultValue = new GetCertificatesCertificateCollectionItem();
            _resultValue.certificate = certificate;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.intermediateCertificates = intermediateCertificates;
            _resultValue.isLockOverride = isLockOverride;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.locks = locks;
            _resultValue.privateKey = privateKey;
            _resultValue.state = state;
            _resultValue.subjectNames = subjectNames;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeNotValidAfter = timeNotValidAfter;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
