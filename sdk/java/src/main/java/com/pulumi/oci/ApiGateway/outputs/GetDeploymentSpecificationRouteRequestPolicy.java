// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyAuthorization;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyBodyValidation;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyCor;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyHeaderValidation;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeploymentSpecificationRouteRequestPolicy {
    /**
     * @return If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations;
    /**
     * @return Validate the payload body of the incoming API requests on a specific route.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations;
    /**
     * @return Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyCor> cors;
    /**
     * @return A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations;
    /**
     * @return Validate the HTTP headers on the incoming API requests on a specific route.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations;
    /**
     * @return A set of transformations to apply to query parameters that pass through the gateway.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations;
    /**
     * @return Validate the URL query parameters on the incoming API requests on a specific route.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations;
    /**
     * @return Base policy for Response Cache lookup.
     * 
     */
    private List<GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups;

    private GetDeploymentSpecificationRouteRequestPolicy() {}
    /**
     * @return If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations() {
        return this.authorizations;
    }
    /**
     * @return Validate the payload body of the incoming API requests on a specific route.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations() {
        return this.bodyValidations;
    }
    /**
     * @return Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyCor> cors() {
        return this.cors;
    }
    /**
     * @return A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations() {
        return this.headerTransformations;
    }
    /**
     * @return Validate the HTTP headers on the incoming API requests on a specific route.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations() {
        return this.headerValidations;
    }
    /**
     * @return A set of transformations to apply to query parameters that pass through the gateway.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations() {
        return this.queryParameterTransformations;
    }
    /**
     * @return Validate the URL query parameters on the incoming API requests on a specific route.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations() {
        return this.queryParameterValidations;
    }
    /**
     * @return Base policy for Response Cache lookup.
     * 
     */
    public List<GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups() {
        return this.responseCacheLookups;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentSpecificationRouteRequestPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations;
        private List<GetDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations;
        private List<GetDeploymentSpecificationRouteRequestPolicyCor> cors;
        private List<GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations;
        private List<GetDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations;
        private List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations;
        private List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations;
        private List<GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups;
        public Builder() {}
        public Builder(GetDeploymentSpecificationRouteRequestPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizations = defaults.authorizations;
    	      this.bodyValidations = defaults.bodyValidations;
    	      this.cors = defaults.cors;
    	      this.headerTransformations = defaults.headerTransformations;
    	      this.headerValidations = defaults.headerValidations;
    	      this.queryParameterTransformations = defaults.queryParameterTransformations;
    	      this.queryParameterValidations = defaults.queryParameterValidations;
    	      this.responseCacheLookups = defaults.responseCacheLookups;
        }

        @CustomType.Setter
        public Builder authorizations(List<GetDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations) {
            this.authorizations = Objects.requireNonNull(authorizations);
            return this;
        }
        public Builder authorizations(GetDeploymentSpecificationRouteRequestPolicyAuthorization... authorizations) {
            return authorizations(List.of(authorizations));
        }
        @CustomType.Setter
        public Builder bodyValidations(List<GetDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations) {
            this.bodyValidations = Objects.requireNonNull(bodyValidations);
            return this;
        }
        public Builder bodyValidations(GetDeploymentSpecificationRouteRequestPolicyBodyValidation... bodyValidations) {
            return bodyValidations(List.of(bodyValidations));
        }
        @CustomType.Setter
        public Builder cors(List<GetDeploymentSpecificationRouteRequestPolicyCor> cors) {
            this.cors = Objects.requireNonNull(cors);
            return this;
        }
        public Builder cors(GetDeploymentSpecificationRouteRequestPolicyCor... cors) {
            return cors(List.of(cors));
        }
        @CustomType.Setter
        public Builder headerTransformations(List<GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations) {
            this.headerTransformations = Objects.requireNonNull(headerTransformations);
            return this;
        }
        public Builder headerTransformations(GetDeploymentSpecificationRouteRequestPolicyHeaderTransformation... headerTransformations) {
            return headerTransformations(List.of(headerTransformations));
        }
        @CustomType.Setter
        public Builder headerValidations(List<GetDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations) {
            this.headerValidations = Objects.requireNonNull(headerValidations);
            return this;
        }
        public Builder headerValidations(GetDeploymentSpecificationRouteRequestPolicyHeaderValidation... headerValidations) {
            return headerValidations(List.of(headerValidations));
        }
        @CustomType.Setter
        public Builder queryParameterTransformations(List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations) {
            this.queryParameterTransformations = Objects.requireNonNull(queryParameterTransformations);
            return this;
        }
        public Builder queryParameterTransformations(GetDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation... queryParameterTransformations) {
            return queryParameterTransformations(List.of(queryParameterTransformations));
        }
        @CustomType.Setter
        public Builder queryParameterValidations(List<GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations) {
            this.queryParameterValidations = Objects.requireNonNull(queryParameterValidations);
            return this;
        }
        public Builder queryParameterValidations(GetDeploymentSpecificationRouteRequestPolicyQueryParameterValidation... queryParameterValidations) {
            return queryParameterValidations(List.of(queryParameterValidations));
        }
        @CustomType.Setter
        public Builder responseCacheLookups(List<GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups) {
            this.responseCacheLookups = Objects.requireNonNull(responseCacheLookups);
            return this;
        }
        public Builder responseCacheLookups(GetDeploymentSpecificationRouteRequestPolicyResponseCacheLookup... responseCacheLookups) {
            return responseCacheLookups(List.of(responseCacheLookups));
        }
        public GetDeploymentSpecificationRouteRequestPolicy build() {
            final var o = new GetDeploymentSpecificationRouteRequestPolicy();
            o.authorizations = authorizations;
            o.bodyValidations = bodyValidations;
            o.cors = cors;
            o.headerTransformations = headerTransformations;
            o.headerValidations = headerValidations;
            o.queryParameterTransformations = queryParameterTransformations;
            o.queryParameterValidations = queryParameterValidations;
            o.responseCacheLookups = responseCacheLookups;
            return o;
        }
    }
}
