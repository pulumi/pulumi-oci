// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey {
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    private @Nullable Boolean isSslVerifyDisabled;
    /**
     * @return The set of static public keys.
     * 
     */
    private @Nullable List<GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys;
    /**
     * @return The duration for which the introspect URL response should be cached before it is fetched again.
     * 
     */
    private @Nullable Integer maxCacheDurationInHours;
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    private @Nullable String type;
    /**
     * @return The uri from which to retrieve the key. It must be accessible without authentication.
     * 
     */
    private @Nullable String uri;

    private GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey() {}
    /**
     * @return Defines whether or not to uphold SSL verification.
     * 
     */
    public Optional<Boolean> isSslVerifyDisabled() {
        return Optional.ofNullable(this.isSslVerifyDisabled);
    }
    /**
     * @return The set of static public keys.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys() {
        return this.keys == null ? List.of() : this.keys;
    }
    /**
     * @return The duration for which the introspect URL response should be cached before it is fetched again.
     * 
     */
    public Optional<Integer> maxCacheDurationInHours() {
        return Optional.ofNullable(this.maxCacheDurationInHours);
    }
    /**
     * @return Type of the Response Cache Store Policy.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The uri from which to retrieve the key. It must be accessible without authentication.
     * 
     */
    public Optional<String> uri() {
        return Optional.ofNullable(this.uri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isSslVerifyDisabled;
        private @Nullable List<GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys;
        private @Nullable Integer maxCacheDurationInHours;
        private @Nullable String type;
        private @Nullable String uri;
        public Builder() {}
        public Builder(GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isSslVerifyDisabled = defaults.isSslVerifyDisabled;
    	      this.keys = defaults.keys;
    	      this.maxCacheDurationInHours = defaults.maxCacheDurationInHours;
    	      this.type = defaults.type;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder isSslVerifyDisabled(@Nullable Boolean isSslVerifyDisabled) {
            this.isSslVerifyDisabled = isSslVerifyDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder keys(@Nullable List<GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey> keys) {
            this.keys = keys;
            return this;
        }
        public Builder keys(GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeyKey... keys) {
            return keys(List.of(keys));
        }
        @CustomType.Setter
        public Builder maxCacheDurationInHours(@Nullable Integer maxCacheDurationInHours) {
            this.maxCacheDurationInHours = maxCacheDurationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }
        public GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey build() {
            final var o = new GetDeploymentsDeploymentCollectionSpecificationRequestPolicyDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKey();
            o.isSslVerifyDisabled = isSslVerifyDisabled;
            o.keys = keys;
            o.maxCacheDurationInHours = maxCacheDurationInHours;
            o.type = type;
            o.uri = uri;
            return o;
        }
    }
}
