// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentsDeploymentCollectionSpecificationRouteBackend;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeploymentCollectionSpecificationRoute {
    /**
     * @return The backend to forward requests to.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionSpecificationRouteBackend> backends;
    /**
     * @return Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy> loggingPolicies;
    /**
     * @return A list of allowed methods on this route.
     * 
     */
    private List<String> methods;
    /**
     * @return A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     * 
     */
    private String path;
    /**
     * @return Behavior applied to any requests received by the API on this route.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy> requestPolicies;
    /**
     * @return Behavior applied to any responses sent by the API for requests on this route.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy> responsePolicies;

    private GetDeploymentsDeploymentCollectionSpecificationRoute() {}
    /**
     * @return The backend to forward requests to.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionSpecificationRouteBackend> backends() {
        return this.backends;
    }
    /**
     * @return Policies controlling the pushing of logs to Oracle Cloud Infrastructure Public Logging.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy> loggingPolicies() {
        return this.loggingPolicies;
    }
    /**
     * @return A list of allowed methods on this route.
     * 
     */
    public List<String> methods() {
        return this.methods;
    }
    /**
     * @return A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers to allow wildcard and parameterized matching.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return Behavior applied to any requests received by the API on this route.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy> requestPolicies() {
        return this.requestPolicies;
    }
    /**
     * @return Behavior applied to any responses sent by the API for requests on this route.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy> responsePolicies() {
        return this.responsePolicies;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionSpecificationRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDeploymentsDeploymentCollectionSpecificationRouteBackend> backends;
        private List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy> loggingPolicies;
        private List<String> methods;
        private String path;
        private List<GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy> requestPolicies;
        private List<GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy> responsePolicies;
        public Builder() {}
        public Builder(GetDeploymentsDeploymentCollectionSpecificationRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backends = defaults.backends;
    	      this.loggingPolicies = defaults.loggingPolicies;
    	      this.methods = defaults.methods;
    	      this.path = defaults.path;
    	      this.requestPolicies = defaults.requestPolicies;
    	      this.responsePolicies = defaults.responsePolicies;
        }

        @CustomType.Setter
        public Builder backends(List<GetDeploymentsDeploymentCollectionSpecificationRouteBackend> backends) {
            this.backends = Objects.requireNonNull(backends);
            return this;
        }
        public Builder backends(GetDeploymentsDeploymentCollectionSpecificationRouteBackend... backends) {
            return backends(List.of(backends));
        }
        @CustomType.Setter
        public Builder loggingPolicies(List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy> loggingPolicies) {
            this.loggingPolicies = Objects.requireNonNull(loggingPolicies);
            return this;
        }
        public Builder loggingPolicies(GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy... loggingPolicies) {
            return loggingPolicies(List.of(loggingPolicies));
        }
        @CustomType.Setter
        public Builder methods(List<String> methods) {
            this.methods = Objects.requireNonNull(methods);
            return this;
        }
        public Builder methods(String... methods) {
            return methods(List.of(methods));
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        @CustomType.Setter
        public Builder requestPolicies(List<GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy> requestPolicies) {
            this.requestPolicies = Objects.requireNonNull(requestPolicies);
            return this;
        }
        public Builder requestPolicies(GetDeploymentsDeploymentCollectionSpecificationRouteRequestPolicy... requestPolicies) {
            return requestPolicies(List.of(requestPolicies));
        }
        @CustomType.Setter
        public Builder responsePolicies(List<GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy> responsePolicies) {
            this.responsePolicies = Objects.requireNonNull(responsePolicies);
            return this;
        }
        public Builder responsePolicies(GetDeploymentsDeploymentCollectionSpecificationRouteResponsePolicy... responsePolicies) {
            return responsePolicies(List.of(responsePolicies));
        }
        public GetDeploymentsDeploymentCollectionSpecificationRoute build() {
            final var o = new GetDeploymentsDeploymentCollectionSpecificationRoute();
            o.backends = backends;
            o.loggingPolicies = loggingPolicies;
            o.methods = methods;
            o.path = path;
            o.requestPolicies = requestPolicies;
            o.responsePolicies = responsePolicies;
            return o;
        }
    }
}
