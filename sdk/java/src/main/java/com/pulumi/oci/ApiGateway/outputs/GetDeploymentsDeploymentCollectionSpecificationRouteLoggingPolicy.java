// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy {
    /**
     * @return Configures the logging policies for the access logs of an API Deployment.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog> accessLogs;
    /**
     * @return Configures the logging policies for the execution logs of an API Deployment.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog> executionLogs;

    private GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy() {}
    /**
     * @return Configures the logging policies for the access logs of an API Deployment.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog> accessLogs() {
        return this.accessLogs;
    }
    /**
     * @return Configures the logging policies for the execution logs of an API Deployment.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog> executionLogs() {
        return this.executionLogs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog> accessLogs;
        private List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog> executionLogs;
        public Builder() {}
        public Builder(GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLogs = defaults.accessLogs;
    	      this.executionLogs = defaults.executionLogs;
        }

        @CustomType.Setter
        public Builder accessLogs(List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog> accessLogs) {
            if (accessLogs == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy", "accessLogs");
            }
            this.accessLogs = accessLogs;
            return this;
        }
        public Builder accessLogs(GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyAccessLog... accessLogs) {
            return accessLogs(List.of(accessLogs));
        }
        @CustomType.Setter
        public Builder executionLogs(List<GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog> executionLogs) {
            if (executionLogs == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy", "executionLogs");
            }
            this.executionLogs = executionLogs;
            return this;
        }
        public Builder executionLogs(GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicyExecutionLog... executionLogs) {
            return executionLogs(List.of(executionLogs));
        }
        public GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy build() {
            final var _resultValue = new GetDeploymentsDeploymentCollectionSpecificationRouteLoggingPolicy();
            _resultValue.accessLogs = accessLogs;
            _resultValue.executionLogs = executionLogs;
            return _resultValue;
        }
    }
}
