// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGatewayCaBundle {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    private String caBundleId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    private String certificateAuthorityId;
    /**
     * @return Type of the Response Cache.
     * 
     */
    private String type;

    private GetGatewayCaBundle() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    public String caBundleId() {
        return this.caBundleId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    public String certificateAuthorityId() {
        return this.certificateAuthorityId;
    }
    /**
     * @return Type of the Response Cache.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayCaBundle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String caBundleId;
        private String certificateAuthorityId;
        private String type;
        public Builder() {}
        public Builder(GetGatewayCaBundle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caBundleId = defaults.caBundleId;
    	      this.certificateAuthorityId = defaults.certificateAuthorityId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder caBundleId(String caBundleId) {
            if (caBundleId == null) {
              throw new MissingRequiredPropertyException("GetGatewayCaBundle", "caBundleId");
            }
            this.caBundleId = caBundleId;
            return this;
        }
        @CustomType.Setter
        public Builder certificateAuthorityId(String certificateAuthorityId) {
            if (certificateAuthorityId == null) {
              throw new MissingRequiredPropertyException("GetGatewayCaBundle", "certificateAuthorityId");
            }
            this.certificateAuthorityId = certificateAuthorityId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetGatewayCaBundle", "type");
            }
            this.type = type;
            return this;
        }
        public GetGatewayCaBundle build() {
            final var _resultValue = new GetGatewayCaBundle();
            _resultValue.caBundleId = caBundleId;
            _resultValue.certificateAuthorityId = certificateAuthorityId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
