// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApiGateway.outputs.GetUsagePlansUsagePlanCollectionItemEntitlementQuota;
import com.pulumi.oci.ApiGateway.outputs.GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit;
import com.pulumi.oci.ApiGateway.outputs.GetUsagePlansUsagePlanCollectionItemEntitlementTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUsagePlansUsagePlanCollectionItemEntitlement {
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return An entitlement name, unique within a usage plan.
     * 
     */
    private String name;
    /**
     * @return Quota policy for a usage plan.
     * 
     */
    private List<GetUsagePlansUsagePlanCollectionItemEntitlementQuota> quotas;
    /**
     * @return Rate-limiting policy for a usage plan.
     * 
     */
    private List<GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit> rateLimits;
    /**
     * @return A collection of targeted deployments that the entitlement will be applied to.
     * 
     */
    private List<GetUsagePlansUsagePlanCollectionItemEntitlementTarget> targets;

    private GetUsagePlansUsagePlanCollectionItemEntitlement() {}
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return An entitlement name, unique within a usage plan.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Quota policy for a usage plan.
     * 
     */
    public List<GetUsagePlansUsagePlanCollectionItemEntitlementQuota> quotas() {
        return this.quotas;
    }
    /**
     * @return Rate-limiting policy for a usage plan.
     * 
     */
    public List<GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit> rateLimits() {
        return this.rateLimits;
    }
    /**
     * @return A collection of targeted deployments that the entitlement will be applied to.
     * 
     */
    public List<GetUsagePlansUsagePlanCollectionItemEntitlementTarget> targets() {
        return this.targets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsagePlansUsagePlanCollectionItemEntitlement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String name;
        private List<GetUsagePlansUsagePlanCollectionItemEntitlementQuota> quotas;
        private List<GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit> rateLimits;
        private List<GetUsagePlansUsagePlanCollectionItemEntitlementTarget> targets;
        public Builder() {}
        public Builder(GetUsagePlansUsagePlanCollectionItemEntitlement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.quotas = defaults.quotas;
    	      this.rateLimits = defaults.rateLimits;
    	      this.targets = defaults.targets;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUsagePlansUsagePlanCollectionItemEntitlement", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUsagePlansUsagePlanCollectionItemEntitlement", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder quotas(List<GetUsagePlansUsagePlanCollectionItemEntitlementQuota> quotas) {
            if (quotas == null) {
              throw new MissingRequiredPropertyException("GetUsagePlansUsagePlanCollectionItemEntitlement", "quotas");
            }
            this.quotas = quotas;
            return this;
        }
        public Builder quotas(GetUsagePlansUsagePlanCollectionItemEntitlementQuota... quotas) {
            return quotas(List.of(quotas));
        }
        @CustomType.Setter
        public Builder rateLimits(List<GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit> rateLimits) {
            if (rateLimits == null) {
              throw new MissingRequiredPropertyException("GetUsagePlansUsagePlanCollectionItemEntitlement", "rateLimits");
            }
            this.rateLimits = rateLimits;
            return this;
        }
        public Builder rateLimits(GetUsagePlansUsagePlanCollectionItemEntitlementRateLimit... rateLimits) {
            return rateLimits(List.of(rateLimits));
        }
        @CustomType.Setter
        public Builder targets(List<GetUsagePlansUsagePlanCollectionItemEntitlementTarget> targets) {
            if (targets == null) {
              throw new MissingRequiredPropertyException("GetUsagePlansUsagePlanCollectionItemEntitlement", "targets");
            }
            this.targets = targets;
            return this;
        }
        public Builder targets(GetUsagePlansUsagePlanCollectionItemEntitlementTarget... targets) {
            return targets(List.of(targets));
        }
        public GetUsagePlansUsagePlanCollectionItemEntitlement build() {
            final var _resultValue = new GetUsagePlansUsagePlanCollectionItemEntitlement();
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.quotas = quotas;
            _resultValue.rateLimits = rateLimits;
            _resultValue.targets = targets;
            return _resultValue;
        }
    }
}
