// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmConfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigConfigConfigMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigConfigConfigMapArgs Empty = new ConfigConfigConfigMapArgs();

    /**
     * The Base64 encoded agent configuration file.
     * 
     */
    @Import(name="body")
    private @Nullable Output<String> body;

    /**
     * @return The Base64 encoded agent configuration file.
     * 
     */
    public Optional<Output<String>> body() {
        return Optional.ofNullable(this.body);
    }

    /**
     * (Updatable) The MIME Content-Type that describes the content of the body field, for example, text/yaml or text/yaml; charset=utf-8
     * 
     */
    @Import(name="contentType")
    private @Nullable Output<String> contentType;

    /**
     * @return (Updatable) The MIME Content-Type that describes the content of the body field, for example, text/yaml or text/yaml; charset=utf-8
     * 
     */
    public Optional<Output<String>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * (Updatable) An agent configuration file name.
     * 
     */
    @Import(name="fileName")
    private @Nullable Output<String> fileName;

    /**
     * @return (Updatable) An agent configuration file name.
     * 
     */
    public Optional<Output<String>> fileName() {
        return Optional.ofNullable(this.fileName);
    }

    private ConfigConfigConfigMapArgs() {}

    private ConfigConfigConfigMapArgs(ConfigConfigConfigMapArgs $) {
        this.body = $.body;
        this.contentType = $.contentType;
        this.fileName = $.fileName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigConfigConfigMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigConfigConfigMapArgs $;

        public Builder() {
            $ = new ConfigConfigConfigMapArgs();
        }

        public Builder(ConfigConfigConfigMapArgs defaults) {
            $ = new ConfigConfigConfigMapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param body The Base64 encoded agent configuration file.
         * 
         * @return builder
         * 
         */
        public Builder body(@Nullable Output<String> body) {
            $.body = body;
            return this;
        }

        /**
         * @param body The Base64 encoded agent configuration file.
         * 
         * @return builder
         * 
         */
        public Builder body(String body) {
            return body(Output.of(body));
        }

        /**
         * @param contentType (Updatable) The MIME Content-Type that describes the content of the body field, for example, text/yaml or text/yaml; charset=utf-8
         * 
         * @return builder
         * 
         */
        public Builder contentType(@Nullable Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param contentType (Updatable) The MIME Content-Type that describes the content of the body field, for example, text/yaml or text/yaml; charset=utf-8
         * 
         * @return builder
         * 
         */
        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        /**
         * @param fileName (Updatable) An agent configuration file name.
         * 
         * @return builder
         * 
         */
        public Builder fileName(@Nullable Output<String> fileName) {
            $.fileName = fileName;
            return this;
        }

        /**
         * @param fileName (Updatable) An agent configuration file name.
         * 
         * @return builder
         * 
         */
        public Builder fileName(String fileName) {
            return fileName(Output.of(fileName));
        }

        public ConfigConfigConfigMapArgs build() {
            return $;
        }
    }

}
