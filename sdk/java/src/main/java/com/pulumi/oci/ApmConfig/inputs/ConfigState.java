// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmConfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApmConfig.inputs.ConfigConfigArgs;
import com.pulumi.oci.ApmConfig.inputs.ConfigDimensionArgs;
import com.pulumi.oci.ApmConfig.inputs.ConfigInUseByArgs;
import com.pulumi.oci.ApmConfig.inputs.ConfigMetricArgs;
import com.pulumi.oci.ApmConfig.inputs.ConfigOverridesArgs;
import com.pulumi.oci.ApmConfig.inputs.ConfigRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigState extends com.pulumi.resources.ResourceArgs {

    public static final ConfigState Empty = new ConfigState();

    /**
     * (Updatable) The version of the referenced agent bundle.
     * 
     */
    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    /**
     * @return (Updatable) The version of the referenced agent bundle.
     * 
     */
    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * (Updatable) The APM Domain ID the request is intended for.
     * 
     */
    @Import(name="apmDomainId")
    private @Nullable Output<String> apmDomainId;

    /**
     * @return (Updatable) The APM Domain ID the request is intended for.
     * 
     */
    public Optional<Output<String>> apmDomainId() {
        return Optional.ofNullable(this.apmDomainId);
    }

    /**
     * (Updatable) The directory owned by runAsUser.
     * 
     */
    @Import(name="attachInstallDir")
    private @Nullable Output<String> attachInstallDir;

    /**
     * @return (Updatable) The directory owned by runAsUser.
     * 
     */
    public Optional<Output<String>> attachInstallDir() {
        return Optional.ofNullable(this.attachInstallDir);
    }

    /**
     * (Updatable) Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit &lt;some variable&gt; and &lt;some content&gt; {{ &lt;some variable&gt; | default &lt;some content&gt; }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration&#39;s overrides, specify a different value for &lt;some variable&gt; along with the desired agent filter. Example: &#34;agentFilter&#34;: &#34;ApplicationType=&#39;Tomcat&#39;&#34; &#34;overrideMap&#34;: { &#34;isJfrEnabled&#34;: true }
     * 
     */
    @Import(name="config")
    private @Nullable Output<ConfigConfigArgs> config;

    /**
     * @return (Updatable) Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit &lt;some variable&gt; and &lt;some content&gt; {{ &lt;some variable&gt; | default &lt;some content&gt; }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration&#39;s overrides, specify a different value for &lt;some variable&gt; along with the desired agent filter. Example: &#34;agentFilter&#34;: &#34;ApplicationType=&#39;Tomcat&#39;&#34; &#34;overrideMap&#34;: { &#34;isJfrEnabled&#34;: true }
     * 
     */
    public Optional<Output<ConfigConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * (Updatable) The type of configuration item.
     * 
     */
    @Import(name="configType")
    private @Nullable Output<String> configType;

    /**
     * @return (Updatable) The type of configuration item.
     * 
     */
    public Optional<Output<String>> configType() {
        return Optional.ofNullable(this.configType);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) An optional string that describes what the options are intended or used for.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) An optional string that describes what the options are intended or used for.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A list of dimensions for the metric. This variable should not be used.
     * 
     */
    @Import(name="dimensions")
    private @Nullable Output<List<ConfigDimensionArgs>> dimensions;

    /**
     * @return (Updatable) A list of dimensions for the metric. This variable should not be used.
     * 
     */
    public Optional<Output<List<ConfigDimensionArgs>>> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    /**
     * (Updatable) The name by which a configuration entity is displayed to the end user.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The name by which a configuration entity is displayed to the end user.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * For optimistic concurrency control. See `if-match`.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return For optimistic concurrency control. See `if-match`.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
     * 
     */
    @Import(name="filterId")
    private @Nullable Output<String> filterId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
     * 
     */
    public Optional<Output<String>> filterId() {
        return Optional.ofNullable(this.filterId);
    }

    /**
     * (Updatable) The string that defines the Span Filter expression.
     * 
     */
    @Import(name="filterText")
    private @Nullable Output<String> filterText;

    /**
     * @return (Updatable) The string that defines the Span Filter expression.
     * 
     */
    public Optional<Output<String>> filterText() {
        return Optional.ofNullable(this.filterText);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) A string that specifies the group that an OPTIONS item belongs to.
     * 
     */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return (Updatable) A string that specifies the group that an OPTIONS item belongs to.
     * 
     */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * The list of configuration items that reference the span filter.
     * 
     */
    @Import(name="inUseBies")
    private @Nullable Output<List<ConfigInUseByArgs>> inUseBies;

    /**
     * @return The list of configuration items that reference the span filter.
     * 
     */
    public Optional<Output<List<ConfigInUseByArgs>>> inUseBies() {
        return Optional.ofNullable(this.inUseBies);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
     * 
     */
    @Import(name="managementAgentId")
    private @Nullable Output<String> managementAgentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
     * 
     */
    public Optional<Output<String>> managementAgentId() {
        return Optional.ofNullable(this.managementAgentId);
    }

    /**
     * The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
     * 
     */
    @Import(name="matchAgentsWithAttributeKeys")
    private @Nullable Output<List<String>> matchAgentsWithAttributeKeys;

    /**
     * @return The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
     * 
     */
    public Optional<Output<List<String>>> matchAgentsWithAttributeKeys() {
        return Optional.ofNullable(this.matchAgentsWithAttributeKeys);
    }

    /**
     * The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
     * 
     */
    @Import(name="matchAgentsWithAttributeValue")
    private @Nullable Output<String> matchAgentsWithAttributeValue;

    /**
     * @return The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
     * 
     */
    public Optional<Output<String>> matchAgentsWithAttributeValue() {
        return Optional.ofNullable(this.matchAgentsWithAttributeValue);
    }

    /**
     * (Updatable) The list of metrics in this group.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<ConfigMetricArgs>> metrics;

    /**
     * @return (Updatable) The list of metrics in this group.
     * 
     */
    public Optional<Output<List<ConfigMetricArgs>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    @Import(name="opcDryRun")
    private @Nullable Output<String> opcDryRun;

    /**
     * @return (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    public Optional<Output<String>> opcDryRun() {
        return Optional.ofNullable(this.opcDryRun);
    }

    /**
     * (Updatable) The options are stored here as JSON.
     * 
     */
    @Import(name="options")
    private @Nullable Output<String> options;

    /**
     * @return (Updatable) The options are stored here as JSON.
     * 
     */
    public Optional<Output<String>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * (Updatable) Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
     * 
     */
    @Import(name="overrides")
    private @Nullable Output<ConfigOverridesArgs> overrides;

    /**
     * @return (Updatable) Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
     * 
     */
    public Optional<Output<ConfigOverridesArgs>> overrides() {
        return Optional.ofNullable(this.overrides);
    }

    /**
     * (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
     * 
     */
    @Import(name="processFilters")
    private @Nullable Output<List<String>> processFilters;

    /**
     * @return (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
     * 
     */
    public Optional<Output<List<String>>> processFilters() {
        return Optional.ofNullable(this.processFilters);
    }

    /**
     * (Updatable)
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<ConfigRuleArgs>> rules;

    /**
     * @return (Updatable)
     * 
     */
    public Optional<Output<List<ConfigRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * (Updatable) The OS user that should be used to discover Java processes.
     * 
     */
    @Import(name="runAsUser")
    private @Nullable Output<String> runAsUser;

    /**
     * @return (Updatable) The OS user that should be used to discover Java processes.
     * 
     */
    public Optional<Output<String>> runAsUser() {
        return Optional.ofNullable(this.runAsUser);
    }

    /**
     * (Updatable) The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return (Updatable) The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     * 
     */
    @Import(name="updatedBy")
    private @Nullable Output<String> updatedBy;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     * 
     */
    public Optional<Output<String>> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    private ConfigState() {}

    private ConfigState(ConfigState $) {
        this.agentVersion = $.agentVersion;
        this.apmDomainId = $.apmDomainId;
        this.attachInstallDir = $.attachInstallDir;
        this.config = $.config;
        this.configType = $.configType;
        this.createdBy = $.createdBy;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.dimensions = $.dimensions;
        this.displayName = $.displayName;
        this.etag = $.etag;
        this.filterId = $.filterId;
        this.filterText = $.filterText;
        this.freeformTags = $.freeformTags;
        this.group = $.group;
        this.inUseBies = $.inUseBies;
        this.managementAgentId = $.managementAgentId;
        this.matchAgentsWithAttributeKeys = $.matchAgentsWithAttributeKeys;
        this.matchAgentsWithAttributeValue = $.matchAgentsWithAttributeValue;
        this.metrics = $.metrics;
        this.namespace = $.namespace;
        this.opcDryRun = $.opcDryRun;
        this.options = $.options;
        this.overrides = $.overrides;
        this.processFilters = $.processFilters;
        this.rules = $.rules;
        this.runAsUser = $.runAsUser;
        this.serviceName = $.serviceName;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.updatedBy = $.updatedBy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigState $;

        public Builder() {
            $ = new ConfigState();
        }

        public Builder(ConfigState defaults) {
            $ = new ConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentVersion (Updatable) The version of the referenced agent bundle.
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        /**
         * @param agentVersion (Updatable) The version of the referenced agent bundle.
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        /**
         * @param apmDomainId (Updatable) The APM Domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(@Nullable Output<String> apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param apmDomainId (Updatable) The APM Domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            return apmDomainId(Output.of(apmDomainId));
        }

        /**
         * @param attachInstallDir (Updatable) The directory owned by runAsUser.
         * 
         * @return builder
         * 
         */
        public Builder attachInstallDir(@Nullable Output<String> attachInstallDir) {
            $.attachInstallDir = attachInstallDir;
            return this;
        }

        /**
         * @param attachInstallDir (Updatable) The directory owned by runAsUser.
         * 
         * @return builder
         * 
         */
        public Builder attachInstallDir(String attachInstallDir) {
            return attachInstallDir(Output.of(attachInstallDir));
        }

        /**
         * @param config (Updatable) Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit &lt;some variable&gt; and &lt;some content&gt; {{ &lt;some variable&gt; | default &lt;some content&gt; }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration&#39;s overrides, specify a different value for &lt;some variable&gt; along with the desired agent filter. Example: &#34;agentFilter&#34;: &#34;ApplicationType=&#39;Tomcat&#39;&#34; &#34;overrideMap&#34;: { &#34;isJfrEnabled&#34;: true }
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<ConfigConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config (Updatable) Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit &lt;some variable&gt; and &lt;some content&gt; {{ &lt;some variable&gt; | default &lt;some content&gt; }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration&#39;s overrides, specify a different value for &lt;some variable&gt; along with the desired agent filter. Example: &#34;agentFilter&#34;: &#34;ApplicationType=&#39;Tomcat&#39;&#34; &#34;overrideMap&#34;: { &#34;isJfrEnabled&#34;: true }
         * 
         * @return builder
         * 
         */
        public Builder config(ConfigConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param configType (Updatable) The type of configuration item.
         * 
         * @return builder
         * 
         */
        public Builder configType(@Nullable Output<String> configType) {
            $.configType = configType;
            return this;
        }

        /**
         * @param configType (Updatable) The type of configuration item.
         * 
         * @return builder
         * 
         */
        public Builder configType(String configType) {
            return configType(Output.of(configType));
        }

        /**
         * @param createdBy The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) An optional string that describes what the options are intended or used for.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) An optional string that describes what the options are intended or used for.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dimensions (Updatable) A list of dimensions for the metric. This variable should not be used.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(@Nullable Output<List<ConfigDimensionArgs>> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param dimensions (Updatable) A list of dimensions for the metric. This variable should not be used.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(List<ConfigDimensionArgs> dimensions) {
            return dimensions(Output.of(dimensions));
        }

        /**
         * @param dimensions (Updatable) A list of dimensions for the metric. This variable should not be used.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(ConfigDimensionArgs... dimensions) {
            return dimensions(List.of(dimensions));
        }

        /**
         * @param displayName (Updatable) The name by which a configuration entity is displayed to the end user.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name by which a configuration entity is displayed to the end user.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param etag For optimistic concurrency control. See `if-match`.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag For optimistic concurrency control. See `if-match`.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param filterId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
         * 
         * @return builder
         * 
         */
        public Builder filterId(@Nullable Output<String> filterId) {
            $.filterId = filterId;
            return this;
        }

        /**
         * @param filterId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
         * 
         * @return builder
         * 
         */
        public Builder filterId(String filterId) {
            return filterId(Output.of(filterId));
        }

        /**
         * @param filterText (Updatable) The string that defines the Span Filter expression.
         * 
         * @return builder
         * 
         */
        public Builder filterText(@Nullable Output<String> filterText) {
            $.filterText = filterText;
            return this;
        }

        /**
         * @param filterText (Updatable) The string that defines the Span Filter expression.
         * 
         * @return builder
         * 
         */
        public Builder filterText(String filterText) {
            return filterText(Output.of(filterText));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param group (Updatable) A string that specifies the group that an OPTIONS item belongs to.
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group (Updatable) A string that specifies the group that an OPTIONS item belongs to.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param inUseBies The list of configuration items that reference the span filter.
         * 
         * @return builder
         * 
         */
        public Builder inUseBies(@Nullable Output<List<ConfigInUseByArgs>> inUseBies) {
            $.inUseBies = inUseBies;
            return this;
        }

        /**
         * @param inUseBies The list of configuration items that reference the span filter.
         * 
         * @return builder
         * 
         */
        public Builder inUseBies(List<ConfigInUseByArgs> inUseBies) {
            return inUseBies(Output.of(inUseBies));
        }

        /**
         * @param inUseBies The list of configuration items that reference the span filter.
         * 
         * @return builder
         * 
         */
        public Builder inUseBies(ConfigInUseByArgs... inUseBies) {
            return inUseBies(List.of(inUseBies));
        }

        /**
         * @param managementAgentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
         * 
         * @return builder
         * 
         */
        public Builder managementAgentId(@Nullable Output<String> managementAgentId) {
            $.managementAgentId = managementAgentId;
            return this;
        }

        /**
         * @param managementAgentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
         * 
         * @return builder
         * 
         */
        public Builder managementAgentId(String managementAgentId) {
            return managementAgentId(Output.of(managementAgentId));
        }

        /**
         * @param matchAgentsWithAttributeKeys The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
         * 
         * @return builder
         * 
         */
        public Builder matchAgentsWithAttributeKeys(@Nullable Output<List<String>> matchAgentsWithAttributeKeys) {
            $.matchAgentsWithAttributeKeys = matchAgentsWithAttributeKeys;
            return this;
        }

        /**
         * @param matchAgentsWithAttributeKeys The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
         * 
         * @return builder
         * 
         */
        public Builder matchAgentsWithAttributeKeys(List<String> matchAgentsWithAttributeKeys) {
            return matchAgentsWithAttributeKeys(Output.of(matchAgentsWithAttributeKeys));
        }

        /**
         * @param matchAgentsWithAttributeKeys The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
         * 
         * @return builder
         * 
         */
        public Builder matchAgentsWithAttributeKeys(String... matchAgentsWithAttributeKeys) {
            return matchAgentsWithAttributeKeys(List.of(matchAgentsWithAttributeKeys));
        }

        /**
         * @param matchAgentsWithAttributeValue The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
         * 
         * @return builder
         * 
         */
        public Builder matchAgentsWithAttributeValue(@Nullable Output<String> matchAgentsWithAttributeValue) {
            $.matchAgentsWithAttributeValue = matchAgentsWithAttributeValue;
            return this;
        }

        /**
         * @param matchAgentsWithAttributeValue The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
         * 
         * @return builder
         * 
         */
        public Builder matchAgentsWithAttributeValue(String matchAgentsWithAttributeValue) {
            return matchAgentsWithAttributeValue(Output.of(matchAgentsWithAttributeValue));
        }

        /**
         * @param metrics (Updatable) The list of metrics in this group.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<List<ConfigMetricArgs>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics (Updatable) The list of metrics in this group.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<ConfigMetricArgs> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics (Updatable) The list of metrics in this group.
         * 
         * @return builder
         * 
         */
        public Builder metrics(ConfigMetricArgs... metrics) {
            return metrics(List.of(metrics));
        }

        /**
         * @param namespace (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param opcDryRun (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder opcDryRun(@Nullable Output<String> opcDryRun) {
            $.opcDryRun = opcDryRun;
            return this;
        }

        /**
         * @param opcDryRun (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder opcDryRun(String opcDryRun) {
            return opcDryRun(Output.of(opcDryRun));
        }

        /**
         * @param options (Updatable) The options are stored here as JSON.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<String> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options (Updatable) The options are stored here as JSON.
         * 
         * @return builder
         * 
         */
        public Builder options(String options) {
            return options(Output.of(options));
        }

        /**
         * @param overrides (Updatable) Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
         * 
         * @return builder
         * 
         */
        public Builder overrides(@Nullable Output<ConfigOverridesArgs> overrides) {
            $.overrides = overrides;
            return this;
        }

        /**
         * @param overrides (Updatable) Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
         * 
         * @return builder
         * 
         */
        public Builder overrides(ConfigOverridesArgs overrides) {
            return overrides(Output.of(overrides));
        }

        /**
         * @param processFilters (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
         * 
         * @return builder
         * 
         */
        public Builder processFilters(@Nullable Output<List<String>> processFilters) {
            $.processFilters = processFilters;
            return this;
        }

        /**
         * @param processFilters (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
         * 
         * @return builder
         * 
         */
        public Builder processFilters(List<String> processFilters) {
            return processFilters(Output.of(processFilters));
        }

        /**
         * @param processFilters (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
         * 
         * @return builder
         * 
         */
        public Builder processFilters(String... processFilters) {
            return processFilters(List.of(processFilters));
        }

        /**
         * @param rules (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<ConfigRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder rules(List<ConfigRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder rules(ConfigRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param runAsUser (Updatable) The OS user that should be used to discover Java processes.
         * 
         * @return builder
         * 
         */
        public Builder runAsUser(@Nullable Output<String> runAsUser) {
            $.runAsUser = runAsUser;
            return this;
        }

        /**
         * @param runAsUser (Updatable) The OS user that should be used to discover Java processes.
         * 
         * @return builder
         * 
         */
        public Builder runAsUser(String runAsUser) {
            return runAsUser(Output.of(runAsUser));
        }

        /**
         * @param serviceName (Updatable) The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName (Updatable) The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param timeCreated The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param updatedBy The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
         * 
         * @return builder
         * 
         */
        public Builder updatedBy(@Nullable Output<String> updatedBy) {
            $.updatedBy = updatedBy;
            return this;
        }

        /**
         * @param updatedBy The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
         * 
         * @return builder
         * 
         */
        public Builder updatedBy(String updatedBy) {
            return updatedBy(Output.of(updatedBy));
        }

        public ConfigState build() {
            return $;
        }
    }

}
