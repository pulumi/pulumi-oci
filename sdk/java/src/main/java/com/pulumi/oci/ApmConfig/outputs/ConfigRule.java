// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmConfig.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigRule {
    /**
     * @return (Updatable) The name by which a configuration entity is displayed to the end user.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (Updatable) The string that defines the Span Filter expression.
     * 
     */
    private @Nullable String filterText;
    /**
     * @return (Updatable) Specifies whether an Apdex score should be computed for error spans. Setting it to &#34;true&#34; means that the Apdex score is computed in the usual way. Setting it to &#34;false&#34; skips the Apdex computation and sets the Apdex score to &#34;frustrating&#34; regardless of the configured thresholds. The default is &#34;false&#34;.
     * 
     */
    private @Nullable Boolean isApplyToErrorSpans;
    /**
     * @return (Updatable) Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is &#34;true&#34;.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return (Updatable) The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return (Updatable) The maximum response time in milliseconds that is considered &#34;satisfactory&#34; for the end user.
     * 
     */
    private @Nullable Integer satisfiedResponseTime;
    /**
     * @return (Updatable) The maximum response time in milliseconds that is considered &#34;tolerable&#34; for the end user. A response time beyond this threshold is considered &#34;frustrating&#34;. This value cannot be lower than &#34;satisfiedResponseTime&#34;.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable Integer toleratingResponseTime;

    private ConfigRule() {}
    /**
     * @return (Updatable) The name by which a configuration entity is displayed to the end user.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (Updatable) The string that defines the Span Filter expression.
     * 
     */
    public Optional<String> filterText() {
        return Optional.ofNullable(this.filterText);
    }
    /**
     * @return (Updatable) Specifies whether an Apdex score should be computed for error spans. Setting it to &#34;true&#34; means that the Apdex score is computed in the usual way. Setting it to &#34;false&#34; skips the Apdex computation and sets the Apdex score to &#34;frustrating&#34; regardless of the configured thresholds. The default is &#34;false&#34;.
     * 
     */
    public Optional<Boolean> isApplyToErrorSpans() {
        return Optional.ofNullable(this.isApplyToErrorSpans);
    }
    /**
     * @return (Updatable) Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is &#34;true&#34;.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return (Updatable) The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return (Updatable) The maximum response time in milliseconds that is considered &#34;satisfactory&#34; for the end user.
     * 
     */
    public Optional<Integer> satisfiedResponseTime() {
        return Optional.ofNullable(this.satisfiedResponseTime);
    }
    /**
     * @return (Updatable) The maximum response time in milliseconds that is considered &#34;tolerable&#34; for the end user. A response time beyond this threshold is considered &#34;frustrating&#34;. This value cannot be lower than &#34;satisfiedResponseTime&#34;.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Integer> toleratingResponseTime() {
        return Optional.ofNullable(this.toleratingResponseTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable String filterText;
        private @Nullable Boolean isApplyToErrorSpans;
        private @Nullable Boolean isEnabled;
        private @Nullable Integer priority;
        private @Nullable Integer satisfiedResponseTime;
        private @Nullable Integer toleratingResponseTime;
        public Builder() {}
        public Builder(ConfigRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.filterText = defaults.filterText;
    	      this.isApplyToErrorSpans = defaults.isApplyToErrorSpans;
    	      this.isEnabled = defaults.isEnabled;
    	      this.priority = defaults.priority;
    	      this.satisfiedResponseTime = defaults.satisfiedResponseTime;
    	      this.toleratingResponseTime = defaults.toleratingResponseTime;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filterText(@Nullable String filterText) {

            this.filterText = filterText;
            return this;
        }
        @CustomType.Setter
        public Builder isApplyToErrorSpans(@Nullable Boolean isApplyToErrorSpans) {

            this.isApplyToErrorSpans = isApplyToErrorSpans;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {

            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder satisfiedResponseTime(@Nullable Integer satisfiedResponseTime) {

            this.satisfiedResponseTime = satisfiedResponseTime;
            return this;
        }
        @CustomType.Setter
        public Builder toleratingResponseTime(@Nullable Integer toleratingResponseTime) {

            this.toleratingResponseTime = toleratingResponseTime;
            return this;
        }
        public ConfigRule build() {
            final var _resultValue = new ConfigRule();
            _resultValue.displayName = displayName;
            _resultValue.filterText = filterText;
            _resultValue.isApplyToErrorSpans = isApplyToErrorSpans;
            _resultValue.isEnabled = isEnabled;
            _resultValue.priority = priority;
            _resultValue.satisfiedResponseTime = satisfiedResponseTime;
            _resultValue.toleratingResponseTime = toleratingResponseTime;
            return _resultValue;
        }
    }
}
