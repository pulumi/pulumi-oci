// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.ApmSynthetics.ConfigArgs;
import com.pulumi.oci.ApmSynthetics.inputs.ConfigState;
import com.pulumi.oci.ApmSynthetics.outputs.ConfigAvailabilityConfiguration;
import com.pulumi.oci.ApmSynthetics.outputs.ConfigConfiguration;
import com.pulumi.oci.ApmSynthetics.outputs.ConfigMaintenanceWindowSchedule;
import com.pulumi.oci.ApmSynthetics.outputs.ConfigScriptParameter;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Monitor resource in Oracle Cloud Infrastructure Apm Synthetics service.
 * 
 * Creates a new monitor.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.ApmSynthetics.Config;
 * import com.pulumi.oci.ApmSynthetics.ConfigArgs;
 * import com.pulumi.oci.ApmSynthetics.inputs.ConfigAvailabilityConfigurationArgs;
 * import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationArgs;
 * import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationDnsConfigurationArgs;
 * import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationNetworkConfigurationArgs;
 * import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationReqAuthenticationDetailsArgs;
 * import com.pulumi.oci.ApmSynthetics.inputs.ConfigMaintenanceWindowScheduleArgs;
 * import com.pulumi.oci.ApmSynthetics.inputs.ConfigScriptParameterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMonitor = new Config(&#34;testMonitor&#34;, ConfigArgs.builder()        
 *             .apmDomainId(oci_apm_synthetics_apm_domain.test_apm_domain().id())
 *             .displayName(var_.monitor_display_name())
 *             .monitorType(var_.monitor_monitor_type())
 *             .repeatIntervalInSeconds(var_.monitor_repeat_interval_in_seconds())
 *             .vantagePoints()
 *             .availabilityConfiguration(ConfigAvailabilityConfigurationArgs.builder()
 *                 .maxAllowedFailuresPerInterval(var_.monitor_availability_configuration_max_allowed_failures_per_interval())
 *                 .minAllowedRunsPerInterval(var_.monitor_availability_configuration_min_allowed_runs_per_interval())
 *                 .build())
 *             .batchIntervalInSeconds(var_.monitor_batch_interval_in_seconds())
 *             .configuration(ConfigConfigurationArgs.builder()
 *                 .configType(var_.monitor_configuration_config_type())
 *                 .dnsConfiguration(ConfigConfigurationDnsConfigurationArgs.builder()
 *                     .isOverrideDns(var_.monitor_configuration_dns_configuration_is_override_dns())
 *                     .overrideDnsIp(var_.monitor_configuration_dns_configuration_override_dns_ip())
 *                     .build())
 *                 .isCertificateValidationEnabled(var_.monitor_configuration_is_certificate_validation_enabled())
 *                 .isFailureRetried(var_.monitor_configuration_is_failure_retried())
 *                 .isRedirectionEnabled(var_.monitor_configuration_is_redirection_enabled())
 *                 .networkConfiguration(ConfigConfigurationNetworkConfigurationArgs.builder()
 *                     .numberOfHops(var_.monitor_configuration_network_configuration_number_of_hops())
 *                     .probeMode(var_.monitor_configuration_network_configuration_probe_mode())
 *                     .probePerHop(var_.monitor_configuration_network_configuration_probe_per_hop())
 *                     .protocol(var_.monitor_configuration_network_configuration_protocol())
 *                     .transmissionRate(var_.monitor_configuration_network_configuration_transmission_rate())
 *                     .build())
 *                 .reqAuthenticationDetails(ConfigConfigurationReqAuthenticationDetailsArgs.builder()
 *                     .authHeaders(ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs.builder()
 *                         .headerName(var_.monitor_configuration_req_authentication_details_auth_headers_header_name())
 *                         .headerValue(var_.monitor_configuration_req_authentication_details_auth_headers_header_value())
 *                         .build())
 *                     .authRequestMethod(var_.monitor_configuration_req_authentication_details_auth_request_method())
 *                     .authRequestPostBody(var_.monitor_configuration_req_authentication_details_auth_request_post_body())
 *                     .authToken(var_.monitor_configuration_req_authentication_details_auth_token())
 *                     .authUrl(var_.monitor_configuration_req_authentication_details_auth_url())
 *                     .authUserName(oci_identity_user.test_user().name())
 *                     .authUserPassword(var_.monitor_configuration_req_authentication_details_auth_user_password())
 *                     .oauthScheme(var_.monitor_configuration_req_authentication_details_oauth_scheme())
 *                     .build())
 *                 .reqAuthenticationScheme(var_.monitor_configuration_req_authentication_scheme())
 *                 .requestHeaders(ConfigConfigurationRequestHeaderArgs.builder()
 *                     .headerName(var_.monitor_configuration_request_headers_header_name())
 *                     .headerValue(var_.monitor_configuration_request_headers_header_value())
 *                     .build())
 *                 .requestMethod(var_.monitor_configuration_request_method())
 *                 .requestPostBody(var_.monitor_configuration_request_post_body())
 *                 .requestQueryParams(ConfigConfigurationRequestQueryParamArgs.builder()
 *                     .paramName(var_.monitor_configuration_request_query_params_param_name())
 *                     .paramValue(var_.monitor_configuration_request_query_params_param_value())
 *                     .build())
 *                 .verifyResponseCodes(var_.monitor_configuration_verify_response_codes())
 *                 .verifyResponseContent(var_.monitor_configuration_verify_response_content())
 *                 .verifyTexts(ConfigConfigurationVerifyTextArgs.builder()
 *                     .text(var_.monitor_configuration_verify_texts_text())
 *                     .build())
 *                 .build())
 *             .definedTags(Map.of(&#34;foo-namespace.bar-key&#34;, &#34;value&#34;))
 *             .freeformTags(Map.of(&#34;bar-key&#34;, &#34;value&#34;))
 *             .isRunNow(var_.monitor_is_run_now())
 *             .isRunOnce(var_.monitor_is_run_once())
 *             .maintenanceWindowSchedule(ConfigMaintenanceWindowScheduleArgs.builder()
 *                 .timeEnded(var_.monitor_maintenance_window_schedule_time_ended())
 *                 .timeStarted(var_.monitor_maintenance_window_schedule_time_started())
 *                 .build())
 *             .schedulingPolicy(var_.monitor_scheduling_policy())
 *             .scriptId(oci_apm_synthetics_script.test_script().id())
 *             .scriptParameters(ConfigScriptParameterArgs.builder()
 *                 .paramName(var_.monitor_script_parameters_param_name())
 *                 .paramValue(var_.monitor_script_parameters_param_value())
 *                 .build())
 *             .status(var_.monitor_status())
 *             .target(var_.monitor_target())
 *             .timeoutInSeconds(var_.monitor_timeout_in_seconds())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Monitors can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:ApmSynthetics/config:Config test_monitor &#34;monitors/{monitorId}/apmDomainId/{apmDomainId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:ApmSynthetics/config:Config")
public class Config extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The APM domain ID the request is intended for.
     * 
     */
    @Export(name="apmDomainId", type=String.class, parameters={})
    private Output<String> apmDomainId;

    /**
     * @return (Updatable) The APM domain ID the request is intended for.
     * 
     */
    public Output<String> apmDomainId() {
        return this.apmDomainId;
    }
    /**
     * (Updatable) Monitor availability configuration details.
     * 
     */
    @Export(name="availabilityConfiguration", type=ConfigAvailabilityConfiguration.class, parameters={})
    private Output<ConfigAvailabilityConfiguration> availabilityConfiguration;

    /**
     * @return (Updatable) Monitor availability configuration details.
     * 
     */
    public Output<ConfigAvailabilityConfiguration> availabilityConfiguration() {
        return this.availabilityConfiguration;
    }
    /**
     * (Updatable) Time interval between 2 runs in round robin batch mode (*SchedulingPolicy - BATCHED_ROUND_ROBIN).
     * 
     */
    @Export(name="batchIntervalInSeconds", type=Integer.class, parameters={})
    private Output<Integer> batchIntervalInSeconds;

    /**
     * @return (Updatable) Time interval between 2 runs in round robin batch mode (*SchedulingPolicy - BATCHED_ROUND_ROBIN).
     * 
     */
    public Output<Integer> batchIntervalInSeconds() {
        return this.batchIntervalInSeconds;
    }
    /**
     * (Updatable) Details of monitor configuration.
     * 
     */
    @Export(name="configuration", type=ConfigConfiguration.class, parameters={})
    private Output<ConfigConfiguration> configuration;

    /**
     * @return (Updatable) Details of monitor configuration.
     * 
     */
    public Output<ConfigConfiguration> configuration() {
        return this.configuration;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) If isRunNow is enabled, then the monitor will run now.
     * 
     */
    @Export(name="isRunNow", type=Boolean.class, parameters={})
    private Output<Boolean> isRunNow;

    /**
     * @return (Updatable) If isRunNow is enabled, then the monitor will run now.
     * 
     */
    public Output<Boolean> isRunNow() {
        return this.isRunNow;
    }
    /**
     * (Updatable) If runOnce is enabled, then the monitor will run once.
     * 
     */
    @Export(name="isRunOnce", type=Boolean.class, parameters={})
    private Output<Boolean> isRunOnce;

    /**
     * @return (Updatable) If runOnce is enabled, then the monitor will run once.
     * 
     */
    public Output<Boolean> isRunOnce() {
        return this.isRunOnce;
    }
    /**
     * (Updatable) Details used to schedule maintenance window.
     * 
     */
    @Export(name="maintenanceWindowSchedule", type=ConfigMaintenanceWindowSchedule.class, parameters={})
    private Output<ConfigMaintenanceWindowSchedule> maintenanceWindowSchedule;

    /**
     * @return (Updatable) Details used to schedule maintenance window.
     * 
     */
    public Output<ConfigMaintenanceWindowSchedule> maintenanceWindowSchedule() {
        return this.maintenanceWindowSchedule;
    }
    /**
     * Type of monitor.
     * 
     */
    @Export(name="monitorType", type=String.class, parameters={})
    private Output<String> monitorType;

    /**
     * @return Type of monitor.
     * 
     */
    public Output<String> monitorType() {
        return this.monitorType;
    }
    /**
     * (Updatable) Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
     * 
     */
    @Export(name="repeatIntervalInSeconds", type=Integer.class, parameters={})
    private Output<Integer> repeatIntervalInSeconds;

    /**
     * @return (Updatable) Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
     * 
     */
    public Output<Integer> repeatIntervalInSeconds() {
        return this.repeatIntervalInSeconds;
    }
    /**
     * (Updatable) Scheduling policy on Vantage points.
     * 
     */
    @Export(name="schedulingPolicy", type=String.class, parameters={})
    private Output<String> schedulingPolicy;

    /**
     * @return (Updatable) Scheduling policy on Vantage points.
     * 
     */
    public Output<String> schedulingPolicy() {
        return this.schedulingPolicy;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    @Export(name="scriptId", type=String.class, parameters={})
    private Output<String> scriptId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    public Output<String> scriptId() {
        return this.scriptId;
    }
    /**
     * Name of the script.
     * 
     */
    @Export(name="scriptName", type=String.class, parameters={})
    private Output<String> scriptName;

    /**
     * @return Name of the script.
     * 
     */
    public Output<String> scriptName() {
        return this.scriptName;
    }
    /**
     * (Updatable) List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: `[{&#34;paramName&#34;: &#34;userid&#34;, &#34;paramValue&#34;:&#34;testuser&#34;}]`
     * 
     */
    @Export(name="scriptParameters", type=List.class, parameters={ConfigScriptParameter.class})
    private Output<List<ConfigScriptParameter>> scriptParameters;

    /**
     * @return (Updatable) List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: `[{&#34;paramName&#34;: &#34;userid&#34;, &#34;paramValue&#34;:&#34;testuser&#34;}]`
     * 
     */
    public Output<List<ConfigScriptParameter>> scriptParameters() {
        return this.scriptParameters;
    }
    /**
     * (Updatable) Enables or disables the monitor.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return (Updatable) Enables or disables the monitor.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * (Updatable) Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
     * 
     */
    @Export(name="target", type=String.class, parameters={})
    private Output<String> target;

    /**
     * @return (Updatable) Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
     * 
     */
    public Output<String> target() {
        return this.target;
    }
    /**
     * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     * 
     */
    @Export(name="timeUpdated", type=String.class, parameters={})
    private Output<String> timeUpdated;

    /**
     * @return The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
     * 
     */
    @Export(name="timeoutInSeconds", type=Integer.class, parameters={})
    private Output<Integer> timeoutInSeconds;

    /**
     * @return (Updatable) Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
     * 
     */
    public Output<Integer> timeoutInSeconds() {
        return this.timeoutInSeconds;
    }
    /**
     * Number of vantage points where monitor is running.
     * 
     */
    @Export(name="vantagePointCount", type=Integer.class, parameters={})
    private Output<Integer> vantagePointCount;

    /**
     * @return Number of vantage points where monitor is running.
     * 
     */
    public Output<Integer> vantagePointCount() {
        return this.vantagePointCount;
    }
    /**
     * (Updatable) A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
     * 
     */
    @Export(name="vantagePoints", type=List.class, parameters={String.class})
    private Output<List<String>> vantagePoints;

    /**
     * @return (Updatable) A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
     * 
     */
    public Output<List<String>> vantagePoints() {
        return this.vantagePoints;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Config(String name) {
        this(name, ConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Config(String name, ConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Config(String name, ConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ApmSynthetics/config:Config", name, args == null ? ConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Config(String name, Output<String> id, @Nullable ConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ApmSynthetics/config:Config", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Config get(String name, Output<String> id, @Nullable ConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Config(name, id, state, options);
    }
}
