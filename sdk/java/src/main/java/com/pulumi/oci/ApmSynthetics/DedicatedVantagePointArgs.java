// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApmSynthetics.inputs.DedicatedVantagePointDvpStackDetailsArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DedicatedVantagePointArgs extends com.pulumi.resources.ResourceArgs {

    public static final DedicatedVantagePointArgs Empty = new DedicatedVantagePointArgs();

    /**
     * (Updatable) The APM domain ID the request is intended for.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private Output<String> apmDomainId;

    /**
     * @return (Updatable) The APM domain ID the request is intended for.
     * 
     */
    public Output<String> apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
     * 
     */
    @Import(name="dvpStackDetails", required=true)
    private Output<DedicatedVantagePointDvpStackDetailsArgs> dvpStackDetails;

    /**
     * @return (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
     * 
     */
    public Output<DedicatedVantagePointDvpStackDetailsArgs> dvpStackDetails() {
        return this.dvpStackDetails;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Name of the region.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return (Updatable) Name of the region.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * (Updatable) Status of the dedicated vantage point.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Status of the dedicated vantage point.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private DedicatedVantagePointArgs() {}

    private DedicatedVantagePointArgs(DedicatedVantagePointArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.dvpStackDetails = $.dvpStackDetails;
        this.freeformTags = $.freeformTags;
        this.region = $.region;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DedicatedVantagePointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DedicatedVantagePointArgs $;

        public Builder() {
            $ = new DedicatedVantagePointArgs();
        }

        public Builder(DedicatedVantagePointArgs defaults) {
            $ = new DedicatedVantagePointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId (Updatable) The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(Output<String> apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param apmDomainId (Updatable) The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            return apmDomainId(Output.of(apmDomainId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param dvpStackDetails (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
         * 
         * @return builder
         * 
         */
        public Builder dvpStackDetails(Output<DedicatedVantagePointDvpStackDetailsArgs> dvpStackDetails) {
            $.dvpStackDetails = dvpStackDetails;
            return this;
        }

        /**
         * @param dvpStackDetails (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
         * 
         * @return builder
         * 
         */
        public Builder dvpStackDetails(DedicatedVantagePointDvpStackDetailsArgs dvpStackDetails) {
            return dvpStackDetails(Output.of(dvpStackDetails));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param region (Updatable) Name of the region.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region (Updatable) Name of the region.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param status (Updatable) Status of the dedicated vantage point.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Status of the dedicated vantage point.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public DedicatedVantagePointArgs build() {
            if ($.apmDomainId == null) {
                throw new MissingRequiredPropertyException("DedicatedVantagePointArgs", "apmDomainId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("DedicatedVantagePointArgs", "displayName");
            }
            if ($.dvpStackDetails == null) {
                throw new MissingRequiredPropertyException("DedicatedVantagePointArgs", "dvpStackDetails");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("DedicatedVantagePointArgs", "region");
            }
            return $;
        }
    }

}
