// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnPremiseVantagePointWorkerArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnPremiseVantagePointWorkerArgs Empty = new OnPremiseVantagePointWorkerArgs();

    /**
     * (Updatable) The APM domain ID the request is intended for.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private Output<String> apmDomainId;

    /**
     * @return (Updatable) The APM domain ID the request is intended for.
     * 
     */
    public Output<String> apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * (Updatable) Configuration details of the On-premise VP worker.
     * 
     */
    @Import(name="configurationDetails")
    private @Nullable Output<String> configurationDetails;

    /**
     * @return (Updatable) Configuration details of the On-premise VP worker.
     * 
     */
    public Optional<Output<String>> configurationDetails() {
        return Optional.ofNullable(this.configurationDetails);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Unique On-premise VP worker name that cannot be edited. The name should not contain any confidential information.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique On-premise VP worker name that cannot be edited. The name should not contain any confidential information.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The OCID of the On-premise vantage point.
     * 
     */
    @Import(name="onPremiseVantagePointId", required=true)
    private Output<String> onPremiseVantagePointId;

    /**
     * @return The OCID of the On-premise vantage point.
     * 
     */
    public Output<String> onPremiseVantagePointId() {
        return this.onPremiseVantagePointId;
    }

    /**
     * (Updatable) Priority of the On-premise VP worker to schedule monitors.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return (Updatable) Priority of the On-premise VP worker to schedule monitors.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * public key for resource Principal Token based validation to be used in further calls.
     * 
     */
    @Import(name="resourcePrincipalTokenPublicKey", required=true)
    private Output<String> resourcePrincipalTokenPublicKey;

    /**
     * @return public key for resource Principal Token based validation to be used in further calls.
     * 
     */
    public Output<String> resourcePrincipalTokenPublicKey() {
        return this.resourcePrincipalTokenPublicKey;
    }

    /**
     * (Updatable) Enables or disables the On-premise VP worker.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Enables or disables the On-premise VP worker.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Image version of the On-premise VP worker.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return Image version of the On-premise VP worker.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     * Type of the On-premise VP worker.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="workerType")
    private @Nullable Output<String> workerType;

    /**
     * @return Type of the On-premise VP worker.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> workerType() {
        return Optional.ofNullable(this.workerType);
    }

    private OnPremiseVantagePointWorkerArgs() {}

    private OnPremiseVantagePointWorkerArgs(OnPremiseVantagePointWorkerArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.configurationDetails = $.configurationDetails;
        this.definedTags = $.definedTags;
        this.freeformTags = $.freeformTags;
        this.name = $.name;
        this.onPremiseVantagePointId = $.onPremiseVantagePointId;
        this.priority = $.priority;
        this.resourcePrincipalTokenPublicKey = $.resourcePrincipalTokenPublicKey;
        this.status = $.status;
        this.version = $.version;
        this.workerType = $.workerType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnPremiseVantagePointWorkerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnPremiseVantagePointWorkerArgs $;

        public Builder() {
            $ = new OnPremiseVantagePointWorkerArgs();
        }

        public Builder(OnPremiseVantagePointWorkerArgs defaults) {
            $ = new OnPremiseVantagePointWorkerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId (Updatable) The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(Output<String> apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param apmDomainId (Updatable) The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            return apmDomainId(Output.of(apmDomainId));
        }

        /**
         * @param configurationDetails (Updatable) Configuration details of the On-premise VP worker.
         * 
         * @return builder
         * 
         */
        public Builder configurationDetails(@Nullable Output<String> configurationDetails) {
            $.configurationDetails = configurationDetails;
            return this;
        }

        /**
         * @param configurationDetails (Updatable) Configuration details of the On-premise VP worker.
         * 
         * @return builder
         * 
         */
        public Builder configurationDetails(String configurationDetails) {
            return configurationDetails(Output.of(configurationDetails));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param name Unique On-premise VP worker name that cannot be edited. The name should not contain any confidential information.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique On-premise VP worker name that cannot be edited. The name should not contain any confidential information.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param onPremiseVantagePointId The OCID of the On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder onPremiseVantagePointId(Output<String> onPremiseVantagePointId) {
            $.onPremiseVantagePointId = onPremiseVantagePointId;
            return this;
        }

        /**
         * @param onPremiseVantagePointId The OCID of the On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder onPremiseVantagePointId(String onPremiseVantagePointId) {
            return onPremiseVantagePointId(Output.of(onPremiseVantagePointId));
        }

        /**
         * @param priority (Updatable) Priority of the On-premise VP worker to schedule monitors.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority (Updatable) Priority of the On-premise VP worker to schedule monitors.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param resourcePrincipalTokenPublicKey public key for resource Principal Token based validation to be used in further calls.
         * 
         * @return builder
         * 
         */
        public Builder resourcePrincipalTokenPublicKey(Output<String> resourcePrincipalTokenPublicKey) {
            $.resourcePrincipalTokenPublicKey = resourcePrincipalTokenPublicKey;
            return this;
        }

        /**
         * @param resourcePrincipalTokenPublicKey public key for resource Principal Token based validation to be used in further calls.
         * 
         * @return builder
         * 
         */
        public Builder resourcePrincipalTokenPublicKey(String resourcePrincipalTokenPublicKey) {
            return resourcePrincipalTokenPublicKey(Output.of(resourcePrincipalTokenPublicKey));
        }

        /**
         * @param status (Updatable) Enables or disables the On-premise VP worker.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Enables or disables the On-premise VP worker.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param version Image version of the On-premise VP worker.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Image version of the On-premise VP worker.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        /**
         * @param workerType Type of the On-premise VP worker.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workerType(@Nullable Output<String> workerType) {
            $.workerType = workerType;
            return this;
        }

        /**
         * @param workerType Type of the On-premise VP worker.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workerType(String workerType) {
            return workerType(Output.of(workerType));
        }

        public OnPremiseVantagePointWorkerArgs build() {
            if ($.apmDomainId == null) {
                throw new MissingRequiredPropertyException("OnPremiseVantagePointWorkerArgs", "apmDomainId");
            }
            if ($.onPremiseVantagePointId == null) {
                throw new MissingRequiredPropertyException("OnPremiseVantagePointWorkerArgs", "onPremiseVantagePointId");
            }
            if ($.resourcePrincipalTokenPublicKey == null) {
                throw new MissingRequiredPropertyException("OnPremiseVantagePointWorkerArgs", "resourcePrincipalTokenPublicKey");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("OnPremiseVantagePointWorkerArgs", "version");
            }
            return $;
        }
    }

}
