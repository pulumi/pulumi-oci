// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs Empty = new ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs();

    /**
     * (Updatable) Password.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return (Updatable) Password.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * (Updatable) Type of method to pass password.
     * 
     */
    @Import(name="passwordType")
    private @Nullable Output<String> passwordType;

    /**
     * @return (Updatable) Type of method to pass password.
     * 
     */
    public Optional<Output<String>> passwordType() {
        return Optional.ofNullable(this.passwordType);
    }

    /**
     * (Updatable) Vault secret OCID.
     * 
     */
    @Import(name="vaultSecretId")
    private @Nullable Output<String> vaultSecretId;

    /**
     * @return (Updatable) Vault secret OCID.
     * 
     */
    public Optional<Output<String>> vaultSecretId() {
        return Optional.ofNullable(this.vaultSecretId);
    }

    private ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs() {}

    private ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs(ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs $) {
        this.password = $.password;
        this.passwordType = $.passwordType;
        this.vaultSecretId = $.vaultSecretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs $;

        public Builder() {
            $ = new ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs();
        }

        public Builder(ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs defaults) {
            $ = new ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password (Updatable) Password.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password (Updatable) Password.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordType (Updatable) Type of method to pass password.
         * 
         * @return builder
         * 
         */
        public Builder passwordType(@Nullable Output<String> passwordType) {
            $.passwordType = passwordType;
            return this;
        }

        /**
         * @param passwordType (Updatable) Type of method to pass password.
         * 
         * @return builder
         * 
         */
        public Builder passwordType(String passwordType) {
            return passwordType(Output.of(passwordType));
        }

        /**
         * @param vaultSecretId (Updatable) Vault secret OCID.
         * 
         * @return builder
         * 
         */
        public Builder vaultSecretId(@Nullable Output<String> vaultSecretId) {
            $.vaultSecretId = vaultSecretId;
            return this;
        }

        /**
         * @param vaultSecretId (Updatable) Vault secret OCID.
         * 
         * @return builder
         * 
         */
        public Builder vaultSecretId(String vaultSecretId) {
            return vaultSecretId(Output.of(vaultSecretId));
        }

        public ConfigConfigurationDatabaseAuthenticationDetailsPasswordArgs build() {
            return $;
        }
    }

}
