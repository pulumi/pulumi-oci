// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApmSynthetics.inputs.GetDedicatedVantagePointsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDedicatedVantagePointsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDedicatedVantagePointsPlainArgs Empty = new GetDedicatedVantagePointsPlainArgs();

    /**
     * The APM domain ID the request is intended for.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private String apmDomainId;

    /**
     * @return The APM domain ID the request is intended for.
     * 
     */
    public String apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * A filter to return only the resources that match the entire display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only the resources that match the entire display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetDedicatedVantagePointsFilter> filters;

    public Optional<List<GetDedicatedVantagePointsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only the resources that match the entire name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A filter to return only the resources that match the entire name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return only the dedicated vantage points that match a given status.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return A filter to return only the dedicated vantage points that match a given status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetDedicatedVantagePointsPlainArgs() {}

    private GetDedicatedVantagePointsPlainArgs(GetDedicatedVantagePointsPlainArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.name = $.name;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDedicatedVantagePointsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDedicatedVantagePointsPlainArgs $;

        public Builder() {
            $ = new GetDedicatedVantagePointsPlainArgs();
        }

        public Builder(GetDedicatedVantagePointsPlainArgs defaults) {
            $ = new GetDedicatedVantagePointsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetDedicatedVantagePointsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDedicatedVantagePointsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter to return only the resources that match the entire name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param status A filter to return only the dedicated vantage points that match a given status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetDedicatedVantagePointsPlainArgs build() {
            if ($.apmDomainId == null) {
                throw new MissingRequiredPropertyException("GetDedicatedVantagePointsPlainArgs", "apmDomainId");
            }
            return $;
        }
    }

}
