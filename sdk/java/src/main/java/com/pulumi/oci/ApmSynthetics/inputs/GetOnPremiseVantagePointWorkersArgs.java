// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApmSynthetics.inputs.GetOnPremiseVantagePointWorkersFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOnPremiseVantagePointWorkersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOnPremiseVantagePointWorkersArgs Empty = new GetOnPremiseVantagePointWorkersArgs();

    /**
     * The APM domain ID the request is intended for.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private Output<String> apmDomainId;

    /**
     * @return The APM domain ID the request is intended for.
     * 
     */
    public Output<String> apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * A filter to return only On-premise VP workers that match the capability given.
     * 
     */
    @Import(name="capability")
    private @Nullable Output<String> capability;

    /**
     * @return A filter to return only On-premise VP workers that match the capability given.
     * 
     */
    public Optional<Output<String>> capability() {
        return Optional.ofNullable(this.capability);
    }

    /**
     * A filter to return only the resources that match the entire display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only the resources that match the entire display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetOnPremiseVantagePointWorkersFilterArgs>> filters;

    public Optional<Output<List<GetOnPremiseVantagePointWorkersFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only the resources that match the entire name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter to return only the resources that match the entire name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The OCID of the On-premise vantage point.
     * 
     */
    @Import(name="onPremiseVantagePointId", required=true)
    private Output<String> onPremiseVantagePointId;

    /**
     * @return The OCID of the On-premise vantage point.
     * 
     */
    public Output<String> onPremiseVantagePointId() {
        return this.onPremiseVantagePointId;
    }

    /**
     * A filter to return only On-premise VP workers that match the status given.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return A filter to return only On-premise VP workers that match the status given.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetOnPremiseVantagePointWorkersArgs() {}

    private GetOnPremiseVantagePointWorkersArgs(GetOnPremiseVantagePointWorkersArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.capability = $.capability;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.name = $.name;
        this.onPremiseVantagePointId = $.onPremiseVantagePointId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOnPremiseVantagePointWorkersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOnPremiseVantagePointWorkersArgs $;

        public Builder() {
            $ = new GetOnPremiseVantagePointWorkersArgs();
        }

        public Builder(GetOnPremiseVantagePointWorkersArgs defaults) {
            $ = new GetOnPremiseVantagePointWorkersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(Output<String> apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param apmDomainId The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            return apmDomainId(Output.of(apmDomainId));
        }

        /**
         * @param capability A filter to return only On-premise VP workers that match the capability given.
         * 
         * @return builder
         * 
         */
        public Builder capability(@Nullable Output<String> capability) {
            $.capability = capability;
            return this;
        }

        /**
         * @param capability A filter to return only On-premise VP workers that match the capability given.
         * 
         * @return builder
         * 
         */
        public Builder capability(String capability) {
            return capability(Output.of(capability));
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetOnPremiseVantagePointWorkersFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetOnPremiseVantagePointWorkersFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetOnPremiseVantagePointWorkersFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter to return only the resources that match the entire name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return only the resources that match the entire name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param onPremiseVantagePointId The OCID of the On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder onPremiseVantagePointId(Output<String> onPremiseVantagePointId) {
            $.onPremiseVantagePointId = onPremiseVantagePointId;
            return this;
        }

        /**
         * @param onPremiseVantagePointId The OCID of the On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder onPremiseVantagePointId(String onPremiseVantagePointId) {
            return onPremiseVantagePointId(Output.of(onPremiseVantagePointId));
        }

        /**
         * @param status A filter to return only On-premise VP workers that match the status given.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status A filter to return only On-premise VP workers that match the status given.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetOnPremiseVantagePointWorkersArgs build() {
            if ($.apmDomainId == null) {
                throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersArgs", "apmDomainId");
            }
            if ($.onPremiseVantagePointId == null) {
                throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersArgs", "onPremiseVantagePointId");
            }
            return $;
        }
    }

}
