// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnPremiseVantagePointWorkerMonitorListArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnPremiseVantagePointWorkerMonitorListArgs Empty = new OnPremiseVantagePointWorkerMonitorListArgs();

    /**
     * Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * If isRunNow is enabled, then the monitor will run immediately.
     * 
     */
    @Import(name="isRunNow")
    private @Nullable Output<Boolean> isRunNow;

    /**
     * @return If isRunNow is enabled, then the monitor will run immediately.
     * 
     */
    public Optional<Output<Boolean>> isRunNow() {
        return Optional.ofNullable(this.isRunNow);
    }

    /**
     * Type of monitor.
     * 
     */
    @Import(name="monitorType")
    private @Nullable Output<String> monitorType;

    /**
     * @return Type of monitor.
     * 
     */
    public Optional<Output<String>> monitorType() {
        return Optional.ofNullable(this.monitorType);
    }

    /**
     * The time the resource was last assigned to an On-premise vantage point worker, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    @Import(name="timeAssigned")
    private @Nullable Output<String> timeAssigned;

    /**
     * @return The time the resource was last assigned to an On-premise vantage point worker, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    public Optional<Output<String>> timeAssigned() {
        return Optional.ofNullable(this.timeAssigned);
    }

    private OnPremiseVantagePointWorkerMonitorListArgs() {}

    private OnPremiseVantagePointWorkerMonitorListArgs(OnPremiseVantagePointWorkerMonitorListArgs $) {
        this.displayName = $.displayName;
        this.id = $.id;
        this.isRunNow = $.isRunNow;
        this.monitorType = $.monitorType;
        this.timeAssigned = $.timeAssigned;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnPremiseVantagePointWorkerMonitorListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnPremiseVantagePointWorkerMonitorListArgs $;

        public Builder() {
            $ = new OnPremiseVantagePointWorkerMonitorListArgs();
        }

        public Builder(OnPremiseVantagePointWorkerMonitorListArgs defaults) {
            $ = new OnPremiseVantagePointWorkerMonitorListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName Unique name that can be edited. The name should not contain any confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Unique name that can be edited. The name should not contain any confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param isRunNow If isRunNow is enabled, then the monitor will run immediately.
         * 
         * @return builder
         * 
         */
        public Builder isRunNow(@Nullable Output<Boolean> isRunNow) {
            $.isRunNow = isRunNow;
            return this;
        }

        /**
         * @param isRunNow If isRunNow is enabled, then the monitor will run immediately.
         * 
         * @return builder
         * 
         */
        public Builder isRunNow(Boolean isRunNow) {
            return isRunNow(Output.of(isRunNow));
        }

        /**
         * @param monitorType Type of monitor.
         * 
         * @return builder
         * 
         */
        public Builder monitorType(@Nullable Output<String> monitorType) {
            $.monitorType = monitorType;
            return this;
        }

        /**
         * @param monitorType Type of monitor.
         * 
         * @return builder
         * 
         */
        public Builder monitorType(String monitorType) {
            return monitorType(Output.of(monitorType));
        }

        /**
         * @param timeAssigned The time the resource was last assigned to an On-premise vantage point worker, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         * 
         * @return builder
         * 
         */
        public Builder timeAssigned(@Nullable Output<String> timeAssigned) {
            $.timeAssigned = timeAssigned;
            return this;
        }

        /**
         * @param timeAssigned The time the resource was last assigned to an On-premise vantage point worker, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
         * 
         * @return builder
         * 
         */
        public Builder timeAssigned(String timeAssigned) {
            return timeAssigned(Output.of(timeAssigned));
        }

        public OnPremiseVantagePointWorkerMonitorListArgs build() {
            return $;
        }
    }

}
