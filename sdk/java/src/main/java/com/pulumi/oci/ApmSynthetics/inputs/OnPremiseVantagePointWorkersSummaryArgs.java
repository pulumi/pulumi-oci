// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApmSynthetics.inputs.OnPremiseVantagePointWorkersSummaryAvailableCapabilityArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnPremiseVantagePointWorkersSummaryArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnPremiseVantagePointWorkersSummaryArgs Empty = new OnPremiseVantagePointWorkersSummaryArgs();

    /**
     * Number of available workers in a specific On-premise vantage point.
     * 
     */
    @Import(name="available")
    private @Nullable Output<Integer> available;

    /**
     * @return Number of available workers in a specific On-premise vantage point.
     * 
     */
    public Optional<Output<Integer>> available() {
        return Optional.ofNullable(this.available);
    }

    /**
     * List of available capabilities in a specific On-premise vantage point.
     * 
     */
    @Import(name="availableCapabilities")
    private @Nullable Output<List<OnPremiseVantagePointWorkersSummaryAvailableCapabilityArgs>> availableCapabilities;

    /**
     * @return List of available capabilities in a specific On-premise vantage point.
     * 
     */
    public Optional<Output<List<OnPremiseVantagePointWorkersSummaryAvailableCapabilityArgs>>> availableCapabilities() {
        return Optional.ofNullable(this.availableCapabilities);
    }

    /**
     * Number of disabled workers in a specific On-premise vantage point.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Integer> disabled;

    /**
     * @return Number of disabled workers in a specific On-premise vantage point.
     * 
     */
    public Optional<Output<Integer>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Minimum version among the workers in a specific On-premise vantage point.
     * 
     */
    @Import(name="minVersion")
    private @Nullable Output<String> minVersion;

    /**
     * @return Minimum version among the workers in a specific On-premise vantage point.
     * 
     */
    public Optional<Output<String>> minVersion() {
        return Optional.ofNullable(this.minVersion);
    }

    /**
     * Total number of workers in a specific On-premise vantage point.
     * 
     */
    @Import(name="total")
    private @Nullable Output<Integer> total;

    /**
     * @return Total number of workers in a specific On-premise vantage point.
     * 
     */
    public Optional<Output<Integer>> total() {
        return Optional.ofNullable(this.total);
    }

    /**
     * Number of occupied workers in a specific On-premise vantage point.
     * 
     */
    @Import(name="used")
    private @Nullable Output<Integer> used;

    /**
     * @return Number of occupied workers in a specific On-premise vantage point.
     * 
     */
    public Optional<Output<Integer>> used() {
        return Optional.ofNullable(this.used);
    }

    private OnPremiseVantagePointWorkersSummaryArgs() {}

    private OnPremiseVantagePointWorkersSummaryArgs(OnPremiseVantagePointWorkersSummaryArgs $) {
        this.available = $.available;
        this.availableCapabilities = $.availableCapabilities;
        this.disabled = $.disabled;
        this.minVersion = $.minVersion;
        this.total = $.total;
        this.used = $.used;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnPremiseVantagePointWorkersSummaryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnPremiseVantagePointWorkersSummaryArgs $;

        public Builder() {
            $ = new OnPremiseVantagePointWorkersSummaryArgs();
        }

        public Builder(OnPremiseVantagePointWorkersSummaryArgs defaults) {
            $ = new OnPremiseVantagePointWorkersSummaryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param available Number of available workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder available(@Nullable Output<Integer> available) {
            $.available = available;
            return this;
        }

        /**
         * @param available Number of available workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder available(Integer available) {
            return available(Output.of(available));
        }

        /**
         * @param availableCapabilities List of available capabilities in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder availableCapabilities(@Nullable Output<List<OnPremiseVantagePointWorkersSummaryAvailableCapabilityArgs>> availableCapabilities) {
            $.availableCapabilities = availableCapabilities;
            return this;
        }

        /**
         * @param availableCapabilities List of available capabilities in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder availableCapabilities(List<OnPremiseVantagePointWorkersSummaryAvailableCapabilityArgs> availableCapabilities) {
            return availableCapabilities(Output.of(availableCapabilities));
        }

        /**
         * @param availableCapabilities List of available capabilities in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder availableCapabilities(OnPremiseVantagePointWorkersSummaryAvailableCapabilityArgs... availableCapabilities) {
            return availableCapabilities(List.of(availableCapabilities));
        }

        /**
         * @param disabled Number of disabled workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Integer> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Number of disabled workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Integer disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param minVersion Minimum version among the workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder minVersion(@Nullable Output<String> minVersion) {
            $.minVersion = minVersion;
            return this;
        }

        /**
         * @param minVersion Minimum version among the workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder minVersion(String minVersion) {
            return minVersion(Output.of(minVersion));
        }

        /**
         * @param total Total number of workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder total(@Nullable Output<Integer> total) {
            $.total = total;
            return this;
        }

        /**
         * @param total Total number of workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder total(Integer total) {
            return total(Output.of(total));
        }

        /**
         * @param used Number of occupied workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder used(@Nullable Output<Integer> used) {
            $.used = used;
            return this;
        }

        /**
         * @param used Number of occupied workers in a specific On-premise vantage point.
         * 
         * @return builder
         * 
         */
        public Builder used(Integer used) {
            return used(Output.of(used));
        }

        public OnPremiseVantagePointWorkersSummaryArgs build() {
            return $;
        }
    }

}
