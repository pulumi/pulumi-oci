// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigAvailabilityConfiguration {
    /**
     * @return (Updatable) Intervals with failed runs more than this value will be classified as UNAVAILABLE.
     * 
     */
    private @Nullable Integer maxAllowedFailuresPerInterval;
    /**
     * @return (Updatable) Intervals with runs less than this value will be classified as UNKNOWN and excluded from the availability calculations.
     * 
     */
    private @Nullable Integer minAllowedRunsPerInterval;

    private ConfigAvailabilityConfiguration() {}
    /**
     * @return (Updatable) Intervals with failed runs more than this value will be classified as UNAVAILABLE.
     * 
     */
    public Optional<Integer> maxAllowedFailuresPerInterval() {
        return Optional.ofNullable(this.maxAllowedFailuresPerInterval);
    }
    /**
     * @return (Updatable) Intervals with runs less than this value will be classified as UNKNOWN and excluded from the availability calculations.
     * 
     */
    public Optional<Integer> minAllowedRunsPerInterval() {
        return Optional.ofNullable(this.minAllowedRunsPerInterval);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigAvailabilityConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxAllowedFailuresPerInterval;
        private @Nullable Integer minAllowedRunsPerInterval;
        public Builder() {}
        public Builder(ConfigAvailabilityConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxAllowedFailuresPerInterval = defaults.maxAllowedFailuresPerInterval;
    	      this.minAllowedRunsPerInterval = defaults.minAllowedRunsPerInterval;
        }

        @CustomType.Setter
        public Builder maxAllowedFailuresPerInterval(@Nullable Integer maxAllowedFailuresPerInterval) {
            this.maxAllowedFailuresPerInterval = maxAllowedFailuresPerInterval;
            return this;
        }
        @CustomType.Setter
        public Builder minAllowedRunsPerInterval(@Nullable Integer minAllowedRunsPerInterval) {
            this.minAllowedRunsPerInterval = minAllowedRunsPerInterval;
            return this;
        }
        public ConfigAvailabilityConfiguration build() {
            final var _resultValue = new ConfigAvailabilityConfiguration();
            _resultValue.maxAllowedFailuresPerInterval = maxAllowedFailuresPerInterval;
            _resultValue.minAllowedRunsPerInterval = minAllowedRunsPerInterval;
            return _resultValue;
        }
    }
}
