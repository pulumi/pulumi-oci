// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigConfigurationDatabaseAuthenticationDetailsPassword {
    /**
     * @return (Updatable) Password.
     * 
     */
    private @Nullable String password;
    /**
     * @return (Updatable) Type of method to pass password.
     * 
     */
    private @Nullable String passwordType;
    /**
     * @return (Updatable) Vault secret OCID.
     * 
     */
    private @Nullable String vaultSecretId;

    private ConfigConfigurationDatabaseAuthenticationDetailsPassword() {}
    /**
     * @return (Updatable) Password.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return (Updatable) Type of method to pass password.
     * 
     */
    public Optional<String> passwordType() {
        return Optional.ofNullable(this.passwordType);
    }
    /**
     * @return (Updatable) Vault secret OCID.
     * 
     */
    public Optional<String> vaultSecretId() {
        return Optional.ofNullable(this.vaultSecretId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigConfigurationDatabaseAuthenticationDetailsPassword defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String password;
        private @Nullable String passwordType;
        private @Nullable String vaultSecretId;
        public Builder() {}
        public Builder(ConfigConfigurationDatabaseAuthenticationDetailsPassword defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.passwordType = defaults.passwordType;
    	      this.vaultSecretId = defaults.vaultSecretId;
        }

        @CustomType.Setter
        public Builder password(@Nullable String password) {

            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder passwordType(@Nullable String passwordType) {

            this.passwordType = passwordType;
            return this;
        }
        @CustomType.Setter
        public Builder vaultSecretId(@Nullable String vaultSecretId) {

            this.vaultSecretId = vaultSecretId;
            return this;
        }
        public ConfigConfigurationDatabaseAuthenticationDetailsPassword build() {
            final var _resultValue = new ConfigConfigurationDatabaseAuthenticationDetailsPassword();
            _resultValue.password = password;
            _resultValue.passwordType = passwordType;
            _resultValue.vaultSecretId = vaultSecretId;
            return _resultValue;
        }
    }
}
