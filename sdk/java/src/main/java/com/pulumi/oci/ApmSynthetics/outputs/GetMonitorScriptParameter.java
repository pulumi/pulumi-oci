// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.GetMonitorScriptParameterMonitorScriptParameter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMonitorScriptParameter {
    /**
     * @return If parameter value is default or overwritten.
     * 
     */
    private @Nullable Boolean isOverwritten;
    /**
     * @return Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
     * 
     */
    private @Nullable Boolean isSecret;
    /**
     * @return Details of the script parameter that can be used to overwrite the parameter present in the script.
     * 
     */
    private @Nullable List<GetMonitorScriptParameterMonitorScriptParameter> monitorScriptParameters;
    /**
     * @return Name of the parameter.
     * 
     */
    private @Nullable String paramName;
    /**
     * @return Value of the parameter.
     * 
     */
    private @Nullable String paramValue;

    private GetMonitorScriptParameter() {}
    /**
     * @return If parameter value is default or overwritten.
     * 
     */
    public Optional<Boolean> isOverwritten() {
        return Optional.ofNullable(this.isOverwritten);
    }
    /**
     * @return Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
     * 
     */
    public Optional<Boolean> isSecret() {
        return Optional.ofNullable(this.isSecret);
    }
    /**
     * @return Details of the script parameter that can be used to overwrite the parameter present in the script.
     * 
     */
    public List<GetMonitorScriptParameterMonitorScriptParameter> monitorScriptParameters() {
        return this.monitorScriptParameters == null ? List.of() : this.monitorScriptParameters;
    }
    /**
     * @return Name of the parameter.
     * 
     */
    public Optional<String> paramName() {
        return Optional.ofNullable(this.paramName);
    }
    /**
     * @return Value of the parameter.
     * 
     */
    public Optional<String> paramValue() {
        return Optional.ofNullable(this.paramValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorScriptParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isOverwritten;
        private @Nullable Boolean isSecret;
        private @Nullable List<GetMonitorScriptParameterMonitorScriptParameter> monitorScriptParameters;
        private @Nullable String paramName;
        private @Nullable String paramValue;
        public Builder() {}
        public Builder(GetMonitorScriptParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isOverwritten = defaults.isOverwritten;
    	      this.isSecret = defaults.isSecret;
    	      this.monitorScriptParameters = defaults.monitorScriptParameters;
    	      this.paramName = defaults.paramName;
    	      this.paramValue = defaults.paramValue;
        }

        @CustomType.Setter
        public Builder isOverwritten(@Nullable Boolean isOverwritten) {
            this.isOverwritten = isOverwritten;
            return this;
        }
        @CustomType.Setter
        public Builder isSecret(@Nullable Boolean isSecret) {
            this.isSecret = isSecret;
            return this;
        }
        @CustomType.Setter
        public Builder monitorScriptParameters(@Nullable List<GetMonitorScriptParameterMonitorScriptParameter> monitorScriptParameters) {
            this.monitorScriptParameters = monitorScriptParameters;
            return this;
        }
        public Builder monitorScriptParameters(GetMonitorScriptParameterMonitorScriptParameter... monitorScriptParameters) {
            return monitorScriptParameters(List.of(monitorScriptParameters));
        }
        @CustomType.Setter
        public Builder paramName(@Nullable String paramName) {
            this.paramName = paramName;
            return this;
        }
        @CustomType.Setter
        public Builder paramValue(@Nullable String paramValue) {
            this.paramValue = paramValue;
            return this;
        }
        public GetMonitorScriptParameter build() {
            final var o = new GetMonitorScriptParameter();
            o.isOverwritten = isOverwritten;
            o.isSecret = isSecret;
            o.monitorScriptParameters = monitorScriptParameters;
            o.paramName = paramName;
            o.paramValue = paramValue;
            return o;
        }
    }
}
