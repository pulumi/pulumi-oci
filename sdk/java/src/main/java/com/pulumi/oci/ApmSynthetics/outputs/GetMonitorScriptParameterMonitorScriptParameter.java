// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMonitorScriptParameterMonitorScriptParameter {
    /**
     * @return Name of the parameter.
     * 
     */
    private String paramName;
    /**
     * @return Value of the parameter.
     * 
     */
    private String paramValue;

    private GetMonitorScriptParameterMonitorScriptParameter() {}
    /**
     * @return Name of the parameter.
     * 
     */
    public String paramName() {
        return this.paramName;
    }
    /**
     * @return Value of the parameter.
     * 
     */
    public String paramValue() {
        return this.paramValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorScriptParameterMonitorScriptParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String paramName;
        private String paramValue;
        public Builder() {}
        public Builder(GetMonitorScriptParameterMonitorScriptParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.paramName = defaults.paramName;
    	      this.paramValue = defaults.paramValue;
        }

        @CustomType.Setter
        public Builder paramName(String paramName) {
            if (paramName == null) {
              throw new MissingRequiredPropertyException("GetMonitorScriptParameterMonitorScriptParameter", "paramName");
            }
            this.paramName = paramName;
            return this;
        }
        @CustomType.Setter
        public Builder paramValue(String paramValue) {
            if (paramValue == null) {
              throw new MissingRequiredPropertyException("GetMonitorScriptParameterMonitorScriptParameter", "paramValue");
            }
            this.paramValue = paramValue;
            return this;
        }
        public GetMonitorScriptParameterMonitorScriptParameter build() {
            final var _resultValue = new GetMonitorScriptParameterMonitorScriptParameter();
            _resultValue.paramName = paramName;
            _resultValue.paramValue = paramValue;
            return _resultValue;
        }
    }
}
