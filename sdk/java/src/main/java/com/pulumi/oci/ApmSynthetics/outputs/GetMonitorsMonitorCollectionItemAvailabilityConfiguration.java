// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMonitorsMonitorCollectionItemAvailabilityConfiguration {
    /**
     * @return Maximum number of failed runs allowed in an interval. If an interval has more failed runs than the specified value, then the interval will be classified as UNAVAILABLE.
     * 
     */
    private @Nullable Integer maxAllowedFailuresPerInterval;
    /**
     * @return Minimum number of runs allowed in an interval. If an interval has fewer runs than the specified value, then the interval will be classified as UNKNOWN and will be excluded from the availability calculations.
     * 
     */
    private @Nullable Integer minAllowedRunsPerInterval;

    private GetMonitorsMonitorCollectionItemAvailabilityConfiguration() {}
    /**
     * @return Maximum number of failed runs allowed in an interval. If an interval has more failed runs than the specified value, then the interval will be classified as UNAVAILABLE.
     * 
     */
    public Optional<Integer> maxAllowedFailuresPerInterval() {
        return Optional.ofNullable(this.maxAllowedFailuresPerInterval);
    }
    /**
     * @return Minimum number of runs allowed in an interval. If an interval has fewer runs than the specified value, then the interval will be classified as UNKNOWN and will be excluded from the availability calculations.
     * 
     */
    public Optional<Integer> minAllowedRunsPerInterval() {
        return Optional.ofNullable(this.minAllowedRunsPerInterval);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorsMonitorCollectionItemAvailabilityConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxAllowedFailuresPerInterval;
        private @Nullable Integer minAllowedRunsPerInterval;
        public Builder() {}
        public Builder(GetMonitorsMonitorCollectionItemAvailabilityConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxAllowedFailuresPerInterval = defaults.maxAllowedFailuresPerInterval;
    	      this.minAllowedRunsPerInterval = defaults.minAllowedRunsPerInterval;
        }

        @CustomType.Setter
        public Builder maxAllowedFailuresPerInterval(@Nullable Integer maxAllowedFailuresPerInterval) {
            this.maxAllowedFailuresPerInterval = maxAllowedFailuresPerInterval;
            return this;
        }
        @CustomType.Setter
        public Builder minAllowedRunsPerInterval(@Nullable Integer minAllowedRunsPerInterval) {
            this.minAllowedRunsPerInterval = minAllowedRunsPerInterval;
            return this;
        }
        public GetMonitorsMonitorCollectionItemAvailabilityConfiguration build() {
            final var o = new GetMonitorsMonitorCollectionItemAvailabilityConfiguration();
            o.maxAllowedFailuresPerInterval = maxAllowedFailuresPerInterval;
            o.minAllowedRunsPerInterval = minAllowedRunsPerInterval;
            return o;
        }
    }
}
