// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail {
    /**
     * @return The database wallet configuration zip file.
     * 
     */
    private String databaseWallet;
    /**
     * @return Service name of the database.
     * 
     */
    private String serviceName;

    private GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail() {}
    /**
     * @return The database wallet configuration zip file.
     * 
     */
    public String databaseWallet() {
        return this.databaseWallet;
    }
    /**
     * @return Service name of the database.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String databaseWallet;
        private String serviceName;
        public Builder() {}
        public Builder(GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseWallet = defaults.databaseWallet;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder databaseWallet(String databaseWallet) {
            if (databaseWallet == null) {
              throw new MissingRequiredPropertyException("GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail", "databaseWallet");
            }
            this.databaseWallet = databaseWallet;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        public GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail build() {
            final var _resultValue = new GetMonitorsMonitorCollectionItemConfigurationDatabaseWalletDetail();
            _resultValue.databaseWallet = databaseWallet;
            _resultValue.serviceName = serviceName;
            return _resultValue;
        }
    }
}
