// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.GetMonitorsFilter;
import com.pulumi.oci.ApmSynthetics.outputs.GetMonitorsMonitorCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMonitorsResult {
    private String apmDomainId;
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetMonitorsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean isMaintenanceWindowActive;
    private @Nullable Boolean isMaintenanceWindowSet;
    /**
     * @return The list of monitor_collection.
     * 
     */
    private List<GetMonitorsMonitorCollection> monitorCollections;
    /**
     * @return Type of monitor.
     * 
     */
    private @Nullable String monitorType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    private @Nullable String scriptId;
    /**
     * @return Enables or disables the monitor.
     * 
     */
    private @Nullable String status;
    private @Nullable String vantagePoint;

    private GetMonitorsResult() {}
    public String apmDomainId() {
        return this.apmDomainId;
    }
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetMonitorsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> isMaintenanceWindowActive() {
        return Optional.ofNullable(this.isMaintenanceWindowActive);
    }
    public Optional<Boolean> isMaintenanceWindowSet() {
        return Optional.ofNullable(this.isMaintenanceWindowSet);
    }
    /**
     * @return The list of monitor_collection.
     * 
     */
    public List<GetMonitorsMonitorCollection> monitorCollections() {
        return this.monitorCollections;
    }
    /**
     * @return Type of monitor.
     * 
     */
    public Optional<String> monitorType() {
        return Optional.ofNullable(this.monitorType);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    public Optional<String> scriptId() {
        return Optional.ofNullable(this.scriptId);
    }
    /**
     * @return Enables or disables the monitor.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> vantagePoint() {
        return Optional.ofNullable(this.vantagePoint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apmDomainId;
        private @Nullable String displayName;
        private @Nullable List<GetMonitorsFilter> filters;
        private String id;
        private @Nullable Boolean isMaintenanceWindowActive;
        private @Nullable Boolean isMaintenanceWindowSet;
        private List<GetMonitorsMonitorCollection> monitorCollections;
        private @Nullable String monitorType;
        private @Nullable String scriptId;
        private @Nullable String status;
        private @Nullable String vantagePoint;
        public Builder() {}
        public Builder(GetMonitorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apmDomainId = defaults.apmDomainId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isMaintenanceWindowActive = defaults.isMaintenanceWindowActive;
    	      this.isMaintenanceWindowSet = defaults.isMaintenanceWindowSet;
    	      this.monitorCollections = defaults.monitorCollections;
    	      this.monitorType = defaults.monitorType;
    	      this.scriptId = defaults.scriptId;
    	      this.status = defaults.status;
    	      this.vantagePoint = defaults.vantagePoint;
        }

        @CustomType.Setter
        public Builder apmDomainId(String apmDomainId) {
            this.apmDomainId = Objects.requireNonNull(apmDomainId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMonitorsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMonitorsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isMaintenanceWindowActive(@Nullable Boolean isMaintenanceWindowActive) {
            this.isMaintenanceWindowActive = isMaintenanceWindowActive;
            return this;
        }
        @CustomType.Setter
        public Builder isMaintenanceWindowSet(@Nullable Boolean isMaintenanceWindowSet) {
            this.isMaintenanceWindowSet = isMaintenanceWindowSet;
            return this;
        }
        @CustomType.Setter
        public Builder monitorCollections(List<GetMonitorsMonitorCollection> monitorCollections) {
            this.monitorCollections = Objects.requireNonNull(monitorCollections);
            return this;
        }
        public Builder monitorCollections(GetMonitorsMonitorCollection... monitorCollections) {
            return monitorCollections(List.of(monitorCollections));
        }
        @CustomType.Setter
        public Builder monitorType(@Nullable String monitorType) {
            this.monitorType = monitorType;
            return this;
        }
        @CustomType.Setter
        public Builder scriptId(@Nullable String scriptId) {
            this.scriptId = scriptId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder vantagePoint(@Nullable String vantagePoint) {
            this.vantagePoint = vantagePoint;
            return this;
        }
        public GetMonitorsResult build() {
            final var _resultValue = new GetMonitorsResult();
            _resultValue.apmDomainId = apmDomainId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isMaintenanceWindowActive = isMaintenanceWindowActive;
            _resultValue.isMaintenanceWindowSet = isMaintenanceWindowSet;
            _resultValue.monitorCollections = monitorCollections;
            _resultValue.monitorType = monitorType;
            _resultValue.scriptId = scriptId;
            _resultValue.status = status;
            _resultValue.vantagePoint = vantagePoint;
            return _resultValue;
        }
    }
}
