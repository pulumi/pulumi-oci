// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApmSynthetics.outputs.GetOnPremiseVantagePointWorkersSummaryAvailableCapability;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOnPremiseVantagePointWorkersSummary {
    /**
     * @return Number of available workers in a specific On-premise vantage point.
     * 
     */
    private Integer available;
    /**
     * @return List of available capabilities in a specific On-premise vantage point.
     * 
     */
    private List<GetOnPremiseVantagePointWorkersSummaryAvailableCapability> availableCapabilities;
    /**
     * @return Number of disabled workers in a specific On-premise vantage point.
     * 
     */
    private Integer disabled;
    /**
     * @return Minimum version among the workers in a specific On-premise vantage point.
     * 
     */
    private String minVersion;
    /**
     * @return Total number of workers in a specific On-premise vantage point.
     * 
     */
    private Integer total;
    /**
     * @return Number of occupied workers in a specific On-premise vantage point.
     * 
     */
    private Integer used;

    private GetOnPremiseVantagePointWorkersSummary() {}
    /**
     * @return Number of available workers in a specific On-premise vantage point.
     * 
     */
    public Integer available() {
        return this.available;
    }
    /**
     * @return List of available capabilities in a specific On-premise vantage point.
     * 
     */
    public List<GetOnPremiseVantagePointWorkersSummaryAvailableCapability> availableCapabilities() {
        return this.availableCapabilities;
    }
    /**
     * @return Number of disabled workers in a specific On-premise vantage point.
     * 
     */
    public Integer disabled() {
        return this.disabled;
    }
    /**
     * @return Minimum version among the workers in a specific On-premise vantage point.
     * 
     */
    public String minVersion() {
        return this.minVersion;
    }
    /**
     * @return Total number of workers in a specific On-premise vantage point.
     * 
     */
    public Integer total() {
        return this.total;
    }
    /**
     * @return Number of occupied workers in a specific On-premise vantage point.
     * 
     */
    public Integer used() {
        return this.used;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOnPremiseVantagePointWorkersSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer available;
        private List<GetOnPremiseVantagePointWorkersSummaryAvailableCapability> availableCapabilities;
        private Integer disabled;
        private String minVersion;
        private Integer total;
        private Integer used;
        public Builder() {}
        public Builder(GetOnPremiseVantagePointWorkersSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.available = defaults.available;
    	      this.availableCapabilities = defaults.availableCapabilities;
    	      this.disabled = defaults.disabled;
    	      this.minVersion = defaults.minVersion;
    	      this.total = defaults.total;
    	      this.used = defaults.used;
        }

        @CustomType.Setter
        public Builder available(Integer available) {
            if (available == null) {
              throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersSummary", "available");
            }
            this.available = available;
            return this;
        }
        @CustomType.Setter
        public Builder availableCapabilities(List<GetOnPremiseVantagePointWorkersSummaryAvailableCapability> availableCapabilities) {
            if (availableCapabilities == null) {
              throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersSummary", "availableCapabilities");
            }
            this.availableCapabilities = availableCapabilities;
            return this;
        }
        public Builder availableCapabilities(GetOnPremiseVantagePointWorkersSummaryAvailableCapability... availableCapabilities) {
            return availableCapabilities(List.of(availableCapabilities));
        }
        @CustomType.Setter
        public Builder disabled(Integer disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersSummary", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder minVersion(String minVersion) {
            if (minVersion == null) {
              throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersSummary", "minVersion");
            }
            this.minVersion = minVersion;
            return this;
        }
        @CustomType.Setter
        public Builder total(Integer total) {
            if (total == null) {
              throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersSummary", "total");
            }
            this.total = total;
            return this;
        }
        @CustomType.Setter
        public Builder used(Integer used) {
            if (used == null) {
              throw new MissingRequiredPropertyException("GetOnPremiseVantagePointWorkersSummary", "used");
            }
            this.used = used;
            return this;
        }
        public GetOnPremiseVantagePointWorkersSummary build() {
            final var _resultValue = new GetOnPremiseVantagePointWorkersSummary();
            _resultValue.available = available;
            _resultValue.availableCapabilities = availableCapabilities;
            _resultValue.disabled = disabled;
            _resultValue.minVersion = minVersion;
            _resultValue.total = total;
            _resultValue.used = used;
            return _resultValue;
        }
    }
}
