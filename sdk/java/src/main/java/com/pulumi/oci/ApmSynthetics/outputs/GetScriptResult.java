// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.GetScriptMonitorStatusCountMap;
import com.pulumi.oci.ApmSynthetics.outputs.GetScriptParameter;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetScriptResult {
    private String apmDomainId;
    /**
     * @return The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `&lt;ORAP&gt;&lt;ON&gt;param name&lt;/ON&gt;&lt;OV&gt;param value&lt;/OV&gt;&lt;OS&gt;isParamValueSecret(true/false)&lt;/OS&gt;&lt;/ORAP&gt;`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `&lt;ORAP&gt;&lt;ON&gt;param name&lt;/ON&gt;&lt;/ORAP&gt;` With parameter name and value : `&lt;ORAP&gt;&lt;ON&gt;param name&lt;/ON&gt;&lt;OV&gt;param value&lt;/OV&gt;&lt;/ORAP&gt;` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
     * 
     */
    private @Nullable String content;
    /**
     * @return File name of the uploaded script content.
     * 
     */
    private @Nullable String contentFileName;
    /**
     * @return Size of the script content.
     * 
     */
    private @Nullable Integer contentSizeInBytes;
    /**
     * @return Content type of the script.
     * 
     */
    private @Nullable String contentType;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    private @Nullable String id;
    /**
     * @return Details of the monitor count per state. Example: `{ &#34;total&#34; : 5, &#34;enabled&#34; : 3 , &#34;disabled&#34; : 2, &#34;invalid&#34; : 0 }`
     * 
     */
    private @Nullable List<GetScriptMonitorStatusCountMap> monitorStatusCountMaps;
    /**
     * @return List of script parameters. Example: `[{&#34;scriptParameter&#34;: {&#34;paramName&#34;: &#34;userid&#34;, &#34;paramValue&#34;:&#34;testuser&#34;, &#34;isSecret&#34;: false}, &#34;isOverwritten&#34;: false}]`
     * 
     */
    private @Nullable List<GetScriptParameter> parameters;
    private String scriptId;
    /**
     * @return The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The time the script was uploaded.
     * 
     */
    private @Nullable String timeUploaded;

    private GetScriptResult() {}
    public String apmDomainId() {
        return this.apmDomainId;
    }
    /**
     * @return The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `&lt;ORAP&gt;&lt;ON&gt;param name&lt;/ON&gt;&lt;OV&gt;param value&lt;/OV&gt;&lt;OS&gt;isParamValueSecret(true/false)&lt;/OS&gt;&lt;/ORAP&gt;`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `&lt;ORAP&gt;&lt;ON&gt;param name&lt;/ON&gt;&lt;/ORAP&gt;` With parameter name and value : `&lt;ORAP&gt;&lt;ON&gt;param name&lt;/ON&gt;&lt;OV&gt;param value&lt;/OV&gt;&lt;/ORAP&gt;` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
     * 
     */
    public Optional<String> content() {
        return Optional.ofNullable(this.content);
    }
    /**
     * @return File name of the uploaded script content.
     * 
     */
    public Optional<String> contentFileName() {
        return Optional.ofNullable(this.contentFileName);
    }
    /**
     * @return Size of the script content.
     * 
     */
    public Optional<Integer> contentSizeInBytes() {
        return Optional.ofNullable(this.contentSizeInBytes);
    }
    /**
     * @return Content type of the script.
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Details of the monitor count per state. Example: `{ &#34;total&#34; : 5, &#34;enabled&#34; : 3 , &#34;disabled&#34; : 2, &#34;invalid&#34; : 0 }`
     * 
     */
    public List<GetScriptMonitorStatusCountMap> monitorStatusCountMaps() {
        return this.monitorStatusCountMaps == null ? List.of() : this.monitorStatusCountMaps;
    }
    /**
     * @return List of script parameters. Example: `[{&#34;scriptParameter&#34;: {&#34;paramName&#34;: &#34;userid&#34;, &#34;paramValue&#34;:&#34;testuser&#34;, &#34;isSecret&#34;: false}, &#34;isOverwritten&#34;: false}]`
     * 
     */
    public List<GetScriptParameter> parameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    public String scriptId() {
        return this.scriptId;
    }
    /**
     * @return The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The time the script was uploaded.
     * 
     */
    public Optional<String> timeUploaded() {
        return Optional.ofNullable(this.timeUploaded);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScriptResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apmDomainId;
        private @Nullable String content;
        private @Nullable String contentFileName;
        private @Nullable Integer contentSizeInBytes;
        private @Nullable String contentType;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetScriptMonitorStatusCountMap> monitorStatusCountMaps;
        private @Nullable List<GetScriptParameter> parameters;
        private String scriptId;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String timeUploaded;
        public Builder() {}
        public Builder(GetScriptResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apmDomainId = defaults.apmDomainId;
    	      this.content = defaults.content;
    	      this.contentFileName = defaults.contentFileName;
    	      this.contentSizeInBytes = defaults.contentSizeInBytes;
    	      this.contentType = defaults.contentType;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.monitorStatusCountMaps = defaults.monitorStatusCountMaps;
    	      this.parameters = defaults.parameters;
    	      this.scriptId = defaults.scriptId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timeUploaded = defaults.timeUploaded;
        }

        @CustomType.Setter
        public Builder apmDomainId(String apmDomainId) {
            this.apmDomainId = Objects.requireNonNull(apmDomainId);
            return this;
        }
        @CustomType.Setter
        public Builder content(@Nullable String content) {
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder contentFileName(@Nullable String contentFileName) {
            this.contentFileName = contentFileName;
            return this;
        }
        @CustomType.Setter
        public Builder contentSizeInBytes(@Nullable Integer contentSizeInBytes) {
            this.contentSizeInBytes = contentSizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder monitorStatusCountMaps(@Nullable List<GetScriptMonitorStatusCountMap> monitorStatusCountMaps) {
            this.monitorStatusCountMaps = monitorStatusCountMaps;
            return this;
        }
        public Builder monitorStatusCountMaps(GetScriptMonitorStatusCountMap... monitorStatusCountMaps) {
            return monitorStatusCountMaps(List.of(monitorStatusCountMaps));
        }
        @CustomType.Setter
        public Builder parameters(@Nullable List<GetScriptParameter> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(GetScriptParameter... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder scriptId(String scriptId) {
            this.scriptId = Objects.requireNonNull(scriptId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUploaded(@Nullable String timeUploaded) {
            this.timeUploaded = timeUploaded;
            return this;
        }
        public GetScriptResult build() {
            final var o = new GetScriptResult();
            o.apmDomainId = apmDomainId;
            o.content = content;
            o.contentFileName = contentFileName;
            o.contentSizeInBytes = contentSizeInBytes;
            o.contentType = contentType;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.monitorStatusCountMaps = monitorStatusCountMaps;
            o.parameters = parameters;
            o.scriptId = scriptId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.timeUploaded = timeUploaded;
            return o;
        }
    }
}
