// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLogArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogArgs Empty = new GetLogArgs();

    /**
     * The APM Domain ID for the intended request.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private Output<String> apmDomainId;

    /**
     * @return The APM Domain ID for the intended request.
     * 
     */
    public Output<String> apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * Log key.
     * 
     */
    @Import(name="logKey", required=true)
    private Output<String> logKey;

    /**
     * @return Log key.
     * 
     */
    public Output<String> logKey() {
        return this.logKey;
    }

    /**
     * Include logs with log time less than this value.
     * 
     */
    @Import(name="timeLogEndedLessThan", required=true)
    private Output<String> timeLogEndedLessThan;

    /**
     * @return Include logs with log time less than this value.
     * 
     */
    public Output<String> timeLogEndedLessThan() {
        return this.timeLogEndedLessThan;
    }

    /**
     * Include logs with log time equal to or greater than this value.
     * 
     */
    @Import(name="timeLogStartedGreaterThanOrEqualTo", required=true)
    private Output<String> timeLogStartedGreaterThanOrEqualTo;

    /**
     * @return Include logs with log time equal to or greater than this value.
     * 
     */
    public Output<String> timeLogStartedGreaterThanOrEqualTo() {
        return this.timeLogStartedGreaterThanOrEqualTo;
    }

    private GetLogArgs() {}

    private GetLogArgs(GetLogArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.logKey = $.logKey;
        this.timeLogEndedLessThan = $.timeLogEndedLessThan;
        this.timeLogStartedGreaterThanOrEqualTo = $.timeLogStartedGreaterThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogArgs $;

        public Builder() {
            $ = new GetLogArgs();
        }

        public Builder(GetLogArgs defaults) {
            $ = new GetLogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId The APM Domain ID for the intended request.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(Output<String> apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param apmDomainId The APM Domain ID for the intended request.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            return apmDomainId(Output.of(apmDomainId));
        }

        /**
         * @param logKey Log key.
         * 
         * @return builder
         * 
         */
        public Builder logKey(Output<String> logKey) {
            $.logKey = logKey;
            return this;
        }

        /**
         * @param logKey Log key.
         * 
         * @return builder
         * 
         */
        public Builder logKey(String logKey) {
            return logKey(Output.of(logKey));
        }

        /**
         * @param timeLogEndedLessThan Include logs with log time less than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeLogEndedLessThan(Output<String> timeLogEndedLessThan) {
            $.timeLogEndedLessThan = timeLogEndedLessThan;
            return this;
        }

        /**
         * @param timeLogEndedLessThan Include logs with log time less than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeLogEndedLessThan(String timeLogEndedLessThan) {
            return timeLogEndedLessThan(Output.of(timeLogEndedLessThan));
        }

        /**
         * @param timeLogStartedGreaterThanOrEqualTo Include logs with log time equal to or greater than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeLogStartedGreaterThanOrEqualTo(Output<String> timeLogStartedGreaterThanOrEqualTo) {
            $.timeLogStartedGreaterThanOrEqualTo = timeLogStartedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeLogStartedGreaterThanOrEqualTo Include logs with log time equal to or greater than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeLogStartedGreaterThanOrEqualTo(String timeLogStartedGreaterThanOrEqualTo) {
            return timeLogStartedGreaterThanOrEqualTo(Output.of(timeLogStartedGreaterThanOrEqualTo));
        }

        public GetLogArgs build() {
            if ($.apmDomainId == null) {
                throw new MissingRequiredPropertyException("GetLogArgs", "apmDomainId");
            }
            if ($.logKey == null) {
                throw new MissingRequiredPropertyException("GetLogArgs", "logKey");
            }
            if ($.timeLogEndedLessThan == null) {
                throw new MissingRequiredPropertyException("GetLogArgs", "timeLogEndedLessThan");
            }
            if ($.timeLogStartedGreaterThanOrEqualTo == null) {
                throw new MissingRequiredPropertyException("GetLogArgs", "timeLogStartedGreaterThanOrEqualTo");
            }
            return $;
        }
    }

}
