// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLogPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogPlainArgs Empty = new GetLogPlainArgs();

    /**
     * The APM Domain ID for the intended request.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private String apmDomainId;

    /**
     * @return The APM Domain ID for the intended request.
     * 
     */
    public String apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * Log key.
     * 
     */
    @Import(name="logKey", required=true)
    private String logKey;

    /**
     * @return Log key.
     * 
     */
    public String logKey() {
        return this.logKey;
    }

    /**
     * Include logs with log time less than this value.
     * 
     */
    @Import(name="timeLogEndedLessThan", required=true)
    private String timeLogEndedLessThan;

    /**
     * @return Include logs with log time less than this value.
     * 
     */
    public String timeLogEndedLessThan() {
        return this.timeLogEndedLessThan;
    }

    /**
     * Include logs with log time equal to or greater than this value.
     * 
     */
    @Import(name="timeLogStartedGreaterThanOrEqualTo", required=true)
    private String timeLogStartedGreaterThanOrEqualTo;

    /**
     * @return Include logs with log time equal to or greater than this value.
     * 
     */
    public String timeLogStartedGreaterThanOrEqualTo() {
        return this.timeLogStartedGreaterThanOrEqualTo;
    }

    private GetLogPlainArgs() {}

    private GetLogPlainArgs(GetLogPlainArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.logKey = $.logKey;
        this.timeLogEndedLessThan = $.timeLogEndedLessThan;
        this.timeLogStartedGreaterThanOrEqualTo = $.timeLogStartedGreaterThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogPlainArgs $;

        public Builder() {
            $ = new GetLogPlainArgs();
        }

        public Builder(GetLogPlainArgs defaults) {
            $ = new GetLogPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId The APM Domain ID for the intended request.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param logKey Log key.
         * 
         * @return builder
         * 
         */
        public Builder logKey(String logKey) {
            $.logKey = logKey;
            return this;
        }

        /**
         * @param timeLogEndedLessThan Include logs with log time less than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeLogEndedLessThan(String timeLogEndedLessThan) {
            $.timeLogEndedLessThan = timeLogEndedLessThan;
            return this;
        }

        /**
         * @param timeLogStartedGreaterThanOrEqualTo Include logs with log time equal to or greater than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeLogStartedGreaterThanOrEqualTo(String timeLogStartedGreaterThanOrEqualTo) {
            $.timeLogStartedGreaterThanOrEqualTo = timeLogStartedGreaterThanOrEqualTo;
            return this;
        }

        public GetLogPlainArgs build() {
            if ($.apmDomainId == null) {
                throw new MissingRequiredPropertyException("GetLogPlainArgs", "apmDomainId");
            }
            if ($.logKey == null) {
                throw new MissingRequiredPropertyException("GetLogPlainArgs", "logKey");
            }
            if ($.timeLogEndedLessThan == null) {
                throw new MissingRequiredPropertyException("GetLogPlainArgs", "timeLogEndedLessThan");
            }
            if ($.timeLogStartedGreaterThanOrEqualTo == null) {
                throw new MissingRequiredPropertyException("GetLogPlainArgs", "timeLogStartedGreaterThanOrEqualTo");
            }
            return $;
        }
    }

}
