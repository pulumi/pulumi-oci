// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTracePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTracePlainArgs Empty = new GetTracePlainArgs();

    /**
     * The APM Domain ID for the intended request.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private String apmDomainId;

    /**
     * @return The APM Domain ID for the intended request.
     * 
     */
    public String apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * Include traces that have a `minTraceStartTime` equal to or greater than this value.
     * 
     */
    @Import(name="timeTraceStartedGreaterThanOrEqualTo")
    private @Nullable String timeTraceStartedGreaterThanOrEqualTo;

    /**
     * @return Include traces that have a `minTraceStartTime` equal to or greater than this value.
     * 
     */
    public Optional<String> timeTraceStartedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeTraceStartedGreaterThanOrEqualTo);
    }

    /**
     * Include traces that have a `minTraceStartTime` less than this value.
     * 
     */
    @Import(name="timeTraceStartedLessThan")
    private @Nullable String timeTraceStartedLessThan;

    /**
     * @return Include traces that have a `minTraceStartTime` less than this value.
     * 
     */
    public Optional<String> timeTraceStartedLessThan() {
        return Optional.ofNullable(this.timeTraceStartedLessThan);
    }

    /**
     * Unique Application Performance Monitoring trace identifier (traceId).
     * 
     */
    @Import(name="traceKey", required=true)
    private String traceKey;

    /**
     * @return Unique Application Performance Monitoring trace identifier (traceId).
     * 
     */
    public String traceKey() {
        return this.traceKey;
    }

    /**
     * Name space from which the trace details need to be retrieved.
     * 
     */
    @Import(name="traceNamespace")
    private @Nullable String traceNamespace;

    /**
     * @return Name space from which the trace details need to be retrieved.
     * 
     */
    public Optional<String> traceNamespace() {
        return Optional.ofNullable(this.traceNamespace);
    }

    private GetTracePlainArgs() {}

    private GetTracePlainArgs(GetTracePlainArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.timeTraceStartedGreaterThanOrEqualTo = $.timeTraceStartedGreaterThanOrEqualTo;
        this.timeTraceStartedLessThan = $.timeTraceStartedLessThan;
        this.traceKey = $.traceKey;
        this.traceNamespace = $.traceNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTracePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTracePlainArgs $;

        public Builder() {
            $ = new GetTracePlainArgs();
        }

        public Builder(GetTracePlainArgs defaults) {
            $ = new GetTracePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId The APM Domain ID for the intended request.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param timeTraceStartedGreaterThanOrEqualTo Include traces that have a `minTraceStartTime` equal to or greater than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeTraceStartedGreaterThanOrEqualTo(@Nullable String timeTraceStartedGreaterThanOrEqualTo) {
            $.timeTraceStartedGreaterThanOrEqualTo = timeTraceStartedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeTraceStartedLessThan Include traces that have a `minTraceStartTime` less than this value.
         * 
         * @return builder
         * 
         */
        public Builder timeTraceStartedLessThan(@Nullable String timeTraceStartedLessThan) {
            $.timeTraceStartedLessThan = timeTraceStartedLessThan;
            return this;
        }

        /**
         * @param traceKey Unique Application Performance Monitoring trace identifier (traceId).
         * 
         * @return builder
         * 
         */
        public Builder traceKey(String traceKey) {
            $.traceKey = traceKey;
            return this;
        }

        /**
         * @param traceNamespace Name space from which the trace details need to be retrieved.
         * 
         * @return builder
         * 
         */
        public Builder traceNamespace(@Nullable String traceNamespace) {
            $.traceNamespace = traceNamespace;
            return this;
        }

        public GetTracePlainArgs build() {
            if ($.apmDomainId == null) {
                throw new MissingRequiredPropertyException("GetTracePlainArgs", "apmDomainId");
            }
            if ($.traceKey == null) {
                throw new MissingRequiredPropertyException("GetTracePlainArgs", "traceKey");
            }
            return $;
        }
    }

}
