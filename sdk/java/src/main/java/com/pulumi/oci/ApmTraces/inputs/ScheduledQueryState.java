// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApmTraces.inputs.ScheduledQueryScheduledQueryProcessingConfigurationArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledQueryState extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryState Empty = new ScheduledQueryState();

    /**
     * (Updatable) The APM Domain ID for the intended request.
     * 
     */
    @Import(name="apmDomainId")
    private @Nullable Output<String> apmDomainId;

    /**
     * @return (Updatable) The APM Domain ID for the intended request.
     * 
     */
    public Optional<Output<String>> apmDomainId() {
        return Optional.ofNullable(this.apmDomainId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not create or modify the resource  and is used only to perform validation on the submitted data.
     * 
     */
    @Import(name="opcDryRun")
    private @Nullable Output<String> opcDryRun;

    /**
     * @return (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not create or modify the resource  and is used only to perform validation on the submitted data.
     * 
     */
    public Optional<Output<String>> opcDryRun() {
        return Optional.ofNullable(this.opcDryRun);
    }

    /**
     * (Updatable) Description for the scheduled query.
     * 
     */
    @Import(name="scheduledQueryDescription")
    private @Nullable Output<String> scheduledQueryDescription;

    /**
     * @return (Updatable) Description for the scheduled query.
     * 
     */
    public Optional<Output<String>> scheduledQueryDescription() {
        return Optional.ofNullable(this.scheduledQueryDescription);
    }

    /**
     * Scheduled query instances.
     * 
     */
    @Import(name="scheduledQueryInstances")
    private @Nullable Output<String> scheduledQueryInstances;

    /**
     * @return Scheduled query instances.
     * 
     */
    public Optional<Output<String>> scheduledQueryInstances() {
        return Optional.ofNullable(this.scheduledQueryInstances);
    }

    /**
     * (Updatable) Maximum runtime for the scheduled query in seconds.
     * 
     */
    @Import(name="scheduledQueryMaximumRuntimeInSeconds")
    private @Nullable Output<String> scheduledQueryMaximumRuntimeInSeconds;

    /**
     * @return (Updatable) Maximum runtime for the scheduled query in seconds.
     * 
     */
    public Optional<Output<String>> scheduledQueryMaximumRuntimeInSeconds() {
        return Optional.ofNullable(this.scheduledQueryMaximumRuntimeInSeconds);
    }

    /**
     * (Updatable) Name of the scheduled query.
     * 
     */
    @Import(name="scheduledQueryName")
    private @Nullable Output<String> scheduledQueryName;

    /**
     * @return (Updatable) Name of the scheduled query.
     * 
     */
    public Optional<Output<String>> scheduledQueryName() {
        return Optional.ofNullable(this.scheduledQueryName);
    }

    /**
     * Next run for the scheduled query.
     * 
     */
    @Import(name="scheduledQueryNextRunInMs")
    private @Nullable Output<String> scheduledQueryNextRunInMs;

    /**
     * @return Next run for the scheduled query.
     * 
     */
    public Optional<Output<String>> scheduledQueryNextRunInMs() {
        return Optional.ofNullable(this.scheduledQueryNextRunInMs);
    }

    /**
     * (Updatable) Definition of the scheduled query processing configuration.
     * 
     */
    @Import(name="scheduledQueryProcessingConfiguration")
    private @Nullable Output<ScheduledQueryScheduledQueryProcessingConfigurationArgs> scheduledQueryProcessingConfiguration;

    /**
     * @return (Updatable) Definition of the scheduled query processing configuration.
     * 
     */
    public Optional<Output<ScheduledQueryScheduledQueryProcessingConfigurationArgs>> scheduledQueryProcessingConfiguration() {
        return Optional.ofNullable(this.scheduledQueryProcessingConfiguration);
    }

    /**
     * (Updatable) Processing sub type of the scheduled query.
     * 
     */
    @Import(name="scheduledQueryProcessingSubType")
    private @Nullable Output<String> scheduledQueryProcessingSubType;

    /**
     * @return (Updatable) Processing sub type of the scheduled query.
     * 
     */
    public Optional<Output<String>> scheduledQueryProcessingSubType() {
        return Optional.ofNullable(this.scheduledQueryProcessingSubType);
    }

    /**
     * (Updatable) Type of the scheduled query.
     * 
     */
    @Import(name="scheduledQueryProcessingType")
    private @Nullable Output<String> scheduledQueryProcessingType;

    /**
     * @return (Updatable) Type of the scheduled query.
     * 
     */
    public Optional<Output<String>> scheduledQueryProcessingType() {
        return Optional.ofNullable(this.scheduledQueryProcessingType);
    }

    /**
     * (Updatable) Retention criteria for the scheduled query.
     * 
     */
    @Import(name="scheduledQueryRetentionCriteria")
    private @Nullable Output<String> scheduledQueryRetentionCriteria;

    /**
     * @return (Updatable) Retention criteria for the scheduled query.
     * 
     */
    public Optional<Output<String>> scheduledQueryRetentionCriteria() {
        return Optional.ofNullable(this.scheduledQueryRetentionCriteria);
    }

    /**
     * (Updatable) Retention period for the scheduled query in milliseconds.
     * 
     */
    @Import(name="scheduledQueryRetentionPeriodInMs")
    private @Nullable Output<String> scheduledQueryRetentionPeriodInMs;

    /**
     * @return (Updatable) Retention period for the scheduled query in milliseconds.
     * 
     */
    public Optional<Output<String>> scheduledQueryRetentionPeriodInMs() {
        return Optional.ofNullable(this.scheduledQueryRetentionPeriodInMs);
    }

    /**
     * (Updatable) Schedule for the scheduled query.
     * 
     */
    @Import(name="scheduledQuerySchedule")
    private @Nullable Output<String> scheduledQuerySchedule;

    /**
     * @return (Updatable) Schedule for the scheduled query.
     * 
     */
    public Optional<Output<String>> scheduledQuerySchedule() {
        return Optional.ofNullable(this.scheduledQuerySchedule);
    }

    /**
     * (Updatable) Scheduled query to be run.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="scheduledQueryText")
    private @Nullable Output<String> scheduledQueryText;

    /**
     * @return (Updatable) Scheduled query to be run.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> scheduledQueryText() {
        return Optional.ofNullable(this.scheduledQueryText);
    }

    /**
     * The current lifecycle state of the Scheduled Query.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the Scheduled Query.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    private ScheduledQueryState() {}

    private ScheduledQueryState(ScheduledQueryState $) {
        this.apmDomainId = $.apmDomainId;
        this.definedTags = $.definedTags;
        this.freeformTags = $.freeformTags;
        this.opcDryRun = $.opcDryRun;
        this.scheduledQueryDescription = $.scheduledQueryDescription;
        this.scheduledQueryInstances = $.scheduledQueryInstances;
        this.scheduledQueryMaximumRuntimeInSeconds = $.scheduledQueryMaximumRuntimeInSeconds;
        this.scheduledQueryName = $.scheduledQueryName;
        this.scheduledQueryNextRunInMs = $.scheduledQueryNextRunInMs;
        this.scheduledQueryProcessingConfiguration = $.scheduledQueryProcessingConfiguration;
        this.scheduledQueryProcessingSubType = $.scheduledQueryProcessingSubType;
        this.scheduledQueryProcessingType = $.scheduledQueryProcessingType;
        this.scheduledQueryRetentionCriteria = $.scheduledQueryRetentionCriteria;
        this.scheduledQueryRetentionPeriodInMs = $.scheduledQueryRetentionPeriodInMs;
        this.scheduledQuerySchedule = $.scheduledQuerySchedule;
        this.scheduledQueryText = $.scheduledQueryText;
        this.state = $.state;
        this.systemTags = $.systemTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryState $;

        public Builder() {
            $ = new ScheduledQueryState();
        }

        public Builder(ScheduledQueryState defaults) {
            $ = new ScheduledQueryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId (Updatable) The APM Domain ID for the intended request.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(@Nullable Output<String> apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param apmDomainId (Updatable) The APM Domain ID for the intended request.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            return apmDomainId(Output.of(apmDomainId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param opcDryRun (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not create or modify the resource  and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder opcDryRun(@Nullable Output<String> opcDryRun) {
            $.opcDryRun = opcDryRun;
            return this;
        }

        /**
         * @param opcDryRun (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not create or modify the resource  and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder opcDryRun(String opcDryRun) {
            return opcDryRun(Output.of(opcDryRun));
        }

        /**
         * @param scheduledQueryDescription (Updatable) Description for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryDescription(@Nullable Output<String> scheduledQueryDescription) {
            $.scheduledQueryDescription = scheduledQueryDescription;
            return this;
        }

        /**
         * @param scheduledQueryDescription (Updatable) Description for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryDescription(String scheduledQueryDescription) {
            return scheduledQueryDescription(Output.of(scheduledQueryDescription));
        }

        /**
         * @param scheduledQueryInstances Scheduled query instances.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryInstances(@Nullable Output<String> scheduledQueryInstances) {
            $.scheduledQueryInstances = scheduledQueryInstances;
            return this;
        }

        /**
         * @param scheduledQueryInstances Scheduled query instances.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryInstances(String scheduledQueryInstances) {
            return scheduledQueryInstances(Output.of(scheduledQueryInstances));
        }

        /**
         * @param scheduledQueryMaximumRuntimeInSeconds (Updatable) Maximum runtime for the scheduled query in seconds.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryMaximumRuntimeInSeconds(@Nullable Output<String> scheduledQueryMaximumRuntimeInSeconds) {
            $.scheduledQueryMaximumRuntimeInSeconds = scheduledQueryMaximumRuntimeInSeconds;
            return this;
        }

        /**
         * @param scheduledQueryMaximumRuntimeInSeconds (Updatable) Maximum runtime for the scheduled query in seconds.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryMaximumRuntimeInSeconds(String scheduledQueryMaximumRuntimeInSeconds) {
            return scheduledQueryMaximumRuntimeInSeconds(Output.of(scheduledQueryMaximumRuntimeInSeconds));
        }

        /**
         * @param scheduledQueryName (Updatable) Name of the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryName(@Nullable Output<String> scheduledQueryName) {
            $.scheduledQueryName = scheduledQueryName;
            return this;
        }

        /**
         * @param scheduledQueryName (Updatable) Name of the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryName(String scheduledQueryName) {
            return scheduledQueryName(Output.of(scheduledQueryName));
        }

        /**
         * @param scheduledQueryNextRunInMs Next run for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryNextRunInMs(@Nullable Output<String> scheduledQueryNextRunInMs) {
            $.scheduledQueryNextRunInMs = scheduledQueryNextRunInMs;
            return this;
        }

        /**
         * @param scheduledQueryNextRunInMs Next run for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryNextRunInMs(String scheduledQueryNextRunInMs) {
            return scheduledQueryNextRunInMs(Output.of(scheduledQueryNextRunInMs));
        }

        /**
         * @param scheduledQueryProcessingConfiguration (Updatable) Definition of the scheduled query processing configuration.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryProcessingConfiguration(@Nullable Output<ScheduledQueryScheduledQueryProcessingConfigurationArgs> scheduledQueryProcessingConfiguration) {
            $.scheduledQueryProcessingConfiguration = scheduledQueryProcessingConfiguration;
            return this;
        }

        /**
         * @param scheduledQueryProcessingConfiguration (Updatable) Definition of the scheduled query processing configuration.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryProcessingConfiguration(ScheduledQueryScheduledQueryProcessingConfigurationArgs scheduledQueryProcessingConfiguration) {
            return scheduledQueryProcessingConfiguration(Output.of(scheduledQueryProcessingConfiguration));
        }

        /**
         * @param scheduledQueryProcessingSubType (Updatable) Processing sub type of the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryProcessingSubType(@Nullable Output<String> scheduledQueryProcessingSubType) {
            $.scheduledQueryProcessingSubType = scheduledQueryProcessingSubType;
            return this;
        }

        /**
         * @param scheduledQueryProcessingSubType (Updatable) Processing sub type of the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryProcessingSubType(String scheduledQueryProcessingSubType) {
            return scheduledQueryProcessingSubType(Output.of(scheduledQueryProcessingSubType));
        }

        /**
         * @param scheduledQueryProcessingType (Updatable) Type of the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryProcessingType(@Nullable Output<String> scheduledQueryProcessingType) {
            $.scheduledQueryProcessingType = scheduledQueryProcessingType;
            return this;
        }

        /**
         * @param scheduledQueryProcessingType (Updatable) Type of the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryProcessingType(String scheduledQueryProcessingType) {
            return scheduledQueryProcessingType(Output.of(scheduledQueryProcessingType));
        }

        /**
         * @param scheduledQueryRetentionCriteria (Updatable) Retention criteria for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryRetentionCriteria(@Nullable Output<String> scheduledQueryRetentionCriteria) {
            $.scheduledQueryRetentionCriteria = scheduledQueryRetentionCriteria;
            return this;
        }

        /**
         * @param scheduledQueryRetentionCriteria (Updatable) Retention criteria for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryRetentionCriteria(String scheduledQueryRetentionCriteria) {
            return scheduledQueryRetentionCriteria(Output.of(scheduledQueryRetentionCriteria));
        }

        /**
         * @param scheduledQueryRetentionPeriodInMs (Updatable) Retention period for the scheduled query in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryRetentionPeriodInMs(@Nullable Output<String> scheduledQueryRetentionPeriodInMs) {
            $.scheduledQueryRetentionPeriodInMs = scheduledQueryRetentionPeriodInMs;
            return this;
        }

        /**
         * @param scheduledQueryRetentionPeriodInMs (Updatable) Retention period for the scheduled query in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryRetentionPeriodInMs(String scheduledQueryRetentionPeriodInMs) {
            return scheduledQueryRetentionPeriodInMs(Output.of(scheduledQueryRetentionPeriodInMs));
        }

        /**
         * @param scheduledQuerySchedule (Updatable) Schedule for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQuerySchedule(@Nullable Output<String> scheduledQuerySchedule) {
            $.scheduledQuerySchedule = scheduledQuerySchedule;
            return this;
        }

        /**
         * @param scheduledQuerySchedule (Updatable) Schedule for the scheduled query.
         * 
         * @return builder
         * 
         */
        public Builder scheduledQuerySchedule(String scheduledQuerySchedule) {
            return scheduledQuerySchedule(Output.of(scheduledQuerySchedule));
        }

        /**
         * @param scheduledQueryText (Updatable) Scheduled query to be run.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryText(@Nullable Output<String> scheduledQueryText) {
            $.scheduledQueryText = scheduledQueryText;
            return this;
        }

        /**
         * @param scheduledQueryText (Updatable) Scheduled query to be run.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder scheduledQueryText(String scheduledQueryText) {
            return scheduledQueryText(Output.of(scheduledQueryText));
        }

        /**
         * @param state The current lifecycle state of the Scheduled Query.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the Scheduled Query.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        public ScheduledQueryState build() {
            return $;
        }
    }

}
