// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetQueryQuickPicksQuickPick {
    /**
     * @return Quick Pick name for the query.
     * 
     */
    private @Nullable String quickPickName;
    /**
     * @return Query for the Quick Pick.
     * 
     */
    private @Nullable String quickPickQuery;

    private GetQueryQuickPicksQuickPick() {}
    /**
     * @return Quick Pick name for the query.
     * 
     */
    public Optional<String> quickPickName() {
        return Optional.ofNullable(this.quickPickName);
    }
    /**
     * @return Query for the Quick Pick.
     * 
     */
    public Optional<String> quickPickQuery() {
        return Optional.ofNullable(this.quickPickQuery);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueryQuickPicksQuickPick defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String quickPickName;
        private @Nullable String quickPickQuery;
        public Builder() {}
        public Builder(GetQueryQuickPicksQuickPick defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.quickPickName = defaults.quickPickName;
    	      this.quickPickQuery = defaults.quickPickQuery;
        }

        @CustomType.Setter
        public Builder quickPickName(@Nullable String quickPickName) {
            this.quickPickName = quickPickName;
            return this;
        }
        @CustomType.Setter
        public Builder quickPickQuery(@Nullable String quickPickQuery) {
            this.quickPickQuery = quickPickQuery;
            return this;
        }
        public GetQueryQuickPicksQuickPick build() {
            final var o = new GetQueryQuickPicksQuickPick();
            o.quickPickName = quickPickName;
            o.quickPickQuery = quickPickQuery;
            return o;
        }
    }
}
