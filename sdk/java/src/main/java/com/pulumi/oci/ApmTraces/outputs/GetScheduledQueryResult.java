// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ApmTraces.outputs.GetScheduledQueryScheduledQueryProcessingConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetScheduledQueryResult {
    private String apmDomainId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled query . An OCID is generated when the scheduled query is created.
     * 
     */
    private String id;
    private String opcDryRun;
    /**
     * @return Description for the scheduled query.
     * 
     */
    private String scheduledQueryDescription;
    private String scheduledQueryId;
    /**
     * @return Scheduled query instances.
     * 
     */
    private String scheduledQueryInstances;
    /**
     * @return Maximum runtime for the scheduled query in seconds.
     * 
     */
    private String scheduledQueryMaximumRuntimeInSeconds;
    /**
     * @return Name of the scheduled query.
     * 
     */
    private String scheduledQueryName;
    /**
     * @return Next run for the scheduled query.
     * 
     */
    private String scheduledQueryNextRunInMs;
    /**
     * @return Definition of the scheduled query processing configuration.
     * 
     */
    private List<GetScheduledQueryScheduledQueryProcessingConfiguration> scheduledQueryProcessingConfigurations;
    /**
     * @return Processing sub type of the scheduled query.
     * 
     */
    private String scheduledQueryProcessingSubType;
    /**
     * @return Processing type of the scheduled query.
     * 
     */
    private String scheduledQueryProcessingType;
    /**
     * @return Retention criteria for the scheduled query.
     * 
     */
    private String scheduledQueryRetentionCriteria;
    /**
     * @return Retention period for the scheduled query in milliseconds.
     * 
     */
    private String scheduledQueryRetentionPeriodInMs;
    /**
     * @return Schedule for the scheduled query.
     * 
     */
    private String scheduledQuerySchedule;
    /**
     * @return Scheduled query to be run.
     * 
     */
    private String scheduledQueryText;
    /**
     * @return The current lifecycle state of the Scheduled Query.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;

    private GetScheduledQueryResult() {}
    public String apmDomainId() {
        return this.apmDomainId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled query . An OCID is generated when the scheduled query is created.
     * 
     */
    public String id() {
        return this.id;
    }
    public String opcDryRun() {
        return this.opcDryRun;
    }
    /**
     * @return Description for the scheduled query.
     * 
     */
    public String scheduledQueryDescription() {
        return this.scheduledQueryDescription;
    }
    public String scheduledQueryId() {
        return this.scheduledQueryId;
    }
    /**
     * @return Scheduled query instances.
     * 
     */
    public String scheduledQueryInstances() {
        return this.scheduledQueryInstances;
    }
    /**
     * @return Maximum runtime for the scheduled query in seconds.
     * 
     */
    public String scheduledQueryMaximumRuntimeInSeconds() {
        return this.scheduledQueryMaximumRuntimeInSeconds;
    }
    /**
     * @return Name of the scheduled query.
     * 
     */
    public String scheduledQueryName() {
        return this.scheduledQueryName;
    }
    /**
     * @return Next run for the scheduled query.
     * 
     */
    public String scheduledQueryNextRunInMs() {
        return this.scheduledQueryNextRunInMs;
    }
    /**
     * @return Definition of the scheduled query processing configuration.
     * 
     */
    public List<GetScheduledQueryScheduledQueryProcessingConfiguration> scheduledQueryProcessingConfigurations() {
        return this.scheduledQueryProcessingConfigurations;
    }
    /**
     * @return Processing sub type of the scheduled query.
     * 
     */
    public String scheduledQueryProcessingSubType() {
        return this.scheduledQueryProcessingSubType;
    }
    /**
     * @return Processing type of the scheduled query.
     * 
     */
    public String scheduledQueryProcessingType() {
        return this.scheduledQueryProcessingType;
    }
    /**
     * @return Retention criteria for the scheduled query.
     * 
     */
    public String scheduledQueryRetentionCriteria() {
        return this.scheduledQueryRetentionCriteria;
    }
    /**
     * @return Retention period for the scheduled query in milliseconds.
     * 
     */
    public String scheduledQueryRetentionPeriodInMs() {
        return this.scheduledQueryRetentionPeriodInMs;
    }
    /**
     * @return Schedule for the scheduled query.
     * 
     */
    public String scheduledQuerySchedule() {
        return this.scheduledQuerySchedule;
    }
    /**
     * @return Scheduled query to be run.
     * 
     */
    public String scheduledQueryText() {
        return this.scheduledQueryText;
    }
    /**
     * @return The current lifecycle state of the Scheduled Query.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledQueryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apmDomainId;
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private String id;
        private String opcDryRun;
        private String scheduledQueryDescription;
        private String scheduledQueryId;
        private String scheduledQueryInstances;
        private String scheduledQueryMaximumRuntimeInSeconds;
        private String scheduledQueryName;
        private String scheduledQueryNextRunInMs;
        private List<GetScheduledQueryScheduledQueryProcessingConfiguration> scheduledQueryProcessingConfigurations;
        private String scheduledQueryProcessingSubType;
        private String scheduledQueryProcessingType;
        private String scheduledQueryRetentionCriteria;
        private String scheduledQueryRetentionPeriodInMs;
        private String scheduledQuerySchedule;
        private String scheduledQueryText;
        private String state;
        private Map<String,String> systemTags;
        public Builder() {}
        public Builder(GetScheduledQueryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apmDomainId = defaults.apmDomainId;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.opcDryRun = defaults.opcDryRun;
    	      this.scheduledQueryDescription = defaults.scheduledQueryDescription;
    	      this.scheduledQueryId = defaults.scheduledQueryId;
    	      this.scheduledQueryInstances = defaults.scheduledQueryInstances;
    	      this.scheduledQueryMaximumRuntimeInSeconds = defaults.scheduledQueryMaximumRuntimeInSeconds;
    	      this.scheduledQueryName = defaults.scheduledQueryName;
    	      this.scheduledQueryNextRunInMs = defaults.scheduledQueryNextRunInMs;
    	      this.scheduledQueryProcessingConfigurations = defaults.scheduledQueryProcessingConfigurations;
    	      this.scheduledQueryProcessingSubType = defaults.scheduledQueryProcessingSubType;
    	      this.scheduledQueryProcessingType = defaults.scheduledQueryProcessingType;
    	      this.scheduledQueryRetentionCriteria = defaults.scheduledQueryRetentionCriteria;
    	      this.scheduledQueryRetentionPeriodInMs = defaults.scheduledQueryRetentionPeriodInMs;
    	      this.scheduledQuerySchedule = defaults.scheduledQuerySchedule;
    	      this.scheduledQueryText = defaults.scheduledQueryText;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
        }

        @CustomType.Setter
        public Builder apmDomainId(String apmDomainId) {
            if (apmDomainId == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "apmDomainId");
            }
            this.apmDomainId = apmDomainId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder opcDryRun(String opcDryRun) {
            if (opcDryRun == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "opcDryRun");
            }
            this.opcDryRun = opcDryRun;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryDescription(String scheduledQueryDescription) {
            if (scheduledQueryDescription == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryDescription");
            }
            this.scheduledQueryDescription = scheduledQueryDescription;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryId(String scheduledQueryId) {
            if (scheduledQueryId == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryId");
            }
            this.scheduledQueryId = scheduledQueryId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryInstances(String scheduledQueryInstances) {
            if (scheduledQueryInstances == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryInstances");
            }
            this.scheduledQueryInstances = scheduledQueryInstances;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryMaximumRuntimeInSeconds(String scheduledQueryMaximumRuntimeInSeconds) {
            if (scheduledQueryMaximumRuntimeInSeconds == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryMaximumRuntimeInSeconds");
            }
            this.scheduledQueryMaximumRuntimeInSeconds = scheduledQueryMaximumRuntimeInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryName(String scheduledQueryName) {
            if (scheduledQueryName == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryName");
            }
            this.scheduledQueryName = scheduledQueryName;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryNextRunInMs(String scheduledQueryNextRunInMs) {
            if (scheduledQueryNextRunInMs == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryNextRunInMs");
            }
            this.scheduledQueryNextRunInMs = scheduledQueryNextRunInMs;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryProcessingConfigurations(List<GetScheduledQueryScheduledQueryProcessingConfiguration> scheduledQueryProcessingConfigurations) {
            if (scheduledQueryProcessingConfigurations == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryProcessingConfigurations");
            }
            this.scheduledQueryProcessingConfigurations = scheduledQueryProcessingConfigurations;
            return this;
        }
        public Builder scheduledQueryProcessingConfigurations(GetScheduledQueryScheduledQueryProcessingConfiguration... scheduledQueryProcessingConfigurations) {
            return scheduledQueryProcessingConfigurations(List.of(scheduledQueryProcessingConfigurations));
        }
        @CustomType.Setter
        public Builder scheduledQueryProcessingSubType(String scheduledQueryProcessingSubType) {
            if (scheduledQueryProcessingSubType == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryProcessingSubType");
            }
            this.scheduledQueryProcessingSubType = scheduledQueryProcessingSubType;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryProcessingType(String scheduledQueryProcessingType) {
            if (scheduledQueryProcessingType == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryProcessingType");
            }
            this.scheduledQueryProcessingType = scheduledQueryProcessingType;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryRetentionCriteria(String scheduledQueryRetentionCriteria) {
            if (scheduledQueryRetentionCriteria == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryRetentionCriteria");
            }
            this.scheduledQueryRetentionCriteria = scheduledQueryRetentionCriteria;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryRetentionPeriodInMs(String scheduledQueryRetentionPeriodInMs) {
            if (scheduledQueryRetentionPeriodInMs == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryRetentionPeriodInMs");
            }
            this.scheduledQueryRetentionPeriodInMs = scheduledQueryRetentionPeriodInMs;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQuerySchedule(String scheduledQuerySchedule) {
            if (scheduledQuerySchedule == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQuerySchedule");
            }
            this.scheduledQuerySchedule = scheduledQuerySchedule;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledQueryText(String scheduledQueryText) {
            if (scheduledQueryText == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "scheduledQueryText");
            }
            this.scheduledQueryText = scheduledQueryText;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        public GetScheduledQueryResult build() {
            final var _resultValue = new GetScheduledQueryResult();
            _resultValue.apmDomainId = apmDomainId;
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.opcDryRun = opcDryRun;
            _resultValue.scheduledQueryDescription = scheduledQueryDescription;
            _resultValue.scheduledQueryId = scheduledQueryId;
            _resultValue.scheduledQueryInstances = scheduledQueryInstances;
            _resultValue.scheduledQueryMaximumRuntimeInSeconds = scheduledQueryMaximumRuntimeInSeconds;
            _resultValue.scheduledQueryName = scheduledQueryName;
            _resultValue.scheduledQueryNextRunInMs = scheduledQueryNextRunInMs;
            _resultValue.scheduledQueryProcessingConfigurations = scheduledQueryProcessingConfigurations;
            _resultValue.scheduledQueryProcessingSubType = scheduledQueryProcessingSubType;
            _resultValue.scheduledQueryProcessingType = scheduledQueryProcessingType;
            _resultValue.scheduledQueryRetentionCriteria = scheduledQueryRetentionCriteria;
            _resultValue.scheduledQueryRetentionPeriodInMs = scheduledQueryRetentionPeriodInMs;
            _resultValue.scheduledQuerySchedule = scheduledQuerySchedule;
            _resultValue.scheduledQueryText = scheduledQueryText;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            return _resultValue;
        }
    }
}
