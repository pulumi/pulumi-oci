// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric {
    /**
     * @return Compartment of the Monitoring Service. It defaults to the APM domain&#39;s compartment if not specified.  If specified, the necessary Oracle Cloud Infrastructure policies should be set to allow APM to write to that compartment.
     * 
     */
    private String compartment;
    /**
     * @return Description of the Custom Metric.
     * 
     */
    private String description;
    /**
     * @return Indicates whether anomaly Detection should be performed on the generated metric.
     * 
     */
    private Boolean isAnomalyDetectionEnabled;
    /**
     * @return Used in conjunction with the dry run header.  When the dry run header is set and the isPublishMetric flag is set to true, the  scheduled query is not created, but validations happen to check if the right Oracle Cloud Infrastructure policies have been set to write to the specified namespace/compartment.
     * 
     */
    private Boolean isMetricPublished;
    /**
     * @return Name of the Custom Metric.
     * 
     */
    private String name;
    /**
     * @return Namespace in the Custom Metric. It defaults to `oracleApmCustom` if not specified.  If specified, the necessary Oracle Cloud Infrastructure policies should be set to allow APM to write to that namespace.
     * 
     */
    private String namespace;
    /**
     * @return Resource Group of the Custom Metric.
     * 
     */
    private String resourceGroup;
    /**
     * @return Unit in which the metric value is reported. For example &#39;ms&#39;.
     * 
     */
    private String unit;

    private GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric() {}
    /**
     * @return Compartment of the Monitoring Service. It defaults to the APM domain&#39;s compartment if not specified.  If specified, the necessary Oracle Cloud Infrastructure policies should be set to allow APM to write to that compartment.
     * 
     */
    public String compartment() {
        return this.compartment;
    }
    /**
     * @return Description of the Custom Metric.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Indicates whether anomaly Detection should be performed on the generated metric.
     * 
     */
    public Boolean isAnomalyDetectionEnabled() {
        return this.isAnomalyDetectionEnabled;
    }
    /**
     * @return Used in conjunction with the dry run header.  When the dry run header is set and the isPublishMetric flag is set to true, the  scheduled query is not created, but validations happen to check if the right Oracle Cloud Infrastructure policies have been set to write to the specified namespace/compartment.
     * 
     */
    public Boolean isMetricPublished() {
        return this.isMetricPublished;
    }
    /**
     * @return Name of the Custom Metric.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Namespace in the Custom Metric. It defaults to `oracleApmCustom` if not specified.  If specified, the necessary Oracle Cloud Infrastructure policies should be set to allow APM to write to that namespace.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Resource Group of the Custom Metric.
     * 
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }
    /**
     * @return Unit in which the metric value is reported. For example &#39;ms&#39;.
     * 
     */
    public String unit() {
        return this.unit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartment;
        private String description;
        private Boolean isAnomalyDetectionEnabled;
        private Boolean isMetricPublished;
        private String name;
        private String namespace;
        private String resourceGroup;
        private String unit;
        public Builder() {}
        public Builder(GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartment = defaults.compartment;
    	      this.description = defaults.description;
    	      this.isAnomalyDetectionEnabled = defaults.isAnomalyDetectionEnabled;
    	      this.isMetricPublished = defaults.isMetricPublished;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.unit = defaults.unit;
        }

        @CustomType.Setter
        public Builder compartment(String compartment) {
            if (compartment == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "compartment");
            }
            this.compartment = compartment;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isAnomalyDetectionEnabled(Boolean isAnomalyDetectionEnabled) {
            if (isAnomalyDetectionEnabled == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "isAnomalyDetectionEnabled");
            }
            this.isAnomalyDetectionEnabled = isAnomalyDetectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isMetricPublished(Boolean isMetricPublished) {
            if (isMetricPublished == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "isMetricPublished");
            }
            this.isMetricPublished = isMetricPublished;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(String resourceGroup) {
            if (resourceGroup == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "resourceGroup");
            }
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder unit(String unit) {
            if (unit == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric", "unit");
            }
            this.unit = unit;
            return this;
        }
        public GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric build() {
            final var _resultValue = new GetScheduledQueryScheduledQueryProcessingConfigurationCustomMetric();
            _resultValue.compartment = compartment;
            _resultValue.description = description;
            _resultValue.isAnomalyDetectionEnabled = isAnomalyDetectionEnabled;
            _resultValue.isMetricPublished = isMetricPublished;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.resourceGroup = resourceGroup;
            _resultValue.unit = unit;
            return _resultValue;
        }
    }
}
