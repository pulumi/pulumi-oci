// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmTraces.outputs.GetTraceSpanLog;
import com.pulumi.oci.ApmTraces.outputs.GetTraceSpanTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTraceSpan {
    /**
     * @return Total span duration in milliseconds.
     * 
     */
    private @Nullable String durationInMs;
    /**
     * @return Indicates if the span has an error.
     * 
     */
    private @Nullable Boolean isError;
    /**
     * @return Unique identifier (spanId) for the span.  Note that this field is defined as spanKey in the API and it maps to the spanId in the trace data in Application Performance Monitoring.
     * 
     */
    private @Nullable String key;
    /**
     * @return Kind associated with the span.
     * 
     */
    private @Nullable String kind;
    /**
     * @return List of logs associated with the span.
     * 
     */
    private @Nullable List<GetTraceSpanLog> logs;
    /**
     * @return Span name associated with the trace.  This is usually the method or URI of the request.
     * 
     */
    private @Nullable String operationName;
    /**
     * @return Unique parent identifier for the span if one exists. For root spans this will be null.
     * 
     */
    private @Nullable String parentSpanKey;
    /**
     * @return Service name associated with the span.
     * 
     */
    private @Nullable String serviceName;
    /**
     * @return List of tags associated with the span.
     * 
     */
    private @Nullable List<GetTraceSpanTag> tags;
    /**
     * @return Span end time.  Timestamp when the span was completed.
     * 
     */
    private @Nullable String timeEnded;
    /**
     * @return Span start time.  Timestamp when the span was started.
     * 
     */
    private @Nullable String timeStarted;
    /**
     * @return Unique Application Performance Monitoring trace identifier (traceId).
     * 
     */
    private @Nullable String traceKey;

    private GetTraceSpan() {}
    /**
     * @return Total span duration in milliseconds.
     * 
     */
    public Optional<String> durationInMs() {
        return Optional.ofNullable(this.durationInMs);
    }
    /**
     * @return Indicates if the span has an error.
     * 
     */
    public Optional<Boolean> isError() {
        return Optional.ofNullable(this.isError);
    }
    /**
     * @return Unique identifier (spanId) for the span.  Note that this field is defined as spanKey in the API and it maps to the spanId in the trace data in Application Performance Monitoring.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Kind associated with the span.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return List of logs associated with the span.
     * 
     */
    public List<GetTraceSpanLog> logs() {
        return this.logs == null ? List.of() : this.logs;
    }
    /**
     * @return Span name associated with the trace.  This is usually the method or URI of the request.
     * 
     */
    public Optional<String> operationName() {
        return Optional.ofNullable(this.operationName);
    }
    /**
     * @return Unique parent identifier for the span if one exists. For root spans this will be null.
     * 
     */
    public Optional<String> parentSpanKey() {
        return Optional.ofNullable(this.parentSpanKey);
    }
    /**
     * @return Service name associated with the span.
     * 
     */
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    /**
     * @return List of tags associated with the span.
     * 
     */
    public List<GetTraceSpanTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Span end time.  Timestamp when the span was completed.
     * 
     */
    public Optional<String> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }
    /**
     * @return Span start time.  Timestamp when the span was started.
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }
    /**
     * @return Unique Application Performance Monitoring trace identifier (traceId).
     * 
     */
    public Optional<String> traceKey() {
        return Optional.ofNullable(this.traceKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTraceSpan defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String durationInMs;
        private @Nullable Boolean isError;
        private @Nullable String key;
        private @Nullable String kind;
        private @Nullable List<GetTraceSpanLog> logs;
        private @Nullable String operationName;
        private @Nullable String parentSpanKey;
        private @Nullable String serviceName;
        private @Nullable List<GetTraceSpanTag> tags;
        private @Nullable String timeEnded;
        private @Nullable String timeStarted;
        private @Nullable String traceKey;
        public Builder() {}
        public Builder(GetTraceSpan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.durationInMs = defaults.durationInMs;
    	      this.isError = defaults.isError;
    	      this.key = defaults.key;
    	      this.kind = defaults.kind;
    	      this.logs = defaults.logs;
    	      this.operationName = defaults.operationName;
    	      this.parentSpanKey = defaults.parentSpanKey;
    	      this.serviceName = defaults.serviceName;
    	      this.tags = defaults.tags;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
    	      this.traceKey = defaults.traceKey;
        }

        @CustomType.Setter
        public Builder durationInMs(@Nullable String durationInMs) {
            this.durationInMs = durationInMs;
            return this;
        }
        @CustomType.Setter
        public Builder isError(@Nullable Boolean isError) {
            this.isError = isError;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder logs(@Nullable List<GetTraceSpanLog> logs) {
            this.logs = logs;
            return this;
        }
        public Builder logs(GetTraceSpanLog... logs) {
            return logs(List.of(logs));
        }
        @CustomType.Setter
        public Builder operationName(@Nullable String operationName) {
            this.operationName = operationName;
            return this;
        }
        @CustomType.Setter
        public Builder parentSpanKey(@Nullable String parentSpanKey) {
            this.parentSpanKey = parentSpanKey;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetTraceSpanTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetTraceSpanTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder timeEnded(@Nullable String timeEnded) {
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder traceKey(@Nullable String traceKey) {
            this.traceKey = traceKey;
            return this;
        }
        public GetTraceSpan build() {
            final var o = new GetTraceSpan();
            o.durationInMs = durationInMs;
            o.isError = isError;
            o.key = key;
            o.kind = kind;
            o.logs = logs;
            o.operationName = operationName;
            o.parentSpanKey = parentSpanKey;
            o.serviceName = serviceName;
            o.tags = tags;
            o.timeEnded = timeEnded;
            o.timeStarted = timeStarted;
            o.traceKey = traceKey;
            return o;
        }
    }
}
