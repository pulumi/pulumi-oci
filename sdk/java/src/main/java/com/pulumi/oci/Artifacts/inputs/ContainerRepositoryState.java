// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Artifacts.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Artifacts.inputs.ContainerRepositoryReadmeArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerRepositoryState extends com.pulumi.resources.ResourceArgs {

    public static final ContainerRepositoryState Empty = new ContainerRepositoryState();

    /**
     * Total storage size in GBs that will be charged.
     * 
     */
    @Import(name="billableSizeInGbs")
    private @Nullable Output<String> billableSizeInGbs;

    /**
     * @return Total storage size in GBs that will be charged.
     * 
     */
    public Optional<Output<String>> billableSizeInGbs() {
        return Optional.ofNullable(this.billableSizeInGbs);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The id of the user or principal that created the resource.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The id of the user or principal that created the resource.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The container repository name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The container repository name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Total number of images.
     * 
     */
    @Import(name="imageCount")
    private @Nullable Output<Integer> imageCount;

    /**
     * @return Total number of images.
     * 
     */
    public Optional<Output<Integer>> imageCount() {
        return Optional.ofNullable(this.imageCount);
    }

    /**
     * (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     * 
     */
    @Import(name="isImmutable")
    private @Nullable Output<Boolean> isImmutable;

    /**
     * @return (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     * 
     */
    public Optional<Output<Boolean>> isImmutable() {
        return Optional.ofNullable(this.isImmutable);
    }

    /**
     * (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
     * 
     */
    @Import(name="isPublic")
    private @Nullable Output<Boolean> isPublic;

    /**
     * @return (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
     * 
     */
    public Optional<Output<Boolean>> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }

    /**
     * Total number of layers.
     * 
     */
    @Import(name="layerCount")
    private @Nullable Output<Integer> layerCount;

    /**
     * @return Total number of layers.
     * 
     */
    public Optional<Output<Integer>> layerCount() {
        return Optional.ofNullable(this.layerCount);
    }

    /**
     * Total storage in bytes consumed by layers.
     * 
     */
    @Import(name="layersSizeInBytes")
    private @Nullable Output<String> layersSizeInBytes;

    /**
     * @return Total storage in bytes consumed by layers.
     * 
     */
    public Optional<Output<String>> layersSizeInBytes() {
        return Optional.ofNullable(this.layersSizeInBytes);
    }

    /**
     * The tenancy namespace used in the container repository path.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The tenancy namespace used in the container repository path.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * (Updatable) Container repository readme.
     * 
     */
    @Import(name="readme")
    private @Nullable Output<ContainerRepositoryReadmeArgs> readme;

    /**
     * @return (Updatable) Container repository readme.
     * 
     */
    public Optional<Output<ContainerRepositoryReadmeArgs>> readme() {
        return Optional.ofNullable(this.readme);
    }

    /**
     * The current state of the container repository.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the container repository.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * An RFC 3339 timestamp indicating when an image was last pushed to the repository.
     * 
     */
    @Import(name="timeLastPushed")
    private @Nullable Output<String> timeLastPushed;

    /**
     * @return An RFC 3339 timestamp indicating when an image was last pushed to the repository.
     * 
     */
    public Optional<Output<String>> timeLastPushed() {
        return Optional.ofNullable(this.timeLastPushed);
    }

    private ContainerRepositoryState() {}

    private ContainerRepositoryState(ContainerRepositoryState $) {
        this.billableSizeInGbs = $.billableSizeInGbs;
        this.compartmentId = $.compartmentId;
        this.createdBy = $.createdBy;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.imageCount = $.imageCount;
        this.isImmutable = $.isImmutable;
        this.isPublic = $.isPublic;
        this.layerCount = $.layerCount;
        this.layersSizeInBytes = $.layersSizeInBytes;
        this.namespace = $.namespace;
        this.readme = $.readme;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeLastPushed = $.timeLastPushed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerRepositoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerRepositoryState $;

        public Builder() {
            $ = new ContainerRepositoryState();
        }

        public Builder(ContainerRepositoryState defaults) {
            $ = new ContainerRepositoryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param billableSizeInGbs Total storage size in GBs that will be charged.
         * 
         * @return builder
         * 
         */
        public Builder billableSizeInGbs(@Nullable Output<String> billableSizeInGbs) {
            $.billableSizeInGbs = billableSizeInGbs;
            return this;
        }

        /**
         * @param billableSizeInGbs Total storage size in GBs that will be charged.
         * 
         * @return builder
         * 
         */
        public Builder billableSizeInGbs(String billableSizeInGbs) {
            return billableSizeInGbs(Output.of(billableSizeInGbs));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param createdBy The id of the user or principal that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The id of the user or principal that created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName The container repository name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The container repository name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param imageCount Total number of images.
         * 
         * @return builder
         * 
         */
        public Builder imageCount(@Nullable Output<Integer> imageCount) {
            $.imageCount = imageCount;
            return this;
        }

        /**
         * @param imageCount Total number of images.
         * 
         * @return builder
         * 
         */
        public Builder imageCount(Integer imageCount) {
            return imageCount(Output.of(imageCount));
        }

        /**
         * @param isImmutable (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
         * 
         * @return builder
         * 
         */
        public Builder isImmutable(@Nullable Output<Boolean> isImmutable) {
            $.isImmutable = isImmutable;
            return this;
        }

        /**
         * @param isImmutable (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
         * 
         * @return builder
         * 
         */
        public Builder isImmutable(Boolean isImmutable) {
            return isImmutable(Output.of(isImmutable));
        }

        /**
         * @param isPublic (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(@Nullable Output<Boolean> isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param isPublic (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(Boolean isPublic) {
            return isPublic(Output.of(isPublic));
        }

        /**
         * @param layerCount Total number of layers.
         * 
         * @return builder
         * 
         */
        public Builder layerCount(@Nullable Output<Integer> layerCount) {
            $.layerCount = layerCount;
            return this;
        }

        /**
         * @param layerCount Total number of layers.
         * 
         * @return builder
         * 
         */
        public Builder layerCount(Integer layerCount) {
            return layerCount(Output.of(layerCount));
        }

        /**
         * @param layersSizeInBytes Total storage in bytes consumed by layers.
         * 
         * @return builder
         * 
         */
        public Builder layersSizeInBytes(@Nullable Output<String> layersSizeInBytes) {
            $.layersSizeInBytes = layersSizeInBytes;
            return this;
        }

        /**
         * @param layersSizeInBytes Total storage in bytes consumed by layers.
         * 
         * @return builder
         * 
         */
        public Builder layersSizeInBytes(String layersSizeInBytes) {
            return layersSizeInBytes(Output.of(layersSizeInBytes));
        }

        /**
         * @param namespace The tenancy namespace used in the container repository path.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The tenancy namespace used in the container repository path.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param readme (Updatable) Container repository readme.
         * 
         * @return builder
         * 
         */
        public Builder readme(@Nullable Output<ContainerRepositoryReadmeArgs> readme) {
            $.readme = readme;
            return this;
        }

        /**
         * @param readme (Updatable) Container repository readme.
         * 
         * @return builder
         * 
         */
        public Builder readme(ContainerRepositoryReadmeArgs readme) {
            return readme(Output.of(readme));
        }

        /**
         * @param state The current state of the container repository.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the container repository.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated An RFC 3339 timestamp indicating when the repository was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated An RFC 3339 timestamp indicating when the repository was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeLastPushed An RFC 3339 timestamp indicating when an image was last pushed to the repository.
         * 
         * @return builder
         * 
         */
        public Builder timeLastPushed(@Nullable Output<String> timeLastPushed) {
            $.timeLastPushed = timeLastPushed;
            return this;
        }

        /**
         * @param timeLastPushed An RFC 3339 timestamp indicating when an image was last pushed to the repository.
         * 
         * @return builder
         * 
         */
        public Builder timeLastPushed(String timeLastPushed) {
            return timeLastPushed(Output.of(timeLastPushed));
        }

        public ContainerRepositoryState build() {
            return $;
        }
    }

}
