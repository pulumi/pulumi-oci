// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Artifacts.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Artifacts.outputs.GetContainerImageLayer;
import com.pulumi.oci.Artifacts.outputs.GetContainerImageVersion;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerImageResult {
    /**
     * @return The compartment OCID to which the container image belongs. Inferred from the container repository.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The OCID of the user or principal that pushed the version.
     * 
     */
    private @Nullable String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The sha256 digest of the image layer.
     * 
     */
    private @Nullable String digest;
    /**
     * @return The repository name and the most recent version associated with the image. If there are no versions associated with the image, then last known version and digest are used instead. If the last known version is unavailable, then &#39;unknown&#39; is used instead of the version.  Example: `ubuntu:latest` or `ubuntu:latest@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2`
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String imageId;
    /**
     * @return Layers of which the image is composed, ordered by the layer digest.
     * 
     */
    private @Nullable List<GetContainerImageLayer> layers;
    /**
     * @return The total size of the container image layers in bytes.
     * 
     */
    private @Nullable String layersSizeInBytes;
    /**
     * @return The size of the container image manifest in bytes.
     * 
     */
    private @Nullable Integer manifestSizeInBytes;
    /**
     * @return Total number of pulls.
     * 
     */
    private @Nullable String pullCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container repository.
     * 
     */
    private @Nullable String repositoryId;
    /**
     * @return The container repository name.
     * 
     */
    private @Nullable String repositoryName;
    /**
     * @return The current state of the container image.
     * 
     */
    private @Nullable String state;
    /**
     * @return The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The creation time of the version.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return An RFC 3339 timestamp indicating when the image was last pulled.
     * 
     */
    private @Nullable String timeLastPulled;
    /**
     * @return The version name.
     * 
     */
    private @Nullable String version;
    /**
     * @return The versions associated with this image.
     * 
     */
    private @Nullable List<GetContainerImageVersion> versions;

    private GetContainerImageResult() {}
    /**
     * @return The compartment OCID to which the container image belongs. Inferred from the container repository.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The OCID of the user or principal that pushed the version.
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The sha256 digest of the image layer.
     * 
     */
    public Optional<String> digest() {
        return Optional.ofNullable(this.digest);
    }
    /**
     * @return The repository name and the most recent version associated with the image. If there are no versions associated with the image, then last known version and digest are used instead. If the last known version is unavailable, then &#39;unknown&#39; is used instead of the version.  Example: `ubuntu:latest` or `ubuntu:latest@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return Layers of which the image is composed, ordered by the layer digest.
     * 
     */
    public List<GetContainerImageLayer> layers() {
        return this.layers == null ? List.of() : this.layers;
    }
    /**
     * @return The total size of the container image layers in bytes.
     * 
     */
    public Optional<String> layersSizeInBytes() {
        return Optional.ofNullable(this.layersSizeInBytes);
    }
    /**
     * @return The size of the container image manifest in bytes.
     * 
     */
    public Optional<Integer> manifestSizeInBytes() {
        return Optional.ofNullable(this.manifestSizeInBytes);
    }
    /**
     * @return Total number of pulls.
     * 
     */
    public Optional<String> pullCount() {
        return Optional.ofNullable(this.pullCount);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container repository.
     * 
     */
    public Optional<String> repositoryId() {
        return Optional.ofNullable(this.repositoryId);
    }
    /**
     * @return The container repository name.
     * 
     */
    public Optional<String> repositoryName() {
        return Optional.ofNullable(this.repositoryName);
    }
    /**
     * @return The current state of the container image.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The creation time of the version.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return An RFC 3339 timestamp indicating when the image was last pulled.
     * 
     */
    public Optional<String> timeLastPulled() {
        return Optional.ofNullable(this.timeLastPulled);
    }
    /**
     * @return The version name.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return The versions associated with this image.
     * 
     */
    public List<GetContainerImageVersion> versions() {
        return this.versions == null ? List.of() : this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String createdBy;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String digest;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private String imageId;
        private @Nullable List<GetContainerImageLayer> layers;
        private @Nullable String layersSizeInBytes;
        private @Nullable Integer manifestSizeInBytes;
        private @Nullable String pullCount;
        private @Nullable String repositoryId;
        private @Nullable String repositoryName;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeLastPulled;
        private @Nullable String version;
        private @Nullable List<GetContainerImageVersion> versions;
        public Builder() {}
        public Builder(GetContainerImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.digest = defaults.digest;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.layers = defaults.layers;
    	      this.layersSizeInBytes = defaults.layersSizeInBytes;
    	      this.manifestSizeInBytes = defaults.manifestSizeInBytes;
    	      this.pullCount = defaults.pullCount;
    	      this.repositoryId = defaults.repositoryId;
    	      this.repositoryName = defaults.repositoryName;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastPulled = defaults.timeLastPulled;
    	      this.version = defaults.version;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder digest(@Nullable String digest) {
            this.digest = digest;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        @CustomType.Setter
        public Builder layers(@Nullable List<GetContainerImageLayer> layers) {
            this.layers = layers;
            return this;
        }
        public Builder layers(GetContainerImageLayer... layers) {
            return layers(List.of(layers));
        }
        @CustomType.Setter
        public Builder layersSizeInBytes(@Nullable String layersSizeInBytes) {
            this.layersSizeInBytes = layersSizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder manifestSizeInBytes(@Nullable Integer manifestSizeInBytes) {
            this.manifestSizeInBytes = manifestSizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder pullCount(@Nullable String pullCount) {
            this.pullCount = pullCount;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryId(@Nullable String repositoryId) {
            this.repositoryId = repositoryId;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryName(@Nullable String repositoryName) {
            this.repositoryName = repositoryName;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastPulled(@Nullable String timeLastPulled) {
            this.timeLastPulled = timeLastPulled;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder versions(@Nullable List<GetContainerImageVersion> versions) {
            this.versions = versions;
            return this;
        }
        public Builder versions(GetContainerImageVersion... versions) {
            return versions(List.of(versions));
        }
        public GetContainerImageResult build() {
            final var o = new GetContainerImageResult();
            o.compartmentId = compartmentId;
            o.createdBy = createdBy;
            o.definedTags = definedTags;
            o.digest = digest;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.imageId = imageId;
            o.layers = layers;
            o.layersSizeInBytes = layersSizeInBytes;
            o.manifestSizeInBytes = manifestSizeInBytes;
            o.pullCount = pullCount;
            o.repositoryId = repositoryId;
            o.repositoryName = repositoryName;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeLastPulled = timeLastPulled;
            o.version = version;
            o.versions = versions;
            return o;
        }
    }
}
