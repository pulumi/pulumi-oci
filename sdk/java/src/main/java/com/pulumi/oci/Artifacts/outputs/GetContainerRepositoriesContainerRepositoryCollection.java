// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Artifacts.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Artifacts.outputs.GetContainerRepositoriesContainerRepositoryCollectionItem;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerRepositoriesContainerRepositoryCollection {
    /**
     * @return Total number of images.
     * 
     */
    private @Nullable Integer imageCount;
    private @Nullable List<GetContainerRepositoriesContainerRepositoryCollectionItem> items;
    /**
     * @return Total number of layers.
     * 
     */
    private @Nullable Integer layerCount;
    /**
     * @return Total storage in bytes consumed by layers.
     * 
     */
    private @Nullable String layersSizeInBytes;
    private @Nullable Integer remainingItemsCount;
    private @Nullable Integer repositoryCount;

    private GetContainerRepositoriesContainerRepositoryCollection() {}
    /**
     * @return Total number of images.
     * 
     */
    public Optional<Integer> imageCount() {
        return Optional.ofNullable(this.imageCount);
    }
    public List<GetContainerRepositoriesContainerRepositoryCollectionItem> items() {
        return this.items == null ? List.of() : this.items;
    }
    /**
     * @return Total number of layers.
     * 
     */
    public Optional<Integer> layerCount() {
        return Optional.ofNullable(this.layerCount);
    }
    /**
     * @return Total storage in bytes consumed by layers.
     * 
     */
    public Optional<String> layersSizeInBytes() {
        return Optional.ofNullable(this.layersSizeInBytes);
    }
    public Optional<Integer> remainingItemsCount() {
        return Optional.ofNullable(this.remainingItemsCount);
    }
    public Optional<Integer> repositoryCount() {
        return Optional.ofNullable(this.repositoryCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerRepositoriesContainerRepositoryCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer imageCount;
        private @Nullable List<GetContainerRepositoriesContainerRepositoryCollectionItem> items;
        private @Nullable Integer layerCount;
        private @Nullable String layersSizeInBytes;
        private @Nullable Integer remainingItemsCount;
        private @Nullable Integer repositoryCount;
        public Builder() {}
        public Builder(GetContainerRepositoriesContainerRepositoryCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageCount = defaults.imageCount;
    	      this.items = defaults.items;
    	      this.layerCount = defaults.layerCount;
    	      this.layersSizeInBytes = defaults.layersSizeInBytes;
    	      this.remainingItemsCount = defaults.remainingItemsCount;
    	      this.repositoryCount = defaults.repositoryCount;
        }

        @CustomType.Setter
        public Builder imageCount(@Nullable Integer imageCount) {
            this.imageCount = imageCount;
            return this;
        }
        @CustomType.Setter
        public Builder items(@Nullable List<GetContainerRepositoriesContainerRepositoryCollectionItem> items) {
            this.items = items;
            return this;
        }
        public Builder items(GetContainerRepositoriesContainerRepositoryCollectionItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder layerCount(@Nullable Integer layerCount) {
            this.layerCount = layerCount;
            return this;
        }
        @CustomType.Setter
        public Builder layersSizeInBytes(@Nullable String layersSizeInBytes) {
            this.layersSizeInBytes = layersSizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder remainingItemsCount(@Nullable Integer remainingItemsCount) {
            this.remainingItemsCount = remainingItemsCount;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryCount(@Nullable Integer repositoryCount) {
            this.repositoryCount = repositoryCount;
            return this;
        }
        public GetContainerRepositoriesContainerRepositoryCollection build() {
            final var o = new GetContainerRepositoriesContainerRepositoryCollection();
            o.imageCount = imageCount;
            o.items = items;
            o.layerCount = layerCount;
            o.layersSizeInBytes = layersSizeInBytes;
            o.remainingItemsCount = remainingItemsCount;
            o.repositoryCount = repositoryCount;
            return o;
        }
    }
}
