// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Artifacts.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Artifacts.outputs.GetContainerRepositoriesContainerRepositoryCollectionItemReadme;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerRepositoriesContainerRepositoryCollectionItem {
    /**
     * @return Total storage size in GBs that will be charged.
     * 
     */
    private @Nullable String billableSizeInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The id of the user or principal that created the resource.
     * 
     */
    private @Nullable String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container repository.  Example: `ocid1.containerrepo.oc1..exampleuniqueID`
     * 
     */
    private @Nullable String id;
    /**
     * @return Total number of images.
     * 
     */
    private @Nullable Integer imageCount;
    /**
     * @return Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     * 
     */
    private @Nullable Boolean isImmutable;
    /**
     * @return A filter to return resources that match the isPublic value.
     * 
     */
    private @Nullable Boolean isPublic;
    /**
     * @return Total number of layers.
     * 
     */
    private @Nullable Integer layerCount;
    /**
     * @return Total storage in bytes consumed by layers.
     * 
     */
    private @Nullable String layersSizeInBytes;
    /**
     * @return The tenancy namespace used in the container repository path.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Container repository readme.
     * 
     */
    private @Nullable List<GetContainerRepositoriesContainerRepositoryCollectionItemReadme> readmes;
    /**
     * @return A filter to return only resources that match the given lifecycle state name exactly.
     * 
     */
    private @Nullable String state;
    /**
     * @return The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return An RFC 3339 timestamp indicating when an image was last pushed to the repository.
     * 
     */
    private @Nullable String timeLastPushed;

    private GetContainerRepositoriesContainerRepositoryCollectionItem() {}
    /**
     * @return Total storage size in GBs that will be charged.
     * 
     */
    public Optional<String> billableSizeInGbs() {
        return Optional.ofNullable(this.billableSizeInGbs);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The id of the user or principal that created the resource.
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container repository.  Example: `ocid1.containerrepo.oc1..exampleuniqueID`
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Total number of images.
     * 
     */
    public Optional<Integer> imageCount() {
        return Optional.ofNullable(this.imageCount);
    }
    /**
     * @return Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
     * 
     */
    public Optional<Boolean> isImmutable() {
        return Optional.ofNullable(this.isImmutable);
    }
    /**
     * @return A filter to return resources that match the isPublic value.
     * 
     */
    public Optional<Boolean> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }
    /**
     * @return Total number of layers.
     * 
     */
    public Optional<Integer> layerCount() {
        return Optional.ofNullable(this.layerCount);
    }
    /**
     * @return Total storage in bytes consumed by layers.
     * 
     */
    public Optional<String> layersSizeInBytes() {
        return Optional.ofNullable(this.layersSizeInBytes);
    }
    /**
     * @return The tenancy namespace used in the container repository path.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Container repository readme.
     * 
     */
    public List<GetContainerRepositoriesContainerRepositoryCollectionItemReadme> readmes() {
        return this.readmes == null ? List.of() : this.readmes;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state name exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return An RFC 3339 timestamp indicating when an image was last pushed to the repository.
     * 
     */
    public Optional<String> timeLastPushed() {
        return Optional.ofNullable(this.timeLastPushed);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerRepositoriesContainerRepositoryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String billableSizeInGbs;
        private @Nullable String compartmentId;
        private @Nullable String createdBy;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Integer imageCount;
        private @Nullable Boolean isImmutable;
        private @Nullable Boolean isPublic;
        private @Nullable Integer layerCount;
        private @Nullable String layersSizeInBytes;
        private @Nullable String namespace;
        private @Nullable List<GetContainerRepositoriesContainerRepositoryCollectionItemReadme> readmes;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeLastPushed;
        public Builder() {}
        public Builder(GetContainerRepositoriesContainerRepositoryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billableSizeInGbs = defaults.billableSizeInGbs;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imageCount = defaults.imageCount;
    	      this.isImmutable = defaults.isImmutable;
    	      this.isPublic = defaults.isPublic;
    	      this.layerCount = defaults.layerCount;
    	      this.layersSizeInBytes = defaults.layersSizeInBytes;
    	      this.namespace = defaults.namespace;
    	      this.readmes = defaults.readmes;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastPushed = defaults.timeLastPushed;
        }

        @CustomType.Setter
        public Builder billableSizeInGbs(@Nullable String billableSizeInGbs) {
            this.billableSizeInGbs = billableSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageCount(@Nullable Integer imageCount) {
            this.imageCount = imageCount;
            return this;
        }
        @CustomType.Setter
        public Builder isImmutable(@Nullable Boolean isImmutable) {
            this.isImmutable = isImmutable;
            return this;
        }
        @CustomType.Setter
        public Builder isPublic(@Nullable Boolean isPublic) {
            this.isPublic = isPublic;
            return this;
        }
        @CustomType.Setter
        public Builder layerCount(@Nullable Integer layerCount) {
            this.layerCount = layerCount;
            return this;
        }
        @CustomType.Setter
        public Builder layersSizeInBytes(@Nullable String layersSizeInBytes) {
            this.layersSizeInBytes = layersSizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder readmes(@Nullable List<GetContainerRepositoriesContainerRepositoryCollectionItemReadme> readmes) {
            this.readmes = readmes;
            return this;
        }
        public Builder readmes(GetContainerRepositoriesContainerRepositoryCollectionItemReadme... readmes) {
            return readmes(List.of(readmes));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastPushed(@Nullable String timeLastPushed) {
            this.timeLastPushed = timeLastPushed;
            return this;
        }
        public GetContainerRepositoriesContainerRepositoryCollectionItem build() {
            final var o = new GetContainerRepositoriesContainerRepositoryCollectionItem();
            o.billableSizeInGbs = billableSizeInGbs;
            o.compartmentId = compartmentId;
            o.createdBy = createdBy;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.imageCount = imageCount;
            o.isImmutable = isImmutable;
            o.isPublic = isPublic;
            o.layerCount = layerCount;
            o.layersSizeInBytes = layersSizeInBytes;
            o.namespace = namespace;
            o.readmes = readmes;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeLastPushed = timeLastPushed;
            return o;
        }
    }
}
