// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Artifacts.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Artifacts.outputs.GetContainerSignaturesContainerImageSignatureCollectionItem;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContainerSignaturesContainerImageSignatureCollection {
    private List<GetContainerSignaturesContainerImageSignatureCollectionItem> items;
    private Integer remainingItemsCount;

    private GetContainerSignaturesContainerImageSignatureCollection() {}
    public List<GetContainerSignaturesContainerImageSignatureCollectionItem> items() {
        return this.items;
    }
    public Integer remainingItemsCount() {
        return this.remainingItemsCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerSignaturesContainerImageSignatureCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetContainerSignaturesContainerImageSignatureCollectionItem> items;
        private Integer remainingItemsCount;
        public Builder() {}
        public Builder(GetContainerSignaturesContainerImageSignatureCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.items = defaults.items;
    	      this.remainingItemsCount = defaults.remainingItemsCount;
        }

        @CustomType.Setter
        public Builder items(List<GetContainerSignaturesContainerImageSignatureCollectionItem> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public Builder items(GetContainerSignaturesContainerImageSignatureCollectionItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder remainingItemsCount(Integer remainingItemsCount) {
            this.remainingItemsCount = Objects.requireNonNull(remainingItemsCount);
            return this;
        }
        public GetContainerSignaturesContainerImageSignatureCollection build() {
            final var o = new GetContainerSignaturesContainerImageSignatureCollection();
            o.items = items;
            o.remainingItemsCount = remainingItemsCount;
            return o;
        }
    }
}
