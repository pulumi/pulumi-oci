// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Artifacts.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGenericArtifactsGenericArtifactCollectionItem {
    private @Nullable String artifactId;
    /**
     * @return Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
     * 
     */
    private @Nullable String artifactPath;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return A filter to return the resources for the specified OCID.
     * 
     */
    private @Nullable String id;
    /**
     * @return A filter to return the artifacts only for the specified repository OCID.
     * 
     */
    private @Nullable String repositoryId;
    /**
     * @return Filter results by a specified SHA256 digest for the artifact.
     * 
     */
    private @Nullable String sha256;
    /**
     * @return The size of the artifact in bytes.
     * 
     */
    private @Nullable String sizeInBytes;
    /**
     * @return A filter to return only resources that match the given lifecycle state name exactly.
     * 
     */
    private @Nullable String state;
    /**
     * @return An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
     * 
     */
    private @Nullable String version;

    private GetGenericArtifactsGenericArtifactCollectionItem() {}
    public Optional<String> artifactId() {
        return Optional.ofNullable(this.artifactId);
    }
    /**
     * @return Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
     * 
     */
    public Optional<String> artifactPath() {
        return Optional.ofNullable(this.artifactPath);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return A filter to return the resources for the specified OCID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A filter to return the artifacts only for the specified repository OCID.
     * 
     */
    public Optional<String> repositoryId() {
        return Optional.ofNullable(this.repositoryId);
    }
    /**
     * @return Filter results by a specified SHA256 digest for the artifact.
     * 
     */
    public Optional<String> sha256() {
        return Optional.ofNullable(this.sha256);
    }
    /**
     * @return The size of the artifact in bytes.
     * 
     */
    public Optional<String> sizeInBytes() {
        return Optional.ofNullable(this.sizeInBytes);
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state name exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGenericArtifactsGenericArtifactCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String artifactId;
        private @Nullable String artifactPath;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String repositoryId;
        private @Nullable String sha256;
        private @Nullable String sizeInBytes;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetGenericArtifactsGenericArtifactCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactId = defaults.artifactId;
    	      this.artifactPath = defaults.artifactPath;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.repositoryId = defaults.repositoryId;
    	      this.sha256 = defaults.sha256;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder artifactId(@Nullable String artifactId) {
            this.artifactId = artifactId;
            return this;
        }
        @CustomType.Setter
        public Builder artifactPath(@Nullable String artifactPath) {
            this.artifactPath = artifactPath;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryId(@Nullable String repositoryId) {
            this.repositoryId = repositoryId;
            return this;
        }
        @CustomType.Setter
        public Builder sha256(@Nullable String sha256) {
            this.sha256 = sha256;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(@Nullable String sizeInBytes) {
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetGenericArtifactsGenericArtifactCollectionItem build() {
            final var o = new GetGenericArtifactsGenericArtifactCollectionItem();
            o.artifactId = artifactId;
            o.artifactPath = artifactPath;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.repositoryId = repositoryId;
            o.sha256 = sha256;
            o.sizeInBytes = sizeInBytes;
            o.state = state;
            o.timeCreated = timeCreated;
            o.version = version;
            return o;
        }
    }
}
