// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Audit.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Audit.outputs.GetEventsAuditEventData;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEventsAuditEvent {
    /**
     * @return The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
     * 
     */
    private @Nullable String cloudEventsVersion;
    /**
     * @return The content type of the data contained in `data`.  Example: `application/json`
     * 
     */
    private @Nullable String contentType;
    /**
     * @return The payload of the event. Information within `data` comes from the resource emitting the event.
     * 
     */
    private @Nullable List<GetEventsAuditEventData> datas;
    /**
     * @return The GUID of the event.
     * 
     */
    private @Nullable String eventId;
    /**
     * @return The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
     * 
     */
    private @Nullable String eventTime;
    /**
     * @return The type of event that happened.
     * 
     */
    private @Nullable String eventType;
    /**
     * @return The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
     * 
     */
    private @Nullable String eventTypeVersion;
    /**
     * @return The source of the event.  Example: `ComputeApi`
     * 
     */
    private @Nullable String source;

    private GetEventsAuditEvent() {}
    /**
     * @return The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
     * 
     */
    public Optional<String> cloudEventsVersion() {
        return Optional.ofNullable(this.cloudEventsVersion);
    }
    /**
     * @return The content type of the data contained in `data`.  Example: `application/json`
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }
    /**
     * @return The payload of the event. Information within `data` comes from the resource emitting the event.
     * 
     */
    public List<GetEventsAuditEventData> datas() {
        return this.datas == null ? List.of() : this.datas;
    }
    /**
     * @return The GUID of the event.
     * 
     */
    public Optional<String> eventId() {
        return Optional.ofNullable(this.eventId);
    }
    /**
     * @return The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
     * 
     */
    public Optional<String> eventTime() {
        return Optional.ofNullable(this.eventTime);
    }
    /**
     * @return The type of event that happened.
     * 
     */
    public Optional<String> eventType() {
        return Optional.ofNullable(this.eventType);
    }
    /**
     * @return The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
     * 
     */
    public Optional<String> eventTypeVersion() {
        return Optional.ofNullable(this.eventTypeVersion);
    }
    /**
     * @return The source of the event.  Example: `ComputeApi`
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsAuditEvent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cloudEventsVersion;
        private @Nullable String contentType;
        private @Nullable List<GetEventsAuditEventData> datas;
        private @Nullable String eventId;
        private @Nullable String eventTime;
        private @Nullable String eventType;
        private @Nullable String eventTypeVersion;
        private @Nullable String source;
        public Builder() {}
        public Builder(GetEventsAuditEvent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudEventsVersion = defaults.cloudEventsVersion;
    	      this.contentType = defaults.contentType;
    	      this.datas = defaults.datas;
    	      this.eventId = defaults.eventId;
    	      this.eventTime = defaults.eventTime;
    	      this.eventType = defaults.eventType;
    	      this.eventTypeVersion = defaults.eventTypeVersion;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder cloudEventsVersion(@Nullable String cloudEventsVersion) {
            this.cloudEventsVersion = cloudEventsVersion;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder datas(@Nullable List<GetEventsAuditEventData> datas) {
            this.datas = datas;
            return this;
        }
        public Builder datas(GetEventsAuditEventData... datas) {
            return datas(List.of(datas));
        }
        @CustomType.Setter
        public Builder eventId(@Nullable String eventId) {
            this.eventId = eventId;
            return this;
        }
        @CustomType.Setter
        public Builder eventTime(@Nullable String eventTime) {
            this.eventTime = eventTime;
            return this;
        }
        @CustomType.Setter
        public Builder eventType(@Nullable String eventType) {
            this.eventType = eventType;
            return this;
        }
        @CustomType.Setter
        public Builder eventTypeVersion(@Nullable String eventTypeVersion) {
            this.eventTypeVersion = eventTypeVersion;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        public GetEventsAuditEvent build() {
            final var o = new GetEventsAuditEvent();
            o.cloudEventsVersion = cloudEventsVersion;
            o.contentType = contentType;
            o.datas = datas;
            o.eventId = eventId;
            o.eventTime = eventTime;
            o.eventType = eventType;
            o.eventTypeVersion = eventTypeVersion;
            o.source = source;
            return o;
        }
    }
}
