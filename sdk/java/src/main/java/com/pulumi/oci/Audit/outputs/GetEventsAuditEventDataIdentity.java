// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Audit.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEventsAuditEventDataIdentity {
    /**
     * @return The type of authentication used.  Example: `natv`
     * 
     */
    private @Nullable String authType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the caller. The caller that made a  request on behalf of the prinicpal.
     * 
     */
    private @Nullable String callerId;
    /**
     * @return The name of the user or service. This value is the friendly name associated with `callerId`.
     * 
     */
    private @Nullable String callerName;
    /**
     * @return This value identifies any Console session associated with this request.
     * 
     */
    private @Nullable String consoleSessionId;
    /**
     * @return The credential ID of the user. This value is extracted from the HTTP &#39;Authorization&#39; request header. It consists of the tenantId, userId, and user fingerprint, all delimited by a slash (/).
     * 
     */
    private @Nullable String credentials;
    /**
     * @return The IP address of the source of the request.  Example: `172.24.80.88`
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
     * 
     */
    private @Nullable String principalId;
    /**
     * @return The name of the user or service. This value is the friendly name associated with `principalId`.  Example: `ExampleName`
     * 
     */
    private @Nullable String principalName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenant.
     * 
     */
    private @Nullable String tenantId;
    /**
     * @return The user agent of the client that made the request.  Example: `Jersey/2.23 (HttpUrlConnection 1.8.0_212)`
     * 
     */
    private @Nullable String userAgent;

    private GetEventsAuditEventDataIdentity() {}
    /**
     * @return The type of authentication used.  Example: `natv`
     * 
     */
    public Optional<String> authType() {
        return Optional.ofNullable(this.authType);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the caller. The caller that made a  request on behalf of the prinicpal.
     * 
     */
    public Optional<String> callerId() {
        return Optional.ofNullable(this.callerId);
    }
    /**
     * @return The name of the user or service. This value is the friendly name associated with `callerId`.
     * 
     */
    public Optional<String> callerName() {
        return Optional.ofNullable(this.callerName);
    }
    /**
     * @return This value identifies any Console session associated with this request.
     * 
     */
    public Optional<String> consoleSessionId() {
        return Optional.ofNullable(this.consoleSessionId);
    }
    /**
     * @return The credential ID of the user. This value is extracted from the HTTP &#39;Authorization&#39; request header. It consists of the tenantId, userId, and user fingerprint, all delimited by a slash (/).
     * 
     */
    public Optional<String> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return The IP address of the source of the request.  Example: `172.24.80.88`
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
     * 
     */
    public Optional<String> principalId() {
        return Optional.ofNullable(this.principalId);
    }
    /**
     * @return The name of the user or service. This value is the friendly name associated with `principalId`.  Example: `ExampleName`
     * 
     */
    public Optional<String> principalName() {
        return Optional.ofNullable(this.principalName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenant.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    /**
     * @return The user agent of the client that made the request.  Example: `Jersey/2.23 (HttpUrlConnection 1.8.0_212)`
     * 
     */
    public Optional<String> userAgent() {
        return Optional.ofNullable(this.userAgent);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsAuditEventDataIdentity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authType;
        private @Nullable String callerId;
        private @Nullable String callerName;
        private @Nullable String consoleSessionId;
        private @Nullable String credentials;
        private @Nullable String ipAddress;
        private @Nullable String principalId;
        private @Nullable String principalName;
        private @Nullable String tenantId;
        private @Nullable String userAgent;
        public Builder() {}
        public Builder(GetEventsAuditEventDataIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.callerId = defaults.callerId;
    	      this.callerName = defaults.callerName;
    	      this.consoleSessionId = defaults.consoleSessionId;
    	      this.credentials = defaults.credentials;
    	      this.ipAddress = defaults.ipAddress;
    	      this.principalId = defaults.principalId;
    	      this.principalName = defaults.principalName;
    	      this.tenantId = defaults.tenantId;
    	      this.userAgent = defaults.userAgent;
        }

        @CustomType.Setter
        public Builder authType(@Nullable String authType) {
            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder callerId(@Nullable String callerId) {
            this.callerId = callerId;
            return this;
        }
        @CustomType.Setter
        public Builder callerName(@Nullable String callerName) {
            this.callerName = callerName;
            return this;
        }
        @CustomType.Setter
        public Builder consoleSessionId(@Nullable String consoleSessionId) {
            this.consoleSessionId = consoleSessionId;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable String credentials) {
            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder principalId(@Nullable String principalId) {
            this.principalId = principalId;
            return this;
        }
        @CustomType.Setter
        public Builder principalName(@Nullable String principalName) {
            this.principalName = principalName;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }
        @CustomType.Setter
        public Builder userAgent(@Nullable String userAgent) {
            this.userAgent = userAgent;
            return this;
        }
        public GetEventsAuditEventDataIdentity build() {
            final var o = new GetEventsAuditEventDataIdentity();
            o.authType = authType;
            o.callerId = callerId;
            o.callerName = callerName;
            o.consoleSessionId = consoleSessionId;
            o.credentials = credentials;
            o.ipAddress = ipAddress;
            o.principalId = principalId;
            o.principalName = principalName;
            o.tenantId = tenantId;
            o.userAgent = userAgent;
            return o;
        }
    }
}
