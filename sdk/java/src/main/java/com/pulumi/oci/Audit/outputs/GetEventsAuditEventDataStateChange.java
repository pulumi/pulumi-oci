// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Audit.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEventsAuditEventDataStateChange {
    /**
     * @return Provides the current state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `previous`.
     * 
     */
    private Map<String,Object> current;
    /**
     * @return Provides the previous state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `current`.
     * 
     */
    private Map<String,Object> previous;

    private GetEventsAuditEventDataStateChange() {}
    /**
     * @return Provides the current state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `previous`.
     * 
     */
    public Map<String,Object> current() {
        return this.current;
    }
    /**
     * @return Provides the previous state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `current`.
     * 
     */
    public Map<String,Object> previous() {
        return this.previous;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsAuditEventDataStateChange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> current;
        private Map<String,Object> previous;
        public Builder() {}
        public Builder(GetEventsAuditEventDataStateChange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.current = defaults.current;
    	      this.previous = defaults.previous;
        }

        @CustomType.Setter
        public Builder current(Map<String,Object> current) {
            if (current == null) {
              throw new MissingRequiredPropertyException("GetEventsAuditEventDataStateChange", "current");
            }
            this.current = current;
            return this;
        }
        @CustomType.Setter
        public Builder previous(Map<String,Object> previous) {
            if (previous == null) {
              throw new MissingRequiredPropertyException("GetEventsAuditEventDataStateChange", "previous");
            }
            this.previous = previous;
            return this;
        }
        public GetEventsAuditEventDataStateChange build() {
            final var _resultValue = new GetEventsAuditEventDataStateChange();
            _resultValue.current = current;
            _resultValue.previous = previous;
            return _resultValue;
        }
    }
}
