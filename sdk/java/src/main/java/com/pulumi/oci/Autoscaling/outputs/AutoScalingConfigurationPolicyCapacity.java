// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Autoscaling.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutoScalingConfigurationPolicyCapacity {
    /**
     * @return For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     * 
     * For a schedule-based autoscaling policy, this value is the target pool size to scale to when executing the schedule that&#39;s defined in the autoscaling policy.
     * 
     */
    private @Nullable Integer initial;
    /**
     * @return For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
     * 
     * For a schedule-based autoscaling policy, this value is not used.
     * 
     */
    private @Nullable Integer max;
    /**
     * @return For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
     * 
     * For a schedule-based autoscaling policy, this value is not used.
     * 
     */
    private @Nullable Integer min;

    private AutoScalingConfigurationPolicyCapacity() {}
    /**
     * @return For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     * 
     * For a schedule-based autoscaling policy, this value is the target pool size to scale to when executing the schedule that&#39;s defined in the autoscaling policy.
     * 
     */
    public Optional<Integer> initial() {
        return Optional.ofNullable(this.initial);
    }
    /**
     * @return For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
     * 
     * For a schedule-based autoscaling policy, this value is not used.
     * 
     */
    public Optional<Integer> max() {
        return Optional.ofNullable(this.max);
    }
    /**
     * @return For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
     * 
     * For a schedule-based autoscaling policy, this value is not used.
     * 
     */
    public Optional<Integer> min() {
        return Optional.ofNullable(this.min);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoScalingConfigurationPolicyCapacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer initial;
        private @Nullable Integer max;
        private @Nullable Integer min;
        public Builder() {}
        public Builder(AutoScalingConfigurationPolicyCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.initial = defaults.initial;
    	      this.max = defaults.max;
    	      this.min = defaults.min;
        }

        @CustomType.Setter
        public Builder initial(@Nullable Integer initial) {

            this.initial = initial;
            return this;
        }
        @CustomType.Setter
        public Builder max(@Nullable Integer max) {

            this.max = max;
            return this;
        }
        @CustomType.Setter
        public Builder min(@Nullable Integer min) {

            this.min = min;
            return this;
        }
        public AutoScalingConfigurationPolicyCapacity build() {
            final var _resultValue = new AutoScalingConfigurationPolicyCapacity();
            _resultValue.initial = initial;
            _resultValue.max = max;
            _resultValue.min = min;
            return _resultValue;
        }
    }
}
