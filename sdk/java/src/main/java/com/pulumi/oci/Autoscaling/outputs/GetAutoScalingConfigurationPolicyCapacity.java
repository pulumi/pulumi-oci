// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Autoscaling.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetAutoScalingConfigurationPolicyCapacity {
    /**
     * @return For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     * 
     */
    private Integer initial;
    /**
     * @return For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
     * 
     */
    private Integer max;
    /**
     * @return For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
     * 
     */
    private Integer min;

    private GetAutoScalingConfigurationPolicyCapacity() {}
    /**
     * @return For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the instance pool immediately after autoscaling is enabled. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     * 
     */
    public Integer initial() {
        return this.initial;
    }
    /**
     * @return For a threshold-based autoscaling policy, this value is the maximum number of instances the instance pool is allowed to increase to (scale out).
     * 
     */
    public Integer max() {
        return this.max;
    }
    /**
     * @return For a threshold-based autoscaling policy, this value is the minimum number of instances the instance pool is allowed to decrease to (scale in).
     * 
     */
    public Integer min() {
        return this.min;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoScalingConfigurationPolicyCapacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer initial;
        private Integer max;
        private Integer min;
        public Builder() {}
        public Builder(GetAutoScalingConfigurationPolicyCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.initial = defaults.initial;
    	      this.max = defaults.max;
    	      this.min = defaults.min;
        }

        @CustomType.Setter
        public Builder initial(Integer initial) {
            this.initial = Objects.requireNonNull(initial);
            return this;
        }
        @CustomType.Setter
        public Builder max(Integer max) {
            this.max = Objects.requireNonNull(max);
            return this;
        }
        @CustomType.Setter
        public Builder min(Integer min) {
            this.min = Objects.requireNonNull(min);
            return this;
        }
        public GetAutoScalingConfigurationPolicyCapacity build() {
            final var _resultValue = new GetAutoScalingConfigurationPolicyCapacity();
            _resultValue.initial = initial;
            _resultValue.max = max;
            _resultValue.min = min;
            return _resultValue;
        }
    }
}
