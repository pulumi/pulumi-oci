// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Autoscaling.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Autoscaling.outputs.GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource;
import com.pulumi.oci.Autoscaling.outputs.GetAutoScalingConfigurationsAutoScalingConfigurationPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutoScalingConfigurationsAutoScalingConfiguration {
    /**
     * @return A resource that is managed by an autoscaling configuration. The only supported type is &#34;instancePool.&#34;
     * 
     */
    private List<GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource> autoScalingResources;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
     * 
     */
    private Integer coolDownInSeconds;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return ID of the condition that is assigned after creation.
     * 
     */
    private String id;
    /**
     * @return Whether the autoscaling policy is enabled.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The maximum number of resources to scale out to.
     * 
     */
    private Integer maxResourceCount;
    /**
     * @return The minimum number of resources to scale in to.
     * 
     */
    private Integer minResourceCount;
    /**
     * @return Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
     * 
     */
    private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicy> policies;
    /**
     * @return The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetAutoScalingConfigurationsAutoScalingConfiguration() {}
    /**
     * @return A resource that is managed by an autoscaling configuration. The only supported type is &#34;instancePool.&#34;
     * 
     */
    public List<GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource> autoScalingResources() {
        return this.autoScalingResources;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
     * 
     */
    public Integer coolDownInSeconds() {
        return this.coolDownInSeconds;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return ID of the condition that is assigned after creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether the autoscaling policy is enabled.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The maximum number of resources to scale out to.
     * 
     */
    public Integer maxResourceCount() {
        return this.maxResourceCount;
    }
    /**
     * @return The minimum number of resources to scale in to.
     * 
     */
    public Integer minResourceCount() {
        return this.minResourceCount;
    }
    /**
     * @return Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
     * 
     */
    public List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicy> policies() {
        return this.policies;
    }
    /**
     * @return The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoScalingConfigurationsAutoScalingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource> autoScalingResources;
        private String compartmentId;
        private Integer coolDownInSeconds;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isEnabled;
        private Integer maxResourceCount;
        private Integer minResourceCount;
        private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicy> policies;
        private String timeCreated;
        public Builder() {}
        public Builder(GetAutoScalingConfigurationsAutoScalingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoScalingResources = defaults.autoScalingResources;
    	      this.compartmentId = defaults.compartmentId;
    	      this.coolDownInSeconds = defaults.coolDownInSeconds;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxResourceCount = defaults.maxResourceCount;
    	      this.minResourceCount = defaults.minResourceCount;
    	      this.policies = defaults.policies;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder autoScalingResources(List<GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource> autoScalingResources) {
            this.autoScalingResources = Objects.requireNonNull(autoScalingResources);
            return this;
        }
        public Builder autoScalingResources(GetAutoScalingConfigurationsAutoScalingConfigurationAutoScalingResource... autoScalingResources) {
            return autoScalingResources(List.of(autoScalingResources));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder coolDownInSeconds(Integer coolDownInSeconds) {
            this.coolDownInSeconds = Objects.requireNonNull(coolDownInSeconds);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder maxResourceCount(Integer maxResourceCount) {
            this.maxResourceCount = Objects.requireNonNull(maxResourceCount);
            return this;
        }
        @CustomType.Setter
        public Builder minResourceCount(Integer minResourceCount) {
            this.minResourceCount = Objects.requireNonNull(minResourceCount);
            return this;
        }
        @CustomType.Setter
        public Builder policies(List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicy> policies) {
            this.policies = Objects.requireNonNull(policies);
            return this;
        }
        public Builder policies(GetAutoScalingConfigurationsAutoScalingConfigurationPolicy... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public GetAutoScalingConfigurationsAutoScalingConfiguration build() {
            final var o = new GetAutoScalingConfigurationsAutoScalingConfiguration();
            o.autoScalingResources = autoScalingResources;
            o.compartmentId = compartmentId;
            o.coolDownInSeconds = coolDownInSeconds;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isEnabled = isEnabled;
            o.maxResourceCount = maxResourceCount;
            o.minResourceCount = minResourceCount;
            o.policies = policies;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
