// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Autoscaling.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Autoscaling.outputs.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity;
import com.pulumi.oci.Autoscaling.outputs.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule;
import com.pulumi.oci.Autoscaling.outputs.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction;
import com.pulumi.oci.Autoscaling.outputs.GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutoScalingConfigurationsAutoScalingConfigurationPolicy {
    /**
     * @return The capacity requirements of the autoscaling policy.
     * 
     */
    private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity> capacities;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return The schedule for executing the autoscaling policy.
     * 
     */
    private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule> executionSchedules;
    /**
     * @return ID of the condition that is assigned after creation.
     * 
     */
    private String id;
    /**
     * @return Whether the autoscaling policy is enabled.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The type of autoscaling policy.
     * 
     */
    private String policyType;
    /**
     * @return An action to run on a resource, such as stopping or starting an instance pool.
     * 
     */
    private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction> resourceActions;
    private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule> rules;
    /**
     * @return The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetAutoScalingConfigurationsAutoScalingConfigurationPolicy() {}
    /**
     * @return The capacity requirements of the autoscaling policy.
     * 
     */
    public List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity> capacities() {
        return this.capacities;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The schedule for executing the autoscaling policy.
     * 
     */
    public List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule> executionSchedules() {
        return this.executionSchedules;
    }
    /**
     * @return ID of the condition that is assigned after creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether the autoscaling policy is enabled.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The type of autoscaling policy.
     * 
     */
    public String policyType() {
        return this.policyType;
    }
    /**
     * @return An action to run on a resource, such as stopping or starting an instance pool.
     * 
     */
    public List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction> resourceActions() {
        return this.resourceActions;
    }
    public List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule> rules() {
        return this.rules;
    }
    /**
     * @return The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoScalingConfigurationsAutoScalingConfigurationPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity> capacities;
        private String displayName;
        private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule> executionSchedules;
        private String id;
        private Boolean isEnabled;
        private String policyType;
        private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction> resourceActions;
        private List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule> rules;
        private String timeCreated;
        public Builder() {}
        public Builder(GetAutoScalingConfigurationsAutoScalingConfigurationPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacities = defaults.capacities;
    	      this.displayName = defaults.displayName;
    	      this.executionSchedules = defaults.executionSchedules;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.policyType = defaults.policyType;
    	      this.resourceActions = defaults.resourceActions;
    	      this.rules = defaults.rules;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder capacities(List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity> capacities) {
            if (capacities == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "capacities");
            }
            this.capacities = capacities;
            return this;
        }
        public Builder capacities(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyCapacity... capacities) {
            return capacities(List.of(capacities));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder executionSchedules(List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule> executionSchedules) {
            if (executionSchedules == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "executionSchedules");
            }
            this.executionSchedules = executionSchedules;
            return this;
        }
        public Builder executionSchedules(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyExecutionSchedule... executionSchedules) {
            return executionSchedules(List.of(executionSchedules));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(String policyType) {
            if (policyType == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "policyType");
            }
            this.policyType = policyType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceActions(List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction> resourceActions) {
            if (resourceActions == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "resourceActions");
            }
            this.resourceActions = resourceActions;
            return this;
        }
        public Builder resourceActions(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyResourceAction... resourceActions) {
            return resourceActions(List.of(resourceActions));
        }
        @CustomType.Setter
        public Builder rules(List<GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicy", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetAutoScalingConfigurationsAutoScalingConfigurationPolicy build() {
            final var _resultValue = new GetAutoScalingConfigurationsAutoScalingConfigurationPolicy();
            _resultValue.capacities = capacities;
            _resultValue.displayName = displayName;
            _resultValue.executionSchedules = executionSchedules;
            _resultValue.id = id;
            _resultValue.isEnabled = isEnabled;
            _resultValue.policyType = policyType;
            _resultValue.resourceActions = resourceActions;
            _resultValue.rules = rules;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
