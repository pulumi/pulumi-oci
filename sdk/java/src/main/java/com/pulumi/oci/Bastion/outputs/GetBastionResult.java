// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBastionResult {
    private String bastionId;
    /**
     * @return The type of bastion.
     * 
     */
    private String bastionType;
    /**
     * @return A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     * 
     */
    private List<String> clientCidrBlockAllowLists;
    /**
     * @return The unique identifier (OCID) of the compartment where the bastion is located.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The unique identifier (OCID) of the bastion, which can&#39;t be changed after creation.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The maximum amount of time that any session on the bastion can remain active.
     * 
     */
    private Integer maxSessionTtlInSeconds;
    /**
     * @return The maximum number of active sessions allowed on the bastion.
     * 
     */
    private Integer maxSessionsAllowed;
    /**
     * @return The name of the bastion, which can&#39;t be changed after creation.
     * 
     */
    private String name;
    /**
     * @return The phonebook entry of the customer&#39;s team, which can&#39;t be changed after creation. Not applicable to `standard` bastions.
     * 
     */
    private String phoneBookEntry;
    /**
     * @return The private IP address of the created private endpoint.
     * 
     */
    private String privateEndpointIpAddress;
    /**
     * @return The current state of the bastion.
     * 
     */
    private String state;
    /**
     * @return A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     * 
     */
    private List<String> staticJumpHostIpAddresses;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The unique identifier (OCID) of the subnet that the bastion connects to.
     * 
     */
    private String targetSubnetId;
    /**
     * @return The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
     * 
     */
    private String targetVcnId;
    /**
     * @return The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetBastionResult() {}
    public String bastionId() {
        return this.bastionId;
    }
    /**
     * @return The type of bastion.
     * 
     */
    public String bastionType() {
        return this.bastionType;
    }
    /**
     * @return A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     * 
     */
    public List<String> clientCidrBlockAllowLists() {
        return this.clientCidrBlockAllowLists;
    }
    /**
     * @return The unique identifier (OCID) of the compartment where the bastion is located.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The unique identifier (OCID) of the bastion, which can&#39;t be changed after creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The maximum amount of time that any session on the bastion can remain active.
     * 
     */
    public Integer maxSessionTtlInSeconds() {
        return this.maxSessionTtlInSeconds;
    }
    /**
     * @return The maximum number of active sessions allowed on the bastion.
     * 
     */
    public Integer maxSessionsAllowed() {
        return this.maxSessionsAllowed;
    }
    /**
     * @return The name of the bastion, which can&#39;t be changed after creation.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The phonebook entry of the customer&#39;s team, which can&#39;t be changed after creation. Not applicable to `standard` bastions.
     * 
     */
    public String phoneBookEntry() {
        return this.phoneBookEntry;
    }
    /**
     * @return The private IP address of the created private endpoint.
     * 
     */
    public String privateEndpointIpAddress() {
        return this.privateEndpointIpAddress;
    }
    /**
     * @return The current state of the bastion.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     * 
     */
    public List<String> staticJumpHostIpAddresses() {
        return this.staticJumpHostIpAddresses;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The unique identifier (OCID) of the subnet that the bastion connects to.
     * 
     */
    public String targetSubnetId() {
        return this.targetSubnetId;
    }
    /**
     * @return The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
     * 
     */
    public String targetVcnId() {
        return this.targetVcnId;
    }
    /**
     * @return The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBastionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bastionId;
        private String bastionType;
        private List<String> clientCidrBlockAllowLists;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private Integer maxSessionTtlInSeconds;
        private Integer maxSessionsAllowed;
        private String name;
        private String phoneBookEntry;
        private String privateEndpointIpAddress;
        private String state;
        private List<String> staticJumpHostIpAddresses;
        private Map<String,Object> systemTags;
        private String targetSubnetId;
        private String targetVcnId;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetBastionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bastionId = defaults.bastionId;
    	      this.bastionType = defaults.bastionType;
    	      this.clientCidrBlockAllowLists = defaults.clientCidrBlockAllowLists;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maxSessionTtlInSeconds = defaults.maxSessionTtlInSeconds;
    	      this.maxSessionsAllowed = defaults.maxSessionsAllowed;
    	      this.name = defaults.name;
    	      this.phoneBookEntry = defaults.phoneBookEntry;
    	      this.privateEndpointIpAddress = defaults.privateEndpointIpAddress;
    	      this.state = defaults.state;
    	      this.staticJumpHostIpAddresses = defaults.staticJumpHostIpAddresses;
    	      this.systemTags = defaults.systemTags;
    	      this.targetSubnetId = defaults.targetSubnetId;
    	      this.targetVcnId = defaults.targetVcnId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder bastionId(String bastionId) {
            this.bastionId = Objects.requireNonNull(bastionId);
            return this;
        }
        @CustomType.Setter
        public Builder bastionType(String bastionType) {
            this.bastionType = Objects.requireNonNull(bastionType);
            return this;
        }
        @CustomType.Setter
        public Builder clientCidrBlockAllowLists(List<String> clientCidrBlockAllowLists) {
            this.clientCidrBlockAllowLists = Objects.requireNonNull(clientCidrBlockAllowLists);
            return this;
        }
        public Builder clientCidrBlockAllowLists(String... clientCidrBlockAllowLists) {
            return clientCidrBlockAllowLists(List.of(clientCidrBlockAllowLists));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder maxSessionTtlInSeconds(Integer maxSessionTtlInSeconds) {
            this.maxSessionTtlInSeconds = Objects.requireNonNull(maxSessionTtlInSeconds);
            return this;
        }
        @CustomType.Setter
        public Builder maxSessionsAllowed(Integer maxSessionsAllowed) {
            this.maxSessionsAllowed = Objects.requireNonNull(maxSessionsAllowed);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder phoneBookEntry(String phoneBookEntry) {
            this.phoneBookEntry = Objects.requireNonNull(phoneBookEntry);
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointIpAddress(String privateEndpointIpAddress) {
            this.privateEndpointIpAddress = Objects.requireNonNull(privateEndpointIpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder staticJumpHostIpAddresses(List<String> staticJumpHostIpAddresses) {
            this.staticJumpHostIpAddresses = Objects.requireNonNull(staticJumpHostIpAddresses);
            return this;
        }
        public Builder staticJumpHostIpAddresses(String... staticJumpHostIpAddresses) {
            return staticJumpHostIpAddresses(List.of(staticJumpHostIpAddresses));
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder targetSubnetId(String targetSubnetId) {
            this.targetSubnetId = Objects.requireNonNull(targetSubnetId);
            return this;
        }
        @CustomType.Setter
        public Builder targetVcnId(String targetVcnId) {
            this.targetVcnId = Objects.requireNonNull(targetVcnId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetBastionResult build() {
            final var o = new GetBastionResult();
            o.bastionId = bastionId;
            o.bastionType = bastionType;
            o.clientCidrBlockAllowLists = clientCidrBlockAllowLists;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.maxSessionTtlInSeconds = maxSessionTtlInSeconds;
            o.maxSessionsAllowed = maxSessionsAllowed;
            o.name = name;
            o.phoneBookEntry = phoneBookEntry;
            o.privateEndpointIpAddress = privateEndpointIpAddress;
            o.state = state;
            o.staticJumpHostIpAddresses = staticJumpHostIpAddresses;
            o.systemTags = systemTags;
            o.targetSubnetId = targetSubnetId;
            o.targetVcnId = targetVcnId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
