// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Bastion.outputs.GetBastionsBastion;
import com.pulumi.oci.Bastion.outputs.GetBastionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBastionsResult {
    private @Nullable String bastionId;
    private @Nullable String bastionLifecycleState;
    /**
     * @return The list of bastions.
     * 
     */
    private List<GetBastionsBastion> bastions;
    /**
     * @return The unique identifier (OCID) of the compartment where the bastion is located.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetBastionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the bastion, which can&#39;t be changed after creation.
     * 
     */
    private @Nullable String name;

    private GetBastionsResult() {}
    public Optional<String> bastionId() {
        return Optional.ofNullable(this.bastionId);
    }
    public Optional<String> bastionLifecycleState() {
        return Optional.ofNullable(this.bastionLifecycleState);
    }
    /**
     * @return The list of bastions.
     * 
     */
    public List<GetBastionsBastion> bastions() {
        return this.bastions;
    }
    /**
     * @return The unique identifier (OCID) of the compartment where the bastion is located.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetBastionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the bastion, which can&#39;t be changed after creation.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBastionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bastionId;
        private @Nullable String bastionLifecycleState;
        private List<GetBastionsBastion> bastions;
        private String compartmentId;
        private @Nullable List<GetBastionsFilter> filters;
        private String id;
        private @Nullable String name;
        public Builder() {}
        public Builder(GetBastionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bastionId = defaults.bastionId;
    	      this.bastionLifecycleState = defaults.bastionLifecycleState;
    	      this.bastions = defaults.bastions;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder bastionId(@Nullable String bastionId) {

            this.bastionId = bastionId;
            return this;
        }
        @CustomType.Setter
        public Builder bastionLifecycleState(@Nullable String bastionLifecycleState) {

            this.bastionLifecycleState = bastionLifecycleState;
            return this;
        }
        @CustomType.Setter
        public Builder bastions(List<GetBastionsBastion> bastions) {
            if (bastions == null) {
              throw new MissingRequiredPropertyException("GetBastionsResult", "bastions");
            }
            this.bastions = bastions;
            return this;
        }
        public Builder bastions(GetBastionsBastion... bastions) {
            return bastions(List.of(bastions));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetBastionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetBastionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetBastionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBastionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        public GetBastionsResult build() {
            final var _resultValue = new GetBastionsResult();
            _resultValue.bastionId = bastionId;
            _resultValue.bastionLifecycleState = bastionLifecycleState;
            _resultValue.bastions = bastions;
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
