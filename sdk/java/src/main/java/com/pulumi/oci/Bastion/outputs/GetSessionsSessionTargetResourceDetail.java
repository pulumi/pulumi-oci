// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSessionsSessionTargetResourceDetail {
    /**
     * @return The Bastion service recognizes three types of sessions, managed SSH sessions, SSH port forwarding sessions, and Dynamic SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
     * 
     */
    private @Nullable String sessionType;
    /**
     * @return The display name of the target Compute instance that the session connects to.
     * 
     */
    private @Nullable String targetResourceDisplayName;
    /**
     * @return The Fully Qualified Domain Name of the target resource that the session connects to.
     * 
     */
    private @Nullable String targetResourceFqdn;
    /**
     * @return The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
     * 
     */
    private @Nullable String targetResourceId;
    /**
     * @return The name of the user on the target resource operating system that the session uses for the connection.
     * 
     */
    private @Nullable String targetResourceOperatingSystemUserName;
    /**
     * @return The port number to connect to on the target resource.
     * 
     */
    private @Nullable Integer targetResourcePort;
    /**
     * @return The private IP address of the target resource that the session connects to.
     * 
     */
    private @Nullable String targetResourcePrivateIpAddress;

    private GetSessionsSessionTargetResourceDetail() {}
    /**
     * @return The Bastion service recognizes three types of sessions, managed SSH sessions, SSH port forwarding sessions, and Dynamic SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
     * 
     */
    public Optional<String> sessionType() {
        return Optional.ofNullable(this.sessionType);
    }
    /**
     * @return The display name of the target Compute instance that the session connects to.
     * 
     */
    public Optional<String> targetResourceDisplayName() {
        return Optional.ofNullable(this.targetResourceDisplayName);
    }
    /**
     * @return The Fully Qualified Domain Name of the target resource that the session connects to.
     * 
     */
    public Optional<String> targetResourceFqdn() {
        return Optional.ofNullable(this.targetResourceFqdn);
    }
    /**
     * @return The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
     * 
     */
    public Optional<String> targetResourceId() {
        return Optional.ofNullable(this.targetResourceId);
    }
    /**
     * @return The name of the user on the target resource operating system that the session uses for the connection.
     * 
     */
    public Optional<String> targetResourceOperatingSystemUserName() {
        return Optional.ofNullable(this.targetResourceOperatingSystemUserName);
    }
    /**
     * @return The port number to connect to on the target resource.
     * 
     */
    public Optional<Integer> targetResourcePort() {
        return Optional.ofNullable(this.targetResourcePort);
    }
    /**
     * @return The private IP address of the target resource that the session connects to.
     * 
     */
    public Optional<String> targetResourcePrivateIpAddress() {
        return Optional.ofNullable(this.targetResourcePrivateIpAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSessionsSessionTargetResourceDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String sessionType;
        private @Nullable String targetResourceDisplayName;
        private @Nullable String targetResourceFqdn;
        private @Nullable String targetResourceId;
        private @Nullable String targetResourceOperatingSystemUserName;
        private @Nullable Integer targetResourcePort;
        private @Nullable String targetResourcePrivateIpAddress;
        public Builder() {}
        public Builder(GetSessionsSessionTargetResourceDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sessionType = defaults.sessionType;
    	      this.targetResourceDisplayName = defaults.targetResourceDisplayName;
    	      this.targetResourceFqdn = defaults.targetResourceFqdn;
    	      this.targetResourceId = defaults.targetResourceId;
    	      this.targetResourceOperatingSystemUserName = defaults.targetResourceOperatingSystemUserName;
    	      this.targetResourcePort = defaults.targetResourcePort;
    	      this.targetResourcePrivateIpAddress = defaults.targetResourcePrivateIpAddress;
        }

        @CustomType.Setter
        public Builder sessionType(@Nullable String sessionType) {
            this.sessionType = sessionType;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceDisplayName(@Nullable String targetResourceDisplayName) {
            this.targetResourceDisplayName = targetResourceDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceFqdn(@Nullable String targetResourceFqdn) {
            this.targetResourceFqdn = targetResourceFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceId(@Nullable String targetResourceId) {
            this.targetResourceId = targetResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceOperatingSystemUserName(@Nullable String targetResourceOperatingSystemUserName) {
            this.targetResourceOperatingSystemUserName = targetResourceOperatingSystemUserName;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourcePort(@Nullable Integer targetResourcePort) {
            this.targetResourcePort = targetResourcePort;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourcePrivateIpAddress(@Nullable String targetResourcePrivateIpAddress) {
            this.targetResourcePrivateIpAddress = targetResourcePrivateIpAddress;
            return this;
        }
        public GetSessionsSessionTargetResourceDetail build() {
            final var o = new GetSessionsSessionTargetResourceDetail();
            o.sessionType = sessionType;
            o.targetResourceDisplayName = targetResourceDisplayName;
            o.targetResourceFqdn = targetResourceFqdn;
            o.targetResourceId = targetResourceId;
            o.targetResourceOperatingSystemUserName = targetResourceOperatingSystemUserName;
            o.targetResourcePort = targetResourcePort;
            o.targetResourcePrivateIpAddress = targetResourcePrivateIpAddress;
            return o;
        }
    }
}
