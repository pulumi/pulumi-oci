// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.inputs.BdsCapacityReportShapeAvailabilityArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BdsCapacityReportArgs extends com.pulumi.resources.ResourceArgs {

    public static final BdsCapacityReportArgs Empty = new BdsCapacityReportArgs();

    /**
     * The OCID for the compartment. This should always be the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID for the compartment. This should always be the root compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Information about the shapes in the capacity report.
     * 
     */
    @Import(name="shapeAvailabilities", required=true)
    private Output<List<BdsCapacityReportShapeAvailabilityArgs>> shapeAvailabilities;

    /**
     * @return Information about the shapes in the capacity report.
     * 
     */
    public Output<List<BdsCapacityReportShapeAvailabilityArgs>> shapeAvailabilities() {
        return this.shapeAvailabilities;
    }

    private BdsCapacityReportArgs() {}

    private BdsCapacityReportArgs(BdsCapacityReportArgs $) {
        this.compartmentId = $.compartmentId;
        this.shapeAvailabilities = $.shapeAvailabilities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsCapacityReportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsCapacityReportArgs $;

        public Builder() {
            $ = new BdsCapacityReportArgs();
        }

        public Builder(BdsCapacityReportArgs defaults) {
            $ = new BdsCapacityReportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID for the compartment. This should always be the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID for the compartment. This should always be the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param shapeAvailabilities Information about the shapes in the capacity report.
         * 
         * @return builder
         * 
         */
        public Builder shapeAvailabilities(Output<List<BdsCapacityReportShapeAvailabilityArgs>> shapeAvailabilities) {
            $.shapeAvailabilities = shapeAvailabilities;
            return this;
        }

        /**
         * @param shapeAvailabilities Information about the shapes in the capacity report.
         * 
         * @return builder
         * 
         */
        public Builder shapeAvailabilities(List<BdsCapacityReportShapeAvailabilityArgs> shapeAvailabilities) {
            return shapeAvailabilities(Output.of(shapeAvailabilities));
        }

        /**
         * @param shapeAvailabilities Information about the shapes in the capacity report.
         * 
         * @return builder
         * 
         */
        public Builder shapeAvailabilities(BdsCapacityReportShapeAvailabilityArgs... shapeAvailabilities) {
            return shapeAvailabilities(List.of(shapeAvailabilities));
        }

        public BdsCapacityReportArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("BdsCapacityReportArgs", "compartmentId");
            }
            if ($.shapeAvailabilities == null) {
                throw new MissingRequiredPropertyException("BdsCapacityReportArgs", "shapeAvailabilities");
            }
            return $;
        }
    }

}
