// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceBdsClusterVersionSummaryArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceCloudSqlDetailArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceComputeOnlyWorkerNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceEdgeNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceKafkaBrokerNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceMasterNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceNetworkConfigArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceStartClusterShapeConfigArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceUtilNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceWorkerNodeArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceArgs Empty = new BdsInstanceArgs();

    /**
     * Cluster version details including bds and odh version information.
     * 
     */
    @Import(name="bdsClusterVersionSummary")
    private @Nullable Output<BdsInstanceBdsClusterVersionSummaryArgs> bdsClusterVersionSummary;

    /**
     * @return Cluster version details including bds and odh version information.
     * 
     */
    public Optional<Output<BdsInstanceBdsClusterVersionSummaryArgs>> bdsClusterVersionSummary() {
        return Optional.ofNullable(this.bdsClusterVersionSummary);
    }

    /**
     * (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
     * 
     */
    @Import(name="bootstrapScriptUrl")
    private @Nullable Output<String> bootstrapScriptUrl;

    /**
     * @return (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
     * 
     */
    public Optional<Output<String>> bootstrapScriptUrl() {
        return Optional.ofNullable(this.bootstrapScriptUrl);
    }

    /**
     * The information about added Cloud SQL capability
     * 
     */
    @Import(name="cloudSqlDetails")
    private @Nullable Output<List<BdsInstanceCloudSqlDetailArgs>> cloudSqlDetails;

    /**
     * @return The information about added Cloud SQL capability
     * 
     */
    public Optional<Output<List<BdsInstanceCloudSqlDetailArgs>>> cloudSqlDetails() {
        return Optional.ofNullable(this.cloudSqlDetails);
    }

    /**
     * Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
     * 
     */
    @Import(name="clusterAdminPassword", required=true)
    private Output<String> clusterAdminPassword;

    /**
     * @return Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
     * 
     */
    public Output<String> clusterAdminPassword() {
        return this.clusterAdminPassword;
    }

    /**
     * Profile of the Big Data Service cluster.
     * 
     */
    @Import(name="clusterProfile")
    private @Nullable Output<String> clusterProfile;

    /**
     * @return Profile of the Big Data Service cluster.
     * 
     */
    public Optional<Output<String>> clusterProfile() {
        return Optional.ofNullable(this.clusterProfile);
    }

    /**
     * The SSH public key used to authenticate the cluster connection.
     * 
     */
    @Import(name="clusterPublicKey", required=true)
    private Output<String> clusterPublicKey;

    /**
     * @return The SSH public key used to authenticate the cluster connection.
     * 
     */
    public Output<String> clusterPublicKey() {
        return this.clusterPublicKey;
    }

    /**
     * Version of the Hadoop distribution
     * 
     */
    @Import(name="clusterVersion", required=true)
    private Output<String> clusterVersion;

    /**
     * @return Version of the Hadoop distribution
     * 
     */
    public Output<String> clusterVersion() {
        return this.clusterVersion;
    }

    /**
     * (Updatable) The OCID of the compartment
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="computeOnlyWorkerNode")
    private @Nullable Output<BdsInstanceComputeOnlyWorkerNodeArgs> computeOnlyWorkerNode;

    public Optional<Output<BdsInstanceComputeOnlyWorkerNodeArgs>> computeOnlyWorkerNode() {
        return Optional.ofNullable(this.computeOnlyWorkerNode);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Name of the BDS instance
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) Name of the BDS instance
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="edgeNode")
    private @Nullable Output<BdsInstanceEdgeNodeArgs> edgeNode;

    public Optional<Output<BdsInstanceEdgeNodeArgs>> edgeNode() {
        return Optional.ofNullable(this.edgeNode);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafka_broker nodes, in a list format, when new nodes are added with a different shape.
     * 
     */
    @Import(name="ignoreExistingNodesShapes")
    private @Nullable Output<List<String>> ignoreExistingNodesShapes;

    /**
     * @return Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafka_broker nodes, in a list format, when new nodes are added with a different shape.
     * 
     */
    public Optional<Output<List<String>>> ignoreExistingNodesShapes() {
        return Optional.ofNullable(this.ignoreExistingNodesShapes);
    }

    /**
     * (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
     * 
     */
    @Import(name="isCloudSqlConfigured")
    private @Nullable Output<Boolean> isCloudSqlConfigured;

    /**
     * @return (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
     * 
     */
    public Optional<Output<Boolean>> isCloudSqlConfigured() {
        return Optional.ofNullable(this.isCloudSqlConfigured);
    }

    @Import(name="isForceRemoveEnabled")
    private @Nullable Output<Boolean> isForceRemoveEnabled;

    public Optional<Output<Boolean>> isForceRemoveEnabled() {
        return Optional.ofNullable(this.isForceRemoveEnabled);
    }

    /**
     * (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
     * 
     */
    @Import(name="isForceStopJobs")
    private @Nullable Output<Boolean> isForceStopJobs;

    /**
     * @return (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
     * 
     */
    public Optional<Output<Boolean>> isForceStopJobs() {
        return Optional.ofNullable(this.isForceStopJobs);
    }

    /**
     * Boolean flag specifying whether or not the cluster is HA
     * 
     */
    @Import(name="isHighAvailability", required=true)
    private Output<Boolean> isHighAvailability;

    /**
     * @return Boolean flag specifying whether or not the cluster is HA
     * 
     */
    public Output<Boolean> isHighAvailability() {
        return this.isHighAvailability;
    }

    /**
     * Boolean flag specifying whether or not Kafka should be configured.
     * 
     */
    @Import(name="isKafkaConfigured")
    private @Nullable Output<Boolean> isKafkaConfigured;

    /**
     * @return Boolean flag specifying whether or not Kafka should be configured.
     * 
     */
    public Optional<Output<Boolean>> isKafkaConfigured() {
        return Optional.ofNullable(this.isKafkaConfigured);
    }

    /**
     * Boolean flag specifying whether or not the cluster should be setup as secure.
     * 
     */
    @Import(name="isSecure", required=true)
    private Output<Boolean> isSecure;

    /**
     * @return Boolean flag specifying whether or not the cluster should be setup as secure.
     * 
     */
    public Output<Boolean> isSecure() {
        return this.isSecure;
    }

    /**
     * The kafka broker node in the BDS instance
     * 
     */
    @Import(name="kafkaBrokerNode")
    private @Nullable Output<BdsInstanceKafkaBrokerNodeArgs> kafkaBrokerNode;

    /**
     * @return The kafka broker node in the BDS instance
     * 
     */
    public Optional<Output<BdsInstanceKafkaBrokerNodeArgs>> kafkaBrokerNode() {
        return Optional.ofNullable(this.kafkaBrokerNode);
    }

    /**
     * The user-defined kerberos realm name.
     * 
     */
    @Import(name="kerberosRealmName")
    private @Nullable Output<String> kerberosRealmName;

    /**
     * @return The user-defined kerberos realm name.
     * 
     */
    public Optional<Output<String>> kerberosRealmName() {
        return Optional.ofNullable(this.kerberosRealmName);
    }

    /**
     * (Updatable) The OCID of the Key Management master encryption key.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return (Updatable) The OCID of the Key Management master encryption key.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * The master node in the BDS instance
     * 
     */
    @Import(name="masterNode", required=true)
    private Output<BdsInstanceMasterNodeArgs> masterNode;

    /**
     * @return The master node in the BDS instance
     * 
     */
    public Output<BdsInstanceMasterNodeArgs> masterNode() {
        return this.masterNode;
    }

    /**
     * (Updatable) Additional configuration of the user&#39;s network.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<BdsInstanceNetworkConfigArgs> networkConfig;

    /**
     * @return (Updatable) Additional configuration of the user&#39;s network.
     * 
     */
    public Optional<Output<BdsInstanceNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * (Updatable) The version of the patch to be upated.
     * 
     */
    @Import(name="osPatchVersion")
    private @Nullable Output<String> osPatchVersion;

    /**
     * @return (Updatable) The version of the patch to be upated.
     * 
     */
    public Optional<Output<String>> osPatchVersion() {
        return Optional.ofNullable(this.osPatchVersion);
    }

    /**
     * (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
     * 
     */
    @Import(name="removeNode")
    private @Nullable Output<String> removeNode;

    /**
     * @return (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
     * 
     */
    public Optional<Output<String>> removeNode() {
        return Optional.ofNullable(this.removeNode);
    }

    @Import(name="startClusterShapeConfigs")
    private @Nullable Output<List<BdsInstanceStartClusterShapeConfigArgs>> startClusterShapeConfigs;

    public Optional<Output<List<BdsInstanceStartClusterShapeConfigArgs>>> startClusterShapeConfigs() {
        return Optional.ofNullable(this.startClusterShapeConfigs);
    }

    /**
     * (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The utility node in the BDS instance
     * 
     */
    @Import(name="utilNode", required=true)
    private Output<BdsInstanceUtilNodeArgs> utilNode;

    /**
     * @return The utility node in the BDS instance
     * 
     */
    public Output<BdsInstanceUtilNodeArgs> utilNode() {
        return this.utilNode;
    }

    @Import(name="workerNode", required=true)
    private Output<BdsInstanceWorkerNodeArgs> workerNode;

    public Output<BdsInstanceWorkerNodeArgs> workerNode() {
        return this.workerNode;
    }

    private BdsInstanceArgs() {}

    private BdsInstanceArgs(BdsInstanceArgs $) {
        this.bdsClusterVersionSummary = $.bdsClusterVersionSummary;
        this.bootstrapScriptUrl = $.bootstrapScriptUrl;
        this.cloudSqlDetails = $.cloudSqlDetails;
        this.clusterAdminPassword = $.clusterAdminPassword;
        this.clusterProfile = $.clusterProfile;
        this.clusterPublicKey = $.clusterPublicKey;
        this.clusterVersion = $.clusterVersion;
        this.compartmentId = $.compartmentId;
        this.computeOnlyWorkerNode = $.computeOnlyWorkerNode;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.edgeNode = $.edgeNode;
        this.freeformTags = $.freeformTags;
        this.ignoreExistingNodesShapes = $.ignoreExistingNodesShapes;
        this.isCloudSqlConfigured = $.isCloudSqlConfigured;
        this.isForceRemoveEnabled = $.isForceRemoveEnabled;
        this.isForceStopJobs = $.isForceStopJobs;
        this.isHighAvailability = $.isHighAvailability;
        this.isKafkaConfigured = $.isKafkaConfigured;
        this.isSecure = $.isSecure;
        this.kafkaBrokerNode = $.kafkaBrokerNode;
        this.kerberosRealmName = $.kerberosRealmName;
        this.kmsKeyId = $.kmsKeyId;
        this.masterNode = $.masterNode;
        this.networkConfig = $.networkConfig;
        this.osPatchVersion = $.osPatchVersion;
        this.removeNode = $.removeNode;
        this.startClusterShapeConfigs = $.startClusterShapeConfigs;
        this.state = $.state;
        this.utilNode = $.utilNode;
        this.workerNode = $.workerNode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceArgs $;

        public Builder() {
            $ = new BdsInstanceArgs();
        }

        public Builder(BdsInstanceArgs defaults) {
            $ = new BdsInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsClusterVersionSummary Cluster version details including bds and odh version information.
         * 
         * @return builder
         * 
         */
        public Builder bdsClusterVersionSummary(@Nullable Output<BdsInstanceBdsClusterVersionSummaryArgs> bdsClusterVersionSummary) {
            $.bdsClusterVersionSummary = bdsClusterVersionSummary;
            return this;
        }

        /**
         * @param bdsClusterVersionSummary Cluster version details including bds and odh version information.
         * 
         * @return builder
         * 
         */
        public Builder bdsClusterVersionSummary(BdsInstanceBdsClusterVersionSummaryArgs bdsClusterVersionSummary) {
            return bdsClusterVersionSummary(Output.of(bdsClusterVersionSummary));
        }

        /**
         * @param bootstrapScriptUrl (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
         * 
         * @return builder
         * 
         */
        public Builder bootstrapScriptUrl(@Nullable Output<String> bootstrapScriptUrl) {
            $.bootstrapScriptUrl = bootstrapScriptUrl;
            return this;
        }

        /**
         * @param bootstrapScriptUrl (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
         * 
         * @return builder
         * 
         */
        public Builder bootstrapScriptUrl(String bootstrapScriptUrl) {
            return bootstrapScriptUrl(Output.of(bootstrapScriptUrl));
        }

        /**
         * @param cloudSqlDetails The information about added Cloud SQL capability
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlDetails(@Nullable Output<List<BdsInstanceCloudSqlDetailArgs>> cloudSqlDetails) {
            $.cloudSqlDetails = cloudSqlDetails;
            return this;
        }

        /**
         * @param cloudSqlDetails The information about added Cloud SQL capability
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlDetails(List<BdsInstanceCloudSqlDetailArgs> cloudSqlDetails) {
            return cloudSqlDetails(Output.of(cloudSqlDetails));
        }

        /**
         * @param cloudSqlDetails The information about added Cloud SQL capability
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlDetails(BdsInstanceCloudSqlDetailArgs... cloudSqlDetails) {
            return cloudSqlDetails(List.of(cloudSqlDetails));
        }

        /**
         * @param clusterAdminPassword Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(Output<String> clusterAdminPassword) {
            $.clusterAdminPassword = clusterAdminPassword;
            return this;
        }

        /**
         * @param clusterAdminPassword Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            return clusterAdminPassword(Output.of(clusterAdminPassword));
        }

        /**
         * @param clusterProfile Profile of the Big Data Service cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterProfile(@Nullable Output<String> clusterProfile) {
            $.clusterProfile = clusterProfile;
            return this;
        }

        /**
         * @param clusterProfile Profile of the Big Data Service cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterProfile(String clusterProfile) {
            return clusterProfile(Output.of(clusterProfile));
        }

        /**
         * @param clusterPublicKey The SSH public key used to authenticate the cluster connection.
         * 
         * @return builder
         * 
         */
        public Builder clusterPublicKey(Output<String> clusterPublicKey) {
            $.clusterPublicKey = clusterPublicKey;
            return this;
        }

        /**
         * @param clusterPublicKey The SSH public key used to authenticate the cluster connection.
         * 
         * @return builder
         * 
         */
        public Builder clusterPublicKey(String clusterPublicKey) {
            return clusterPublicKey(Output.of(clusterPublicKey));
        }

        /**
         * @param clusterVersion Version of the Hadoop distribution
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(Output<String> clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        /**
         * @param clusterVersion Version of the Hadoop distribution
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(String clusterVersion) {
            return clusterVersion(Output.of(clusterVersion));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder computeOnlyWorkerNode(@Nullable Output<BdsInstanceComputeOnlyWorkerNodeArgs> computeOnlyWorkerNode) {
            $.computeOnlyWorkerNode = computeOnlyWorkerNode;
            return this;
        }

        public Builder computeOnlyWorkerNode(BdsInstanceComputeOnlyWorkerNodeArgs computeOnlyWorkerNode) {
            return computeOnlyWorkerNode(Output.of(computeOnlyWorkerNode));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Name of the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Name of the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder edgeNode(@Nullable Output<BdsInstanceEdgeNodeArgs> edgeNode) {
            $.edgeNode = edgeNode;
            return this;
        }

        public Builder edgeNode(BdsInstanceEdgeNodeArgs edgeNode) {
            return edgeNode(Output.of(edgeNode));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param ignoreExistingNodesShapes Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafka_broker nodes, in a list format, when new nodes are added with a different shape.
         * 
         * @return builder
         * 
         */
        public Builder ignoreExistingNodesShapes(@Nullable Output<List<String>> ignoreExistingNodesShapes) {
            $.ignoreExistingNodesShapes = ignoreExistingNodesShapes;
            return this;
        }

        /**
         * @param ignoreExistingNodesShapes Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafka_broker nodes, in a list format, when new nodes are added with a different shape.
         * 
         * @return builder
         * 
         */
        public Builder ignoreExistingNodesShapes(List<String> ignoreExistingNodesShapes) {
            return ignoreExistingNodesShapes(Output.of(ignoreExistingNodesShapes));
        }

        /**
         * @param ignoreExistingNodesShapes Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafka_broker nodes, in a list format, when new nodes are added with a different shape.
         * 
         * @return builder
         * 
         */
        public Builder ignoreExistingNodesShapes(String... ignoreExistingNodesShapes) {
            return ignoreExistingNodesShapes(List.of(ignoreExistingNodesShapes));
        }

        /**
         * @param isCloudSqlConfigured (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
         * 
         * @return builder
         * 
         */
        public Builder isCloudSqlConfigured(@Nullable Output<Boolean> isCloudSqlConfigured) {
            $.isCloudSqlConfigured = isCloudSqlConfigured;
            return this;
        }

        /**
         * @param isCloudSqlConfigured (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
         * 
         * @return builder
         * 
         */
        public Builder isCloudSqlConfigured(Boolean isCloudSqlConfigured) {
            return isCloudSqlConfigured(Output.of(isCloudSqlConfigured));
        }

        public Builder isForceRemoveEnabled(@Nullable Output<Boolean> isForceRemoveEnabled) {
            $.isForceRemoveEnabled = isForceRemoveEnabled;
            return this;
        }

        public Builder isForceRemoveEnabled(Boolean isForceRemoveEnabled) {
            return isForceRemoveEnabled(Output.of(isForceRemoveEnabled));
        }

        /**
         * @param isForceStopJobs (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
         * 
         * @return builder
         * 
         */
        public Builder isForceStopJobs(@Nullable Output<Boolean> isForceStopJobs) {
            $.isForceStopJobs = isForceStopJobs;
            return this;
        }

        /**
         * @param isForceStopJobs (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
         * 
         * @return builder
         * 
         */
        public Builder isForceStopJobs(Boolean isForceStopJobs) {
            return isForceStopJobs(Output.of(isForceStopJobs));
        }

        /**
         * @param isHighAvailability Boolean flag specifying whether or not the cluster is HA
         * 
         * @return builder
         * 
         */
        public Builder isHighAvailability(Output<Boolean> isHighAvailability) {
            $.isHighAvailability = isHighAvailability;
            return this;
        }

        /**
         * @param isHighAvailability Boolean flag specifying whether or not the cluster is HA
         * 
         * @return builder
         * 
         */
        public Builder isHighAvailability(Boolean isHighAvailability) {
            return isHighAvailability(Output.of(isHighAvailability));
        }

        /**
         * @param isKafkaConfigured Boolean flag specifying whether or not Kafka should be configured.
         * 
         * @return builder
         * 
         */
        public Builder isKafkaConfigured(@Nullable Output<Boolean> isKafkaConfigured) {
            $.isKafkaConfigured = isKafkaConfigured;
            return this;
        }

        /**
         * @param isKafkaConfigured Boolean flag specifying whether or not Kafka should be configured.
         * 
         * @return builder
         * 
         */
        public Builder isKafkaConfigured(Boolean isKafkaConfigured) {
            return isKafkaConfigured(Output.of(isKafkaConfigured));
        }

        /**
         * @param isSecure Boolean flag specifying whether or not the cluster should be setup as secure.
         * 
         * @return builder
         * 
         */
        public Builder isSecure(Output<Boolean> isSecure) {
            $.isSecure = isSecure;
            return this;
        }

        /**
         * @param isSecure Boolean flag specifying whether or not the cluster should be setup as secure.
         * 
         * @return builder
         * 
         */
        public Builder isSecure(Boolean isSecure) {
            return isSecure(Output.of(isSecure));
        }

        /**
         * @param kafkaBrokerNode The kafka broker node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder kafkaBrokerNode(@Nullable Output<BdsInstanceKafkaBrokerNodeArgs> kafkaBrokerNode) {
            $.kafkaBrokerNode = kafkaBrokerNode;
            return this;
        }

        /**
         * @param kafkaBrokerNode The kafka broker node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder kafkaBrokerNode(BdsInstanceKafkaBrokerNodeArgs kafkaBrokerNode) {
            return kafkaBrokerNode(Output.of(kafkaBrokerNode));
        }

        /**
         * @param kerberosRealmName The user-defined kerberos realm name.
         * 
         * @return builder
         * 
         */
        public Builder kerberosRealmName(@Nullable Output<String> kerberosRealmName) {
            $.kerberosRealmName = kerberosRealmName;
            return this;
        }

        /**
         * @param kerberosRealmName The user-defined kerberos realm name.
         * 
         * @return builder
         * 
         */
        public Builder kerberosRealmName(String kerberosRealmName) {
            return kerberosRealmName(Output.of(kerberosRealmName));
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the Key Management master encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the Key Management master encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param masterNode The master node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder masterNode(Output<BdsInstanceMasterNodeArgs> masterNode) {
            $.masterNode = masterNode;
            return this;
        }

        /**
         * @param masterNode The master node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder masterNode(BdsInstanceMasterNodeArgs masterNode) {
            return masterNode(Output.of(masterNode));
        }

        /**
         * @param networkConfig (Updatable) Additional configuration of the user&#39;s network.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(@Nullable Output<BdsInstanceNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        /**
         * @param networkConfig (Updatable) Additional configuration of the user&#39;s network.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(BdsInstanceNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param osPatchVersion (Updatable) The version of the patch to be upated.
         * 
         * @return builder
         * 
         */
        public Builder osPatchVersion(@Nullable Output<String> osPatchVersion) {
            $.osPatchVersion = osPatchVersion;
            return this;
        }

        /**
         * @param osPatchVersion (Updatable) The version of the patch to be upated.
         * 
         * @return builder
         * 
         */
        public Builder osPatchVersion(String osPatchVersion) {
            return osPatchVersion(Output.of(osPatchVersion));
        }

        /**
         * @param removeNode (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
         * 
         * @return builder
         * 
         */
        public Builder removeNode(@Nullable Output<String> removeNode) {
            $.removeNode = removeNode;
            return this;
        }

        /**
         * @param removeNode (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
         * 
         * @return builder
         * 
         */
        public Builder removeNode(String removeNode) {
            return removeNode(Output.of(removeNode));
        }

        public Builder startClusterShapeConfigs(@Nullable Output<List<BdsInstanceStartClusterShapeConfigArgs>> startClusterShapeConfigs) {
            $.startClusterShapeConfigs = startClusterShapeConfigs;
            return this;
        }

        public Builder startClusterShapeConfigs(List<BdsInstanceStartClusterShapeConfigArgs> startClusterShapeConfigs) {
            return startClusterShapeConfigs(Output.of(startClusterShapeConfigs));
        }

        public Builder startClusterShapeConfigs(BdsInstanceStartClusterShapeConfigArgs... startClusterShapeConfigs) {
            return startClusterShapeConfigs(List.of(startClusterShapeConfigs));
        }

        /**
         * @param state (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param utilNode The utility node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder utilNode(Output<BdsInstanceUtilNodeArgs> utilNode) {
            $.utilNode = utilNode;
            return this;
        }

        /**
         * @param utilNode The utility node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder utilNode(BdsInstanceUtilNodeArgs utilNode) {
            return utilNode(Output.of(utilNode));
        }

        public Builder workerNode(Output<BdsInstanceWorkerNodeArgs> workerNode) {
            $.workerNode = workerNode;
            return this;
        }

        public Builder workerNode(BdsInstanceWorkerNodeArgs workerNode) {
            return workerNode(Output.of(workerNode));
        }

        public BdsInstanceArgs build() {
            if ($.clusterAdminPassword == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "clusterAdminPassword");
            }
            if ($.clusterPublicKey == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "clusterPublicKey");
            }
            if ($.clusterVersion == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "clusterVersion");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "displayName");
            }
            if ($.isHighAvailability == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "isHighAvailability");
            }
            if ($.isSecure == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "isSecure");
            }
            if ($.masterNode == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "masterNode");
            }
            if ($.utilNode == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "utilNode");
            }
            if ($.workerNode == null) {
                throw new MissingRequiredPropertyException("BdsInstanceArgs", "workerNode");
            }
            return $;
        }
    }

}
