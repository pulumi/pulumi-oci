// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.BigDataService.BdsInstanceMetastoreConfigArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceMetastoreConfigState;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Bds Instance Metastore Config resource in Oracle Cloud Infrastructure Big Data Service service.
 * 
 * Create and activate external metastore configuration.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.BigDataService.BdsInstanceMetastoreConfig;
 * import com.pulumi.oci.BigDataService.BdsInstanceMetastoreConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testBdsInstanceMetastoreConfig = new BdsInstanceMetastoreConfig("testBdsInstanceMetastoreConfig", BdsInstanceMetastoreConfigArgs.builder()
 *             .bdsApiKeyId(testApiKey.id())
 *             .bdsApiKeyPassphrase(bdsInstanceMetastoreConfigBdsApiKeyPassphrase)
 *             .bdsInstanceId(testBdsInstance.id())
 *             .clusterAdminPassword(bdsInstanceMetastoreConfigClusterAdminPassword)
 *             .metastoreId(testMetastore.id())
 *             .displayName(bdsInstanceMetastoreConfigDisplayName)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * BdsInstanceMetastoreConfigs can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:BigDataService/bdsInstanceMetastoreConfig:BdsInstanceMetastoreConfig test_bds_instance_metastore_config &#34;bdsInstances/{bdsInstanceId}/metastoreConfigs/{metastoreConfigId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:BigDataService/bdsInstanceMetastoreConfig:BdsInstanceMetastoreConfig")
public class BdsInstanceMetastoreConfig extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) An optional integer, when flipped triggers activation of metastore config.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="activateTrigger", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> activateTrigger;

    /**
     * @return (Updatable) An optional integer, when flipped triggers activation of metastore config.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Optional<Integer>> activateTrigger() {
        return Codegen.optional(this.activateTrigger);
    }
    /**
     * (Updatable) The ID of BDS Api Key used for Data Catalog metastore integration.
     * 
     */
    @Export(name="bdsApiKeyId", refs={String.class}, tree="[0]")
    private Output<String> bdsApiKeyId;

    /**
     * @return (Updatable) The ID of BDS Api Key used for Data Catalog metastore integration.
     * 
     */
    public Output<String> bdsApiKeyId() {
        return this.bdsApiKeyId;
    }
    /**
     * (Updatable) Base-64 encoded passphrase of the BDS Api Key.
     * 
     */
    @Export(name="bdsApiKeyPassphrase", refs={String.class}, tree="[0]")
    private Output<String> bdsApiKeyPassphrase;

    /**
     * @return (Updatable) Base-64 encoded passphrase of the BDS Api Key.
     * 
     */
    public Output<String> bdsApiKeyPassphrase() {
        return this.bdsApiKeyPassphrase;
    }
    /**
     * The OCID of the cluster.
     * 
     */
    @Export(name="bdsInstanceId", refs={String.class}, tree="[0]")
    private Output<String> bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Output<String> bdsInstanceId() {
        return this.bdsInstanceId;
    }
    /**
     * (Updatable) Base-64 encoded password for the cluster admin user.
     * 
     */
    @Export(name="clusterAdminPassword", refs={String.class}, tree="[0]")
    private Output<String> clusterAdminPassword;

    /**
     * @return (Updatable) Base-64 encoded password for the cluster admin user.
     * 
     */
    public Output<String> clusterAdminPassword() {
        return this.clusterAdminPassword;
    }
    /**
     * (Updatable) The display name of the metastore configuration
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) The display name of the metastore configuration
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The OCID of the Data Catalog metastore.
     * 
     */
    @Export(name="metastoreId", refs={String.class}, tree="[0]")
    private Output<String> metastoreId;

    /**
     * @return The OCID of the Data Catalog metastore.
     * 
     */
    public Output<String> metastoreId() {
        return this.metastoreId;
    }
    /**
     * The type of the metastore in the metastore configuration.
     * 
     */
    @Export(name="metastoreType", refs={String.class}, tree="[0]")
    private Output<String> metastoreType;

    /**
     * @return The type of the metastore in the metastore configuration.
     * 
     */
    public Output<String> metastoreType() {
        return this.metastoreType;
    }
    /**
     * the lifecycle state of the metastore configuration.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return the lifecycle state of the metastore configuration.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BdsInstanceMetastoreConfig(String name) {
        this(name, BdsInstanceMetastoreConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BdsInstanceMetastoreConfig(String name, BdsInstanceMetastoreConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BdsInstanceMetastoreConfig(String name, BdsInstanceMetastoreConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:BigDataService/bdsInstanceMetastoreConfig:BdsInstanceMetastoreConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private BdsInstanceMetastoreConfig(String name, Output<String> id, @Nullable BdsInstanceMetastoreConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:BigDataService/bdsInstanceMetastoreConfig:BdsInstanceMetastoreConfig", name, state, makeResourceOptions(options, id));
    }

    private static BdsInstanceMetastoreConfigArgs makeArgs(BdsInstanceMetastoreConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BdsInstanceMetastoreConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "bdsApiKeyPassphrase",
                "clusterAdminPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BdsInstanceMetastoreConfig get(String name, Output<String> id, @Nullable BdsInstanceMetastoreConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BdsInstanceMetastoreConfig(name, id, state, options);
    }
}
