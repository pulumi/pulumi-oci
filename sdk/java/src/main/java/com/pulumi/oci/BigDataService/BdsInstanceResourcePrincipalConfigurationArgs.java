// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceResourcePrincipalConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceResourcePrincipalConfigurationArgs Empty = new BdsInstanceResourcePrincipalConfigurationArgs();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId", required=true)
    private Output<String> bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Output<String> bdsInstanceId() {
        return this.bdsInstanceId;
    }

    /**
     * Base-64 encoded Cluster Admin Password for cluster admin user.
     * 
     */
    @Import(name="clusterAdminPassword", required=true)
    private Output<String> clusterAdminPassword;

    /**
     * @return Base-64 encoded Cluster Admin Password for cluster admin user.
     * 
     */
    public Output<String> clusterAdminPassword() {
        return this.clusterAdminPassword;
    }

    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
     * 
     */
    @Import(name="forceRefreshResourcePrincipalTrigger")
    private @Nullable Output<Integer> forceRefreshResourcePrincipalTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> forceRefreshResourcePrincipalTrigger() {
        return Optional.ofNullable(this.forceRefreshResourcePrincipalTrigger);
    }

    /**
     * (Updatable) Life span in hours for the resource principal session token.
     * 
     */
    @Import(name="sessionTokenLifeSpanDurationInHours")
    private @Nullable Output<Integer> sessionTokenLifeSpanDurationInHours;

    /**
     * @return (Updatable) Life span in hours for the resource principal session token.
     * 
     */
    public Optional<Output<Integer>> sessionTokenLifeSpanDurationInHours() {
        return Optional.ofNullable(this.sessionTokenLifeSpanDurationInHours);
    }

    private BdsInstanceResourcePrincipalConfigurationArgs() {}

    private BdsInstanceResourcePrincipalConfigurationArgs(BdsInstanceResourcePrincipalConfigurationArgs $) {
        this.bdsInstanceId = $.bdsInstanceId;
        this.clusterAdminPassword = $.clusterAdminPassword;
        this.displayName = $.displayName;
        this.forceRefreshResourcePrincipalTrigger = $.forceRefreshResourcePrincipalTrigger;
        this.sessionTokenLifeSpanDurationInHours = $.sessionTokenLifeSpanDurationInHours;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceResourcePrincipalConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceResourcePrincipalConfigurationArgs $;

        public Builder() {
            $ = new BdsInstanceResourcePrincipalConfigurationArgs();
        }

        public Builder(BdsInstanceResourcePrincipalConfigurationArgs defaults) {
            $ = new BdsInstanceResourcePrincipalConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(Output<String> bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            return bdsInstanceId(Output.of(bdsInstanceId));
        }

        /**
         * @param clusterAdminPassword Base-64 encoded Cluster Admin Password for cluster admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(Output<String> clusterAdminPassword) {
            $.clusterAdminPassword = clusterAdminPassword;
            return this;
        }

        /**
         * @param clusterAdminPassword Base-64 encoded Cluster Admin Password for cluster admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            return clusterAdminPassword(Output.of(clusterAdminPassword));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param forceRefreshResourcePrincipalTrigger (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder forceRefreshResourcePrincipalTrigger(@Nullable Output<Integer> forceRefreshResourcePrincipalTrigger) {
            $.forceRefreshResourcePrincipalTrigger = forceRefreshResourcePrincipalTrigger;
            return this;
        }

        /**
         * @param forceRefreshResourcePrincipalTrigger (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder forceRefreshResourcePrincipalTrigger(Integer forceRefreshResourcePrincipalTrigger) {
            return forceRefreshResourcePrincipalTrigger(Output.of(forceRefreshResourcePrincipalTrigger));
        }

        /**
         * @param sessionTokenLifeSpanDurationInHours (Updatable) Life span in hours for the resource principal session token.
         * 
         * @return builder
         * 
         */
        public Builder sessionTokenLifeSpanDurationInHours(@Nullable Output<Integer> sessionTokenLifeSpanDurationInHours) {
            $.sessionTokenLifeSpanDurationInHours = sessionTokenLifeSpanDurationInHours;
            return this;
        }

        /**
         * @param sessionTokenLifeSpanDurationInHours (Updatable) Life span in hours for the resource principal session token.
         * 
         * @return builder
         * 
         */
        public Builder sessionTokenLifeSpanDurationInHours(Integer sessionTokenLifeSpanDurationInHours) {
            return sessionTokenLifeSpanDurationInHours(Output.of(sessionTokenLifeSpanDurationInHours));
        }

        public BdsInstanceResourcePrincipalConfigurationArgs build() {
            if ($.bdsInstanceId == null) {
                throw new MissingRequiredPropertyException("BdsInstanceResourcePrincipalConfigurationArgs", "bdsInstanceId");
            }
            if ($.clusterAdminPassword == null) {
                throw new MissingRequiredPropertyException("BdsInstanceResourcePrincipalConfigurationArgs", "clusterAdminPassword");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("BdsInstanceResourcePrincipalConfigurationArgs", "displayName");
            }
            return $;
        }
    }

}
