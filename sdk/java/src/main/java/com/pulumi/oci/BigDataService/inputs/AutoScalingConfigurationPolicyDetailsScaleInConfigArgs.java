// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.AutoScalingConfigurationPolicyDetailsScaleInConfigMetricArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoScalingConfigurationPolicyDetailsScaleInConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoScalingConfigurationPolicyDetailsScaleInConfigArgs Empty = new AutoScalingConfigurationPolicyDetailsScaleInConfigArgs();

    /**
     * (Updatable) Metric and threshold details for triggering an autoscale action.
     * 
     */
    @Import(name="metric")
    private @Nullable Output<AutoScalingConfigurationPolicyDetailsScaleInConfigMetricArgs> metric;

    /**
     * @return (Updatable) Metric and threshold details for triggering an autoscale action.
     * 
     */
    public Optional<Output<AutoScalingConfigurationPolicyDetailsScaleInConfigMetricArgs>> metric() {
        return Optional.ofNullable(this.metric);
    }

    /**
     * (Updatable) This value is the minimum number of nodes the cluster can be scaled-in to.
     * 
     */
    @Import(name="minNodeCount")
    private @Nullable Output<Integer> minNodeCount;

    /**
     * @return (Updatable) This value is the minimum number of nodes the cluster can be scaled-in to.
     * 
     */
    public Optional<Output<Integer>> minNodeCount() {
        return Optional.ofNullable(this.minNodeCount);
    }

    /**
     * (Updatable) This value is the number of nodes to remove during a scale-in event.
     * 
     */
    @Import(name="stepSize")
    private @Nullable Output<Integer> stepSize;

    /**
     * @return (Updatable) This value is the number of nodes to remove during a scale-in event.
     * 
     */
    public Optional<Output<Integer>> stepSize() {
        return Optional.ofNullable(this.stepSize);
    }

    private AutoScalingConfigurationPolicyDetailsScaleInConfigArgs() {}

    private AutoScalingConfigurationPolicyDetailsScaleInConfigArgs(AutoScalingConfigurationPolicyDetailsScaleInConfigArgs $) {
        this.metric = $.metric;
        this.minNodeCount = $.minNodeCount;
        this.stepSize = $.stepSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoScalingConfigurationPolicyDetailsScaleInConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoScalingConfigurationPolicyDetailsScaleInConfigArgs $;

        public Builder() {
            $ = new AutoScalingConfigurationPolicyDetailsScaleInConfigArgs();
        }

        public Builder(AutoScalingConfigurationPolicyDetailsScaleInConfigArgs defaults) {
            $ = new AutoScalingConfigurationPolicyDetailsScaleInConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metric (Updatable) Metric and threshold details for triggering an autoscale action.
         * 
         * @return builder
         * 
         */
        public Builder metric(@Nullable Output<AutoScalingConfigurationPolicyDetailsScaleInConfigMetricArgs> metric) {
            $.metric = metric;
            return this;
        }

        /**
         * @param metric (Updatable) Metric and threshold details for triggering an autoscale action.
         * 
         * @return builder
         * 
         */
        public Builder metric(AutoScalingConfigurationPolicyDetailsScaleInConfigMetricArgs metric) {
            return metric(Output.of(metric));
        }

        /**
         * @param minNodeCount (Updatable) This value is the minimum number of nodes the cluster can be scaled-in to.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCount(@Nullable Output<Integer> minNodeCount) {
            $.minNodeCount = minNodeCount;
            return this;
        }

        /**
         * @param minNodeCount (Updatable) This value is the minimum number of nodes the cluster can be scaled-in to.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCount(Integer minNodeCount) {
            return minNodeCount(Output.of(minNodeCount));
        }

        /**
         * @param stepSize (Updatable) This value is the number of nodes to remove during a scale-in event.
         * 
         * @return builder
         * 
         */
        public Builder stepSize(@Nullable Output<Integer> stepSize) {
            $.stepSize = stepSize;
            return this;
        }

        /**
         * @param stepSize (Updatable) This value is the number of nodes to remove during a scale-in event.
         * 
         * @return builder
         * 
         */
        public Builder stepSize(Integer stepSize) {
            return stepSize(Output.of(stepSize));
        }

        public AutoScalingConfigurationPolicyDetailsScaleInConfigArgs build() {
            return $;
        }
    }

}
