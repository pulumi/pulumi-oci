// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs Empty = new AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs();

    /**
     * (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
     * 
     */
    @Import(name="durationInMinutes")
    private @Nullable Output<Integer> durationInMinutes;

    /**
     * @return (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
     * 
     */
    public Optional<Output<Integer>> durationInMinutes() {
        return Optional.ofNullable(this.durationInMinutes);
    }

    /**
     * (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
     * 
     */
    @Import(name="operator")
    private @Nullable Output<String> operator;

    /**
     * @return (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
     * 
     */
    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    /**
     * (Updatable) Integer non-negative value. 0 &lt; value &lt; 100
     * 
     */
    @Import(name="value")
    private @Nullable Output<Integer> value;

    /**
     * @return (Updatable) Integer non-negative value. 0 &lt; value &lt; 100
     * 
     */
    public Optional<Output<Integer>> value() {
        return Optional.ofNullable(this.value);
    }

    private AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs() {}

    private AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs(AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs $) {
        this.durationInMinutes = $.durationInMinutes;
        this.operator = $.operator;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs $;

        public Builder() {
            $ = new AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs();
        }

        public Builder(AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs defaults) {
            $ = new AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param durationInMinutes (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         * 
         * @return builder
         * 
         */
        public Builder durationInMinutes(@Nullable Output<Integer> durationInMinutes) {
            $.durationInMinutes = durationInMinutes;
            return this;
        }

        /**
         * @param durationInMinutes (Updatable) This value is the minimum period of time the metric value exceeds the threshold value before the action is triggered. The value is in minutes.
         * 
         * @return builder
         * 
         */
        public Builder durationInMinutes(Integer durationInMinutes) {
            return durationInMinutes(Output.of(durationInMinutes));
        }

        /**
         * @param operator (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
         * 
         * @return builder
         * 
         */
        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator (Updatable) The comparison operator to use. Options are greater than (GT) or less than (LT).
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param value (Updatable) Integer non-negative value. 0 &lt; value &lt; 100
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<Integer> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) Integer non-negative value. 0 &lt; value &lt; 100
         * 
         * @return builder
         * 
         */
        public Builder value(Integer value) {
            return value(Output.of(value));
        }

        public AutoScalingConfigurationPolicyDetailsScaleInConfigMetricThresholdArgs build() {
            return $;
        }
    }

}
