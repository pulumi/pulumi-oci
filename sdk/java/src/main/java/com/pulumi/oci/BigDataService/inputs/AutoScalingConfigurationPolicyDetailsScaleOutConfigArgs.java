// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.AutoScalingConfigurationPolicyDetailsScaleOutConfigMetricArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs Empty = new AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs();

    /**
     * (Updatable) This value is the maximum number of nodes the cluster can be scaled-out to.
     * 
     */
    @Import(name="maxNodeCount")
    private @Nullable Output<Integer> maxNodeCount;

    /**
     * @return (Updatable) This value is the maximum number of nodes the cluster can be scaled-out to.
     * 
     */
    public Optional<Output<Integer>> maxNodeCount() {
        return Optional.ofNullable(this.maxNodeCount);
    }

    /**
     * (Updatable) Metric and threshold details for triggering an autoscale action.
     * 
     */
    @Import(name="metric")
    private @Nullable Output<AutoScalingConfigurationPolicyDetailsScaleOutConfigMetricArgs> metric;

    /**
     * @return (Updatable) Metric and threshold details for triggering an autoscale action.
     * 
     */
    public Optional<Output<AutoScalingConfigurationPolicyDetailsScaleOutConfigMetricArgs>> metric() {
        return Optional.ofNullable(this.metric);
    }

    /**
     * (Updatable) This value is the number of nodes to add during a scale-out event.
     * 
     */
    @Import(name="stepSize")
    private @Nullable Output<Integer> stepSize;

    /**
     * @return (Updatable) This value is the number of nodes to add during a scale-out event.
     * 
     */
    public Optional<Output<Integer>> stepSize() {
        return Optional.ofNullable(this.stepSize);
    }

    private AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs() {}

    private AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs(AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs $) {
        this.maxNodeCount = $.maxNodeCount;
        this.metric = $.metric;
        this.stepSize = $.stepSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs $;

        public Builder() {
            $ = new AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs();
        }

        public Builder(AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs defaults) {
            $ = new AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxNodeCount (Updatable) This value is the maximum number of nodes the cluster can be scaled-out to.
         * 
         * @return builder
         * 
         */
        public Builder maxNodeCount(@Nullable Output<Integer> maxNodeCount) {
            $.maxNodeCount = maxNodeCount;
            return this;
        }

        /**
         * @param maxNodeCount (Updatable) This value is the maximum number of nodes the cluster can be scaled-out to.
         * 
         * @return builder
         * 
         */
        public Builder maxNodeCount(Integer maxNodeCount) {
            return maxNodeCount(Output.of(maxNodeCount));
        }

        /**
         * @param metric (Updatable) Metric and threshold details for triggering an autoscale action.
         * 
         * @return builder
         * 
         */
        public Builder metric(@Nullable Output<AutoScalingConfigurationPolicyDetailsScaleOutConfigMetricArgs> metric) {
            $.metric = metric;
            return this;
        }

        /**
         * @param metric (Updatable) Metric and threshold details for triggering an autoscale action.
         * 
         * @return builder
         * 
         */
        public Builder metric(AutoScalingConfigurationPolicyDetailsScaleOutConfigMetricArgs metric) {
            return metric(Output.of(metric));
        }

        /**
         * @param stepSize (Updatable) This value is the number of nodes to add during a scale-out event.
         * 
         * @return builder
         * 
         */
        public Builder stepSize(@Nullable Output<Integer> stepSize) {
            $.stepSize = stepSize;
            return this;
        }

        /**
         * @param stepSize (Updatable) This value is the number of nodes to add during a scale-out event.
         * 
         * @return builder
         * 
         */
        public Builder stepSize(Integer stepSize) {
            return stepSize(Output.of(stepSize));
        }

        public AutoScalingConfigurationPolicyDetailsScaleOutConfigArgs build() {
            return $;
        }
    }

}
