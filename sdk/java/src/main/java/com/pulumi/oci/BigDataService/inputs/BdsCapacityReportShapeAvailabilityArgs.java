// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.inputs.BdsCapacityReportShapeAvailabilityDomainLevelCapacityReportArgs;
import com.pulumi.oci.BigDataService.inputs.BdsCapacityReportShapeAvailabilityShapeConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsCapacityReportShapeAvailabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final BdsCapacityReportShapeAvailabilityArgs Empty = new BdsCapacityReportShapeAvailabilityArgs();

    /**
     * Information about the capacity in each domain.
     * 
     */
    @Import(name="domainLevelCapacityReports")
    private @Nullable Output<List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReportArgs>> domainLevelCapacityReports;

    /**
     * @return Information about the capacity in each domain.
     * 
     */
    public Optional<Output<List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReportArgs>>> domainLevelCapacityReports() {
        return Optional.ofNullable(this.domainLevelCapacityReports);
    }

    /**
     * The shape that you want to request a capacity report for.
     * 
     */
    @Import(name="shape", required=true)
    private Output<String> shape;

    /**
     * @return The shape that you want to request a capacity report for.
     * 
     */
    public Output<String> shape() {
        return this.shape;
    }

    /**
     * The shape configuration requested for the node.
     * 
     */
    @Import(name="shapeConfig")
    private @Nullable Output<BdsCapacityReportShapeAvailabilityShapeConfigArgs> shapeConfig;

    /**
     * @return The shape configuration requested for the node.
     * 
     */
    public Optional<Output<BdsCapacityReportShapeAvailabilityShapeConfigArgs>> shapeConfig() {
        return Optional.ofNullable(this.shapeConfig);
    }

    private BdsCapacityReportShapeAvailabilityArgs() {}

    private BdsCapacityReportShapeAvailabilityArgs(BdsCapacityReportShapeAvailabilityArgs $) {
        this.domainLevelCapacityReports = $.domainLevelCapacityReports;
        this.shape = $.shape;
        this.shapeConfig = $.shapeConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsCapacityReportShapeAvailabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsCapacityReportShapeAvailabilityArgs $;

        public Builder() {
            $ = new BdsCapacityReportShapeAvailabilityArgs();
        }

        public Builder(BdsCapacityReportShapeAvailabilityArgs defaults) {
            $ = new BdsCapacityReportShapeAvailabilityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainLevelCapacityReports Information about the capacity in each domain.
         * 
         * @return builder
         * 
         */
        public Builder domainLevelCapacityReports(@Nullable Output<List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReportArgs>> domainLevelCapacityReports) {
            $.domainLevelCapacityReports = domainLevelCapacityReports;
            return this;
        }

        /**
         * @param domainLevelCapacityReports Information about the capacity in each domain.
         * 
         * @return builder
         * 
         */
        public Builder domainLevelCapacityReports(List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReportArgs> domainLevelCapacityReports) {
            return domainLevelCapacityReports(Output.of(domainLevelCapacityReports));
        }

        /**
         * @param domainLevelCapacityReports Information about the capacity in each domain.
         * 
         * @return builder
         * 
         */
        public Builder domainLevelCapacityReports(BdsCapacityReportShapeAvailabilityDomainLevelCapacityReportArgs... domainLevelCapacityReports) {
            return domainLevelCapacityReports(List.of(domainLevelCapacityReports));
        }

        /**
         * @param shape The shape that you want to request a capacity report for.
         * 
         * @return builder
         * 
         */
        public Builder shape(Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape The shape that you want to request a capacity report for.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param shapeConfig The shape configuration requested for the node.
         * 
         * @return builder
         * 
         */
        public Builder shapeConfig(@Nullable Output<BdsCapacityReportShapeAvailabilityShapeConfigArgs> shapeConfig) {
            $.shapeConfig = shapeConfig;
            return this;
        }

        /**
         * @param shapeConfig The shape configuration requested for the node.
         * 
         * @return builder
         * 
         */
        public Builder shapeConfig(BdsCapacityReportShapeAvailabilityShapeConfigArgs shapeConfig) {
            return shapeConfig(Output.of(shapeConfig));
        }

        public BdsCapacityReportShapeAvailabilityArgs build() {
            if ($.shape == null) {
                throw new MissingRequiredPropertyException("BdsCapacityReportShapeAvailabilityArgs", "shape");
            }
            return $;
        }
    }

}
