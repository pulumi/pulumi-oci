// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceNodeBackupConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceNodeBackupConfigurationState Empty = new BdsInstanceNodeBackupConfigurationState();

    /**
     * (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     * 
     */
    @Import(name="backupType")
    private @Nullable Output<String> backupType;

    /**
     * @return (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     * 
     */
    public Optional<Output<String>> backupType() {
        return Optional.ofNullable(this.backupType);
    }

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId")
    private @Nullable Output<String> bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Optional<Output<String>> bdsInstanceId() {
        return Optional.ofNullable(this.bdsInstanceId);
    }

    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     * 
     */
    @Import(name="levelTypeDetails")
    private @Nullable Output<BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs> levelTypeDetails;

    /**
     * @return (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     * 
     */
    public Optional<Output<BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs>> levelTypeDetails() {
        return Optional.ofNullable(this.levelTypeDetails);
    }

    /**
     * (Updatable) Number of backup copies to retain.
     * 
     */
    @Import(name="numberOfBackupsToRetain")
    private @Nullable Output<Integer> numberOfBackupsToRetain;

    /**
     * @return (Updatable) Number of backup copies to retain.
     * 
     */
    public Optional<Output<Integer>> numberOfBackupsToRetain() {
        return Optional.ofNullable(this.numberOfBackupsToRetain);
    }

    /**
     * (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<String> schedule;

    /**
     * @return (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
     * 
     */
    public Optional<Output<String>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    /**
     * The state of the NodeBackupConfiguration.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the NodeBackupConfiguration.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * (Updatable) The time zone of the execution schedule, in IANA time zone database name format
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return (Updatable) The time zone of the execution schedule, in IANA time zone database name format
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    private BdsInstanceNodeBackupConfigurationState() {}

    private BdsInstanceNodeBackupConfigurationState(BdsInstanceNodeBackupConfigurationState $) {
        this.backupType = $.backupType;
        this.bdsInstanceId = $.bdsInstanceId;
        this.displayName = $.displayName;
        this.levelTypeDetails = $.levelTypeDetails;
        this.numberOfBackupsToRetain = $.numberOfBackupsToRetain;
        this.schedule = $.schedule;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceNodeBackupConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceNodeBackupConfigurationState $;

        public Builder() {
            $ = new BdsInstanceNodeBackupConfigurationState();
        }

        public Builder(BdsInstanceNodeBackupConfigurationState defaults) {
            $ = new BdsInstanceNodeBackupConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupType (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
         * 
         * @return builder
         * 
         */
        public Builder backupType(@Nullable Output<String> backupType) {
            $.backupType = backupType;
            return this;
        }

        /**
         * @param backupType (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
         * 
         * @return builder
         * 
         */
        public Builder backupType(String backupType) {
            return backupType(Output.of(backupType));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(@Nullable Output<String> bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            return bdsInstanceId(Output.of(bdsInstanceId));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param levelTypeDetails (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
         * 
         * @return builder
         * 
         */
        public Builder levelTypeDetails(@Nullable Output<BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs> levelTypeDetails) {
            $.levelTypeDetails = levelTypeDetails;
            return this;
        }

        /**
         * @param levelTypeDetails (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
         * 
         * @return builder
         * 
         */
        public Builder levelTypeDetails(BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs levelTypeDetails) {
            return levelTypeDetails(Output.of(levelTypeDetails));
        }

        /**
         * @param numberOfBackupsToRetain (Updatable) Number of backup copies to retain.
         * 
         * @return builder
         * 
         */
        public Builder numberOfBackupsToRetain(@Nullable Output<Integer> numberOfBackupsToRetain) {
            $.numberOfBackupsToRetain = numberOfBackupsToRetain;
            return this;
        }

        /**
         * @param numberOfBackupsToRetain (Updatable) Number of backup copies to retain.
         * 
         * @return builder
         * 
         */
        public Builder numberOfBackupsToRetain(Integer numberOfBackupsToRetain) {
            return numberOfBackupsToRetain(Output.of(numberOfBackupsToRetain));
        }

        /**
         * @param schedule (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<String> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
         * 
         * @return builder
         * 
         */
        public Builder schedule(String schedule) {
            return schedule(Output.of(schedule));
        }

        /**
         * @param state The state of the NodeBackupConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the NodeBackupConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param timezone (Updatable) The time zone of the execution schedule, in IANA time zone database name format
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone (Updatable) The time zone of the execution schedule, in IANA time zone database name format
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public BdsInstanceNodeBackupConfigurationState build() {
            return $;
        }
    }

}
