// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceNodeBackupLevelTypeDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceNodeBackupLevelTypeDetailsArgs Empty = new BdsInstanceNodeBackupLevelTypeDetailsArgs();

    /**
     * Type of level used to trigger the creation of a new node backup.
     * 
     */
    @Import(name="levelType", required=true)
    private Output<String> levelType;

    /**
     * @return Type of level used to trigger the creation of a new node backup.
     * 
     */
    public Output<String> levelType() {
        return this.levelType;
    }

    /**
     * (Updatable) Host name of the node to create backup.
     * 
     */
    @Import(name="nodeHostName")
    private @Nullable Output<String> nodeHostName;

    /**
     * @return (Updatable) Host name of the node to create backup.
     * 
     */
    public Optional<Output<String>> nodeHostName() {
        return Optional.ofNullable(this.nodeHostName);
    }

    /**
     * (Updatable) Type of the node or nodes of the node backup which are going to be created.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    /**
     * @return (Updatable) Type of the node or nodes of the node backup which are going to be created.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    private BdsInstanceNodeBackupLevelTypeDetailsArgs() {}

    private BdsInstanceNodeBackupLevelTypeDetailsArgs(BdsInstanceNodeBackupLevelTypeDetailsArgs $) {
        this.levelType = $.levelType;
        this.nodeHostName = $.nodeHostName;
        this.nodeType = $.nodeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceNodeBackupLevelTypeDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceNodeBackupLevelTypeDetailsArgs $;

        public Builder() {
            $ = new BdsInstanceNodeBackupLevelTypeDetailsArgs();
        }

        public Builder(BdsInstanceNodeBackupLevelTypeDetailsArgs defaults) {
            $ = new BdsInstanceNodeBackupLevelTypeDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param levelType Type of level used to trigger the creation of a new node backup.
         * 
         * @return builder
         * 
         */
        public Builder levelType(Output<String> levelType) {
            $.levelType = levelType;
            return this;
        }

        /**
         * @param levelType Type of level used to trigger the creation of a new node backup.
         * 
         * @return builder
         * 
         */
        public Builder levelType(String levelType) {
            return levelType(Output.of(levelType));
        }

        /**
         * @param nodeHostName (Updatable) Host name of the node to create backup.
         * 
         * @return builder
         * 
         */
        public Builder nodeHostName(@Nullable Output<String> nodeHostName) {
            $.nodeHostName = nodeHostName;
            return this;
        }

        /**
         * @param nodeHostName (Updatable) Host name of the node to create backup.
         * 
         * @return builder
         * 
         */
        public Builder nodeHostName(String nodeHostName) {
            return nodeHostName(Output.of(nodeHostName));
        }

        /**
         * @param nodeType (Updatable) Type of the node or nodes of the node backup which are going to be created.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        /**
         * @param nodeType (Updatable) Type of the node or nodes of the node backup which are going to be created.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        public BdsInstanceNodeBackupLevelTypeDetailsArgs build() {
            if ($.levelType == null) {
                throw new MissingRequiredPropertyException("BdsInstanceNodeBackupLevelTypeDetailsArgs", "levelType");
            }
            return $;
        }
    }

}
