// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceNodeBackupLevelTypeDetailsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceNodeBackupState extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceNodeBackupState Empty = new BdsInstanceNodeBackupState();

    @Import(name="backupConfigId")
    private @Nullable Output<String> backupConfigId;

    public Optional<Output<String>> backupConfigId() {
        return Optional.ofNullable(this.backupConfigId);
    }

    /**
     * Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     * 
     */
    @Import(name="backupType")
    private @Nullable Output<String> backupType;

    /**
     * @return Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     * 
     */
    public Optional<Output<String>> backupType() {
        return Optional.ofNullable(this.backupType);
    }

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId")
    private @Nullable Output<String> bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Optional<Output<String>> bdsInstanceId() {
        return Optional.ofNullable(this.bdsInstanceId);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Details of the type of level used to trigger the creation of a new node backup.
     * 
     */
    @Import(name="levelTypeDetails")
    private @Nullable Output<BdsInstanceNodeBackupLevelTypeDetailsArgs> levelTypeDetails;

    /**
     * @return Details of the type of level used to trigger the creation of a new node backup.
     * 
     */
    public Optional<Output<BdsInstanceNodeBackupLevelTypeDetailsArgs>> levelTypeDetails() {
        return Optional.ofNullable(this.levelTypeDetails);
    }

    @Import(name="nodeInstanceId")
    private @Nullable Output<String> nodeInstanceId;

    public Optional<Output<String>> nodeInstanceId() {
        return Optional.ofNullable(this.nodeInstanceId);
    }

    /**
     * The state of the NodeBackup.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the NodeBackup.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private BdsInstanceNodeBackupState() {}

    private BdsInstanceNodeBackupState(BdsInstanceNodeBackupState $) {
        this.backupConfigId = $.backupConfigId;
        this.backupType = $.backupType;
        this.bdsInstanceId = $.bdsInstanceId;
        this.displayName = $.displayName;
        this.levelTypeDetails = $.levelTypeDetails;
        this.nodeInstanceId = $.nodeInstanceId;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceNodeBackupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceNodeBackupState $;

        public Builder() {
            $ = new BdsInstanceNodeBackupState();
        }

        public Builder(BdsInstanceNodeBackupState defaults) {
            $ = new BdsInstanceNodeBackupState(Objects.requireNonNull(defaults));
        }

        public Builder backupConfigId(@Nullable Output<String> backupConfigId) {
            $.backupConfigId = backupConfigId;
            return this;
        }

        public Builder backupConfigId(String backupConfigId) {
            return backupConfigId(Output.of(backupConfigId));
        }

        /**
         * @param backupType Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
         * 
         * @return builder
         * 
         */
        public Builder backupType(@Nullable Output<String> backupType) {
            $.backupType = backupType;
            return this;
        }

        /**
         * @param backupType Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
         * 
         * @return builder
         * 
         */
        public Builder backupType(String backupType) {
            return backupType(Output.of(backupType));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(@Nullable Output<String> bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            return bdsInstanceId(Output.of(bdsInstanceId));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param levelTypeDetails Details of the type of level used to trigger the creation of a new node backup.
         * 
         * @return builder
         * 
         */
        public Builder levelTypeDetails(@Nullable Output<BdsInstanceNodeBackupLevelTypeDetailsArgs> levelTypeDetails) {
            $.levelTypeDetails = levelTypeDetails;
            return this;
        }

        /**
         * @param levelTypeDetails Details of the type of level used to trigger the creation of a new node backup.
         * 
         * @return builder
         * 
         */
        public Builder levelTypeDetails(BdsInstanceNodeBackupLevelTypeDetailsArgs levelTypeDetails) {
            return levelTypeDetails(Output.of(levelTypeDetails));
        }

        public Builder nodeInstanceId(@Nullable Output<String> nodeInstanceId) {
            $.nodeInstanceId = nodeInstanceId;
            return this;
        }

        public Builder nodeInstanceId(String nodeInstanceId) {
            return nodeInstanceId(Output.of(nodeInstanceId));
        }

        /**
         * @param state The state of the NodeBackup.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the NodeBackup.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public BdsInstanceNodeBackupState build() {
            return $;
        }
    }

}
