// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceOsPatchActionPatchingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceOsPatchActionPatchingConfigArgs Empty = new BdsInstanceOsPatchActionPatchingConfigArgs();

    @Import(name="batchSize")
    private @Nullable Output<Integer> batchSize;

    public Optional<Output<Integer>> batchSize() {
        return Optional.ofNullable(this.batchSize);
    }

    @Import(name="patchingConfigStrategy", required=true)
    private Output<String> patchingConfigStrategy;

    public Output<String> patchingConfigStrategy() {
        return this.patchingConfigStrategy;
    }

    @Import(name="toleranceThresholdPerBatch")
    private @Nullable Output<Integer> toleranceThresholdPerBatch;

    public Optional<Output<Integer>> toleranceThresholdPerBatch() {
        return Optional.ofNullable(this.toleranceThresholdPerBatch);
    }

    @Import(name="toleranceThresholdPerDomain")
    private @Nullable Output<Integer> toleranceThresholdPerDomain;

    public Optional<Output<Integer>> toleranceThresholdPerDomain() {
        return Optional.ofNullable(this.toleranceThresholdPerDomain);
    }

    @Import(name="waitTimeBetweenBatchInSeconds")
    private @Nullable Output<Integer> waitTimeBetweenBatchInSeconds;

    public Optional<Output<Integer>> waitTimeBetweenBatchInSeconds() {
        return Optional.ofNullable(this.waitTimeBetweenBatchInSeconds);
    }

    @Import(name="waitTimeBetweenDomainInSeconds")
    private @Nullable Output<Integer> waitTimeBetweenDomainInSeconds;

    public Optional<Output<Integer>> waitTimeBetweenDomainInSeconds() {
        return Optional.ofNullable(this.waitTimeBetweenDomainInSeconds);
    }

    private BdsInstanceOsPatchActionPatchingConfigArgs() {}

    private BdsInstanceOsPatchActionPatchingConfigArgs(BdsInstanceOsPatchActionPatchingConfigArgs $) {
        this.batchSize = $.batchSize;
        this.patchingConfigStrategy = $.patchingConfigStrategy;
        this.toleranceThresholdPerBatch = $.toleranceThresholdPerBatch;
        this.toleranceThresholdPerDomain = $.toleranceThresholdPerDomain;
        this.waitTimeBetweenBatchInSeconds = $.waitTimeBetweenBatchInSeconds;
        this.waitTimeBetweenDomainInSeconds = $.waitTimeBetweenDomainInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceOsPatchActionPatchingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceOsPatchActionPatchingConfigArgs $;

        public Builder() {
            $ = new BdsInstanceOsPatchActionPatchingConfigArgs();
        }

        public Builder(BdsInstanceOsPatchActionPatchingConfigArgs defaults) {
            $ = new BdsInstanceOsPatchActionPatchingConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder batchSize(@Nullable Output<Integer> batchSize) {
            $.batchSize = batchSize;
            return this;
        }

        public Builder batchSize(Integer batchSize) {
            return batchSize(Output.of(batchSize));
        }

        public Builder patchingConfigStrategy(Output<String> patchingConfigStrategy) {
            $.patchingConfigStrategy = patchingConfigStrategy;
            return this;
        }

        public Builder patchingConfigStrategy(String patchingConfigStrategy) {
            return patchingConfigStrategy(Output.of(patchingConfigStrategy));
        }

        public Builder toleranceThresholdPerBatch(@Nullable Output<Integer> toleranceThresholdPerBatch) {
            $.toleranceThresholdPerBatch = toleranceThresholdPerBatch;
            return this;
        }

        public Builder toleranceThresholdPerBatch(Integer toleranceThresholdPerBatch) {
            return toleranceThresholdPerBatch(Output.of(toleranceThresholdPerBatch));
        }

        public Builder toleranceThresholdPerDomain(@Nullable Output<Integer> toleranceThresholdPerDomain) {
            $.toleranceThresholdPerDomain = toleranceThresholdPerDomain;
            return this;
        }

        public Builder toleranceThresholdPerDomain(Integer toleranceThresholdPerDomain) {
            return toleranceThresholdPerDomain(Output.of(toleranceThresholdPerDomain));
        }

        public Builder waitTimeBetweenBatchInSeconds(@Nullable Output<Integer> waitTimeBetweenBatchInSeconds) {
            $.waitTimeBetweenBatchInSeconds = waitTimeBetweenBatchInSeconds;
            return this;
        }

        public Builder waitTimeBetweenBatchInSeconds(Integer waitTimeBetweenBatchInSeconds) {
            return waitTimeBetweenBatchInSeconds(Output.of(waitTimeBetweenBatchInSeconds));
        }

        public Builder waitTimeBetweenDomainInSeconds(@Nullable Output<Integer> waitTimeBetweenDomainInSeconds) {
            $.waitTimeBetweenDomainInSeconds = waitTimeBetweenDomainInSeconds;
            return this;
        }

        public Builder waitTimeBetweenDomainInSeconds(Integer waitTimeBetweenDomainInSeconds) {
            return waitTimeBetweenDomainInSeconds(Output.of(waitTimeBetweenDomainInSeconds));
        }

        public BdsInstanceOsPatchActionPatchingConfigArgs build() {
            if ($.patchingConfigStrategy == null) {
                throw new MissingRequiredPropertyException("BdsInstanceOsPatchActionPatchingConfigArgs", "patchingConfigStrategy");
            }
            return $;
        }
    }

}
