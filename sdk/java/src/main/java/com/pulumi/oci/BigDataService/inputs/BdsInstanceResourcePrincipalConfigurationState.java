// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceResourcePrincipalConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceResourcePrincipalConfigurationState Empty = new BdsInstanceResourcePrincipalConfigurationState();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId")
    private @Nullable Output<String> bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Optional<Output<String>> bdsInstanceId() {
        return Optional.ofNullable(this.bdsInstanceId);
    }

    /**
     * Base-64 encoded Cluster Admin Password for cluster admin user.
     * 
     */
    @Import(name="clusterAdminPassword")
    private @Nullable Output<String> clusterAdminPassword;

    /**
     * @return Base-64 encoded Cluster Admin Password for cluster admin user.
     * 
     */
    public Optional<Output<String>> clusterAdminPassword() {
        return Optional.ofNullable(this.clusterAdminPassword);
    }

    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
     * 
     */
    @Import(name="forceRefreshResourcePrincipalTrigger")
    private @Nullable Output<Integer> forceRefreshResourcePrincipalTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> forceRefreshResourcePrincipalTrigger() {
        return Optional.ofNullable(this.forceRefreshResourcePrincipalTrigger);
    }

    /**
     * (Updatable) Life span in hours for the resource principal session token.
     * 
     */
    @Import(name="sessionTokenLifeSpanDurationInHours")
    private @Nullable Output<Integer> sessionTokenLifeSpanDurationInHours;

    /**
     * @return (Updatable) Life span in hours for the resource principal session token.
     * 
     */
    public Optional<Output<Integer>> sessionTokenLifeSpanDurationInHours() {
        return Optional.ofNullable(this.sessionTokenLifeSpanDurationInHours);
    }

    /**
     * The state of the ResourcePrincipalConfiguration.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the ResourcePrincipalConfiguration.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time the ResourcePrincipalConfiguration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the ResourcePrincipalConfiguration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * the time the resource principal session token will expired, shown as an rfc 3339 formatted datetime string.
     * 
     */
    @Import(name="timeTokenExpiry")
    private @Nullable Output<String> timeTokenExpiry;

    /**
     * @return the time the resource principal session token will expired, shown as an rfc 3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeTokenExpiry() {
        return Optional.ofNullable(this.timeTokenExpiry);
    }

    /**
     * the time the resource principal session token was refreshed, shown as an rfc 3339 formatted datetime string.
     * 
     */
    @Import(name="timeTokenRefreshed")
    private @Nullable Output<String> timeTokenRefreshed;

    /**
     * @return the time the resource principal session token was refreshed, shown as an rfc 3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeTokenRefreshed() {
        return Optional.ofNullable(this.timeTokenRefreshed);
    }

    /**
     * The time the ResourcePrincipalConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the ResourcePrincipalConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private BdsInstanceResourcePrincipalConfigurationState() {}

    private BdsInstanceResourcePrincipalConfigurationState(BdsInstanceResourcePrincipalConfigurationState $) {
        this.bdsInstanceId = $.bdsInstanceId;
        this.clusterAdminPassword = $.clusterAdminPassword;
        this.displayName = $.displayName;
        this.forceRefreshResourcePrincipalTrigger = $.forceRefreshResourcePrincipalTrigger;
        this.sessionTokenLifeSpanDurationInHours = $.sessionTokenLifeSpanDurationInHours;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeTokenExpiry = $.timeTokenExpiry;
        this.timeTokenRefreshed = $.timeTokenRefreshed;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceResourcePrincipalConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceResourcePrincipalConfigurationState $;

        public Builder() {
            $ = new BdsInstanceResourcePrincipalConfigurationState();
        }

        public Builder(BdsInstanceResourcePrincipalConfigurationState defaults) {
            $ = new BdsInstanceResourcePrincipalConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(@Nullable Output<String> bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            return bdsInstanceId(Output.of(bdsInstanceId));
        }

        /**
         * @param clusterAdminPassword Base-64 encoded Cluster Admin Password for cluster admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(@Nullable Output<String> clusterAdminPassword) {
            $.clusterAdminPassword = clusterAdminPassword;
            return this;
        }

        /**
         * @param clusterAdminPassword Base-64 encoded Cluster Admin Password for cluster admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            return clusterAdminPassword(Output.of(clusterAdminPassword));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param forceRefreshResourcePrincipalTrigger (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder forceRefreshResourcePrincipalTrigger(@Nullable Output<Integer> forceRefreshResourcePrincipalTrigger) {
            $.forceRefreshResourcePrincipalTrigger = forceRefreshResourcePrincipalTrigger;
            return this;
        }

        /**
         * @param forceRefreshResourcePrincipalTrigger (Updatable) An optional property when incremented triggers Force Refresh Resource Principal. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder forceRefreshResourcePrincipalTrigger(Integer forceRefreshResourcePrincipalTrigger) {
            return forceRefreshResourcePrincipalTrigger(Output.of(forceRefreshResourcePrincipalTrigger));
        }

        /**
         * @param sessionTokenLifeSpanDurationInHours (Updatable) Life span in hours for the resource principal session token.
         * 
         * @return builder
         * 
         */
        public Builder sessionTokenLifeSpanDurationInHours(@Nullable Output<Integer> sessionTokenLifeSpanDurationInHours) {
            $.sessionTokenLifeSpanDurationInHours = sessionTokenLifeSpanDurationInHours;
            return this;
        }

        /**
         * @param sessionTokenLifeSpanDurationInHours (Updatable) Life span in hours for the resource principal session token.
         * 
         * @return builder
         * 
         */
        public Builder sessionTokenLifeSpanDurationInHours(Integer sessionTokenLifeSpanDurationInHours) {
            return sessionTokenLifeSpanDurationInHours(Output.of(sessionTokenLifeSpanDurationInHours));
        }

        /**
         * @param state The state of the ResourcePrincipalConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the ResourcePrincipalConfiguration.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The time the ResourcePrincipalConfiguration was created, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the ResourcePrincipalConfiguration was created, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeTokenExpiry the time the resource principal session token will expired, shown as an rfc 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeTokenExpiry(@Nullable Output<String> timeTokenExpiry) {
            $.timeTokenExpiry = timeTokenExpiry;
            return this;
        }

        /**
         * @param timeTokenExpiry the time the resource principal session token will expired, shown as an rfc 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeTokenExpiry(String timeTokenExpiry) {
            return timeTokenExpiry(Output.of(timeTokenExpiry));
        }

        /**
         * @param timeTokenRefreshed the time the resource principal session token was refreshed, shown as an rfc 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeTokenRefreshed(@Nullable Output<String> timeTokenRefreshed) {
            $.timeTokenRefreshed = timeTokenRefreshed;
            return this;
        }

        /**
         * @param timeTokenRefreshed the time the resource principal session token was refreshed, shown as an rfc 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeTokenRefreshed(String timeTokenRefreshed) {
            return timeTokenRefreshed(Output.of(timeTokenRefreshed));
        }

        /**
         * @param timeUpdated The time the ResourcePrincipalConfiguration was updated, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the ResourcePrincipalConfiguration was updated, shown as an RFC 3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public BdsInstanceResourcePrincipalConfigurationState build() {
            return $;
        }
    }

}
