// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceCloudSqlDetailArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceClusterDetailArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceComputeOnlyWorkerNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceMasterNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceNetworkConfigArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceUtilNodeArgs;
import com.pulumi.oci.BigDataService.inputs.BdsInstanceWorkerNodeArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceState Empty = new BdsInstanceState();

    /**
     * (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
     * 
     */
    @Import(name="bootstrapScriptUrl")
    private @Nullable Output<String> bootstrapScriptUrl;

    /**
     * @return (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
     * 
     */
    public Optional<Output<String>> bootstrapScriptUrl() {
        return Optional.ofNullable(this.bootstrapScriptUrl);
    }

    /**
     * -(Optional) The information about added Cloud SQL capability
     * 
     */
    @Import(name="cloudSqlDetails")
    private @Nullable Output<List<BdsInstanceCloudSqlDetailArgs>> cloudSqlDetails;

    /**
     * @return -(Optional) The information about added Cloud SQL capability
     * 
     */
    public Optional<Output<List<BdsInstanceCloudSqlDetailArgs>>> cloudSqlDetails() {
        return Optional.ofNullable(this.cloudSqlDetails);
    }

    /**
     * Base-64 encoded password for Cloudera Manager admin user
     * 
     */
    @Import(name="clusterAdminPassword")
    private @Nullable Output<String> clusterAdminPassword;

    /**
     * @return Base-64 encoded password for Cloudera Manager admin user
     * 
     */
    public Optional<Output<String>> clusterAdminPassword() {
        return Optional.ofNullable(this.clusterAdminPassword);
    }

    /**
     * Specific info about a Hadoop cluster
     * 
     */
    @Import(name="clusterDetails")
    private @Nullable Output<List<BdsInstanceClusterDetailArgs>> clusterDetails;

    /**
     * @return Specific info about a Hadoop cluster
     * 
     */
    public Optional<Output<List<BdsInstanceClusterDetailArgs>>> clusterDetails() {
        return Optional.ofNullable(this.clusterDetails);
    }

    /**
     * The SSH public key used to authenticate the cluster connection.
     * 
     */
    @Import(name="clusterPublicKey")
    private @Nullable Output<String> clusterPublicKey;

    /**
     * @return The SSH public key used to authenticate the cluster connection.
     * 
     */
    public Optional<Output<String>> clusterPublicKey() {
        return Optional.ofNullable(this.clusterPublicKey);
    }

    /**
     * Version of the Hadoop distribution
     * 
     */
    @Import(name="clusterVersion")
    private @Nullable Output<String> clusterVersion;

    /**
     * @return Version of the Hadoop distribution
     * 
     */
    public Optional<Output<String>> clusterVersion() {
        return Optional.ofNullable(this.clusterVersion);
    }

    /**
     * (Updatable) The OCID of the compartment
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="computeOnlyWorkerNode")
    private @Nullable Output<BdsInstanceComputeOnlyWorkerNodeArgs> computeOnlyWorkerNode;

    public Optional<Output<BdsInstanceComputeOnlyWorkerNodeArgs>> computeOnlyWorkerNode() {
        return Optional.ofNullable(this.computeOnlyWorkerNode);
    }

    /**
     * The user who created the BDS instance.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The user who created the BDS instance.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Name of the BDS instance
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Name of the BDS instance
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * -(Optional) (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
     * 
     */
    @Import(name="isCloudSqlConfigured")
    private @Nullable Output<Boolean> isCloudSqlConfigured;

    /**
     * @return -(Optional) (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
     * 
     */
    public Optional<Output<Boolean>> isCloudSqlConfigured() {
        return Optional.ofNullable(this.isCloudSqlConfigured);
    }

    /**
     * Boolean flag specifying whether or not the cluster is HA
     * 
     */
    @Import(name="isHighAvailability")
    private @Nullable Output<Boolean> isHighAvailability;

    /**
     * @return Boolean flag specifying whether or not the cluster is HA
     * 
     */
    public Optional<Output<Boolean>> isHighAvailability() {
        return Optional.ofNullable(this.isHighAvailability);
    }

    /**
     * Boolean flag specifying whether or not the cluster should be setup as secure.
     * 
     */
    @Import(name="isSecure")
    private @Nullable Output<Boolean> isSecure;

    /**
     * @return Boolean flag specifying whether or not the cluster should be setup as secure.
     * 
     */
    public Optional<Output<Boolean>> isSecure() {
        return Optional.ofNullable(this.isSecure);
    }

    /**
     * The user-defined kerberos realm name.
     * 
     */
    @Import(name="kerberosRealmName")
    private @Nullable Output<String> kerberosRealmName;

    /**
     * @return The user-defined kerberos realm name.
     * 
     */
    public Optional<Output<String>> kerberosRealmName() {
        return Optional.ofNullable(this.kerberosRealmName);
    }

    /**
     * (Updatable) The OCID of the Key Management master encryption key.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return (Updatable) The OCID of the Key Management master encryption key.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * The master node in the BDS instance
     * 
     */
    @Import(name="masterNode")
    private @Nullable Output<BdsInstanceMasterNodeArgs> masterNode;

    /**
     * @return The master node in the BDS instance
     * 
     */
    public Optional<Output<BdsInstanceMasterNodeArgs>> masterNode() {
        return Optional.ofNullable(this.masterNode);
    }

    /**
     * Additional configuration of customer&#39;s network.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<BdsInstanceNetworkConfigArgs> networkConfig;

    /**
     * @return Additional configuration of customer&#39;s network.
     * 
     */
    public Optional<Output<BdsInstanceNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * The list of nodes in the BDS instance
     * 
     */
    @Import(name="nodes")
    private @Nullable Output<List<BdsInstanceNodeArgs>> nodes;

    /**
     * @return The list of nodes in the BDS instance
     * 
     */
    public Optional<Output<List<BdsInstanceNodeArgs>>> nodes() {
        return Optional.ofNullable(this.nodes);
    }

    /**
     * The amount of worker nodes should be created
     * 
     */
    @Import(name="numberOfNodes")
    private @Nullable Output<Integer> numberOfNodes;

    /**
     * @return The amount of worker nodes should be created
     * 
     */
    public Optional<Output<Integer>> numberOfNodes() {
        return Optional.ofNullable(this.numberOfNodes);
    }

    /**
     * The state of the BDS instance
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the BDS instance
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time the BDS instance was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the BDS instance was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the BDS instance was updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the BDS instance was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The utility node in the BDS instance
     * 
     */
    @Import(name="utilNode")
    private @Nullable Output<BdsInstanceUtilNodeArgs> utilNode;

    /**
     * @return The utility node in the BDS instance
     * 
     */
    public Optional<Output<BdsInstanceUtilNodeArgs>> utilNode() {
        return Optional.ofNullable(this.utilNode);
    }

    @Import(name="workerNode")
    private @Nullable Output<BdsInstanceWorkerNodeArgs> workerNode;

    public Optional<Output<BdsInstanceWorkerNodeArgs>> workerNode() {
        return Optional.ofNullable(this.workerNode);
    }

    private BdsInstanceState() {}

    private BdsInstanceState(BdsInstanceState $) {
        this.bootstrapScriptUrl = $.bootstrapScriptUrl;
        this.cloudSqlDetails = $.cloudSqlDetails;
        this.clusterAdminPassword = $.clusterAdminPassword;
        this.clusterDetails = $.clusterDetails;
        this.clusterPublicKey = $.clusterPublicKey;
        this.clusterVersion = $.clusterVersion;
        this.compartmentId = $.compartmentId;
        this.computeOnlyWorkerNode = $.computeOnlyWorkerNode;
        this.createdBy = $.createdBy;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isCloudSqlConfigured = $.isCloudSqlConfigured;
        this.isHighAvailability = $.isHighAvailability;
        this.isSecure = $.isSecure;
        this.kerberosRealmName = $.kerberosRealmName;
        this.kmsKeyId = $.kmsKeyId;
        this.masterNode = $.masterNode;
        this.networkConfig = $.networkConfig;
        this.nodes = $.nodes;
        this.numberOfNodes = $.numberOfNodes;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.utilNode = $.utilNode;
        this.workerNode = $.workerNode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceState $;

        public Builder() {
            $ = new BdsInstanceState();
        }

        public Builder(BdsInstanceState defaults) {
            $ = new BdsInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bootstrapScriptUrl (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
         * 
         * @return builder
         * 
         */
        public Builder bootstrapScriptUrl(@Nullable Output<String> bootstrapScriptUrl) {
            $.bootstrapScriptUrl = bootstrapScriptUrl;
            return this;
        }

        /**
         * @param bootstrapScriptUrl (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
         * 
         * @return builder
         * 
         */
        public Builder bootstrapScriptUrl(String bootstrapScriptUrl) {
            return bootstrapScriptUrl(Output.of(bootstrapScriptUrl));
        }

        /**
         * @param cloudSqlDetails -(Optional) The information about added Cloud SQL capability
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlDetails(@Nullable Output<List<BdsInstanceCloudSqlDetailArgs>> cloudSqlDetails) {
            $.cloudSqlDetails = cloudSqlDetails;
            return this;
        }

        /**
         * @param cloudSqlDetails -(Optional) The information about added Cloud SQL capability
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlDetails(List<BdsInstanceCloudSqlDetailArgs> cloudSqlDetails) {
            return cloudSqlDetails(Output.of(cloudSqlDetails));
        }

        /**
         * @param cloudSqlDetails -(Optional) The information about added Cloud SQL capability
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlDetails(BdsInstanceCloudSqlDetailArgs... cloudSqlDetails) {
            return cloudSqlDetails(List.of(cloudSqlDetails));
        }

        /**
         * @param clusterAdminPassword Base-64 encoded password for Cloudera Manager admin user
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(@Nullable Output<String> clusterAdminPassword) {
            $.clusterAdminPassword = clusterAdminPassword;
            return this;
        }

        /**
         * @param clusterAdminPassword Base-64 encoded password for Cloudera Manager admin user
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            return clusterAdminPassword(Output.of(clusterAdminPassword));
        }

        /**
         * @param clusterDetails Specific info about a Hadoop cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterDetails(@Nullable Output<List<BdsInstanceClusterDetailArgs>> clusterDetails) {
            $.clusterDetails = clusterDetails;
            return this;
        }

        /**
         * @param clusterDetails Specific info about a Hadoop cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterDetails(List<BdsInstanceClusterDetailArgs> clusterDetails) {
            return clusterDetails(Output.of(clusterDetails));
        }

        /**
         * @param clusterDetails Specific info about a Hadoop cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterDetails(BdsInstanceClusterDetailArgs... clusterDetails) {
            return clusterDetails(List.of(clusterDetails));
        }

        /**
         * @param clusterPublicKey The SSH public key used to authenticate the cluster connection.
         * 
         * @return builder
         * 
         */
        public Builder clusterPublicKey(@Nullable Output<String> clusterPublicKey) {
            $.clusterPublicKey = clusterPublicKey;
            return this;
        }

        /**
         * @param clusterPublicKey The SSH public key used to authenticate the cluster connection.
         * 
         * @return builder
         * 
         */
        public Builder clusterPublicKey(String clusterPublicKey) {
            return clusterPublicKey(Output.of(clusterPublicKey));
        }

        /**
         * @param clusterVersion Version of the Hadoop distribution
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(@Nullable Output<String> clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        /**
         * @param clusterVersion Version of the Hadoop distribution
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(String clusterVersion) {
            return clusterVersion(Output.of(clusterVersion));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder computeOnlyWorkerNode(@Nullable Output<BdsInstanceComputeOnlyWorkerNodeArgs> computeOnlyWorkerNode) {
            $.computeOnlyWorkerNode = computeOnlyWorkerNode;
            return this;
        }

        public Builder computeOnlyWorkerNode(BdsInstanceComputeOnlyWorkerNodeArgs computeOnlyWorkerNode) {
            return computeOnlyWorkerNode(Output.of(computeOnlyWorkerNode));
        }

        /**
         * @param createdBy The user who created the BDS instance.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The user who created the BDS instance.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Name of the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Name of the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isCloudSqlConfigured -(Optional) (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
         * 
         * @return builder
         * 
         */
        public Builder isCloudSqlConfigured(@Nullable Output<Boolean> isCloudSqlConfigured) {
            $.isCloudSqlConfigured = isCloudSqlConfigured;
            return this;
        }

        /**
         * @param isCloudSqlConfigured -(Optional) (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
         * 
         * @return builder
         * 
         */
        public Builder isCloudSqlConfigured(Boolean isCloudSqlConfigured) {
            return isCloudSqlConfigured(Output.of(isCloudSqlConfigured));
        }

        /**
         * @param isHighAvailability Boolean flag specifying whether or not the cluster is HA
         * 
         * @return builder
         * 
         */
        public Builder isHighAvailability(@Nullable Output<Boolean> isHighAvailability) {
            $.isHighAvailability = isHighAvailability;
            return this;
        }

        /**
         * @param isHighAvailability Boolean flag specifying whether or not the cluster is HA
         * 
         * @return builder
         * 
         */
        public Builder isHighAvailability(Boolean isHighAvailability) {
            return isHighAvailability(Output.of(isHighAvailability));
        }

        /**
         * @param isSecure Boolean flag specifying whether or not the cluster should be setup as secure.
         * 
         * @return builder
         * 
         */
        public Builder isSecure(@Nullable Output<Boolean> isSecure) {
            $.isSecure = isSecure;
            return this;
        }

        /**
         * @param isSecure Boolean flag specifying whether or not the cluster should be setup as secure.
         * 
         * @return builder
         * 
         */
        public Builder isSecure(Boolean isSecure) {
            return isSecure(Output.of(isSecure));
        }

        /**
         * @param kerberosRealmName The user-defined kerberos realm name.
         * 
         * @return builder
         * 
         */
        public Builder kerberosRealmName(@Nullable Output<String> kerberosRealmName) {
            $.kerberosRealmName = kerberosRealmName;
            return this;
        }

        /**
         * @param kerberosRealmName The user-defined kerberos realm name.
         * 
         * @return builder
         * 
         */
        public Builder kerberosRealmName(String kerberosRealmName) {
            return kerberosRealmName(Output.of(kerberosRealmName));
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the Key Management master encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the Key Management master encryption key.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param masterNode The master node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder masterNode(@Nullable Output<BdsInstanceMasterNodeArgs> masterNode) {
            $.masterNode = masterNode;
            return this;
        }

        /**
         * @param masterNode The master node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder masterNode(BdsInstanceMasterNodeArgs masterNode) {
            return masterNode(Output.of(masterNode));
        }

        /**
         * @param networkConfig Additional configuration of customer&#39;s network.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(@Nullable Output<BdsInstanceNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        /**
         * @param networkConfig Additional configuration of customer&#39;s network.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(BdsInstanceNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param nodes The list of nodes in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder nodes(@Nullable Output<List<BdsInstanceNodeArgs>> nodes) {
            $.nodes = nodes;
            return this;
        }

        /**
         * @param nodes The list of nodes in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder nodes(List<BdsInstanceNodeArgs> nodes) {
            return nodes(Output.of(nodes));
        }

        /**
         * @param nodes The list of nodes in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder nodes(BdsInstanceNodeArgs... nodes) {
            return nodes(List.of(nodes));
        }

        /**
         * @param numberOfNodes The amount of worker nodes should be created
         * 
         * @return builder
         * 
         */
        public Builder numberOfNodes(@Nullable Output<Integer> numberOfNodes) {
            $.numberOfNodes = numberOfNodes;
            return this;
        }

        /**
         * @param numberOfNodes The amount of worker nodes should be created
         * 
         * @return builder
         * 
         */
        public Builder numberOfNodes(Integer numberOfNodes) {
            return numberOfNodes(Output.of(numberOfNodes));
        }

        /**
         * @param state The state of the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The time the BDS instance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the BDS instance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the BDS instance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the BDS instance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param utilNode The utility node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder utilNode(@Nullable Output<BdsInstanceUtilNodeArgs> utilNode) {
            $.utilNode = utilNode;
            return this;
        }

        /**
         * @param utilNode The utility node in the BDS instance
         * 
         * @return builder
         * 
         */
        public Builder utilNode(BdsInstanceUtilNodeArgs utilNode) {
            return utilNode(Output.of(utilNode));
        }

        public Builder workerNode(@Nullable Output<BdsInstanceWorkerNodeArgs> workerNode) {
            $.workerNode = workerNode;
            return this;
        }

        public Builder workerNode(BdsInstanceWorkerNodeArgs workerNode) {
            return workerNode(Output.of(workerNode));
        }

        public BdsInstanceState build() {
            return $;
        }
    }

}
