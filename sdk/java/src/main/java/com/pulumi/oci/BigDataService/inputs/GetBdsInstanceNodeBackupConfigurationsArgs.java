// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.inputs.GetBdsInstanceNodeBackupConfigurationsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBdsInstanceNodeBackupConfigurationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBdsInstanceNodeBackupConfigurationsArgs Empty = new GetBdsInstanceNodeBackupConfigurationsArgs();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId", required=true)
    private Output<String> bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Output<String> bdsInstanceId() {
        return this.bdsInstanceId;
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetBdsInstanceNodeBackupConfigurationsFilterArgs>> filters;

    public Optional<Output<List<GetBdsInstanceNodeBackupConfigurationsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The state of the NodeBackupConfiguration configuration.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the NodeBackupConfiguration configuration.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetBdsInstanceNodeBackupConfigurationsArgs() {}

    private GetBdsInstanceNodeBackupConfigurationsArgs(GetBdsInstanceNodeBackupConfigurationsArgs $) {
        this.bdsInstanceId = $.bdsInstanceId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBdsInstanceNodeBackupConfigurationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBdsInstanceNodeBackupConfigurationsArgs $;

        public Builder() {
            $ = new GetBdsInstanceNodeBackupConfigurationsArgs();
        }

        public Builder(GetBdsInstanceNodeBackupConfigurationsArgs defaults) {
            $ = new GetBdsInstanceNodeBackupConfigurationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(Output<String> bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            return bdsInstanceId(Output.of(bdsInstanceId));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetBdsInstanceNodeBackupConfigurationsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetBdsInstanceNodeBackupConfigurationsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetBdsInstanceNodeBackupConfigurationsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state The state of the NodeBackupConfiguration configuration.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the NodeBackupConfiguration configuration.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetBdsInstanceNodeBackupConfigurationsArgs build() {
            if ($.bdsInstanceId == null) {
                throw new MissingRequiredPropertyException("GetBdsInstanceNodeBackupConfigurationsArgs", "bdsInstanceId");
            }
            return $;
        }
    }

}
