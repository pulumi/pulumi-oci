// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.inputs.GetBdsInstanceNodeBackupConfigurationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBdsInstanceNodeBackupConfigurationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBdsInstanceNodeBackupConfigurationsPlainArgs Empty = new GetBdsInstanceNodeBackupConfigurationsPlainArgs();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId", required=true)
    private String bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetBdsInstanceNodeBackupConfigurationsFilter> filters;

    public Optional<List<GetBdsInstanceNodeBackupConfigurationsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The state of the NodeBackupConfiguration configuration.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The state of the NodeBackupConfiguration configuration.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetBdsInstanceNodeBackupConfigurationsPlainArgs() {}

    private GetBdsInstanceNodeBackupConfigurationsPlainArgs(GetBdsInstanceNodeBackupConfigurationsPlainArgs $) {
        this.bdsInstanceId = $.bdsInstanceId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBdsInstanceNodeBackupConfigurationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBdsInstanceNodeBackupConfigurationsPlainArgs $;

        public Builder() {
            $ = new GetBdsInstanceNodeBackupConfigurationsPlainArgs();
        }

        public Builder(GetBdsInstanceNodeBackupConfigurationsPlainArgs defaults) {
            $ = new GetBdsInstanceNodeBackupConfigurationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetBdsInstanceNodeBackupConfigurationsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetBdsInstanceNodeBackupConfigurationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state The state of the NodeBackupConfiguration configuration.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetBdsInstanceNodeBackupConfigurationsPlainArgs build() {
            if ($.bdsInstanceId == null) {
                throw new MissingRequiredPropertyException("GetBdsInstanceNodeBackupConfigurationsPlainArgs", "bdsInstanceId");
            }
            return $;
        }
    }

}
