// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.inputs.GetBdsInstancePatchHistoriesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBdsInstancePatchHistoriesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBdsInstancePatchHistoriesPlainArgs Empty = new GetBdsInstancePatchHistoriesPlainArgs();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId", required=true)
    private String bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }

    @Import(name="filters")
    private @Nullable List<GetBdsInstancePatchHistoriesFilter> filters;

    public Optional<List<GetBdsInstancePatchHistoriesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The type of a BDS patch history entity.
     * 
     */
    @Import(name="patchType")
    private @Nullable String patchType;

    /**
     * @return The type of a BDS patch history entity.
     * 
     */
    public Optional<String> patchType() {
        return Optional.ofNullable(this.patchType);
    }

    /**
     * The version of the patch
     * 
     */
    @Import(name="patchVersion")
    private @Nullable String patchVersion;

    /**
     * @return The version of the patch
     * 
     */
    public Optional<String> patchVersion() {
        return Optional.ofNullable(this.patchVersion);
    }

    /**
     * The status of the patch.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The status of the patch.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetBdsInstancePatchHistoriesPlainArgs() {}

    private GetBdsInstancePatchHistoriesPlainArgs(GetBdsInstancePatchHistoriesPlainArgs $) {
        this.bdsInstanceId = $.bdsInstanceId;
        this.filters = $.filters;
        this.patchType = $.patchType;
        this.patchVersion = $.patchVersion;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBdsInstancePatchHistoriesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBdsInstancePatchHistoriesPlainArgs $;

        public Builder() {
            $ = new GetBdsInstancePatchHistoriesPlainArgs();
        }

        public Builder(GetBdsInstancePatchHistoriesPlainArgs defaults) {
            $ = new GetBdsInstancePatchHistoriesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        public Builder filters(@Nullable List<GetBdsInstancePatchHistoriesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetBdsInstancePatchHistoriesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param patchType The type of a BDS patch history entity.
         * 
         * @return builder
         * 
         */
        public Builder patchType(@Nullable String patchType) {
            $.patchType = patchType;
            return this;
        }

        /**
         * @param patchVersion The version of the patch
         * 
         * @return builder
         * 
         */
        public Builder patchVersion(@Nullable String patchVersion) {
            $.patchVersion = patchVersion;
            return this;
        }

        /**
         * @param state The status of the patch.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetBdsInstancePatchHistoriesPlainArgs build() {
            if ($.bdsInstanceId == null) {
                throw new MissingRequiredPropertyException("GetBdsInstancePatchHistoriesPlainArgs", "bdsInstanceId");
            }
            return $;
        }
    }

}
