// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.outputs.AutoScalingConfigurationPolicyDetailsScaleDownConfig;
import com.pulumi.oci.BigDataService.outputs.AutoScalingConfigurationPolicyDetailsScaleInConfig;
import com.pulumi.oci.BigDataService.outputs.AutoScalingConfigurationPolicyDetailsScaleOutConfig;
import com.pulumi.oci.BigDataService.outputs.AutoScalingConfigurationPolicyDetailsScaleUpConfig;
import com.pulumi.oci.BigDataService.outputs.AutoScalingConfigurationPolicyDetailsScheduleDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutoScalingConfigurationPolicyDetails {
    /**
     * @return The type of autoscaling action to take.
     * 
     */
    private @Nullable String actionType;
    /**
     * @return Type of autoscaling policy.
     * 
     */
    private String policyType;
    /**
     * @return (Updatable) Configration for a metric based vertical scale-down policy.
     * 
     */
    private @Nullable AutoScalingConfigurationPolicyDetailsScaleDownConfig scaleDownConfig;
    /**
     * @return (Updatable) Configration for a metric based horizontal scale-in policy.
     * 
     */
    private @Nullable AutoScalingConfigurationPolicyDetailsScaleInConfig scaleInConfig;
    /**
     * @return (Updatable) Configration for a metric based horizontal scale-out policy.
     * 
     */
    private @Nullable AutoScalingConfigurationPolicyDetailsScaleOutConfig scaleOutConfig;
    /**
     * @return (Updatable) Configration for a metric based vertical scale-up policy.
     * 
     */
    private @Nullable AutoScalingConfigurationPolicyDetailsScaleUpConfig scaleUpConfig;
    /**
     * @return (Updatable) Details of a horizontal scaling schedule.
     * 
     */
    private @Nullable List<AutoScalingConfigurationPolicyDetailsScheduleDetail> scheduleDetails;
    /**
     * @return (Updatable) The time zone of the execution schedule, in IANA time zone database name format
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable String timezone;
    /**
     * @return The type of autoscaling trigger.
     * 
     */
    private @Nullable String triggerType;

    private AutoScalingConfigurationPolicyDetails() {}
    /**
     * @return The type of autoscaling action to take.
     * 
     */
    public Optional<String> actionType() {
        return Optional.ofNullable(this.actionType);
    }
    /**
     * @return Type of autoscaling policy.
     * 
     */
    public String policyType() {
        return this.policyType;
    }
    /**
     * @return (Updatable) Configration for a metric based vertical scale-down policy.
     * 
     */
    public Optional<AutoScalingConfigurationPolicyDetailsScaleDownConfig> scaleDownConfig() {
        return Optional.ofNullable(this.scaleDownConfig);
    }
    /**
     * @return (Updatable) Configration for a metric based horizontal scale-in policy.
     * 
     */
    public Optional<AutoScalingConfigurationPolicyDetailsScaleInConfig> scaleInConfig() {
        return Optional.ofNullable(this.scaleInConfig);
    }
    /**
     * @return (Updatable) Configration for a metric based horizontal scale-out policy.
     * 
     */
    public Optional<AutoScalingConfigurationPolicyDetailsScaleOutConfig> scaleOutConfig() {
        return Optional.ofNullable(this.scaleOutConfig);
    }
    /**
     * @return (Updatable) Configration for a metric based vertical scale-up policy.
     * 
     */
    public Optional<AutoScalingConfigurationPolicyDetailsScaleUpConfig> scaleUpConfig() {
        return Optional.ofNullable(this.scaleUpConfig);
    }
    /**
     * @return (Updatable) Details of a horizontal scaling schedule.
     * 
     */
    public List<AutoScalingConfigurationPolicyDetailsScheduleDetail> scheduleDetails() {
        return this.scheduleDetails == null ? List.of() : this.scheduleDetails;
    }
    /**
     * @return (Updatable) The time zone of the execution schedule, in IANA time zone database name format
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<String> timezone() {
        return Optional.ofNullable(this.timezone);
    }
    /**
     * @return The type of autoscaling trigger.
     * 
     */
    public Optional<String> triggerType() {
        return Optional.ofNullable(this.triggerType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoScalingConfigurationPolicyDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String actionType;
        private String policyType;
        private @Nullable AutoScalingConfigurationPolicyDetailsScaleDownConfig scaleDownConfig;
        private @Nullable AutoScalingConfigurationPolicyDetailsScaleInConfig scaleInConfig;
        private @Nullable AutoScalingConfigurationPolicyDetailsScaleOutConfig scaleOutConfig;
        private @Nullable AutoScalingConfigurationPolicyDetailsScaleUpConfig scaleUpConfig;
        private @Nullable List<AutoScalingConfigurationPolicyDetailsScheduleDetail> scheduleDetails;
        private @Nullable String timezone;
        private @Nullable String triggerType;
        public Builder() {}
        public Builder(AutoScalingConfigurationPolicyDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionType = defaults.actionType;
    	      this.policyType = defaults.policyType;
    	      this.scaleDownConfig = defaults.scaleDownConfig;
    	      this.scaleInConfig = defaults.scaleInConfig;
    	      this.scaleOutConfig = defaults.scaleOutConfig;
    	      this.scaleUpConfig = defaults.scaleUpConfig;
    	      this.scheduleDetails = defaults.scheduleDetails;
    	      this.timezone = defaults.timezone;
    	      this.triggerType = defaults.triggerType;
        }

        @CustomType.Setter
        public Builder actionType(@Nullable String actionType) {

            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(String policyType) {
            if (policyType == null) {
              throw new MissingRequiredPropertyException("AutoScalingConfigurationPolicyDetails", "policyType");
            }
            this.policyType = policyType;
            return this;
        }
        @CustomType.Setter
        public Builder scaleDownConfig(@Nullable AutoScalingConfigurationPolicyDetailsScaleDownConfig scaleDownConfig) {

            this.scaleDownConfig = scaleDownConfig;
            return this;
        }
        @CustomType.Setter
        public Builder scaleInConfig(@Nullable AutoScalingConfigurationPolicyDetailsScaleInConfig scaleInConfig) {

            this.scaleInConfig = scaleInConfig;
            return this;
        }
        @CustomType.Setter
        public Builder scaleOutConfig(@Nullable AutoScalingConfigurationPolicyDetailsScaleOutConfig scaleOutConfig) {

            this.scaleOutConfig = scaleOutConfig;
            return this;
        }
        @CustomType.Setter
        public Builder scaleUpConfig(@Nullable AutoScalingConfigurationPolicyDetailsScaleUpConfig scaleUpConfig) {

            this.scaleUpConfig = scaleUpConfig;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleDetails(@Nullable List<AutoScalingConfigurationPolicyDetailsScheduleDetail> scheduleDetails) {

            this.scheduleDetails = scheduleDetails;
            return this;
        }
        public Builder scheduleDetails(AutoScalingConfigurationPolicyDetailsScheduleDetail... scheduleDetails) {
            return scheduleDetails(List.of(scheduleDetails));
        }
        @CustomType.Setter
        public Builder timezone(@Nullable String timezone) {

            this.timezone = timezone;
            return this;
        }
        @CustomType.Setter
        public Builder triggerType(@Nullable String triggerType) {

            this.triggerType = triggerType;
            return this;
        }
        public AutoScalingConfigurationPolicyDetails build() {
            final var _resultValue = new AutoScalingConfigurationPolicyDetails();
            _resultValue.actionType = actionType;
            _resultValue.policyType = policyType;
            _resultValue.scaleDownConfig = scaleDownConfig;
            _resultValue.scaleInConfig = scaleInConfig;
            _resultValue.scaleOutConfig = scaleOutConfig;
            _resultValue.scaleUpConfig = scaleUpConfig;
            _resultValue.scheduleDetails = scheduleDetails;
            _resultValue.timezone = timezone;
            _resultValue.triggerType = triggerType;
            return _resultValue;
        }
    }
}
