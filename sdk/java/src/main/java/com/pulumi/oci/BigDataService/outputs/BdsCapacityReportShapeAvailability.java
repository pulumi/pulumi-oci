// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.outputs.BdsCapacityReportShapeAvailabilityDomainLevelCapacityReport;
import com.pulumi.oci.BigDataService.outputs.BdsCapacityReportShapeAvailabilityShapeConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BdsCapacityReportShapeAvailability {
    /**
     * @return Information about the capacity in each domain.
     * 
     */
    private @Nullable List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReport> domainLevelCapacityReports;
    /**
     * @return The shape that you want to request a capacity report for.
     * 
     */
    private String shape;
    /**
     * @return The shape configuration requested for the node.
     * 
     */
    private @Nullable BdsCapacityReportShapeAvailabilityShapeConfig shapeConfig;

    private BdsCapacityReportShapeAvailability() {}
    /**
     * @return Information about the capacity in each domain.
     * 
     */
    public List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReport> domainLevelCapacityReports() {
        return this.domainLevelCapacityReports == null ? List.of() : this.domainLevelCapacityReports;
    }
    /**
     * @return The shape that you want to request a capacity report for.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The shape configuration requested for the node.
     * 
     */
    public Optional<BdsCapacityReportShapeAvailabilityShapeConfig> shapeConfig() {
        return Optional.ofNullable(this.shapeConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BdsCapacityReportShapeAvailability defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReport> domainLevelCapacityReports;
        private String shape;
        private @Nullable BdsCapacityReportShapeAvailabilityShapeConfig shapeConfig;
        public Builder() {}
        public Builder(BdsCapacityReportShapeAvailability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainLevelCapacityReports = defaults.domainLevelCapacityReports;
    	      this.shape = defaults.shape;
    	      this.shapeConfig = defaults.shapeConfig;
        }

        @CustomType.Setter
        public Builder domainLevelCapacityReports(@Nullable List<BdsCapacityReportShapeAvailabilityDomainLevelCapacityReport> domainLevelCapacityReports) {

            this.domainLevelCapacityReports = domainLevelCapacityReports;
            return this;
        }
        public Builder domainLevelCapacityReports(BdsCapacityReportShapeAvailabilityDomainLevelCapacityReport... domainLevelCapacityReports) {
            return domainLevelCapacityReports(List.of(domainLevelCapacityReports));
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("BdsCapacityReportShapeAvailability", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeConfig(@Nullable BdsCapacityReportShapeAvailabilityShapeConfig shapeConfig) {

            this.shapeConfig = shapeConfig;
            return this;
        }
        public BdsCapacityReportShapeAvailability build() {
            final var _resultValue = new BdsCapacityReportShapeAvailability();
            _resultValue.domainLevelCapacityReports = domainLevelCapacityReports;
            _resultValue.shape = shape;
            _resultValue.shapeConfig = shapeConfig;
            return _resultValue;
        }
    }
}
