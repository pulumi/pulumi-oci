// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.BdsInstanceCloudSqlDetailKerberosDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BdsInstanceCloudSqlDetail {
    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    private @Nullable String blockVolumeSizeInGbs;
    /**
     * @return IP address of the node
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return Boolean flag specifying whether or not are Kerberos principals mapped to database users.
     * 
     */
    private @Nullable Boolean isKerberosMappedToDatabaseUsers;
    /**
     * @return Details about Kerberos principals
     * 
     */
    private @Nullable List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
    /**
     * @return The total amount of memory available to the node, in gigabytes
     * 
     */
    private @Nullable Integer memoryInGbs;
    /**
     * @return The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
     * 
     */
    private @Nullable Integer nvmes;
    /**
     * @return The total number of OCPUs available to the node.
     * 
     */
    private @Nullable Integer ocpus;
    /**
     * @return Shape of the node
     * 
     */
    private String shape;

    private BdsInstanceCloudSqlDetail() {}
    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    public Optional<String> blockVolumeSizeInGbs() {
        return Optional.ofNullable(this.blockVolumeSizeInGbs);
    }
    /**
     * @return IP address of the node
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return Boolean flag specifying whether or not are Kerberos principals mapped to database users.
     * 
     */
    public Optional<Boolean> isKerberosMappedToDatabaseUsers() {
        return Optional.ofNullable(this.isKerberosMappedToDatabaseUsers);
    }
    /**
     * @return Details about Kerberos principals
     * 
     */
    public List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails() {
        return this.kerberosDetails == null ? List.of() : this.kerberosDetails;
    }
    /**
     * @return The total amount of memory available to the node, in gigabytes
     * 
     */
    public Optional<Integer> memoryInGbs() {
        return Optional.ofNullable(this.memoryInGbs);
    }
    /**
     * @return The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
     * 
     */
    public Optional<Integer> nvmes() {
        return Optional.ofNullable(this.nvmes);
    }
    /**
     * @return The total number of OCPUs available to the node.
     * 
     */
    public Optional<Integer> ocpus() {
        return Optional.ofNullable(this.ocpus);
    }
    /**
     * @return Shape of the node
     * 
     */
    public String shape() {
        return this.shape;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BdsInstanceCloudSqlDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String blockVolumeSizeInGbs;
        private @Nullable String ipAddress;
        private @Nullable Boolean isKerberosMappedToDatabaseUsers;
        private @Nullable List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
        private @Nullable Integer memoryInGbs;
        private @Nullable Integer nvmes;
        private @Nullable Integer ocpus;
        private String shape;
        public Builder() {}
        public Builder(BdsInstanceCloudSqlDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockVolumeSizeInGbs = defaults.blockVolumeSizeInGbs;
    	      this.ipAddress = defaults.ipAddress;
    	      this.isKerberosMappedToDatabaseUsers = defaults.isKerberosMappedToDatabaseUsers;
    	      this.kerberosDetails = defaults.kerberosDetails;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.nvmes = defaults.nvmes;
    	      this.ocpus = defaults.ocpus;
    	      this.shape = defaults.shape;
        }

        @CustomType.Setter
        public Builder blockVolumeSizeInGbs(@Nullable String blockVolumeSizeInGbs) {
            this.blockVolumeSizeInGbs = blockVolumeSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder isKerberosMappedToDatabaseUsers(@Nullable Boolean isKerberosMappedToDatabaseUsers) {
            this.isKerberosMappedToDatabaseUsers = isKerberosMappedToDatabaseUsers;
            return this;
        }
        @CustomType.Setter
        public Builder kerberosDetails(@Nullable List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails) {
            this.kerberosDetails = kerberosDetails;
            return this;
        }
        public Builder kerberosDetails(BdsInstanceCloudSqlDetailKerberosDetail... kerberosDetails) {
            return kerberosDetails(List.of(kerberosDetails));
        }
        @CustomType.Setter
        public Builder memoryInGbs(@Nullable Integer memoryInGbs) {
            this.memoryInGbs = memoryInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder nvmes(@Nullable Integer nvmes) {
            this.nvmes = nvmes;
            return this;
        }
        @CustomType.Setter
        public Builder ocpus(@Nullable Integer ocpus) {
            this.ocpus = ocpus;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        public BdsInstanceCloudSqlDetail build() {
            final var o = new BdsInstanceCloudSqlDetail();
            o.blockVolumeSizeInGbs = blockVolumeSizeInGbs;
            o.ipAddress = ipAddress;
            o.isKerberosMappedToDatabaseUsers = isKerberosMappedToDatabaseUsers;
            o.kerberosDetails = kerberosDetails;
            o.memoryInGbs = memoryInGbs;
            o.nvmes = nvmes;
            o.ocpus = ocpus;
            o.shape = shape;
            return o;
        }
    }
}
