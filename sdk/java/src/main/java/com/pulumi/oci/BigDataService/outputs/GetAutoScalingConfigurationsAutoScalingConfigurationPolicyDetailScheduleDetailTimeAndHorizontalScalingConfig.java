// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig {
    private Integer targetNodeCount;
    private String timeRecurrence;

    private GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig() {}
    public Integer targetNodeCount() {
        return this.targetNodeCount;
    }
    public String timeRecurrence() {
        return this.timeRecurrence;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer targetNodeCount;
        private String timeRecurrence;
        public Builder() {}
        public Builder(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetNodeCount = defaults.targetNodeCount;
    	      this.timeRecurrence = defaults.timeRecurrence;
        }

        @CustomType.Setter
        public Builder targetNodeCount(Integer targetNodeCount) {
            if (targetNodeCount == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig", "targetNodeCount");
            }
            this.targetNodeCount = targetNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder timeRecurrence(String timeRecurrence) {
            if (timeRecurrence == null) {
              throw new MissingRequiredPropertyException("GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig", "timeRecurrence");
            }
            this.timeRecurrence = timeRecurrence;
            return this;
        }
        public GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig build() {
            final var _resultValue = new GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig();
            _resultValue.targetNodeCount = targetNodeCount;
            _resultValue.timeRecurrence = timeRecurrence;
            return _resultValue;
        }
    }
}
