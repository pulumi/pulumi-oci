// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig {
    private final Integer targetNodeCount;
    private final String timeRecurrence;

    @CustomType.Constructor
    private GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig(
        @CustomType.Parameter("targetNodeCount") Integer targetNodeCount,
        @CustomType.Parameter("timeRecurrence") String timeRecurrence) {
        this.targetNodeCount = targetNodeCount;
        this.timeRecurrence = timeRecurrence;
    }

    public Integer targetNodeCount() {
        return this.targetNodeCount;
    }
    public String timeRecurrence() {
        return this.timeRecurrence;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer targetNodeCount;
        private String timeRecurrence;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetNodeCount = defaults.targetNodeCount;
    	      this.timeRecurrence = defaults.timeRecurrence;
        }

        public Builder targetNodeCount(Integer targetNodeCount) {
            this.targetNodeCount = Objects.requireNonNull(targetNodeCount);
            return this;
        }
        public Builder timeRecurrence(String timeRecurrence) {
            this.timeRecurrence = Objects.requireNonNull(timeRecurrence);
            return this;
        }        public GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig build() {
            return new GetAutoScalingConfigurationsAutoScalingConfigurationPolicyDetailScheduleDetailTimeAndHorizontalScalingConfig(targetNodeCount, timeRecurrence);
        }
    }
}
