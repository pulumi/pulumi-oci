// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceGetOsPatchFilter;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceGetOsPatchTargetPackage;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetBdsInstanceGetOsPatchResult {
    private String bdsInstanceId;
    private @Nullable List<GetBdsInstanceGetOsPatchFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Minimum BDS version required to install current OS patch.
     * 
     */
    private String minBdsVersion;
    /**
     * @return Map of major ODH version to minimum ODH version required to install current OS patch. e.g. {ODH0.9: 0.9.1}
     * 
     */
    private Map<String,Object> minCompatibleOdhVersionMap;
    /**
     * @return Version of the os patch.
     * 
     */
    private String osPatchVersion;
    /**
     * @return Type of a specific os patch. REGULAR means standard released os patches. CUSTOM means os patches with some customizations. EMERGENT means os patches with some emergency fixes that should be prioritized.
     * 
     */
    private String patchType;
    /**
     * @return Released date of the OS patch.
     * 
     */
    private String releaseDate;
    /**
     * @return List of summaries of individual target packages.
     * 
     */
    private List<GetBdsInstanceGetOsPatchTargetPackage> targetPackages;

    private GetBdsInstanceGetOsPatchResult() {}
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    public List<GetBdsInstanceGetOsPatchFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Minimum BDS version required to install current OS patch.
     * 
     */
    public String minBdsVersion() {
        return this.minBdsVersion;
    }
    /**
     * @return Map of major ODH version to minimum ODH version required to install current OS patch. e.g. {ODH0.9: 0.9.1}
     * 
     */
    public Map<String,Object> minCompatibleOdhVersionMap() {
        return this.minCompatibleOdhVersionMap;
    }
    /**
     * @return Version of the os patch.
     * 
     */
    public String osPatchVersion() {
        return this.osPatchVersion;
    }
    /**
     * @return Type of a specific os patch. REGULAR means standard released os patches. CUSTOM means os patches with some customizations. EMERGENT means os patches with some emergency fixes that should be prioritized.
     * 
     */
    public String patchType() {
        return this.patchType;
    }
    /**
     * @return Released date of the OS patch.
     * 
     */
    public String releaseDate() {
        return this.releaseDate;
    }
    /**
     * @return List of summaries of individual target packages.
     * 
     */
    public List<GetBdsInstanceGetOsPatchTargetPackage> targetPackages() {
        return this.targetPackages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceGetOsPatchResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bdsInstanceId;
        private @Nullable List<GetBdsInstanceGetOsPatchFilter> filters;
        private String id;
        private String minBdsVersion;
        private Map<String,Object> minCompatibleOdhVersionMap;
        private String osPatchVersion;
        private String patchType;
        private String releaseDate;
        private List<GetBdsInstanceGetOsPatchTargetPackage> targetPackages;
        public Builder() {}
        public Builder(GetBdsInstanceGetOsPatchResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.minBdsVersion = defaults.minBdsVersion;
    	      this.minCompatibleOdhVersionMap = defaults.minCompatibleOdhVersionMap;
    	      this.osPatchVersion = defaults.osPatchVersion;
    	      this.patchType = defaults.patchType;
    	      this.releaseDate = defaults.releaseDate;
    	      this.targetPackages = defaults.targetPackages;
        }

        @CustomType.Setter
        public Builder bdsInstanceId(String bdsInstanceId) {
            this.bdsInstanceId = Objects.requireNonNull(bdsInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetBdsInstanceGetOsPatchFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBdsInstanceGetOsPatchFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder minBdsVersion(String minBdsVersion) {
            this.minBdsVersion = Objects.requireNonNull(minBdsVersion);
            return this;
        }
        @CustomType.Setter
        public Builder minCompatibleOdhVersionMap(Map<String,Object> minCompatibleOdhVersionMap) {
            this.minCompatibleOdhVersionMap = Objects.requireNonNull(minCompatibleOdhVersionMap);
            return this;
        }
        @CustomType.Setter
        public Builder osPatchVersion(String osPatchVersion) {
            this.osPatchVersion = Objects.requireNonNull(osPatchVersion);
            return this;
        }
        @CustomType.Setter
        public Builder patchType(String patchType) {
            this.patchType = Objects.requireNonNull(patchType);
            return this;
        }
        @CustomType.Setter
        public Builder releaseDate(String releaseDate) {
            this.releaseDate = Objects.requireNonNull(releaseDate);
            return this;
        }
        @CustomType.Setter
        public Builder targetPackages(List<GetBdsInstanceGetOsPatchTargetPackage> targetPackages) {
            this.targetPackages = Objects.requireNonNull(targetPackages);
            return this;
        }
        public Builder targetPackages(GetBdsInstanceGetOsPatchTargetPackage... targetPackages) {
            return targetPackages(List.of(targetPackages));
        }
        public GetBdsInstanceGetOsPatchResult build() {
            final var o = new GetBdsInstanceGetOsPatchResult();
            o.bdsInstanceId = bdsInstanceId;
            o.filters = filters;
            o.id = id;
            o.minBdsVersion = minBdsVersion;
            o.minCompatibleOdhVersionMap = minCompatibleOdhVersionMap;
            o.osPatchVersion = osPatchVersion;
            o.patchType = patchType;
            o.releaseDate = releaseDate;
            o.targetPackages = targetPackages;
            return o;
        }
    }
}
