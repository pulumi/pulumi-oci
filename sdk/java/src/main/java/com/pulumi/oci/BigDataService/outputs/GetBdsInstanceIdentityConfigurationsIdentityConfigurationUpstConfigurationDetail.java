// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail {
    /**
     * @return Master Encryption key used for encrypting token exchange keytab.
     * 
     */
    private String masterEncryptionKeyId;
    /**
     * @return The instance OCID of the node, which is the resource from which the node backup was acquired.
     * 
     */
    private String vaultId;

    private GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail() {}
    /**
     * @return Master Encryption key used for encrypting token exchange keytab.
     * 
     */
    public String masterEncryptionKeyId() {
        return this.masterEncryptionKeyId;
    }
    /**
     * @return The instance OCID of the node, which is the resource from which the node backup was acquired.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String masterEncryptionKeyId;
        private String vaultId;
        public Builder() {}
        public Builder(GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.masterEncryptionKeyId = defaults.masterEncryptionKeyId;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder masterEncryptionKeyId(String masterEncryptionKeyId) {
            if (masterEncryptionKeyId == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail", "masterEncryptionKeyId");
            }
            this.masterEncryptionKeyId = masterEncryptionKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        public GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail build() {
            final var _resultValue = new GetBdsInstanceIdentityConfigurationsIdentityConfigurationUpstConfigurationDetail();
            _resultValue.masterEncryptionKeyId = masterEncryptionKeyId;
            _resultValue.vaultId = vaultId;
            return _resultValue;
        }
    }
}
