// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration {
    private @Nullable Integer activateTrigger;
    /**
     * @return The ID of the API key that is associated with the external metastore in the metastore configuration
     * 
     */
    private @Nullable String bdsApiKeyId;
    private @Nullable String bdsApiKeyPassphrase;
    /**
     * @return The OCID of the cluster.
     * 
     */
    private @Nullable String bdsInstanceId;
    private @Nullable String clusterAdminPassword;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The ID of the metastore configuration
     * 
     */
    private @Nullable String id;
    /**
     * @return The OCID of the Data Catalog metastore in the metastore configuration
     * 
     */
    private @Nullable String metastoreId;
    /**
     * @return The type of the metastore in the metastore configuration
     * 
     */
    private @Nullable String metastoreType;
    /**
     * @return The lifecycle state of the metastore in the metastore configuration
     * 
     */
    private @Nullable String state;
    /**
     * @return The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;

    private GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration() {}
    public Optional<Integer> activateTrigger() {
        return Optional.ofNullable(this.activateTrigger);
    }
    /**
     * @return The ID of the API key that is associated with the external metastore in the metastore configuration
     * 
     */
    public Optional<String> bdsApiKeyId() {
        return Optional.ofNullable(this.bdsApiKeyId);
    }
    public Optional<String> bdsApiKeyPassphrase() {
        return Optional.ofNullable(this.bdsApiKeyPassphrase);
    }
    /**
     * @return The OCID of the cluster.
     * 
     */
    public Optional<String> bdsInstanceId() {
        return Optional.ofNullable(this.bdsInstanceId);
    }
    public Optional<String> clusterAdminPassword() {
        return Optional.ofNullable(this.clusterAdminPassword);
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The ID of the metastore configuration
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The OCID of the Data Catalog metastore in the metastore configuration
     * 
     */
    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }
    /**
     * @return The type of the metastore in the metastore configuration
     * 
     */
    public Optional<String> metastoreType() {
        return Optional.ofNullable(this.metastoreType);
    }
    /**
     * @return The lifecycle state of the metastore in the metastore configuration
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer activateTrigger;
        private @Nullable String bdsApiKeyId;
        private @Nullable String bdsApiKeyPassphrase;
        private @Nullable String bdsInstanceId;
        private @Nullable String clusterAdminPassword;
        private @Nullable String displayName;
        private @Nullable String id;
        private @Nullable String metastoreId;
        private @Nullable String metastoreType;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activateTrigger = defaults.activateTrigger;
    	      this.bdsApiKeyId = defaults.bdsApiKeyId;
    	      this.bdsApiKeyPassphrase = defaults.bdsApiKeyPassphrase;
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.clusterAdminPassword = defaults.clusterAdminPassword;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.metastoreId = defaults.metastoreId;
    	      this.metastoreType = defaults.metastoreType;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder activateTrigger(@Nullable Integer activateTrigger) {
            this.activateTrigger = activateTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder bdsApiKeyId(@Nullable String bdsApiKeyId) {
            this.bdsApiKeyId = bdsApiKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder bdsApiKeyPassphrase(@Nullable String bdsApiKeyPassphrase) {
            this.bdsApiKeyPassphrase = bdsApiKeyPassphrase;
            return this;
        }
        @CustomType.Setter
        public Builder bdsInstanceId(@Nullable String bdsInstanceId) {
            this.bdsInstanceId = bdsInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterAdminPassword(@Nullable String clusterAdminPassword) {
            this.clusterAdminPassword = clusterAdminPassword;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metastoreId(@Nullable String metastoreId) {
            this.metastoreId = metastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder metastoreType(@Nullable String metastoreType) {
            this.metastoreType = metastoreType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration build() {
            final var o = new GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration();
            o.activateTrigger = activateTrigger;
            o.bdsApiKeyId = bdsApiKeyId;
            o.bdsApiKeyPassphrase = bdsApiKeyPassphrase;
            o.bdsInstanceId = bdsInstanceId;
            o.clusterAdminPassword = clusterAdminPassword;
            o.displayName = displayName;
            o.id = id;
            o.metastoreId = metastoreId;
            o.metastoreType = metastoreType;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
