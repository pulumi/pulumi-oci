// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail {
    /**
     * @return Type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     * 
     */
    private String levelType;
    /**
     * @return Host name of the node to create backup configuration.
     * 
     */
    private String nodeHostName;
    /**
     * @return Type of the node or nodes of the node backup configuration or node replacement configuration which are going to be created.
     * 
     */
    private String nodeType;

    private GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail() {}
    /**
     * @return Type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     * 
     */
    public String levelType() {
        return this.levelType;
    }
    /**
     * @return Host name of the node to create backup configuration.
     * 
     */
    public String nodeHostName() {
        return this.nodeHostName;
    }
    /**
     * @return Type of the node or nodes of the node backup configuration or node replacement configuration which are going to be created.
     * 
     */
    public String nodeType() {
        return this.nodeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String levelType;
        private String nodeHostName;
        private String nodeType;
        public Builder() {}
        public Builder(GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.levelType = defaults.levelType;
    	      this.nodeHostName = defaults.nodeHostName;
    	      this.nodeType = defaults.nodeType;
        }

        @CustomType.Setter
        public Builder levelType(String levelType) {
            if (levelType == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail", "levelType");
            }
            this.levelType = levelType;
            return this;
        }
        @CustomType.Setter
        public Builder nodeHostName(String nodeHostName) {
            if (nodeHostName == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail", "nodeHostName");
            }
            this.nodeHostName = nodeHostName;
            return this;
        }
        @CustomType.Setter
        public Builder nodeType(String nodeType) {
            if (nodeType == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail", "nodeType");
            }
            this.nodeType = nodeType;
            return this;
        }
        public GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail build() {
            final var _resultValue = new GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfigurationLevelTypeDetail();
            _resultValue.levelType = levelType;
            _resultValue.nodeHostName = nodeHostName;
            _resultValue.nodeType = nodeType;
            return _resultValue;
        }
    }
}
