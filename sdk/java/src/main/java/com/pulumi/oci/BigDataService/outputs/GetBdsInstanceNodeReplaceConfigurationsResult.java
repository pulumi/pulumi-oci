// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceNodeReplaceConfigurationsFilter;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBdsInstanceNodeReplaceConfigurationsResult {
    /**
     * @return The OCID of the bdsInstance which is the parent resource id.
     * 
     */
    private String bdsInstanceId;
    /**
     * @return A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetBdsInstanceNodeReplaceConfigurationsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of node_replace_configurations.
     * 
     */
    private List<GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfiguration> nodeReplaceConfigurations;
    /**
     * @return The state of the NodeReplaceConfiguration.
     * 
     */
    private @Nullable String state;

    private GetBdsInstanceNodeReplaceConfigurationsResult() {}
    /**
     * @return The OCID of the bdsInstance which is the parent resource id.
     * 
     */
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    /**
     * @return A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetBdsInstanceNodeReplaceConfigurationsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of node_replace_configurations.
     * 
     */
    public List<GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfiguration> nodeReplaceConfigurations() {
        return this.nodeReplaceConfigurations;
    }
    /**
     * @return The state of the NodeReplaceConfiguration.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceNodeReplaceConfigurationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bdsInstanceId;
        private @Nullable String displayName;
        private @Nullable List<GetBdsInstanceNodeReplaceConfigurationsFilter> filters;
        private String id;
        private List<GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfiguration> nodeReplaceConfigurations;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetBdsInstanceNodeReplaceConfigurationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.nodeReplaceConfigurations = defaults.nodeReplaceConfigurations;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder bdsInstanceId(String bdsInstanceId) {
            if (bdsInstanceId == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceNodeReplaceConfigurationsResult", "bdsInstanceId");
            }
            this.bdsInstanceId = bdsInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetBdsInstanceNodeReplaceConfigurationsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetBdsInstanceNodeReplaceConfigurationsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceNodeReplaceConfigurationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nodeReplaceConfigurations(List<GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfiguration> nodeReplaceConfigurations) {
            if (nodeReplaceConfigurations == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceNodeReplaceConfigurationsResult", "nodeReplaceConfigurations");
            }
            this.nodeReplaceConfigurations = nodeReplaceConfigurations;
            return this;
        }
        public Builder nodeReplaceConfigurations(GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfiguration... nodeReplaceConfigurations) {
            return nodeReplaceConfigurations(List.of(nodeReplaceConfigurations));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetBdsInstanceNodeReplaceConfigurationsResult build() {
            final var _resultValue = new GetBdsInstanceNodeReplaceConfigurationsResult();
            _resultValue.bdsInstanceId = bdsInstanceId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.nodeReplaceConfigurations = nodeReplaceConfigurations;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
