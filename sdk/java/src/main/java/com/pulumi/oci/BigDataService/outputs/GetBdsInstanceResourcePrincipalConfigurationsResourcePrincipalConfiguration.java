// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration {
    /**
     * @return The OCID of the cluster.
     * 
     */
    private String bdsInstanceId;
    private String clusterAdminPassword;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    private Integer forceRefreshResourcePrincipalTrigger;
    /**
     * @return The id of the ResourcePrincipalConfiguration.
     * 
     */
    private String id;
    /**
     * @return Life span in hours of each resource principal session token.
     * 
     */
    private Integer sessionTokenLifeSpanDurationInHours;
    /**
     * @return The state of the ResourcePrincipalConfiguration.
     * 
     */
    private String state;
    /**
     * @return The time the ResourcePrincipalConfiguration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return the time the resource principal session token will expired, shown as an rfc 3339 formatted datetime string.
     * 
     */
    private String timeTokenExpiry;
    /**
     * @return the time the resource principal session token was refreshed, shown as an rfc 3339 formatted datetime string.
     * 
     */
    private String timeTokenRefreshed;
    /**
     * @return The time the ResourcePrincipalConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration() {}
    /**
     * @return The OCID of the cluster.
     * 
     */
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    public String clusterAdminPassword() {
        return this.clusterAdminPassword;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public Integer forceRefreshResourcePrincipalTrigger() {
        return this.forceRefreshResourcePrincipalTrigger;
    }
    /**
     * @return The id of the ResourcePrincipalConfiguration.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Life span in hours of each resource principal session token.
     * 
     */
    public Integer sessionTokenLifeSpanDurationInHours() {
        return this.sessionTokenLifeSpanDurationInHours;
    }
    /**
     * @return The state of the ResourcePrincipalConfiguration.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time the ResourcePrincipalConfiguration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return the time the resource principal session token will expired, shown as an rfc 3339 formatted datetime string.
     * 
     */
    public String timeTokenExpiry() {
        return this.timeTokenExpiry;
    }
    /**
     * @return the time the resource principal session token was refreshed, shown as an rfc 3339 formatted datetime string.
     * 
     */
    public String timeTokenRefreshed() {
        return this.timeTokenRefreshed;
    }
    /**
     * @return The time the ResourcePrincipalConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bdsInstanceId;
        private String clusterAdminPassword;
        private String displayName;
        private Integer forceRefreshResourcePrincipalTrigger;
        private String id;
        private Integer sessionTokenLifeSpanDurationInHours;
        private String state;
        private String timeCreated;
        private String timeTokenExpiry;
        private String timeTokenRefreshed;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.clusterAdminPassword = defaults.clusterAdminPassword;
    	      this.displayName = defaults.displayName;
    	      this.forceRefreshResourcePrincipalTrigger = defaults.forceRefreshResourcePrincipalTrigger;
    	      this.id = defaults.id;
    	      this.sessionTokenLifeSpanDurationInHours = defaults.sessionTokenLifeSpanDurationInHours;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeTokenExpiry = defaults.timeTokenExpiry;
    	      this.timeTokenRefreshed = defaults.timeTokenRefreshed;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder bdsInstanceId(String bdsInstanceId) {
            if (bdsInstanceId == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "bdsInstanceId");
            }
            this.bdsInstanceId = bdsInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            if (clusterAdminPassword == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "clusterAdminPassword");
            }
            this.clusterAdminPassword = clusterAdminPassword;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder forceRefreshResourcePrincipalTrigger(Integer forceRefreshResourcePrincipalTrigger) {
            if (forceRefreshResourcePrincipalTrigger == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "forceRefreshResourcePrincipalTrigger");
            }
            this.forceRefreshResourcePrincipalTrigger = forceRefreshResourcePrincipalTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder sessionTokenLifeSpanDurationInHours(Integer sessionTokenLifeSpanDurationInHours) {
            if (sessionTokenLifeSpanDurationInHours == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "sessionTokenLifeSpanDurationInHours");
            }
            this.sessionTokenLifeSpanDurationInHours = sessionTokenLifeSpanDurationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeTokenExpiry(String timeTokenExpiry) {
            if (timeTokenExpiry == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "timeTokenExpiry");
            }
            this.timeTokenExpiry = timeTokenExpiry;
            return this;
        }
        @CustomType.Setter
        public Builder timeTokenRefreshed(String timeTokenRefreshed) {
            if (timeTokenRefreshed == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "timeTokenRefreshed");
            }
            this.timeTokenRefreshed = timeTokenRefreshed;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration build() {
            final var _resultValue = new GetBdsInstanceResourcePrincipalConfigurationsResourcePrincipalConfiguration();
            _resultValue.bdsInstanceId = bdsInstanceId;
            _resultValue.clusterAdminPassword = clusterAdminPassword;
            _resultValue.displayName = displayName;
            _resultValue.forceRefreshResourcePrincipalTrigger = forceRefreshResourcePrincipalTrigger;
            _resultValue.id = id;
            _resultValue.sessionTokenLifeSpanDurationInHours = sessionTokenLifeSpanDurationInHours;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeTokenExpiry = timeTokenExpiry;
            _resultValue.timeTokenRefreshed = timeTokenRefreshed;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
