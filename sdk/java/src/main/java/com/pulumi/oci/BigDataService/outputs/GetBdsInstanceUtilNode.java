// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceUtilNodeShapeConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBdsInstanceUtilNode {
    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    private @Nullable String blockVolumeSizeInGbs;
    /**
     * @return The number of nodes that form the cluster.
     * 
     */
    private @Nullable Integer numberOfNodes;
    /**
     * @return Shape of the node.
     * 
     */
    private @Nullable String shape;
    private @Nullable List<GetBdsInstanceUtilNodeShapeConfig> shapeConfigs;
    /**
     * @return The OCID of the subnet in which the node is to be created.
     * 
     */
    private @Nullable String subnetId;

    private GetBdsInstanceUtilNode() {}
    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    public Optional<String> blockVolumeSizeInGbs() {
        return Optional.ofNullable(this.blockVolumeSizeInGbs);
    }
    /**
     * @return The number of nodes that form the cluster.
     * 
     */
    public Optional<Integer> numberOfNodes() {
        return Optional.ofNullable(this.numberOfNodes);
    }
    /**
     * @return Shape of the node.
     * 
     */
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    public List<GetBdsInstanceUtilNodeShapeConfig> shapeConfigs() {
        return this.shapeConfigs == null ? List.of() : this.shapeConfigs;
    }
    /**
     * @return The OCID of the subnet in which the node is to be created.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceUtilNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String blockVolumeSizeInGbs;
        private @Nullable Integer numberOfNodes;
        private @Nullable String shape;
        private @Nullable List<GetBdsInstanceUtilNodeShapeConfig> shapeConfigs;
        private @Nullable String subnetId;
        public Builder() {}
        public Builder(GetBdsInstanceUtilNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockVolumeSizeInGbs = defaults.blockVolumeSizeInGbs;
    	      this.numberOfNodes = defaults.numberOfNodes;
    	      this.shape = defaults.shape;
    	      this.shapeConfigs = defaults.shapeConfigs;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder blockVolumeSizeInGbs(@Nullable String blockVolumeSizeInGbs) {
            this.blockVolumeSizeInGbs = blockVolumeSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfNodes(@Nullable Integer numberOfNodes) {
            this.numberOfNodes = numberOfNodes;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeConfigs(@Nullable List<GetBdsInstanceUtilNodeShapeConfig> shapeConfigs) {
            this.shapeConfigs = shapeConfigs;
            return this;
        }
        public Builder shapeConfigs(GetBdsInstanceUtilNodeShapeConfig... shapeConfigs) {
            return shapeConfigs(List.of(shapeConfigs));
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public GetBdsInstanceUtilNode build() {
            final var o = new GetBdsInstanceUtilNode();
            o.blockVolumeSizeInGbs = blockVolumeSizeInGbs;
            o.numberOfNodes = numberOfNodes;
            o.shape = shape;
            o.shapeConfigs = shapeConfigs;
            o.subnetId = subnetId;
            return o;
        }
    }
}
