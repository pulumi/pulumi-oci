// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBdsInstancesBdsInstanceCloudSqlDetail {
    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    private String blockVolumeSizeInGbs;
    /**
     * @return IP address of the node.
     * 
     */
    private String ipAddress;
    /**
     * @return Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     * 
     */
    private Boolean isKerberosMappedToDatabaseUsers;
    /**
     * @return Details about the Kerberos principals.
     * 
     */
    private List<GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
    /**
     * @return The total amount of memory available to the node, in gigabytes.
     * 
     */
    private Integer memoryInGbs;
    /**
     * @return The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
     * 
     */
    private Integer nvmes;
    /**
     * @return The total number of OCPUs available to the node.
     * 
     */
    private Integer ocpus;
    /**
     * @return Shape of the node.
     * 
     */
    private String shape;

    private GetBdsInstancesBdsInstanceCloudSqlDetail() {}
    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    public String blockVolumeSizeInGbs() {
        return this.blockVolumeSizeInGbs;
    }
    /**
     * @return IP address of the node.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     * 
     */
    public Boolean isKerberosMappedToDatabaseUsers() {
        return this.isKerberosMappedToDatabaseUsers;
    }
    /**
     * @return Details about the Kerberos principals.
     * 
     */
    public List<GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails() {
        return this.kerberosDetails;
    }
    /**
     * @return The total amount of memory available to the node, in gigabytes.
     * 
     */
    public Integer memoryInGbs() {
        return this.memoryInGbs;
    }
    /**
     * @return The number of NVMe drives to be used for storage. A single drive has 6.8 TB available.
     * 
     */
    public Integer nvmes() {
        return this.nvmes;
    }
    /**
     * @return The total number of OCPUs available to the node.
     * 
     */
    public Integer ocpus() {
        return this.ocpus;
    }
    /**
     * @return Shape of the node.
     * 
     */
    public String shape() {
        return this.shape;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstancesBdsInstanceCloudSqlDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String blockVolumeSizeInGbs;
        private String ipAddress;
        private Boolean isKerberosMappedToDatabaseUsers;
        private List<GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
        private Integer memoryInGbs;
        private Integer nvmes;
        private Integer ocpus;
        private String shape;
        public Builder() {}
        public Builder(GetBdsInstancesBdsInstanceCloudSqlDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockVolumeSizeInGbs = defaults.blockVolumeSizeInGbs;
    	      this.ipAddress = defaults.ipAddress;
    	      this.isKerberosMappedToDatabaseUsers = defaults.isKerberosMappedToDatabaseUsers;
    	      this.kerberosDetails = defaults.kerberosDetails;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.nvmes = defaults.nvmes;
    	      this.ocpus = defaults.ocpus;
    	      this.shape = defaults.shape;
        }

        @CustomType.Setter
        public Builder blockVolumeSizeInGbs(String blockVolumeSizeInGbs) {
            this.blockVolumeSizeInGbs = Objects.requireNonNull(blockVolumeSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder isKerberosMappedToDatabaseUsers(Boolean isKerberosMappedToDatabaseUsers) {
            this.isKerberosMappedToDatabaseUsers = Objects.requireNonNull(isKerberosMappedToDatabaseUsers);
            return this;
        }
        @CustomType.Setter
        public Builder kerberosDetails(List<GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails) {
            this.kerberosDetails = Objects.requireNonNull(kerberosDetails);
            return this;
        }
        public Builder kerberosDetails(GetBdsInstancesBdsInstanceCloudSqlDetailKerberosDetail... kerberosDetails) {
            return kerberosDetails(List.of(kerberosDetails));
        }
        @CustomType.Setter
        public Builder memoryInGbs(Integer memoryInGbs) {
            this.memoryInGbs = Objects.requireNonNull(memoryInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder nvmes(Integer nvmes) {
            this.nvmes = Objects.requireNonNull(nvmes);
            return this;
        }
        @CustomType.Setter
        public Builder ocpus(Integer ocpus) {
            this.ocpus = Objects.requireNonNull(ocpus);
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        public GetBdsInstancesBdsInstanceCloudSqlDetail build() {
            final var o = new GetBdsInstancesBdsInstanceCloudSqlDetail();
            o.blockVolumeSizeInGbs = blockVolumeSizeInGbs;
            o.ipAddress = ipAddress;
            o.isKerberosMappedToDatabaseUsers = isKerberosMappedToDatabaseUsers;
            o.kerberosDetails = kerberosDetails;
            o.memoryInGbs = memoryInGbs;
            o.nvmes = nvmes;
            o.ocpus = ocpus;
            o.shape = shape;
            return o;
        }
    }
}
