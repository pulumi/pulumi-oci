// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Blockchain.outputs.GetBlockchainPlatformComponentDetail;
import com.pulumi.oci.Blockchain.outputs.GetBlockchainPlatformHostOcpuUtilizationInfo;
import com.pulumi.oci.Blockchain.outputs.GetBlockchainPlatformReplica;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBlockchainPlatformResult {
    private String blockchainPlatformId;
    private String caCertArchiveText;
    /**
     * @return Compartment Identifier
     * 
     */
    private String compartmentId;
    /**
     * @return Blockchain Platform component details.
     * 
     */
    private List<GetBlockchainPlatformComponentDetail> componentDetails;
    /**
     * @return Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
     * 
     */
    private String computeShape;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Platform Instance Description
     * 
     */
    private String description;
    /**
     * @return Platform Instance Display name, can be renamed
     * 
     */
    private String displayName;
    private String federatedUserId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return List of OcpuUtilization for all hosts
     * 
     */
    private List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos;
    /**
     * @return unique identifier that is immutable on creation
     * 
     */
    private String id;
    private String idcsAccessToken;
    /**
     * @return Bring your own license
     * 
     */
    private Boolean isByol;
    /**
     * @return True for multi-AD blockchain plaforms, false for single-AD
     * 
     */
    private Boolean isMultiAd;
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    private String loadBalancerShape;
    /**
     * @return Role of platform - FOUNDER or PARTICIPANT
     * 
     */
    private String platformRole;
    /**
     * @return Type of Platform shape - DEFAULT or CUSTOM
     * 
     */
    private String platformShapeType;
    /**
     * @return Platform Version
     * 
     */
    private String platformVersion;
    /**
     * @return Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    private List<GetBlockchainPlatformReplica> replicas;
    /**
     * @return Service endpoint URL, valid post-provisioning
     * 
     */
    private String serviceEndpoint;
    /**
     * @return The version of the Platform Instance.
     * 
     */
    private String serviceVersion;
    /**
     * @return The current state of the Platform Instance.
     * 
     */
    private String state;
    /**
     * @return Storage size in TBs
     * 
     */
    private Double storageSizeInTbs;
    /**
     * @return Storage used in TBs
     * 
     */
    private Double storageUsedInTbs;
    /**
     * @return The time the the Platform Instance was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the Platform Instance was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;
    /**
     * @return Number of total OCPUs allocated to the platform cluster
     * 
     */
    private Integer totalOcpuCapacity;

    private GetBlockchainPlatformResult() {}
    public String blockchainPlatformId() {
        return this.blockchainPlatformId;
    }
    public String caCertArchiveText() {
        return this.caCertArchiveText;
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Blockchain Platform component details.
     * 
     */
    public List<GetBlockchainPlatformComponentDetail> componentDetails() {
        return this.componentDetails;
    }
    /**
     * @return Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
     * 
     */
    public String computeShape() {
        return this.computeShape;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Platform Instance Description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Platform Instance Display name, can be renamed
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String federatedUserId() {
        return this.federatedUserId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return List of OcpuUtilization for all hosts
     * 
     */
    public List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos() {
        return this.hostOcpuUtilizationInfos;
    }
    /**
     * @return unique identifier that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    public String idcsAccessToken() {
        return this.idcsAccessToken;
    }
    /**
     * @return Bring your own license
     * 
     */
    public Boolean isByol() {
        return this.isByol;
    }
    /**
     * @return True for multi-AD blockchain plaforms, false for single-AD
     * 
     */
    public Boolean isMultiAd() {
        return this.isMultiAd;
    }
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    public String loadBalancerShape() {
        return this.loadBalancerShape;
    }
    /**
     * @return Role of platform - FOUNDER or PARTICIPANT
     * 
     */
    public String platformRole() {
        return this.platformRole;
    }
    /**
     * @return Type of Platform shape - DEFAULT or CUSTOM
     * 
     */
    public String platformShapeType() {
        return this.platformShapeType;
    }
    /**
     * @return Platform Version
     * 
     */
    public String platformVersion() {
        return this.platformVersion;
    }
    /**
     * @return Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    public List<GetBlockchainPlatformReplica> replicas() {
        return this.replicas;
    }
    /**
     * @return Service endpoint URL, valid post-provisioning
     * 
     */
    public String serviceEndpoint() {
        return this.serviceEndpoint;
    }
    /**
     * @return The version of the Platform Instance.
     * 
     */
    public String serviceVersion() {
        return this.serviceVersion;
    }
    /**
     * @return The current state of the Platform Instance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Storage size in TBs
     * 
     */
    public Double storageSizeInTbs() {
        return this.storageSizeInTbs;
    }
    /**
     * @return Storage used in TBs
     * 
     */
    public Double storageUsedInTbs() {
        return this.storageUsedInTbs;
    }
    /**
     * @return The time the the Platform Instance was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Platform Instance was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Number of total OCPUs allocated to the platform cluster
     * 
     */
    public Integer totalOcpuCapacity() {
        return this.totalOcpuCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBlockchainPlatformResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String blockchainPlatformId;
        private String caCertArchiveText;
        private String compartmentId;
        private List<GetBlockchainPlatformComponentDetail> componentDetails;
        private String computeShape;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private String federatedUserId;
        private Map<String,Object> freeformTags;
        private List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos;
        private String id;
        private String idcsAccessToken;
        private Boolean isByol;
        private Boolean isMultiAd;
        private String lifecycleDetails;
        private String loadBalancerShape;
        private String platformRole;
        private String platformShapeType;
        private String platformVersion;
        private List<GetBlockchainPlatformReplica> replicas;
        private String serviceEndpoint;
        private String serviceVersion;
        private String state;
        private Double storageSizeInTbs;
        private Double storageUsedInTbs;
        private String timeCreated;
        private String timeUpdated;
        private Integer totalOcpuCapacity;
        public Builder() {}
        public Builder(GetBlockchainPlatformResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockchainPlatformId = defaults.blockchainPlatformId;
    	      this.caCertArchiveText = defaults.caCertArchiveText;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentDetails = defaults.componentDetails;
    	      this.computeShape = defaults.computeShape;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.federatedUserId = defaults.federatedUserId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostOcpuUtilizationInfos = defaults.hostOcpuUtilizationInfos;
    	      this.id = defaults.id;
    	      this.idcsAccessToken = defaults.idcsAccessToken;
    	      this.isByol = defaults.isByol;
    	      this.isMultiAd = defaults.isMultiAd;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.loadBalancerShape = defaults.loadBalancerShape;
    	      this.platformRole = defaults.platformRole;
    	      this.platformShapeType = defaults.platformShapeType;
    	      this.platformVersion = defaults.platformVersion;
    	      this.replicas = defaults.replicas;
    	      this.serviceEndpoint = defaults.serviceEndpoint;
    	      this.serviceVersion = defaults.serviceVersion;
    	      this.state = defaults.state;
    	      this.storageSizeInTbs = defaults.storageSizeInTbs;
    	      this.storageUsedInTbs = defaults.storageUsedInTbs;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalOcpuCapacity = defaults.totalOcpuCapacity;
        }

        @CustomType.Setter
        public Builder blockchainPlatformId(String blockchainPlatformId) {
            if (blockchainPlatformId == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "blockchainPlatformId");
            }
            this.blockchainPlatformId = blockchainPlatformId;
            return this;
        }
        @CustomType.Setter
        public Builder caCertArchiveText(String caCertArchiveText) {
            if (caCertArchiveText == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "caCertArchiveText");
            }
            this.caCertArchiveText = caCertArchiveText;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder componentDetails(List<GetBlockchainPlatformComponentDetail> componentDetails) {
            if (componentDetails == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "componentDetails");
            }
            this.componentDetails = componentDetails;
            return this;
        }
        public Builder componentDetails(GetBlockchainPlatformComponentDetail... componentDetails) {
            return componentDetails(List.of(componentDetails));
        }
        @CustomType.Setter
        public Builder computeShape(String computeShape) {
            if (computeShape == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "computeShape");
            }
            this.computeShape = computeShape;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder federatedUserId(String federatedUserId) {
            if (federatedUserId == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "federatedUserId");
            }
            this.federatedUserId = federatedUserId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostOcpuUtilizationInfos(List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos) {
            if (hostOcpuUtilizationInfos == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "hostOcpuUtilizationInfos");
            }
            this.hostOcpuUtilizationInfos = hostOcpuUtilizationInfos;
            return this;
        }
        public Builder hostOcpuUtilizationInfos(GetBlockchainPlatformHostOcpuUtilizationInfo... hostOcpuUtilizationInfos) {
            return hostOcpuUtilizationInfos(List.of(hostOcpuUtilizationInfos));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsAccessToken(String idcsAccessToken) {
            if (idcsAccessToken == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "idcsAccessToken");
            }
            this.idcsAccessToken = idcsAccessToken;
            return this;
        }
        @CustomType.Setter
        public Builder isByol(Boolean isByol) {
            if (isByol == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "isByol");
            }
            this.isByol = isByol;
            return this;
        }
        @CustomType.Setter
        public Builder isMultiAd(Boolean isMultiAd) {
            if (isMultiAd == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "isMultiAd");
            }
            this.isMultiAd = isMultiAd;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerShape(String loadBalancerShape) {
            if (loadBalancerShape == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "loadBalancerShape");
            }
            this.loadBalancerShape = loadBalancerShape;
            return this;
        }
        @CustomType.Setter
        public Builder platformRole(String platformRole) {
            if (platformRole == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "platformRole");
            }
            this.platformRole = platformRole;
            return this;
        }
        @CustomType.Setter
        public Builder platformShapeType(String platformShapeType) {
            if (platformShapeType == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "platformShapeType");
            }
            this.platformShapeType = platformShapeType;
            return this;
        }
        @CustomType.Setter
        public Builder platformVersion(String platformVersion) {
            if (platformVersion == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "platformVersion");
            }
            this.platformVersion = platformVersion;
            return this;
        }
        @CustomType.Setter
        public Builder replicas(List<GetBlockchainPlatformReplica> replicas) {
            if (replicas == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "replicas");
            }
            this.replicas = replicas;
            return this;
        }
        public Builder replicas(GetBlockchainPlatformReplica... replicas) {
            return replicas(List.of(replicas));
        }
        @CustomType.Setter
        public Builder serviceEndpoint(String serviceEndpoint) {
            if (serviceEndpoint == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "serviceEndpoint");
            }
            this.serviceEndpoint = serviceEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder serviceVersion(String serviceVersion) {
            if (serviceVersion == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "serviceVersion");
            }
            this.serviceVersion = serviceVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageSizeInTbs(Double storageSizeInTbs) {
            if (storageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "storageSizeInTbs");
            }
            this.storageSizeInTbs = storageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder storageUsedInTbs(Double storageUsedInTbs) {
            if (storageUsedInTbs == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "storageUsedInTbs");
            }
            this.storageUsedInTbs = storageUsedInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder totalOcpuCapacity(Integer totalOcpuCapacity) {
            if (totalOcpuCapacity == null) {
              throw new MissingRequiredPropertyException("GetBlockchainPlatformResult", "totalOcpuCapacity");
            }
            this.totalOcpuCapacity = totalOcpuCapacity;
            return this;
        }
        public GetBlockchainPlatformResult build() {
            final var _resultValue = new GetBlockchainPlatformResult();
            _resultValue.blockchainPlatformId = blockchainPlatformId;
            _resultValue.caCertArchiveText = caCertArchiveText;
            _resultValue.compartmentId = compartmentId;
            _resultValue.componentDetails = componentDetails;
            _resultValue.computeShape = computeShape;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.federatedUserId = federatedUserId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostOcpuUtilizationInfos = hostOcpuUtilizationInfos;
            _resultValue.id = id;
            _resultValue.idcsAccessToken = idcsAccessToken;
            _resultValue.isByol = isByol;
            _resultValue.isMultiAd = isMultiAd;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.loadBalancerShape = loadBalancerShape;
            _resultValue.platformRole = platformRole;
            _resultValue.platformShapeType = platformShapeType;
            _resultValue.platformVersion = platformVersion;
            _resultValue.replicas = replicas;
            _resultValue.serviceEndpoint = serviceEndpoint;
            _resultValue.serviceVersion = serviceVersion;
            _resultValue.state = state;
            _resultValue.storageSizeInTbs = storageSizeInTbs;
            _resultValue.storageUsedInTbs = storageUsedInTbs;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.totalOcpuCapacity = totalOcpuCapacity;
            return _resultValue;
        }
    }
}
