// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam {
    /**
     * @return Number of OCPU allocation
     * 
     */
    private @Nullable Double ocpuAllocationNumber;

    private GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam() {}
    /**
     * @return Number of OCPU allocation
     * 
     */
    public Optional<Double> ocpuAllocationNumber() {
        return Optional.ofNullable(this.ocpuAllocationNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double ocpuAllocationNumber;
        public Builder() {}
        public Builder(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ocpuAllocationNumber = defaults.ocpuAllocationNumber;
        }

        @CustomType.Setter
        public Builder ocpuAllocationNumber(@Nullable Double ocpuAllocationNumber) {
            this.ocpuAllocationNumber = ocpuAllocationNumber;
            return this;
        }
        public GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam build() {
            final var o = new GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailOsnOcpuAllocationParam();
            o.ocpuAllocationNumber = ocpuAllocationNumber;
            return o;
        }
    }
}
