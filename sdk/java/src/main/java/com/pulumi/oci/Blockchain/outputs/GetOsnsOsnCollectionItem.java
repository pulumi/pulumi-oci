// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Blockchain.outputs.GetOsnsOsnCollectionItemOcpuAllocationParam;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOsnsOsnCollectionItem {
    /**
     * @return Availability Domain of OSN
     * 
     */
    private String ad;
    /**
     * @return Unique service identifier.
     * 
     */
    private String blockchainPlatformId;
    /**
     * @return OCPU allocation parameter
     * 
     */
    private GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam;
    /**
     * @return OSN identifier
     * 
     */
    private String osnKey;
    /**
     * @return The current state of the OSN.
     * 
     */
    private String state;

    private GetOsnsOsnCollectionItem() {}
    /**
     * @return Availability Domain of OSN
     * 
     */
    public String ad() {
        return this.ad;
    }
    /**
     * @return Unique service identifier.
     * 
     */
    public String blockchainPlatformId() {
        return this.blockchainPlatformId;
    }
    /**
     * @return OCPU allocation parameter
     * 
     */
    public GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam() {
        return this.ocpuAllocationParam;
    }
    /**
     * @return OSN identifier
     * 
     */
    public String osnKey() {
        return this.osnKey;
    }
    /**
     * @return The current state of the OSN.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOsnsOsnCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ad;
        private String blockchainPlatformId;
        private GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam;
        private String osnKey;
        private String state;
        public Builder() {}
        public Builder(GetOsnsOsnCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ad = defaults.ad;
    	      this.blockchainPlatformId = defaults.blockchainPlatformId;
    	      this.ocpuAllocationParam = defaults.ocpuAllocationParam;
    	      this.osnKey = defaults.osnKey;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder ad(String ad) {
            if (ad == null) {
              throw new MissingRequiredPropertyException("GetOsnsOsnCollectionItem", "ad");
            }
            this.ad = ad;
            return this;
        }
        @CustomType.Setter
        public Builder blockchainPlatformId(String blockchainPlatformId) {
            if (blockchainPlatformId == null) {
              throw new MissingRequiredPropertyException("GetOsnsOsnCollectionItem", "blockchainPlatformId");
            }
            this.blockchainPlatformId = blockchainPlatformId;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuAllocationParam(GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam) {
            if (ocpuAllocationParam == null) {
              throw new MissingRequiredPropertyException("GetOsnsOsnCollectionItem", "ocpuAllocationParam");
            }
            this.ocpuAllocationParam = ocpuAllocationParam;
            return this;
        }
        @CustomType.Setter
        public Builder osnKey(String osnKey) {
            if (osnKey == null) {
              throw new MissingRequiredPropertyException("GetOsnsOsnCollectionItem", "osnKey");
            }
            this.osnKey = osnKey;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOsnsOsnCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        public GetOsnsOsnCollectionItem build() {
            final var _resultValue = new GetOsnsOsnCollectionItem();
            _resultValue.ad = ad;
            _resultValue.blockchainPlatformId = blockchainPlatformId;
            _resultValue.ocpuAllocationParam = ocpuAllocationParam;
            _resultValue.osnKey = osnKey;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
