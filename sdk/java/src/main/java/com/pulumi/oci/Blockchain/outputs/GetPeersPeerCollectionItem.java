// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Blockchain.outputs.GetPeersPeerCollectionItemOcpuAllocationParam;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPeersPeerCollectionItem {
    /**
     * @return Availability Domain of peer
     * 
     */
    private String ad;
    /**
     * @return peer alias
     * 
     */
    private @Nullable String alias;
    /**
     * @return Unique service identifier.
     * 
     */
    private String blockchainPlatformId;
    /**
     * @return Host on which the Peer exists
     * 
     */
    private @Nullable String host;
    /**
     * @return OCPU allocation parameter
     * 
     */
    private GetPeersPeerCollectionItemOcpuAllocationParam ocpuAllocationParam;
    /**
     * @return peer identifier
     * 
     */
    private @Nullable String peerKey;
    /**
     * @return Peer role
     * 
     */
    private String role;
    /**
     * @return The current state of the peer.
     * 
     */
    private @Nullable String state;

    private GetPeersPeerCollectionItem() {}
    /**
     * @return Availability Domain of peer
     * 
     */
    public String ad() {
        return this.ad;
    }
    /**
     * @return peer alias
     * 
     */
    public Optional<String> alias() {
        return Optional.ofNullable(this.alias);
    }
    /**
     * @return Unique service identifier.
     * 
     */
    public String blockchainPlatformId() {
        return this.blockchainPlatformId;
    }
    /**
     * @return Host on which the Peer exists
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return OCPU allocation parameter
     * 
     */
    public GetPeersPeerCollectionItemOcpuAllocationParam ocpuAllocationParam() {
        return this.ocpuAllocationParam;
    }
    /**
     * @return peer identifier
     * 
     */
    public Optional<String> peerKey() {
        return Optional.ofNullable(this.peerKey);
    }
    /**
     * @return Peer role
     * 
     */
    public String role() {
        return this.role;
    }
    /**
     * @return The current state of the peer.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPeersPeerCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ad;
        private @Nullable String alias;
        private String blockchainPlatformId;
        private @Nullable String host;
        private GetPeersPeerCollectionItemOcpuAllocationParam ocpuAllocationParam;
        private @Nullable String peerKey;
        private String role;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetPeersPeerCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ad = defaults.ad;
    	      this.alias = defaults.alias;
    	      this.blockchainPlatformId = defaults.blockchainPlatformId;
    	      this.host = defaults.host;
    	      this.ocpuAllocationParam = defaults.ocpuAllocationParam;
    	      this.peerKey = defaults.peerKey;
    	      this.role = defaults.role;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder ad(String ad) {
            this.ad = Objects.requireNonNull(ad);
            return this;
        }
        @CustomType.Setter
        public Builder alias(@Nullable String alias) {
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder blockchainPlatformId(String blockchainPlatformId) {
            this.blockchainPlatformId = Objects.requireNonNull(blockchainPlatformId);
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuAllocationParam(GetPeersPeerCollectionItemOcpuAllocationParam ocpuAllocationParam) {
            this.ocpuAllocationParam = Objects.requireNonNull(ocpuAllocationParam);
            return this;
        }
        @CustomType.Setter
        public Builder peerKey(@Nullable String peerKey) {
            this.peerKey = peerKey;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetPeersPeerCollectionItem build() {
            final var o = new GetPeersPeerCollectionItem();
            o.ad = ad;
            o.alias = alias;
            o.blockchainPlatformId = blockchainPlatformId;
            o.host = host;
            o.ocpuAllocationParam = ocpuAllocationParam;
            o.peerKey = peerKey;
            o.role = role;
            o.state = state;
            return o;
        }
    }
}
