// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Budget;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Budget.BudgetArgs;
import com.pulumi.oci.Budget.inputs.BudgetState;
import com.pulumi.oci.Utilities;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Budget resource in Oracle Cloud Infrastructure Budget service.
 * 
 * Creates a new budget.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Budget.Budget;
 * import com.pulumi.oci.Budget.BudgetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testBudget = new Budget("testBudget", BudgetArgs.builder()
 *             .amount(budgetAmount)
 *             .compartmentId(tenancyOcid)
 *             .resetPeriod(budgetResetPeriod)
 *             .budgetProcessingPeriodStartOffset(budgetBudgetProcessingPeriodStartOffset)
 *             .definedTags(Map.of("Operations.CostCenter", "42"))
 *             .description(budgetDescription)
 *             .displayName(budgetDisplayName)
 *             .endDate(budgetEndDate)
 *             .freeformTags(Map.of("Department", "Finance"))
 *             .processingPeriodType(budgetProcessingPeriodType)
 *             .startDate(budgetStartDate)
 *             .targetCompartmentId(testCompartment.id())
 *             .targetType(budgetTargetType)
 *             .targets(budgetTargets)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Budgets can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Budget/budget:Budget test_budget &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Budget/budget:Budget")
public class Budget extends com.pulumi.resources.CustomResource {
    /**
     * The actual spend in currency for the current budget cycle.
     * 
     */
    @Export(name="actualSpend", refs={Double.class}, tree="[0]")
    private Output<Double> actualSpend;

    /**
     * @return The actual spend in currency for the current budget cycle.
     * 
     */
    public Output<Double> actualSpend() {
        return this.actualSpend;
    }
    /**
     * The total number of alert rules in the budget.
     * 
     */
    @Export(name="alertRuleCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> alertRuleCount;

    /**
     * @return The total number of alert rules in the budget.
     * 
     */
    public Output<Integer> alertRuleCount() {
        return this.alertRuleCount;
    }
    /**
     * (Updatable) The amount of the budget expressed as a whole number in the currency of the customer&#39;s rate card.
     * 
     */
    @Export(name="amount", refs={Integer.class}, tree="[0]")
    private Output<Integer> amount;

    /**
     * @return (Updatable) The amount of the budget expressed as a whole number in the currency of the customer&#39;s rate card.
     * 
     */
    public Output<Integer> amount() {
        return this.amount;
    }
    /**
     * (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
     * 
     */
    @Export(name="budgetProcessingPeriodStartOffset", refs={Integer.class}, tree="[0]")
    private Output<Integer> budgetProcessingPeriodStartOffset;

    /**
     * @return (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
     * 
     */
    public Output<Integer> budgetProcessingPeriodStartOffset() {
        return this.budgetProcessingPeriodStartOffset;
    }
    /**
     * The OCID of the compartment.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) The description of the budget.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) The description of the budget.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) The displayName of the budget. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) The displayName of the budget. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     * 
     */
    @Export(name="endDate", refs={String.class}, tree="[0]")
    private Output<String> endDate;

    /**
     * @return (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     * 
     */
    public Output<String> endDate() {
        return this.endDate;
    }
    /**
     * The forecasted spend in currency by the end of the current budget cycle.
     * 
     */
    @Export(name="forecastedSpend", refs={Double.class}, tree="[0]")
    private Output<Double> forecastedSpend;

    /**
     * @return The forecasted spend in currency by the end of the current budget cycle.
     * 
     */
    public Output<Double> forecastedSpend() {
        return this.forecastedSpend;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
     * 
     */
    @Export(name="processingPeriodType", refs={String.class}, tree="[0]")
    private Output<String> processingPeriodType;

    /**
     * @return (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
     * 
     */
    public Output<String> processingPeriodType() {
        return this.processingPeriodType;
    }
    /**
     * (Updatable) The reset period for the budget. Valid value is MONTHLY.
     * 
     */
    @Export(name="resetPeriod", refs={String.class}, tree="[0]")
    private Output<String> resetPeriod;

    /**
     * @return (Updatable) The reset period for the budget. Valid value is MONTHLY.
     * 
     */
    public Output<String> resetPeriod() {
        return this.resetPeriod;
    }
    /**
     * (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     * 
     */
    @Export(name="startDate", refs={String.class}, tree="[0]")
    private Output<String> startDate;

    /**
     * @return (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     * 
     */
    public Output<String> startDate() {
        return this.startDate;
    }
    /**
     * The current state of the budget.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the budget.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * This is DEPRECATED. Set the target compartment ID in targets instead.
     * 
     * @deprecated
     * The &#39;target_compartment_id&#39; field has been deprecated. Please use &#39;targets&#39; instead.
     * 
     */
    @Deprecated /* The 'target_compartment_id' field has been deprecated. Please use 'targets' instead. */
    @Export(name="targetCompartmentId", refs={String.class}, tree="[0]")
    private Output<String> targetCompartmentId;

    /**
     * @return This is DEPRECATED. Set the target compartment ID in targets instead.
     * 
     */
    public Output<String> targetCompartmentId() {
        return this.targetCompartmentId;
    }
    /**
     * The type of target on which the budget is applied.
     * 
     */
    @Export(name="targetType", refs={String.class}, tree="[0]")
    private Output<String> targetType;

    /**
     * @return The type of target on which the budget is applied.
     * 
     */
    public Output<String> targetType() {
        return this.targetType;
    }
    /**
     * The list of targets on which the budget is applied. If targetType is &#34;COMPARTMENT&#34;, the targets contain the list of compartment OCIDs. If targetType is &#34;TAG&#34;, the targets contain the list of cost tracking tag identifiers in the form of &#34;{tagNamespace}.{tagKey}.{tagValue}&#34;. Curerntly, the array should contain exactly one item.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="targets", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> targets;

    /**
     * @return The list of targets on which the budget is applied. If targetType is &#34;COMPARTMENT&#34;, the targets contain the list of compartment OCIDs. If targetType is &#34;TAG&#34;, the targets contain the list of cost tracking tag identifiers in the form of &#34;{tagNamespace}.{tagKey}.{tagValue}&#34;. Curerntly, the array should contain exactly one item.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<List<String>> targets() {
        return this.targets;
    }
    /**
     * The time that the budget was created.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time that the budget was created.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time that the budget spend was last computed.
     * 
     */
    @Export(name="timeSpendComputed", refs={String.class}, tree="[0]")
    private Output<String> timeSpendComputed;

    /**
     * @return The time that the budget spend was last computed.
     * 
     */
    public Output<String> timeSpendComputed() {
        return this.timeSpendComputed;
    }
    /**
     * The time that the budget was updated.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time that the budget was updated.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * The version of the budget. Starts from 1 and increments by 1.
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the budget. Starts from 1 and increments by 1.
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Budget(java.lang.String name) {
        this(name, BudgetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Budget(java.lang.String name, BudgetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Budget(java.lang.String name, BudgetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Budget/budget:Budget", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Budget(java.lang.String name, Output<java.lang.String> id, @Nullable BudgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Budget/budget:Budget", name, state, makeResourceOptions(options, id), false);
    }

    private static BudgetArgs makeArgs(BudgetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BudgetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Budget get(java.lang.String name, Output<java.lang.String> id, @Nullable BudgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Budget(name, id, state, options);
    }
}
