// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.inputs.OccAvailabilityCatalogMetadataDetailsArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OccAvailabilityCatalogArgs extends com.pulumi.resources.ResourceArgs {

    public static final OccAvailabilityCatalogArgs Empty = new OccAvailabilityCatalogArgs();

    /**
     * The base 64 encoded string corresponding to the catalog file contents.
     * 
     */
    @Import(name="base64encodedCatalogDetails", required=true)
    private Output<String> base64encodedCatalogDetails;

    /**
     * @return The base 64 encoded string corresponding to the catalog file contents.
     * 
     */
    public Output<String> base64encodedCatalogDetails() {
        return this.base64encodedCatalogDetails;
    }

    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Additional information about the availability catalog.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Additional information about the availability catalog.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the availability catalog.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The display name of the availability catalog.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
     * 
     */
    @Import(name="metadataDetails")
    private @Nullable Output<OccAvailabilityCatalogMetadataDetailsArgs> metadataDetails;

    /**
     * @return Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
     * 
     */
    public Optional<Output<OccAvailabilityCatalogMetadataDetailsArgs>> metadataDetails() {
        return Optional.ofNullable(this.metadataDetails);
    }

    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * The OCID of the customer group.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="occCustomerGroupId", required=true)
    private Output<String> occCustomerGroupId;

    /**
     * @return The OCID of the customer group.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> occCustomerGroupId() {
        return this.occCustomerGroupId;
    }

    private OccAvailabilityCatalogArgs() {}

    private OccAvailabilityCatalogArgs(OccAvailabilityCatalogArgs $) {
        this.base64encodedCatalogDetails = $.base64encodedCatalogDetails;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.metadataDetails = $.metadataDetails;
        this.namespace = $.namespace;
        this.occCustomerGroupId = $.occCustomerGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OccAvailabilityCatalogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OccAvailabilityCatalogArgs $;

        public Builder() {
            $ = new OccAvailabilityCatalogArgs();
        }

        public Builder(OccAvailabilityCatalogArgs defaults) {
            $ = new OccAvailabilityCatalogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param base64encodedCatalogDetails The base 64 encoded string corresponding to the catalog file contents.
         * 
         * @return builder
         * 
         */
        public Builder base64encodedCatalogDetails(Output<String> base64encodedCatalogDetails) {
            $.base64encodedCatalogDetails = base64encodedCatalogDetails;
            return this;
        }

        /**
         * @param base64encodedCatalogDetails The base 64 encoded string corresponding to the catalog file contents.
         * 
         * @return builder
         * 
         */
        public Builder base64encodedCatalogDetails(String base64encodedCatalogDetails) {
            return base64encodedCatalogDetails(Output.of(base64encodedCatalogDetails));
        }

        /**
         * @param compartmentId Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Additional information about the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Additional information about the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param metadataDetails Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
         * 
         * @return builder
         * 
         */
        public Builder metadataDetails(@Nullable Output<OccAvailabilityCatalogMetadataDetailsArgs> metadataDetails) {
            $.metadataDetails = metadataDetails;
            return this;
        }

        /**
         * @param metadataDetails Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
         * 
         * @return builder
         * 
         */
        public Builder metadataDetails(OccAvailabilityCatalogMetadataDetailsArgs metadataDetails) {
            return metadataDetails(Output.of(metadataDetails));
        }

        /**
         * @param namespace The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param occCustomerGroupId The OCID of the customer group.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder occCustomerGroupId(Output<String> occCustomerGroupId) {
            $.occCustomerGroupId = occCustomerGroupId;
            return this;
        }

        /**
         * @param occCustomerGroupId The OCID of the customer group.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder occCustomerGroupId(String occCustomerGroupId) {
            return occCustomerGroupId(Output.of(occCustomerGroupId));
        }

        public OccAvailabilityCatalogArgs build() {
            if ($.base64encodedCatalogDetails == null) {
                throw new MissingRequiredPropertyException("OccAvailabilityCatalogArgs", "base64encodedCatalogDetails");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("OccAvailabilityCatalogArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("OccAvailabilityCatalogArgs", "displayName");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("OccAvailabilityCatalogArgs", "namespace");
            }
            if ($.occCustomerGroupId == null) {
                throw new MissingRequiredPropertyException("OccAvailabilityCatalogArgs", "occCustomerGroupId");
            }
            return $;
        }
    }

}
