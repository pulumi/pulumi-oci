// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.inputs.OccCapacityRequestDetailArgs;
import com.pulumi.oci.CapacityManagement.inputs.OccCapacityRequestPatchOperationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OccCapacityRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final OccCapacityRequestArgs Empty = new OccCapacityRequestArgs();

    /**
     * The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     * 
     */
    @Import(name="dateExpectedCapacityHandover", required=true)
    private Output<String> dateExpectedCapacityHandover;

    /**
     * @return The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     * 
     */
    public Output<String> dateExpectedCapacityHandover() {
        return this.dateExpectedCapacityHandover;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * Meaningful text about the capacity request.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Meaningful text about the capacity request.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A list of different resources requested by the user.
     * 
     */
    @Import(name="details", required=true)
    private Output<List<OccCapacityRequestDetailArgs>> details;

    /**
     * @return A list of different resources requested by the user.
     * 
     */
    public Output<List<OccCapacityRequestDetailArgs>> details() {
        return this.details;
    }

    /**
     * (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * The OCID of the availability catalog against which capacity request is made.
     * 
     */
    @Import(name="occAvailabilityCatalogId", required=true)
    private Output<String> occAvailabilityCatalogId;

    /**
     * @return The OCID of the availability catalog against which capacity request is made.
     * 
     */
    public Output<String> occAvailabilityCatalogId() {
        return this.occAvailabilityCatalogId;
    }

    /**
     * (Updatable)
     * 
     */
    @Import(name="patchOperations")
    private @Nullable Output<List<OccCapacityRequestPatchOperationArgs>> patchOperations;

    /**
     * @return (Updatable)
     * 
     */
    public Optional<Output<List<OccCapacityRequestPatchOperationArgs>>> patchOperations() {
        return Optional.ofNullable(this.patchOperations);
    }

    /**
     * The name of the region for which the capacity request is made.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The name of the region for which the capacity request is made.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * (Updatable) The subset of request states available for creating the capacity request.
     * 
     */
    @Import(name="requestState")
    private @Nullable Output<String> requestState;

    /**
     * @return (Updatable) The subset of request states available for creating the capacity request.
     * 
     */
    public Optional<Output<String>> requestState() {
        return Optional.ofNullable(this.requestState);
    }

    /**
     * Type of Capacity Request(New or Transfer)
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="requestType")
    private @Nullable Output<String> requestType;

    /**
     * @return Type of Capacity Request(New or Transfer)
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> requestType() {
        return Optional.ofNullable(this.requestType);
    }

    private OccCapacityRequestArgs() {}

    private OccCapacityRequestArgs(OccCapacityRequestArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.dateExpectedCapacityHandover = $.dateExpectedCapacityHandover;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.details = $.details;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.namespace = $.namespace;
        this.occAvailabilityCatalogId = $.occAvailabilityCatalogId;
        this.patchOperations = $.patchOperations;
        this.region = $.region;
        this.requestState = $.requestState;
        this.requestType = $.requestType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OccCapacityRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OccCapacityRequestArgs $;

        public Builder() {
            $ = new OccCapacityRequestArgs();
        }

        public Builder(OccCapacityRequestArgs defaults) {
            $ = new OccCapacityRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param compartmentId Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dateExpectedCapacityHandover The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
         * 
         * @return builder
         * 
         */
        public Builder dateExpectedCapacityHandover(Output<String> dateExpectedCapacityHandover) {
            $.dateExpectedCapacityHandover = dateExpectedCapacityHandover;
            return this;
        }

        /**
         * @param dateExpectedCapacityHandover The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
         * 
         * @return builder
         * 
         */
        public Builder dateExpectedCapacityHandover(String dateExpectedCapacityHandover) {
            return dateExpectedCapacityHandover(Output.of(dateExpectedCapacityHandover));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description Meaningful text about the capacity request.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Meaningful text about the capacity request.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param details A list of different resources requested by the user.
         * 
         * @return builder
         * 
         */
        public Builder details(Output<List<OccCapacityRequestDetailArgs>> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details A list of different resources requested by the user.
         * 
         * @return builder
         * 
         */
        public Builder details(List<OccCapacityRequestDetailArgs> details) {
            return details(Output.of(details));
        }

        /**
         * @param details A list of different resources requested by the user.
         * 
         * @return builder
         * 
         */
        public Builder details(OccCapacityRequestDetailArgs... details) {
            return details(List.of(details));
        }

        /**
         * @param displayName (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param namespace The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param occAvailabilityCatalogId The OCID of the availability catalog against which capacity request is made.
         * 
         * @return builder
         * 
         */
        public Builder occAvailabilityCatalogId(Output<String> occAvailabilityCatalogId) {
            $.occAvailabilityCatalogId = occAvailabilityCatalogId;
            return this;
        }

        /**
         * @param occAvailabilityCatalogId The OCID of the availability catalog against which capacity request is made.
         * 
         * @return builder
         * 
         */
        public Builder occAvailabilityCatalogId(String occAvailabilityCatalogId) {
            return occAvailabilityCatalogId(Output.of(occAvailabilityCatalogId));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(@Nullable Output<List<OccCapacityRequestPatchOperationArgs>> patchOperations) {
            $.patchOperations = patchOperations;
            return this;
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(List<OccCapacityRequestPatchOperationArgs> patchOperations) {
            return patchOperations(Output.of(patchOperations));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(OccCapacityRequestPatchOperationArgs... patchOperations) {
            return patchOperations(List.of(patchOperations));
        }

        /**
         * @param region The name of the region for which the capacity request is made.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The name of the region for which the capacity request is made.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param requestState (Updatable) The subset of request states available for creating the capacity request.
         * 
         * @return builder
         * 
         */
        public Builder requestState(@Nullable Output<String> requestState) {
            $.requestState = requestState;
            return this;
        }

        /**
         * @param requestState (Updatable) The subset of request states available for creating the capacity request.
         * 
         * @return builder
         * 
         */
        public Builder requestState(String requestState) {
            return requestState(Output.of(requestState));
        }

        /**
         * @param requestType Type of Capacity Request(New or Transfer)
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder requestType(@Nullable Output<String> requestType) {
            $.requestType = requestType;
            return this;
        }

        /**
         * @param requestType Type of Capacity Request(New or Transfer)
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder requestType(String requestType) {
            return requestType(Output.of(requestType));
        }

        public OccCapacityRequestArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("OccCapacityRequestArgs", "compartmentId");
            }
            if ($.dateExpectedCapacityHandover == null) {
                throw new MissingRequiredPropertyException("OccCapacityRequestArgs", "dateExpectedCapacityHandover");
            }
            if ($.details == null) {
                throw new MissingRequiredPropertyException("OccCapacityRequestArgs", "details");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("OccCapacityRequestArgs", "displayName");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("OccCapacityRequestArgs", "namespace");
            }
            if ($.occAvailabilityCatalogId == null) {
                throw new MissingRequiredPropertyException("OccCapacityRequestArgs", "occAvailabilityCatalogId");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("OccCapacityRequestArgs", "region");
            }
            return $;
        }
    }

}
