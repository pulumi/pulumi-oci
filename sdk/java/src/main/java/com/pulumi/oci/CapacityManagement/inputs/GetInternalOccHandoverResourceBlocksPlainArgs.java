// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.inputs.GetInternalOccHandoverResourceBlocksFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInternalOccHandoverResourceBlocksPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInternalOccHandoverResourceBlocksPlainArgs Empty = new GetInternalOccHandoverResourceBlocksPlainArgs();

    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetInternalOccHandoverResourceBlocksFilter> filters;

    public Optional<List<GetInternalOccHandoverResourceBlocksFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
     * 
     */
    @Import(name="handoverDateGreaterThanOrEqualTo")
    private @Nullable String handoverDateGreaterThanOrEqualTo;

    /**
     * @return This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
     * 
     */
    public Optional<String> handoverDateGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.handoverDateGreaterThanOrEqualTo);
    }

    /**
     * This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
     * 
     */
    @Import(name="handoverDateLessThanOrEqualTo")
    private @Nullable String handoverDateLessThanOrEqualTo;

    /**
     * @return This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
     * 
     */
    public Optional<String> handoverDateLessThanOrEqualTo() {
        return Optional.ofNullable(this.handoverDateLessThanOrEqualTo);
    }

    /**
     * A filter to return only the list of resources that match the name provided in this filter.
     * 
     */
    @Import(name="handoverResourceName")
    private @Nullable String handoverResourceName;

    /**
     * @return A filter to return only the list of resources that match the name provided in this filter.
     * 
     */
    public Optional<String> handoverResourceName() {
        return Optional.ofNullable(this.handoverResourceName);
    }

    /**
     * The namespace enum value that needs to be passed as a required query parameter.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    /**
     * @return The namespace enum value that needs to be passed as a required query parameter.
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * The customer group ocid by which we would filter the list.
     * 
     */
    @Import(name="occCustomerGroupId", required=true)
    private String occCustomerGroupId;

    /**
     * @return The customer group ocid by which we would filter the list.
     * 
     */
    public String occCustomerGroupId() {
        return this.occCustomerGroupId;
    }

    /**
     * This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
     * 
     */
    @Import(name="occHandoverResourceBlockId")
    private @Nullable String occHandoverResourceBlockId;

    /**
     * @return This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
     * 
     */
    public Optional<String> occHandoverResourceBlockId() {
        return Optional.ofNullable(this.occHandoverResourceBlockId);
    }

    private GetInternalOccHandoverResourceBlocksPlainArgs() {}

    private GetInternalOccHandoverResourceBlocksPlainArgs(GetInternalOccHandoverResourceBlocksPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.handoverDateGreaterThanOrEqualTo = $.handoverDateGreaterThanOrEqualTo;
        this.handoverDateLessThanOrEqualTo = $.handoverDateLessThanOrEqualTo;
        this.handoverResourceName = $.handoverResourceName;
        this.namespace = $.namespace;
        this.occCustomerGroupId = $.occCustomerGroupId;
        this.occHandoverResourceBlockId = $.occHandoverResourceBlockId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInternalOccHandoverResourceBlocksPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInternalOccHandoverResourceBlocksPlainArgs $;

        public Builder() {
            $ = new GetInternalOccHandoverResourceBlocksPlainArgs();
        }

        public Builder(GetInternalOccHandoverResourceBlocksPlainArgs defaults) {
            $ = new GetInternalOccHandoverResourceBlocksPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetInternalOccHandoverResourceBlocksFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetInternalOccHandoverResourceBlocksFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param handoverDateGreaterThanOrEqualTo This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
         * 
         * @return builder
         * 
         */
        public Builder handoverDateGreaterThanOrEqualTo(@Nullable String handoverDateGreaterThanOrEqualTo) {
            $.handoverDateGreaterThanOrEqualTo = handoverDateGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param handoverDateLessThanOrEqualTo This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
         * 
         * @return builder
         * 
         */
        public Builder handoverDateLessThanOrEqualTo(@Nullable String handoverDateLessThanOrEqualTo) {
            $.handoverDateLessThanOrEqualTo = handoverDateLessThanOrEqualTo;
            return this;
        }

        /**
         * @param handoverResourceName A filter to return only the list of resources that match the name provided in this filter.
         * 
         * @return builder
         * 
         */
        public Builder handoverResourceName(@Nullable String handoverResourceName) {
            $.handoverResourceName = handoverResourceName;
            return this;
        }

        /**
         * @param namespace The namespace enum value that needs to be passed as a required query parameter.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param occCustomerGroupId The customer group ocid by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder occCustomerGroupId(String occCustomerGroupId) {
            $.occCustomerGroupId = occCustomerGroupId;
            return this;
        }

        /**
         * @param occHandoverResourceBlockId This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
         * 
         * @return builder
         * 
         */
        public Builder occHandoverResourceBlockId(@Nullable String occHandoverResourceBlockId) {
            $.occHandoverResourceBlockId = occHandoverResourceBlockId;
            return this;
        }

        public GetInternalOccHandoverResourceBlocksPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksPlainArgs", "compartmentId");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksPlainArgs", "namespace");
            }
            if ($.occCustomerGroupId == null) {
                throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksPlainArgs", "occCustomerGroupId");
            }
            return $;
        }
    }

}
