// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.inputs.GetInternalOccmDemandSignalsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInternalOccmDemandSignalsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInternalOccmDemandSignalsArgs Empty = new GetInternalOccmDemandSignalsArgs();

    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetInternalOccmDemandSignalsFilterArgs>> filters;

    public Optional<Output<List<GetInternalOccmDemandSignalsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A query parameter to filter the list of demand signals based on it&#39;s OCID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A query parameter to filter the list of demand signals based on it&#39;s OCID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A query parameter to filter the list of demand signals based on its state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A query parameter to filter the list of demand signals based on its state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The customer group ocid by which we would filter the list.
     * 
     */
    @Import(name="occCustomerGroupId", required=true)
    private Output<String> occCustomerGroupId;

    /**
     * @return The customer group ocid by which we would filter the list.
     * 
     */
    public Output<String> occCustomerGroupId() {
        return this.occCustomerGroupId;
    }

    private GetInternalOccmDemandSignalsArgs() {}

    private GetInternalOccmDemandSignalsArgs(GetInternalOccmDemandSignalsArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.lifecycleDetails = $.lifecycleDetails;
        this.occCustomerGroupId = $.occCustomerGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInternalOccmDemandSignalsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInternalOccmDemandSignalsArgs $;

        public Builder() {
            $ = new GetInternalOccmDemandSignalsArgs();
        }

        public Builder(GetInternalOccmDemandSignalsArgs defaults) {
            $ = new GetInternalOccmDemandSignalsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetInternalOccmDemandSignalsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetInternalOccmDemandSignalsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetInternalOccmDemandSignalsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id A query parameter to filter the list of demand signals based on it&#39;s OCID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A query parameter to filter the list of demand signals based on it&#39;s OCID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param lifecycleDetails A query parameter to filter the list of demand signals based on its state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A query parameter to filter the list of demand signals based on its state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param occCustomerGroupId The customer group ocid by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder occCustomerGroupId(Output<String> occCustomerGroupId) {
            $.occCustomerGroupId = occCustomerGroupId;
            return this;
        }

        /**
         * @param occCustomerGroupId The customer group ocid by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder occCustomerGroupId(String occCustomerGroupId) {
            return occCustomerGroupId(Output.of(occCustomerGroupId));
        }

        public GetInternalOccmDemandSignalsArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetInternalOccmDemandSignalsArgs", "compartmentId");
            }
            if ($.occCustomerGroupId == null) {
                throw new MissingRequiredPropertyException("GetInternalOccmDemandSignalsArgs", "occCustomerGroupId");
            }
            return $;
        }
    }

}
