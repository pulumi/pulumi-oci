// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetOccAvailabilityCatalogContentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOccAvailabilityCatalogContentPlainArgs Empty = new GetOccAvailabilityCatalogContentPlainArgs();

    /**
     * The OCID of the availability catalog.
     * 
     */
    @Import(name="occAvailabilityCatalogId", required=true)
    private String occAvailabilityCatalogId;

    /**
     * @return The OCID of the availability catalog.
     * 
     */
    public String occAvailabilityCatalogId() {
        return this.occAvailabilityCatalogId;
    }

    private GetOccAvailabilityCatalogContentPlainArgs() {}

    private GetOccAvailabilityCatalogContentPlainArgs(GetOccAvailabilityCatalogContentPlainArgs $) {
        this.occAvailabilityCatalogId = $.occAvailabilityCatalogId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOccAvailabilityCatalogContentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOccAvailabilityCatalogContentPlainArgs $;

        public Builder() {
            $ = new GetOccAvailabilityCatalogContentPlainArgs();
        }

        public Builder(GetOccAvailabilityCatalogContentPlainArgs defaults) {
            $ = new GetOccAvailabilityCatalogContentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param occAvailabilityCatalogId The OCID of the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder occAvailabilityCatalogId(String occAvailabilityCatalogId) {
            $.occAvailabilityCatalogId = occAvailabilityCatalogId;
            return this;
        }

        public GetOccAvailabilityCatalogContentPlainArgs build() {
            if ($.occAvailabilityCatalogId == null) {
                throw new MissingRequiredPropertyException("GetOccAvailabilityCatalogContentPlainArgs", "occAvailabilityCatalogId");
            }
            return $;
        }
    }

}
