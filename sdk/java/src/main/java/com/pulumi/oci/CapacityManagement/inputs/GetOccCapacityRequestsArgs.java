// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.inputs.GetOccCapacityRequestsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOccCapacityRequestsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOccCapacityRequestsArgs Empty = new GetOccCapacityRequestsArgs();

    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetOccCapacityRequestsFilterArgs>> filters;

    public Optional<Output<List<GetOccCapacityRequestsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The namespace by which we would filter the list.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace by which we would filter the list.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
     * 
     */
    @Import(name="occAvailabilityCatalogId")
    private @Nullable Output<String> occAvailabilityCatalogId;

    /**
     * @return A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
     * 
     */
    public Optional<Output<String>> occAvailabilityCatalogId() {
        return Optional.ofNullable(this.occAvailabilityCatalogId);
    }

    private GetOccCapacityRequestsArgs() {}

    private GetOccCapacityRequestsArgs(GetOccCapacityRequestsArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.namespace = $.namespace;
        this.occAvailabilityCatalogId = $.occAvailabilityCatalogId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOccCapacityRequestsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOccCapacityRequestsArgs $;

        public Builder() {
            $ = new GetOccCapacityRequestsArgs();
        }

        public Builder(GetOccCapacityRequestsArgs defaults) {
            $ = new GetOccCapacityRequestsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetOccCapacityRequestsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetOccCapacityRequestsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetOccCapacityRequestsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param namespace The namespace by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param occAvailabilityCatalogId A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
         * 
         * @return builder
         * 
         */
        public Builder occAvailabilityCatalogId(@Nullable Output<String> occAvailabilityCatalogId) {
            $.occAvailabilityCatalogId = occAvailabilityCatalogId;
            return this;
        }

        /**
         * @param occAvailabilityCatalogId A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
         * 
         * @return builder
         * 
         */
        public Builder occAvailabilityCatalogId(String occAvailabilityCatalogId) {
            return occAvailabilityCatalogId(Output.of(occAvailabilityCatalogId));
        }

        public GetOccCapacityRequestsArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetOccCapacityRequestsArgs", "compartmentId");
            }
            return $;
        }
    }

}
