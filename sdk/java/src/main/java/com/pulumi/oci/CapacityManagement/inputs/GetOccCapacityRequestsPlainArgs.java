// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.inputs.GetOccCapacityRequestsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOccCapacityRequestsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOccCapacityRequestsPlainArgs Empty = new GetOccCapacityRequestsPlainArgs();

    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetOccCapacityRequestsFilter> filters;

    public Optional<List<GetOccCapacityRequestsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The namespace by which we would filter the list.
     * 
     */
    @Import(name="namespace")
    private @Nullable String namespace;

    /**
     * @return The namespace by which we would filter the list.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
     * 
     */
    @Import(name="occAvailabilityCatalogId")
    private @Nullable String occAvailabilityCatalogId;

    /**
     * @return A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
     * 
     */
    public Optional<String> occAvailabilityCatalogId() {
        return Optional.ofNullable(this.occAvailabilityCatalogId);
    }

    /**
     * A filter to return only the resources that match the request type. The match is not case sensitive.
     * 
     */
    @Import(name="requestType")
    private @Nullable String requestType;

    /**
     * @return A filter to return only the resources that match the request type. The match is not case sensitive.
     * 
     */
    public Optional<String> requestType() {
        return Optional.ofNullable(this.requestType);
    }

    private GetOccCapacityRequestsPlainArgs() {}

    private GetOccCapacityRequestsPlainArgs(GetOccCapacityRequestsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.namespace = $.namespace;
        this.occAvailabilityCatalogId = $.occAvailabilityCatalogId;
        this.requestType = $.requestType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOccCapacityRequestsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOccCapacityRequestsPlainArgs $;

        public Builder() {
            $ = new GetOccCapacityRequestsPlainArgs();
        }

        public Builder(GetOccCapacityRequestsPlainArgs defaults) {
            $ = new GetOccCapacityRequestsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire display name. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetOccCapacityRequestsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetOccCapacityRequestsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param namespace The namespace by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param occAvailabilityCatalogId A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
         * 
         * @return builder
         * 
         */
        public Builder occAvailabilityCatalogId(@Nullable String occAvailabilityCatalogId) {
            $.occAvailabilityCatalogId = occAvailabilityCatalogId;
            return this;
        }

        /**
         * @param requestType A filter to return only the resources that match the request type. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder requestType(@Nullable String requestType) {
            $.requestType = requestType;
            return this;
        }

        public GetOccCapacityRequestsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetOccCapacityRequestsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
