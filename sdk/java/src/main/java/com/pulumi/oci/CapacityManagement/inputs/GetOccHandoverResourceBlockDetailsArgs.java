// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.inputs.GetOccHandoverResourceBlockDetailsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOccHandoverResourceBlockDetailsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOccHandoverResourceBlockDetailsArgs Empty = new GetOccHandoverResourceBlockDetailsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetOccHandoverResourceBlockDetailsFilterArgs>> filters;

    public Optional<Output<List<GetOccHandoverResourceBlockDetailsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
     * 
     */
    @Import(name="hostId")
    private @Nullable Output<String> hostId;

    /**
     * @return This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
     * 
     */
    public Optional<Output<String>> hostId() {
        return Optional.ofNullable(this.hostId);
    }

    /**
     * The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
     * 
     */
    @Import(name="occHandoverResourceBlockId", required=true)
    private Output<String> occHandoverResourceBlockId;

    /**
     * @return The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
     * 
     */
    public Output<String> occHandoverResourceBlockId() {
        return this.occHandoverResourceBlockId;
    }

    private GetOccHandoverResourceBlockDetailsArgs() {}

    private GetOccHandoverResourceBlockDetailsArgs(GetOccHandoverResourceBlockDetailsArgs $) {
        this.filters = $.filters;
        this.hostId = $.hostId;
        this.occHandoverResourceBlockId = $.occHandoverResourceBlockId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOccHandoverResourceBlockDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOccHandoverResourceBlockDetailsArgs $;

        public Builder() {
            $ = new GetOccHandoverResourceBlockDetailsArgs();
        }

        public Builder(GetOccHandoverResourceBlockDetailsArgs defaults) {
            $ = new GetOccHandoverResourceBlockDetailsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetOccHandoverResourceBlockDetailsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetOccHandoverResourceBlockDetailsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetOccHandoverResourceBlockDetailsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param hostId This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
         * 
         * @return builder
         * 
         */
        public Builder hostId(@Nullable Output<String> hostId) {
            $.hostId = hostId;
            return this;
        }

        /**
         * @param hostId This fiter is applicable only for COMPUTE namespace. It helps in fetching of all resource block details for which the hostId is equal to the one provided in this query param.
         * 
         * @return builder
         * 
         */
        public Builder hostId(String hostId) {
            return hostId(Output.of(hostId));
        }

        /**
         * @param occHandoverResourceBlockId The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
         * 
         * @return builder
         * 
         */
        public Builder occHandoverResourceBlockId(Output<String> occHandoverResourceBlockId) {
            $.occHandoverResourceBlockId = occHandoverResourceBlockId;
            return this;
        }

        /**
         * @param occHandoverResourceBlockId The OCID of the OccHandoverResource which is a required query parameter for listing OccHandoverResourceDetails.
         * 
         * @return builder
         * 
         */
        public Builder occHandoverResourceBlockId(String occHandoverResourceBlockId) {
            return occHandoverResourceBlockId(Output.of(occHandoverResourceBlockId));
        }

        public GetOccHandoverResourceBlockDetailsArgs build() {
            if ($.occHandoverResourceBlockId == null) {
                throw new MissingRequiredPropertyException("GetOccHandoverResourceBlockDetailsArgs", "occHandoverResourceBlockId");
            }
            return $;
        }
    }

}
