// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CapacityManagement.inputs.GetOccHandoverResourceBlocksFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOccHandoverResourceBlocksArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOccHandoverResourceBlocksArgs Empty = new GetOccHandoverResourceBlocksArgs();

    /**
     * The OCID of the compartment or tenancy in which resources are to be listed.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment or tenancy in which resources are to be listed.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetOccHandoverResourceBlocksFilterArgs>> filters;

    public Optional<Output<List<GetOccHandoverResourceBlocksFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
     * 
     */
    @Import(name="handoverDateGreaterThanOrEqualTo")
    private @Nullable Output<String> handoverDateGreaterThanOrEqualTo;

    /**
     * @return This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
     * 
     */
    public Optional<Output<String>> handoverDateGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.handoverDateGreaterThanOrEqualTo);
    }

    /**
     * This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
     * 
     */
    @Import(name="handoverDateLessThanOrEqualTo")
    private @Nullable Output<String> handoverDateLessThanOrEqualTo;

    /**
     * @return This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
     * 
     */
    public Optional<Output<String>> handoverDateLessThanOrEqualTo() {
        return Optional.ofNullable(this.handoverDateLessThanOrEqualTo);
    }

    /**
     * A filter to return only the list of resources that match the name provided in this filter.
     * 
     */
    @Import(name="handoverResourceName")
    private @Nullable Output<String> handoverResourceName;

    /**
     * @return A filter to return only the list of resources that match the name provided in this filter.
     * 
     */
    public Optional<Output<String>> handoverResourceName() {
        return Optional.ofNullable(this.handoverResourceName);
    }

    /**
     * The namespace by which we would filter the list.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace by which we would filter the list.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
     * 
     */
    @Import(name="occHandoverResourceBlockId")
    private @Nullable Output<String> occHandoverResourceBlockId;

    /**
     * @return This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
     * 
     */
    public Optional<Output<String>> occHandoverResourceBlockId() {
        return Optional.ofNullable(this.occHandoverResourceBlockId);
    }

    private GetOccHandoverResourceBlocksArgs() {}

    private GetOccHandoverResourceBlocksArgs(GetOccHandoverResourceBlocksArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.handoverDateGreaterThanOrEqualTo = $.handoverDateGreaterThanOrEqualTo;
        this.handoverDateLessThanOrEqualTo = $.handoverDateLessThanOrEqualTo;
        this.handoverResourceName = $.handoverResourceName;
        this.namespace = $.namespace;
        this.occHandoverResourceBlockId = $.occHandoverResourceBlockId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOccHandoverResourceBlocksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOccHandoverResourceBlocksArgs $;

        public Builder() {
            $ = new GetOccHandoverResourceBlocksArgs();
        }

        public Builder(GetOccHandoverResourceBlocksArgs defaults) {
            $ = new GetOccHandoverResourceBlocksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment or tenancy in which resources are to be listed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment or tenancy in which resources are to be listed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetOccHandoverResourceBlocksFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetOccHandoverResourceBlocksFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetOccHandoverResourceBlocksFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param handoverDateGreaterThanOrEqualTo This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
         * 
         * @return builder
         * 
         */
        public Builder handoverDateGreaterThanOrEqualTo(@Nullable Output<String> handoverDateGreaterThanOrEqualTo) {
            $.handoverDateGreaterThanOrEqualTo = handoverDateGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param handoverDateGreaterThanOrEqualTo This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
         * 
         * @return builder
         * 
         */
        public Builder handoverDateGreaterThanOrEqualTo(String handoverDateGreaterThanOrEqualTo) {
            return handoverDateGreaterThanOrEqualTo(Output.of(handoverDateGreaterThanOrEqualTo));
        }

        /**
         * @param handoverDateLessThanOrEqualTo This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
         * 
         * @return builder
         * 
         */
        public Builder handoverDateLessThanOrEqualTo(@Nullable Output<String> handoverDateLessThanOrEqualTo) {
            $.handoverDateLessThanOrEqualTo = handoverDateLessThanOrEqualTo;
            return this;
        }

        /**
         * @param handoverDateLessThanOrEqualTo This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
         * 
         * @return builder
         * 
         */
        public Builder handoverDateLessThanOrEqualTo(String handoverDateLessThanOrEqualTo) {
            return handoverDateLessThanOrEqualTo(Output.of(handoverDateLessThanOrEqualTo));
        }

        /**
         * @param handoverResourceName A filter to return only the list of resources that match the name provided in this filter.
         * 
         * @return builder
         * 
         */
        public Builder handoverResourceName(@Nullable Output<String> handoverResourceName) {
            $.handoverResourceName = handoverResourceName;
            return this;
        }

        /**
         * @param handoverResourceName A filter to return only the list of resources that match the name provided in this filter.
         * 
         * @return builder
         * 
         */
        public Builder handoverResourceName(String handoverResourceName) {
            return handoverResourceName(Output.of(handoverResourceName));
        }

        /**
         * @param namespace The namespace by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace by which we would filter the list.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param occHandoverResourceBlockId This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
         * 
         * @return builder
         * 
         */
        public Builder occHandoverResourceBlockId(@Nullable Output<String> occHandoverResourceBlockId) {
            $.occHandoverResourceBlockId = occHandoverResourceBlockId;
            return this;
        }

        /**
         * @param occHandoverResourceBlockId This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
         * 
         * @return builder
         * 
         */
        public Builder occHandoverResourceBlockId(String occHandoverResourceBlockId) {
            return occHandoverResourceBlockId(Output.of(occHandoverResourceBlockId));
        }

        public GetOccHandoverResourceBlocksArgs build() {
            return $;
        }
    }

}
