// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OccAvailabilityCatalogMetadataDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final OccAvailabilityCatalogMetadataDetailsArgs Empty = new OccAvailabilityCatalogMetadataDetailsArgs();

    /**
     * The version for the format of the catalog file being uploaded.
     * 
     */
    @Import(name="formatVersion", required=true)
    private Output<String> formatVersion;

    /**
     * @return The version for the format of the catalog file being uploaded.
     * 
     */
    public Output<String> formatVersion() {
        return this.formatVersion;
    }

    private OccAvailabilityCatalogMetadataDetailsArgs() {}

    private OccAvailabilityCatalogMetadataDetailsArgs(OccAvailabilityCatalogMetadataDetailsArgs $) {
        this.formatVersion = $.formatVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OccAvailabilityCatalogMetadataDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OccAvailabilityCatalogMetadataDetailsArgs $;

        public Builder() {
            $ = new OccAvailabilityCatalogMetadataDetailsArgs();
        }

        public Builder(OccAvailabilityCatalogMetadataDetailsArgs defaults) {
            $ = new OccAvailabilityCatalogMetadataDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param formatVersion The version for the format of the catalog file being uploaded.
         * 
         * @return builder
         * 
         */
        public Builder formatVersion(Output<String> formatVersion) {
            $.formatVersion = formatVersion;
            return this;
        }

        /**
         * @param formatVersion The version for the format of the catalog file being uploaded.
         * 
         * @return builder
         * 
         */
        public Builder formatVersion(String formatVersion) {
            return formatVersion(Output.of(formatVersion));
        }

        public OccAvailabilityCatalogMetadataDetailsArgs build() {
            if ($.formatVersion == null) {
                throw new MissingRequiredPropertyException("OccAvailabilityCatalogMetadataDetailsArgs", "formatVersion");
            }
            return $;
        }
    }

}
