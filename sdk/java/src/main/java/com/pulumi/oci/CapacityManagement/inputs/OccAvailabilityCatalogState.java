// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CapacityManagement.inputs.OccAvailabilityCatalogDetailArgs;
import com.pulumi.oci.CapacityManagement.inputs.OccAvailabilityCatalogMetadataDetailsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OccAvailabilityCatalogState extends com.pulumi.resources.ResourceArgs {

    public static final OccAvailabilityCatalogState Empty = new OccAvailabilityCatalogState();

    /**
     * The base 64 encoded string corresponding to the catalog file contents.
     * 
     */
    @Import(name="base64encodedCatalogDetails")
    private @Nullable Output<String> base64encodedCatalogDetails;

    /**
     * @return The base 64 encoded string corresponding to the catalog file contents.
     * 
     */
    public Optional<Output<String>> base64encodedCatalogDetails() {
        return Optional.ofNullable(this.base64encodedCatalogDetails);
    }

    /**
     * The different states associated with the availability catalog.
     * 
     */
    @Import(name="catalogState")
    private @Nullable Output<String> catalogState;

    /**
     * @return The different states associated with the availability catalog.
     * 
     */
    public Optional<Output<String>> catalogState() {
        return Optional.ofNullable(this.catalogState);
    }

    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Additional information about the availability catalog.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Additional information about the availability catalog.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Details about capacity available for  different resources in catalog.
     * 
     */
    @Import(name="details")
    private @Nullable Output<List<OccAvailabilityCatalogDetailArgs>> details;

    /**
     * @return Details about capacity available for  different resources in catalog.
     * 
     */
    public Optional<Output<List<OccAvailabilityCatalogDetailArgs>>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * (Updatable) The display name of the availability catalog.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the availability catalog.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
     * 
     */
    @Import(name="metadataDetails")
    private @Nullable Output<OccAvailabilityCatalogMetadataDetailsArgs> metadataDetails;

    /**
     * @return Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
     * 
     */
    public Optional<Output<OccAvailabilityCatalogMetadataDetailsArgs>> metadataDetails() {
        return Optional.ofNullable(this.metadataDetails);
    }

    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The OCID of the customer group.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="occCustomerGroupId")
    private @Nullable Output<String> occCustomerGroupId;

    /**
     * @return The OCID of the customer group.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> occCustomerGroupId() {
        return Optional.ofNullable(this.occCustomerGroupId);
    }

    /**
     * The current lifecycle state of the resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time when the availability catalog was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time when the availability catalog was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time when the availability catalog was last updated.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time when the availability catalog was last updated.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private OccAvailabilityCatalogState() {}

    private OccAvailabilityCatalogState(OccAvailabilityCatalogState $) {
        this.base64encodedCatalogDetails = $.base64encodedCatalogDetails;
        this.catalogState = $.catalogState;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.details = $.details;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.metadataDetails = $.metadataDetails;
        this.namespace = $.namespace;
        this.occCustomerGroupId = $.occCustomerGroupId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OccAvailabilityCatalogState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OccAvailabilityCatalogState $;

        public Builder() {
            $ = new OccAvailabilityCatalogState();
        }

        public Builder(OccAvailabilityCatalogState defaults) {
            $ = new OccAvailabilityCatalogState(Objects.requireNonNull(defaults));
        }

        /**
         * @param base64encodedCatalogDetails The base 64 encoded string corresponding to the catalog file contents.
         * 
         * @return builder
         * 
         */
        public Builder base64encodedCatalogDetails(@Nullable Output<String> base64encodedCatalogDetails) {
            $.base64encodedCatalogDetails = base64encodedCatalogDetails;
            return this;
        }

        /**
         * @param base64encodedCatalogDetails The base 64 encoded string corresponding to the catalog file contents.
         * 
         * @return builder
         * 
         */
        public Builder base64encodedCatalogDetails(String base64encodedCatalogDetails) {
            return base64encodedCatalogDetails(Output.of(base64encodedCatalogDetails));
        }

        /**
         * @param catalogState The different states associated with the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder catalogState(@Nullable Output<String> catalogState) {
            $.catalogState = catalogState;
            return this;
        }

        /**
         * @param catalogState The different states associated with the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder catalogState(String catalogState) {
            return catalogState(Output.of(catalogState));
        }

        /**
         * @param compartmentId Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Additional information about the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Additional information about the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param details Details about capacity available for  different resources in catalog.
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<List<OccAvailabilityCatalogDetailArgs>> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details Details about capacity available for  different resources in catalog.
         * 
         * @return builder
         * 
         */
        public Builder details(List<OccAvailabilityCatalogDetailArgs> details) {
            return details(Output.of(details));
        }

        /**
         * @param details Details about capacity available for  different resources in catalog.
         * 
         * @return builder
         * 
         */
        public Builder details(OccAvailabilityCatalogDetailArgs... details) {
            return details(List.of(details));
        }

        /**
         * @param displayName (Updatable) The display name of the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the availability catalog.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param metadataDetails Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
         * 
         * @return builder
         * 
         */
        public Builder metadataDetails(@Nullable Output<OccAvailabilityCatalogMetadataDetailsArgs> metadataDetails) {
            $.metadataDetails = metadataDetails;
            return this;
        }

        /**
         * @param metadataDetails Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
         * 
         * @return builder
         * 
         */
        public Builder metadataDetails(OccAvailabilityCatalogMetadataDetailsArgs metadataDetails) {
            return metadataDetails(Output.of(metadataDetails));
        }

        /**
         * @param namespace The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param occCustomerGroupId The OCID of the customer group.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder occCustomerGroupId(@Nullable Output<String> occCustomerGroupId) {
            $.occCustomerGroupId = occCustomerGroupId;
            return this;
        }

        /**
         * @param occCustomerGroupId The OCID of the customer group.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder occCustomerGroupId(String occCustomerGroupId) {
            return occCustomerGroupId(Output.of(occCustomerGroupId));
        }

        /**
         * @param state The current lifecycle state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time when the availability catalog was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time when the availability catalog was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time when the availability catalog was last updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time when the availability catalog was last updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public OccAvailabilityCatalogState build() {
            return $;
        }
    }

}
