// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.outputs.GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemAssociatedCapacityRequest;
import com.pulumi.oci.CapacityManagement.outputs.GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemPlacementDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem {
    /**
     * @return A list containing details about the capacity requests against which the resources were provisioned by oracle.
     * 
     */
    private List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemAssociatedCapacityRequest> associatedCapacityRequests;
    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    private String compartmentId;
    /**
     * @return The date on which the resource was handed over to the customer.
     * 
     */
    private String handoverDate;
    /**
     * @return A filter to return only the list of resources that match the name provided in this filter.
     * 
     */
    private String handoverResourceName;
    /**
     * @return The OCID of the resource block.
     * 
     */
    private String id;
    /**
     * @return The namespace enum value that needs to be passed as a required query parameter.
     * 
     */
    private String namespace;
    /**
     * @return The customer group ocid by which we would filter the list.
     * 
     */
    private String occCustomerGroupId;
    /**
     * @return Details like building, room and block where the resource was placed after provisioning in the datacenter.
     * 
     */
    private List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemPlacementDetail> placementDetails;
    /**
     * @return The total quantity of the resource that was made available to the customer by Oracle.
     * 
     */
    private String totalHandoverQuantity;

    private GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem() {}
    /**
     * @return A list containing details about the capacity requests against which the resources were provisioned by oracle.
     * 
     */
    public List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemAssociatedCapacityRequest> associatedCapacityRequests() {
        return this.associatedCapacityRequests;
    }
    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The date on which the resource was handed over to the customer.
     * 
     */
    public String handoverDate() {
        return this.handoverDate;
    }
    /**
     * @return A filter to return only the list of resources that match the name provided in this filter.
     * 
     */
    public String handoverResourceName() {
        return this.handoverResourceName;
    }
    /**
     * @return The OCID of the resource block.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The namespace enum value that needs to be passed as a required query parameter.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The customer group ocid by which we would filter the list.
     * 
     */
    public String occCustomerGroupId() {
        return this.occCustomerGroupId;
    }
    /**
     * @return Details like building, room and block where the resource was placed after provisioning in the datacenter.
     * 
     */
    public List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemPlacementDetail> placementDetails() {
        return this.placementDetails;
    }
    /**
     * @return The total quantity of the resource that was made available to the customer by Oracle.
     * 
     */
    public String totalHandoverQuantity() {
        return this.totalHandoverQuantity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemAssociatedCapacityRequest> associatedCapacityRequests;
        private String compartmentId;
        private String handoverDate;
        private String handoverResourceName;
        private String id;
        private String namespace;
        private String occCustomerGroupId;
        private List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemPlacementDetail> placementDetails;
        private String totalHandoverQuantity;
        public Builder() {}
        public Builder(GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedCapacityRequests = defaults.associatedCapacityRequests;
    	      this.compartmentId = defaults.compartmentId;
    	      this.handoverDate = defaults.handoverDate;
    	      this.handoverResourceName = defaults.handoverResourceName;
    	      this.id = defaults.id;
    	      this.namespace = defaults.namespace;
    	      this.occCustomerGroupId = defaults.occCustomerGroupId;
    	      this.placementDetails = defaults.placementDetails;
    	      this.totalHandoverQuantity = defaults.totalHandoverQuantity;
        }

        @CustomType.Setter
        public Builder associatedCapacityRequests(List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemAssociatedCapacityRequest> associatedCapacityRequests) {
            if (associatedCapacityRequests == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "associatedCapacityRequests");
            }
            this.associatedCapacityRequests = associatedCapacityRequests;
            return this;
        }
        public Builder associatedCapacityRequests(GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemAssociatedCapacityRequest... associatedCapacityRequests) {
            return associatedCapacityRequests(List.of(associatedCapacityRequests));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder handoverDate(String handoverDate) {
            if (handoverDate == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "handoverDate");
            }
            this.handoverDate = handoverDate;
            return this;
        }
        @CustomType.Setter
        public Builder handoverResourceName(String handoverResourceName) {
            if (handoverResourceName == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "handoverResourceName");
            }
            this.handoverResourceName = handoverResourceName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder occCustomerGroupId(String occCustomerGroupId) {
            if (occCustomerGroupId == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "occCustomerGroupId");
            }
            this.occCustomerGroupId = occCustomerGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder placementDetails(List<GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemPlacementDetail> placementDetails) {
            if (placementDetails == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "placementDetails");
            }
            this.placementDetails = placementDetails;
            return this;
        }
        public Builder placementDetails(GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItemPlacementDetail... placementDetails) {
            return placementDetails(List.of(placementDetails));
        }
        @CustomType.Setter
        public Builder totalHandoverQuantity(String totalHandoverQuantity) {
            if (totalHandoverQuantity == null) {
              throw new MissingRequiredPropertyException("GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem", "totalHandoverQuantity");
            }
            this.totalHandoverQuantity = totalHandoverQuantity;
            return this;
        }
        public GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem build() {
            final var _resultValue = new GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollectionItem();
            _resultValue.associatedCapacityRequests = associatedCapacityRequests;
            _resultValue.compartmentId = compartmentId;
            _resultValue.handoverDate = handoverDate;
            _resultValue.handoverResourceName = handoverResourceName;
            _resultValue.id = id;
            _resultValue.namespace = namespace;
            _resultValue.occCustomerGroupId = occCustomerGroupId;
            _resultValue.placementDetails = placementDetails;
            _resultValue.totalHandoverQuantity = totalHandoverQuantity;
            return _resultValue;
        }
    }
}
