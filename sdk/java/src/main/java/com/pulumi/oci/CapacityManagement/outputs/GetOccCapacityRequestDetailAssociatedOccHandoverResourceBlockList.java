// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList {
    /**
     * @return The total quantity of the resource that was made available to the customer as part of this resource block
     * 
     */
    private String handoverQuantity;
    /**
     * @return The OCID of the handed over resource block.
     * 
     */
    private String occHandoverResourceBlockId;

    private GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList() {}
    /**
     * @return The total quantity of the resource that was made available to the customer as part of this resource block
     * 
     */
    public String handoverQuantity() {
        return this.handoverQuantity;
    }
    /**
     * @return The OCID of the handed over resource block.
     * 
     */
    public String occHandoverResourceBlockId() {
        return this.occHandoverResourceBlockId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String handoverQuantity;
        private String occHandoverResourceBlockId;
        public Builder() {}
        public Builder(GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.handoverQuantity = defaults.handoverQuantity;
    	      this.occHandoverResourceBlockId = defaults.occHandoverResourceBlockId;
        }

        @CustomType.Setter
        public Builder handoverQuantity(String handoverQuantity) {
            if (handoverQuantity == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList", "handoverQuantity");
            }
            this.handoverQuantity = handoverQuantity;
            return this;
        }
        @CustomType.Setter
        public Builder occHandoverResourceBlockId(String occHandoverResourceBlockId) {
            if (occHandoverResourceBlockId == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList", "occHandoverResourceBlockId");
            }
            this.occHandoverResourceBlockId = occHandoverResourceBlockId;
            return this;
        }
        public GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList build() {
            final var _resultValue = new GetOccCapacityRequestDetailAssociatedOccHandoverResourceBlockList();
            _resultValue.handoverQuantity = handoverQuantity;
            _resultValue.occHandoverResourceBlockId = occHandoverResourceBlockId;
            return _resultValue;
        }
    }
}
