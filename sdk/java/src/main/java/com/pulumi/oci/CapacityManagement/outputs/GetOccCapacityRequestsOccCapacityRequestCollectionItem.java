// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.outputs.GetOccCapacityRequestsOccCapacityRequestCollectionItemDetail;
import com.pulumi.oci.CapacityManagement.outputs.GetOccCapacityRequestsOccCapacityRequestCollectionItemPatchOperation;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOccCapacityRequestsOccCapacityRequestCollectionItem {
    /**
     * @return The availability domain (AD) for which the capacity request was made.
     * 
     */
    private String availabilityDomain;
    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    private String compartmentId;
    /**
     * @return The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     * 
     */
    private String dateExpectedCapacityHandover;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Meaningful text about the capacity request.
     * 
     */
    private String description;
    /**
     * @return A list of resources requested as part of this request
     * 
     */
    private List<GetOccCapacityRequestsOccCapacityRequestCollectionItemDetail> details;
    /**
     * @return A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The namespace by which we would filter the list.
     * 
     */
    private String namespace;
    /**
     * @return A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
     * 
     */
    private String occAvailabilityCatalogId;
    /**
     * @return The OCID of the customer group to which this customer belongs to.
     * 
     */
    private String occCustomerGroupId;
    private List<GetOccCapacityRequestsOccCapacityRequestCollectionItemPatchOperation> patchOperations;
    /**
     * @return The name of the region for which the capacity request was made.
     * 
     */
    private String region;
    /**
     * @return The different states the capacity request goes through.
     * 
     */
    private String requestState;
    /**
     * @return The current lifecycle state of the resource.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time when the capacity request was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The time when the capacity request was updated.
     * 
     */
    private String timeUpdated;

    private GetOccCapacityRequestsOccCapacityRequestCollectionItem() {}
    /**
     * @return The availability domain (AD) for which the capacity request was made.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     * 
     */
    public String dateExpectedCapacityHandover() {
        return this.dateExpectedCapacityHandover;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Meaningful text about the capacity request.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A list of resources requested as part of this request
     * 
     */
    public List<GetOccCapacityRequestsOccCapacityRequestCollectionItemDetail> details() {
        return this.details;
    }
    /**
     * @return A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return A filter to return the list of capacity requests based on the OCID of the capacity request. This is done for the users who have INSPECT permission on the resource but do not have READ permission.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The namespace by which we would filter the list.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return A filter to return the list of capacity requests based on the OCID of the availability catalog against which they were created.
     * 
     */
    public String occAvailabilityCatalogId() {
        return this.occAvailabilityCatalogId;
    }
    /**
     * @return The OCID of the customer group to which this customer belongs to.
     * 
     */
    public String occCustomerGroupId() {
        return this.occCustomerGroupId;
    }
    public List<GetOccCapacityRequestsOccCapacityRequestCollectionItemPatchOperation> patchOperations() {
        return this.patchOperations;
    }
    /**
     * @return The name of the region for which the capacity request was made.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The different states the capacity request goes through.
     * 
     */
    public String requestState() {
        return this.requestState;
    }
    /**
     * @return The current lifecycle state of the resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time when the capacity request was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time when the capacity request was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOccCapacityRequestsOccCapacityRequestCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private String dateExpectedCapacityHandover;
        private Map<String,String> definedTags;
        private String description;
        private List<GetOccCapacityRequestsOccCapacityRequestCollectionItemDetail> details;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String namespace;
        private String occAvailabilityCatalogId;
        private String occCustomerGroupId;
        private List<GetOccCapacityRequestsOccCapacityRequestCollectionItemPatchOperation> patchOperations;
        private String region;
        private String requestState;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetOccCapacityRequestsOccCapacityRequestCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dateExpectedCapacityHandover = defaults.dateExpectedCapacityHandover;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.details = defaults.details;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.namespace = defaults.namespace;
    	      this.occAvailabilityCatalogId = defaults.occAvailabilityCatalogId;
    	      this.occCustomerGroupId = defaults.occCustomerGroupId;
    	      this.patchOperations = defaults.patchOperations;
    	      this.region = defaults.region;
    	      this.requestState = defaults.requestState;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dateExpectedCapacityHandover(String dateExpectedCapacityHandover) {
            if (dateExpectedCapacityHandover == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "dateExpectedCapacityHandover");
            }
            this.dateExpectedCapacityHandover = dateExpectedCapacityHandover;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder details(List<GetOccCapacityRequestsOccCapacityRequestCollectionItemDetail> details) {
            if (details == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "details");
            }
            this.details = details;
            return this;
        }
        public Builder details(GetOccCapacityRequestsOccCapacityRequestCollectionItemDetail... details) {
            return details(List.of(details));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder occAvailabilityCatalogId(String occAvailabilityCatalogId) {
            if (occAvailabilityCatalogId == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "occAvailabilityCatalogId");
            }
            this.occAvailabilityCatalogId = occAvailabilityCatalogId;
            return this;
        }
        @CustomType.Setter
        public Builder occCustomerGroupId(String occCustomerGroupId) {
            if (occCustomerGroupId == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "occCustomerGroupId");
            }
            this.occCustomerGroupId = occCustomerGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder patchOperations(List<GetOccCapacityRequestsOccCapacityRequestCollectionItemPatchOperation> patchOperations) {
            if (patchOperations == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "patchOperations");
            }
            this.patchOperations = patchOperations;
            return this;
        }
        public Builder patchOperations(GetOccCapacityRequestsOccCapacityRequestCollectionItemPatchOperation... patchOperations) {
            return patchOperations(List.of(patchOperations));
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder requestState(String requestState) {
            if (requestState == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "requestState");
            }
            this.requestState = requestState;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetOccCapacityRequestsOccCapacityRequestCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetOccCapacityRequestsOccCapacityRequestCollectionItem build() {
            final var _resultValue = new GetOccCapacityRequestsOccCapacityRequestCollectionItem();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dateExpectedCapacityHandover = dateExpectedCapacityHandover;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.details = details;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.namespace = namespace;
            _resultValue.occAvailabilityCatalogId = occAvailabilityCatalogId;
            _resultValue.occCustomerGroupId = occCustomerGroupId;
            _resultValue.patchOperations = patchOperations;
            _resultValue.region = region;
            _resultValue.requestState = requestState;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
