// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList {
    /**
     * @return The description about the customer group.
     * 
     */
    private String description;
    /**
     * @return A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return The OCID of the customer group.
     * 
     */
    private String occCustomerGroupId;
    /**
     * @return A query filter to return the list result based on status.
     * 
     */
    private String status;
    /**
     * @return The OCID of the tenancy belonging to the customer.
     * 
     */
    private String tenancyId;

    private GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList() {}
    /**
     * @return The description about the customer group.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only the resources that match the entire display name. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The OCID of the customer group.
     * 
     */
    public String occCustomerGroupId() {
        return this.occCustomerGroupId;
    }
    /**
     * @return A query filter to return the list result based on status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The OCID of the tenancy belonging to the customer.
     * 
     */
    public String tenancyId() {
        return this.tenancyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private String occCustomerGroupId;
        private String status;
        private String tenancyId;
        public Builder() {}
        public Builder(GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.occCustomerGroupId = defaults.occCustomerGroupId;
    	      this.status = defaults.status;
    	      this.tenancyId = defaults.tenancyId;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder occCustomerGroupId(String occCustomerGroupId) {
            if (occCustomerGroupId == null) {
              throw new MissingRequiredPropertyException("GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList", "occCustomerGroupId");
            }
            this.occCustomerGroupId = occCustomerGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tenancyId(String tenancyId) {
            if (tenancyId == null) {
              throw new MissingRequiredPropertyException("GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList", "tenancyId");
            }
            this.tenancyId = tenancyId;
            return this;
        }
        public GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList build() {
            final var _resultValue = new GetOccCustomerGroupsOccCustomerGroupCollectionItemCustomersList();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.occCustomerGroupId = occCustomerGroupId;
            _resultValue.status = status;
            _resultValue.tenancyId = tenancyId;
            return _resultValue;
        }
    }
}
