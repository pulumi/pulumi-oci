// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CapacityManagement.outputs.GetOccCustomerGroupsFilter;
import com.pulumi.oci.CapacityManagement.outputs.GetOccCustomerGroupsOccCustomerGroupCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOccCustomerGroupsResult {
    /**
     * @return The OCID of the tenancy containing the customer group.
     * 
     */
    private String compartmentId;
    /**
     * @return The display name of the customer group.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetOccCustomerGroupsFilter> filters;
    /**
     * @return The OCID of the customer group.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of occ_customer_group_collection.
     * 
     */
    private List<GetOccCustomerGroupsOccCustomerGroupCollection> occCustomerGroupCollections;
    /**
     * @return To determine whether the customer group is enabled/disabled.
     * 
     */
    private @Nullable String status;

    private GetOccCustomerGroupsResult() {}
    /**
     * @return The OCID of the tenancy containing the customer group.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The display name of the customer group.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetOccCustomerGroupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The OCID of the customer group.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of occ_customer_group_collection.
     * 
     */
    public List<GetOccCustomerGroupsOccCustomerGroupCollection> occCustomerGroupCollections() {
        return this.occCustomerGroupCollections;
    }
    /**
     * @return To determine whether the customer group is enabled/disabled.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOccCustomerGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetOccCustomerGroupsFilter> filters;
        private @Nullable String id;
        private List<GetOccCustomerGroupsOccCustomerGroupCollection> occCustomerGroupCollections;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetOccCustomerGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.occCustomerGroupCollections = defaults.occCustomerGroupCollections;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetOccCustomerGroupsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetOccCustomerGroupsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetOccCustomerGroupsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder occCustomerGroupCollections(List<GetOccCustomerGroupsOccCustomerGroupCollection> occCustomerGroupCollections) {
            if (occCustomerGroupCollections == null) {
              throw new MissingRequiredPropertyException("GetOccCustomerGroupsResult", "occCustomerGroupCollections");
            }
            this.occCustomerGroupCollections = occCustomerGroupCollections;
            return this;
        }
        public Builder occCustomerGroupCollections(GetOccCustomerGroupsOccCustomerGroupCollection... occCustomerGroupCollections) {
            return occCustomerGroupCollections(List.of(occCustomerGroupCollections));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetOccCustomerGroupsResult build() {
            final var _resultValue = new GetOccCustomerGroupsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.occCustomerGroupCollections = occCustomerGroupCollections;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
