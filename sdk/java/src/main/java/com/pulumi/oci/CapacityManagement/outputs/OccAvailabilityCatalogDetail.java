// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OccAvailabilityCatalogDetail {
    /**
     * @return The quantity of available resource that the customer can request.
     * 
     */
    private @Nullable String availableQuantity;
    /**
     * @return The OCID of the availability catalog.
     * 
     */
    private @Nullable String catalogId;
    /**
     * @return The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     * 
     */
    private @Nullable String dateExpectedCapacityHandover;
    /**
     * @return The date by which the customer must place the order to have their capacity requirements met by the customer handover date.
     * 
     */
    private @Nullable String dateFinalCustomerOrder;
    /**
     * @return The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The name of the resource that the customer can request.
     * 
     */
    private @Nullable String resourceName;
    /**
     * @return The different types of resources against which customers can place capacity requests.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The unit in which the resource available is measured.
     * 
     */
    private @Nullable String unit;
    /**
     * @return The type of workload (Generic/ROW).
     * 
     */
    private @Nullable String workloadType;

    private OccAvailabilityCatalogDetail() {}
    /**
     * @return The quantity of available resource that the customer can request.
     * 
     */
    public Optional<String> availableQuantity() {
        return Optional.ofNullable(this.availableQuantity);
    }
    /**
     * @return The OCID of the availability catalog.
     * 
     */
    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    /**
     * @return The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     * 
     */
    public Optional<String> dateExpectedCapacityHandover() {
        return Optional.ofNullable(this.dateExpectedCapacityHandover);
    }
    /**
     * @return The date by which the customer must place the order to have their capacity requirements met by the customer handover date.
     * 
     */
    public Optional<String> dateFinalCustomerOrder() {
        return Optional.ofNullable(this.dateFinalCustomerOrder);
    }
    /**
     * @return The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The name of the resource that the customer can request.
     * 
     */
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }
    /**
     * @return The different types of resources against which customers can place capacity requests.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The unit in which the resource available is measured.
     * 
     */
    public Optional<String> unit() {
        return Optional.ofNullable(this.unit);
    }
    /**
     * @return The type of workload (Generic/ROW).
     * 
     */
    public Optional<String> workloadType() {
        return Optional.ofNullable(this.workloadType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OccAvailabilityCatalogDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availableQuantity;
        private @Nullable String catalogId;
        private @Nullable String dateExpectedCapacityHandover;
        private @Nullable String dateFinalCustomerOrder;
        private @Nullable String namespace;
        private @Nullable String resourceName;
        private @Nullable String resourceType;
        private @Nullable String unit;
        private @Nullable String workloadType;
        public Builder() {}
        public Builder(OccAvailabilityCatalogDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableQuantity = defaults.availableQuantity;
    	      this.catalogId = defaults.catalogId;
    	      this.dateExpectedCapacityHandover = defaults.dateExpectedCapacityHandover;
    	      this.dateFinalCustomerOrder = defaults.dateFinalCustomerOrder;
    	      this.namespace = defaults.namespace;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.unit = defaults.unit;
    	      this.workloadType = defaults.workloadType;
        }

        @CustomType.Setter
        public Builder availableQuantity(@Nullable String availableQuantity) {

            this.availableQuantity = availableQuantity;
            return this;
        }
        @CustomType.Setter
        public Builder catalogId(@Nullable String catalogId) {

            this.catalogId = catalogId;
            return this;
        }
        @CustomType.Setter
        public Builder dateExpectedCapacityHandover(@Nullable String dateExpectedCapacityHandover) {

            this.dateExpectedCapacityHandover = dateExpectedCapacityHandover;
            return this;
        }
        @CustomType.Setter
        public Builder dateFinalCustomerOrder(@Nullable String dateFinalCustomerOrder) {

            this.dateFinalCustomerOrder = dateFinalCustomerOrder;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(@Nullable String resourceName) {

            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder unit(@Nullable String unit) {

            this.unit = unit;
            return this;
        }
        @CustomType.Setter
        public Builder workloadType(@Nullable String workloadType) {

            this.workloadType = workloadType;
            return this;
        }
        public OccAvailabilityCatalogDetail build() {
            final var _resultValue = new OccAvailabilityCatalogDetail();
            _resultValue.availableQuantity = availableQuantity;
            _resultValue.catalogId = catalogId;
            _resultValue.dateExpectedCapacityHandover = dateExpectedCapacityHandover;
            _resultValue.dateFinalCustomerOrder = dateFinalCustomerOrder;
            _resultValue.namespace = namespace;
            _resultValue.resourceName = resourceName;
            _resultValue.resourceType = resourceType;
            _resultValue.unit = unit;
            _resultValue.workloadType = workloadType;
            return _resultValue;
        }
    }
}
