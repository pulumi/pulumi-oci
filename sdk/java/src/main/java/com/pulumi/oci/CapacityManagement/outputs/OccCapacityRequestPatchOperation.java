// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CapacityManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OccCapacityRequestPatchOperation {
    /**
     * @return (Updatable)
     * 
     */
    private String from;
    /**
     * @return (Updatable) The operation can be one of these values: `INSERT`, `INSERT_MULTIPLE`, `MERGE`, `MOVE`, `PROHIBIT`, `REMOVE`, `REPLACE`, `REQUIRE`
     * 
     */
    private String operation;
    /**
     * @return (Updatable)
     * 
     */
    private @Nullable String position;
    /**
     * @return (Updatable)
     * 
     */
    private @Nullable String selectedItem;
    /**
     * @return (Updatable)
     * 
     */
    private String selection;
    /**
     * @return (Updatable)
     * 
     */
    private Map<String,Object> value;

    private OccCapacityRequestPatchOperation() {}
    /**
     * @return (Updatable)
     * 
     */
    public String from() {
        return this.from;
    }
    /**
     * @return (Updatable) The operation can be one of these values: `INSERT`, `INSERT_MULTIPLE`, `MERGE`, `MOVE`, `PROHIBIT`, `REMOVE`, `REPLACE`, `REQUIRE`
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return (Updatable)
     * 
     */
    public Optional<String> position() {
        return Optional.ofNullable(this.position);
    }
    /**
     * @return (Updatable)
     * 
     */
    public Optional<String> selectedItem() {
        return Optional.ofNullable(this.selectedItem);
    }
    /**
     * @return (Updatable)
     * 
     */
    public String selection() {
        return this.selection;
    }
    /**
     * @return (Updatable)
     * 
     */
    public Map<String,Object> value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OccCapacityRequestPatchOperation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String from;
        private String operation;
        private @Nullable String position;
        private @Nullable String selectedItem;
        private String selection;
        private Map<String,Object> value;
        public Builder() {}
        public Builder(OccCapacityRequestPatchOperation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.from = defaults.from;
    	      this.operation = defaults.operation;
    	      this.position = defaults.position;
    	      this.selectedItem = defaults.selectedItem;
    	      this.selection = defaults.selection;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder from(String from) {
            if (from == null) {
              throw new MissingRequiredPropertyException("OccCapacityRequestPatchOperation", "from");
            }
            this.from = from;
            return this;
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            if (operation == null) {
              throw new MissingRequiredPropertyException("OccCapacityRequestPatchOperation", "operation");
            }
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder position(@Nullable String position) {

            this.position = position;
            return this;
        }
        @CustomType.Setter
        public Builder selectedItem(@Nullable String selectedItem) {

            this.selectedItem = selectedItem;
            return this;
        }
        @CustomType.Setter
        public Builder selection(String selection) {
            if (selection == null) {
              throw new MissingRequiredPropertyException("OccCapacityRequestPatchOperation", "selection");
            }
            this.selection = selection;
            return this;
        }
        @CustomType.Setter
        public Builder value(Map<String,Object> value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("OccCapacityRequestPatchOperation", "value");
            }
            this.value = value;
            return this;
        }
        public OccCapacityRequestPatchOperation build() {
            final var _resultValue = new OccCapacityRequestPatchOperation();
            _resultValue.from = from;
            _resultValue.operation = operation;
            _resultValue.position = position;
            _resultValue.selectedItem = selectedItem;
            _resultValue.selection = selection;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
