// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.CertificatesManagement.CertificateArgs;
import com.pulumi.oci.CertificatesManagement.inputs.CertificateState;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCertificateConfig;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCertificateRevocationListDetail;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCertificateRule;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCurrentVersion;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateSubject;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Certificate resource in Oracle Cloud Infrastructure Certificates Management service.
 * 
 * Creates a new certificate according to the details of the request.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.CertificatesManagement.Certificate;
 * import com.pulumi.oci.CertificatesManagement.CertificateArgs;
 * import com.pulumi.oci.CertificatesManagement.inputs.CertificateCertificateConfigArgs;
 * import com.pulumi.oci.CertificatesManagement.inputs.CertificateCertificateConfigSubjectArgs;
 * import com.pulumi.oci.CertificatesManagement.inputs.CertificateCertificateConfigValidityArgs;
 * import com.pulumi.oci.CertificatesManagement.inputs.CertificateCertificateRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testCertificate = new Certificate("testCertificate", CertificateArgs.builder()
 *             .certificateConfig(CertificateCertificateConfigArgs.builder()
 *                 .configType(certificateCertificateConfigConfigType)
 *                 .certChainPem(certificateCertificateConfigCertChainPem)
 *                 .certificatePem(certificateCertificateConfigCertificatePem)
 *                 .certificateProfileType(certificateCertificateConfigCertificateProfileType)
 *                 .csrPem(certificateCertificateConfigCsrPem)
 *                 .issuerCertificateAuthorityId(testCertificateAuthority.id())
 *                 .keyAlgorithm(certificateCertificateConfigKeyAlgorithm)
 *                 .privateKeyPem(certificateCertificateConfigPrivateKeyPem)
 *                 .privateKeyPemPassphrase(certificateCertificateConfigPrivateKeyPemPassphrase)
 *                 .signatureAlgorithm(certificateCertificateConfigSignatureAlgorithm)
 *                 .subject(CertificateCertificateConfigSubjectArgs.builder()
 *                     .commonName(certificateCertificateConfigSubjectCommonName)
 *                     .country(certificateCertificateConfigSubjectCountry)
 *                     .distinguishedNameQualifier(certificateCertificateConfigSubjectDistinguishedNameQualifier)
 *                     .domainComponent(certificateCertificateConfigSubjectDomainComponent)
 *                     .generationQualifier(certificateCertificateConfigSubjectGenerationQualifier)
 *                     .givenName(certificateCertificateConfigSubjectGivenName)
 *                     .initials(certificateCertificateConfigSubjectInitials)
 *                     .localityName(certificateCertificateConfigSubjectLocalityName)
 *                     .organization(certificateCertificateConfigSubjectOrganization)
 *                     .organizationalUnit(certificateCertificateConfigSubjectOrganizationalUnit)
 *                     .pseudonym(certificateCertificateConfigSubjectPseudonym)
 *                     .serialNumber(certificateCertificateConfigSubjectSerialNumber)
 *                     .stateOrProvinceName(certificateCertificateConfigSubjectStateOrProvinceName)
 *                     .street(certificateCertificateConfigSubjectStreet)
 *                     .surname(certificateCertificateConfigSubjectSurname)
 *                     .title(certificateCertificateConfigSubjectTitle)
 *                     .userId(testUser.id())
 *                     .build())
 *                 .subjectAlternativeNames(CertificateCertificateConfigSubjectAlternativeNameArgs.builder()
 *                     .type(certificateCertificateConfigSubjectAlternativeNamesType)
 *                     .value(certificateCertificateConfigSubjectAlternativeNamesValue)
 *                     .build())
 *                 .validity(CertificateCertificateConfigValidityArgs.builder()
 *                     .timeOfValidityNotAfter(certificateCertificateConfigValidityTimeOfValidityNotAfter)
 *                     .timeOfValidityNotBefore(certificateCertificateConfigValidityTimeOfValidityNotBefore)
 *                     .build())
 *                 .versionName(certificateCertificateConfigVersionName)
 *                 .build())
 *             .compartmentId(compartmentId)
 *             .name(certificateName)
 *             .certificateRules(CertificateCertificateRuleArgs.builder()
 *                 .advanceRenewalPeriod(certificateCertificateRulesAdvanceRenewalPeriod)
 *                 .renewalInterval(certificateCertificateRulesRenewalInterval)
 *                 .ruleType(certificateCertificateRulesRuleType)
 *                 .build())
 *             .definedTags(Map.of("Operations.CostCenter", "42"))
 *             .description(certificateDescription)
 *             .freeformTags(Map.of("Department", "Finance"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Certificates can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:CertificatesManagement/certificate:Certificate test_certificate &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:CertificatesManagement/certificate:Certificate")
public class Certificate extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The details of the contents of the certificate and certificate metadata.
     * 
     */
    @Export(name="certificateConfig", refs={CertificateCertificateConfig.class}, tree="[0]")
    private Output<CertificateCertificateConfig> certificateConfig;

    /**
     * @return (Updatable) The details of the contents of the certificate and certificate metadata.
     * 
     */
    public Output<CertificateCertificateConfig> certificateConfig() {
        return this.certificateConfig;
    }
    /**
     * The name of the profile used to create the certificate, which depends on the type of certificate you need.
     * 
     */
    @Export(name="certificateProfileType", refs={String.class}, tree="[0]")
    private Output<String> certificateProfileType;

    /**
     * @return The name of the profile used to create the certificate, which depends on the type of certificate you need.
     * 
     */
    public Output<String> certificateProfileType() {
        return this.certificateProfileType;
    }
    /**
     * The details of the certificate revocation list (CRL).
     * 
     */
    @Export(name="certificateRevocationListDetails", refs={List.class,CertificateCertificateRevocationListDetail.class}, tree="[0,1]")
    private Output<List<CertificateCertificateRevocationListDetail>> certificateRevocationListDetails;

    /**
     * @return The details of the certificate revocation list (CRL).
     * 
     */
    public Output<List<CertificateCertificateRevocationListDetail>> certificateRevocationListDetails() {
        return this.certificateRevocationListDetails;
    }
    /**
     * (Updatable) An optional list of rules that control how the certificate is used and managed.
     * 
     */
    @Export(name="certificateRules", refs={List.class,CertificateCertificateRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CertificateCertificateRule>> certificateRules;

    /**
     * @return (Updatable) An optional list of rules that control how the certificate is used and managed.
     * 
     */
    public Output<Optional<List<CertificateCertificateRule>>> certificateRules() {
        return Codegen.optional(this.certificateRules);
    }
    /**
     * (Updatable) The OCID of the compartment where you want to create the certificate.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment where you want to create the certificate.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The origin of the certificate.
     * 
     */
    @Export(name="configType", refs={String.class}, tree="[0]")
    private Output<String> configType;

    /**
     * @return The origin of the certificate.
     * 
     */
    public Output<String> configType() {
        return this.configType;
    }
    /**
     * The details of the certificate version. This object does not contain the certificate contents.
     * 
     */
    @Export(name="currentVersions", refs={List.class,CertificateCurrentVersion.class}, tree="[0,1]")
    private Output<List<CertificateCurrentVersion>> currentVersions;

    /**
     * @return The details of the certificate version. This object does not contain the certificate contents.
     * 
     */
    public Output<List<CertificateCurrentVersion>> currentVersions() {
        return this.currentVersions;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A brief description of the certificate. Avoid entering confidential information.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return (Updatable) A brief description of the certificate. Avoid entering confidential information.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * The OCID of the certificate authority (CA) that issued the certificate.
     * 
     */
    @Export(name="issuerCertificateAuthorityId", refs={String.class}, tree="[0]")
    private Output<String> issuerCertificateAuthorityId;

    /**
     * @return The OCID of the certificate authority (CA) that issued the certificate.
     * 
     */
    public Output<String> issuerCertificateAuthorityId() {
        return this.issuerCertificateAuthorityId;
    }
    /**
     * The algorithm used to create key pairs.
     * 
     */
    @Export(name="keyAlgorithm", refs={String.class}, tree="[0]")
    private Output<String> keyAlgorithm;

    /**
     * @return The algorithm used to create key pairs.
     * 
     */
    public Output<String> keyAlgorithm() {
        return this.keyAlgorithm;
    }
    /**
     * Additional information about the current lifecycle state of the certificate.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state of the certificate.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The algorithm used to sign the public key certificate.
     * 
     */
    @Export(name="signatureAlgorithm", refs={String.class}, tree="[0]")
    private Output<String> signatureAlgorithm;

    /**
     * @return The algorithm used to sign the public key certificate.
     * 
     */
    public Output<String> signatureAlgorithm() {
        return this.signatureAlgorithm;
    }
    /**
     * The current lifecycle state of the certificate.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current lifecycle state of the certificate.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    @Export(name="subjects", refs={List.class,CertificateSubject.class}, tree="[0,1]")
    private Output<List<CertificateSubject>> subjects;

    /**
     * @return The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    public Output<List<CertificateSubject>> subjects() {
        return this.subjects;
    }
    /**
     * A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    @Export(name="timeOfDeletion", refs={String.class}, tree="[0]")
    private Output<String> timeOfDeletion;

    /**
     * @return An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Output<String> timeOfDeletion() {
        return this.timeOfDeletion;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Certificate(String name) {
        this(name, CertificateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Certificate(String name, CertificateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Certificate(String name, CertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:CertificatesManagement/certificate:Certificate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private Certificate(String name, Output<String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:CertificatesManagement/certificate:Certificate", name, state, makeResourceOptions(options, id));
    }

    private static CertificateArgs makeArgs(CertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CertificateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Certificate get(String name, Output<String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Certificate(name, id, state, options);
    }
}
