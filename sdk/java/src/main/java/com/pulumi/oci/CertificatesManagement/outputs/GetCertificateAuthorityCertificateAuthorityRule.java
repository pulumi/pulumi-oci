// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCertificateAuthorityCertificateAuthorityRule {
    /**
     * @return A property indicating the maximum validity duration, in days, of subordinate CA&#39;s issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    private String certificateAuthorityMaxValidityDuration;
    /**
     * @return A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    private String leafCertificateMaxValidityDuration;
    /**
     * @return The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
     * 
     */
    private String ruleType;

    private GetCertificateAuthorityCertificateAuthorityRule() {}
    /**
     * @return A property indicating the maximum validity duration, in days, of subordinate CA&#39;s issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public String certificateAuthorityMaxValidityDuration() {
        return this.certificateAuthorityMaxValidityDuration;
    }
    /**
     * @return A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public String leafCertificateMaxValidityDuration() {
        return this.leafCertificateMaxValidityDuration;
    }
    /**
     * @return The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
     * 
     */
    public String ruleType() {
        return this.ruleType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateAuthorityCertificateAuthorityRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateAuthorityMaxValidityDuration;
        private String leafCertificateMaxValidityDuration;
        private String ruleType;
        public Builder() {}
        public Builder(GetCertificateAuthorityCertificateAuthorityRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthorityMaxValidityDuration = defaults.certificateAuthorityMaxValidityDuration;
    	      this.leafCertificateMaxValidityDuration = defaults.leafCertificateMaxValidityDuration;
    	      this.ruleType = defaults.ruleType;
        }

        @CustomType.Setter
        public Builder certificateAuthorityMaxValidityDuration(String certificateAuthorityMaxValidityDuration) {
            if (certificateAuthorityMaxValidityDuration == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityCertificateAuthorityRule", "certificateAuthorityMaxValidityDuration");
            }
            this.certificateAuthorityMaxValidityDuration = certificateAuthorityMaxValidityDuration;
            return this;
        }
        @CustomType.Setter
        public Builder leafCertificateMaxValidityDuration(String leafCertificateMaxValidityDuration) {
            if (leafCertificateMaxValidityDuration == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityCertificateAuthorityRule", "leafCertificateMaxValidityDuration");
            }
            this.leafCertificateMaxValidityDuration = leafCertificateMaxValidityDuration;
            return this;
        }
        @CustomType.Setter
        public Builder ruleType(String ruleType) {
            if (ruleType == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityCertificateAuthorityRule", "ruleType");
            }
            this.ruleType = ruleType;
            return this;
        }
        public GetCertificateAuthorityCertificateAuthorityRule build() {
            final var _resultValue = new GetCertificateAuthorityCertificateAuthorityRule();
            _resultValue.certificateAuthorityMaxValidityDuration = certificateAuthorityMaxValidityDuration;
            _resultValue.leafCertificateMaxValidityDuration = leafCertificateMaxValidityDuration;
            _resultValue.ruleType = ruleType;
            return _resultValue;
        }
    }
}
