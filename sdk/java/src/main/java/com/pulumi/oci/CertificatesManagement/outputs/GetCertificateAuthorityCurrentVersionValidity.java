// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCertificateAuthorityCurrentVersionValidity {
    /**
     * @return The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private String timeOfValidityNotAfter;
    /**
     * @return The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private String timeOfValidityNotBefore;

    private GetCertificateAuthorityCurrentVersionValidity() {}
    /**
     * @return The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public String timeOfValidityNotAfter() {
        return this.timeOfValidityNotAfter;
    }
    /**
     * @return The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public String timeOfValidityNotBefore() {
        return this.timeOfValidityNotBefore;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateAuthorityCurrentVersionValidity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String timeOfValidityNotAfter;
        private String timeOfValidityNotBefore;
        public Builder() {}
        public Builder(GetCertificateAuthorityCurrentVersionValidity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.timeOfValidityNotAfter = defaults.timeOfValidityNotAfter;
    	      this.timeOfValidityNotBefore = defaults.timeOfValidityNotBefore;
        }

        @CustomType.Setter
        public Builder timeOfValidityNotAfter(String timeOfValidityNotAfter) {
            if (timeOfValidityNotAfter == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityCurrentVersionValidity", "timeOfValidityNotAfter");
            }
            this.timeOfValidityNotAfter = timeOfValidityNotAfter;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfValidityNotBefore(String timeOfValidityNotBefore) {
            if (timeOfValidityNotBefore == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityCurrentVersionValidity", "timeOfValidityNotBefore");
            }
            this.timeOfValidityNotBefore = timeOfValidityNotBefore;
            return this;
        }
        public GetCertificateAuthorityCurrentVersionValidity build() {
            final var _resultValue = new GetCertificateAuthorityCurrentVersionValidity();
            _resultValue.timeOfValidityNotAfter = timeOfValidityNotAfter;
            _resultValue.timeOfValidityNotBefore = timeOfValidityNotBefore;
            return _resultValue;
        }
    }
}
