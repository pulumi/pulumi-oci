// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityCertificateAuthorityConfig;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityCertificateAuthorityRule;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityCertificateRevocationListDetail;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityCurrentVersion;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthoritySubject;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCertificateAuthorityResult {
    private @Nullable List<GetCertificateAuthorityCertificateAuthorityConfig> certificateAuthorityConfigs;
    /**
     * @return The OCID of the CA.
     * 
     */
    private String certificateAuthorityId;
    /**
     * @return An optional list of rules that control how the CA is used and managed.
     * 
     */
    private @Nullable List<GetCertificateAuthorityCertificateAuthorityRule> certificateAuthorityRules;
    /**
     * @return The details of the certificate revocation list (CRL).
     * 
     */
    private @Nullable List<GetCertificateAuthorityCertificateRevocationListDetail> certificateRevocationListDetails;
    /**
     * @return The OCID of the compartment under which the CA is created.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The origin of the CA.
     * 
     */
    private @Nullable String configType;
    /**
     * @return The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
     * 
     */
    private @Nullable List<GetCertificateAuthorityCurrentVersion> currentVersions;
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A brief description of the CA.
     * 
     */
    private @Nullable String description;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the CA.
     * 
     */
    private @Nullable String id;
    /**
     * @return The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
     * 
     */
    private @Nullable String issuerCertificateAuthorityId;
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return Additional information about the current CA lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     */
    private @Nullable String name;
    /**
     * @return The algorithm used to sign public key certificates that the CA issues.
     * 
     */
    private @Nullable String signingAlgorithm;
    /**
     * @return The current lifecycle state of the certificate authority.
     * 
     */
    private @Nullable String state;
    /**
     * @return The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    private @Nullable List<GetCertificateAuthoritySubject> subjects;
    /**
     * @return A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeOfDeletion;

    private GetCertificateAuthorityResult() {}
    public List<GetCertificateAuthorityCertificateAuthorityConfig> certificateAuthorityConfigs() {
        return this.certificateAuthorityConfigs == null ? List.of() : this.certificateAuthorityConfigs;
    }
    /**
     * @return The OCID of the CA.
     * 
     */
    public String certificateAuthorityId() {
        return this.certificateAuthorityId;
    }
    /**
     * @return An optional list of rules that control how the CA is used and managed.
     * 
     */
    public List<GetCertificateAuthorityCertificateAuthorityRule> certificateAuthorityRules() {
        return this.certificateAuthorityRules == null ? List.of() : this.certificateAuthorityRules;
    }
    /**
     * @return The details of the certificate revocation list (CRL).
     * 
     */
    public List<GetCertificateAuthorityCertificateRevocationListDetail> certificateRevocationListDetails() {
        return this.certificateRevocationListDetails == null ? List.of() : this.certificateRevocationListDetails;
    }
    /**
     * @return The OCID of the compartment under which the CA is created.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The origin of the CA.
     * 
     */
    public Optional<String> configType() {
        return Optional.ofNullable(this.configType);
    }
    /**
     * @return The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
     * 
     */
    public List<GetCertificateAuthorityCurrentVersion> currentVersions() {
        return this.currentVersions == null ? List.of() : this.currentVersions;
    }
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A brief description of the CA.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the CA.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
     * 
     */
    public Optional<String> issuerCertificateAuthorityId() {
        return Optional.ofNullable(this.issuerCertificateAuthorityId);
    }
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return Additional information about the current CA lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The algorithm used to sign public key certificates that the CA issues.
     * 
     */
    public Optional<String> signingAlgorithm() {
        return Optional.ofNullable(this.signingAlgorithm);
    }
    /**
     * @return The current lifecycle state of the certificate authority.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    public List<GetCertificateAuthoritySubject> subjects() {
        return this.subjects == null ? List.of() : this.subjects;
    }
    /**
     * @return A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeOfDeletion() {
        return Optional.ofNullable(this.timeOfDeletion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateAuthorityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetCertificateAuthorityCertificateAuthorityConfig> certificateAuthorityConfigs;
        private String certificateAuthorityId;
        private @Nullable List<GetCertificateAuthorityCertificateAuthorityRule> certificateAuthorityRules;
        private @Nullable List<GetCertificateAuthorityCertificateRevocationListDetail> certificateRevocationListDetails;
        private @Nullable String compartmentId;
        private @Nullable String configType;
        private @Nullable List<GetCertificateAuthorityCurrentVersion> currentVersions;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String issuerCertificateAuthorityId;
        private @Nullable String kmsKeyId;
        private @Nullable String lifecycleDetails;
        private @Nullable String name;
        private @Nullable String signingAlgorithm;
        private @Nullable String state;
        private @Nullable List<GetCertificateAuthoritySubject> subjects;
        private @Nullable String timeCreated;
        private @Nullable String timeOfDeletion;
        public Builder() {}
        public Builder(GetCertificateAuthorityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthorityConfigs = defaults.certificateAuthorityConfigs;
    	      this.certificateAuthorityId = defaults.certificateAuthorityId;
    	      this.certificateAuthorityRules = defaults.certificateAuthorityRules;
    	      this.certificateRevocationListDetails = defaults.certificateRevocationListDetails;
    	      this.compartmentId = defaults.compartmentId;
    	      this.configType = defaults.configType;
    	      this.currentVersions = defaults.currentVersions;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.issuerCertificateAuthorityId = defaults.issuerCertificateAuthorityId;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.name = defaults.name;
    	      this.signingAlgorithm = defaults.signingAlgorithm;
    	      this.state = defaults.state;
    	      this.subjects = defaults.subjects;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfDeletion = defaults.timeOfDeletion;
        }

        @CustomType.Setter
        public Builder certificateAuthorityConfigs(@Nullable List<GetCertificateAuthorityCertificateAuthorityConfig> certificateAuthorityConfigs) {
            this.certificateAuthorityConfigs = certificateAuthorityConfigs;
            return this;
        }
        public Builder certificateAuthorityConfigs(GetCertificateAuthorityCertificateAuthorityConfig... certificateAuthorityConfigs) {
            return certificateAuthorityConfigs(List.of(certificateAuthorityConfigs));
        }
        @CustomType.Setter
        public Builder certificateAuthorityId(String certificateAuthorityId) {
            this.certificateAuthorityId = Objects.requireNonNull(certificateAuthorityId);
            return this;
        }
        @CustomType.Setter
        public Builder certificateAuthorityRules(@Nullable List<GetCertificateAuthorityCertificateAuthorityRule> certificateAuthorityRules) {
            this.certificateAuthorityRules = certificateAuthorityRules;
            return this;
        }
        public Builder certificateAuthorityRules(GetCertificateAuthorityCertificateAuthorityRule... certificateAuthorityRules) {
            return certificateAuthorityRules(List.of(certificateAuthorityRules));
        }
        @CustomType.Setter
        public Builder certificateRevocationListDetails(@Nullable List<GetCertificateAuthorityCertificateRevocationListDetail> certificateRevocationListDetails) {
            this.certificateRevocationListDetails = certificateRevocationListDetails;
            return this;
        }
        public Builder certificateRevocationListDetails(GetCertificateAuthorityCertificateRevocationListDetail... certificateRevocationListDetails) {
            return certificateRevocationListDetails(List.of(certificateRevocationListDetails));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder configType(@Nullable String configType) {
            this.configType = configType;
            return this;
        }
        @CustomType.Setter
        public Builder currentVersions(@Nullable List<GetCertificateAuthorityCurrentVersion> currentVersions) {
            this.currentVersions = currentVersions;
            return this;
        }
        public Builder currentVersions(GetCertificateAuthorityCurrentVersion... currentVersions) {
            return currentVersions(List.of(currentVersions));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuerCertificateAuthorityId(@Nullable String issuerCertificateAuthorityId) {
            this.issuerCertificateAuthorityId = issuerCertificateAuthorityId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder signingAlgorithm(@Nullable String signingAlgorithm) {
            this.signingAlgorithm = signingAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subjects(@Nullable List<GetCertificateAuthoritySubject> subjects) {
            this.subjects = subjects;
            return this;
        }
        public Builder subjects(GetCertificateAuthoritySubject... subjects) {
            return subjects(List.of(subjects));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfDeletion(@Nullable String timeOfDeletion) {
            this.timeOfDeletion = timeOfDeletion;
            return this;
        }
        public GetCertificateAuthorityResult build() {
            final var o = new GetCertificateAuthorityResult();
            o.certificateAuthorityConfigs = certificateAuthorityConfigs;
            o.certificateAuthorityId = certificateAuthorityId;
            o.certificateAuthorityRules = certificateAuthorityRules;
            o.certificateRevocationListDetails = certificateRevocationListDetails;
            o.compartmentId = compartmentId;
            o.configType = configType;
            o.currentVersions = currentVersions;
            o.definedTags = definedTags;
            o.description = description;
            o.freeformTags = freeformTags;
            o.id = id;
            o.issuerCertificateAuthorityId = issuerCertificateAuthorityId;
            o.kmsKeyId = kmsKeyId;
            o.lifecycleDetails = lifecycleDetails;
            o.name = name;
            o.signingAlgorithm = signingAlgorithm;
            o.state = state;
            o.subjects = subjects;
            o.timeCreated = timeCreated;
            o.timeOfDeletion = timeOfDeletion;
            return o;
        }
    }
}
