// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityVersionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCertificateAuthorityVersionsResult {
    /**
     * @return The OCID of the CA.
     * 
     */
    private String certificateAuthorityId;
    /**
     * @return The list of certificate_authority_version_collection.
     * 
     */
    private List<GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection> certificateAuthorityVersionCollections;
    private @Nullable List<GetCertificateAuthorityVersionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The version number of the CA.
     * 
     */
    private @Nullable String versionNumber;

    private GetCertificateAuthorityVersionsResult() {}
    /**
     * @return The OCID of the CA.
     * 
     */
    public String certificateAuthorityId() {
        return this.certificateAuthorityId;
    }
    /**
     * @return The list of certificate_authority_version_collection.
     * 
     */
    public List<GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection> certificateAuthorityVersionCollections() {
        return this.certificateAuthorityVersionCollections;
    }
    public List<GetCertificateAuthorityVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The version number of the CA.
     * 
     */
    public Optional<String> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateAuthorityVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateAuthorityId;
        private List<GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection> certificateAuthorityVersionCollections;
        private @Nullable List<GetCertificateAuthorityVersionsFilter> filters;
        private String id;
        private @Nullable String versionNumber;
        public Builder() {}
        public Builder(GetCertificateAuthorityVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthorityId = defaults.certificateAuthorityId;
    	      this.certificateAuthorityVersionCollections = defaults.certificateAuthorityVersionCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.versionNumber = defaults.versionNumber;
        }

        @CustomType.Setter
        public Builder certificateAuthorityId(String certificateAuthorityId) {
            if (certificateAuthorityId == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityVersionsResult", "certificateAuthorityId");
            }
            this.certificateAuthorityId = certificateAuthorityId;
            return this;
        }
        @CustomType.Setter
        public Builder certificateAuthorityVersionCollections(List<GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection> certificateAuthorityVersionCollections) {
            if (certificateAuthorityVersionCollections == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityVersionsResult", "certificateAuthorityVersionCollections");
            }
            this.certificateAuthorityVersionCollections = certificateAuthorityVersionCollections;
            return this;
        }
        public Builder certificateAuthorityVersionCollections(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection... certificateAuthorityVersionCollections) {
            return certificateAuthorityVersionCollections(List.of(certificateAuthorityVersionCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetCertificateAuthorityVersionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetCertificateAuthorityVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCertificateAuthorityVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder versionNumber(@Nullable String versionNumber) {

            this.versionNumber = versionNumber;
            return this;
        }
        public GetCertificateAuthorityVersionsResult build() {
            final var _resultValue = new GetCertificateAuthorityVersionsResult();
            _resultValue.certificateAuthorityId = certificateAuthorityId;
            _resultValue.certificateAuthorityVersionCollections = certificateAuthorityVersionCollections;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.versionNumber = versionNumber;
            return _resultValue;
        }
    }
}
