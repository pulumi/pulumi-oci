// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateCertificateConfig;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateCertificateRevocationListDetail;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateCertificateRule;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateCurrentVersion;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateSubject;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCertificateResult {
    private @Nullable List<GetCertificateCertificateConfig> certificateConfigs;
    /**
     * @return The OCID of the certificate.
     * 
     */
    private String certificateId;
    /**
     * @return The name of the profile used to create the certificate, which depends on the type of certificate you need.
     * 
     */
    private @Nullable String certificateProfileType;
    /**
     * @return The details of the certificate revocation list (CRL).
     * 
     */
    private @Nullable List<GetCertificateCertificateRevocationListDetail> certificateRevocationListDetails;
    /**
     * @return A list of rules that control how the certificate is used and managed.
     * 
     */
    private @Nullable List<GetCertificateCertificateRule> certificateRules;
    /**
     * @return The OCID of the compartment where you want to create the certificate.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The origin of the certificate.
     * 
     */
    private @Nullable String configType;
    /**
     * @return The details of the certificate version. This object does not contain the certificate contents.
     * 
     */
    private @Nullable List<GetCertificateCurrentVersion> currentVersions;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A brief description of the certificate. Avoid entering confidential information.
     * 
     */
    private @Nullable String description;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the certificate.
     * 
     */
    private @Nullable String id;
    /**
     * @return The OCID of the certificate authority (CA) that issued the certificate.
     * 
     */
    private @Nullable String issuerCertificateAuthorityId;
    /**
     * @return The algorithm used to create key pairs.
     * 
     */
    private @Nullable String keyAlgorithm;
    /**
     * @return Additional information about the current lifecycle state of the certificate.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     */
    private @Nullable String name;
    /**
     * @return The algorithm used to sign the public key certificate.
     * 
     */
    private @Nullable String signatureAlgorithm;
    /**
     * @return The current lifecycle state of the certificate.
     * 
     */
    private @Nullable String state;
    /**
     * @return The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    private @Nullable List<GetCertificateSubject> subjects;
    /**
     * @return A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeOfDeletion;

    private GetCertificateResult() {}
    public List<GetCertificateCertificateConfig> certificateConfigs() {
        return this.certificateConfigs == null ? List.of() : this.certificateConfigs;
    }
    /**
     * @return The OCID of the certificate.
     * 
     */
    public String certificateId() {
        return this.certificateId;
    }
    /**
     * @return The name of the profile used to create the certificate, which depends on the type of certificate you need.
     * 
     */
    public Optional<String> certificateProfileType() {
        return Optional.ofNullable(this.certificateProfileType);
    }
    /**
     * @return The details of the certificate revocation list (CRL).
     * 
     */
    public List<GetCertificateCertificateRevocationListDetail> certificateRevocationListDetails() {
        return this.certificateRevocationListDetails == null ? List.of() : this.certificateRevocationListDetails;
    }
    /**
     * @return A list of rules that control how the certificate is used and managed.
     * 
     */
    public List<GetCertificateCertificateRule> certificateRules() {
        return this.certificateRules == null ? List.of() : this.certificateRules;
    }
    /**
     * @return The OCID of the compartment where you want to create the certificate.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The origin of the certificate.
     * 
     */
    public Optional<String> configType() {
        return Optional.ofNullable(this.configType);
    }
    /**
     * @return The details of the certificate version. This object does not contain the certificate contents.
     * 
     */
    public List<GetCertificateCurrentVersion> currentVersions() {
        return this.currentVersions == null ? List.of() : this.currentVersions;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A brief description of the certificate. Avoid entering confidential information.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the certificate.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The OCID of the certificate authority (CA) that issued the certificate.
     * 
     */
    public Optional<String> issuerCertificateAuthorityId() {
        return Optional.ofNullable(this.issuerCertificateAuthorityId);
    }
    /**
     * @return The algorithm used to create key pairs.
     * 
     */
    public Optional<String> keyAlgorithm() {
        return Optional.ofNullable(this.keyAlgorithm);
    }
    /**
     * @return Additional information about the current lifecycle state of the certificate.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The algorithm used to sign the public key certificate.
     * 
     */
    public Optional<String> signatureAlgorithm() {
        return Optional.ofNullable(this.signatureAlgorithm);
    }
    /**
     * @return The current lifecycle state of the certificate.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    public List<GetCertificateSubject> subjects() {
        return this.subjects == null ? List.of() : this.subjects;
    }
    /**
     * @return A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeOfDeletion() {
        return Optional.ofNullable(this.timeOfDeletion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetCertificateCertificateConfig> certificateConfigs;
        private String certificateId;
        private @Nullable String certificateProfileType;
        private @Nullable List<GetCertificateCertificateRevocationListDetail> certificateRevocationListDetails;
        private @Nullable List<GetCertificateCertificateRule> certificateRules;
        private @Nullable String compartmentId;
        private @Nullable String configType;
        private @Nullable List<GetCertificateCurrentVersion> currentVersions;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String issuerCertificateAuthorityId;
        private @Nullable String keyAlgorithm;
        private @Nullable String lifecycleDetails;
        private @Nullable String name;
        private @Nullable String signatureAlgorithm;
        private @Nullable String state;
        private @Nullable List<GetCertificateSubject> subjects;
        private @Nullable String timeCreated;
        private @Nullable String timeOfDeletion;
        public Builder() {}
        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateConfigs = defaults.certificateConfigs;
    	      this.certificateId = defaults.certificateId;
    	      this.certificateProfileType = defaults.certificateProfileType;
    	      this.certificateRevocationListDetails = defaults.certificateRevocationListDetails;
    	      this.certificateRules = defaults.certificateRules;
    	      this.compartmentId = defaults.compartmentId;
    	      this.configType = defaults.configType;
    	      this.currentVersions = defaults.currentVersions;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.issuerCertificateAuthorityId = defaults.issuerCertificateAuthorityId;
    	      this.keyAlgorithm = defaults.keyAlgorithm;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.name = defaults.name;
    	      this.signatureAlgorithm = defaults.signatureAlgorithm;
    	      this.state = defaults.state;
    	      this.subjects = defaults.subjects;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfDeletion = defaults.timeOfDeletion;
        }

        @CustomType.Setter
        public Builder certificateConfigs(@Nullable List<GetCertificateCertificateConfig> certificateConfigs) {
            this.certificateConfigs = certificateConfigs;
            return this;
        }
        public Builder certificateConfigs(GetCertificateCertificateConfig... certificateConfigs) {
            return certificateConfigs(List.of(certificateConfigs));
        }
        @CustomType.Setter
        public Builder certificateId(String certificateId) {
            this.certificateId = Objects.requireNonNull(certificateId);
            return this;
        }
        @CustomType.Setter
        public Builder certificateProfileType(@Nullable String certificateProfileType) {
            this.certificateProfileType = certificateProfileType;
            return this;
        }
        @CustomType.Setter
        public Builder certificateRevocationListDetails(@Nullable List<GetCertificateCertificateRevocationListDetail> certificateRevocationListDetails) {
            this.certificateRevocationListDetails = certificateRevocationListDetails;
            return this;
        }
        public Builder certificateRevocationListDetails(GetCertificateCertificateRevocationListDetail... certificateRevocationListDetails) {
            return certificateRevocationListDetails(List.of(certificateRevocationListDetails));
        }
        @CustomType.Setter
        public Builder certificateRules(@Nullable List<GetCertificateCertificateRule> certificateRules) {
            this.certificateRules = certificateRules;
            return this;
        }
        public Builder certificateRules(GetCertificateCertificateRule... certificateRules) {
            return certificateRules(List.of(certificateRules));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder configType(@Nullable String configType) {
            this.configType = configType;
            return this;
        }
        @CustomType.Setter
        public Builder currentVersions(@Nullable List<GetCertificateCurrentVersion> currentVersions) {
            this.currentVersions = currentVersions;
            return this;
        }
        public Builder currentVersions(GetCertificateCurrentVersion... currentVersions) {
            return currentVersions(List.of(currentVersions));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuerCertificateAuthorityId(@Nullable String issuerCertificateAuthorityId) {
            this.issuerCertificateAuthorityId = issuerCertificateAuthorityId;
            return this;
        }
        @CustomType.Setter
        public Builder keyAlgorithm(@Nullable String keyAlgorithm) {
            this.keyAlgorithm = keyAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder signatureAlgorithm(@Nullable String signatureAlgorithm) {
            this.signatureAlgorithm = signatureAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subjects(@Nullable List<GetCertificateSubject> subjects) {
            this.subjects = subjects;
            return this;
        }
        public Builder subjects(GetCertificateSubject... subjects) {
            return subjects(List.of(subjects));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfDeletion(@Nullable String timeOfDeletion) {
            this.timeOfDeletion = timeOfDeletion;
            return this;
        }
        public GetCertificateResult build() {
            final var o = new GetCertificateResult();
            o.certificateConfigs = certificateConfigs;
            o.certificateId = certificateId;
            o.certificateProfileType = certificateProfileType;
            o.certificateRevocationListDetails = certificateRevocationListDetails;
            o.certificateRules = certificateRules;
            o.compartmentId = compartmentId;
            o.configType = configType;
            o.currentVersions = currentVersions;
            o.definedTags = definedTags;
            o.description = description;
            o.freeformTags = freeformTags;
            o.id = id;
            o.issuerCertificateAuthorityId = issuerCertificateAuthorityId;
            o.keyAlgorithm = keyAlgorithm;
            o.lifecycleDetails = lifecycleDetails;
            o.name = name;
            o.signatureAlgorithm = signatureAlgorithm;
            o.state = state;
            o.subjects = subjects;
            o.timeCreated = timeCreated;
            o.timeOfDeletion = timeOfDeletion;
            return o;
        }
    }
}
