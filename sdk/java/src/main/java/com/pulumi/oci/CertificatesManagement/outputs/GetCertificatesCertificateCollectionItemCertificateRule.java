// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCertificatesCertificateCollectionItemCertificateRule {
    /**
     * @return A property specifying the period of time, in days, before the certificate&#39;s targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    private @Nullable String advanceRenewalPeriod;
    /**
     * @return A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    private @Nullable String renewalInterval;
    /**
     * @return The type of rule.
     * 
     */
    private @Nullable String ruleType;

    private GetCertificatesCertificateCollectionItemCertificateRule() {}
    /**
     * @return A property specifying the period of time, in days, before the certificate&#39;s targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public Optional<String> advanceRenewalPeriod() {
        return Optional.ofNullable(this.advanceRenewalPeriod);
    }
    /**
     * @return A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public Optional<String> renewalInterval() {
        return Optional.ofNullable(this.renewalInterval);
    }
    /**
     * @return The type of rule.
     * 
     */
    public Optional<String> ruleType() {
        return Optional.ofNullable(this.ruleType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificatesCertificateCollectionItemCertificateRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String advanceRenewalPeriod;
        private @Nullable String renewalInterval;
        private @Nullable String ruleType;
        public Builder() {}
        public Builder(GetCertificatesCertificateCollectionItemCertificateRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advanceRenewalPeriod = defaults.advanceRenewalPeriod;
    	      this.renewalInterval = defaults.renewalInterval;
    	      this.ruleType = defaults.ruleType;
        }

        @CustomType.Setter
        public Builder advanceRenewalPeriod(@Nullable String advanceRenewalPeriod) {
            this.advanceRenewalPeriod = advanceRenewalPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder renewalInterval(@Nullable String renewalInterval) {
            this.renewalInterval = renewalInterval;
            return this;
        }
        @CustomType.Setter
        public Builder ruleType(@Nullable String ruleType) {
            this.ruleType = ruleType;
            return this;
        }
        public GetCertificatesCertificateCollectionItemCertificateRule build() {
            final var o = new GetCertificatesCertificateCollectionItemCertificateRule();
            o.advanceRenewalPeriod = advanceRenewalPeriod;
            o.renewalInterval = renewalInterval;
            o.ruleType = ruleType;
            return o;
        }
    }
}
