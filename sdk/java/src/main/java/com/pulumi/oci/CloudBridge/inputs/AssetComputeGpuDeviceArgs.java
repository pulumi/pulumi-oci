// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetComputeGpuDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetComputeGpuDeviceArgs Empty = new AssetComputeGpuDeviceArgs();

    /**
     * (Updatable) Number of GPU cores.
     * 
     */
    @Import(name="coresCount")
    private @Nullable Output<Integer> coresCount;

    /**
     * @return (Updatable) Number of GPU cores.
     * 
     */
    public Optional<Output<Integer>> coresCount() {
        return Optional.ofNullable(this.coresCount);
    }

    /**
     * (Updatable) GPU device description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) GPU device description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The manufacturer of GPU.
     * 
     */
    @Import(name="manufacturer")
    private @Nullable Output<String> manufacturer;

    /**
     * @return (Updatable) The manufacturer of GPU.
     * 
     */
    public Optional<Output<String>> manufacturer() {
        return Optional.ofNullable(this.manufacturer);
    }

    /**
     * (Updatable) GPU memory size in MBs.
     * 
     */
    @Import(name="memoryInMbs")
    private @Nullable Output<String> memoryInMbs;

    /**
     * @return (Updatable) GPU memory size in MBs.
     * 
     */
    public Optional<Output<String>> memoryInMbs() {
        return Optional.ofNullable(this.memoryInMbs);
    }

    /**
     * (Updatable) GPU device name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) GPU device name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AssetComputeGpuDeviceArgs() {}

    private AssetComputeGpuDeviceArgs(AssetComputeGpuDeviceArgs $) {
        this.coresCount = $.coresCount;
        this.description = $.description;
        this.manufacturer = $.manufacturer;
        this.memoryInMbs = $.memoryInMbs;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetComputeGpuDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetComputeGpuDeviceArgs $;

        public Builder() {
            $ = new AssetComputeGpuDeviceArgs();
        }

        public Builder(AssetComputeGpuDeviceArgs defaults) {
            $ = new AssetComputeGpuDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param coresCount (Updatable) Number of GPU cores.
         * 
         * @return builder
         * 
         */
        public Builder coresCount(@Nullable Output<Integer> coresCount) {
            $.coresCount = coresCount;
            return this;
        }

        /**
         * @param coresCount (Updatable) Number of GPU cores.
         * 
         * @return builder
         * 
         */
        public Builder coresCount(Integer coresCount) {
            return coresCount(Output.of(coresCount));
        }

        /**
         * @param description (Updatable) GPU device description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) GPU device description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param manufacturer (Updatable) The manufacturer of GPU.
         * 
         * @return builder
         * 
         */
        public Builder manufacturer(@Nullable Output<String> manufacturer) {
            $.manufacturer = manufacturer;
            return this;
        }

        /**
         * @param manufacturer (Updatable) The manufacturer of GPU.
         * 
         * @return builder
         * 
         */
        public Builder manufacturer(String manufacturer) {
            return manufacturer(Output.of(manufacturer));
        }

        /**
         * @param memoryInMbs (Updatable) GPU memory size in MBs.
         * 
         * @return builder
         * 
         */
        public Builder memoryInMbs(@Nullable Output<String> memoryInMbs) {
            $.memoryInMbs = memoryInMbs;
            return this;
        }

        /**
         * @param memoryInMbs (Updatable) GPU memory size in MBs.
         * 
         * @return builder
         * 
         */
        public Builder memoryInMbs(String memoryInMbs) {
            return memoryInMbs(Output.of(memoryInMbs));
        }

        /**
         * @param name (Updatable) GPU device name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) GPU device name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AssetComputeGpuDeviceArgs build() {
            return $;
        }
    }

}
