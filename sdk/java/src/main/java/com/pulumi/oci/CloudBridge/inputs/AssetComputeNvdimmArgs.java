// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetComputeNvdimmArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetComputeNvdimmArgs Empty = new AssetComputeNvdimmArgs();

    /**
     * (Updatable) Controller key.
     * 
     */
    @Import(name="controllerKey")
    private @Nullable Output<Integer> controllerKey;

    /**
     * @return (Updatable) Controller key.
     * 
     */
    public Optional<Output<Integer>> controllerKey() {
        return Optional.ofNullable(this.controllerKey);
    }

    /**
     * (Updatable) Provides a label and summary information for the device.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return (Updatable) Provides a label and summary information for the device.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * (Updatable) The unit number of NVDIMM.
     * 
     */
    @Import(name="unitNumber")
    private @Nullable Output<Integer> unitNumber;

    /**
     * @return (Updatable) The unit number of NVDIMM.
     * 
     */
    public Optional<Output<Integer>> unitNumber() {
        return Optional.ofNullable(this.unitNumber);
    }

    private AssetComputeNvdimmArgs() {}

    private AssetComputeNvdimmArgs(AssetComputeNvdimmArgs $) {
        this.controllerKey = $.controllerKey;
        this.label = $.label;
        this.unitNumber = $.unitNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetComputeNvdimmArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetComputeNvdimmArgs $;

        public Builder() {
            $ = new AssetComputeNvdimmArgs();
        }

        public Builder(AssetComputeNvdimmArgs defaults) {
            $ = new AssetComputeNvdimmArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controllerKey (Updatable) Controller key.
         * 
         * @return builder
         * 
         */
        public Builder controllerKey(@Nullable Output<Integer> controllerKey) {
            $.controllerKey = controllerKey;
            return this;
        }

        /**
         * @param controllerKey (Updatable) Controller key.
         * 
         * @return builder
         * 
         */
        public Builder controllerKey(Integer controllerKey) {
            return controllerKey(Output.of(controllerKey));
        }

        /**
         * @param label (Updatable) Provides a label and summary information for the device.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label (Updatable) Provides a label and summary information for the device.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param unitNumber (Updatable) The unit number of NVDIMM.
         * 
         * @return builder
         * 
         */
        public Builder unitNumber(@Nullable Output<Integer> unitNumber) {
            $.unitNumber = unitNumber;
            return this;
        }

        /**
         * @param unitNumber (Updatable) The unit number of NVDIMM.
         * 
         * @return builder
         * 
         */
        public Builder unitNumber(Integer unitNumber) {
            return unitNumber(Output.of(unitNumber));
        }

        public AssetComputeNvdimmArgs build() {
            return $;
        }
    }

}
