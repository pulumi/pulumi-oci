// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AssetSourceDiscoveryCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetSourceDiscoveryCredentialsArgs Empty = new AssetSourceDiscoveryCredentialsArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret in a vault. If the the type of the credentials is BASIC` , the secret must contain the username and password in JSON format, which is in the form of  `{ &#34;username&#34;: &#34;&lt;VMwareUser&gt;&#34;, &#34;password&#34;: &#34;&lt;VMwarePassword&gt;&#34; }`.
     * 
     */
    @Import(name="secretId", required=true)
    private Output<String> secretId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret in a vault. If the the type of the credentials is BASIC` , the secret must contain the username and password in JSON format, which is in the form of  `{ &#34;username&#34;: &#34;&lt;VMwareUser&gt;&#34;, &#34;password&#34;: &#34;&lt;VMwarePassword&gt;&#34; }`.
     * 
     */
    public Output<String> secretId() {
        return this.secretId;
    }

    /**
     * (Updatable) Authentication type
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Authentication type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AssetSourceDiscoveryCredentialsArgs() {}

    private AssetSourceDiscoveryCredentialsArgs(AssetSourceDiscoveryCredentialsArgs $) {
        this.secretId = $.secretId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetSourceDiscoveryCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetSourceDiscoveryCredentialsArgs $;

        public Builder() {
            $ = new AssetSourceDiscoveryCredentialsArgs();
        }

        public Builder(AssetSourceDiscoveryCredentialsArgs defaults) {
            $ = new AssetSourceDiscoveryCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param secretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret in a vault. If the the type of the credentials is BASIC` , the secret must contain the username and password in JSON format, which is in the form of  `{ &#34;username&#34;: &#34;&lt;VMwareUser&gt;&#34;, &#34;password&#34;: &#34;&lt;VMwarePassword&gt;&#34; }`.
         * 
         * @return builder
         * 
         */
        public Builder secretId(Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        /**
         * @param secretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret in a vault. If the the type of the credentials is BASIC` , the secret must contain the username and password in JSON format, which is in the form of  `{ &#34;username&#34;: &#34;&lt;VMwareUser&gt;&#34;, &#34;password&#34;: &#34;&lt;VMwarePassword&gt;&#34; }`.
         * 
         * @return builder
         * 
         */
        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        /**
         * @param type (Updatable) Authentication type
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Authentication type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AssetSourceDiscoveryCredentialsArgs build() {
            if ($.secretId == null) {
                throw new MissingRequiredPropertyException("AssetSourceDiscoveryCredentialsArgs", "secretId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AssetSourceDiscoveryCredentialsArgs", "type");
            }
            return $;
        }
    }

}
