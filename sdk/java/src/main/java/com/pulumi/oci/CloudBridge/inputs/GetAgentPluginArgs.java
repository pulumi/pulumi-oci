// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAgentPluginArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAgentPluginArgs Empty = new GetAgentPluginArgs();

    /**
     * Unique Agent identifier path parameter.
     * 
     */
    @Import(name="agentId", required=true)
    private Output<String> agentId;

    /**
     * @return Unique Agent identifier path parameter.
     * 
     */
    public Output<String> agentId() {
        return this.agentId;
    }

    /**
     * Unique plugin identifier path parameter.
     * 
     */
    @Import(name="pluginName", required=true)
    private Output<String> pluginName;

    /**
     * @return Unique plugin identifier path parameter.
     * 
     */
    public Output<String> pluginName() {
        return this.pluginName;
    }

    private GetAgentPluginArgs() {}

    private GetAgentPluginArgs(GetAgentPluginArgs $) {
        this.agentId = $.agentId;
        this.pluginName = $.pluginName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAgentPluginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAgentPluginArgs $;

        public Builder() {
            $ = new GetAgentPluginArgs();
        }

        public Builder(GetAgentPluginArgs defaults) {
            $ = new GetAgentPluginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId Unique Agent identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder agentId(Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId Unique Agent identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param pluginName Unique plugin identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder pluginName(Output<String> pluginName) {
            $.pluginName = pluginName;
            return this;
        }

        /**
         * @param pluginName Unique plugin identifier path parameter.
         * 
         * @return builder
         * 
         */
        public Builder pluginName(String pluginName) {
            return pluginName(Output.of(pluginName));
        }

        public GetAgentPluginArgs build() {
            if ($.agentId == null) {
                throw new MissingRequiredPropertyException("GetAgentPluginArgs", "agentId");
            }
            if ($.pluginName == null) {
                throw new MissingRequiredPropertyException("GetAgentPluginArgs", "pluginName");
            }
            return $;
        }
    }

}
