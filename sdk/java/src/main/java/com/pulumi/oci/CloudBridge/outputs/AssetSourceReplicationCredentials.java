// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AssetSourceReplicationCredentials {
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret in a vault. If the the type of the credentials is BASIC` , the secret must contain the username and password in JSON format, which is in the form of  `{ &#34;username&#34;: &#34;&lt;VMwareUser&gt;&#34;, &#34;password&#34;: &#34;&lt;VMwarePassword&gt;&#34; }`.
     * 
     */
    private String secretId;
    /**
     * @return (Updatable) Authentication type
     * 
     */
    private String type;

    private AssetSourceReplicationCredentials() {}
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret in a vault. If the the type of the credentials is BASIC` , the secret must contain the username and password in JSON format, which is in the form of  `{ &#34;username&#34;: &#34;&lt;VMwareUser&gt;&#34;, &#34;password&#34;: &#34;&lt;VMwarePassword&gt;&#34; }`.
     * 
     */
    public String secretId() {
        return this.secretId;
    }
    /**
     * @return (Updatable) Authentication type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetSourceReplicationCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String secretId;
        private String type;
        public Builder() {}
        public Builder(AssetSourceReplicationCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretId = defaults.secretId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder secretId(String secretId) {
            if (secretId == null) {
              throw new MissingRequiredPropertyException("AssetSourceReplicationCredentials", "secretId");
            }
            this.secretId = secretId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("AssetSourceReplicationCredentials", "type");
            }
            this.type = type;
            return this;
        }
        public AssetSourceReplicationCredentials build() {
            final var _resultValue = new AssetSourceReplicationCredentials();
            _resultValue.secretId = secretId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
