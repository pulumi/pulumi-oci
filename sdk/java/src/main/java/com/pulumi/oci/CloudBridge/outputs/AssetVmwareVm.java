// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudBridge.outputs.AssetVmwareVmCustomerTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssetVmwareVm {
    /**
     * @return (Updatable) Cluster name.
     * 
     */
    private @Nullable String cluster;
    /**
     * @return (Updatable) Customer fields.
     * 
     */
    private @Nullable List<String> customerFields;
    /**
     * @return (Updatable) Customer defined tags.
     * 
     */
    private @Nullable List<AssetVmwareVmCustomerTag> customerTags;
    /**
     * @return (Updatable) Fault tolerance bandwidth.
     * 
     */
    private @Nullable Integer faultToleranceBandwidth;
    /**
     * @return (Updatable) Fault tolerance to secondary latency.
     * 
     */
    private @Nullable Integer faultToleranceSecondaryLatency;
    /**
     * @return (Updatable) Fault tolerance state.
     * 
     */
    private @Nullable String faultToleranceState;
    /**
     * @return (Updatable) vCenter-specific identifier of the virtual machine.
     * 
     */
    private @Nullable String instanceUuid;
    /**
     * @return (Updatable) Indicates that change tracking is supported for virtual disks of this virtual machine. However, even if change tracking is supported, it might not be available for all disks of the virtual machine.
     * 
     */
    private @Nullable Boolean isDisksCbtEnabled;
    /**
     * @return (Updatable) Whether changed block tracking for this VM&#39;s disk is active.
     * 
     */
    private @Nullable Boolean isDisksUuidEnabled;
    /**
     * @return (Updatable) Path directory of the asset.
     * 
     */
    private @Nullable String path;
    /**
     * @return (Updatable) VMware tools status.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable String vmwareToolsStatus;

    private AssetVmwareVm() {}
    /**
     * @return (Updatable) Cluster name.
     * 
     */
    public Optional<String> cluster() {
        return Optional.ofNullable(this.cluster);
    }
    /**
     * @return (Updatable) Customer fields.
     * 
     */
    public List<String> customerFields() {
        return this.customerFields == null ? List.of() : this.customerFields;
    }
    /**
     * @return (Updatable) Customer defined tags.
     * 
     */
    public List<AssetVmwareVmCustomerTag> customerTags() {
        return this.customerTags == null ? List.of() : this.customerTags;
    }
    /**
     * @return (Updatable) Fault tolerance bandwidth.
     * 
     */
    public Optional<Integer> faultToleranceBandwidth() {
        return Optional.ofNullable(this.faultToleranceBandwidth);
    }
    /**
     * @return (Updatable) Fault tolerance to secondary latency.
     * 
     */
    public Optional<Integer> faultToleranceSecondaryLatency() {
        return Optional.ofNullable(this.faultToleranceSecondaryLatency);
    }
    /**
     * @return (Updatable) Fault tolerance state.
     * 
     */
    public Optional<String> faultToleranceState() {
        return Optional.ofNullable(this.faultToleranceState);
    }
    /**
     * @return (Updatable) vCenter-specific identifier of the virtual machine.
     * 
     */
    public Optional<String> instanceUuid() {
        return Optional.ofNullable(this.instanceUuid);
    }
    /**
     * @return (Updatable) Indicates that change tracking is supported for virtual disks of this virtual machine. However, even if change tracking is supported, it might not be available for all disks of the virtual machine.
     * 
     */
    public Optional<Boolean> isDisksCbtEnabled() {
        return Optional.ofNullable(this.isDisksCbtEnabled);
    }
    /**
     * @return (Updatable) Whether changed block tracking for this VM&#39;s disk is active.
     * 
     */
    public Optional<Boolean> isDisksUuidEnabled() {
        return Optional.ofNullable(this.isDisksUuidEnabled);
    }
    /**
     * @return (Updatable) Path directory of the asset.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return (Updatable) VMware tools status.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<String> vmwareToolsStatus() {
        return Optional.ofNullable(this.vmwareToolsStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetVmwareVm defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cluster;
        private @Nullable List<String> customerFields;
        private @Nullable List<AssetVmwareVmCustomerTag> customerTags;
        private @Nullable Integer faultToleranceBandwidth;
        private @Nullable Integer faultToleranceSecondaryLatency;
        private @Nullable String faultToleranceState;
        private @Nullable String instanceUuid;
        private @Nullable Boolean isDisksCbtEnabled;
        private @Nullable Boolean isDisksUuidEnabled;
        private @Nullable String path;
        private @Nullable String vmwareToolsStatus;
        public Builder() {}
        public Builder(AssetVmwareVm defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cluster = defaults.cluster;
    	      this.customerFields = defaults.customerFields;
    	      this.customerTags = defaults.customerTags;
    	      this.faultToleranceBandwidth = defaults.faultToleranceBandwidth;
    	      this.faultToleranceSecondaryLatency = defaults.faultToleranceSecondaryLatency;
    	      this.faultToleranceState = defaults.faultToleranceState;
    	      this.instanceUuid = defaults.instanceUuid;
    	      this.isDisksCbtEnabled = defaults.isDisksCbtEnabled;
    	      this.isDisksUuidEnabled = defaults.isDisksUuidEnabled;
    	      this.path = defaults.path;
    	      this.vmwareToolsStatus = defaults.vmwareToolsStatus;
        }

        @CustomType.Setter
        public Builder cluster(@Nullable String cluster) {

            this.cluster = cluster;
            return this;
        }
        @CustomType.Setter
        public Builder customerFields(@Nullable List<String> customerFields) {

            this.customerFields = customerFields;
            return this;
        }
        public Builder customerFields(String... customerFields) {
            return customerFields(List.of(customerFields));
        }
        @CustomType.Setter
        public Builder customerTags(@Nullable List<AssetVmwareVmCustomerTag> customerTags) {

            this.customerTags = customerTags;
            return this;
        }
        public Builder customerTags(AssetVmwareVmCustomerTag... customerTags) {
            return customerTags(List.of(customerTags));
        }
        @CustomType.Setter
        public Builder faultToleranceBandwidth(@Nullable Integer faultToleranceBandwidth) {

            this.faultToleranceBandwidth = faultToleranceBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder faultToleranceSecondaryLatency(@Nullable Integer faultToleranceSecondaryLatency) {

            this.faultToleranceSecondaryLatency = faultToleranceSecondaryLatency;
            return this;
        }
        @CustomType.Setter
        public Builder faultToleranceState(@Nullable String faultToleranceState) {

            this.faultToleranceState = faultToleranceState;
            return this;
        }
        @CustomType.Setter
        public Builder instanceUuid(@Nullable String instanceUuid) {

            this.instanceUuid = instanceUuid;
            return this;
        }
        @CustomType.Setter
        public Builder isDisksCbtEnabled(@Nullable Boolean isDisksCbtEnabled) {

            this.isDisksCbtEnabled = isDisksCbtEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isDisksUuidEnabled(@Nullable Boolean isDisksUuidEnabled) {

            this.isDisksUuidEnabled = isDisksUuidEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder vmwareToolsStatus(@Nullable String vmwareToolsStatus) {

            this.vmwareToolsStatus = vmwareToolsStatus;
            return this;
        }
        public AssetVmwareVm build() {
            final var _resultValue = new AssetVmwareVm();
            _resultValue.cluster = cluster;
            _resultValue.customerFields = customerFields;
            _resultValue.customerTags = customerTags;
            _resultValue.faultToleranceBandwidth = faultToleranceBandwidth;
            _resultValue.faultToleranceSecondaryLatency = faultToleranceSecondaryLatency;
            _resultValue.faultToleranceState = faultToleranceState;
            _resultValue.instanceUuid = instanceUuid;
            _resultValue.isDisksCbtEnabled = isDisksCbtEnabled;
            _resultValue.isDisksUuidEnabled = isDisksUuidEnabled;
            _resultValue.path = path;
            _resultValue.vmwareToolsStatus = vmwareToolsStatus;
            return _resultValue;
        }
    }
}
