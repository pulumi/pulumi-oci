// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAssetComputeDisk {
    /**
     * @return Order of boot volumes.
     * 
     */
    private Integer bootOrder;
    /**
     * @return Location of the boot/data volume.
     * 
     */
    private String location;
    /**
     * @return The tag name.
     * 
     */
    private String name;
    /**
     * @return The disk persistent mode.
     * 
     */
    private String persistentMode;
    /**
     * @return The size of the volume in MBs.
     * 
     */
    private String sizeInMbs;
    /**
     * @return Disk UUID for the virtual disk, if available.
     * 
     */
    private String uuid;
    /**
     * @return Disk UUID LUN for the virtual disk, if available.
     * 
     */
    private String uuidLun;

    private GetAssetComputeDisk() {}
    /**
     * @return Order of boot volumes.
     * 
     */
    public Integer bootOrder() {
        return this.bootOrder;
    }
    /**
     * @return Location of the boot/data volume.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The tag name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The disk persistent mode.
     * 
     */
    public String persistentMode() {
        return this.persistentMode;
    }
    /**
     * @return The size of the volume in MBs.
     * 
     */
    public String sizeInMbs() {
        return this.sizeInMbs;
    }
    /**
     * @return Disk UUID for the virtual disk, if available.
     * 
     */
    public String uuid() {
        return this.uuid;
    }
    /**
     * @return Disk UUID LUN for the virtual disk, if available.
     * 
     */
    public String uuidLun() {
        return this.uuidLun;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssetComputeDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bootOrder;
        private String location;
        private String name;
        private String persistentMode;
        private String sizeInMbs;
        private String uuid;
        private String uuidLun;
        public Builder() {}
        public Builder(GetAssetComputeDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootOrder = defaults.bootOrder;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.persistentMode = defaults.persistentMode;
    	      this.sizeInMbs = defaults.sizeInMbs;
    	      this.uuid = defaults.uuid;
    	      this.uuidLun = defaults.uuidLun;
        }

        @CustomType.Setter
        public Builder bootOrder(Integer bootOrder) {
            if (bootOrder == null) {
              throw new MissingRequiredPropertyException("GetAssetComputeDisk", "bootOrder");
            }
            this.bootOrder = bootOrder;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetAssetComputeDisk", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAssetComputeDisk", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder persistentMode(String persistentMode) {
            if (persistentMode == null) {
              throw new MissingRequiredPropertyException("GetAssetComputeDisk", "persistentMode");
            }
            this.persistentMode = persistentMode;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInMbs(String sizeInMbs) {
            if (sizeInMbs == null) {
              throw new MissingRequiredPropertyException("GetAssetComputeDisk", "sizeInMbs");
            }
            this.sizeInMbs = sizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetAssetComputeDisk", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuidLun(String uuidLun) {
            if (uuidLun == null) {
              throw new MissingRequiredPropertyException("GetAssetComputeDisk", "uuidLun");
            }
            this.uuidLun = uuidLun;
            return this;
        }
        public GetAssetComputeDisk build() {
            final var _resultValue = new GetAssetComputeDisk();
            _resultValue.bootOrder = bootOrder;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.persistentMode = persistentMode;
            _resultValue.sizeInMbs = sizeInMbs;
            _resultValue.uuid = uuid;
            _resultValue.uuidLun = uuidLun;
            return _resultValue;
        }
    }
}
