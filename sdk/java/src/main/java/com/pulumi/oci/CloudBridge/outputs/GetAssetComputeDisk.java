// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAssetComputeDisk {
    /**
     * @return Order of boot volumes.
     * 
     */
    private @Nullable Integer bootOrder;
    /**
     * @return Location of the boot/data volume.
     * 
     */
    private @Nullable String location;
    /**
     * @return The tag name.
     * 
     */
    private @Nullable String name;
    /**
     * @return The disk persistent mode.
     * 
     */
    private @Nullable String persistentMode;
    /**
     * @return The size of the volume in MBs.
     * 
     */
    private @Nullable String sizeInMbs;
    /**
     * @return Disk UUID for the virtual disk, if available.
     * 
     */
    private @Nullable String uuid;
    /**
     * @return Disk UUID LUN for the virtual disk, if available.
     * 
     */
    private @Nullable String uuidLun;

    private GetAssetComputeDisk() {}
    /**
     * @return Order of boot volumes.
     * 
     */
    public Optional<Integer> bootOrder() {
        return Optional.ofNullable(this.bootOrder);
    }
    /**
     * @return Location of the boot/data volume.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The tag name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The disk persistent mode.
     * 
     */
    public Optional<String> persistentMode() {
        return Optional.ofNullable(this.persistentMode);
    }
    /**
     * @return The size of the volume in MBs.
     * 
     */
    public Optional<String> sizeInMbs() {
        return Optional.ofNullable(this.sizeInMbs);
    }
    /**
     * @return Disk UUID for the virtual disk, if available.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }
    /**
     * @return Disk UUID LUN for the virtual disk, if available.
     * 
     */
    public Optional<String> uuidLun() {
        return Optional.ofNullable(this.uuidLun);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssetComputeDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer bootOrder;
        private @Nullable String location;
        private @Nullable String name;
        private @Nullable String persistentMode;
        private @Nullable String sizeInMbs;
        private @Nullable String uuid;
        private @Nullable String uuidLun;
        public Builder() {}
        public Builder(GetAssetComputeDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootOrder = defaults.bootOrder;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.persistentMode = defaults.persistentMode;
    	      this.sizeInMbs = defaults.sizeInMbs;
    	      this.uuid = defaults.uuid;
    	      this.uuidLun = defaults.uuidLun;
        }

        @CustomType.Setter
        public Builder bootOrder(@Nullable Integer bootOrder) {
            this.bootOrder = bootOrder;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder persistentMode(@Nullable String persistentMode) {
            this.persistentMode = persistentMode;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInMbs(@Nullable String sizeInMbs) {
            this.sizeInMbs = sizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuidLun(@Nullable String uuidLun) {
            this.uuidLun = uuidLun;
            return this;
        }
        public GetAssetComputeDisk build() {
            final var o = new GetAssetComputeDisk();
            o.bootOrder = bootOrder;
            o.location = location;
            o.name = name;
            o.persistentMode = persistentMode;
            o.sizeInMbs = sizeInMbs;
            o.uuid = uuid;
            o.uuidLun = uuidLun;
            return o;
        }
    }
}
