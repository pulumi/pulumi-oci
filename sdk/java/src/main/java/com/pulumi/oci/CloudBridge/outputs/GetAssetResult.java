// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudBridge.outputs.GetAssetCompute;
import com.pulumi.oci.CloudBridge.outputs.GetAssetVm;
import com.pulumi.oci.CloudBridge.outputs.GetAssetVmwareVcenter;
import com.pulumi.oci.CloudBridge.outputs.GetAssetVmwareVm;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAssetResult {
    private String assetId;
    /**
     * @return List of asset source OCID.
     * 
     */
    private List<String> assetSourceIds;
    /**
     * @return The type of asset.
     * 
     */
    private String assetType;
    /**
     * @return The OCID of the compartment to which an asset belongs to.
     * 
     */
    private String compartmentId;
    /**
     * @return Compute related properties.
     * 
     */
    private List<GetAssetCompute> computes;
    /**
     * @return The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Asset display name.
     * 
     */
    private String displayName;
    /**
     * @return The key of the asset from the external environment.
     * 
     */
    private String externalAssetKey;
    /**
     * @return The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace/scope. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Asset OCID that is immutable on creation.
     * 
     */
    private String id;
    /**
     * @return Inventory ID to which an asset belongs to.
     * 
     */
    private String inventoryId;
    /**
     * @return The source key that the asset belongs to.
     * 
     */
    private String sourceKey;
    /**
     * @return The current state of the asset.
     * 
     */
    private String state;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time when the asset was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time when the asset was updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    /**
     * @return Virtual machine related properties.
     * 
     */
    private List<GetAssetVm> vms;
    /**
     * @return VMware vCenter related properties.
     * 
     */
    private List<GetAssetVmwareVcenter> vmwareVcenters;
    /**
     * @return VMware virtual machine related properties.
     * 
     */
    private List<GetAssetVmwareVm> vmwareVms;

    private GetAssetResult() {}
    public String assetId() {
        return this.assetId;
    }
    /**
     * @return List of asset source OCID.
     * 
     */
    public List<String> assetSourceIds() {
        return this.assetSourceIds;
    }
    /**
     * @return The type of asset.
     * 
     */
    public String assetType() {
        return this.assetType;
    }
    /**
     * @return The OCID of the compartment to which an asset belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Compute related properties.
     * 
     */
    public List<GetAssetCompute> computes() {
        return this.computes;
    }
    /**
     * @return The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Asset display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The key of the asset from the external environment.
     * 
     */
    public String externalAssetKey() {
        return this.externalAssetKey;
    }
    /**
     * @return The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace/scope. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Asset OCID that is immutable on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Inventory ID to which an asset belongs to.
     * 
     */
    public String inventoryId() {
        return this.inventoryId;
    }
    /**
     * @return The source key that the asset belongs to.
     * 
     */
    public String sourceKey() {
        return this.sourceKey;
    }
    /**
     * @return The current state of the asset.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time when the asset was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time when the asset was updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Virtual machine related properties.
     * 
     */
    public List<GetAssetVm> vms() {
        return this.vms;
    }
    /**
     * @return VMware vCenter related properties.
     * 
     */
    public List<GetAssetVmwareVcenter> vmwareVcenters() {
        return this.vmwareVcenters;
    }
    /**
     * @return VMware virtual machine related properties.
     * 
     */
    public List<GetAssetVmwareVm> vmwareVms() {
        return this.vmwareVms;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String assetId;
        private List<String> assetSourceIds;
        private String assetType;
        private String compartmentId;
        private List<GetAssetCompute> computes;
        private Map<String,String> definedTags;
        private String displayName;
        private String externalAssetKey;
        private Map<String,String> freeformTags;
        private String id;
        private String inventoryId;
        private String sourceKey;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private List<GetAssetVm> vms;
        private List<GetAssetVmwareVcenter> vmwareVcenters;
        private List<GetAssetVmwareVm> vmwareVms;
        public Builder() {}
        public Builder(GetAssetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetId = defaults.assetId;
    	      this.assetSourceIds = defaults.assetSourceIds;
    	      this.assetType = defaults.assetType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computes = defaults.computes;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.externalAssetKey = defaults.externalAssetKey;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.inventoryId = defaults.inventoryId;
    	      this.sourceKey = defaults.sourceKey;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vms = defaults.vms;
    	      this.vmwareVcenters = defaults.vmwareVcenters;
    	      this.vmwareVms = defaults.vmwareVms;
        }

        @CustomType.Setter
        public Builder assetId(String assetId) {
            if (assetId == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "assetId");
            }
            this.assetId = assetId;
            return this;
        }
        @CustomType.Setter
        public Builder assetSourceIds(List<String> assetSourceIds) {
            if (assetSourceIds == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "assetSourceIds");
            }
            this.assetSourceIds = assetSourceIds;
            return this;
        }
        public Builder assetSourceIds(String... assetSourceIds) {
            return assetSourceIds(List.of(assetSourceIds));
        }
        @CustomType.Setter
        public Builder assetType(String assetType) {
            if (assetType == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "assetType");
            }
            this.assetType = assetType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computes(List<GetAssetCompute> computes) {
            if (computes == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "computes");
            }
            this.computes = computes;
            return this;
        }
        public Builder computes(GetAssetCompute... computes) {
            return computes(List.of(computes));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalAssetKey(String externalAssetKey) {
            if (externalAssetKey == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "externalAssetKey");
            }
            this.externalAssetKey = externalAssetKey;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inventoryId(String inventoryId) {
            if (inventoryId == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "inventoryId");
            }
            this.inventoryId = inventoryId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceKey(String sourceKey) {
            if (sourceKey == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "sourceKey");
            }
            this.sourceKey = sourceKey;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vms(List<GetAssetVm> vms) {
            if (vms == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "vms");
            }
            this.vms = vms;
            return this;
        }
        public Builder vms(GetAssetVm... vms) {
            return vms(List.of(vms));
        }
        @CustomType.Setter
        public Builder vmwareVcenters(List<GetAssetVmwareVcenter> vmwareVcenters) {
            if (vmwareVcenters == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "vmwareVcenters");
            }
            this.vmwareVcenters = vmwareVcenters;
            return this;
        }
        public Builder vmwareVcenters(GetAssetVmwareVcenter... vmwareVcenters) {
            return vmwareVcenters(List.of(vmwareVcenters));
        }
        @CustomType.Setter
        public Builder vmwareVms(List<GetAssetVmwareVm> vmwareVms) {
            if (vmwareVms == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "vmwareVms");
            }
            this.vmwareVms = vmwareVms;
            return this;
        }
        public Builder vmwareVms(GetAssetVmwareVm... vmwareVms) {
            return vmwareVms(List.of(vmwareVms));
        }
        public GetAssetResult build() {
            final var _resultValue = new GetAssetResult();
            _resultValue.assetId = assetId;
            _resultValue.assetSourceIds = assetSourceIds;
            _resultValue.assetType = assetType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computes = computes;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.externalAssetKey = externalAssetKey;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.inventoryId = inventoryId;
            _resultValue.sourceKey = sourceKey;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.vms = vms;
            _resultValue.vmwareVcenters = vmwareVcenters;
            _resultValue.vmwareVms = vmwareVms;
            return _resultValue;
        }
    }
}
