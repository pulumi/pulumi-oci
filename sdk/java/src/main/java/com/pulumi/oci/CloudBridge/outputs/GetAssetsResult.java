// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudBridge.outputs.GetAssetsAssetCollection;
import com.pulumi.oci.CloudBridge.outputs.GetAssetsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAssetsResult {
    /**
     * @return The list of asset_collection.
     * 
     */
    private List<GetAssetsAssetCollection> assetCollections;
    private @Nullable String assetId;
    /**
     * @return The type of asset.
     * 
     */
    private @Nullable String assetType;
    /**
     * @return The OCID of the compartment to which an asset belongs to.
     * 
     */
    private String compartmentId;
    /**
     * @return Asset display name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The key of the asset from the external environment.
     * 
     */
    private @Nullable String externalAssetKey;
    private @Nullable List<GetAssetsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Inventory ID to which an asset belongs to.
     * 
     */
    private @Nullable String inventoryId;
    /**
     * @return The source key that the asset belongs to.
     * 
     */
    private @Nullable String sourceKey;
    /**
     * @return The current state of the asset.
     * 
     */
    private @Nullable String state;

    private GetAssetsResult() {}
    /**
     * @return The list of asset_collection.
     * 
     */
    public List<GetAssetsAssetCollection> assetCollections() {
        return this.assetCollections;
    }
    public Optional<String> assetId() {
        return Optional.ofNullable(this.assetId);
    }
    /**
     * @return The type of asset.
     * 
     */
    public Optional<String> assetType() {
        return Optional.ofNullable(this.assetType);
    }
    /**
     * @return The OCID of the compartment to which an asset belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Asset display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The key of the asset from the external environment.
     * 
     */
    public Optional<String> externalAssetKey() {
        return Optional.ofNullable(this.externalAssetKey);
    }
    public List<GetAssetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Inventory ID to which an asset belongs to.
     * 
     */
    public Optional<String> inventoryId() {
        return Optional.ofNullable(this.inventoryId);
    }
    /**
     * @return The source key that the asset belongs to.
     * 
     */
    public Optional<String> sourceKey() {
        return Optional.ofNullable(this.sourceKey);
    }
    /**
     * @return The current state of the asset.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAssetsAssetCollection> assetCollections;
        private @Nullable String assetId;
        private @Nullable String assetType;
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable String externalAssetKey;
        private @Nullable List<GetAssetsFilter> filters;
        private String id;
        private @Nullable String inventoryId;
        private @Nullable String sourceKey;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetAssetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetCollections = defaults.assetCollections;
    	      this.assetId = defaults.assetId;
    	      this.assetType = defaults.assetType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.externalAssetKey = defaults.externalAssetKey;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.inventoryId = defaults.inventoryId;
    	      this.sourceKey = defaults.sourceKey;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder assetCollections(List<GetAssetsAssetCollection> assetCollections) {
            this.assetCollections = Objects.requireNonNull(assetCollections);
            return this;
        }
        public Builder assetCollections(GetAssetsAssetCollection... assetCollections) {
            return assetCollections(List.of(assetCollections));
        }
        @CustomType.Setter
        public Builder assetId(@Nullable String assetId) {
            this.assetId = assetId;
            return this;
        }
        @CustomType.Setter
        public Builder assetType(@Nullable String assetType) {
            this.assetType = assetType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalAssetKey(@Nullable String externalAssetKey) {
            this.externalAssetKey = externalAssetKey;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAssetsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAssetsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inventoryId(@Nullable String inventoryId) {
            this.inventoryId = inventoryId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceKey(@Nullable String sourceKey) {
            this.sourceKey = sourceKey;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetAssetsResult build() {
            final var _resultValue = new GetAssetsResult();
            _resultValue.assetCollections = assetCollections;
            _resultValue.assetId = assetId;
            _resultValue.assetType = assetType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.externalAssetKey = externalAssetKey;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.inventoryId = inventoryId;
            _resultValue.sourceKey = sourceKey;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
