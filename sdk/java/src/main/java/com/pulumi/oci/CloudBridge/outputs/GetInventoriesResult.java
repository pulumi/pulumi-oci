// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudBridge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudBridge.outputs.GetInventoriesFilter;
import com.pulumi.oci.CloudBridge.outputs.GetInventoriesInventoryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInventoriesResult {
    /**
     * @return The OCID of the tenantId.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetInventoriesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of inventory_collection.
     * 
     */
    private List<GetInventoriesInventoryCollection> inventoryCollections;
    /**
     * @return The current state of the inventory.
     * 
     */
    private @Nullable String state;

    private GetInventoriesResult() {}
    /**
     * @return The OCID of the tenantId.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetInventoriesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of inventory_collection.
     * 
     */
    public List<GetInventoriesInventoryCollection> inventoryCollections() {
        return this.inventoryCollections;
    }
    /**
     * @return The current state of the inventory.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInventoriesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetInventoriesFilter> filters;
        private String id;
        private List<GetInventoriesInventoryCollection> inventoryCollections;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetInventoriesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.inventoryCollections = defaults.inventoryCollections;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetInventoriesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetInventoriesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inventoryCollections(List<GetInventoriesInventoryCollection> inventoryCollections) {
            this.inventoryCollections = Objects.requireNonNull(inventoryCollections);
            return this;
        }
        public Builder inventoryCollections(GetInventoriesInventoryCollection... inventoryCollections) {
            return inventoryCollections(List.of(inventoryCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetInventoriesResult build() {
            final var o = new GetInventoriesResult();
            o.compartmentId = compartmentId;
            o.filters = filters;
            o.id = id;
            o.inventoryCollections = inventoryCollections;
            o.state = state;
            return o;
        }
    }
}
