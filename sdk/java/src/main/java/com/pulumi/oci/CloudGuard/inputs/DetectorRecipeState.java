// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CloudGuard.inputs.DetectorRecipeDetectorRuleArgs;
import com.pulumi.oci.CloudGuard.inputs.DetectorRecipeEffectiveDetectorRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DetectorRecipeState extends com.pulumi.resources.ResourceArgs {

    public static final DetectorRecipeState Empty = new DetectorRecipeState();

    /**
     * (Updatable) Compartment OCID
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment OCID
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Detector recipe description.
     * 
     * Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Detector recipe description.
     * 
     * Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Detector for the rule
     * 
     */
    @Import(name="detector")
    private @Nullable Output<String> detector;

    /**
     * @return Detector for the rule
     * 
     */
    public Optional<Output<String>> detector() {
        return Optional.ofNullable(this.detector);
    }

    /**
     * Recipe type ( STANDARD, ENTERPRISE )
     * 
     */
    @Import(name="detectorRecipeType")
    private @Nullable Output<String> detectorRecipeType;

    /**
     * @return Recipe type ( STANDARD, ENTERPRISE )
     * 
     */
    public Optional<Output<String>> detectorRecipeType() {
        return Optional.ofNullable(this.detectorRecipeType);
    }

    /**
     * (Updatable) Detector rules to override from source detector recipe
     * 
     */
    @Import(name="detectorRules")
    private @Nullable Output<List<DetectorRecipeDetectorRuleArgs>> detectorRules;

    /**
     * @return (Updatable) Detector rules to override from source detector recipe
     * 
     */
    public Optional<Output<List<DetectorRecipeDetectorRuleArgs>>> detectorRules() {
        return Optional.ofNullable(this.detectorRules);
    }

    /**
     * (Updatable) Detector recipe display name.
     * 
     * Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Detector recipe display name.
     * 
     * Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * List of effective detector rules for the detector type for recipe after applying defaults
     * 
     */
    @Import(name="effectiveDetectorRules")
    private @Nullable Output<List<DetectorRecipeEffectiveDetectorRuleArgs>> effectiveDetectorRules;

    /**
     * @return List of effective detector rules for the detector type for recipe after applying defaults
     * 
     */
    public Optional<Output<List<DetectorRecipeEffectiveDetectorRuleArgs>>> effectiveDetectorRules() {
        return Optional.ofNullable(this.effectiveDetectorRules);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     * Avoid entering confidential information.
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     * Avoid entering confidential information.
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Owner of detector recipe
     * 
     */
    @Import(name="owner")
    private @Nullable Output<String> owner;

    /**
     * @return Owner of detector recipe
     * 
     */
    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    /**
     * The ID of the source detector recipe
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="sourceDetectorRecipeId")
    private @Nullable Output<String> sourceDetectorRecipeId;

    /**
     * @return The ID of the source detector recipe
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> sourceDetectorRecipeId() {
        return Optional.ofNullable(this.sourceDetectorRecipeId);
    }

    /**
     * The current lifecycle state of the resource
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the resource
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * List of target IDs to which the recipe is attached
     * 
     */
    @Import(name="targetIds")
    private @Nullable Output<List<String>> targetIds;

    /**
     * @return List of target IDs to which the recipe is attached
     * 
     */
    public Optional<Output<List<String>>> targetIds() {
        return Optional.ofNullable(this.targetIds);
    }

    /**
     * The date and time the detector recipe was created Format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the detector recipe was created Format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the detector recipe was last updated Format defined by RFC3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the detector recipe was last updated Format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private DetectorRecipeState() {}

    private DetectorRecipeState(DetectorRecipeState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.detector = $.detector;
        this.detectorRecipeType = $.detectorRecipeType;
        this.detectorRules = $.detectorRules;
        this.displayName = $.displayName;
        this.effectiveDetectorRules = $.effectiveDetectorRules;
        this.freeformTags = $.freeformTags;
        this.owner = $.owner;
        this.sourceDetectorRecipeId = $.sourceDetectorRecipeId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.targetIds = $.targetIds;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorRecipeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorRecipeState $;

        public Builder() {
            $ = new DetectorRecipeState();
        }

        public Builder(DetectorRecipeState defaults) {
            $ = new DetectorRecipeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Detector recipe description.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Detector recipe description.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param detector Detector for the rule
         * 
         * @return builder
         * 
         */
        public Builder detector(@Nullable Output<String> detector) {
            $.detector = detector;
            return this;
        }

        /**
         * @param detector Detector for the rule
         * 
         * @return builder
         * 
         */
        public Builder detector(String detector) {
            return detector(Output.of(detector));
        }

        /**
         * @param detectorRecipeType Recipe type ( STANDARD, ENTERPRISE )
         * 
         * @return builder
         * 
         */
        public Builder detectorRecipeType(@Nullable Output<String> detectorRecipeType) {
            $.detectorRecipeType = detectorRecipeType;
            return this;
        }

        /**
         * @param detectorRecipeType Recipe type ( STANDARD, ENTERPRISE )
         * 
         * @return builder
         * 
         */
        public Builder detectorRecipeType(String detectorRecipeType) {
            return detectorRecipeType(Output.of(detectorRecipeType));
        }

        /**
         * @param detectorRules (Updatable) Detector rules to override from source detector recipe
         * 
         * @return builder
         * 
         */
        public Builder detectorRules(@Nullable Output<List<DetectorRecipeDetectorRuleArgs>> detectorRules) {
            $.detectorRules = detectorRules;
            return this;
        }

        /**
         * @param detectorRules (Updatable) Detector rules to override from source detector recipe
         * 
         * @return builder
         * 
         */
        public Builder detectorRules(List<DetectorRecipeDetectorRuleArgs> detectorRules) {
            return detectorRules(Output.of(detectorRules));
        }

        /**
         * @param detectorRules (Updatable) Detector rules to override from source detector recipe
         * 
         * @return builder
         * 
         */
        public Builder detectorRules(DetectorRecipeDetectorRuleArgs... detectorRules) {
            return detectorRules(List.of(detectorRules));
        }

        /**
         * @param displayName (Updatable) Detector recipe display name.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Detector recipe display name.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param effectiveDetectorRules List of effective detector rules for the detector type for recipe after applying defaults
         * 
         * @return builder
         * 
         */
        public Builder effectiveDetectorRules(@Nullable Output<List<DetectorRecipeEffectiveDetectorRuleArgs>> effectiveDetectorRules) {
            $.effectiveDetectorRules = effectiveDetectorRules;
            return this;
        }

        /**
         * @param effectiveDetectorRules List of effective detector rules for the detector type for recipe after applying defaults
         * 
         * @return builder
         * 
         */
        public Builder effectiveDetectorRules(List<DetectorRecipeEffectiveDetectorRuleArgs> effectiveDetectorRules) {
            return effectiveDetectorRules(Output.of(effectiveDetectorRules));
        }

        /**
         * @param effectiveDetectorRules List of effective detector rules for the detector type for recipe after applying defaults
         * 
         * @return builder
         * 
         */
        public Builder effectiveDetectorRules(DetectorRecipeEffectiveDetectorRuleArgs... effectiveDetectorRules) {
            return effectiveDetectorRules(List.of(effectiveDetectorRules));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param owner Owner of detector recipe
         * 
         * @return builder
         * 
         */
        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param owner Owner of detector recipe
         * 
         * @return builder
         * 
         */
        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        /**
         * @param sourceDetectorRecipeId The ID of the source detector recipe
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder sourceDetectorRecipeId(@Nullable Output<String> sourceDetectorRecipeId) {
            $.sourceDetectorRecipeId = sourceDetectorRecipeId;
            return this;
        }

        /**
         * @param sourceDetectorRecipeId The ID of the source detector recipe
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder sourceDetectorRecipeId(String sourceDetectorRecipeId) {
            return sourceDetectorRecipeId(Output.of(sourceDetectorRecipeId));
        }

        /**
         * @param state The current lifecycle state of the resource
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the resource
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param targetIds List of target IDs to which the recipe is attached
         * 
         * @return builder
         * 
         */
        public Builder targetIds(@Nullable Output<List<String>> targetIds) {
            $.targetIds = targetIds;
            return this;
        }

        /**
         * @param targetIds List of target IDs to which the recipe is attached
         * 
         * @return builder
         * 
         */
        public Builder targetIds(List<String> targetIds) {
            return targetIds(Output.of(targetIds));
        }

        /**
         * @param targetIds List of target IDs to which the recipe is attached
         * 
         * @return builder
         * 
         */
        public Builder targetIds(String... targetIds) {
            return targetIds(List.of(targetIds));
        }

        /**
         * @param timeCreated The date and time the detector recipe was created Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the detector recipe was created Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the detector recipe was last updated Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the detector recipe was last updated Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public DetectorRecipeState build() {
            return $;
        }
    }

}
