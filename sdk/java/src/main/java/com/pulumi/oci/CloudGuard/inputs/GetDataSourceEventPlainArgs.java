// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDataSourceEventPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDataSourceEventPlainArgs Empty = new GetDataSourceEventPlainArgs();

    /**
     * DataSource OCID
     * 
     */
    @Import(name="dataSourceId", required=true)
    private String dataSourceId;

    /**
     * @return DataSource OCID
     * 
     */
    public String dataSourceId() {
        return this.dataSourceId;
    }

    /**
     * A filter to return only resource their region matches the given region.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return A filter to return only resource their region matches the given region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    private GetDataSourceEventPlainArgs() {}

    private GetDataSourceEventPlainArgs(GetDataSourceEventPlainArgs $) {
        this.dataSourceId = $.dataSourceId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataSourceEventPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataSourceEventPlainArgs $;

        public Builder() {
            $ = new GetDataSourceEventPlainArgs();
        }

        public Builder(GetDataSourceEventPlainArgs defaults) {
            $ = new GetDataSourceEventPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSourceId DataSource OCID
         * 
         * @return builder
         * 
         */
        public Builder dataSourceId(String dataSourceId) {
            $.dataSourceId = dataSourceId;
            return this;
        }

        /**
         * @param region A filter to return only resource their region matches the given region.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        public GetDataSourceEventPlainArgs build() {
            $.dataSourceId = Objects.requireNonNull($.dataSourceId, "expected parameter 'dataSourceId' to be non-null");
            return $;
        }
    }

}
