// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudGuard.inputs.GetSecurityZonesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityZonesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityZonesPlainArgs Empty = new GetSecurityZonesPlainArgs();

    /**
     * The OCID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetSecurityZonesFilter> filters;

    public Optional<List<GetSecurityZonesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The unique identifier of the security zone (`SecurityZone` resource).
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The unique identifier of the security zone (`SecurityZone` resource).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Is security zones in the subtree?
     * 
     */
    @Import(name="isRequiredSecurityZonesInSubtree")
    private @Nullable Boolean isRequiredSecurityZonesInSubtree;

    /**
     * @return Is security zones in the subtree?
     * 
     */
    public Optional<Boolean> isRequiredSecurityZonesInSubtree() {
        return Optional.ofNullable(this.isRequiredSecurityZonesInSubtree);
    }

    /**
     * The unique identifier of the security zone recipe. (`SecurityRecipe` resource).
     * 
     */
    @Import(name="securityRecipeId")
    private @Nullable String securityRecipeId;

    /**
     * @return The unique identifier of the security zone recipe. (`SecurityRecipe` resource).
     * 
     */
    public Optional<String> securityRecipeId() {
        return Optional.ofNullable(this.securityRecipeId);
    }

    /**
     * The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetSecurityZonesPlainArgs() {}

    private GetSecurityZonesPlainArgs(GetSecurityZonesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.isRequiredSecurityZonesInSubtree = $.isRequiredSecurityZonesInSubtree;
        this.securityRecipeId = $.securityRecipeId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityZonesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityZonesPlainArgs $;

        public Builder() {
            $ = new GetSecurityZonesPlainArgs();
        }

        public Builder(GetSecurityZonesPlainArgs defaults) {
            $ = new GetSecurityZonesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetSecurityZonesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSecurityZonesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id The unique identifier of the security zone (`SecurityZone` resource).
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param isRequiredSecurityZonesInSubtree Is security zones in the subtree?
         * 
         * @return builder
         * 
         */
        public Builder isRequiredSecurityZonesInSubtree(@Nullable Boolean isRequiredSecurityZonesInSubtree) {
            $.isRequiredSecurityZonesInSubtree = isRequiredSecurityZonesInSubtree;
            return this;
        }

        /**
         * @param securityRecipeId The unique identifier of the security zone recipe. (`SecurityRecipe` resource).
         * 
         * @return builder
         * 
         */
        public Builder securityRecipeId(@Nullable String securityRecipeId) {
            $.securityRecipeId = securityRecipeId;
            return this;
        }

        /**
         * @param state The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetSecurityZonesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetSecurityZonesPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
