// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudGuard.inputs.TargetTargetDetectorRecipeDetectorRuleDetailsArgs;
import com.pulumi.oci.CloudGuard.inputs.TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetTargetDetectorRecipeDetectorRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetTargetDetectorRecipeDetectorRuleArgs Empty = new TargetTargetDetectorRecipeDetectorRuleArgs();

    /**
     * The ID of the attached data source
     * 
     */
    @Import(name="dataSourceId")
    private @Nullable Output<String> dataSourceId;

    /**
     * @return The ID of the attached data source
     * 
     */
    public Optional<Output<String>> dataSourceId() {
        return Optional.ofNullable(this.dataSourceId);
    }

    /**
     * The target description.
     * 
     * Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The target description.
     * 
     * Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Parameters to update detector rule configuration details in a detector recipe attached to a target.
     * 
     */
    @Import(name="details", required=true)
    private Output<TargetTargetDetectorRecipeDetectorRuleDetailsArgs> details;

    /**
     * @return (Updatable) Parameters to update detector rule configuration details in a detector recipe attached to a target.
     * 
     */
    public Output<TargetTargetDetectorRecipeDetectorRuleDetailsArgs> details() {
        return this.details;
    }

    /**
     * Detector type for the rule
     * 
     */
    @Import(name="detector")
    private @Nullable Output<String> detector;

    /**
     * @return Detector type for the rule
     * 
     */
    public Optional<Output<String>> detector() {
        return Optional.ofNullable(this.detector);
    }

    /**
     * (Updatable) Unique identifier for the detector rule
     * 
     */
    @Import(name="detectorRuleId", required=true)
    private Output<String> detectorRuleId;

    /**
     * @return (Updatable) Unique identifier for the detector rule
     * 
     */
    public Output<String> detectorRuleId() {
        return this.detectorRuleId;
    }

    /**
     * (Updatable) Display name for the target.
     * 
     * Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Display name for the target.
     * 
     * Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Data source entities mapping for a detector rule
     * 
     */
    @Import(name="entitiesMappings")
    private @Nullable Output<List<TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs>> entitiesMappings;

    /**
     * @return Data source entities mapping for a detector rule
     * 
     */
    public Optional<Output<List<TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs>>> entitiesMappings() {
        return Optional.ofNullable(this.entitiesMappings);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * List of managed list types related to this rule
     * 
     */
    @Import(name="managedListTypes")
    private @Nullable Output<List<String>> managedListTypes;

    /**
     * @return List of managed list types related to this rule
     * 
     */
    public Optional<Output<List<String>>> managedListTypes() {
        return Optional.ofNullable(this.managedListTypes);
    }

    /**
     * Recommendation for TargetDetectorRecipeDetectorRule resource
     * 
     */
    @Import(name="recommendation")
    private @Nullable Output<String> recommendation;

    /**
     * @return Recommendation for TargetDetectorRecipeDetectorRule resource
     * 
     */
    public Optional<Output<String>> recommendation() {
        return Optional.ofNullable(this.recommendation);
    }

    /**
     * The type of resource which is monitored by the detector rule. For example, Instance, Database, VCN, Policy. To find the resource type for a particular rule, see [Detector Recipe Reference] (/iaas/cloud-guard/using/detect-recipes.htm#detect-recipes-reference).
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The type of resource which is monitored by the detector rule. For example, Instance, Database, VCN, Policy. To find the resource type for a particular rule, see [Detector Recipe Reference] (/iaas/cloud-guard/using/detect-recipes.htm#detect-recipes-reference).
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * Service type of the configuration to which the rule is applied
     * 
     */
    @Import(name="serviceType")
    private @Nullable Output<String> serviceType;

    /**
     * @return Service type of the configuration to which the rule is applied
     * 
     */
    public Optional<Output<String>> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    /**
     * (Updatable) The enablement state of the detector rule
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The enablement state of the detector rule
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the target was created. Format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the target was last updated. Format defined by RFC3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the target was last updated. Format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private TargetTargetDetectorRecipeDetectorRuleArgs() {}

    private TargetTargetDetectorRecipeDetectorRuleArgs(TargetTargetDetectorRecipeDetectorRuleArgs $) {
        this.dataSourceId = $.dataSourceId;
        this.description = $.description;
        this.details = $.details;
        this.detector = $.detector;
        this.detectorRuleId = $.detectorRuleId;
        this.displayName = $.displayName;
        this.entitiesMappings = $.entitiesMappings;
        this.lifecycleDetails = $.lifecycleDetails;
        this.managedListTypes = $.managedListTypes;
        this.recommendation = $.recommendation;
        this.resourceType = $.resourceType;
        this.serviceType = $.serviceType;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetTargetDetectorRecipeDetectorRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetTargetDetectorRecipeDetectorRuleArgs $;

        public Builder() {
            $ = new TargetTargetDetectorRecipeDetectorRuleArgs();
        }

        public Builder(TargetTargetDetectorRecipeDetectorRuleArgs defaults) {
            $ = new TargetTargetDetectorRecipeDetectorRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSourceId The ID of the attached data source
         * 
         * @return builder
         * 
         */
        public Builder dataSourceId(@Nullable Output<String> dataSourceId) {
            $.dataSourceId = dataSourceId;
            return this;
        }

        /**
         * @param dataSourceId The ID of the attached data source
         * 
         * @return builder
         * 
         */
        public Builder dataSourceId(String dataSourceId) {
            return dataSourceId(Output.of(dataSourceId));
        }

        /**
         * @param description The target description.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The target description.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param details (Updatable) Parameters to update detector rule configuration details in a detector recipe attached to a target.
         * 
         * @return builder
         * 
         */
        public Builder details(Output<TargetTargetDetectorRecipeDetectorRuleDetailsArgs> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details (Updatable) Parameters to update detector rule configuration details in a detector recipe attached to a target.
         * 
         * @return builder
         * 
         */
        public Builder details(TargetTargetDetectorRecipeDetectorRuleDetailsArgs details) {
            return details(Output.of(details));
        }

        /**
         * @param detector Detector type for the rule
         * 
         * @return builder
         * 
         */
        public Builder detector(@Nullable Output<String> detector) {
            $.detector = detector;
            return this;
        }

        /**
         * @param detector Detector type for the rule
         * 
         * @return builder
         * 
         */
        public Builder detector(String detector) {
            return detector(Output.of(detector));
        }

        /**
         * @param detectorRuleId (Updatable) Unique identifier for the detector rule
         * 
         * @return builder
         * 
         */
        public Builder detectorRuleId(Output<String> detectorRuleId) {
            $.detectorRuleId = detectorRuleId;
            return this;
        }

        /**
         * @param detectorRuleId (Updatable) Unique identifier for the detector rule
         * 
         * @return builder
         * 
         */
        public Builder detectorRuleId(String detectorRuleId) {
            return detectorRuleId(Output.of(detectorRuleId));
        }

        /**
         * @param displayName (Updatable) Display name for the target.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Display name for the target.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param entitiesMappings Data source entities mapping for a detector rule
         * 
         * @return builder
         * 
         */
        public Builder entitiesMappings(@Nullable Output<List<TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs>> entitiesMappings) {
            $.entitiesMappings = entitiesMappings;
            return this;
        }

        /**
         * @param entitiesMappings Data source entities mapping for a detector rule
         * 
         * @return builder
         * 
         */
        public Builder entitiesMappings(List<TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs> entitiesMappings) {
            return entitiesMappings(Output.of(entitiesMappings));
        }

        /**
         * @param entitiesMappings Data source entities mapping for a detector rule
         * 
         * @return builder
         * 
         */
        public Builder entitiesMappings(TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs... entitiesMappings) {
            return entitiesMappings(List.of(entitiesMappings));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param managedListTypes List of managed list types related to this rule
         * 
         * @return builder
         * 
         */
        public Builder managedListTypes(@Nullable Output<List<String>> managedListTypes) {
            $.managedListTypes = managedListTypes;
            return this;
        }

        /**
         * @param managedListTypes List of managed list types related to this rule
         * 
         * @return builder
         * 
         */
        public Builder managedListTypes(List<String> managedListTypes) {
            return managedListTypes(Output.of(managedListTypes));
        }

        /**
         * @param managedListTypes List of managed list types related to this rule
         * 
         * @return builder
         * 
         */
        public Builder managedListTypes(String... managedListTypes) {
            return managedListTypes(List.of(managedListTypes));
        }

        /**
         * @param recommendation Recommendation for TargetDetectorRecipeDetectorRule resource
         * 
         * @return builder
         * 
         */
        public Builder recommendation(@Nullable Output<String> recommendation) {
            $.recommendation = recommendation;
            return this;
        }

        /**
         * @param recommendation Recommendation for TargetDetectorRecipeDetectorRule resource
         * 
         * @return builder
         * 
         */
        public Builder recommendation(String recommendation) {
            return recommendation(Output.of(recommendation));
        }

        /**
         * @param resourceType The type of resource which is monitored by the detector rule. For example, Instance, Database, VCN, Policy. To find the resource type for a particular rule, see [Detector Recipe Reference] (/iaas/cloud-guard/using/detect-recipes.htm#detect-recipes-reference).
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of resource which is monitored by the detector rule. For example, Instance, Database, VCN, Policy. To find the resource type for a particular rule, see [Detector Recipe Reference] (/iaas/cloud-guard/using/detect-recipes.htm#detect-recipes-reference).
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param serviceType Service type of the configuration to which the rule is applied
         * 
         * @return builder
         * 
         */
        public Builder serviceType(@Nullable Output<String> serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        /**
         * @param serviceType Service type of the configuration to which the rule is applied
         * 
         * @return builder
         * 
         */
        public Builder serviceType(String serviceType) {
            return serviceType(Output.of(serviceType));
        }

        /**
         * @param state (Updatable) The enablement state of the detector rule
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The enablement state of the detector rule
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the target was created. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the target was created. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the target was last updated. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the target was last updated. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public TargetTargetDetectorRecipeDetectorRuleArgs build() {
            if ($.details == null) {
                throw new MissingRequiredPropertyException("TargetTargetDetectorRecipeDetectorRuleArgs", "details");
            }
            if ($.detectorRuleId == null) {
                throw new MissingRequiredPropertyException("TargetTargetDetectorRecipeDetectorRuleArgs", "detectorRuleId");
            }
            return $;
        }
    }

}
