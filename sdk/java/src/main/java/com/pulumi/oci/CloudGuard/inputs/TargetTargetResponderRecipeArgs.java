// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudGuard.inputs.TargetTargetResponderRecipeEffectiveResponderRuleArgs;
import com.pulumi.oci.CloudGuard.inputs.TargetTargetResponderRecipeResponderRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetTargetResponderRecipeArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetTargetResponderRecipeArgs Empty = new TargetTargetResponderRecipeArgs();

    /**
     * Compartment OCID where the resource is created
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Compartment OCID where the resource is created
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The target description.
     * 
     * Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The target description.
     * 
     * Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Display name for the target.
     * 
     * Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Display name for the target.
     * 
     * Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * List of currently enabled responder rules for the responder type for recipe after applying defaults
     * 
     */
    @Import(name="effectiveResponderRules")
    private @Nullable Output<List<TargetTargetResponderRecipeEffectiveResponderRuleArgs>> effectiveResponderRules;

    /**
     * @return List of currently enabled responder rules for the responder type for recipe after applying defaults
     * 
     */
    public Optional<Output<List<TargetTargetResponderRecipeEffectiveResponderRuleArgs>>> effectiveResponderRules() {
        return Optional.ofNullable(this.effectiveResponderRules);
    }

    /**
     * Unique identifier of target responder recipe that can&#39;t be changed after creation
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Unique identifier of target responder recipe that can&#39;t be changed after creation
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Owner of target responder recipe
     * 
     */
    @Import(name="owner")
    private @Nullable Output<String> owner;

    /**
     * @return Owner of target responder recipe
     * 
     */
    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    /**
     * Unique identifier for responder recipe
     * 
     */
    @Import(name="responderRecipeId", required=true)
    private Output<String> responderRecipeId;

    /**
     * @return Unique identifier for responder recipe
     * 
     */
    public Output<String> responderRecipeId() {
        return this.responderRecipeId;
    }

    /**
     * (Updatable) List of overrides to be applied to responder rules associated with the target
     * 
     */
    @Import(name="responderRules")
    private @Nullable Output<List<TargetTargetResponderRecipeResponderRuleArgs>> responderRules;

    /**
     * @return (Updatable) List of overrides to be applied to responder rules associated with the target
     * 
     */
    public Optional<Output<List<TargetTargetResponderRecipeResponderRuleArgs>>> responderRules() {
        return Optional.ofNullable(this.responderRules);
    }

    /**
     * The date and time the target was created. Format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the target was last updated. Format defined by RFC3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the target was last updated. Format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private TargetTargetResponderRecipeArgs() {}

    private TargetTargetResponderRecipeArgs(TargetTargetResponderRecipeArgs $) {
        this.compartmentId = $.compartmentId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.effectiveResponderRules = $.effectiveResponderRules;
        this.id = $.id;
        this.owner = $.owner;
        this.responderRecipeId = $.responderRecipeId;
        this.responderRules = $.responderRules;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetTargetResponderRecipeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetTargetResponderRecipeArgs $;

        public Builder() {
            $ = new TargetTargetResponderRecipeArgs();
        }

        public Builder(TargetTargetResponderRecipeArgs defaults) {
            $ = new TargetTargetResponderRecipeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId Compartment OCID where the resource is created
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment OCID where the resource is created
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param description The target description.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The target description.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) Display name for the target.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Display name for the target.
         * 
         * Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param effectiveResponderRules List of currently enabled responder rules for the responder type for recipe after applying defaults
         * 
         * @return builder
         * 
         */
        public Builder effectiveResponderRules(@Nullable Output<List<TargetTargetResponderRecipeEffectiveResponderRuleArgs>> effectiveResponderRules) {
            $.effectiveResponderRules = effectiveResponderRules;
            return this;
        }

        /**
         * @param effectiveResponderRules List of currently enabled responder rules for the responder type for recipe after applying defaults
         * 
         * @return builder
         * 
         */
        public Builder effectiveResponderRules(List<TargetTargetResponderRecipeEffectiveResponderRuleArgs> effectiveResponderRules) {
            return effectiveResponderRules(Output.of(effectiveResponderRules));
        }

        /**
         * @param effectiveResponderRules List of currently enabled responder rules for the responder type for recipe after applying defaults
         * 
         * @return builder
         * 
         */
        public Builder effectiveResponderRules(TargetTargetResponderRecipeEffectiveResponderRuleArgs... effectiveResponderRules) {
            return effectiveResponderRules(List.of(effectiveResponderRules));
        }

        /**
         * @param id Unique identifier of target responder recipe that can&#39;t be changed after creation
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Unique identifier of target responder recipe that can&#39;t be changed after creation
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param owner Owner of target responder recipe
         * 
         * @return builder
         * 
         */
        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param owner Owner of target responder recipe
         * 
         * @return builder
         * 
         */
        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        /**
         * @param responderRecipeId Unique identifier for responder recipe
         * 
         * @return builder
         * 
         */
        public Builder responderRecipeId(Output<String> responderRecipeId) {
            $.responderRecipeId = responderRecipeId;
            return this;
        }

        /**
         * @param responderRecipeId Unique identifier for responder recipe
         * 
         * @return builder
         * 
         */
        public Builder responderRecipeId(String responderRecipeId) {
            return responderRecipeId(Output.of(responderRecipeId));
        }

        /**
         * @param responderRules (Updatable) List of overrides to be applied to responder rules associated with the target
         * 
         * @return builder
         * 
         */
        public Builder responderRules(@Nullable Output<List<TargetTargetResponderRecipeResponderRuleArgs>> responderRules) {
            $.responderRules = responderRules;
            return this;
        }

        /**
         * @param responderRules (Updatable) List of overrides to be applied to responder rules associated with the target
         * 
         * @return builder
         * 
         */
        public Builder responderRules(List<TargetTargetResponderRecipeResponderRuleArgs> responderRules) {
            return responderRules(Output.of(responderRules));
        }

        /**
         * @param responderRules (Updatable) List of overrides to be applied to responder rules associated with the target
         * 
         * @return builder
         * 
         */
        public Builder responderRules(TargetTargetResponderRecipeResponderRuleArgs... responderRules) {
            return responderRules(List.of(responderRules));
        }

        /**
         * @param timeCreated The date and time the target was created. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the target was created. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the target was last updated. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the target was last updated. Format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public TargetTargetResponderRecipeArgs build() {
            if ($.responderRecipeId == null) {
                throw new MissingRequiredPropertyException("TargetTargetResponderRecipeArgs", "responderRecipeId");
            }
            return $;
        }
    }

}
