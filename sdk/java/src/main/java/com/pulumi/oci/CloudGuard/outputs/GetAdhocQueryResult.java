// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudGuard.outputs.GetAdhocQueryAdhocQueryDetail;
import com.pulumi.oci.CloudGuard.outputs.GetAdhocQueryAdhocQueryRegionalDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAdhocQueryResult {
    /**
     * @return Detailed information about the adhoc query.
     * 
     */
    private List<GetAdhocQueryAdhocQueryDetail> adhocQueryDetails;
    private String adhocQueryId;
    /**
     * @return Instance level status for each region
     * 
     */
    private List<GetAdhocQueryAdhocQueryRegionalDetail> adhocQueryRegionalDetails;
    /**
     * @return Compartment OCID of the adhoc query
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Error message to show on UI in case of failure
     * 
     */
    private String errorMessage;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return OCID for the adhoc query
     * 
     */
    private String id;
    /**
     * @return The current lifecycle state of the resource.
     * 
     */
    private String state;
    /**
     * @return Status of the adhoc query
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time the adhoc query was created. Format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the adhoc query was updated. Format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetAdhocQueryResult() {}
    /**
     * @return Detailed information about the adhoc query.
     * 
     */
    public List<GetAdhocQueryAdhocQueryDetail> adhocQueryDetails() {
        return this.adhocQueryDetails;
    }
    public String adhocQueryId() {
        return this.adhocQueryId;
    }
    /**
     * @return Instance level status for each region
     * 
     */
    public List<GetAdhocQueryAdhocQueryRegionalDetail> adhocQueryRegionalDetails() {
        return this.adhocQueryRegionalDetails;
    }
    /**
     * @return Compartment OCID of the adhoc query
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Error message to show on UI in case of failure
     * 
     */
    public String errorMessage() {
        return this.errorMessage;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return OCID for the adhoc query
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current lifecycle state of the resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Status of the adhoc query
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the adhoc query was created. Format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the adhoc query was updated. Format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAdhocQueryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAdhocQueryAdhocQueryDetail> adhocQueryDetails;
        private String adhocQueryId;
        private List<GetAdhocQueryAdhocQueryRegionalDetail> adhocQueryRegionalDetails;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String errorMessage;
        private Map<String,Object> freeformTags;
        private String id;
        private String state;
        private String status;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetAdhocQueryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adhocQueryDetails = defaults.adhocQueryDetails;
    	      this.adhocQueryId = defaults.adhocQueryId;
    	      this.adhocQueryRegionalDetails = defaults.adhocQueryRegionalDetails;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.errorMessage = defaults.errorMessage;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder adhocQueryDetails(List<GetAdhocQueryAdhocQueryDetail> adhocQueryDetails) {
            if (adhocQueryDetails == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "adhocQueryDetails");
            }
            this.adhocQueryDetails = adhocQueryDetails;
            return this;
        }
        public Builder adhocQueryDetails(GetAdhocQueryAdhocQueryDetail... adhocQueryDetails) {
            return adhocQueryDetails(List.of(adhocQueryDetails));
        }
        @CustomType.Setter
        public Builder adhocQueryId(String adhocQueryId) {
            if (adhocQueryId == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "adhocQueryId");
            }
            this.adhocQueryId = adhocQueryId;
            return this;
        }
        @CustomType.Setter
        public Builder adhocQueryRegionalDetails(List<GetAdhocQueryAdhocQueryRegionalDetail> adhocQueryRegionalDetails) {
            if (adhocQueryRegionalDetails == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "adhocQueryRegionalDetails");
            }
            this.adhocQueryRegionalDetails = adhocQueryRegionalDetails;
            return this;
        }
        public Builder adhocQueryRegionalDetails(GetAdhocQueryAdhocQueryRegionalDetail... adhocQueryRegionalDetails) {
            return adhocQueryRegionalDetails(List.of(adhocQueryRegionalDetails));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(String errorMessage) {
            if (errorMessage == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "errorMessage");
            }
            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetAdhocQueryResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetAdhocQueryResult build() {
            final var _resultValue = new GetAdhocQueryResult();
            _resultValue.adhocQueryDetails = adhocQueryDetails;
            _resultValue.adhocQueryId = adhocQueryId;
            _resultValue.adhocQueryRegionalDetails = adhocQueryRegionalDetails;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.errorMessage = errorMessage;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
