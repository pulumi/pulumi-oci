// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudGuard.outputs.GetDataMaskRuleTargetSelected;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDataMaskRuleResult {
    /**
     * @return Compartment OCID where the resource is created
     * 
     */
    private String compartmentId;
    /**
     * @return List of data mask rule categories
     * 
     */
    private List<String> dataMaskCategories;
    private String dataMaskRuleId;
    /**
     * @return The current status of the data mask rule
     * 
     */
    private String dataMaskRuleStatus;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The data mask rule description
     * 
     */
    private String description;
    /**
     * @return Data mask rule display name
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return IAM Group ID associated with the data mask rule
     * 
     */
    private String iamGroupId;
    /**
     * @return Unique identifier that can&#39;t be changed after creation
     * 
     */
    private String id;
    /**
     * @return Additional details on the substate of the lifecycle state [DEPRECATE]
     * 
     */
    private String lifecyleDetails;
    /**
     * @return The current lifecycle state of the data mask rule
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Specification of how targets are to be selected (select ALL, or select by TargetResourceType or TargetId).
     * 
     */
    private List<GetDataMaskRuleTargetSelected> targetSelecteds;
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetDataMaskRuleResult() {}
    /**
     * @return Compartment OCID where the resource is created
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return List of data mask rule categories
     * 
     */
    public List<String> dataMaskCategories() {
        return this.dataMaskCategories;
    }
    public String dataMaskRuleId() {
        return this.dataMaskRuleId;
    }
    /**
     * @return The current status of the data mask rule
     * 
     */
    public String dataMaskRuleStatus() {
        return this.dataMaskRuleStatus;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The data mask rule description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Data mask rule display name
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return IAM Group ID associated with the data mask rule
     * 
     */
    public String iamGroupId() {
        return this.iamGroupId;
    }
    /**
     * @return Unique identifier that can&#39;t be changed after creation
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional details on the substate of the lifecycle state [DEPRECATE]
     * 
     */
    public String lifecyleDetails() {
        return this.lifecyleDetails;
    }
    /**
     * @return The current lifecycle state of the data mask rule
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Specification of how targets are to be selected (select ALL, or select by TargetResourceType or TargetId).
     * 
     */
    public List<GetDataMaskRuleTargetSelected> targetSelecteds() {
        return this.targetSelecteds;
    }
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataMaskRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<String> dataMaskCategories;
        private String dataMaskRuleId;
        private String dataMaskRuleStatus;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String iamGroupId;
        private String id;
        private String lifecyleDetails;
        private String state;
        private Map<String,String> systemTags;
        private List<GetDataMaskRuleTargetSelected> targetSelecteds;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetDataMaskRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataMaskCategories = defaults.dataMaskCategories;
    	      this.dataMaskRuleId = defaults.dataMaskRuleId;
    	      this.dataMaskRuleStatus = defaults.dataMaskRuleStatus;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.iamGroupId = defaults.iamGroupId;
    	      this.id = defaults.id;
    	      this.lifecyleDetails = defaults.lifecyleDetails;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetSelecteds = defaults.targetSelecteds;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dataMaskCategories(List<String> dataMaskCategories) {
            if (dataMaskCategories == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "dataMaskCategories");
            }
            this.dataMaskCategories = dataMaskCategories;
            return this;
        }
        public Builder dataMaskCategories(String... dataMaskCategories) {
            return dataMaskCategories(List.of(dataMaskCategories));
        }
        @CustomType.Setter
        public Builder dataMaskRuleId(String dataMaskRuleId) {
            if (dataMaskRuleId == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "dataMaskRuleId");
            }
            this.dataMaskRuleId = dataMaskRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder dataMaskRuleStatus(String dataMaskRuleStatus) {
            if (dataMaskRuleStatus == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "dataMaskRuleStatus");
            }
            this.dataMaskRuleStatus = dataMaskRuleStatus;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder iamGroupId(String iamGroupId) {
            if (iamGroupId == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "iamGroupId");
            }
            this.iamGroupId = iamGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecyleDetails(String lifecyleDetails) {
            if (lifecyleDetails == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "lifecyleDetails");
            }
            this.lifecyleDetails = lifecyleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetSelecteds(List<GetDataMaskRuleTargetSelected> targetSelecteds) {
            if (targetSelecteds == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "targetSelecteds");
            }
            this.targetSelecteds = targetSelecteds;
            return this;
        }
        public Builder targetSelecteds(GetDataMaskRuleTargetSelected... targetSelecteds) {
            return targetSelecteds(List.of(targetSelecteds));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDataMaskRuleResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDataMaskRuleResult build() {
            final var _resultValue = new GetDataMaskRuleResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.dataMaskCategories = dataMaskCategories;
            _resultValue.dataMaskRuleId = dataMaskRuleId;
            _resultValue.dataMaskRuleStatus = dataMaskRuleStatus;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.iamGroupId = iamGroupId;
            _resultValue.id = id;
            _resultValue.lifecyleDetails = lifecyleDetails;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.targetSelecteds = targetSelecteds;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
