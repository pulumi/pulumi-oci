// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDataSourceEventItemEventInfo {
    /**
     * @return Possible type of dataSourceFeed Provider(LoggingQuery)
     * 
     */
    private String dataSourceFeedProvider;
    private String logResult;
    private String observedValue;
    private String operator;
    private String triggerValue;

    private GetDataSourceEventItemEventInfo() {}
    /**
     * @return Possible type of dataSourceFeed Provider(LoggingQuery)
     * 
     */
    public String dataSourceFeedProvider() {
        return this.dataSourceFeedProvider;
    }
    public String logResult() {
        return this.logResult;
    }
    public String observedValue() {
        return this.observedValue;
    }
    public String operator() {
        return this.operator;
    }
    public String triggerValue() {
        return this.triggerValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceEventItemEventInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataSourceFeedProvider;
        private String logResult;
        private String observedValue;
        private String operator;
        private String triggerValue;
        public Builder() {}
        public Builder(GetDataSourceEventItemEventInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSourceFeedProvider = defaults.dataSourceFeedProvider;
    	      this.logResult = defaults.logResult;
    	      this.observedValue = defaults.observedValue;
    	      this.operator = defaults.operator;
    	      this.triggerValue = defaults.triggerValue;
        }

        @CustomType.Setter
        public Builder dataSourceFeedProvider(String dataSourceFeedProvider) {
            this.dataSourceFeedProvider = Objects.requireNonNull(dataSourceFeedProvider);
            return this;
        }
        @CustomType.Setter
        public Builder logResult(String logResult) {
            this.logResult = Objects.requireNonNull(logResult);
            return this;
        }
        @CustomType.Setter
        public Builder observedValue(String observedValue) {
            this.observedValue = Objects.requireNonNull(observedValue);
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        @CustomType.Setter
        public Builder triggerValue(String triggerValue) {
            this.triggerValue = Objects.requireNonNull(triggerValue);
            return this;
        }
        public GetDataSourceEventItemEventInfo build() {
            final var _resultValue = new GetDataSourceEventItemEventInfo();
            _resultValue.dataSourceFeedProvider = dataSourceFeedProvider;
            _resultValue.logResult = logResult;
            _resultValue.observedValue = observedValue;
            _resultValue.operator = operator;
            _resultValue.triggerValue = triggerValue;
            return _resultValue;
        }
    }
}
