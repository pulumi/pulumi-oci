// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDataSourceEventItemEventInfo {
    /**
     * @return Possible type of dataSourceFeed Provider(LoggingQuery)
     * 
     */
    private @Nullable String dataSourceFeedProvider;
    private @Nullable String logResult;
    private @Nullable String observedValue;
    private @Nullable String operator;
    private @Nullable String triggerValue;

    private GetDataSourceEventItemEventInfo() {}
    /**
     * @return Possible type of dataSourceFeed Provider(LoggingQuery)
     * 
     */
    public Optional<String> dataSourceFeedProvider() {
        return Optional.ofNullable(this.dataSourceFeedProvider);
    }
    public Optional<String> logResult() {
        return Optional.ofNullable(this.logResult);
    }
    public Optional<String> observedValue() {
        return Optional.ofNullable(this.observedValue);
    }
    public Optional<String> operator() {
        return Optional.ofNullable(this.operator);
    }
    public Optional<String> triggerValue() {
        return Optional.ofNullable(this.triggerValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceEventItemEventInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dataSourceFeedProvider;
        private @Nullable String logResult;
        private @Nullable String observedValue;
        private @Nullable String operator;
        private @Nullable String triggerValue;
        public Builder() {}
        public Builder(GetDataSourceEventItemEventInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSourceFeedProvider = defaults.dataSourceFeedProvider;
    	      this.logResult = defaults.logResult;
    	      this.observedValue = defaults.observedValue;
    	      this.operator = defaults.operator;
    	      this.triggerValue = defaults.triggerValue;
        }

        @CustomType.Setter
        public Builder dataSourceFeedProvider(@Nullable String dataSourceFeedProvider) {
            this.dataSourceFeedProvider = dataSourceFeedProvider;
            return this;
        }
        @CustomType.Setter
        public Builder logResult(@Nullable String logResult) {
            this.logResult = logResult;
            return this;
        }
        @CustomType.Setter
        public Builder observedValue(@Nullable String observedValue) {
            this.observedValue = observedValue;
            return this;
        }
        @CustomType.Setter
        public Builder operator(@Nullable String operator) {
            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder triggerValue(@Nullable String triggerValue) {
            this.triggerValue = triggerValue;
            return this;
        }
        public GetDataSourceEventItemEventInfo build() {
            final var o = new GetDataSourceEventItemEventInfo();
            o.dataSourceFeedProvider = dataSourceFeedProvider;
            o.logResult = logResult;
            o.observedValue = observedValue;
            o.operator = operator;
            o.triggerValue = triggerValue;
            return o;
        }
    }
}
