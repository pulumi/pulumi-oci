// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetDataSourceEventsDataSourceEventCollectionItemEventInfo;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDataSourceEventsDataSourceEventCollectionItem {
    /**
     * @return Data source event comments
     * 
     */
    private @Nullable String comments;
    /**
     * @return DataSource OCID
     * 
     */
    private @Nullable String dataSourceId;
    /**
     * @return Data source event date time
     * 
     */
    private @Nullable String eventDate;
    /**
     * @return Event info of a data source.
     * 
     */
    private @Nullable List<GetDataSourceEventsDataSourceEventCollectionItemEventInfo> eventInfos;
    /**
     * @return A filter to return only resource their region matches the given region.
     * 
     */
    private @Nullable String region;
    /**
     * @return Current data source event info status
     * 
     */
    private @Nullable String status;
    /**
     * @return Data source event created time
     * 
     */
    private @Nullable String timeCreated;

    private GetDataSourceEventsDataSourceEventCollectionItem() {}
    /**
     * @return Data source event comments
     * 
     */
    public Optional<String> comments() {
        return Optional.ofNullable(this.comments);
    }
    /**
     * @return DataSource OCID
     * 
     */
    public Optional<String> dataSourceId() {
        return Optional.ofNullable(this.dataSourceId);
    }
    /**
     * @return Data source event date time
     * 
     */
    public Optional<String> eventDate() {
        return Optional.ofNullable(this.eventDate);
    }
    /**
     * @return Event info of a data source.
     * 
     */
    public List<GetDataSourceEventsDataSourceEventCollectionItemEventInfo> eventInfos() {
        return this.eventInfos == null ? List.of() : this.eventInfos;
    }
    /**
     * @return A filter to return only resource their region matches the given region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Current data source event info status
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Data source event created time
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceEventsDataSourceEventCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comments;
        private @Nullable String dataSourceId;
        private @Nullable String eventDate;
        private @Nullable List<GetDataSourceEventsDataSourceEventCollectionItemEventInfo> eventInfos;
        private @Nullable String region;
        private @Nullable String status;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetDataSourceEventsDataSourceEventCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comments = defaults.comments;
    	      this.dataSourceId = defaults.dataSourceId;
    	      this.eventDate = defaults.eventDate;
    	      this.eventInfos = defaults.eventInfos;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder comments(@Nullable String comments) {
            this.comments = comments;
            return this;
        }
        @CustomType.Setter
        public Builder dataSourceId(@Nullable String dataSourceId) {
            this.dataSourceId = dataSourceId;
            return this;
        }
        @CustomType.Setter
        public Builder eventDate(@Nullable String eventDate) {
            this.eventDate = eventDate;
            return this;
        }
        @CustomType.Setter
        public Builder eventInfos(@Nullable List<GetDataSourceEventsDataSourceEventCollectionItemEventInfo> eventInfos) {
            this.eventInfos = eventInfos;
            return this;
        }
        public Builder eventInfos(GetDataSourceEventsDataSourceEventCollectionItemEventInfo... eventInfos) {
            return eventInfos(List.of(eventInfos));
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetDataSourceEventsDataSourceEventCollectionItem build() {
            final var o = new GetDataSourceEventsDataSourceEventCollectionItem();
            o.comments = comments;
            o.dataSourceId = dataSourceId;
            o.eventDate = eventDate;
            o.eventInfos = eventInfos;
            o.region = region;
            o.status = status;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
