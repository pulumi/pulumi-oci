// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetTargetDetectorRecipeDetectorRule;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGuardTargetTargetDetectorRecipe {
    /**
     * @return Compartment Identifier
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return ResponderRule description.
     * 
     */
    private @Nullable String description;
    /**
     * @return detector for the rule
     * 
     */
    private @Nullable String detector;
    /**
     * @return Unique identifier for Detector Recipe of which this is an extension
     * 
     */
    private @Nullable String detectorRecipeId;
    /**
     * @return List of detector rules for the detector type for recipe - user input
     * 
     */
    private @Nullable List<GetGuardTargetTargetDetectorRecipeDetectorRule> detectorRules;
    /**
     * @return ResponderRule display name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return List of effective detector rules for the detector type for recipe after applying defaults
     * 
     */
    private @Nullable List<GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule> effectiveDetectorRules;
    /**
     * @return Unique identifier of TargetResponderRecipe that can&#39;t be changed after creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return Owner of ResponderRecipe
     * 
     */
    private @Nullable String owner;
    /**
     * @return The current state of the ResponderRule.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetGuardTargetTargetDetectorRecipe() {}
    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return ResponderRule description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return detector for the rule
     * 
     */
    public Optional<String> detector() {
        return Optional.ofNullable(this.detector);
    }
    /**
     * @return Unique identifier for Detector Recipe of which this is an extension
     * 
     */
    public Optional<String> detectorRecipeId() {
        return Optional.ofNullable(this.detectorRecipeId);
    }
    /**
     * @return List of detector rules for the detector type for recipe - user input
     * 
     */
    public List<GetGuardTargetTargetDetectorRecipeDetectorRule> detectorRules() {
        return this.detectorRules == null ? List.of() : this.detectorRules;
    }
    /**
     * @return ResponderRule display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return List of effective detector rules for the detector type for recipe after applying defaults
     * 
     */
    public List<GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule> effectiveDetectorRules() {
        return this.effectiveDetectorRules == null ? List.of() : this.effectiveDetectorRules;
    }
    /**
     * @return Unique identifier of TargetResponderRecipe that can&#39;t be changed after creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Owner of ResponderRecipe
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return The current state of the ResponderRule.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGuardTargetTargetDetectorRecipe defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String description;
        private @Nullable String detector;
        private @Nullable String detectorRecipeId;
        private @Nullable List<GetGuardTargetTargetDetectorRecipeDetectorRule> detectorRules;
        private @Nullable String displayName;
        private @Nullable List<GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule> effectiveDetectorRules;
        private @Nullable String id;
        private @Nullable String owner;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetGuardTargetTargetDetectorRecipe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.description = defaults.description;
    	      this.detector = defaults.detector;
    	      this.detectorRecipeId = defaults.detectorRecipeId;
    	      this.detectorRules = defaults.detectorRules;
    	      this.displayName = defaults.displayName;
    	      this.effectiveDetectorRules = defaults.effectiveDetectorRules;
    	      this.id = defaults.id;
    	      this.owner = defaults.owner;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder detector(@Nullable String detector) {
            this.detector = detector;
            return this;
        }
        @CustomType.Setter
        public Builder detectorRecipeId(@Nullable String detectorRecipeId) {
            this.detectorRecipeId = detectorRecipeId;
            return this;
        }
        @CustomType.Setter
        public Builder detectorRules(@Nullable List<GetGuardTargetTargetDetectorRecipeDetectorRule> detectorRules) {
            this.detectorRules = detectorRules;
            return this;
        }
        public Builder detectorRules(GetGuardTargetTargetDetectorRecipeDetectorRule... detectorRules) {
            return detectorRules(List.of(detectorRules));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveDetectorRules(@Nullable List<GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule> effectiveDetectorRules) {
            this.effectiveDetectorRules = effectiveDetectorRules;
            return this;
        }
        public Builder effectiveDetectorRules(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule... effectiveDetectorRules) {
            return effectiveDetectorRules(List.of(effectiveDetectorRules));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetGuardTargetTargetDetectorRecipe build() {
            final var o = new GetGuardTargetTargetDetectorRecipe();
            o.compartmentId = compartmentId;
            o.description = description;
            o.detector = detector;
            o.detectorRecipeId = detectorRecipeId;
            o.detectorRules = detectorRules;
            o.displayName = displayName;
            o.effectiveDetectorRules = effectiveDetectorRules;
            o.id = id;
            o.owner = owner;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
