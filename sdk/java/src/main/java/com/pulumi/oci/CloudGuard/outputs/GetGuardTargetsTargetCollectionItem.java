// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetsTargetCollectionItemTargetDetail;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetsTargetCollectionItemTargetDetectorRecipe;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetsTargetCollectionItemTargetResponderRecipe;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGuardTargetsTargetCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return ResponderRule description.
     * 
     */
    private @Nullable String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique identifier of TargetResponderRecipe that can&#39;t be changed after creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return List of inherited compartments
     * 
     */
    private @Nullable List<String> inheritedByCompartments;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecyleDetails;
    /**
     * @return Total number of recipes attached to target
     * 
     */
    private @Nullable Integer recipeCount;
    /**
     * @return The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    private @Nullable String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return Details specific to the target type.
     * 
     */
    private @Nullable List<GetGuardTargetsTargetCollectionItemTargetDetail> targetDetails;
    /**
     * @return List of detector recipes associated with target
     * 
     */
    private @Nullable List<GetGuardTargetsTargetCollectionItemTargetDetectorRecipe> targetDetectorRecipes;
    /**
     * @return Resource ID which the target uses to monitor
     * 
     */
    private @Nullable String targetResourceId;
    /**
     * @return possible type of targets
     * 
     */
    private @Nullable String targetResourceType;
    /**
     * @return List of responder recipes associated with target
     * 
     */
    private @Nullable List<GetGuardTargetsTargetCollectionItemTargetResponderRecipe> targetResponderRecipes;
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetGuardTargetsTargetCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return ResponderRule description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique identifier of TargetResponderRecipe that can&#39;t be changed after creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return List of inherited compartments
     * 
     */
    public List<String> inheritedByCompartments() {
        return this.inheritedByCompartments == null ? List.of() : this.inheritedByCompartments;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecyleDetails() {
        return Optional.ofNullable(this.lifecyleDetails);
    }
    /**
     * @return Total number of recipes attached to target
     * 
     */
    public Optional<Integer> recipeCount() {
        return Optional.ofNullable(this.recipeCount);
    }
    /**
     * @return The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return Details specific to the target type.
     * 
     */
    public List<GetGuardTargetsTargetCollectionItemTargetDetail> targetDetails() {
        return this.targetDetails == null ? List.of() : this.targetDetails;
    }
    /**
     * @return List of detector recipes associated with target
     * 
     */
    public List<GetGuardTargetsTargetCollectionItemTargetDetectorRecipe> targetDetectorRecipes() {
        return this.targetDetectorRecipes == null ? List.of() : this.targetDetectorRecipes;
    }
    /**
     * @return Resource ID which the target uses to monitor
     * 
     */
    public Optional<String> targetResourceId() {
        return Optional.ofNullable(this.targetResourceId);
    }
    /**
     * @return possible type of targets
     * 
     */
    public Optional<String> targetResourceType() {
        return Optional.ofNullable(this.targetResourceType);
    }
    /**
     * @return List of responder recipes associated with target
     * 
     */
    public List<GetGuardTargetsTargetCollectionItemTargetResponderRecipe> targetResponderRecipes() {
        return this.targetResponderRecipes == null ? List.of() : this.targetResponderRecipes;
    }
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGuardTargetsTargetCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<String> inheritedByCompartments;
        private @Nullable String lifecyleDetails;
        private @Nullable Integer recipeCount;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable List<GetGuardTargetsTargetCollectionItemTargetDetail> targetDetails;
        private @Nullable List<GetGuardTargetsTargetCollectionItemTargetDetectorRecipe> targetDetectorRecipes;
        private @Nullable String targetResourceId;
        private @Nullable String targetResourceType;
        private @Nullable List<GetGuardTargetsTargetCollectionItemTargetResponderRecipe> targetResponderRecipes;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetGuardTargetsTargetCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.inheritedByCompartments = defaults.inheritedByCompartments;
    	      this.lifecyleDetails = defaults.lifecyleDetails;
    	      this.recipeCount = defaults.recipeCount;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetDetails = defaults.targetDetails;
    	      this.targetDetectorRecipes = defaults.targetDetectorRecipes;
    	      this.targetResourceId = defaults.targetResourceId;
    	      this.targetResourceType = defaults.targetResourceType;
    	      this.targetResponderRecipes = defaults.targetResponderRecipes;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inheritedByCompartments(@Nullable List<String> inheritedByCompartments) {
            this.inheritedByCompartments = inheritedByCompartments;
            return this;
        }
        public Builder inheritedByCompartments(String... inheritedByCompartments) {
            return inheritedByCompartments(List.of(inheritedByCompartments));
        }
        @CustomType.Setter
        public Builder lifecyleDetails(@Nullable String lifecyleDetails) {
            this.lifecyleDetails = lifecyleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder recipeCount(@Nullable Integer recipeCount) {
            this.recipeCount = recipeCount;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetDetails(@Nullable List<GetGuardTargetsTargetCollectionItemTargetDetail> targetDetails) {
            this.targetDetails = targetDetails;
            return this;
        }
        public Builder targetDetails(GetGuardTargetsTargetCollectionItemTargetDetail... targetDetails) {
            return targetDetails(List.of(targetDetails));
        }
        @CustomType.Setter
        public Builder targetDetectorRecipes(@Nullable List<GetGuardTargetsTargetCollectionItemTargetDetectorRecipe> targetDetectorRecipes) {
            this.targetDetectorRecipes = targetDetectorRecipes;
            return this;
        }
        public Builder targetDetectorRecipes(GetGuardTargetsTargetCollectionItemTargetDetectorRecipe... targetDetectorRecipes) {
            return targetDetectorRecipes(List.of(targetDetectorRecipes));
        }
        @CustomType.Setter
        public Builder targetResourceId(@Nullable String targetResourceId) {
            this.targetResourceId = targetResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceType(@Nullable String targetResourceType) {
            this.targetResourceType = targetResourceType;
            return this;
        }
        @CustomType.Setter
        public Builder targetResponderRecipes(@Nullable List<GetGuardTargetsTargetCollectionItemTargetResponderRecipe> targetResponderRecipes) {
            this.targetResponderRecipes = targetResponderRecipes;
            return this;
        }
        public Builder targetResponderRecipes(GetGuardTargetsTargetCollectionItemTargetResponderRecipe... targetResponderRecipes) {
            return targetResponderRecipes(List.of(targetResponderRecipes));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetGuardTargetsTargetCollectionItem build() {
            final var o = new GetGuardTargetsTargetCollectionItem();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.inheritedByCompartments = inheritedByCompartments;
            o.lifecyleDetails = lifecyleDetails;
            o.recipeCount = recipeCount;
            o.state = state;
            o.systemTags = systemTags;
            o.targetDetails = targetDetails;
            o.targetDetectorRecipes = targetDetectorRecipes;
            o.targetResourceId = targetResourceId;
            o.targetResourceType = targetResourceType;
            o.targetResponderRecipes = targetResponderRecipes;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
