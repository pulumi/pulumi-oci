// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetProblemEntityItemEntityDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProblemEntityItem {
    /**
     * @return List of event related to a DataSource
     * 
     */
    private @Nullable List<GetProblemEntityItemEntityDetail> entityDetails;
    /**
     * @return OCId of the problem.
     * 
     */
    private @Nullable String problemId;
    /**
     * @return Data source problem entities region
     * 
     */
    private @Nullable List<String> regions;
    /**
     * @return Log result query url for a data source query
     * 
     */
    private @Nullable String resultUrl;
    /**
     * @return Data source problem entities first detected time
     * 
     */
    private @Nullable String timeFirstDetected;
    /**
     * @return Data source problem entities last detected time
     * 
     */
    private @Nullable String timeLastDetected;

    private GetProblemEntityItem() {}
    /**
     * @return List of event related to a DataSource
     * 
     */
    public List<GetProblemEntityItemEntityDetail> entityDetails() {
        return this.entityDetails == null ? List.of() : this.entityDetails;
    }
    /**
     * @return OCId of the problem.
     * 
     */
    public Optional<String> problemId() {
        return Optional.ofNullable(this.problemId);
    }
    /**
     * @return Data source problem entities region
     * 
     */
    public List<String> regions() {
        return this.regions == null ? List.of() : this.regions;
    }
    /**
     * @return Log result query url for a data source query
     * 
     */
    public Optional<String> resultUrl() {
        return Optional.ofNullable(this.resultUrl);
    }
    /**
     * @return Data source problem entities first detected time
     * 
     */
    public Optional<String> timeFirstDetected() {
        return Optional.ofNullable(this.timeFirstDetected);
    }
    /**
     * @return Data source problem entities last detected time
     * 
     */
    public Optional<String> timeLastDetected() {
        return Optional.ofNullable(this.timeLastDetected);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProblemEntityItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetProblemEntityItemEntityDetail> entityDetails;
        private @Nullable String problemId;
        private @Nullable List<String> regions;
        private @Nullable String resultUrl;
        private @Nullable String timeFirstDetected;
        private @Nullable String timeLastDetected;
        public Builder() {}
        public Builder(GetProblemEntityItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityDetails = defaults.entityDetails;
    	      this.problemId = defaults.problemId;
    	      this.regions = defaults.regions;
    	      this.resultUrl = defaults.resultUrl;
    	      this.timeFirstDetected = defaults.timeFirstDetected;
    	      this.timeLastDetected = defaults.timeLastDetected;
        }

        @CustomType.Setter
        public Builder entityDetails(@Nullable List<GetProblemEntityItemEntityDetail> entityDetails) {
            this.entityDetails = entityDetails;
            return this;
        }
        public Builder entityDetails(GetProblemEntityItemEntityDetail... entityDetails) {
            return entityDetails(List.of(entityDetails));
        }
        @CustomType.Setter
        public Builder problemId(@Nullable String problemId) {
            this.problemId = problemId;
            return this;
        }
        @CustomType.Setter
        public Builder regions(@Nullable List<String> regions) {
            this.regions = regions;
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder resultUrl(@Nullable String resultUrl) {
            this.resultUrl = resultUrl;
            return this;
        }
        @CustomType.Setter
        public Builder timeFirstDetected(@Nullable String timeFirstDetected) {
            this.timeFirstDetected = timeFirstDetected;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastDetected(@Nullable String timeLastDetected) {
            this.timeLastDetected = timeLastDetected;
            return this;
        }
        public GetProblemEntityItem build() {
            final var o = new GetProblemEntityItem();
            o.entityDetails = entityDetails;
            o.problemId = problemId;
            o.regions = regions;
            o.resultUrl = resultUrl;
            o.timeFirstDetected = timeFirstDetected;
            o.timeLastDetected = timeLastDetected;
            return o;
        }
    }
}
