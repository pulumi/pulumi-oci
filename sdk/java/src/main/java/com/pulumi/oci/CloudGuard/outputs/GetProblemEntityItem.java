// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetProblemEntityItemEntityDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProblemEntityItem {
    /**
     * @return List of event related to a DataSource
     * 
     */
    private List<GetProblemEntityItemEntityDetail> entityDetails;
    /**
     * @return OCId of the problem.
     * 
     */
    private String problemId;
    /**
     * @return Data source problem entities region
     * 
     */
    private List<String> regions;
    /**
     * @return Log result query url for a data source query
     * 
     */
    private String resultUrl;
    /**
     * @return Data source problem entities first detected time
     * 
     */
    private String timeFirstDetected;
    /**
     * @return Data source problem entities last detected time
     * 
     */
    private String timeLastDetected;

    private GetProblemEntityItem() {}
    /**
     * @return List of event related to a DataSource
     * 
     */
    public List<GetProblemEntityItemEntityDetail> entityDetails() {
        return this.entityDetails;
    }
    /**
     * @return OCId of the problem.
     * 
     */
    public String problemId() {
        return this.problemId;
    }
    /**
     * @return Data source problem entities region
     * 
     */
    public List<String> regions() {
        return this.regions;
    }
    /**
     * @return Log result query url for a data source query
     * 
     */
    public String resultUrl() {
        return this.resultUrl;
    }
    /**
     * @return Data source problem entities first detected time
     * 
     */
    public String timeFirstDetected() {
        return this.timeFirstDetected;
    }
    /**
     * @return Data source problem entities last detected time
     * 
     */
    public String timeLastDetected() {
        return this.timeLastDetected;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProblemEntityItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetProblemEntityItemEntityDetail> entityDetails;
        private String problemId;
        private List<String> regions;
        private String resultUrl;
        private String timeFirstDetected;
        private String timeLastDetected;
        public Builder() {}
        public Builder(GetProblemEntityItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityDetails = defaults.entityDetails;
    	      this.problemId = defaults.problemId;
    	      this.regions = defaults.regions;
    	      this.resultUrl = defaults.resultUrl;
    	      this.timeFirstDetected = defaults.timeFirstDetected;
    	      this.timeLastDetected = defaults.timeLastDetected;
        }

        @CustomType.Setter
        public Builder entityDetails(List<GetProblemEntityItemEntityDetail> entityDetails) {
            this.entityDetails = Objects.requireNonNull(entityDetails);
            return this;
        }
        public Builder entityDetails(GetProblemEntityItemEntityDetail... entityDetails) {
            return entityDetails(List.of(entityDetails));
        }
        @CustomType.Setter
        public Builder problemId(String problemId) {
            this.problemId = Objects.requireNonNull(problemId);
            return this;
        }
        @CustomType.Setter
        public Builder regions(List<String> regions) {
            this.regions = Objects.requireNonNull(regions);
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder resultUrl(String resultUrl) {
            this.resultUrl = Objects.requireNonNull(resultUrl);
            return this;
        }
        @CustomType.Setter
        public Builder timeFirstDetected(String timeFirstDetected) {
            this.timeFirstDetected = Objects.requireNonNull(timeFirstDetected);
            return this;
        }
        @CustomType.Setter
        public Builder timeLastDetected(String timeLastDetected) {
            this.timeLastDetected = Objects.requireNonNull(timeLastDetected);
            return this;
        }
        public GetProblemEntityItem build() {
            final var o = new GetProblemEntityItem();
            o.entityDetails = entityDetails;
            o.problemId = problemId;
            o.regions = regions;
            o.resultUrl = resultUrl;
            o.timeFirstDetected = timeFirstDetected;
            o.timeLastDetected = timeLastDetected;
            return o;
        }
    }
}
