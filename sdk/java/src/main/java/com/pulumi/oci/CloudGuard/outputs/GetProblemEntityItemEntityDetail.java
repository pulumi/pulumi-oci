// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProblemEntityItemEntityDetail {
    /**
     * @return The display name of entity
     * 
     */
    private String displayName;
    /**
     * @return Type of entity
     * 
     */
    private String type;
    /**
     * @return The entity value
     * 
     */
    private String value;

    private GetProblemEntityItemEntityDetail() {}
    /**
     * @return The display name of entity
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Type of entity
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The entity value
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProblemEntityItemEntityDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetProblemEntityItemEntityDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetProblemEntityItemEntityDetail build() {
            final var _resultValue = new GetProblemEntityItemEntityDetail();
            _resultValue.displayName = displayName;
            _resultValue.type = type;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
