// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudGuard.outputs.GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule;
import com.pulumi.oci.CloudGuard.outputs.GetResponderRecipesResponderRecipeCollectionItemResponderRule;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResponderRecipesResponderRecipeCollectionItem {
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Responder rule description
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return List of currently enabled responder rules for the responder type, for recipe after applying defaults
     * 
     */
    private List<GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule> effectiveResponderRules;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Unique identifier for the responder recip
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Owner of responder recipe
     * 
     */
    private String owner;
    /**
     * @return List of responder rules associated with the recipe
     * 
     */
    private List<GetResponderRecipesResponderRecipeCollectionItemResponderRule> responderRules;
    /**
     * @return The unique identifier of the source responder recipe
     * 
     */
    private String sourceResponderRecipeId;
    /**
     * @return The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time the responder recipe was created. Format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the responder recipe was last updated. Format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetResponderRecipesResponderRecipeCollectionItem() {}
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Responder rule description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return List of currently enabled responder rules for the responder type, for recipe after applying defaults
     * 
     */
    public List<GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule> effectiveResponderRules() {
        return this.effectiveResponderRules;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier for the responder recip
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Owner of responder recipe
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return List of responder rules associated with the recipe
     * 
     */
    public List<GetResponderRecipesResponderRecipeCollectionItemResponderRule> responderRules() {
        return this.responderRules;
    }
    /**
     * @return The unique identifier of the source responder recipe
     * 
     */
    public String sourceResponderRecipeId() {
        return this.sourceResponderRecipeId;
    }
    /**
     * @return The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the responder recipe was created. Format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the responder recipe was last updated. Format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResponderRecipesResponderRecipeCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private List<GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule> effectiveResponderRules;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String owner;
        private List<GetResponderRecipesResponderRecipeCollectionItemResponderRule> responderRules;
        private String sourceResponderRecipeId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetResponderRecipesResponderRecipeCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.effectiveResponderRules = defaults.effectiveResponderRules;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.owner = defaults.owner;
    	      this.responderRules = defaults.responderRules;
    	      this.sourceResponderRecipeId = defaults.sourceResponderRecipeId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveResponderRules(List<GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule> effectiveResponderRules) {
            if (effectiveResponderRules == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "effectiveResponderRules");
            }
            this.effectiveResponderRules = effectiveResponderRules;
            return this;
        }
        public Builder effectiveResponderRules(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule... effectiveResponderRules) {
            return effectiveResponderRules(List.of(effectiveResponderRules));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "owner");
            }
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder responderRules(List<GetResponderRecipesResponderRecipeCollectionItemResponderRule> responderRules) {
            if (responderRules == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "responderRules");
            }
            this.responderRules = responderRules;
            return this;
        }
        public Builder responderRules(GetResponderRecipesResponderRecipeCollectionItemResponderRule... responderRules) {
            return responderRules(List.of(responderRules));
        }
        @CustomType.Setter
        public Builder sourceResponderRecipeId(String sourceResponderRecipeId) {
            if (sourceResponderRecipeId == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "sourceResponderRecipeId");
            }
            this.sourceResponderRecipeId = sourceResponderRecipeId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetResponderRecipesResponderRecipeCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetResponderRecipesResponderRecipeCollectionItem build() {
            final var _resultValue = new GetResponderRecipesResponderRecipeCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.effectiveResponderRules = effectiveResponderRules;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.owner = owner;
            _resultValue.responderRules = responderRules;
            _resultValue.sourceResponderRecipeId = sourceResponderRecipeId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
