// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudMigrations.inputs.MigrationPlanStrategyArgs;
import com.pulumi.oci.CloudMigrations.inputs.MigrationPlanTargetEnvironmentArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationPlanArgs Empty = new MigrationPlanArgs();

    /**
     * (Updatable) Compartment identifier
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment identifier
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Migration plan identifier
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) Migration plan identifier
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The OCID of the associated migration.
     * 
     */
    @Import(name="migrationId", required=true)
    private Output<String> migrationId;

    /**
     * @return The OCID of the associated migration.
     * 
     */
    public Output<String> migrationId() {
        return this.migrationId;
    }

    /**
     * Source migraiton plan ID to be cloned.
     * 
     */
    @Import(name="sourceMigrationPlanId")
    private @Nullable Output<String> sourceMigrationPlanId;

    /**
     * @return Source migraiton plan ID to be cloned.
     * 
     */
    public Optional<Output<String>> sourceMigrationPlanId() {
        return Optional.ofNullable(this.sourceMigrationPlanId);
    }

    /**
     * (Updatable) List of strategies for the resources to be migrated.
     * 
     */
    @Import(name="strategies")
    private @Nullable Output<List<MigrationPlanStrategyArgs>> strategies;

    /**
     * @return (Updatable) List of strategies for the resources to be migrated.
     * 
     */
    public Optional<Output<List<MigrationPlanStrategyArgs>>> strategies() {
        return Optional.ofNullable(this.strategies);
    }

    /**
     * (Updatable) List of target environments.
     * 
     */
    @Import(name="targetEnvironments")
    private @Nullable Output<List<MigrationPlanTargetEnvironmentArgs>> targetEnvironments;

    /**
     * @return (Updatable) List of target environments.
     * 
     */
    public Optional<Output<List<MigrationPlanTargetEnvironmentArgs>>> targetEnvironments() {
        return Optional.ofNullable(this.targetEnvironments);
    }

    private MigrationPlanArgs() {}

    private MigrationPlanArgs(MigrationPlanArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.migrationId = $.migrationId;
        this.sourceMigrationPlanId = $.sourceMigrationPlanId;
        this.strategies = $.strategies;
        this.targetEnvironments = $.targetEnvironments;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationPlanArgs $;

        public Builder() {
            $ = new MigrationPlanArgs();
        }

        public Builder(MigrationPlanArgs defaults) {
            $ = new MigrationPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) Compartment identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param migrationId The OCID of the associated migration.
         * 
         * @return builder
         * 
         */
        public Builder migrationId(Output<String> migrationId) {
            $.migrationId = migrationId;
            return this;
        }

        /**
         * @param migrationId The OCID of the associated migration.
         * 
         * @return builder
         * 
         */
        public Builder migrationId(String migrationId) {
            return migrationId(Output.of(migrationId));
        }

        /**
         * @param sourceMigrationPlanId Source migraiton plan ID to be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceMigrationPlanId(@Nullable Output<String> sourceMigrationPlanId) {
            $.sourceMigrationPlanId = sourceMigrationPlanId;
            return this;
        }

        /**
         * @param sourceMigrationPlanId Source migraiton plan ID to be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceMigrationPlanId(String sourceMigrationPlanId) {
            return sourceMigrationPlanId(Output.of(sourceMigrationPlanId));
        }

        /**
         * @param strategies (Updatable) List of strategies for the resources to be migrated.
         * 
         * @return builder
         * 
         */
        public Builder strategies(@Nullable Output<List<MigrationPlanStrategyArgs>> strategies) {
            $.strategies = strategies;
            return this;
        }

        /**
         * @param strategies (Updatable) List of strategies for the resources to be migrated.
         * 
         * @return builder
         * 
         */
        public Builder strategies(List<MigrationPlanStrategyArgs> strategies) {
            return strategies(Output.of(strategies));
        }

        /**
         * @param strategies (Updatable) List of strategies for the resources to be migrated.
         * 
         * @return builder
         * 
         */
        public Builder strategies(MigrationPlanStrategyArgs... strategies) {
            return strategies(List.of(strategies));
        }

        /**
         * @param targetEnvironments (Updatable) List of target environments.
         * 
         * @return builder
         * 
         */
        public Builder targetEnvironments(@Nullable Output<List<MigrationPlanTargetEnvironmentArgs>> targetEnvironments) {
            $.targetEnvironments = targetEnvironments;
            return this;
        }

        /**
         * @param targetEnvironments (Updatable) List of target environments.
         * 
         * @return builder
         * 
         */
        public Builder targetEnvironments(List<MigrationPlanTargetEnvironmentArgs> targetEnvironments) {
            return targetEnvironments(Output.of(targetEnvironments));
        }

        /**
         * @param targetEnvironments (Updatable) List of target environments.
         * 
         * @return builder
         * 
         */
        public Builder targetEnvironments(MigrationPlanTargetEnvironmentArgs... targetEnvironments) {
            return targetEnvironments(List.of(targetEnvironments));
        }

        public MigrationPlanArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("MigrationPlanArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("MigrationPlanArgs", "displayName");
            }
            if ($.migrationId == null) {
                throw new MissingRequiredPropertyException("MigrationPlanArgs", "migrationId");
            }
            return $;
        }
    }

}
