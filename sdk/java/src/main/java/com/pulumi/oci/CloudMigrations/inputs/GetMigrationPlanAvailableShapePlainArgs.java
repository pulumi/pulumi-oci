// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMigrationPlanAvailableShapePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMigrationPlanAvailableShapePlainArgs Empty = new GetMigrationPlanAvailableShapePlainArgs();

    /**
     * The availability domain in which to list resources.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable String availabilityDomain;

    /**
     * @return The availability domain in which to list resources.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The ID of the Dvh in which to list resources.
     * 
     */
    @Import(name="dvhHostId")
    private @Nullable String dvhHostId;

    /**
     * @return The ID of the Dvh in which to list resources.
     * 
     */
    public Optional<String> dvhHostId() {
        return Optional.ofNullable(this.dvhHostId);
    }

    /**
     * Unique migration plan identifier
     * 
     */
    @Import(name="migrationPlanId", required=true)
    private String migrationPlanId;

    /**
     * @return Unique migration plan identifier
     * 
     */
    public String migrationPlanId() {
        return this.migrationPlanId;
    }

    /**
     * The reserved capacity ID for which to list resources.
     * 
     */
    @Import(name="reservedCapacityId")
    private @Nullable String reservedCapacityId;

    /**
     * @return The reserved capacity ID for which to list resources.
     * 
     */
    public Optional<String> reservedCapacityId() {
        return Optional.ofNullable(this.reservedCapacityId);
    }

    private GetMigrationPlanAvailableShapePlainArgs() {}

    private GetMigrationPlanAvailableShapePlainArgs(GetMigrationPlanAvailableShapePlainArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.dvhHostId = $.dvhHostId;
        this.migrationPlanId = $.migrationPlanId;
        this.reservedCapacityId = $.reservedCapacityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMigrationPlanAvailableShapePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMigrationPlanAvailableShapePlainArgs $;

        public Builder() {
            $ = new GetMigrationPlanAvailableShapePlainArgs();
        }

        public Builder(GetMigrationPlanAvailableShapePlainArgs defaults) {
            $ = new GetMigrationPlanAvailableShapePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The availability domain in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param dvhHostId The ID of the Dvh in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder dvhHostId(@Nullable String dvhHostId) {
            $.dvhHostId = dvhHostId;
            return this;
        }

        /**
         * @param migrationPlanId Unique migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanId(String migrationPlanId) {
            $.migrationPlanId = migrationPlanId;
            return this;
        }

        /**
         * @param reservedCapacityId The reserved capacity ID for which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder reservedCapacityId(@Nullable String reservedCapacityId) {
            $.reservedCapacityId = reservedCapacityId;
            return this;
        }

        public GetMigrationPlanAvailableShapePlainArgs build() {
            if ($.migrationPlanId == null) {
                throw new MissingRequiredPropertyException("GetMigrationPlanAvailableShapePlainArgs", "migrationPlanId");
            }
            return $;
        }
    }

}
