// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CloudMigrations.inputs.GetMigrationPlanAvailableShapesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMigrationPlanAvailableShapesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMigrationPlanAvailableShapesArgs Empty = new GetMigrationPlanAvailableShapesArgs();

    /**
     * The availability domain in which to list resources.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain in which to list resources.
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The ID of the Dvh in which to list resources.
     * 
     */
    @Import(name="dvhHostId")
    private @Nullable Output<String> dvhHostId;

    /**
     * @return The ID of the Dvh in which to list resources.
     * 
     */
    public Optional<Output<String>> dvhHostId() {
        return Optional.ofNullable(this.dvhHostId);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetMigrationPlanAvailableShapesFilterArgs>> filters;

    public Optional<Output<List<GetMigrationPlanAvailableShapesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique migration plan identifier
     * 
     */
    @Import(name="migrationPlanId", required=true)
    private Output<String> migrationPlanId;

    /**
     * @return Unique migration plan identifier
     * 
     */
    public Output<String> migrationPlanId() {
        return this.migrationPlanId;
    }

    /**
     * The reserved capacity ID for which to list resources.
     * 
     */
    @Import(name="reservedCapacityId")
    private @Nullable Output<String> reservedCapacityId;

    /**
     * @return The reserved capacity ID for which to list resources.
     * 
     */
    public Optional<Output<String>> reservedCapacityId() {
        return Optional.ofNullable(this.reservedCapacityId);
    }

    private GetMigrationPlanAvailableShapesArgs() {}

    private GetMigrationPlanAvailableShapesArgs(GetMigrationPlanAvailableShapesArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.dvhHostId = $.dvhHostId;
        this.filters = $.filters;
        this.migrationPlanId = $.migrationPlanId;
        this.reservedCapacityId = $.reservedCapacityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMigrationPlanAvailableShapesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMigrationPlanAvailableShapesArgs $;

        public Builder() {
            $ = new GetMigrationPlanAvailableShapesArgs();
        }

        public Builder(GetMigrationPlanAvailableShapesArgs defaults) {
            $ = new GetMigrationPlanAvailableShapesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The availability domain in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dvhHostId The ID of the Dvh in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder dvhHostId(@Nullable Output<String> dvhHostId) {
            $.dvhHostId = dvhHostId;
            return this;
        }

        /**
         * @param dvhHostId The ID of the Dvh in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder dvhHostId(String dvhHostId) {
            return dvhHostId(Output.of(dvhHostId));
        }

        public Builder filters(@Nullable Output<List<GetMigrationPlanAvailableShapesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMigrationPlanAvailableShapesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMigrationPlanAvailableShapesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param migrationPlanId Unique migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanId(Output<String> migrationPlanId) {
            $.migrationPlanId = migrationPlanId;
            return this;
        }

        /**
         * @param migrationPlanId Unique migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanId(String migrationPlanId) {
            return migrationPlanId(Output.of(migrationPlanId));
        }

        /**
         * @param reservedCapacityId The reserved capacity ID for which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder reservedCapacityId(@Nullable Output<String> reservedCapacityId) {
            $.reservedCapacityId = reservedCapacityId;
            return this;
        }

        /**
         * @param reservedCapacityId The reserved capacity ID for which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder reservedCapacityId(String reservedCapacityId) {
            return reservedCapacityId(Output.of(reservedCapacityId));
        }

        public GetMigrationPlanAvailableShapesArgs build() {
            $.migrationPlanId = Objects.requireNonNull($.migrationPlanId, "expected parameter 'migrationPlanId' to be non-null");
            return $;
        }
    }

}
