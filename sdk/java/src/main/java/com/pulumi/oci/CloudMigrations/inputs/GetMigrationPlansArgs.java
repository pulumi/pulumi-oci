// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CloudMigrations.inputs.GetMigrationPlansFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMigrationPlansArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMigrationPlansArgs Empty = new GetMigrationPlansArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return only resources that match the entire given display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire given display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetMigrationPlansFilterArgs>> filters;

    public Optional<Output<List<GetMigrationPlansFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique migration identifier
     * 
     */
    @Import(name="migrationId")
    private @Nullable Output<String> migrationId;

    /**
     * @return Unique migration identifier
     * 
     */
    public Optional<Output<String>> migrationId() {
        return Optional.ofNullable(this.migrationId);
    }

    /**
     * Unique migration plan identifier
     * 
     */
    @Import(name="migrationPlanId")
    private @Nullable Output<String> migrationPlanId;

    /**
     * @return Unique migration plan identifier
     * 
     */
    public Optional<Output<String>> migrationPlanId() {
        return Optional.ofNullable(this.migrationPlanId);
    }

    /**
     * The current state of the migration plan.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the migration plan.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetMigrationPlansArgs() {}

    private GetMigrationPlansArgs(GetMigrationPlansArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.migrationId = $.migrationId;
        this.migrationPlanId = $.migrationPlanId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMigrationPlansArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMigrationPlansArgs $;

        public Builder() {
            $ = new GetMigrationPlansArgs();
        }

        public Builder(GetMigrationPlansArgs defaults) {
            $ = new GetMigrationPlansArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only resources that match the entire given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetMigrationPlansFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMigrationPlansFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMigrationPlansFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param migrationId Unique migration identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationId(@Nullable Output<String> migrationId) {
            $.migrationId = migrationId;
            return this;
        }

        /**
         * @param migrationId Unique migration identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationId(String migrationId) {
            return migrationId(Output.of(migrationId));
        }

        /**
         * @param migrationPlanId Unique migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanId(@Nullable Output<String> migrationPlanId) {
            $.migrationPlanId = migrationPlanId;
            return this;
        }

        /**
         * @param migrationPlanId Unique migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanId(String migrationPlanId) {
            return migrationPlanId(Output.of(migrationPlanId));
        }

        /**
         * @param state The current state of the migration plan.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the migration plan.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetMigrationPlansArgs build() {
            return $;
        }
    }

}
