// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetTargetAssetArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTargetAssetArgs Empty = new GetTargetAssetArgs();

    /**
     * Unique target asset identifier
     * 
     */
    @Import(name="targetAssetId", required=true)
    private Output<String> targetAssetId;

    /**
     * @return Unique target asset identifier
     * 
     */
    public Output<String> targetAssetId() {
        return this.targetAssetId;
    }

    private GetTargetAssetArgs() {}

    private GetTargetAssetArgs(GetTargetAssetArgs $) {
        this.targetAssetId = $.targetAssetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTargetAssetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTargetAssetArgs $;

        public Builder() {
            $ = new GetTargetAssetArgs();
        }

        public Builder(GetTargetAssetArgs defaults) {
            $ = new GetTargetAssetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetAssetId Unique target asset identifier
         * 
         * @return builder
         * 
         */
        public Builder targetAssetId(Output<String> targetAssetId) {
            $.targetAssetId = targetAssetId;
            return this;
        }

        /**
         * @param targetAssetId Unique target asset identifier
         * 
         * @return builder
         * 
         */
        public Builder targetAssetId(String targetAssetId) {
            return targetAssetId(Output.of(targetAssetId));
        }

        public GetTargetAssetArgs build() {
            $.targetAssetId = Objects.requireNonNull($.targetAssetId, "expected parameter 'targetAssetId' to be non-null");
            return $;
        }
    }

}
