// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationAssetState extends com.pulumi.resources.ResourceArgs {

    public static final MigrationAssetState Empty = new MigrationAssetState();

    /**
     * Availability domain
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return Availability domain
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * Compartment Identifier
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * List of migration assets that depend on the asset.
     * 
     */
    @Import(name="dependedOnBies")
    private @Nullable Output<List<String>> dependedOnBies;

    /**
     * @return List of migration assets that depend on the asset.
     * 
     */
    public Optional<Output<List<String>>> dependedOnBies() {
        return Optional.ofNullable(this.dependedOnBies);
    }

    /**
     * (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * OCID of an asset for an inventory.
     * 
     */
    @Import(name="inventoryAssetId")
    private @Nullable Output<String> inventoryAssetId;

    /**
     * @return OCID of an asset for an inventory.
     * 
     */
    public Optional<Output<String>> inventoryAssetId() {
        return Optional.ofNullable(this.inventoryAssetId);
    }

    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    @Import(name="migrationAssetDependsOns")
    private @Nullable Output<List<String>> migrationAssetDependsOns;

    public Optional<Output<List<String>>> migrationAssetDependsOns() {
        return Optional.ofNullable(this.migrationAssetDependsOns);
    }

    /**
     * OCID of the associated migration.
     * 
     */
    @Import(name="migrationId")
    private @Nullable Output<String> migrationId;

    /**
     * @return OCID of the associated migration.
     * 
     */
    public Optional<Output<String>> migrationId() {
        return Optional.ofNullable(this.migrationId);
    }

    /**
     * List of notifications
     * 
     */
    @Import(name="notifications")
    private @Nullable Output<List<String>> notifications;

    /**
     * @return List of notifications
     * 
     */
    public Optional<Output<List<String>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    /**
     * The parent snapshot of the migration asset to be used by the replication task.
     * 
     */
    @Import(name="parentSnapshot")
    private @Nullable Output<String> parentSnapshot;

    /**
     * @return The parent snapshot of the migration asset to be used by the replication task.
     * 
     */
    public Optional<Output<String>> parentSnapshot() {
        return Optional.ofNullable(this.parentSnapshot);
    }

    /**
     * Replication compartment identifier
     * 
     */
    @Import(name="replicationCompartmentId")
    private @Nullable Output<String> replicationCompartmentId;

    /**
     * @return Replication compartment identifier
     * 
     */
    public Optional<Output<String>> replicationCompartmentId() {
        return Optional.ofNullable(this.replicationCompartmentId);
    }

    /**
     * (Updatable) Replication schedule identifier
     * 
     */
    @Import(name="replicationScheduleId")
    private @Nullable Output<String> replicationScheduleId;

    /**
     * @return (Updatable) Replication schedule identifier
     * 
     */
    public Optional<Output<String>> replicationScheduleId() {
        return Optional.ofNullable(this.replicationScheduleId);
    }

    /**
     * Name of snapshot bucket
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="snapShotBucketName")
    private @Nullable Output<String> snapShotBucketName;

    /**
     * @return Name of snapshot bucket
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> snapShotBucketName() {
        return Optional.ofNullable(this.snapShotBucketName);
    }

    /**
     * Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="snapshots")
    private @Nullable Output<Map<String,Object>> snapshots;

    /**
     * @return Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> snapshots() {
        return Optional.ofNullable(this.snapshots);
    }

    /**
     * OCID that is referenced to an asset for an inventory.
     * 
     */
    @Import(name="sourceAssetId")
    private @Nullable Output<String> sourceAssetId;

    /**
     * @return OCID that is referenced to an asset for an inventory.
     * 
     */
    public Optional<Output<String>> sourceAssetId() {
        return Optional.ofNullable(this.sourceAssetId);
    }

    /**
     * The current state of the migration asset.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the migration asset.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Tenancy identifier
     * 
     */
    @Import(name="tenancyId")
    private @Nullable Output<String> tenancyId;

    /**
     * @return Tenancy identifier
     * 
     */
    public Optional<Output<String>> tenancyId() {
        return Optional.ofNullable(this.tenancyId);
    }

    /**
     * The time when the migration asset was created. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time when the migration asset was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time when the migration asset was updated. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time when the migration asset was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The type of asset referenced for inventory.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of asset referenced for inventory.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private MigrationAssetState() {}

    private MigrationAssetState(MigrationAssetState $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.dependedOnBies = $.dependedOnBies;
        this.displayName = $.displayName;
        this.inventoryAssetId = $.inventoryAssetId;
        this.lifecycleDetails = $.lifecycleDetails;
        this.migrationAssetDependsOns = $.migrationAssetDependsOns;
        this.migrationId = $.migrationId;
        this.notifications = $.notifications;
        this.parentSnapshot = $.parentSnapshot;
        this.replicationCompartmentId = $.replicationCompartmentId;
        this.replicationScheduleId = $.replicationScheduleId;
        this.snapShotBucketName = $.snapShotBucketName;
        this.snapshots = $.snapshots;
        this.sourceAssetId = $.sourceAssetId;
        this.state = $.state;
        this.tenancyId = $.tenancyId;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationAssetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationAssetState $;

        public Builder() {
            $ = new MigrationAssetState();
        }

        public Builder(MigrationAssetState defaults) {
            $ = new MigrationAssetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain Availability domain
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain Availability domain
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param compartmentId Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dependedOnBies List of migration assets that depend on the asset.
         * 
         * @return builder
         * 
         */
        public Builder dependedOnBies(@Nullable Output<List<String>> dependedOnBies) {
            $.dependedOnBies = dependedOnBies;
            return this;
        }

        /**
         * @param dependedOnBies List of migration assets that depend on the asset.
         * 
         * @return builder
         * 
         */
        public Builder dependedOnBies(List<String> dependedOnBies) {
            return dependedOnBies(Output.of(dependedOnBies));
        }

        /**
         * @param dependedOnBies List of migration assets that depend on the asset.
         * 
         * @return builder
         * 
         */
        public Builder dependedOnBies(String... dependedOnBies) {
            return dependedOnBies(List.of(dependedOnBies));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param inventoryAssetId OCID of an asset for an inventory.
         * 
         * @return builder
         * 
         */
        public Builder inventoryAssetId(@Nullable Output<String> inventoryAssetId) {
            $.inventoryAssetId = inventoryAssetId;
            return this;
        }

        /**
         * @param inventoryAssetId OCID of an asset for an inventory.
         * 
         * @return builder
         * 
         */
        public Builder inventoryAssetId(String inventoryAssetId) {
            return inventoryAssetId(Output.of(inventoryAssetId));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        public Builder migrationAssetDependsOns(@Nullable Output<List<String>> migrationAssetDependsOns) {
            $.migrationAssetDependsOns = migrationAssetDependsOns;
            return this;
        }

        public Builder migrationAssetDependsOns(List<String> migrationAssetDependsOns) {
            return migrationAssetDependsOns(Output.of(migrationAssetDependsOns));
        }

        public Builder migrationAssetDependsOns(String... migrationAssetDependsOns) {
            return migrationAssetDependsOns(List.of(migrationAssetDependsOns));
        }

        /**
         * @param migrationId OCID of the associated migration.
         * 
         * @return builder
         * 
         */
        public Builder migrationId(@Nullable Output<String> migrationId) {
            $.migrationId = migrationId;
            return this;
        }

        /**
         * @param migrationId OCID of the associated migration.
         * 
         * @return builder
         * 
         */
        public Builder migrationId(String migrationId) {
            return migrationId(Output.of(migrationId));
        }

        /**
         * @param notifications List of notifications
         * 
         * @return builder
         * 
         */
        public Builder notifications(@Nullable Output<List<String>> notifications) {
            $.notifications = notifications;
            return this;
        }

        /**
         * @param notifications List of notifications
         * 
         * @return builder
         * 
         */
        public Builder notifications(List<String> notifications) {
            return notifications(Output.of(notifications));
        }

        /**
         * @param notifications List of notifications
         * 
         * @return builder
         * 
         */
        public Builder notifications(String... notifications) {
            return notifications(List.of(notifications));
        }

        /**
         * @param parentSnapshot The parent snapshot of the migration asset to be used by the replication task.
         * 
         * @return builder
         * 
         */
        public Builder parentSnapshot(@Nullable Output<String> parentSnapshot) {
            $.parentSnapshot = parentSnapshot;
            return this;
        }

        /**
         * @param parentSnapshot The parent snapshot of the migration asset to be used by the replication task.
         * 
         * @return builder
         * 
         */
        public Builder parentSnapshot(String parentSnapshot) {
            return parentSnapshot(Output.of(parentSnapshot));
        }

        /**
         * @param replicationCompartmentId Replication compartment identifier
         * 
         * @return builder
         * 
         */
        public Builder replicationCompartmentId(@Nullable Output<String> replicationCompartmentId) {
            $.replicationCompartmentId = replicationCompartmentId;
            return this;
        }

        /**
         * @param replicationCompartmentId Replication compartment identifier
         * 
         * @return builder
         * 
         */
        public Builder replicationCompartmentId(String replicationCompartmentId) {
            return replicationCompartmentId(Output.of(replicationCompartmentId));
        }

        /**
         * @param replicationScheduleId (Updatable) Replication schedule identifier
         * 
         * @return builder
         * 
         */
        public Builder replicationScheduleId(@Nullable Output<String> replicationScheduleId) {
            $.replicationScheduleId = replicationScheduleId;
            return this;
        }

        /**
         * @param replicationScheduleId (Updatable) Replication schedule identifier
         * 
         * @return builder
         * 
         */
        public Builder replicationScheduleId(String replicationScheduleId) {
            return replicationScheduleId(Output.of(replicationScheduleId));
        }

        /**
         * @param snapShotBucketName Name of snapshot bucket
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder snapShotBucketName(@Nullable Output<String> snapShotBucketName) {
            $.snapShotBucketName = snapShotBucketName;
            return this;
        }

        /**
         * @param snapShotBucketName Name of snapshot bucket
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder snapShotBucketName(String snapShotBucketName) {
            return snapShotBucketName(Output.of(snapShotBucketName));
        }

        /**
         * @param snapshots Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder snapshots(@Nullable Output<Map<String,Object>> snapshots) {
            $.snapshots = snapshots;
            return this;
        }

        /**
         * @param snapshots Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder snapshots(Map<String,Object> snapshots) {
            return snapshots(Output.of(snapshots));
        }

        /**
         * @param sourceAssetId OCID that is referenced to an asset for an inventory.
         * 
         * @return builder
         * 
         */
        public Builder sourceAssetId(@Nullable Output<String> sourceAssetId) {
            $.sourceAssetId = sourceAssetId;
            return this;
        }

        /**
         * @param sourceAssetId OCID that is referenced to an asset for an inventory.
         * 
         * @return builder
         * 
         */
        public Builder sourceAssetId(String sourceAssetId) {
            return sourceAssetId(Output.of(sourceAssetId));
        }

        /**
         * @param state The current state of the migration asset.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the migration asset.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param tenancyId Tenancy identifier
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(@Nullable Output<String> tenancyId) {
            $.tenancyId = tenancyId;
            return this;
        }

        /**
         * @param tenancyId Tenancy identifier
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(String tenancyId) {
            return tenancyId(Output.of(tenancyId));
        }

        /**
         * @param timeCreated The time when the migration asset was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time when the migration asset was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time when the migration asset was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time when the migration asset was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param type The type of asset referenced for inventory.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of asset referenced for inventory.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public MigrationAssetState build() {
            return $;
        }
    }

}
