// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CloudMigrations.inputs.MigrationPlanMigrationPlanStatArgs;
import com.pulumi.oci.CloudMigrations.inputs.MigrationPlanStrategyArgs;
import com.pulumi.oci.CloudMigrations.inputs.MigrationPlanTargetEnvironmentArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationPlanState extends com.pulumi.resources.ResourceArgs {

    public static final MigrationPlanState Empty = new MigrationPlanState();

    /**
     * Limits of the resources that are needed for migration. Example: {&#34;BlockVolume&#34;: 2, &#34;VCN&#34;: 1}
     * 
     */
    @Import(name="calculatedLimits")
    private @Nullable Output<Map<String,Object>> calculatedLimits;

    /**
     * @return Limits of the resources that are needed for migration. Example: {&#34;BlockVolume&#34;: 2, &#34;VCN&#34;: 1}
     * 
     */
    public Optional<Output<Map<String,Object>>> calculatedLimits() {
        return Optional.ofNullable(this.calculatedLimits);
    }

    /**
     * (Updatable) Compartment identifier
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment identifier
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Migration plan identifier
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Migration plan identifier
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The OCID of the associated migration.
     * 
     */
    @Import(name="migrationId")
    private @Nullable Output<String> migrationId;

    /**
     * @return The OCID of the associated migration.
     * 
     */
    public Optional<Output<String>> migrationId() {
        return Optional.ofNullable(this.migrationId);
    }

    /**
     * Status of the migration plan.
     * 
     */
    @Import(name="migrationPlanStats")
    private @Nullable Output<List<MigrationPlanMigrationPlanStatArgs>> migrationPlanStats;

    /**
     * @return Status of the migration plan.
     * 
     */
    public Optional<Output<List<MigrationPlanMigrationPlanStatArgs>>> migrationPlanStats() {
        return Optional.ofNullable(this.migrationPlanStats);
    }

    /**
     * OCID of the referenced ORM job.
     * 
     */
    @Import(name="referenceToRmsStack")
    private @Nullable Output<String> referenceToRmsStack;

    /**
     * @return OCID of the referenced ORM job.
     * 
     */
    public Optional<Output<String>> referenceToRmsStack() {
        return Optional.ofNullable(this.referenceToRmsStack);
    }

    /**
     * Source migraiton plan ID to be cloned.
     * 
     */
    @Import(name="sourceMigrationPlanId")
    private @Nullable Output<String> sourceMigrationPlanId;

    /**
     * @return Source migraiton plan ID to be cloned.
     * 
     */
    public Optional<Output<String>> sourceMigrationPlanId() {
        return Optional.ofNullable(this.sourceMigrationPlanId);
    }

    /**
     * The current state of the migration plan.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the migration plan.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) List of strategies for the resources to be migrated.
     * 
     */
    @Import(name="strategies")
    private @Nullable Output<List<MigrationPlanStrategyArgs>> strategies;

    /**
     * @return (Updatable) List of strategies for the resources to be migrated.
     * 
     */
    public Optional<Output<List<MigrationPlanStrategyArgs>>> strategies() {
        return Optional.ofNullable(this.strategies);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * (Updatable) List of target environments.
     * 
     */
    @Import(name="targetEnvironments")
    private @Nullable Output<List<MigrationPlanTargetEnvironmentArgs>> targetEnvironments;

    /**
     * @return (Updatable) List of target environments.
     * 
     */
    public Optional<Output<List<MigrationPlanTargetEnvironmentArgs>>> targetEnvironments() {
        return Optional.ofNullable(this.targetEnvironments);
    }

    /**
     * The time when the migration plan was created. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time when the migration plan was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time when the migration plan was updated. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time when the migration plan was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private MigrationPlanState() {}

    private MigrationPlanState(MigrationPlanState $) {
        this.calculatedLimits = $.calculatedLimits;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.migrationId = $.migrationId;
        this.migrationPlanStats = $.migrationPlanStats;
        this.referenceToRmsStack = $.referenceToRmsStack;
        this.sourceMigrationPlanId = $.sourceMigrationPlanId;
        this.state = $.state;
        this.strategies = $.strategies;
        this.systemTags = $.systemTags;
        this.targetEnvironments = $.targetEnvironments;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationPlanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationPlanState $;

        public Builder() {
            $ = new MigrationPlanState();
        }

        public Builder(MigrationPlanState defaults) {
            $ = new MigrationPlanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param calculatedLimits Limits of the resources that are needed for migration. Example: {&#34;BlockVolume&#34;: 2, &#34;VCN&#34;: 1}
         * 
         * @return builder
         * 
         */
        public Builder calculatedLimits(@Nullable Output<Map<String,Object>> calculatedLimits) {
            $.calculatedLimits = calculatedLimits;
            return this;
        }

        /**
         * @param calculatedLimits Limits of the resources that are needed for migration. Example: {&#34;BlockVolume&#34;: 2, &#34;VCN&#34;: 1}
         * 
         * @return builder
         * 
         */
        public Builder calculatedLimits(Map<String,Object> calculatedLimits) {
            return calculatedLimits(Output.of(calculatedLimits));
        }

        /**
         * @param compartmentId (Updatable) Compartment identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Migration plan identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param migrationId The OCID of the associated migration.
         * 
         * @return builder
         * 
         */
        public Builder migrationId(@Nullable Output<String> migrationId) {
            $.migrationId = migrationId;
            return this;
        }

        /**
         * @param migrationId The OCID of the associated migration.
         * 
         * @return builder
         * 
         */
        public Builder migrationId(String migrationId) {
            return migrationId(Output.of(migrationId));
        }

        /**
         * @param migrationPlanStats Status of the migration plan.
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanStats(@Nullable Output<List<MigrationPlanMigrationPlanStatArgs>> migrationPlanStats) {
            $.migrationPlanStats = migrationPlanStats;
            return this;
        }

        /**
         * @param migrationPlanStats Status of the migration plan.
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanStats(List<MigrationPlanMigrationPlanStatArgs> migrationPlanStats) {
            return migrationPlanStats(Output.of(migrationPlanStats));
        }

        /**
         * @param migrationPlanStats Status of the migration plan.
         * 
         * @return builder
         * 
         */
        public Builder migrationPlanStats(MigrationPlanMigrationPlanStatArgs... migrationPlanStats) {
            return migrationPlanStats(List.of(migrationPlanStats));
        }

        /**
         * @param referenceToRmsStack OCID of the referenced ORM job.
         * 
         * @return builder
         * 
         */
        public Builder referenceToRmsStack(@Nullable Output<String> referenceToRmsStack) {
            $.referenceToRmsStack = referenceToRmsStack;
            return this;
        }

        /**
         * @param referenceToRmsStack OCID of the referenced ORM job.
         * 
         * @return builder
         * 
         */
        public Builder referenceToRmsStack(String referenceToRmsStack) {
            return referenceToRmsStack(Output.of(referenceToRmsStack));
        }

        /**
         * @param sourceMigrationPlanId Source migraiton plan ID to be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceMigrationPlanId(@Nullable Output<String> sourceMigrationPlanId) {
            $.sourceMigrationPlanId = sourceMigrationPlanId;
            return this;
        }

        /**
         * @param sourceMigrationPlanId Source migraiton plan ID to be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceMigrationPlanId(String sourceMigrationPlanId) {
            return sourceMigrationPlanId(Output.of(sourceMigrationPlanId));
        }

        /**
         * @param state The current state of the migration plan.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the migration plan.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param strategies (Updatable) List of strategies for the resources to be migrated.
         * 
         * @return builder
         * 
         */
        public Builder strategies(@Nullable Output<List<MigrationPlanStrategyArgs>> strategies) {
            $.strategies = strategies;
            return this;
        }

        /**
         * @param strategies (Updatable) List of strategies for the resources to be migrated.
         * 
         * @return builder
         * 
         */
        public Builder strategies(List<MigrationPlanStrategyArgs> strategies) {
            return strategies(Output.of(strategies));
        }

        /**
         * @param strategies (Updatable) List of strategies for the resources to be migrated.
         * 
         * @return builder
         * 
         */
        public Builder strategies(MigrationPlanStrategyArgs... strategies) {
            return strategies(List.of(strategies));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param targetEnvironments (Updatable) List of target environments.
         * 
         * @return builder
         * 
         */
        public Builder targetEnvironments(@Nullable Output<List<MigrationPlanTargetEnvironmentArgs>> targetEnvironments) {
            $.targetEnvironments = targetEnvironments;
            return this;
        }

        /**
         * @param targetEnvironments (Updatable) List of target environments.
         * 
         * @return builder
         * 
         */
        public Builder targetEnvironments(List<MigrationPlanTargetEnvironmentArgs> targetEnvironments) {
            return targetEnvironments(Output.of(targetEnvironments));
        }

        /**
         * @param targetEnvironments (Updatable) List of target environments.
         * 
         * @return builder
         * 
         */
        public Builder targetEnvironments(MigrationPlanTargetEnvironmentArgs... targetEnvironments) {
            return targetEnvironments(List.of(targetEnvironments));
        }

        /**
         * @param timeCreated The time when the migration plan was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time when the migration plan was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time when the migration plan was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time when the migration plan was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public MigrationPlanState build() {
            return $;
        }
    }

}
