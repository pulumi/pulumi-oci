// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetAssetEstimatedCostStorageVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetAssetEstimatedCostStorageVolumeArgs Empty = new TargetAssetEstimatedCostStorageVolumeArgs();

    /**
     * Gigabyte storage capacity
     * 
     */
    @Import(name="capacityGb")
    private @Nullable Output<Double> capacityGb;

    /**
     * @return Gigabyte storage capacity
     * 
     */
    public Optional<Output<Double>> capacityGb() {
        return Optional.ofNullable(this.capacityGb);
    }

    /**
     * Volume description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Volume description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Gigabyte storage capacity per month.
     * 
     */
    @Import(name="totalGbPerMonth")
    private @Nullable Output<Double> totalGbPerMonth;

    /**
     * @return Gigabyte storage capacity per month.
     * 
     */
    public Optional<Output<Double>> totalGbPerMonth() {
        return Optional.ofNullable(this.totalGbPerMonth);
    }

    /**
     * Gigabyte storage capacity per month by subscription
     * 
     */
    @Import(name="totalGbPerMonthBySubscription")
    private @Nullable Output<Double> totalGbPerMonthBySubscription;

    /**
     * @return Gigabyte storage capacity per month by subscription
     * 
     */
    public Optional<Output<Double>> totalGbPerMonthBySubscription() {
        return Optional.ofNullable(this.totalGbPerMonthBySubscription);
    }

    private TargetAssetEstimatedCostStorageVolumeArgs() {}

    private TargetAssetEstimatedCostStorageVolumeArgs(TargetAssetEstimatedCostStorageVolumeArgs $) {
        this.capacityGb = $.capacityGb;
        this.description = $.description;
        this.totalGbPerMonth = $.totalGbPerMonth;
        this.totalGbPerMonthBySubscription = $.totalGbPerMonthBySubscription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetAssetEstimatedCostStorageVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetAssetEstimatedCostStorageVolumeArgs $;

        public Builder() {
            $ = new TargetAssetEstimatedCostStorageVolumeArgs();
        }

        public Builder(TargetAssetEstimatedCostStorageVolumeArgs defaults) {
            $ = new TargetAssetEstimatedCostStorageVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityGb Gigabyte storage capacity
         * 
         * @return builder
         * 
         */
        public Builder capacityGb(@Nullable Output<Double> capacityGb) {
            $.capacityGb = capacityGb;
            return this;
        }

        /**
         * @param capacityGb Gigabyte storage capacity
         * 
         * @return builder
         * 
         */
        public Builder capacityGb(Double capacityGb) {
            return capacityGb(Output.of(capacityGb));
        }

        /**
         * @param description Volume description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Volume description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param totalGbPerMonth Gigabyte storage capacity per month.
         * 
         * @return builder
         * 
         */
        public Builder totalGbPerMonth(@Nullable Output<Double> totalGbPerMonth) {
            $.totalGbPerMonth = totalGbPerMonth;
            return this;
        }

        /**
         * @param totalGbPerMonth Gigabyte storage capacity per month.
         * 
         * @return builder
         * 
         */
        public Builder totalGbPerMonth(Double totalGbPerMonth) {
            return totalGbPerMonth(Output.of(totalGbPerMonth));
        }

        /**
         * @param totalGbPerMonthBySubscription Gigabyte storage capacity per month by subscription
         * 
         * @return builder
         * 
         */
        public Builder totalGbPerMonthBySubscription(@Nullable Output<Double> totalGbPerMonthBySubscription) {
            $.totalGbPerMonthBySubscription = totalGbPerMonthBySubscription;
            return this;
        }

        /**
         * @param totalGbPerMonthBySubscription Gigabyte storage capacity per month by subscription
         * 
         * @return builder
         * 
         */
        public Builder totalGbPerMonthBySubscription(Double totalGbPerMonthBySubscription) {
            return totalGbPerMonthBySubscription(Output.of(totalGbPerMonthBySubscription));
        }

        public TargetAssetEstimatedCostStorageVolumeArgs build() {
            return $;
        }
    }

}
