// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs Empty = new TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs();

    /**
     * (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. By default, it is false if not specified.
     * 
     */
    @Import(name="preserveBootVolume")
    private @Nullable Output<Boolean> preserveBootVolume;

    /**
     * @return (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. By default, it is false if not specified.
     * 
     */
    public Optional<Output<Boolean>> preserveBootVolume() {
        return Optional.ofNullable(this.preserveBootVolume);
    }

    /**
     * (Updatable) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs() {}

    private TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs(TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs $) {
        this.preserveBootVolume = $.preserveBootVolume;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs $;

        public Builder() {
            $ = new TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs();
        }

        public Builder(TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs defaults) {
            $ = new TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preserveBootVolume (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. By default, it is false if not specified.
         * 
         * @return builder
         * 
         */
        public Builder preserveBootVolume(@Nullable Output<Boolean> preserveBootVolume) {
            $.preserveBootVolume = preserveBootVolume;
            return this;
        }

        /**
         * @param preserveBootVolume (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. By default, it is false if not specified.
         * 
         * @return builder
         * 
         */
        public Builder preserveBootVolume(Boolean preserveBootVolume) {
            return preserveBootVolume(Output.of(preserveBootVolume));
        }

        /**
         * @param type (Updatable) The type of action to run when the instance is interrupted for eviction.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) The type of action to run when the instance is interrupted for eviction.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
