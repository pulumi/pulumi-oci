// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudMigrations.outputs.GetMigrationPlanAvailableShapeItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMigrationPlanAvailableShapeResult {
    /**
     * @return Availability domain of the shape.
     * 
     */
    private @Nullable String availabilityDomain;
    private @Nullable String compartmentId;
    private @Nullable String dvhHostId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Available shapes list.
     * 
     */
    private List<GetMigrationPlanAvailableShapeItem> items;
    private String migrationPlanId;
    private @Nullable String reservedCapacityId;

    private GetMigrationPlanAvailableShapeResult() {}
    /**
     * @return Availability domain of the shape.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> dvhHostId() {
        return Optional.ofNullable(this.dvhHostId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Available shapes list.
     * 
     */
    public List<GetMigrationPlanAvailableShapeItem> items() {
        return this.items;
    }
    public String migrationPlanId() {
        return this.migrationPlanId;
    }
    public Optional<String> reservedCapacityId() {
        return Optional.ofNullable(this.reservedCapacityId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationPlanAvailableShapeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private @Nullable String compartmentId;
        private @Nullable String dvhHostId;
        private String id;
        private List<GetMigrationPlanAvailableShapeItem> items;
        private String migrationPlanId;
        private @Nullable String reservedCapacityId;
        public Builder() {}
        public Builder(GetMigrationPlanAvailableShapeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dvhHostId = defaults.dvhHostId;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.migrationPlanId = defaults.migrationPlanId;
    	      this.reservedCapacityId = defaults.reservedCapacityId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dvhHostId(@Nullable String dvhHostId) {
            this.dvhHostId = dvhHostId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetMigrationPlanAvailableShapeItem> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public Builder items(GetMigrationPlanAvailableShapeItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder migrationPlanId(String migrationPlanId) {
            this.migrationPlanId = Objects.requireNonNull(migrationPlanId);
            return this;
        }
        @CustomType.Setter
        public Builder reservedCapacityId(@Nullable String reservedCapacityId) {
            this.reservedCapacityId = reservedCapacityId;
            return this;
        }
        public GetMigrationPlanAvailableShapeResult build() {
            final var o = new GetMigrationPlanAvailableShapeResult();
            o.availabilityDomain = availabilityDomain;
            o.compartmentId = compartmentId;
            o.dvhHostId = dvhHostId;
            o.id = id;
            o.items = items;
            o.migrationPlanId = migrationPlanId;
            o.reservedCapacityId = reservedCapacityId;
            return o;
        }
    }
}
