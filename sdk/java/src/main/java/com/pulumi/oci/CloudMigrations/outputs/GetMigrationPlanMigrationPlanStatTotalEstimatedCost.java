// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudMigrations.outputs.GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute;
import com.pulumi.oci.CloudMigrations.outputs.GetMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage;
import com.pulumi.oci.CloudMigrations.outputs.GetMigrationPlanMigrationPlanStatTotalEstimatedCostStorage;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMigrationPlanMigrationPlanStatTotalEstimatedCost {
    /**
     * @return Cost estimation for compute
     * 
     */
    private List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute> computes;
    /**
     * @return Currency code in the ISO format.
     * 
     */
    private String currencyCode;
    /**
     * @return Cost estimation for the OS image.
     * 
     */
    private List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage> osImages;
    /**
     * @return Cost estimation for storage
     * 
     */
    private List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostStorage> storages;
    /**
     * @return Subscription ID
     * 
     */
    private String subscriptionId;
    /**
     * @return Total estimation per month
     * 
     */
    private Double totalEstimationPerMonth;
    /**
     * @return Total estimation per month by subscription.
     * 
     */
    private Double totalEstimationPerMonthBySubscription;

    private GetMigrationPlanMigrationPlanStatTotalEstimatedCost() {}
    /**
     * @return Cost estimation for compute
     * 
     */
    public List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute> computes() {
        return this.computes;
    }
    /**
     * @return Currency code in the ISO format.
     * 
     */
    public String currencyCode() {
        return this.currencyCode;
    }
    /**
     * @return Cost estimation for the OS image.
     * 
     */
    public List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage> osImages() {
        return this.osImages;
    }
    /**
     * @return Cost estimation for storage
     * 
     */
    public List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostStorage> storages() {
        return this.storages;
    }
    /**
     * @return Subscription ID
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return Total estimation per month
     * 
     */
    public Double totalEstimationPerMonth() {
        return this.totalEstimationPerMonth;
    }
    /**
     * @return Total estimation per month by subscription.
     * 
     */
    public Double totalEstimationPerMonthBySubscription() {
        return this.totalEstimationPerMonthBySubscription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationPlanMigrationPlanStatTotalEstimatedCost defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute> computes;
        private String currencyCode;
        private List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage> osImages;
        private List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostStorage> storages;
        private String subscriptionId;
        private Double totalEstimationPerMonth;
        private Double totalEstimationPerMonthBySubscription;
        public Builder() {}
        public Builder(GetMigrationPlanMigrationPlanStatTotalEstimatedCost defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computes = defaults.computes;
    	      this.currencyCode = defaults.currencyCode;
    	      this.osImages = defaults.osImages;
    	      this.storages = defaults.storages;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.totalEstimationPerMonth = defaults.totalEstimationPerMonth;
    	      this.totalEstimationPerMonthBySubscription = defaults.totalEstimationPerMonthBySubscription;
        }

        @CustomType.Setter
        public Builder computes(List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute> computes) {
            if (computes == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCost", "computes");
            }
            this.computes = computes;
            return this;
        }
        public Builder computes(GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute... computes) {
            return computes(List.of(computes));
        }
        @CustomType.Setter
        public Builder currencyCode(String currencyCode) {
            if (currencyCode == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCost", "currencyCode");
            }
            this.currencyCode = currencyCode;
            return this;
        }
        @CustomType.Setter
        public Builder osImages(List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage> osImages) {
            if (osImages == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCost", "osImages");
            }
            this.osImages = osImages;
            return this;
        }
        public Builder osImages(GetMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage... osImages) {
            return osImages(List.of(osImages));
        }
        @CustomType.Setter
        public Builder storages(List<GetMigrationPlanMigrationPlanStatTotalEstimatedCostStorage> storages) {
            if (storages == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCost", "storages");
            }
            this.storages = storages;
            return this;
        }
        public Builder storages(GetMigrationPlanMigrationPlanStatTotalEstimatedCostStorage... storages) {
            return storages(List.of(storages));
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCost", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder totalEstimationPerMonth(Double totalEstimationPerMonth) {
            if (totalEstimationPerMonth == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCost", "totalEstimationPerMonth");
            }
            this.totalEstimationPerMonth = totalEstimationPerMonth;
            return this;
        }
        @CustomType.Setter
        public Builder totalEstimationPerMonthBySubscription(Double totalEstimationPerMonthBySubscription) {
            if (totalEstimationPerMonthBySubscription == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCost", "totalEstimationPerMonthBySubscription");
            }
            this.totalEstimationPerMonthBySubscription = totalEstimationPerMonthBySubscription;
            return this;
        }
        public GetMigrationPlanMigrationPlanStatTotalEstimatedCost build() {
            final var _resultValue = new GetMigrationPlanMigrationPlanStatTotalEstimatedCost();
            _resultValue.computes = computes;
            _resultValue.currencyCode = currencyCode;
            _resultValue.osImages = osImages;
            _resultValue.storages = storages;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.totalEstimationPerMonth = totalEstimationPerMonth;
            _resultValue.totalEstimationPerMonthBySubscription = totalEstimationPerMonthBySubscription;
            return _resultValue;
        }
    }
}
