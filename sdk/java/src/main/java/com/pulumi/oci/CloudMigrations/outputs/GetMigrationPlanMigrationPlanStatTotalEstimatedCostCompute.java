// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute {
    /**
     * @return Total number of GPU
     * 
     */
    private Double gpuCount;
    /**
     * @return GPU per hour
     * 
     */
    private Double gpuPerHour;
    /**
     * @return GPU per hour by subscription
     * 
     */
    private Double gpuPerHourBySubscription;
    /**
     * @return Total usage of memory
     * 
     */
    private Double memoryAmountGb;
    /**
     * @return Gigabyte per hour
     * 
     */
    private Double memoryGbPerHour;
    /**
     * @return Gigabyte per hour by subscription
     * 
     */
    private Double memoryGbPerHourBySubscription;
    /**
     * @return Total number of OCPUs
     * 
     */
    private Double ocpuCount;
    /**
     * @return OCPU per hour
     * 
     */
    private Double ocpuPerHour;
    /**
     * @return OCPU per hour by subscription
     * 
     */
    private Double ocpuPerHourBySubscription;
    /**
     * @return Total price per hour
     * 
     */
    private Double totalPerHour;
    /**
     * @return Total price per hour by subscription
     * 
     */
    private Double totalPerHourBySubscription;

    private GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute() {}
    /**
     * @return Total number of GPU
     * 
     */
    public Double gpuCount() {
        return this.gpuCount;
    }
    /**
     * @return GPU per hour
     * 
     */
    public Double gpuPerHour() {
        return this.gpuPerHour;
    }
    /**
     * @return GPU per hour by subscription
     * 
     */
    public Double gpuPerHourBySubscription() {
        return this.gpuPerHourBySubscription;
    }
    /**
     * @return Total usage of memory
     * 
     */
    public Double memoryAmountGb() {
        return this.memoryAmountGb;
    }
    /**
     * @return Gigabyte per hour
     * 
     */
    public Double memoryGbPerHour() {
        return this.memoryGbPerHour;
    }
    /**
     * @return Gigabyte per hour by subscription
     * 
     */
    public Double memoryGbPerHourBySubscription() {
        return this.memoryGbPerHourBySubscription;
    }
    /**
     * @return Total number of OCPUs
     * 
     */
    public Double ocpuCount() {
        return this.ocpuCount;
    }
    /**
     * @return OCPU per hour
     * 
     */
    public Double ocpuPerHour() {
        return this.ocpuPerHour;
    }
    /**
     * @return OCPU per hour by subscription
     * 
     */
    public Double ocpuPerHourBySubscription() {
        return this.ocpuPerHourBySubscription;
    }
    /**
     * @return Total price per hour
     * 
     */
    public Double totalPerHour() {
        return this.totalPerHour;
    }
    /**
     * @return Total price per hour by subscription
     * 
     */
    public Double totalPerHourBySubscription() {
        return this.totalPerHourBySubscription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double gpuCount;
        private Double gpuPerHour;
        private Double gpuPerHourBySubscription;
        private Double memoryAmountGb;
        private Double memoryGbPerHour;
        private Double memoryGbPerHourBySubscription;
        private Double ocpuCount;
        private Double ocpuPerHour;
        private Double ocpuPerHourBySubscription;
        private Double totalPerHour;
        private Double totalPerHourBySubscription;
        public Builder() {}
        public Builder(GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gpuCount = defaults.gpuCount;
    	      this.gpuPerHour = defaults.gpuPerHour;
    	      this.gpuPerHourBySubscription = defaults.gpuPerHourBySubscription;
    	      this.memoryAmountGb = defaults.memoryAmountGb;
    	      this.memoryGbPerHour = defaults.memoryGbPerHour;
    	      this.memoryGbPerHourBySubscription = defaults.memoryGbPerHourBySubscription;
    	      this.ocpuCount = defaults.ocpuCount;
    	      this.ocpuPerHour = defaults.ocpuPerHour;
    	      this.ocpuPerHourBySubscription = defaults.ocpuPerHourBySubscription;
    	      this.totalPerHour = defaults.totalPerHour;
    	      this.totalPerHourBySubscription = defaults.totalPerHourBySubscription;
        }

        @CustomType.Setter
        public Builder gpuCount(Double gpuCount) {
            if (gpuCount == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "gpuCount");
            }
            this.gpuCount = gpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder gpuPerHour(Double gpuPerHour) {
            if (gpuPerHour == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "gpuPerHour");
            }
            this.gpuPerHour = gpuPerHour;
            return this;
        }
        @CustomType.Setter
        public Builder gpuPerHourBySubscription(Double gpuPerHourBySubscription) {
            if (gpuPerHourBySubscription == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "gpuPerHourBySubscription");
            }
            this.gpuPerHourBySubscription = gpuPerHourBySubscription;
            return this;
        }
        @CustomType.Setter
        public Builder memoryAmountGb(Double memoryAmountGb) {
            if (memoryAmountGb == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "memoryAmountGb");
            }
            this.memoryAmountGb = memoryAmountGb;
            return this;
        }
        @CustomType.Setter
        public Builder memoryGbPerHour(Double memoryGbPerHour) {
            if (memoryGbPerHour == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "memoryGbPerHour");
            }
            this.memoryGbPerHour = memoryGbPerHour;
            return this;
        }
        @CustomType.Setter
        public Builder memoryGbPerHourBySubscription(Double memoryGbPerHourBySubscription) {
            if (memoryGbPerHourBySubscription == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "memoryGbPerHourBySubscription");
            }
            this.memoryGbPerHourBySubscription = memoryGbPerHourBySubscription;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuCount(Double ocpuCount) {
            if (ocpuCount == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "ocpuCount");
            }
            this.ocpuCount = ocpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuPerHour(Double ocpuPerHour) {
            if (ocpuPerHour == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "ocpuPerHour");
            }
            this.ocpuPerHour = ocpuPerHour;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuPerHourBySubscription(Double ocpuPerHourBySubscription) {
            if (ocpuPerHourBySubscription == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "ocpuPerHourBySubscription");
            }
            this.ocpuPerHourBySubscription = ocpuPerHourBySubscription;
            return this;
        }
        @CustomType.Setter
        public Builder totalPerHour(Double totalPerHour) {
            if (totalPerHour == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "totalPerHour");
            }
            this.totalPerHour = totalPerHour;
            return this;
        }
        @CustomType.Setter
        public Builder totalPerHourBySubscription(Double totalPerHourBySubscription) {
            if (totalPerHourBySubscription == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute", "totalPerHourBySubscription");
            }
            this.totalPerHourBySubscription = totalPerHourBySubscription;
            return this;
        }
        public GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute build() {
            final var _resultValue = new GetMigrationPlanMigrationPlanStatTotalEstimatedCostCompute();
            _resultValue.gpuCount = gpuCount;
            _resultValue.gpuPerHour = gpuPerHour;
            _resultValue.gpuPerHourBySubscription = gpuPerHourBySubscription;
            _resultValue.memoryAmountGb = memoryAmountGb;
            _resultValue.memoryGbPerHour = memoryGbPerHour;
            _resultValue.memoryGbPerHourBySubscription = memoryGbPerHourBySubscription;
            _resultValue.ocpuCount = ocpuCount;
            _resultValue.ocpuPerHour = ocpuPerHour;
            _resultValue.ocpuPerHourBySubscription = ocpuPerHourBySubscription;
            _resultValue.totalPerHour = totalPerHour;
            _resultValue.totalPerHourBySubscription = totalPerHourBySubscription;
            return _resultValue;
        }
    }
}
