// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMigrationPlanTargetEnvironment {
    /**
     * @return Availability Domain of the VM configuration.
     * 
     */
    private String availabilityDomain;
    /**
     * @return OCID of the dedicated VM configuration host.
     * 
     */
    private String dedicatedVmHost;
    /**
     * @return Fault domain of the VM configuration.
     * 
     */
    private String faultDomain;
    /**
     * @return Microsoft license for the VM configuration.
     * 
     */
    private String msLicense;
    /**
     * @return Preferred VM shape type provided by the customer.
     * 
     */
    private String preferredShapeType;
    /**
     * @return OCID of the VM configuration subnet.
     * 
     */
    private String subnet;
    /**
     * @return Target compartment identifier
     * 
     */
    private String targetCompartmentId;
    /**
     * @return The type of target environment.
     * 
     */
    private String targetEnvironmentType;
    /**
     * @return OCID of the VM configuration VCN.
     * 
     */
    private String vcn;

    private GetMigrationPlanTargetEnvironment() {}
    /**
     * @return Availability Domain of the VM configuration.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return OCID of the dedicated VM configuration host.
     * 
     */
    public String dedicatedVmHost() {
        return this.dedicatedVmHost;
    }
    /**
     * @return Fault domain of the VM configuration.
     * 
     */
    public String faultDomain() {
        return this.faultDomain;
    }
    /**
     * @return Microsoft license for the VM configuration.
     * 
     */
    public String msLicense() {
        return this.msLicense;
    }
    /**
     * @return Preferred VM shape type provided by the customer.
     * 
     */
    public String preferredShapeType() {
        return this.preferredShapeType;
    }
    /**
     * @return OCID of the VM configuration subnet.
     * 
     */
    public String subnet() {
        return this.subnet;
    }
    /**
     * @return Target compartment identifier
     * 
     */
    public String targetCompartmentId() {
        return this.targetCompartmentId;
    }
    /**
     * @return The type of target environment.
     * 
     */
    public String targetEnvironmentType() {
        return this.targetEnvironmentType;
    }
    /**
     * @return OCID of the VM configuration VCN.
     * 
     */
    public String vcn() {
        return this.vcn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationPlanTargetEnvironment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String dedicatedVmHost;
        private String faultDomain;
        private String msLicense;
        private String preferredShapeType;
        private String subnet;
        private String targetCompartmentId;
        private String targetEnvironmentType;
        private String vcn;
        public Builder() {}
        public Builder(GetMigrationPlanTargetEnvironment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.dedicatedVmHost = defaults.dedicatedVmHost;
    	      this.faultDomain = defaults.faultDomain;
    	      this.msLicense = defaults.msLicense;
    	      this.preferredShapeType = defaults.preferredShapeType;
    	      this.subnet = defaults.subnet;
    	      this.targetCompartmentId = defaults.targetCompartmentId;
    	      this.targetEnvironmentType = defaults.targetEnvironmentType;
    	      this.vcn = defaults.vcn;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder dedicatedVmHost(String dedicatedVmHost) {
            this.dedicatedVmHost = Objects.requireNonNull(dedicatedVmHost);
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(String faultDomain) {
            this.faultDomain = Objects.requireNonNull(faultDomain);
            return this;
        }
        @CustomType.Setter
        public Builder msLicense(String msLicense) {
            this.msLicense = Objects.requireNonNull(msLicense);
            return this;
        }
        @CustomType.Setter
        public Builder preferredShapeType(String preferredShapeType) {
            this.preferredShapeType = Objects.requireNonNull(preferredShapeType);
            return this;
        }
        @CustomType.Setter
        public Builder subnet(String subnet) {
            this.subnet = Objects.requireNonNull(subnet);
            return this;
        }
        @CustomType.Setter
        public Builder targetCompartmentId(String targetCompartmentId) {
            this.targetCompartmentId = Objects.requireNonNull(targetCompartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder targetEnvironmentType(String targetEnvironmentType) {
            this.targetEnvironmentType = Objects.requireNonNull(targetEnvironmentType);
            return this;
        }
        @CustomType.Setter
        public Builder vcn(String vcn) {
            this.vcn = Objects.requireNonNull(vcn);
            return this;
        }
        public GetMigrationPlanTargetEnvironment build() {
            final var _resultValue = new GetMigrationPlanTargetEnvironment();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.dedicatedVmHost = dedicatedVmHost;
            _resultValue.faultDomain = faultDomain;
            _resultValue.msLicense = msLicense;
            _resultValue.preferredShapeType = preferredShapeType;
            _resultValue.subnet = subnet;
            _resultValue.targetCompartmentId = targetCompartmentId;
            _resultValue.targetEnvironmentType = targetEnvironmentType;
            _resultValue.vcn = vcn;
            return _resultValue;
        }
    }
}
