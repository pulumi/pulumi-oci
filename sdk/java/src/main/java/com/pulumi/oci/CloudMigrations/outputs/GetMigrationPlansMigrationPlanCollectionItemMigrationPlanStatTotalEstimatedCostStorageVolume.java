// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume {
    /**
     * @return Gigabyte storage capacity
     * 
     */
    private Double capacityGb;
    /**
     * @return Volume description
     * 
     */
    private String description;
    /**
     * @return Gigabyte storage capacity per month.
     * 
     */
    private Double totalGbPerMonth;
    /**
     * @return Gigabyte storage capacity per month by subscription
     * 
     */
    private Double totalGbPerMonthBySubscription;

    private GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume() {}
    /**
     * @return Gigabyte storage capacity
     * 
     */
    public Double capacityGb() {
        return this.capacityGb;
    }
    /**
     * @return Volume description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Gigabyte storage capacity per month.
     * 
     */
    public Double totalGbPerMonth() {
        return this.totalGbPerMonth;
    }
    /**
     * @return Gigabyte storage capacity per month by subscription
     * 
     */
    public Double totalGbPerMonthBySubscription() {
        return this.totalGbPerMonthBySubscription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double capacityGb;
        private String description;
        private Double totalGbPerMonth;
        private Double totalGbPerMonthBySubscription;
        public Builder() {}
        public Builder(GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityGb = defaults.capacityGb;
    	      this.description = defaults.description;
    	      this.totalGbPerMonth = defaults.totalGbPerMonth;
    	      this.totalGbPerMonthBySubscription = defaults.totalGbPerMonthBySubscription;
        }

        @CustomType.Setter
        public Builder capacityGb(Double capacityGb) {
            if (capacityGb == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume", "capacityGb");
            }
            this.capacityGb = capacityGb;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder totalGbPerMonth(Double totalGbPerMonth) {
            if (totalGbPerMonth == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume", "totalGbPerMonth");
            }
            this.totalGbPerMonth = totalGbPerMonth;
            return this;
        }
        @CustomType.Setter
        public Builder totalGbPerMonthBySubscription(Double totalGbPerMonthBySubscription) {
            if (totalGbPerMonthBySubscription == null) {
              throw new MissingRequiredPropertyException("GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume", "totalGbPerMonthBySubscription");
            }
            this.totalGbPerMonthBySubscription = totalGbPerMonthBySubscription;
            return this;
        }
        public GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume build() {
            final var _resultValue = new GetMigrationPlansMigrationPlanCollectionItemMigrationPlanStatTotalEstimatedCostStorageVolume();
            _resultValue.capacityGb = capacityGb;
            _resultValue.description = description;
            _resultValue.totalGbPerMonth = totalGbPerMonth;
            _resultValue.totalGbPerMonthBySubscription = totalGbPerMonthBySubscription;
            return _resultValue;
        }
    }
}
