// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudMigrations.outputs.GetMigrationPlansFilter;
import com.pulumi.oci.CloudMigrations.outputs.GetMigrationPlansMigrationPlanCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMigrationPlansResult {
    /**
     * @return The OCID of the compartment containing the migration plan.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetMigrationPlansFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The OCID of the associated migration.
     * 
     */
    private @Nullable String migrationId;
    /**
     * @return The list of migration_plan_collection.
     * 
     */
    private List<GetMigrationPlansMigrationPlanCollection> migrationPlanCollections;
    private @Nullable String migrationPlanId;
    /**
     * @return The current state of the migration plan.
     * 
     */
    private @Nullable String state;

    private GetMigrationPlansResult() {}
    /**
     * @return The OCID of the compartment containing the migration plan.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetMigrationPlansFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the associated migration.
     * 
     */
    public Optional<String> migrationId() {
        return Optional.ofNullable(this.migrationId);
    }
    /**
     * @return The list of migration_plan_collection.
     * 
     */
    public List<GetMigrationPlansMigrationPlanCollection> migrationPlanCollections() {
        return this.migrationPlanCollections;
    }
    public Optional<String> migrationPlanId() {
        return Optional.ofNullable(this.migrationPlanId);
    }
    /**
     * @return The current state of the migration plan.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationPlansResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetMigrationPlansFilter> filters;
        private String id;
        private @Nullable String migrationId;
        private List<GetMigrationPlansMigrationPlanCollection> migrationPlanCollections;
        private @Nullable String migrationPlanId;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetMigrationPlansResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.migrationId = defaults.migrationId;
    	      this.migrationPlanCollections = defaults.migrationPlanCollections;
    	      this.migrationPlanId = defaults.migrationPlanId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMigrationPlansFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMigrationPlansFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder migrationId(@Nullable String migrationId) {
            this.migrationId = migrationId;
            return this;
        }
        @CustomType.Setter
        public Builder migrationPlanCollections(List<GetMigrationPlansMigrationPlanCollection> migrationPlanCollections) {
            this.migrationPlanCollections = Objects.requireNonNull(migrationPlanCollections);
            return this;
        }
        public Builder migrationPlanCollections(GetMigrationPlansMigrationPlanCollection... migrationPlanCollections) {
            return migrationPlanCollections(List.of(migrationPlanCollections));
        }
        @CustomType.Setter
        public Builder migrationPlanId(@Nullable String migrationPlanId) {
            this.migrationPlanId = migrationPlanId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetMigrationPlansResult build() {
            final var _resultValue = new GetMigrationPlansResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.migrationId = migrationId;
            _resultValue.migrationPlanCollections = migrationPlanCollections;
            _resultValue.migrationPlanId = migrationPlanId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
