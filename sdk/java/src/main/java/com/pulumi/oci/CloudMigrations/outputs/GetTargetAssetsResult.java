// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.CloudMigrations.outputs.GetTargetAssetsFilter;
import com.pulumi.oci.CloudMigrations.outputs.GetTargetAssetsTargetAssetCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTargetAssetsResult {
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetTargetAssetsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return OCID of the associated migration plan.
     * 
     */
    private @Nullable String migrationPlanId;
    /**
     * @return The current state of the target asset.
     * 
     */
    private @Nullable String state;
    /**
     * @return The list of target_asset_collection.
     * 
     */
    private List<GetTargetAssetsTargetAssetCollection> targetAssetCollections;
    private @Nullable String targetAssetId;

    private GetTargetAssetsResult() {}
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetTargetAssetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return OCID of the associated migration plan.
     * 
     */
    public Optional<String> migrationPlanId() {
        return Optional.ofNullable(this.migrationPlanId);
    }
    /**
     * @return The current state of the target asset.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of target_asset_collection.
     * 
     */
    public List<GetTargetAssetsTargetAssetCollection> targetAssetCollections() {
        return this.targetAssetCollections;
    }
    public Optional<String> targetAssetId() {
        return Optional.ofNullable(this.targetAssetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetAssetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable List<GetTargetAssetsFilter> filters;
        private String id;
        private @Nullable String migrationPlanId;
        private @Nullable String state;
        private List<GetTargetAssetsTargetAssetCollection> targetAssetCollections;
        private @Nullable String targetAssetId;
        public Builder() {}
        public Builder(GetTargetAssetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.migrationPlanId = defaults.migrationPlanId;
    	      this.state = defaults.state;
    	      this.targetAssetCollections = defaults.targetAssetCollections;
    	      this.targetAssetId = defaults.targetAssetId;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetTargetAssetsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetTargetAssetsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTargetAssetsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder migrationPlanId(@Nullable String migrationPlanId) {

            this.migrationPlanId = migrationPlanId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetAssetCollections(List<GetTargetAssetsTargetAssetCollection> targetAssetCollections) {
            if (targetAssetCollections == null) {
              throw new MissingRequiredPropertyException("GetTargetAssetsResult", "targetAssetCollections");
            }
            this.targetAssetCollections = targetAssetCollections;
            return this;
        }
        public Builder targetAssetCollections(GetTargetAssetsTargetAssetCollection... targetAssetCollections) {
            return targetAssetCollections(List.of(targetAssetCollections));
        }
        @CustomType.Setter
        public Builder targetAssetId(@Nullable String targetAssetId) {

            this.targetAssetId = targetAssetId;
            return this;
        }
        public GetTargetAssetsResult build() {
            final var _resultValue = new GetTargetAssetsResult();
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.migrationPlanId = migrationPlanId;
            _resultValue.state = state;
            _resultValue.targetAssetCollections = targetAssetCollections;
            _resultValue.targetAssetId = targetAssetId;
            return _resultValue;
        }
    }
}
