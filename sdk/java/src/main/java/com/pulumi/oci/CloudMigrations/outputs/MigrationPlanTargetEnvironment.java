// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationPlanTargetEnvironment {
    /**
     * @return (Updatable) Availability Domain of the VM configuration.
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return (Updatable) OCID of the dedicated VM configuration host.
     * 
     */
    private @Nullable String dedicatedVmHost;
    /**
     * @return (Updatable) Fault domain of the VM configuration.
     * 
     */
    private @Nullable String faultDomain;
    /**
     * @return (Updatable) Microsoft license for the VM configuration.
     * 
     */
    private @Nullable String msLicense;
    /**
     * @return (Updatable) Preferred VM shape type provided by the customer.
     * 
     */
    private @Nullable String preferredShapeType;
    /**
     * @return (Updatable) OCID of the VM configuration subnet.
     * 
     */
    private String subnet;
    /**
     * @return (Updatable) Target compartment identifier
     * 
     */
    private @Nullable String targetCompartmentId;
    /**
     * @return (Updatable) The type of target environment.
     * 
     */
    private String targetEnvironmentType;
    /**
     * @return (Updatable) OCID of the VM configuration VCN.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private String vcn;

    private MigrationPlanTargetEnvironment() {}
    /**
     * @return (Updatable) Availability Domain of the VM configuration.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return (Updatable) OCID of the dedicated VM configuration host.
     * 
     */
    public Optional<String> dedicatedVmHost() {
        return Optional.ofNullable(this.dedicatedVmHost);
    }
    /**
     * @return (Updatable) Fault domain of the VM configuration.
     * 
     */
    public Optional<String> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }
    /**
     * @return (Updatable) Microsoft license for the VM configuration.
     * 
     */
    public Optional<String> msLicense() {
        return Optional.ofNullable(this.msLicense);
    }
    /**
     * @return (Updatable) Preferred VM shape type provided by the customer.
     * 
     */
    public Optional<String> preferredShapeType() {
        return Optional.ofNullable(this.preferredShapeType);
    }
    /**
     * @return (Updatable) OCID of the VM configuration subnet.
     * 
     */
    public String subnet() {
        return this.subnet;
    }
    /**
     * @return (Updatable) Target compartment identifier
     * 
     */
    public Optional<String> targetCompartmentId() {
        return Optional.ofNullable(this.targetCompartmentId);
    }
    /**
     * @return (Updatable) The type of target environment.
     * 
     */
    public String targetEnvironmentType() {
        return this.targetEnvironmentType;
    }
    /**
     * @return (Updatable) OCID of the VM configuration VCN.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public String vcn() {
        return this.vcn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationPlanTargetEnvironment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private @Nullable String dedicatedVmHost;
        private @Nullable String faultDomain;
        private @Nullable String msLicense;
        private @Nullable String preferredShapeType;
        private String subnet;
        private @Nullable String targetCompartmentId;
        private String targetEnvironmentType;
        private String vcn;
        public Builder() {}
        public Builder(MigrationPlanTargetEnvironment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.dedicatedVmHost = defaults.dedicatedVmHost;
    	      this.faultDomain = defaults.faultDomain;
    	      this.msLicense = defaults.msLicense;
    	      this.preferredShapeType = defaults.preferredShapeType;
    	      this.subnet = defaults.subnet;
    	      this.targetCompartmentId = defaults.targetCompartmentId;
    	      this.targetEnvironmentType = defaults.targetEnvironmentType;
    	      this.vcn = defaults.vcn;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder dedicatedVmHost(@Nullable String dedicatedVmHost) {
            this.dedicatedVmHost = dedicatedVmHost;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(@Nullable String faultDomain) {
            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder msLicense(@Nullable String msLicense) {
            this.msLicense = msLicense;
            return this;
        }
        @CustomType.Setter
        public Builder preferredShapeType(@Nullable String preferredShapeType) {
            this.preferredShapeType = preferredShapeType;
            return this;
        }
        @CustomType.Setter
        public Builder subnet(String subnet) {
            this.subnet = Objects.requireNonNull(subnet);
            return this;
        }
        @CustomType.Setter
        public Builder targetCompartmentId(@Nullable String targetCompartmentId) {
            this.targetCompartmentId = targetCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder targetEnvironmentType(String targetEnvironmentType) {
            this.targetEnvironmentType = Objects.requireNonNull(targetEnvironmentType);
            return this;
        }
        @CustomType.Setter
        public Builder vcn(String vcn) {
            this.vcn = Objects.requireNonNull(vcn);
            return this;
        }
        public MigrationPlanTargetEnvironment build() {
            final var _resultValue = new MigrationPlanTargetEnvironment();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.dedicatedVmHost = dedicatedVmHost;
            _resultValue.faultDomain = faultDomain;
            _resultValue.msLicense = msLicense;
            _resultValue.preferredShapeType = preferredShapeType;
            _resultValue.subnet = subnet;
            _resultValue.targetCompartmentId = targetCompartmentId;
            _resultValue.targetEnvironmentType = targetEnvironmentType;
            _resultValue.vcn = vcn;
            return _resultValue;
        }
    }
}
