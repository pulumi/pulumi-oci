// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudMigrations.outputs.TargetAssetUserSpecAgentConfig;
import com.pulumi.oci.CloudMigrations.outputs.TargetAssetUserSpecCreateVnicDetails;
import com.pulumi.oci.CloudMigrations.outputs.TargetAssetUserSpecInstanceOptions;
import com.pulumi.oci.CloudMigrations.outputs.TargetAssetUserSpecPreemptibleInstanceConfig;
import com.pulumi.oci.CloudMigrations.outputs.TargetAssetUserSpecShapeConfig;
import com.pulumi.oci.CloudMigrations.outputs.TargetAssetUserSpecSourceDetails;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetAssetUserSpec {
    /**
     * @return (Updatable) Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    private @Nullable TargetAssetUserSpecAgentConfig agentConfig;
    /**
     * @return (Updatable) The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return (Updatable) The OCID of the compute capacity reservation under which this instance is launched. You can opt out of all default reservations by specifying an empty string as input for this field. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
     * 
     */
    private @Nullable String capacityReservationId;
    /**
     * @return (Updatable) The OCID of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return (Updatable) Contains properties for a VNIC. You use this object when creating the primary VNIC during instance launch or when creating a secondary VNIC. For more information about VNICs, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     * 
     */
    private @Nullable TargetAssetUserSpecCreateVnicDetails createVnicDetails;
    /**
     * @return (Updatable) The OCID of the dedicated VM host.
     * 
     */
    private @Nullable String dedicatedVmHostId;
    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,String> definedTags;
    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (Updatable) A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains lets you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     * 
     * If you do not specify the fault domain, the system selects one for you.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * Example: `FAULT-DOMAIN-1`
     * 
     */
    private @Nullable String faultDomain;
    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,String> freeformTags;
    /**
     * @return (Updatable) Deprecated. Instead use `hostnameLabel` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). If you provide both, the values must match.
     * 
     */
    private @Nullable String hostnameLabel;
    /**
     * @return (Updatable) Optional mutable instance options
     * 
     */
    private @Nullable TargetAssetUserSpecInstanceOptions instanceOptions;
    /**
     * @return (Updatable) This is an advanced option.
     * 
     * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
     * 
     * If you want more control over the boot process, you can provide your own custom iPXE script that will run when the instance boots. Be aware that the same iPXE script will run every time an instance boots, not only after the initial LaunchInstance call.
     * 
     * By default, the iPXE script connects to the instance&#39;s local boot volume over iSCSI and performs a network boot. If you use a custom iPXE script and want to network-boot from the instance&#39;s local boot volume over iSCSI in the same way as the default iPXE script, use the following iSCSI IP address: 169.254.0.2, and boot volume IQN: iqn.2015-02.oracle.boot.
     * 
     * If your instance boot volume type is paravirtualized, the boot volume is attached to the instance through virtio-scsi and no iPXE script is used. If your instance boot volume type is paravirtualized and you use custom iPXE to perform network-boot into your instance, the primary boot volume is attached as a data volume through the virtio-scsi drive.
     * 
     * For more information about the Bring Your Own Image feature of Oracle Cloud Infrastructure, see [Bring Your Own Image](https://docs.cloud.oracle.com/iaas/Content/Compute/References/bringyourownimage.htm).
     * 
     * For more information about iPXE, see http://ipxe.org.
     * 
     */
    private @Nullable String ipxeScript;
    /**
     * @return (Updatable) Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. This field applies to both block volumes and boot volumes. By default, the value is false.
     * 
     */
    private @Nullable Boolean isPvEncryptionInTransitEnabled;
    /**
     * @return (Updatable) Configuration options for preemptible instances.
     * 
     */
    private @Nullable TargetAssetUserSpecPreemptibleInstanceConfig preemptibleInstanceConfig;
    /**
     * @return (Updatable) The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     * 
     * You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    private @Nullable String shape;
    /**
     * @return (Updatable) The shape configuration requested for the instance.
     * 
     * If the parameter is provided, the instance is created with the resources that you specify. If some properties are missing or the entire parameter is not provided, the instance is created with the default configuration values for the `shape` that you specify.
     * 
     * Each shape only supports certain configurable values. If the values that you provide are not valid for the specified `shape`, an error is returned.
     * 
     */
    private @Nullable TargetAssetUserSpecShapeConfig shapeConfig;
    /**
     * @return (Updatable)
     * 
     */
    private @Nullable TargetAssetUserSpecSourceDetails sourceDetails;

    private TargetAssetUserSpec() {}
    /**
     * @return (Updatable) Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    public Optional<TargetAssetUserSpecAgentConfig> agentConfig() {
        return Optional.ofNullable(this.agentConfig);
    }
    /**
     * @return (Updatable) The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return (Updatable) The OCID of the compute capacity reservation under which this instance is launched. You can opt out of all default reservations by specifying an empty string as input for this field. For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
     * 
     */
    public Optional<String> capacityReservationId() {
        return Optional.ofNullable(this.capacityReservationId);
    }
    /**
     * @return (Updatable) The OCID of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return (Updatable) Contains properties for a VNIC. You use this object when creating the primary VNIC during instance launch or when creating a secondary VNIC. For more information about VNICs, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     * 
     */
    public Optional<TargetAssetUserSpecCreateVnicDetails> createVnicDetails() {
        return Optional.ofNullable(this.createVnicDetails);
    }
    /**
     * @return (Updatable) The OCID of the dedicated VM host.
     * 
     */
    public Optional<String> dedicatedVmHostId() {
        return Optional.ofNullable(this.dedicatedVmHostId);
    }
    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (Updatable) A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains lets you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     * 
     * If you do not specify the fault domain, the system selects one for you.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * Example: `FAULT-DOMAIN-1`
     * 
     */
    public Optional<String> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }
    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return (Updatable) Deprecated. Instead use `hostnameLabel` in [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/). If you provide both, the values must match.
     * 
     */
    public Optional<String> hostnameLabel() {
        return Optional.ofNullable(this.hostnameLabel);
    }
    /**
     * @return (Updatable) Optional mutable instance options
     * 
     */
    public Optional<TargetAssetUserSpecInstanceOptions> instanceOptions() {
        return Optional.ofNullable(this.instanceOptions);
    }
    /**
     * @return (Updatable) This is an advanced option.
     * 
     * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
     * 
     * If you want more control over the boot process, you can provide your own custom iPXE script that will run when the instance boots. Be aware that the same iPXE script will run every time an instance boots, not only after the initial LaunchInstance call.
     * 
     * By default, the iPXE script connects to the instance&#39;s local boot volume over iSCSI and performs a network boot. If you use a custom iPXE script and want to network-boot from the instance&#39;s local boot volume over iSCSI in the same way as the default iPXE script, use the following iSCSI IP address: 169.254.0.2, and boot volume IQN: iqn.2015-02.oracle.boot.
     * 
     * If your instance boot volume type is paravirtualized, the boot volume is attached to the instance through virtio-scsi and no iPXE script is used. If your instance boot volume type is paravirtualized and you use custom iPXE to perform network-boot into your instance, the primary boot volume is attached as a data volume through the virtio-scsi drive.
     * 
     * For more information about the Bring Your Own Image feature of Oracle Cloud Infrastructure, see [Bring Your Own Image](https://docs.cloud.oracle.com/iaas/Content/Compute/References/bringyourownimage.htm).
     * 
     * For more information about iPXE, see http://ipxe.org.
     * 
     */
    public Optional<String> ipxeScript() {
        return Optional.ofNullable(this.ipxeScript);
    }
    /**
     * @return (Updatable) Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. This field applies to both block volumes and boot volumes. By default, the value is false.
     * 
     */
    public Optional<Boolean> isPvEncryptionInTransitEnabled() {
        return Optional.ofNullable(this.isPvEncryptionInTransitEnabled);
    }
    /**
     * @return (Updatable) Configuration options for preemptible instances.
     * 
     */
    public Optional<TargetAssetUserSpecPreemptibleInstanceConfig> preemptibleInstanceConfig() {
        return Optional.ofNullable(this.preemptibleInstanceConfig);
    }
    /**
     * @return (Updatable) The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     * 
     * You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    /**
     * @return (Updatable) The shape configuration requested for the instance.
     * 
     * If the parameter is provided, the instance is created with the resources that you specify. If some properties are missing or the entire parameter is not provided, the instance is created with the default configuration values for the `shape` that you specify.
     * 
     * Each shape only supports certain configurable values. If the values that you provide are not valid for the specified `shape`, an error is returned.
     * 
     */
    public Optional<TargetAssetUserSpecShapeConfig> shapeConfig() {
        return Optional.ofNullable(this.shapeConfig);
    }
    /**
     * @return (Updatable)
     * 
     */
    public Optional<TargetAssetUserSpecSourceDetails> sourceDetails() {
        return Optional.ofNullable(this.sourceDetails);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetAssetUserSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TargetAssetUserSpecAgentConfig agentConfig;
        private @Nullable String availabilityDomain;
        private @Nullable String capacityReservationId;
        private @Nullable String compartmentId;
        private @Nullable TargetAssetUserSpecCreateVnicDetails createVnicDetails;
        private @Nullable String dedicatedVmHostId;
        private @Nullable Map<String,String> definedTags;
        private @Nullable String displayName;
        private @Nullable String faultDomain;
        private @Nullable Map<String,String> freeformTags;
        private @Nullable String hostnameLabel;
        private @Nullable TargetAssetUserSpecInstanceOptions instanceOptions;
        private @Nullable String ipxeScript;
        private @Nullable Boolean isPvEncryptionInTransitEnabled;
        private @Nullable TargetAssetUserSpecPreemptibleInstanceConfig preemptibleInstanceConfig;
        private @Nullable String shape;
        private @Nullable TargetAssetUserSpecShapeConfig shapeConfig;
        private @Nullable TargetAssetUserSpecSourceDetails sourceDetails;
        public Builder() {}
        public Builder(TargetAssetUserSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentConfig = defaults.agentConfig;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createVnicDetails = defaults.createVnicDetails;
    	      this.dedicatedVmHostId = defaults.dedicatedVmHostId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.faultDomain = defaults.faultDomain;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostnameLabel = defaults.hostnameLabel;
    	      this.instanceOptions = defaults.instanceOptions;
    	      this.ipxeScript = defaults.ipxeScript;
    	      this.isPvEncryptionInTransitEnabled = defaults.isPvEncryptionInTransitEnabled;
    	      this.preemptibleInstanceConfig = defaults.preemptibleInstanceConfig;
    	      this.shape = defaults.shape;
    	      this.shapeConfig = defaults.shapeConfig;
    	      this.sourceDetails = defaults.sourceDetails;
        }

        @CustomType.Setter
        public Builder agentConfig(@Nullable TargetAssetUserSpecAgentConfig agentConfig) {

            this.agentConfig = agentConfig;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {

            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(@Nullable String capacityReservationId) {

            this.capacityReservationId = capacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createVnicDetails(@Nullable TargetAssetUserSpecCreateVnicDetails createVnicDetails) {

            this.createVnicDetails = createVnicDetails;
            return this;
        }
        @CustomType.Setter
        public Builder dedicatedVmHostId(@Nullable String dedicatedVmHostId) {

            this.dedicatedVmHostId = dedicatedVmHostId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,String> definedTags) {

            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(@Nullable String faultDomain) {

            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,String> freeformTags) {

            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameLabel(@Nullable String hostnameLabel) {

            this.hostnameLabel = hostnameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder instanceOptions(@Nullable TargetAssetUserSpecInstanceOptions instanceOptions) {

            this.instanceOptions = instanceOptions;
            return this;
        }
        @CustomType.Setter
        public Builder ipxeScript(@Nullable String ipxeScript) {

            this.ipxeScript = ipxeScript;
            return this;
        }
        @CustomType.Setter
        public Builder isPvEncryptionInTransitEnabled(@Nullable Boolean isPvEncryptionInTransitEnabled) {

            this.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder preemptibleInstanceConfig(@Nullable TargetAssetUserSpecPreemptibleInstanceConfig preemptibleInstanceConfig) {

            this.preemptibleInstanceConfig = preemptibleInstanceConfig;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {

            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeConfig(@Nullable TargetAssetUserSpecShapeConfig shapeConfig) {

            this.shapeConfig = shapeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDetails(@Nullable TargetAssetUserSpecSourceDetails sourceDetails) {

            this.sourceDetails = sourceDetails;
            return this;
        }
        public TargetAssetUserSpec build() {
            final var _resultValue = new TargetAssetUserSpec();
            _resultValue.agentConfig = agentConfig;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.capacityReservationId = capacityReservationId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createVnicDetails = createVnicDetails;
            _resultValue.dedicatedVmHostId = dedicatedVmHostId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.faultDomain = faultDomain;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostnameLabel = hostnameLabel;
            _resultValue.instanceOptions = instanceOptions;
            _resultValue.ipxeScript = ipxeScript;
            _resultValue.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            _resultValue.preemptibleInstanceConfig = preemptibleInstanceConfig;
            _resultValue.shape = shape;
            _resultValue.shapeConfig = shapeConfig;
            _resultValue.sourceDetails = sourceDetails;
            return _resultValue;
        }
    }
}
