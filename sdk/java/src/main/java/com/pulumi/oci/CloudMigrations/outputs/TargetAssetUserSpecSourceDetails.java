// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudMigrations.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetAssetUserSpecSourceDetails {
    /**
     * @return (Updatable) The OCID of the boot volume used to boot the instance.
     * 
     */
    private @Nullable String bootVolumeId;
    /**
     * @return (Updatable) The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
     * 
     */
    private @Nullable String bootVolumeSizeInGbs;
    /**
     * @return (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB that represents the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     * Allowed values:
     * 
     */
    private @Nullable String bootVolumeVpusPerGb;
    /**
     * @return (Updatable) The OCID of the image used to boot the instance.
     * 
     */
    private @Nullable String imageId;
    /**
     * @return (Updatable) The OCID of the key management key to assign as the master encryption key for the boot volume.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return (Updatable) The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private String sourceType;

    private TargetAssetUserSpecSourceDetails() {}
    /**
     * @return (Updatable) The OCID of the boot volume used to boot the instance.
     * 
     */
    public Optional<String> bootVolumeId() {
        return Optional.ofNullable(this.bootVolumeId);
    }
    /**
     * @return (Updatable) The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
     * 
     */
    public Optional<String> bootVolumeSizeInGbs() {
        return Optional.ofNullable(this.bootVolumeSizeInGbs);
    }
    /**
     * @return (Updatable) The number of volume performance units (VPUs) that will be applied to this volume per GB that represents the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     * Allowed values:
     * 
     */
    public Optional<String> bootVolumeVpusPerGb() {
        return Optional.ofNullable(this.bootVolumeVpusPerGb);
    }
    /**
     * @return (Updatable) The OCID of the image used to boot the instance.
     * 
     */
    public Optional<String> imageId() {
        return Optional.ofNullable(this.imageId);
    }
    /**
     * @return (Updatable) The OCID of the key management key to assign as the master encryption key for the boot volume.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return (Updatable) The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetAssetUserSpecSourceDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bootVolumeId;
        private @Nullable String bootVolumeSizeInGbs;
        private @Nullable String bootVolumeVpusPerGb;
        private @Nullable String imageId;
        private @Nullable String kmsKeyId;
        private String sourceType;
        public Builder() {}
        public Builder(TargetAssetUserSpecSourceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootVolumeId = defaults.bootVolumeId;
    	      this.bootVolumeSizeInGbs = defaults.bootVolumeSizeInGbs;
    	      this.bootVolumeVpusPerGb = defaults.bootVolumeVpusPerGb;
    	      this.imageId = defaults.imageId;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder bootVolumeId(@Nullable String bootVolumeId) {
            this.bootVolumeId = bootVolumeId;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeSizeInGbs(@Nullable String bootVolumeSizeInGbs) {
            this.bootVolumeSizeInGbs = bootVolumeSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeVpusPerGb(@Nullable String bootVolumeVpusPerGb) {
            this.bootVolumeVpusPerGb = bootVolumeVpusPerGb;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(@Nullable String imageId) {
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public TargetAssetUserSpecSourceDetails build() {
            final var o = new TargetAssetUserSpecSourceDetails();
            o.bootVolumeId = bootVolumeId;
            o.bootVolumeSizeInGbs = bootVolumeSizeInGbs;
            o.bootVolumeVpusPerGb = bootVolumeVpusPerGb;
            o.imageId = imageId;
            o.kmsKeyId = kmsKeyId;
            o.sourceType = sourceType;
            return o;
        }
    }
}
