// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeCloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AtCustomerCccInfrastructureInfrastructureInventoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AtCustomerCccInfrastructureInfrastructureInventoryArgs Empty = new AtCustomerCccInfrastructureInfrastructureInventoryArgs();

    /**
     * The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for capacity storage.
     * 
     */
    @Import(name="capacityStorageTrayCount")
    private @Nullable Output<Integer> capacityStorageTrayCount;

    /**
     * @return The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for capacity storage.
     * 
     */
    public Optional<Output<Integer>> capacityStorageTrayCount() {
        return Optional.ofNullable(this.capacityStorageTrayCount);
    }

    /**
     * The number of compute nodes that are available and usable on the Compute Cloud@Customer infrastructure rack. There is no distinction of compute node type in this information.
     * 
     */
    @Import(name="computeNodeCount")
    private @Nullable Output<Integer> computeNodeCount;

    /**
     * @return The number of compute nodes that are available and usable on the Compute Cloud@Customer infrastructure rack. There is no distinction of compute node type in this information.
     * 
     */
    public Optional<Output<Integer>> computeNodeCount() {
        return Optional.ofNullable(this.computeNodeCount);
    }

    /**
     * The number of management nodes that are available and in active use on the Compute Cloud@Customer infrastructure rack.
     * 
     */
    @Import(name="managementNodeCount")
    private @Nullable Output<Integer> managementNodeCount;

    /**
     * @return The number of management nodes that are available and in active use on the Compute Cloud@Customer infrastructure rack.
     * 
     */
    public Optional<Output<Integer>> managementNodeCount() {
        return Optional.ofNullable(this.managementNodeCount);
    }

    /**
     * The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for performance storage.
     * 
     */
    @Import(name="performanceStorageTrayCount")
    private @Nullable Output<Integer> performanceStorageTrayCount;

    /**
     * @return The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for performance storage.
     * 
     */
    public Optional<Output<Integer>> performanceStorageTrayCount() {
        return Optional.ofNullable(this.performanceStorageTrayCount);
    }

    /**
     * The serial number of the Compute Cloud@Customer infrastructure rack.
     * 
     */
    @Import(name="serialNumber")
    private @Nullable Output<String> serialNumber;

    /**
     * @return The serial number of the Compute Cloud@Customer infrastructure rack.
     * 
     */
    public Optional<Output<String>> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }

    private AtCustomerCccInfrastructureInfrastructureInventoryArgs() {}

    private AtCustomerCccInfrastructureInfrastructureInventoryArgs(AtCustomerCccInfrastructureInfrastructureInventoryArgs $) {
        this.capacityStorageTrayCount = $.capacityStorageTrayCount;
        this.computeNodeCount = $.computeNodeCount;
        this.managementNodeCount = $.managementNodeCount;
        this.performanceStorageTrayCount = $.performanceStorageTrayCount;
        this.serialNumber = $.serialNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AtCustomerCccInfrastructureInfrastructureInventoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AtCustomerCccInfrastructureInfrastructureInventoryArgs $;

        public Builder() {
            $ = new AtCustomerCccInfrastructureInfrastructureInventoryArgs();
        }

        public Builder(AtCustomerCccInfrastructureInfrastructureInventoryArgs defaults) {
            $ = new AtCustomerCccInfrastructureInfrastructureInventoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityStorageTrayCount The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for capacity storage.
         * 
         * @return builder
         * 
         */
        public Builder capacityStorageTrayCount(@Nullable Output<Integer> capacityStorageTrayCount) {
            $.capacityStorageTrayCount = capacityStorageTrayCount;
            return this;
        }

        /**
         * @param capacityStorageTrayCount The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for capacity storage.
         * 
         * @return builder
         * 
         */
        public Builder capacityStorageTrayCount(Integer capacityStorageTrayCount) {
            return capacityStorageTrayCount(Output.of(capacityStorageTrayCount));
        }

        /**
         * @param computeNodeCount The number of compute nodes that are available and usable on the Compute Cloud@Customer infrastructure rack. There is no distinction of compute node type in this information.
         * 
         * @return builder
         * 
         */
        public Builder computeNodeCount(@Nullable Output<Integer> computeNodeCount) {
            $.computeNodeCount = computeNodeCount;
            return this;
        }

        /**
         * @param computeNodeCount The number of compute nodes that are available and usable on the Compute Cloud@Customer infrastructure rack. There is no distinction of compute node type in this information.
         * 
         * @return builder
         * 
         */
        public Builder computeNodeCount(Integer computeNodeCount) {
            return computeNodeCount(Output.of(computeNodeCount));
        }

        /**
         * @param managementNodeCount The number of management nodes that are available and in active use on the Compute Cloud@Customer infrastructure rack.
         * 
         * @return builder
         * 
         */
        public Builder managementNodeCount(@Nullable Output<Integer> managementNodeCount) {
            $.managementNodeCount = managementNodeCount;
            return this;
        }

        /**
         * @param managementNodeCount The number of management nodes that are available and in active use on the Compute Cloud@Customer infrastructure rack.
         * 
         * @return builder
         * 
         */
        public Builder managementNodeCount(Integer managementNodeCount) {
            return managementNodeCount(Output.of(managementNodeCount));
        }

        /**
         * @param performanceStorageTrayCount The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for performance storage.
         * 
         * @return builder
         * 
         */
        public Builder performanceStorageTrayCount(@Nullable Output<Integer> performanceStorageTrayCount) {
            $.performanceStorageTrayCount = performanceStorageTrayCount;
            return this;
        }

        /**
         * @param performanceStorageTrayCount The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for performance storage.
         * 
         * @return builder
         * 
         */
        public Builder performanceStorageTrayCount(Integer performanceStorageTrayCount) {
            return performanceStorageTrayCount(Output.of(performanceStorageTrayCount));
        }

        /**
         * @param serialNumber The serial number of the Compute Cloud@Customer infrastructure rack.
         * 
         * @return builder
         * 
         */
        public Builder serialNumber(@Nullable Output<String> serialNumber) {
            $.serialNumber = serialNumber;
            return this;
        }

        /**
         * @param serialNumber The serial number of the Compute Cloud@Customer infrastructure rack.
         * 
         * @return builder
         * 
         */
        public Builder serialNumber(String serialNumber) {
            return serialNumber(Output.of(serialNumber));
        }

        public AtCustomerCccInfrastructureInfrastructureInventoryArgs build() {
            return $;
        }
    }

}
