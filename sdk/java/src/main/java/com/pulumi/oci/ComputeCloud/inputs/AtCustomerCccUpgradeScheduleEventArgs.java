// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeCloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AtCustomerCccUpgradeScheduleEventArgs extends com.pulumi.resources.ResourceArgs {

    public static final AtCustomerCccUpgradeScheduleEventArgs Empty = new AtCustomerCccUpgradeScheduleEventArgs();

    /**
     * (Updatable) A description of the Compute Cloud@Customer upgrade schedule time block.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return (Updatable) A description of the Compute Cloud@Customer upgrade schedule time block.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Generated name associated with the event.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Generated name associated with the event.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) The duration of this block of time. The duration must be specified and be of the ISO-8601 format for durations.
     * 
     */
    @Import(name="scheduleEventDuration", required=true)
    private Output<String> scheduleEventDuration;

    /**
     * @return (Updatable) The duration of this block of time. The duration must be specified and be of the ISO-8601 format for durations.
     * 
     */
    public Output<String> scheduleEventDuration() {
        return this.scheduleEventDuration;
    }

    /**
     * (Updatable) Frequency of recurrence of schedule block. When this field is not included, the event is assumed to be a one time occurrence. The frequency field is strictly parsed and must conform to RFC-5545 formatting for recurrences.
     * 
     */
    @Import(name="scheduleEventRecurrences")
    private @Nullable Output<String> scheduleEventRecurrences;

    /**
     * @return (Updatable) Frequency of recurrence of schedule block. When this field is not included, the event is assumed to be a one time occurrence. The frequency field is strictly parsed and must conform to RFC-5545 formatting for recurrences.
     * 
     */
    public Optional<Output<String>> scheduleEventRecurrences() {
        return Optional.ofNullable(this.scheduleEventRecurrences);
    }

    /**
     * (Updatable) The date and time when the Compute Cloud@Customer upgrade schedule event starts, inclusive. An RFC3339 formatted UTC datetime string. For an event with recurrences, this is the date that a recurrence can start being applied.
     * 
     */
    @Import(name="timeStart", required=true)
    private Output<String> timeStart;

    /**
     * @return (Updatable) The date and time when the Compute Cloud@Customer upgrade schedule event starts, inclusive. An RFC3339 formatted UTC datetime string. For an event with recurrences, this is the date that a recurrence can start being applied.
     * 
     */
    public Output<String> timeStart() {
        return this.timeStart;
    }

    private AtCustomerCccUpgradeScheduleEventArgs() {}

    private AtCustomerCccUpgradeScheduleEventArgs(AtCustomerCccUpgradeScheduleEventArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.scheduleEventDuration = $.scheduleEventDuration;
        this.scheduleEventRecurrences = $.scheduleEventRecurrences;
        this.timeStart = $.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AtCustomerCccUpgradeScheduleEventArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AtCustomerCccUpgradeScheduleEventArgs $;

        public Builder() {
            $ = new AtCustomerCccUpgradeScheduleEventArgs();
        }

        public Builder(AtCustomerCccUpgradeScheduleEventArgs defaults) {
            $ = new AtCustomerCccUpgradeScheduleEventArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description (Updatable) A description of the Compute Cloud@Customer upgrade schedule time block.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) A description of the Compute Cloud@Customer upgrade schedule time block.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Generated name associated with the event.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Generated name associated with the event.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scheduleEventDuration (Updatable) The duration of this block of time. The duration must be specified and be of the ISO-8601 format for durations.
         * 
         * @return builder
         * 
         */
        public Builder scheduleEventDuration(Output<String> scheduleEventDuration) {
            $.scheduleEventDuration = scheduleEventDuration;
            return this;
        }

        /**
         * @param scheduleEventDuration (Updatable) The duration of this block of time. The duration must be specified and be of the ISO-8601 format for durations.
         * 
         * @return builder
         * 
         */
        public Builder scheduleEventDuration(String scheduleEventDuration) {
            return scheduleEventDuration(Output.of(scheduleEventDuration));
        }

        /**
         * @param scheduleEventRecurrences (Updatable) Frequency of recurrence of schedule block. When this field is not included, the event is assumed to be a one time occurrence. The frequency field is strictly parsed and must conform to RFC-5545 formatting for recurrences.
         * 
         * @return builder
         * 
         */
        public Builder scheduleEventRecurrences(@Nullable Output<String> scheduleEventRecurrences) {
            $.scheduleEventRecurrences = scheduleEventRecurrences;
            return this;
        }

        /**
         * @param scheduleEventRecurrences (Updatable) Frequency of recurrence of schedule block. When this field is not included, the event is assumed to be a one time occurrence. The frequency field is strictly parsed and must conform to RFC-5545 formatting for recurrences.
         * 
         * @return builder
         * 
         */
        public Builder scheduleEventRecurrences(String scheduleEventRecurrences) {
            return scheduleEventRecurrences(Output.of(scheduleEventRecurrences));
        }

        /**
         * @param timeStart (Updatable) The date and time when the Compute Cloud@Customer upgrade schedule event starts, inclusive. An RFC3339 formatted UTC datetime string. For an event with recurrences, this is the date that a recurrence can start being applied.
         * 
         * @return builder
         * 
         */
        public Builder timeStart(Output<String> timeStart) {
            $.timeStart = timeStart;
            return this;
        }

        /**
         * @param timeStart (Updatable) The date and time when the Compute Cloud@Customer upgrade schedule event starts, inclusive. An RFC3339 formatted UTC datetime string. For an event with recurrences, this is the date that a recurrence can start being applied.
         * 
         * @return builder
         * 
         */
        public Builder timeStart(String timeStart) {
            return timeStart(Output.of(timeStart));
        }

        public AtCustomerCccUpgradeScheduleEventArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("AtCustomerCccUpgradeScheduleEventArgs", "description");
            }
            if ($.scheduleEventDuration == null) {
                throw new MissingRequiredPropertyException("AtCustomerCccUpgradeScheduleEventArgs", "scheduleEventDuration");
            }
            if ($.timeStart == null) {
                throw new MissingRequiredPropertyException("AtCustomerCccUpgradeScheduleEventArgs", "timeStart");
            }
            return $;
        }
    }

}
