// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeCloud.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ComputeCloud.inputs.GetAtCustomerCccUpgradeSchedulesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAtCustomerCccUpgradeSchedulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAtCustomerCccUpgradeSchedulesPlainArgs Empty = new GetAtCustomerCccUpgradeSchedulesPlainArgs();

    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    @Import(name="accessLevel")
    private @Nullable String accessLevel;

    /**
     * @return Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }

    /**
     * Compute Cloud{@literal @}Customer upgrade schedule [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="cccUpgradeScheduleId")
    private @Nullable String cccUpgradeScheduleId;

    /**
     * @return Compute Cloud{@literal @}Customer upgrade schedule [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> cccUpgradeScheduleId() {
        return Optional.ofNullable(this.cccUpgradeScheduleId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and sub-compartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and sub-compartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * A filter to return only resources whose display name contains the substring.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable String displayNameContains;

    /**
     * @return A filter to return only resources whose display name contains the substring.
     * 
     */
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    @Import(name="filters")
    private @Nullable List<GetAtCustomerCccUpgradeSchedulesFilter> filters;

    public Optional<List<GetAtCustomerCccUpgradeSchedulesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return resources only when their lifecycleState matches the given lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return resources only when their lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAtCustomerCccUpgradeSchedulesPlainArgs() {}

    private GetAtCustomerCccUpgradeSchedulesPlainArgs(GetAtCustomerCccUpgradeSchedulesPlainArgs $) {
        this.accessLevel = $.accessLevel;
        this.cccUpgradeScheduleId = $.cccUpgradeScheduleId;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.displayName = $.displayName;
        this.displayNameContains = $.displayNameContains;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAtCustomerCccUpgradeSchedulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAtCustomerCccUpgradeSchedulesPlainArgs $;

        public Builder() {
            $ = new GetAtCustomerCccUpgradeSchedulesPlainArgs();
        }

        public Builder(GetAtCustomerCccUpgradeSchedulesPlainArgs defaults) {
            $ = new GetAtCustomerCccUpgradeSchedulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(@Nullable String accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param cccUpgradeScheduleId Compute Cloud{@literal @}Customer upgrade schedule [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder cccUpgradeScheduleId(@Nullable String cccUpgradeScheduleId) {
            $.cccUpgradeScheduleId = cccUpgradeScheduleId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and sub-compartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayNameContains A filter to return only resources whose display name contains the substring.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable String displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        public Builder filters(@Nullable List<GetAtCustomerCccUpgradeSchedulesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAtCustomerCccUpgradeSchedulesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state A filter to return resources only when their lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetAtCustomerCccUpgradeSchedulesPlainArgs build() {
            return $;
        }
    }

}
