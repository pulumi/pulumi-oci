// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeCloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AtCustomerCccInfrastructureInfrastructureInventory {
    /**
     * @return The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for capacity storage.
     * 
     */
    private @Nullable Integer capacityStorageTrayCount;
    /**
     * @return The number of compute nodes that are available and usable on the Compute Cloud@Customer infrastructure rack. There is no distinction of compute node type in this information.
     * 
     */
    private @Nullable Integer computeNodeCount;
    /**
     * @return The number of management nodes that are available and in active use on the Compute Cloud@Customer infrastructure rack.
     * 
     */
    private @Nullable Integer managementNodeCount;
    /**
     * @return The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for performance storage.
     * 
     */
    private @Nullable Integer performanceStorageTrayCount;
    /**
     * @return The serial number of the Compute Cloud@Customer infrastructure rack.
     * 
     */
    private @Nullable String serialNumber;

    private AtCustomerCccInfrastructureInfrastructureInventory() {}
    /**
     * @return The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for capacity storage.
     * 
     */
    public Optional<Integer> capacityStorageTrayCount() {
        return Optional.ofNullable(this.capacityStorageTrayCount);
    }
    /**
     * @return The number of compute nodes that are available and usable on the Compute Cloud@Customer infrastructure rack. There is no distinction of compute node type in this information.
     * 
     */
    public Optional<Integer> computeNodeCount() {
        return Optional.ofNullable(this.computeNodeCount);
    }
    /**
     * @return The number of management nodes that are available and in active use on the Compute Cloud@Customer infrastructure rack.
     * 
     */
    public Optional<Integer> managementNodeCount() {
        return Optional.ofNullable(this.managementNodeCount);
    }
    /**
     * @return The number of storage trays in the Compute Cloud@Customer infrastructure rack that are designated for performance storage.
     * 
     */
    public Optional<Integer> performanceStorageTrayCount() {
        return Optional.ofNullable(this.performanceStorageTrayCount);
    }
    /**
     * @return The serial number of the Compute Cloud@Customer infrastructure rack.
     * 
     */
    public Optional<String> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AtCustomerCccInfrastructureInfrastructureInventory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer capacityStorageTrayCount;
        private @Nullable Integer computeNodeCount;
        private @Nullable Integer managementNodeCount;
        private @Nullable Integer performanceStorageTrayCount;
        private @Nullable String serialNumber;
        public Builder() {}
        public Builder(AtCustomerCccInfrastructureInfrastructureInventory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityStorageTrayCount = defaults.capacityStorageTrayCount;
    	      this.computeNodeCount = defaults.computeNodeCount;
    	      this.managementNodeCount = defaults.managementNodeCount;
    	      this.performanceStorageTrayCount = defaults.performanceStorageTrayCount;
    	      this.serialNumber = defaults.serialNumber;
        }

        @CustomType.Setter
        public Builder capacityStorageTrayCount(@Nullable Integer capacityStorageTrayCount) {

            this.capacityStorageTrayCount = capacityStorageTrayCount;
            return this;
        }
        @CustomType.Setter
        public Builder computeNodeCount(@Nullable Integer computeNodeCount) {

            this.computeNodeCount = computeNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder managementNodeCount(@Nullable Integer managementNodeCount) {

            this.managementNodeCount = managementNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder performanceStorageTrayCount(@Nullable Integer performanceStorageTrayCount) {

            this.performanceStorageTrayCount = performanceStorageTrayCount;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(@Nullable String serialNumber) {

            this.serialNumber = serialNumber;
            return this;
        }
        public AtCustomerCccInfrastructureInfrastructureInventory build() {
            final var _resultValue = new AtCustomerCccInfrastructureInfrastructureInventory();
            _resultValue.capacityStorageTrayCount = capacityStorageTrayCount;
            _resultValue.computeNodeCount = computeNodeCount;
            _resultValue.managementNodeCount = managementNodeCount;
            _resultValue.performanceStorageTrayCount = performanceStorageTrayCount;
            _resultValue.serialNumber = serialNumber;
            return _resultValue;
        }
    }
}
