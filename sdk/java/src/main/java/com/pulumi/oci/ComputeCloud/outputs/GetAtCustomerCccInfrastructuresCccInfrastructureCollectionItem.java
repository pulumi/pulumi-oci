// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeCloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ComputeCloud.outputs.GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureInventory;
import com.pulumi.oci.ComputeCloud.outputs.GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureNetworkConfiguration;
import com.pulumi.oci.ComputeCloud.outputs.GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemUpgradeInformation;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItem {
    /**
     * @return Schedule used for upgrades. If no schedule is associated with the infrastructure, it can be updated at any time.
     * 
     */
    private String cccUpgradeScheduleId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return A message describing the current connection state in more detail.
     * 
     */
    private String connectionDetails;
    /**
     * @return The current connection state of the infrastructure. A user can only update it from REQUEST to READY or from any state back to REJECT. The system automatically handles the REJECT to REQUEST, READY to CONNECTED, or CONNECTED to DISCONNECTED transitions.
     * 
     */
    private String connectionState;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A mutable client-meaningful text description of the Compute Cloud@Customer infrastructure. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The Compute Cloud@Customer infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This cannot be changed once created.
     * 
     */
    private String id;
    /**
     * @return Inventory for a Compute Cloud@Customer infrastructure. This information cannot be updated and is from the infrastructure. The information will only be available after the connectionState is transitioned to CONNECTED.
     * 
     */
    private List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureInventory> infrastructureInventories;
    /**
     * @return Configuration information for the Compute Cloud@Customer infrastructure. This  network configuration information cannot be updated and is retrieved from the data center. The information will only be available after the connectionState is transitioned to CONNECTED.
     * 
     */
    private List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureNetworkConfiguration> infrastructureNetworkConfigurations;
    /**
     * @return A message describing the current lifecycle state in more detail. For example, this can be used to provide actionable information for a resource that is in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Fingerprint of a Compute Cloud@Customer infrastructure in a data center generated during the initial connection to this resource. The fingerprint should be verified by the administrator when changing the connectionState from REQUEST to READY.
     * 
     */
    private String provisioningFingerprint;
    /**
     * @return Code that is required for service personnel to connect a Compute Cloud@Customer infrastructure in a data center to this resource. This code will only be available when the connectionState is REJECT (usually at create time of the Compute Cloud@Customer infrastructure).
     * 
     */
    private String provisioningPin;
    /**
     * @return The Compute Cloud@Customer infrastructure short name. This cannot be changed once created. The short name is used to refer to the infrastructure in several contexts and is unique.
     * 
     */
    private String shortName;
    /**
     * @return A filter used to return only resources that match the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network subnet that is used to communicate with Compute Cloud@Customer infrastructure.
     * 
     */
    private String subnetId;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return Compute Cloud@Customer infrastructure creation date and time, using an RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return Compute Cloud@Customer infrastructure updated date and time, using an RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    /**
     * @return Upgrade information that relates to a Compute Cloud@Customer infrastructure. This information cannot be updated.
     * 
     */
    private List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemUpgradeInformation> upgradeInformations;

    private GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItem() {}
    /**
     * @return Schedule used for upgrades. If no schedule is associated with the infrastructure, it can be updated at any time.
     * 
     */
    public String cccUpgradeScheduleId() {
        return this.cccUpgradeScheduleId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A message describing the current connection state in more detail.
     * 
     */
    public String connectionDetails() {
        return this.connectionDetails;
    }
    /**
     * @return The current connection state of the infrastructure. A user can only update it from REQUEST to READY or from any state back to REJECT. The system automatically handles the REJECT to REQUEST, READY to CONNECTED, or CONNECTED to DISCONNECTED transitions.
     * 
     */
    public String connectionState() {
        return this.connectionState;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A mutable client-meaningful text description of the Compute Cloud@Customer infrastructure. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The Compute Cloud@Customer infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This cannot be changed once created.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Inventory for a Compute Cloud@Customer infrastructure. This information cannot be updated and is from the infrastructure. The information will only be available after the connectionState is transitioned to CONNECTED.
     * 
     */
    public List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureInventory> infrastructureInventories() {
        return this.infrastructureInventories;
    }
    /**
     * @return Configuration information for the Compute Cloud@Customer infrastructure. This  network configuration information cannot be updated and is retrieved from the data center. The information will only be available after the connectionState is transitioned to CONNECTED.
     * 
     */
    public List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureNetworkConfiguration> infrastructureNetworkConfigurations() {
        return this.infrastructureNetworkConfigurations;
    }
    /**
     * @return A message describing the current lifecycle state in more detail. For example, this can be used to provide actionable information for a resource that is in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Fingerprint of a Compute Cloud@Customer infrastructure in a data center generated during the initial connection to this resource. The fingerprint should be verified by the administrator when changing the connectionState from REQUEST to READY.
     * 
     */
    public String provisioningFingerprint() {
        return this.provisioningFingerprint;
    }
    /**
     * @return Code that is required for service personnel to connect a Compute Cloud@Customer infrastructure in a data center to this resource. This code will only be available when the connectionState is REJECT (usually at create time of the Compute Cloud@Customer infrastructure).
     * 
     */
    public String provisioningPin() {
        return this.provisioningPin;
    }
    /**
     * @return The Compute Cloud@Customer infrastructure short name. This cannot be changed once created. The short name is used to refer to the infrastructure in several contexts and is unique.
     * 
     */
    public String shortName() {
        return this.shortName;
    }
    /**
     * @return A filter used to return only resources that match the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network subnet that is used to communicate with Compute Cloud@Customer infrastructure.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Compute Cloud@Customer infrastructure creation date and time, using an RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Compute Cloud@Customer infrastructure updated date and time, using an RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Upgrade information that relates to a Compute Cloud@Customer infrastructure. This information cannot be updated.
     * 
     */
    public List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemUpgradeInformation> upgradeInformations() {
        return this.upgradeInformations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cccUpgradeScheduleId;
        private String compartmentId;
        private String connectionDetails;
        private String connectionState;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureInventory> infrastructureInventories;
        private List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureNetworkConfiguration> infrastructureNetworkConfigurations;
        private String lifecycleDetails;
        private String provisioningFingerprint;
        private String provisioningPin;
        private String shortName;
        private String state;
        private String subnetId;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemUpgradeInformation> upgradeInformations;
        public Builder() {}
        public Builder(GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cccUpgradeScheduleId = defaults.cccUpgradeScheduleId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionDetails = defaults.connectionDetails;
    	      this.connectionState = defaults.connectionState;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.infrastructureInventories = defaults.infrastructureInventories;
    	      this.infrastructureNetworkConfigurations = defaults.infrastructureNetworkConfigurations;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.provisioningFingerprint = defaults.provisioningFingerprint;
    	      this.provisioningPin = defaults.provisioningPin;
    	      this.shortName = defaults.shortName;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.upgradeInformations = defaults.upgradeInformations;
        }

        @CustomType.Setter
        public Builder cccUpgradeScheduleId(String cccUpgradeScheduleId) {
            this.cccUpgradeScheduleId = Objects.requireNonNull(cccUpgradeScheduleId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectionDetails(String connectionDetails) {
            this.connectionDetails = Objects.requireNonNull(connectionDetails);
            return this;
        }
        @CustomType.Setter
        public Builder connectionState(String connectionState) {
            this.connectionState = Objects.requireNonNull(connectionState);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureInventories(List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureInventory> infrastructureInventories) {
            this.infrastructureInventories = Objects.requireNonNull(infrastructureInventories);
            return this;
        }
        public Builder infrastructureInventories(GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureInventory... infrastructureInventories) {
            return infrastructureInventories(List.of(infrastructureInventories));
        }
        @CustomType.Setter
        public Builder infrastructureNetworkConfigurations(List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureNetworkConfiguration> infrastructureNetworkConfigurations) {
            this.infrastructureNetworkConfigurations = Objects.requireNonNull(infrastructureNetworkConfigurations);
            return this;
        }
        public Builder infrastructureNetworkConfigurations(GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemInfrastructureNetworkConfiguration... infrastructureNetworkConfigurations) {
            return infrastructureNetworkConfigurations(List.of(infrastructureNetworkConfigurations));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningFingerprint(String provisioningFingerprint) {
            this.provisioningFingerprint = Objects.requireNonNull(provisioningFingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningPin(String provisioningPin) {
            this.provisioningPin = Objects.requireNonNull(provisioningPin);
            return this;
        }
        @CustomType.Setter
        public Builder shortName(String shortName) {
            this.shortName = Objects.requireNonNull(shortName);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder upgradeInformations(List<GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemUpgradeInformation> upgradeInformations) {
            this.upgradeInformations = Objects.requireNonNull(upgradeInformations);
            return this;
        }
        public Builder upgradeInformations(GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItemUpgradeInformation... upgradeInformations) {
            return upgradeInformations(List.of(upgradeInformations));
        }
        public GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItem build() {
            final var o = new GetAtCustomerCccInfrastructuresCccInfrastructureCollectionItem();
            o.cccUpgradeScheduleId = cccUpgradeScheduleId;
            o.compartmentId = compartmentId;
            o.connectionDetails = connectionDetails;
            o.connectionState = connectionState;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.infrastructureInventories = infrastructureInventories;
            o.infrastructureNetworkConfigurations = infrastructureNetworkConfigurations;
            o.lifecycleDetails = lifecycleDetails;
            o.provisioningFingerprint = provisioningFingerprint;
            o.provisioningPin = provisioningPin;
            o.shortName = shortName;
            o.state = state;
            o.subnetId = subnetId;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.upgradeInformations = upgradeInformations;
            return o;
        }
    }
}
