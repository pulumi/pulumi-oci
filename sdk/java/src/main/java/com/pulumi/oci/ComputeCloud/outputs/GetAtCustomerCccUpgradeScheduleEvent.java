// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeCloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAtCustomerCccUpgradeScheduleEvent {
    /**
     * @return A description of the Compute Cloud@Customer upgrade schedule time block.
     * 
     */
    private String description;
    /**
     * @return Generated name associated with the event.
     * 
     */
    private String name;
    /**
     * @return The duration of this block of time. The duration must be specified and be of the ISO-8601 format for durations.
     * 
     */
    private String scheduleEventDuration;
    /**
     * @return Frequency of recurrence of schedule block. When this field is not included, the event is assumed to be a one time occurrence. The frequency field is strictly parsed and must conform to RFC-5545 formatting for recurrences.
     * 
     */
    private String scheduleEventRecurrences;
    /**
     * @return The date and time when the Compute Cloud@Customer upgrade schedule event starts, inclusive. An RFC3339 formatted UTC datetime string. For an event with recurrences, this is the date that a recurrence can start being applied.
     * 
     */
    private String timeStart;

    private GetAtCustomerCccUpgradeScheduleEvent() {}
    /**
     * @return A description of the Compute Cloud@Customer upgrade schedule time block.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Generated name associated with the event.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The duration of this block of time. The duration must be specified and be of the ISO-8601 format for durations.
     * 
     */
    public String scheduleEventDuration() {
        return this.scheduleEventDuration;
    }
    /**
     * @return Frequency of recurrence of schedule block. When this field is not included, the event is assumed to be a one time occurrence. The frequency field is strictly parsed and must conform to RFC-5545 formatting for recurrences.
     * 
     */
    public String scheduleEventRecurrences() {
        return this.scheduleEventRecurrences;
    }
    /**
     * @return The date and time when the Compute Cloud@Customer upgrade schedule event starts, inclusive. An RFC3339 formatted UTC datetime string. For an event with recurrences, this is the date that a recurrence can start being applied.
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAtCustomerCccUpgradeScheduleEvent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String name;
        private String scheduleEventDuration;
        private String scheduleEventRecurrences;
        private String timeStart;
        public Builder() {}
        public Builder(GetAtCustomerCccUpgradeScheduleEvent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.scheduleEventDuration = defaults.scheduleEventDuration;
    	      this.scheduleEventRecurrences = defaults.scheduleEventRecurrences;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleEventDuration(String scheduleEventDuration) {
            this.scheduleEventDuration = Objects.requireNonNull(scheduleEventDuration);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleEventRecurrences(String scheduleEventRecurrences) {
            this.scheduleEventRecurrences = Objects.requireNonNull(scheduleEventRecurrences);
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        public GetAtCustomerCccUpgradeScheduleEvent build() {
            final var o = new GetAtCustomerCccUpgradeScheduleEvent();
            o.description = description;
            o.name = name;
            o.scheduleEventDuration = scheduleEventDuration;
            o.scheduleEventRecurrences = scheduleEventRecurrences;
            o.timeStart = timeStart;
            return o;
        }
    }
}
