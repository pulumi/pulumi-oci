// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeInstanceAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ComputeInstanceAgent.outputs.GetInstanceAgentPluginsFilter;
import com.pulumi.oci.ComputeInstanceAgent.outputs.GetInstanceAgentPluginsInstanceAgentPlugin;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceAgentPluginsResult {
    private String compartmentId;
    private @Nullable List<GetInstanceAgentPluginsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of instance_agent_plugins.
     * 
     */
    private List<GetInstanceAgentPluginsInstanceAgentPlugin> instanceAgentPlugins;
    private String instanceagentId;
    /**
     * @return The plugin name
     * 
     */
    private @Nullable String name;
    /**
     * @return The plugin status Specified the plugin state on the instance * `RUNNING` - The plugin is in running state * `STOPPED` - The plugin is in stopped state * `NOT_SUPPORTED` - The plugin is not supported on this platform * `INVALID` - The plugin state is not recognizable by the service
     * 
     */
    private @Nullable String status;

    private GetInstanceAgentPluginsResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetInstanceAgentPluginsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of instance_agent_plugins.
     * 
     */
    public List<GetInstanceAgentPluginsInstanceAgentPlugin> instanceAgentPlugins() {
        return this.instanceAgentPlugins;
    }
    public String instanceagentId() {
        return this.instanceagentId;
    }
    /**
     * @return The plugin name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The plugin status Specified the plugin state on the instance * `RUNNING` - The plugin is in running state * `STOPPED` - The plugin is in stopped state * `NOT_SUPPORTED` - The plugin is not supported on this platform * `INVALID` - The plugin state is not recognizable by the service
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceAgentPluginsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetInstanceAgentPluginsFilter> filters;
        private String id;
        private List<GetInstanceAgentPluginsInstanceAgentPlugin> instanceAgentPlugins;
        private String instanceagentId;
        private @Nullable String name;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetInstanceAgentPluginsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceAgentPlugins = defaults.instanceAgentPlugins;
    	      this.instanceagentId = defaults.instanceagentId;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetInstanceAgentPluginsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetInstanceAgentPluginsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetInstanceAgentPluginsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstanceAgentPluginsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceAgentPlugins(List<GetInstanceAgentPluginsInstanceAgentPlugin> instanceAgentPlugins) {
            if (instanceAgentPlugins == null) {
              throw new MissingRequiredPropertyException("GetInstanceAgentPluginsResult", "instanceAgentPlugins");
            }
            this.instanceAgentPlugins = instanceAgentPlugins;
            return this;
        }
        public Builder instanceAgentPlugins(GetInstanceAgentPluginsInstanceAgentPlugin... instanceAgentPlugins) {
            return instanceAgentPlugins(List.of(instanceAgentPlugins));
        }
        @CustomType.Setter
        public Builder instanceagentId(String instanceagentId) {
            if (instanceagentId == null) {
              throw new MissingRequiredPropertyException("GetInstanceAgentPluginsResult", "instanceagentId");
            }
            this.instanceagentId = instanceagentId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetInstanceAgentPluginsResult build() {
            final var _resultValue = new GetInstanceAgentPluginsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.instanceAgentPlugins = instanceAgentPlugins;
            _resultValue.instanceagentId = instanceagentId;
            _resultValue.name = name;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
