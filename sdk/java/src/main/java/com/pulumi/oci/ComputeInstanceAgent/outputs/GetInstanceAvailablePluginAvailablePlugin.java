// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeInstanceAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceAvailablePluginAvailablePlugin {
    /**
     * @return Is the plugin enabled or disabled by default
     * 
     */
    private Boolean isEnabledByDefault;
    /**
     * @return Is the plugin supported or not
     * 
     */
    private Boolean isSupported;
    /**
     * @return The plugin name
     * 
     */
    private String name;
    /**
     * @return A brief description of the plugin functionality
     * 
     */
    private String summary;

    private GetInstanceAvailablePluginAvailablePlugin() {}
    /**
     * @return Is the plugin enabled or disabled by default
     * 
     */
    public Boolean isEnabledByDefault() {
        return this.isEnabledByDefault;
    }
    /**
     * @return Is the plugin supported or not
     * 
     */
    public Boolean isSupported() {
        return this.isSupported;
    }
    /**
     * @return The plugin name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A brief description of the plugin functionality
     * 
     */
    public String summary() {
        return this.summary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceAvailablePluginAvailablePlugin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isEnabledByDefault;
        private Boolean isSupported;
        private String name;
        private String summary;
        public Builder() {}
        public Builder(GetInstanceAvailablePluginAvailablePlugin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEnabledByDefault = defaults.isEnabledByDefault;
    	      this.isSupported = defaults.isSupported;
    	      this.name = defaults.name;
    	      this.summary = defaults.summary;
        }

        @CustomType.Setter
        public Builder isEnabledByDefault(Boolean isEnabledByDefault) {
            this.isEnabledByDefault = Objects.requireNonNull(isEnabledByDefault);
            return this;
        }
        @CustomType.Setter
        public Builder isSupported(Boolean isSupported) {
            this.isSupported = Objects.requireNonNull(isSupported);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder summary(String summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }
        public GetInstanceAvailablePluginAvailablePlugin build() {
            final var _resultValue = new GetInstanceAvailablePluginAvailablePlugin();
            _resultValue.isEnabledByDefault = isEnabledByDefault;
            _resultValue.isSupported = isSupported;
            _resultValue.name = name;
            _resultValue.summary = summary;
            return _resultValue;
        }
    }
}
