// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.ContainerEngine.VirtualNodePoolArgs;
import com.pulumi.oci.ContainerEngine.inputs.VirtualNodePoolState;
import com.pulumi.oci.ContainerEngine.outputs.VirtualNodePoolInitialVirtualNodeLabel;
import com.pulumi.oci.ContainerEngine.outputs.VirtualNodePoolPlacementConfiguration;
import com.pulumi.oci.ContainerEngine.outputs.VirtualNodePoolPodConfiguration;
import com.pulumi.oci.ContainerEngine.outputs.VirtualNodePoolTaint;
import com.pulumi.oci.ContainerEngine.outputs.VirtualNodePoolVirtualNodeTags;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Virtual Node Pool resource in Oracle Cloud Infrastructure Container Engine service.
 * 
 * Create a new virtual node pool.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.ContainerEngine.VirtualNodePool;
 * import com.pulumi.oci.ContainerEngine.VirtualNodePoolArgs;
 * import com.pulumi.oci.ContainerEngine.inputs.VirtualNodePoolPlacementConfigurationArgs;
 * import com.pulumi.oci.ContainerEngine.inputs.VirtualNodePoolInitialVirtualNodeLabelArgs;
 * import com.pulumi.oci.ContainerEngine.inputs.VirtualNodePoolPodConfigurationArgs;
 * import com.pulumi.oci.ContainerEngine.inputs.VirtualNodePoolTaintArgs;
 * import com.pulumi.oci.ContainerEngine.inputs.VirtualNodePoolVirtualNodeTagsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testVirtualNodePool = new VirtualNodePool(&#34;testVirtualNodePool&#34;, VirtualNodePoolArgs.builder()        
 *             .clusterId(oci_containerengine_cluster.test_cluster().id())
 *             .compartmentId(var_.compartment_id())
 *             .displayName(var_.virtual_node_pool_display_name())
 *             .placementConfigurations(VirtualNodePoolPlacementConfigurationArgs.builder()
 *                 .availabilityDomain(var_.virtual_node_pool_placement_configurations_availability_domain())
 *                 .faultDomains(var_.virtual_node_pool_placement_configurations_fault_domain())
 *                 .subnetId(oci_core_subnet.test_subnet().id())
 *                 .build())
 *             .definedTags(Map.of(&#34;Operations.CostCenter&#34;, &#34;42&#34;))
 *             .freeformTags(Map.of(&#34;Department&#34;, &#34;Finance&#34;))
 *             .initialVirtualNodeLabels(VirtualNodePoolInitialVirtualNodeLabelArgs.builder()
 *                 .key(var_.virtual_node_pool_initial_virtual_node_labels_key())
 *                 .value(var_.virtual_node_pool_initial_virtual_node_labels_value())
 *                 .build())
 *             .nsgIds(var_.virtual_node_pool_nsg_ids())
 *             .podConfiguration(VirtualNodePoolPodConfigurationArgs.builder()
 *                 .shape(var_.virtual_node_pool_pod_configuration_shape())
 *                 .subnetId(oci_core_subnet.test_subnet().id())
 *                 .nsgIds(var_.virtual_node_pool_pod_configuration_nsg_ids())
 *                 .build())
 *             .size(var_.virtual_node_pool_size())
 *             .taints(VirtualNodePoolTaintArgs.builder()
 *                 .effect(var_.virtual_node_pool_taints_effect())
 *                 .key(var_.virtual_node_pool_taints_key())
 *                 .value(var_.virtual_node_pool_taints_value())
 *                 .build())
 *             .virtualNodeTags(VirtualNodePoolVirtualNodeTagsArgs.builder()
 *                 .definedTags(Map.of(&#34;Operations.CostCenter&#34;, &#34;42&#34;))
 *                 .freeformTags(Map.of(&#34;Department&#34;, &#34;Finance&#34;))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * VirtualNodePools can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:ContainerEngine/virtualNodePool:VirtualNodePool test_virtual_node_pool &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:ContainerEngine/virtualNodePool:VirtualNodePool")
public class VirtualNodePool extends com.pulumi.resources.CustomResource {
    /**
     * The cluster the virtual node pool is associated with. A virtual node pool can only be associated with one cluster.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return The cluster the virtual node pool is associated with. A virtual node pool can only be associated with one cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * Compartment of the virtual node pool.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return Compartment of the virtual node pool.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) Display name of the virtual node pool. This is a non-unique value.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) Display name of the virtual node pool. This is a non-unique value.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * (Updatable) Initial labels that will be added to the Kubernetes Virtual Node object when it registers.
     * 
     */
    @Export(name="initialVirtualNodeLabels", refs={List.class,VirtualNodePoolInitialVirtualNodeLabel.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VirtualNodePoolInitialVirtualNodeLabel>> initialVirtualNodeLabels;

    /**
     * @return (Updatable) Initial labels that will be added to the Kubernetes Virtual Node object when it registers.
     * 
     */
    public Output<Optional<List<VirtualNodePoolInitialVirtualNodeLabel>>> initialVirtualNodeLabels() {
        return Codegen.optional(this.initialVirtualNodeLabels);
    }
    /**
     * The version of Kubernetes running on the nodes in the node pool.
     * 
     */
    @Export(name="kubernetesVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kubernetesVersion;

    /**
     * @return The version of Kubernetes running on the nodes in the node pool.
     * 
     */
    public Output<Optional<String>> kubernetesVersion() {
        return Codegen.optional(this.kubernetesVersion);
    }
    /**
     * Details about the state of the Virtual Node Pool.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lifecycleDetails;

    /**
     * @return Details about the state of the Virtual Node Pool.
     * 
     */
    public Output<Optional<String>> lifecycleDetails() {
        return Codegen.optional(this.lifecycleDetails);
    }
    /**
     * (Updatable) List of network security group IDs applied to the Pod VNIC.
     * 
     */
    @Export(name="nsgIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> nsgIds;

    /**
     * @return (Updatable) List of network security group IDs applied to the Pod VNIC.
     * 
     */
    public Output<Optional<List<String>>> nsgIds() {
        return Codegen.optional(this.nsgIds);
    }
    /**
     * (Updatable) The list of placement configurations which determines where Virtual Nodes will be provisioned across as it relates to the subnet and availability domains. The size attribute determines how many we evenly spread across these placement configurations
     * 
     */
    @Export(name="placementConfigurations", refs={List.class,VirtualNodePoolPlacementConfiguration.class}, tree="[0,1]")
    private Output<List<VirtualNodePoolPlacementConfiguration>> placementConfigurations;

    /**
     * @return (Updatable) The list of placement configurations which determines where Virtual Nodes will be provisioned across as it relates to the subnet and availability domains. The size attribute determines how many we evenly spread across these placement configurations
     * 
     */
    public Output<List<VirtualNodePoolPlacementConfiguration>> placementConfigurations() {
        return this.placementConfigurations;
    }
    /**
     * (Updatable) The pod configuration for pods run on virtual nodes of this virtual node pool.
     * 
     */
    @Export(name="podConfiguration", refs={VirtualNodePoolPodConfiguration.class}, tree="[0]")
    private Output<VirtualNodePoolPodConfiguration> podConfiguration;

    /**
     * @return (Updatable) The pod configuration for pods run on virtual nodes of this virtual node pool.
     * 
     */
    public Output<VirtualNodePoolPodConfiguration> podConfiguration() {
        return this.podConfiguration;
    }
    /**
     * (Updatable) The number of Virtual Nodes that should be in the Virtual Node Pool. The placement configurations determine where these virtual nodes are placed.
     * 
     */
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    /**
     * @return (Updatable) The number of Virtual Nodes that should be in the Virtual Node Pool. The placement configurations determine where these virtual nodes are placed.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }
    /**
     * The state of the Virtual Node Pool.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The state of the Virtual Node Pool.
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> systemTags() {
        return Codegen.optional(this.systemTags);
    }
    /**
     * (Updatable) A taint is a collection of &lt;key, value, effect&gt;. These taints will be applied to the Virtual Nodes of this Virtual Node Pool for Kubernetes scheduling.
     * 
     */
    @Export(name="taints", refs={List.class,VirtualNodePoolTaint.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VirtualNodePoolTaint>> taints;

    /**
     * @return (Updatable) A taint is a collection of &lt;key, value, effect&gt;. These taints will be applied to the Virtual Nodes of this Virtual Node Pool for Kubernetes scheduling.
     * 
     */
    public Output<Optional<List<VirtualNodePoolTaint>>> taints() {
        return Codegen.optional(this.taints);
    }
    /**
     * The time the virtual node pool was created.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The time the virtual node pool was created.
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * The time the virtual node pool was updated.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeUpdated;

    /**
     * @return The time the virtual node pool was updated.
     * 
     */
    public Output<Optional<String>> timeUpdated() {
        return Codegen.optional(this.timeUpdated);
    }
    /**
     * (Updatable) The tags associated to the virtual nodes in this virtual node pool.
     * 
     */
    @Export(name="virtualNodeTags", refs={VirtualNodePoolVirtualNodeTags.class}, tree="[0]")
    private Output</* @Nullable */ VirtualNodePoolVirtualNodeTags> virtualNodeTags;

    /**
     * @return (Updatable) The tags associated to the virtual nodes in this virtual node pool.
     * 
     */
    public Output<Optional<VirtualNodePoolVirtualNodeTags>> virtualNodeTags() {
        return Codegen.optional(this.virtualNodeTags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualNodePool(String name) {
        this(name, VirtualNodePoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualNodePool(String name, VirtualNodePoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualNodePool(String name, VirtualNodePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ContainerEngine/virtualNodePool:VirtualNodePool", name, args == null ? VirtualNodePoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VirtualNodePool(String name, Output<String> id, @Nullable VirtualNodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ContainerEngine/virtualNodePool:VirtualNodePool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualNodePool get(String name, Output<String> id, @Nullable VirtualNodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VirtualNodePool(name, id, state, options);
    }
}
