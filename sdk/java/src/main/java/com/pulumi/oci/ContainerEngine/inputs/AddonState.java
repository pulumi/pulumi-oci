// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ContainerEngine.inputs.AddonAddonErrorArgs;
import com.pulumi.oci.ContainerEngine.inputs.AddonConfigurationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AddonState extends com.pulumi.resources.ResourceArgs {

    public static final AddonState Empty = new AddonState();

    /**
     * The error info of the addon.
     * 
     */
    @Import(name="addonErrors")
    private @Nullable Output<List<AddonAddonErrorArgs>> addonErrors;

    /**
     * @return The error info of the addon.
     * 
     */
    public Optional<Output<List<AddonAddonErrorArgs>>> addonErrors() {
        return Optional.ofNullable(this.addonErrors);
    }

    /**
     * The name of the addon.
     * 
     */
    @Import(name="addonName")
    private @Nullable Output<String> addonName;

    /**
     * @return The name of the addon.
     * 
     */
    public Optional<Output<String>> addonName() {
        return Optional.ofNullable(this.addonName);
    }

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * (Updatable) Addon configuration details.
     * 
     */
    @Import(name="configurations")
    private @Nullable Output<List<AddonConfigurationArgs>> configurations;

    /**
     * @return (Updatable) Addon configuration details.
     * 
     */
    public Optional<Output<List<AddonConfigurationArgs>>> configurations() {
        return Optional.ofNullable(this.configurations);
    }

    /**
     * current installed version of the addon
     * 
     */
    @Import(name="currentInstalledVersion")
    private @Nullable Output<String> currentInstalledVersion;

    /**
     * @return current installed version of the addon
     * 
     */
    public Optional<Output<String>> currentInstalledVersion() {
        return Optional.ofNullable(this.currentInstalledVersion);
    }

    /**
     * Whether to remove addon resource in deletion.
     * 
     */
    @Import(name="removeAddonResourcesOnDelete")
    private @Nullable Output<Boolean> removeAddonResourcesOnDelete;

    /**
     * @return Whether to remove addon resource in deletion.
     * 
     */
    public Optional<Output<Boolean>> removeAddonResourcesOnDelete() {
        return Optional.ofNullable(this.removeAddonResourcesOnDelete);
    }

    /**
     * The state of the addon.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the addon.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time the cluster was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the cluster was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * (Updatable) The version of addon to be installed.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return (Updatable) The version of addon to be installed.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private AddonState() {}

    private AddonState(AddonState $) {
        this.addonErrors = $.addonErrors;
        this.addonName = $.addonName;
        this.clusterId = $.clusterId;
        this.configurations = $.configurations;
        this.currentInstalledVersion = $.currentInstalledVersion;
        this.removeAddonResourcesOnDelete = $.removeAddonResourcesOnDelete;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AddonState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonState $;

        public Builder() {
            $ = new AddonState();
        }

        public Builder(AddonState defaults) {
            $ = new AddonState(Objects.requireNonNull(defaults));
        }

        /**
         * @param addonErrors The error info of the addon.
         * 
         * @return builder
         * 
         */
        public Builder addonErrors(@Nullable Output<List<AddonAddonErrorArgs>> addonErrors) {
            $.addonErrors = addonErrors;
            return this;
        }

        /**
         * @param addonErrors The error info of the addon.
         * 
         * @return builder
         * 
         */
        public Builder addonErrors(List<AddonAddonErrorArgs> addonErrors) {
            return addonErrors(Output.of(addonErrors));
        }

        /**
         * @param addonErrors The error info of the addon.
         * 
         * @return builder
         * 
         */
        public Builder addonErrors(AddonAddonErrorArgs... addonErrors) {
            return addonErrors(List.of(addonErrors));
        }

        /**
         * @param addonName The name of the addon.
         * 
         * @return builder
         * 
         */
        public Builder addonName(@Nullable Output<String> addonName) {
            $.addonName = addonName;
            return this;
        }

        /**
         * @param addonName The name of the addon.
         * 
         * @return builder
         * 
         */
        public Builder addonName(String addonName) {
            return addonName(Output.of(addonName));
        }

        /**
         * @param clusterId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param configurations (Updatable) Addon configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configurations(@Nullable Output<List<AddonConfigurationArgs>> configurations) {
            $.configurations = configurations;
            return this;
        }

        /**
         * @param configurations (Updatable) Addon configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configurations(List<AddonConfigurationArgs> configurations) {
            return configurations(Output.of(configurations));
        }

        /**
         * @param configurations (Updatable) Addon configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configurations(AddonConfigurationArgs... configurations) {
            return configurations(List.of(configurations));
        }

        /**
         * @param currentInstalledVersion current installed version of the addon
         * 
         * @return builder
         * 
         */
        public Builder currentInstalledVersion(@Nullable Output<String> currentInstalledVersion) {
            $.currentInstalledVersion = currentInstalledVersion;
            return this;
        }

        /**
         * @param currentInstalledVersion current installed version of the addon
         * 
         * @return builder
         * 
         */
        public Builder currentInstalledVersion(String currentInstalledVersion) {
            return currentInstalledVersion(Output.of(currentInstalledVersion));
        }

        /**
         * @param removeAddonResourcesOnDelete Whether to remove addon resource in deletion.
         * 
         * @return builder
         * 
         */
        public Builder removeAddonResourcesOnDelete(@Nullable Output<Boolean> removeAddonResourcesOnDelete) {
            $.removeAddonResourcesOnDelete = removeAddonResourcesOnDelete;
            return this;
        }

        /**
         * @param removeAddonResourcesOnDelete Whether to remove addon resource in deletion.
         * 
         * @return builder
         * 
         */
        public Builder removeAddonResourcesOnDelete(Boolean removeAddonResourcesOnDelete) {
            return removeAddonResourcesOnDelete(Output.of(removeAddonResourcesOnDelete));
        }

        /**
         * @param state The state of the addon.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the addon.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The time the cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param version (Updatable) The version of addon to be installed.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version (Updatable) The version of addon to be installed.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public AddonState build() {
            return $;
        }
    }

}
