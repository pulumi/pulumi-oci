// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs Empty = new NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs();

    /**
     * (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     * 
     */
    @Import(name="isPreserveBootVolume")
    private @Nullable Output<Boolean> isPreserveBootVolume;

    /**
     * @return (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     * 
     */
    public Optional<Output<Boolean>> isPreserveBootVolume() {
        return Optional.ofNullable(this.isPreserveBootVolume);
    }

    /**
     * (Updatable) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs() {}

    private NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs(NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs $) {
        this.isPreserveBootVolume = $.isPreserveBootVolume;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs $;

        public Builder() {
            $ = new NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs();
        }

        public Builder(NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs defaults) {
            $ = new NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isPreserveBootVolume (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         * 
         * @return builder
         * 
         */
        public Builder isPreserveBootVolume(@Nullable Output<Boolean> isPreserveBootVolume) {
            $.isPreserveBootVolume = isPreserveBootVolume;
            return this;
        }

        /**
         * @param isPreserveBootVolume (Updatable) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
         * 
         * @return builder
         * 
         */
        public Builder isPreserveBootVolume(Boolean isPreserveBootVolume) {
            return isPreserveBootVolume(Output.of(isPreserveBootVolume));
        }

        /**
         * @param type (Updatable) The type of action to run when the instance is interrupted for eviction.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) The type of action to run when the instance is interrupted for eviction.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs", "type");
            }
            return $;
        }
    }

}
