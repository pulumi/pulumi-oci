// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNodePoolPodConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodePoolPodConfigurationArgs Empty = new VirtualNodePoolPodConfigurationArgs();

    /**
     * (Updatable) List of network security group IDs applied to the Pod VNIC.
     * 
     */
    @Import(name="nsgIds")
    private @Nullable Output<List<String>> nsgIds;

    /**
     * @return (Updatable) List of network security group IDs applied to the Pod VNIC.
     * 
     */
    public Optional<Output<List<String>>> nsgIds() {
        return Optional.ofNullable(this.nsgIds);
    }

    /**
     * (Updatable) Shape of the pods.
     * 
     */
    @Import(name="shape", required=true)
    private Output<String> shape;

    /**
     * @return (Updatable) Shape of the pods.
     * 
     */
    public Output<String> shape() {
        return this.shape;
    }

    /**
     * (Updatable) The regional subnet where pods&#39; VNIC will be placed.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return (Updatable) The regional subnet where pods&#39; VNIC will be placed.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private VirtualNodePoolPodConfigurationArgs() {}

    private VirtualNodePoolPodConfigurationArgs(VirtualNodePoolPodConfigurationArgs $) {
        this.nsgIds = $.nsgIds;
        this.shape = $.shape;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodePoolPodConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodePoolPodConfigurationArgs $;

        public Builder() {
            $ = new VirtualNodePoolPodConfigurationArgs();
        }

        public Builder(VirtualNodePoolPodConfigurationArgs defaults) {
            $ = new VirtualNodePoolPodConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nsgIds (Updatable) List of network security group IDs applied to the Pod VNIC.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(@Nullable Output<List<String>> nsgIds) {
            $.nsgIds = nsgIds;
            return this;
        }

        /**
         * @param nsgIds (Updatable) List of network security group IDs applied to the Pod VNIC.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(List<String> nsgIds) {
            return nsgIds(Output.of(nsgIds));
        }

        /**
         * @param nsgIds (Updatable) List of network security group IDs applied to the Pod VNIC.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }

        /**
         * @param shape (Updatable) Shape of the pods.
         * 
         * @return builder
         * 
         */
        public Builder shape(Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape (Updatable) Shape of the pods.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param subnetId (Updatable) The regional subnet where pods&#39; VNIC will be placed.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId (Updatable) The regional subnet where pods&#39; VNIC will be placed.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public VirtualNodePoolPodConfigurationArgs build() {
            if ($.shape == null) {
                throw new MissingRequiredPropertyException("VirtualNodePoolPodConfigurationArgs", "shape");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("VirtualNodePoolPodConfigurationArgs", "subnetId");
            }
            return $;
        }
    }

}
