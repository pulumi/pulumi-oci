// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ContainerInstanceDnsConfig {
    /**
     * @return IP address of a name server that the resolver should query, either an IPv4 address (in dot notation), or an IPv6 address in colon (and possibly dot) notation. If null, uses nameservers from subnet dhcpDnsOptions.
     * 
     */
    private @Nullable List<String> nameservers;
    /**
     * @return Options allows certain internal resolver variables to be modified. Options are a list of objects in https://man7.org/linux/man-pages/man5/resolv.conf.5.html. Examples: [&#34;ndots:n&#34;, &#34;edns0&#34;].
     * 
     */
    private @Nullable List<String> options;
    /**
     * @return Search list for host-name lookup. If null, we will use searches from subnet dhcpDnsOptios.
     * 
     */
    private @Nullable List<String> searches;

    private ContainerInstanceDnsConfig() {}
    /**
     * @return IP address of a name server that the resolver should query, either an IPv4 address (in dot notation), or an IPv6 address in colon (and possibly dot) notation. If null, uses nameservers from subnet dhcpDnsOptions.
     * 
     */
    public List<String> nameservers() {
        return this.nameservers == null ? List.of() : this.nameservers;
    }
    /**
     * @return Options allows certain internal resolver variables to be modified. Options are a list of objects in https://man7.org/linux/man-pages/man5/resolv.conf.5.html. Examples: [&#34;ndots:n&#34;, &#34;edns0&#34;].
     * 
     */
    public List<String> options() {
        return this.options == null ? List.of() : this.options;
    }
    /**
     * @return Search list for host-name lookup. If null, we will use searches from subnet dhcpDnsOptios.
     * 
     */
    public List<String> searches() {
        return this.searches == null ? List.of() : this.searches;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerInstanceDnsConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> nameservers;
        private @Nullable List<String> options;
        private @Nullable List<String> searches;
        public Builder() {}
        public Builder(ContainerInstanceDnsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nameservers = defaults.nameservers;
    	      this.options = defaults.options;
    	      this.searches = defaults.searches;
        }

        @CustomType.Setter
        public Builder nameservers(@Nullable List<String> nameservers) {

            this.nameservers = nameservers;
            return this;
        }
        public Builder nameservers(String... nameservers) {
            return nameservers(List.of(nameservers));
        }
        @CustomType.Setter
        public Builder options(@Nullable List<String> options) {

            this.options = options;
            return this;
        }
        public Builder options(String... options) {
            return options(List.of(options));
        }
        @CustomType.Setter
        public Builder searches(@Nullable List<String> searches) {

            this.searches = searches;
            return this;
        }
        public Builder searches(String... searches) {
            return searches(List.of(searches));
        }
        public ContainerInstanceDnsConfig build() {
            final var _resultValue = new ContainerInstanceDnsConfig();
            _resultValue.nameservers = nameservers;
            _resultValue.options = options;
            _resultValue.searches = searches;
            return _resultValue;
        }
    }
}
