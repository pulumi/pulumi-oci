// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContainerInstanceVolumeConfig {
    /**
     * @return The base64 encoded contents of the file. The contents are decoded to plain text before mounted as a file to a container inside container instance.
     * 
     */
    private @Nullable String data;
    /**
     * @return The name of the file. The fileName should be unique across the volume.
     * 
     */
    private @Nullable String fileName;
    /**
     * @return (Optional) Relative path for this file inside the volume mount directory. By default, the file is presented at the root of the volume mount path.
     * 
     */
    private @Nullable String path;

    private ContainerInstanceVolumeConfig() {}
    /**
     * @return The base64 encoded contents of the file. The contents are decoded to plain text before mounted as a file to a container inside container instance.
     * 
     */
    public Optional<String> data() {
        return Optional.ofNullable(this.data);
    }
    /**
     * @return The name of the file. The fileName should be unique across the volume.
     * 
     */
    public Optional<String> fileName() {
        return Optional.ofNullable(this.fileName);
    }
    /**
     * @return (Optional) Relative path for this file inside the volume mount directory. By default, the file is presented at the root of the volume mount path.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerInstanceVolumeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String data;
        private @Nullable String fileName;
        private @Nullable String path;
        public Builder() {}
        public Builder(ContainerInstanceVolumeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.data = defaults.data;
    	      this.fileName = defaults.fileName;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder data(@Nullable String data) {

            this.data = data;
            return this;
        }
        @CustomType.Setter
        public Builder fileName(@Nullable String fileName) {

            this.fileName = fileName;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        public ContainerInstanceVolumeConfig build() {
            final var _resultValue = new ContainerInstanceVolumeConfig();
            _resultValue.data = data;
            _resultValue.fileName = fileName;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
