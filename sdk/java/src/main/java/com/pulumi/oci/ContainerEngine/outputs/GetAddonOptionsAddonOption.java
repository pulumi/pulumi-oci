// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ContainerEngine.outputs.GetAddonOptionsAddonOptionVersion;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAddonOptionsAddonOption {
    /**
     * @return Addon group info, a namespace concept that groups addons with similar functionalities.
     * 
     */
    private String addonGroup;
    /**
     * @return Addon definition schema version to validate addon.
     * 
     */
    private String addonSchemaVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Information about the addon version.
     * 
     */
    private String description;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Is it an essential addon for cluster operation or not.
     * 
     */
    private Boolean isEssential;
    /**
     * @return Name of the addon and it would be unique.
     * 
     */
    private String name;
    /**
     * @return The life cycle state of the addon.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time the work request was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The resources this work request affects.
     * 
     */
    private List<GetAddonOptionsAddonOptionVersion> versions;

    private GetAddonOptionsAddonOption() {}
    /**
     * @return Addon group info, a namespace concept that groups addons with similar functionalities.
     * 
     */
    public String addonGroup() {
        return this.addonGroup;
    }
    /**
     * @return Addon definition schema version to validate addon.
     * 
     */
    public String addonSchemaVersion() {
        return this.addonSchemaVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Information about the addon version.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Is it an essential addon for cluster operation or not.
     * 
     */
    public Boolean isEssential() {
        return this.isEssential;
    }
    /**
     * @return Name of the addon and it would be unique.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The life cycle state of the addon.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the work request was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The resources this work request affects.
     * 
     */
    public List<GetAddonOptionsAddonOptionVersion> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddonOptionsAddonOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addonGroup;
        private String addonSchemaVersion;
        private Map<String,Object> definedTags;
        private String description;
        private Map<String,Object> freeformTags;
        private Boolean isEssential;
        private String name;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private List<GetAddonOptionsAddonOptionVersion> versions;
        public Builder() {}
        public Builder(GetAddonOptionsAddonOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonGroup = defaults.addonGroup;
    	      this.addonSchemaVersion = defaults.addonSchemaVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.isEssential = defaults.isEssential;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder addonGroup(String addonGroup) {
            this.addonGroup = Objects.requireNonNull(addonGroup);
            return this;
        }
        @CustomType.Setter
        public Builder addonSchemaVersion(String addonSchemaVersion) {
            this.addonSchemaVersion = Objects.requireNonNull(addonSchemaVersion);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder isEssential(Boolean isEssential) {
            this.isEssential = Objects.requireNonNull(isEssential);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<GetAddonOptionsAddonOptionVersion> versions) {
            this.versions = Objects.requireNonNull(versions);
            return this;
        }
        public Builder versions(GetAddonOptionsAddonOptionVersion... versions) {
            return versions(List.of(versions));
        }
        public GetAddonOptionsAddonOption build() {
            final var o = new GetAddonOptionsAddonOption();
            o.addonGroup = addonGroup;
            o.addonSchemaVersion = addonSchemaVersion;
            o.definedTags = definedTags;
            o.description = description;
            o.freeformTags = freeformTags;
            o.isEssential = isEssential;
            o.name = name;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.versions = versions;
            return o;
        }
    }
}
