// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerEngine.outputs.GetAddonOptionsAddonOptionVersionConfiguration;
import com.pulumi.oci.ContainerEngine.outputs.GetAddonOptionsAddonOptionVersionKubernetesVersionFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAddonOptionsAddonOptionVersion {
    /**
     * @return Addon version configuration details.
     * 
     */
    private List<GetAddonOptionsAddonOptionVersionConfiguration> configurations;
    /**
     * @return Information about the addon version.
     * 
     */
    private String description;
    /**
     * @return The range of kubernetes versions an addon can be configured.
     * 
     */
    private List<GetAddonOptionsAddonOptionVersionKubernetesVersionFilter> kubernetesVersionFilters;
    /**
     * @return Current state of the addon, only active will be visible to customer, visibility of versions in other status will be filtered  based on limits property.
     * 
     */
    private String status;
    /**
     * @return Version number, need be comparable within an addon.
     * 
     */
    private String versionNumber;

    private GetAddonOptionsAddonOptionVersion() {}
    /**
     * @return Addon version configuration details.
     * 
     */
    public List<GetAddonOptionsAddonOptionVersionConfiguration> configurations() {
        return this.configurations;
    }
    /**
     * @return Information about the addon version.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The range of kubernetes versions an addon can be configured.
     * 
     */
    public List<GetAddonOptionsAddonOptionVersionKubernetesVersionFilter> kubernetesVersionFilters() {
        return this.kubernetesVersionFilters;
    }
    /**
     * @return Current state of the addon, only active will be visible to customer, visibility of versions in other status will be filtered  based on limits property.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Version number, need be comparable within an addon.
     * 
     */
    public String versionNumber() {
        return this.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddonOptionsAddonOptionVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAddonOptionsAddonOptionVersionConfiguration> configurations;
        private String description;
        private List<GetAddonOptionsAddonOptionVersionKubernetesVersionFilter> kubernetesVersionFilters;
        private String status;
        private String versionNumber;
        public Builder() {}
        public Builder(GetAddonOptionsAddonOptionVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurations = defaults.configurations;
    	      this.description = defaults.description;
    	      this.kubernetesVersionFilters = defaults.kubernetesVersionFilters;
    	      this.status = defaults.status;
    	      this.versionNumber = defaults.versionNumber;
        }

        @CustomType.Setter
        public Builder configurations(List<GetAddonOptionsAddonOptionVersionConfiguration> configurations) {
            if (configurations == null) {
              throw new MissingRequiredPropertyException("GetAddonOptionsAddonOptionVersion", "configurations");
            }
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(GetAddonOptionsAddonOptionVersionConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAddonOptionsAddonOptionVersion", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesVersionFilters(List<GetAddonOptionsAddonOptionVersionKubernetesVersionFilter> kubernetesVersionFilters) {
            if (kubernetesVersionFilters == null) {
              throw new MissingRequiredPropertyException("GetAddonOptionsAddonOptionVersion", "kubernetesVersionFilters");
            }
            this.kubernetesVersionFilters = kubernetesVersionFilters;
            return this;
        }
        public Builder kubernetesVersionFilters(GetAddonOptionsAddonOptionVersionKubernetesVersionFilter... kubernetesVersionFilters) {
            return kubernetesVersionFilters(List.of(kubernetesVersionFilters));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAddonOptionsAddonOptionVersion", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder versionNumber(String versionNumber) {
            if (versionNumber == null) {
              throw new MissingRequiredPropertyException("GetAddonOptionsAddonOptionVersion", "versionNumber");
            }
            this.versionNumber = versionNumber;
            return this;
        }
        public GetAddonOptionsAddonOptionVersion build() {
            final var _resultValue = new GetAddonOptionsAddonOptionVersion();
            _resultValue.configurations = configurations;
            _resultValue.description = description;
            _resultValue.kubernetesVersionFilters = kubernetesVersionFilters;
            _resultValue.status = status;
            _resultValue.versionNumber = versionNumber;
            return _resultValue;
        }
    }
}
