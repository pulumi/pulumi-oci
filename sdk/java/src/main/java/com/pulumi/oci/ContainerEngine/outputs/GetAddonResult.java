// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ContainerEngine.outputs.GetAddonAddonError;
import com.pulumi.oci.ContainerEngine.outputs.GetAddonConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAddonResult {
    /**
     * @return The error info of the addon.
     * 
     */
    private @Nullable List<GetAddonAddonError> addonErrors;
    /**
     * @return The name of the addon.
     * 
     */
    private String addonName;
    private String clusterId;
    /**
     * @return Addon configuration details.
     * 
     */
    private @Nullable List<GetAddonConfiguration> configurations;
    /**
     * @return current installed version of the addon
     * 
     */
    private @Nullable String currentInstalledVersion;
    private @Nullable String id;
    private @Nullable Boolean removeAddonResourcesOnDelete;
    /**
     * @return The state of the addon.
     * 
     */
    private @Nullable String state;
    /**
     * @return The time the cluster was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return selected addon version, or null indicates autoUpdate
     * 
     */
    private @Nullable String version;

    private GetAddonResult() {}
    /**
     * @return The error info of the addon.
     * 
     */
    public List<GetAddonAddonError> addonErrors() {
        return this.addonErrors == null ? List.of() : this.addonErrors;
    }
    /**
     * @return The name of the addon.
     * 
     */
    public String addonName() {
        return this.addonName;
    }
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return Addon configuration details.
     * 
     */
    public List<GetAddonConfiguration> configurations() {
        return this.configurations == null ? List.of() : this.configurations;
    }
    /**
     * @return current installed version of the addon
     * 
     */
    public Optional<String> currentInstalledVersion() {
        return Optional.ofNullable(this.currentInstalledVersion);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Boolean> removeAddonResourcesOnDelete() {
        return Optional.ofNullable(this.removeAddonResourcesOnDelete);
    }
    /**
     * @return The state of the addon.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time the cluster was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return selected addon version, or null indicates autoUpdate
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddonResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetAddonAddonError> addonErrors;
        private String addonName;
        private String clusterId;
        private @Nullable List<GetAddonConfiguration> configurations;
        private @Nullable String currentInstalledVersion;
        private @Nullable String id;
        private @Nullable Boolean removeAddonResourcesOnDelete;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetAddonResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonErrors = defaults.addonErrors;
    	      this.addonName = defaults.addonName;
    	      this.clusterId = defaults.clusterId;
    	      this.configurations = defaults.configurations;
    	      this.currentInstalledVersion = defaults.currentInstalledVersion;
    	      this.id = defaults.id;
    	      this.removeAddonResourcesOnDelete = defaults.removeAddonResourcesOnDelete;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder addonErrors(@Nullable List<GetAddonAddonError> addonErrors) {
            this.addonErrors = addonErrors;
            return this;
        }
        public Builder addonErrors(GetAddonAddonError... addonErrors) {
            return addonErrors(List.of(addonErrors));
        }
        @CustomType.Setter
        public Builder addonName(String addonName) {
            this.addonName = Objects.requireNonNull(addonName);
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder configurations(@Nullable List<GetAddonConfiguration> configurations) {
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(GetAddonConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder currentInstalledVersion(@Nullable String currentInstalledVersion) {
            this.currentInstalledVersion = currentInstalledVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder removeAddonResourcesOnDelete(@Nullable Boolean removeAddonResourcesOnDelete) {
            this.removeAddonResourcesOnDelete = removeAddonResourcesOnDelete;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetAddonResult build() {
            final var o = new GetAddonResult();
            o.addonErrors = addonErrors;
            o.addonName = addonName;
            o.clusterId = clusterId;
            o.configurations = configurations;
            o.currentInstalledVersion = currentInstalledVersion;
            o.id = id;
            o.removeAddonResourcesOnDelete = removeAddonResourcesOnDelete;
            o.state = state;
            o.timeCreated = timeCreated;
            o.version = version;
            return o;
        }
    }
}
