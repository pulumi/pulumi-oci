// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerEngine.outputs.GetAddonsAddonAddonError;
import com.pulumi.oci.ContainerEngine.outputs.GetAddonsAddonConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAddonsAddon {
    /**
     * @return The error info of the addon.
     * 
     */
    private List<GetAddonsAddonAddonError> addonErrors;
    /**
     * @return The name of the addon.
     * 
     */
    private String addonName;
    /**
     * @return The OCID of the cluster.
     * 
     */
    private String clusterId;
    /**
     * @return Addon configuration details.
     * 
     */
    private List<GetAddonsAddonConfiguration> configurations;
    /**
     * @return current installed version of the addon
     * 
     */
    private String currentInstalledVersion;
    private Boolean removeAddonResourcesOnDelete;
    /**
     * @return The state of the addon.
     * 
     */
    private String state;
    /**
     * @return The time the cluster was created.
     * 
     */
    private String timeCreated;
    /**
     * @return selected addon version, or null indicates autoUpdate
     * 
     */
    private String version;

    private GetAddonsAddon() {}
    /**
     * @return The error info of the addon.
     * 
     */
    public List<GetAddonsAddonAddonError> addonErrors() {
        return this.addonErrors;
    }
    /**
     * @return The name of the addon.
     * 
     */
    public String addonName() {
        return this.addonName;
    }
    /**
     * @return The OCID of the cluster.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return Addon configuration details.
     * 
     */
    public List<GetAddonsAddonConfiguration> configurations() {
        return this.configurations;
    }
    /**
     * @return current installed version of the addon
     * 
     */
    public String currentInstalledVersion() {
        return this.currentInstalledVersion;
    }
    public Boolean removeAddonResourcesOnDelete() {
        return this.removeAddonResourcesOnDelete;
    }
    /**
     * @return The state of the addon.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time the cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return selected addon version, or null indicates autoUpdate
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddonsAddon defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAddonsAddonAddonError> addonErrors;
        private String addonName;
        private String clusterId;
        private List<GetAddonsAddonConfiguration> configurations;
        private String currentInstalledVersion;
        private Boolean removeAddonResourcesOnDelete;
        private String state;
        private String timeCreated;
        private String version;
        public Builder() {}
        public Builder(GetAddonsAddon defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonErrors = defaults.addonErrors;
    	      this.addonName = defaults.addonName;
    	      this.clusterId = defaults.clusterId;
    	      this.configurations = defaults.configurations;
    	      this.currentInstalledVersion = defaults.currentInstalledVersion;
    	      this.removeAddonResourcesOnDelete = defaults.removeAddonResourcesOnDelete;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder addonErrors(List<GetAddonsAddonAddonError> addonErrors) {
            if (addonErrors == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "addonErrors");
            }
            this.addonErrors = addonErrors;
            return this;
        }
        public Builder addonErrors(GetAddonsAddonAddonError... addonErrors) {
            return addonErrors(List.of(addonErrors));
        }
        @CustomType.Setter
        public Builder addonName(String addonName) {
            if (addonName == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "addonName");
            }
            this.addonName = addonName;
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder configurations(List<GetAddonsAddonConfiguration> configurations) {
            if (configurations == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "configurations");
            }
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(GetAddonsAddonConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder currentInstalledVersion(String currentInstalledVersion) {
            if (currentInstalledVersion == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "currentInstalledVersion");
            }
            this.currentInstalledVersion = currentInstalledVersion;
            return this;
        }
        @CustomType.Setter
        public Builder removeAddonResourcesOnDelete(Boolean removeAddonResourcesOnDelete) {
            if (removeAddonResourcesOnDelete == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "removeAddonResourcesOnDelete");
            }
            this.removeAddonResourcesOnDelete = removeAddonResourcesOnDelete;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetAddonsAddon", "version");
            }
            this.version = version;
            return this;
        }
        public GetAddonsAddon build() {
            final var _resultValue = new GetAddonsAddon();
            _resultValue.addonErrors = addonErrors;
            _resultValue.addonName = addonName;
            _resultValue.clusterId = clusterId;
            _resultValue.configurations = configurations;
            _resultValue.currentInstalledVersion = currentInstalledVersion;
            _resultValue.removeAddonResourcesOnDelete = removeAddonResourcesOnDelete;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
