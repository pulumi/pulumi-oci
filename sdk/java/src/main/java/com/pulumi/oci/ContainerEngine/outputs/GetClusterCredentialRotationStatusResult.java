// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterCredentialRotationStatusResult {
    private String clusterId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Credential rotation status of a kubernetes cluster IN_PROGRESS: Issuing new credentials to kubernetes cluster control plane and worker nodes or retiring old credentials from kubernetes cluster control plane and worker nodes. WAITING: Waiting for customer to invoke the complete rotation action or the automcatic complete rotation action. COMPLETED: New credentials are functional on kuberentes cluster.
     * 
     */
    private String status;
    /**
     * @return Details of a kuberenetes cluster credential rotation status: ISSUING_NEW_CREDENTIALS: Credential rotation is in progress. Starting to issue new credentials to kubernetes cluster control plane and worker nodes. NEW_CREDENTIALS_ISSUED: New credentials are added. At this stage cluster has both old and new credentials and is awaiting old credentials retirement. RETIRING_OLD_CREDENTIALS: Retirement of old credentials is in progress. Starting to remove old credentials from kubernetes cluster control plane and worker nodes. COMPLETED: Credential rotation is complete. Old credentials are retired.
     * 
     */
    private String statusDetails;
    /**
     * @return The time by which retirement of old credentials should start.
     * 
     */
    private String timeAutoCompletionScheduled;

    private GetClusterCredentialRotationStatusResult() {}
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Credential rotation status of a kubernetes cluster IN_PROGRESS: Issuing new credentials to kubernetes cluster control plane and worker nodes or retiring old credentials from kubernetes cluster control plane and worker nodes. WAITING: Waiting for customer to invoke the complete rotation action or the automcatic complete rotation action. COMPLETED: New credentials are functional on kuberentes cluster.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Details of a kuberenetes cluster credential rotation status: ISSUING_NEW_CREDENTIALS: Credential rotation is in progress. Starting to issue new credentials to kubernetes cluster control plane and worker nodes. NEW_CREDENTIALS_ISSUED: New credentials are added. At this stage cluster has both old and new credentials and is awaiting old credentials retirement. RETIRING_OLD_CREDENTIALS: Retirement of old credentials is in progress. Starting to remove old credentials from kubernetes cluster control plane and worker nodes. COMPLETED: Credential rotation is complete. Old credentials are retired.
     * 
     */
    public String statusDetails() {
        return this.statusDetails;
    }
    /**
     * @return The time by which retirement of old credentials should start.
     * 
     */
    public String timeAutoCompletionScheduled() {
        return this.timeAutoCompletionScheduled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterCredentialRotationStatusResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String id;
        private String status;
        private String statusDetails;
        private String timeAutoCompletionScheduled;
        public Builder() {}
        public Builder(GetClusterCredentialRotationStatusResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
    	      this.statusDetails = defaults.statusDetails;
    	      this.timeAutoCompletionScheduled = defaults.timeAutoCompletionScheduled;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClusterCredentialRotationStatusResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterCredentialRotationStatusResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetClusterCredentialRotationStatusResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusDetails(String statusDetails) {
            if (statusDetails == null) {
              throw new MissingRequiredPropertyException("GetClusterCredentialRotationStatusResult", "statusDetails");
            }
            this.statusDetails = statusDetails;
            return this;
        }
        @CustomType.Setter
        public Builder timeAutoCompletionScheduled(String timeAutoCompletionScheduled) {
            if (timeAutoCompletionScheduled == null) {
              throw new MissingRequiredPropertyException("GetClusterCredentialRotationStatusResult", "timeAutoCompletionScheduled");
            }
            this.timeAutoCompletionScheduled = timeAutoCompletionScheduled;
            return this;
        }
        public GetClusterCredentialRotationStatusResult build() {
            final var _resultValue = new GetClusterCredentialRotationStatusResult();
            _resultValue.clusterId = clusterId;
            _resultValue.id = id;
            _resultValue.status = status;
            _resultValue.statusDetails = statusDetails;
            _resultValue.timeAutoCompletionScheduled = timeAutoCompletionScheduled;
            return _resultValue;
        }
    }
}
