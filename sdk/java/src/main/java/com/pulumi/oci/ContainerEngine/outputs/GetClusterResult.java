// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerEngine.outputs.GetClusterClusterPodNetworkOption;
import com.pulumi.oci.ContainerEngine.outputs.GetClusterEndpoint;
import com.pulumi.oci.ContainerEngine.outputs.GetClusterEndpointConfig;
import com.pulumi.oci.ContainerEngine.outputs.GetClusterImagePolicyConfig;
import com.pulumi.oci.ContainerEngine.outputs.GetClusterMetadata;
import com.pulumi.oci.ContainerEngine.outputs.GetClusterOption;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterResult {
    /**
     * @return Available Kubernetes versions to which the clusters masters may be upgraded.
     * 
     */
    private List<String> availableKubernetesUpgrades;
    private String clusterId;
    /**
     * @return Available CNIs and network options for existing and new node pools of the cluster
     * 
     */
    private List<GetClusterClusterPodNetworkOption> clusterPodNetworkOptions;
    /**
     * @return The OCID of the compartment in which the cluster exists.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The network configuration for access to the Cluster control plane.
     * 
     */
    private List<GetClusterEndpointConfig> endpointConfigs;
    /**
     * @return Endpoints served up by the cluster masters.
     * 
     */
    private List<GetClusterEndpoint> endpoints;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the cluster.
     * 
     */
    private String id;
    /**
     * @return The image verification policy for signature validation.
     * 
     */
    private List<GetClusterImagePolicyConfig> imagePolicyConfigs;
    /**
     * @return The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
     * 
     */
    private String kmsKeyId;
    /**
     * @return The version of Kubernetes running on the cluster masters.
     * 
     */
    private String kubernetesVersion;
    /**
     * @return Details about the state of the cluster masters.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Metadata about the cluster.
     * 
     */
    private List<GetClusterMetadata> metadatas;
    /**
     * @return The name of the cluster.
     * 
     */
    private String name;
    private String openIdConnectDiscoveryEndpoint;
    /**
     * @return Optional attributes for the cluster.
     * 
     */
    private List<GetClusterOption> options;
    private @Nullable String shouldIncludeOidcConfigFile;
    /**
     * @return The state of the cluster masters.
     * 
     */
    private String state;
    /**
     * @return Type of cluster. Values can be BASIC_CLUSTER or ENHANCED_CLUSTER. For more information, see [Cluster Types](https://docs.cloud.oracle.com/iaas/Content/ContEng/Tasks/contengcomparingenhancedwithbasicclusters_topic.htm)
     * 
     */
    private String type;
    /**
     * @return The OCID of the virtual cloud network (VCN) in which the cluster exists.
     * 
     */
    private String vcnId;

    private GetClusterResult() {}
    /**
     * @return Available Kubernetes versions to which the clusters masters may be upgraded.
     * 
     */
    public List<String> availableKubernetesUpgrades() {
        return this.availableKubernetesUpgrades;
    }
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return Available CNIs and network options for existing and new node pools of the cluster
     * 
     */
    public List<GetClusterClusterPodNetworkOption> clusterPodNetworkOptions() {
        return this.clusterPodNetworkOptions;
    }
    /**
     * @return The OCID of the compartment in which the cluster exists.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The network configuration for access to the Cluster control plane.
     * 
     */
    public List<GetClusterEndpointConfig> endpointConfigs() {
        return this.endpointConfigs;
    }
    /**
     * @return Endpoints served up by the cluster masters.
     * 
     */
    public List<GetClusterEndpoint> endpoints() {
        return this.endpoints;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The image verification policy for signature validation.
     * 
     */
    public List<GetClusterImagePolicyConfig> imagePolicyConfigs() {
        return this.imagePolicyConfigs;
    }
    /**
     * @return The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The version of Kubernetes running on the cluster masters.
     * 
     */
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }
    /**
     * @return Details about the state of the cluster masters.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Metadata about the cluster.
     * 
     */
    public List<GetClusterMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return The name of the cluster.
     * 
     */
    public String name() {
        return this.name;
    }
    public String openIdConnectDiscoveryEndpoint() {
        return this.openIdConnectDiscoveryEndpoint;
    }
    /**
     * @return Optional attributes for the cluster.
     * 
     */
    public List<GetClusterOption> options() {
        return this.options;
    }
    public Optional<String> shouldIncludeOidcConfigFile() {
        return Optional.ofNullable(this.shouldIncludeOidcConfigFile);
    }
    /**
     * @return The state of the cluster masters.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Type of cluster. Values can be BASIC_CLUSTER or ENHANCED_CLUSTER. For more information, see [Cluster Types](https://docs.cloud.oracle.com/iaas/Content/ContEng/Tasks/contengcomparingenhancedwithbasicclusters_topic.htm)
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The OCID of the virtual cloud network (VCN) in which the cluster exists.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> availableKubernetesUpgrades;
        private String clusterId;
        private List<GetClusterClusterPodNetworkOption> clusterPodNetworkOptions;
        private String compartmentId;
        private Map<String,String> definedTags;
        private List<GetClusterEndpointConfig> endpointConfigs;
        private List<GetClusterEndpoint> endpoints;
        private Map<String,String> freeformTags;
        private String id;
        private List<GetClusterImagePolicyConfig> imagePolicyConfigs;
        private String kmsKeyId;
        private String kubernetesVersion;
        private String lifecycleDetails;
        private List<GetClusterMetadata> metadatas;
        private String name;
        private String openIdConnectDiscoveryEndpoint;
        private List<GetClusterOption> options;
        private @Nullable String shouldIncludeOidcConfigFile;
        private String state;
        private String type;
        private String vcnId;
        public Builder() {}
        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableKubernetesUpgrades = defaults.availableKubernetesUpgrades;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterPodNetworkOptions = defaults.clusterPodNetworkOptions;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.endpointConfigs = defaults.endpointConfigs;
    	      this.endpoints = defaults.endpoints;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imagePolicyConfigs = defaults.imagePolicyConfigs;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.metadatas = defaults.metadatas;
    	      this.name = defaults.name;
    	      this.openIdConnectDiscoveryEndpoint = defaults.openIdConnectDiscoveryEndpoint;
    	      this.options = defaults.options;
    	      this.shouldIncludeOidcConfigFile = defaults.shouldIncludeOidcConfigFile;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder availableKubernetesUpgrades(List<String> availableKubernetesUpgrades) {
            if (availableKubernetesUpgrades == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "availableKubernetesUpgrades");
            }
            this.availableKubernetesUpgrades = availableKubernetesUpgrades;
            return this;
        }
        public Builder availableKubernetesUpgrades(String... availableKubernetesUpgrades) {
            return availableKubernetesUpgrades(List.of(availableKubernetesUpgrades));
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPodNetworkOptions(List<GetClusterClusterPodNetworkOption> clusterPodNetworkOptions) {
            if (clusterPodNetworkOptions == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "clusterPodNetworkOptions");
            }
            this.clusterPodNetworkOptions = clusterPodNetworkOptions;
            return this;
        }
        public Builder clusterPodNetworkOptions(GetClusterClusterPodNetworkOption... clusterPodNetworkOptions) {
            return clusterPodNetworkOptions(List.of(clusterPodNetworkOptions));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder endpointConfigs(List<GetClusterEndpointConfig> endpointConfigs) {
            if (endpointConfigs == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "endpointConfigs");
            }
            this.endpointConfigs = endpointConfigs;
            return this;
        }
        public Builder endpointConfigs(GetClusterEndpointConfig... endpointConfigs) {
            return endpointConfigs(List.of(endpointConfigs));
        }
        @CustomType.Setter
        public Builder endpoints(List<GetClusterEndpoint> endpoints) {
            if (endpoints == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "endpoints");
            }
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(GetClusterEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imagePolicyConfigs(List<GetClusterImagePolicyConfig> imagePolicyConfigs) {
            if (imagePolicyConfigs == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "imagePolicyConfigs");
            }
            this.imagePolicyConfigs = imagePolicyConfigs;
            return this;
        }
        public Builder imagePolicyConfigs(GetClusterImagePolicyConfig... imagePolicyConfigs) {
            return imagePolicyConfigs(List.of(imagePolicyConfigs));
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesVersion(String kubernetesVersion) {
            if (kubernetesVersion == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "kubernetesVersion");
            }
            this.kubernetesVersion = kubernetesVersion;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(List<GetClusterMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetClusterMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder openIdConnectDiscoveryEndpoint(String openIdConnectDiscoveryEndpoint) {
            if (openIdConnectDiscoveryEndpoint == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "openIdConnectDiscoveryEndpoint");
            }
            this.openIdConnectDiscoveryEndpoint = openIdConnectDiscoveryEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder options(List<GetClusterOption> options) {
            if (options == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "options");
            }
            this.options = options;
            return this;
        }
        public Builder options(GetClusterOption... options) {
            return options(List.of(options));
        }
        @CustomType.Setter
        public Builder shouldIncludeOidcConfigFile(@Nullable String shouldIncludeOidcConfigFile) {

            this.shouldIncludeOidcConfigFile = shouldIncludeOidcConfigFile;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            if (vcnId == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "vcnId");
            }
            this.vcnId = vcnId;
            return this;
        }
        public GetClusterResult build() {
            final var _resultValue = new GetClusterResult();
            _resultValue.availableKubernetesUpgrades = availableKubernetesUpgrades;
            _resultValue.clusterId = clusterId;
            _resultValue.clusterPodNetworkOptions = clusterPodNetworkOptions;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.endpointConfigs = endpointConfigs;
            _resultValue.endpoints = endpoints;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.imagePolicyConfigs = imagePolicyConfigs;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.kubernetesVersion = kubernetesVersion;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.metadatas = metadatas;
            _resultValue.name = name;
            _resultValue.openIdConnectDiscoveryEndpoint = openIdConnectDiscoveryEndpoint;
            _resultValue.options = options;
            _resultValue.shouldIncludeOidcConfigFile = shouldIncludeOidcConfigFile;
            _resultValue.state = state;
            _resultValue.type = type;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
