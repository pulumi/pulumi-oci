// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClustersClusterMetadata {
    /**
     * @return The user who created the cluster.
     * 
     */
    private String createdByUserId;
    /**
     * @return The OCID of the work request which created the cluster.
     * 
     */
    private String createdByWorkRequestId;
    /**
     * @return The user who deleted the cluster.
     * 
     */
    private String deletedByUserId;
    /**
     * @return The OCID of the work request which deleted the cluster.
     * 
     */
    private String deletedByWorkRequestId;
    /**
     * @return The time the cluster was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The time until which the cluster credential is valid.
     * 
     */
    private String timeCredentialExpiration;
    /**
     * @return The time the cluster was deleted.
     * 
     */
    private String timeDeleted;
    /**
     * @return The time the cluster was updated.
     * 
     */
    private String timeUpdated;
    /**
     * @return The user who updated the cluster.
     * 
     */
    private String updatedByUserId;
    /**
     * @return The OCID of the work request which updated the cluster.
     * 
     */
    private String updatedByWorkRequestId;

    private GetClustersClusterMetadata() {}
    /**
     * @return The user who created the cluster.
     * 
     */
    public String createdByUserId() {
        return this.createdByUserId;
    }
    /**
     * @return The OCID of the work request which created the cluster.
     * 
     */
    public String createdByWorkRequestId() {
        return this.createdByWorkRequestId;
    }
    /**
     * @return The user who deleted the cluster.
     * 
     */
    public String deletedByUserId() {
        return this.deletedByUserId;
    }
    /**
     * @return The OCID of the work request which deleted the cluster.
     * 
     */
    public String deletedByWorkRequestId() {
        return this.deletedByWorkRequestId;
    }
    /**
     * @return The time the cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time until which the cluster credential is valid.
     * 
     */
    public String timeCredentialExpiration() {
        return this.timeCredentialExpiration;
    }
    /**
     * @return The time the cluster was deleted.
     * 
     */
    public String timeDeleted() {
        return this.timeDeleted;
    }
    /**
     * @return The time the cluster was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The user who updated the cluster.
     * 
     */
    public String updatedByUserId() {
        return this.updatedByUserId;
    }
    /**
     * @return The OCID of the work request which updated the cluster.
     * 
     */
    public String updatedByWorkRequestId() {
        return this.updatedByWorkRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersClusterMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdByUserId;
        private String createdByWorkRequestId;
        private String deletedByUserId;
        private String deletedByWorkRequestId;
        private String timeCreated;
        private String timeCredentialExpiration;
        private String timeDeleted;
        private String timeUpdated;
        private String updatedByUserId;
        private String updatedByWorkRequestId;
        public Builder() {}
        public Builder(GetClustersClusterMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdByUserId = defaults.createdByUserId;
    	      this.createdByWorkRequestId = defaults.createdByWorkRequestId;
    	      this.deletedByUserId = defaults.deletedByUserId;
    	      this.deletedByWorkRequestId = defaults.deletedByWorkRequestId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeCredentialExpiration = defaults.timeCredentialExpiration;
    	      this.timeDeleted = defaults.timeDeleted;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.updatedByUserId = defaults.updatedByUserId;
    	      this.updatedByWorkRequestId = defaults.updatedByWorkRequestId;
        }

        @CustomType.Setter
        public Builder createdByUserId(String createdByUserId) {
            if (createdByUserId == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "createdByUserId");
            }
            this.createdByUserId = createdByUserId;
            return this;
        }
        @CustomType.Setter
        public Builder createdByWorkRequestId(String createdByWorkRequestId) {
            if (createdByWorkRequestId == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "createdByWorkRequestId");
            }
            this.createdByWorkRequestId = createdByWorkRequestId;
            return this;
        }
        @CustomType.Setter
        public Builder deletedByUserId(String deletedByUserId) {
            if (deletedByUserId == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "deletedByUserId");
            }
            this.deletedByUserId = deletedByUserId;
            return this;
        }
        @CustomType.Setter
        public Builder deletedByWorkRequestId(String deletedByWorkRequestId) {
            if (deletedByWorkRequestId == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "deletedByWorkRequestId");
            }
            this.deletedByWorkRequestId = deletedByWorkRequestId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeCredentialExpiration(String timeCredentialExpiration) {
            if (timeCredentialExpiration == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "timeCredentialExpiration");
            }
            this.timeCredentialExpiration = timeCredentialExpiration;
            return this;
        }
        @CustomType.Setter
        public Builder timeDeleted(String timeDeleted) {
            if (timeDeleted == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "timeDeleted");
            }
            this.timeDeleted = timeDeleted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder updatedByUserId(String updatedByUserId) {
            if (updatedByUserId == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "updatedByUserId");
            }
            this.updatedByUserId = updatedByUserId;
            return this;
        }
        @CustomType.Setter
        public Builder updatedByWorkRequestId(String updatedByWorkRequestId) {
            if (updatedByWorkRequestId == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterMetadata", "updatedByWorkRequestId");
            }
            this.updatedByWorkRequestId = updatedByWorkRequestId;
            return this;
        }
        public GetClustersClusterMetadata build() {
            final var _resultValue = new GetClustersClusterMetadata();
            _resultValue.createdByUserId = createdByUserId;
            _resultValue.createdByWorkRequestId = createdByWorkRequestId;
            _resultValue.deletedByUserId = deletedByUserId;
            _resultValue.deletedByWorkRequestId = deletedByWorkRequestId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeCredentialExpiration = timeCredentialExpiration;
            _resultValue.timeDeleted = timeDeleted;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.updatedByUserId = updatedByUserId;
            _resultValue.updatedByWorkRequestId = updatedByWorkRequestId;
            return _resultValue;
        }
    }
}
