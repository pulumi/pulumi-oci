// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerEngine.outputs.GetClustersClusterOptionAddOn;
import com.pulumi.oci.ContainerEngine.outputs.GetClustersClusterOptionAdmissionControllerOption;
import com.pulumi.oci.ContainerEngine.outputs.GetClustersClusterOptionKubernetesNetworkConfig;
import com.pulumi.oci.ContainerEngine.outputs.GetClustersClusterOptionPersistentVolumeConfig;
import com.pulumi.oci.ContainerEngine.outputs.GetClustersClusterOptionServiceLbConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClustersClusterOption {
    /**
     * @return Configurable cluster add-ons
     * 
     */
    private List<GetClustersClusterOptionAddOn> addOns;
    /**
     * @return Configurable cluster admission controllers
     * 
     */
    private List<GetClustersClusterOptionAdmissionControllerOption> admissionControllerOptions;
    /**
     * @return Network configuration for Kubernetes.
     * 
     */
    private List<GetClustersClusterOptionKubernetesNetworkConfig> kubernetesNetworkConfigs;
    /**
     * @return Configuration to be applied to block volumes created by Kubernetes Persistent Volume Claims (PVC)
     * 
     */
    private List<GetClustersClusterOptionPersistentVolumeConfig> persistentVolumeConfigs;
    /**
     * @return Configuration to be applied to load balancers created by Kubernetes services
     * 
     */
    private List<GetClustersClusterOptionServiceLbConfig> serviceLbConfigs;
    /**
     * @return The OCIDs of the subnets used for Kubernetes services load balancers.
     * 
     */
    private List<String> serviceLbSubnetIds;

    private GetClustersClusterOption() {}
    /**
     * @return Configurable cluster add-ons
     * 
     */
    public List<GetClustersClusterOptionAddOn> addOns() {
        return this.addOns;
    }
    /**
     * @return Configurable cluster admission controllers
     * 
     */
    public List<GetClustersClusterOptionAdmissionControllerOption> admissionControllerOptions() {
        return this.admissionControllerOptions;
    }
    /**
     * @return Network configuration for Kubernetes.
     * 
     */
    public List<GetClustersClusterOptionKubernetesNetworkConfig> kubernetesNetworkConfigs() {
        return this.kubernetesNetworkConfigs;
    }
    /**
     * @return Configuration to be applied to block volumes created by Kubernetes Persistent Volume Claims (PVC)
     * 
     */
    public List<GetClustersClusterOptionPersistentVolumeConfig> persistentVolumeConfigs() {
        return this.persistentVolumeConfigs;
    }
    /**
     * @return Configuration to be applied to load balancers created by Kubernetes services
     * 
     */
    public List<GetClustersClusterOptionServiceLbConfig> serviceLbConfigs() {
        return this.serviceLbConfigs;
    }
    /**
     * @return The OCIDs of the subnets used for Kubernetes services load balancers.
     * 
     */
    public List<String> serviceLbSubnetIds() {
        return this.serviceLbSubnetIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersClusterOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClustersClusterOptionAddOn> addOns;
        private List<GetClustersClusterOptionAdmissionControllerOption> admissionControllerOptions;
        private List<GetClustersClusterOptionKubernetesNetworkConfig> kubernetesNetworkConfigs;
        private List<GetClustersClusterOptionPersistentVolumeConfig> persistentVolumeConfigs;
        private List<GetClustersClusterOptionServiceLbConfig> serviceLbConfigs;
        private List<String> serviceLbSubnetIds;
        public Builder() {}
        public Builder(GetClustersClusterOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addOns = defaults.addOns;
    	      this.admissionControllerOptions = defaults.admissionControllerOptions;
    	      this.kubernetesNetworkConfigs = defaults.kubernetesNetworkConfigs;
    	      this.persistentVolumeConfigs = defaults.persistentVolumeConfigs;
    	      this.serviceLbConfigs = defaults.serviceLbConfigs;
    	      this.serviceLbSubnetIds = defaults.serviceLbSubnetIds;
        }

        @CustomType.Setter
        public Builder addOns(List<GetClustersClusterOptionAddOn> addOns) {
            if (addOns == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterOption", "addOns");
            }
            this.addOns = addOns;
            return this;
        }
        public Builder addOns(GetClustersClusterOptionAddOn... addOns) {
            return addOns(List.of(addOns));
        }
        @CustomType.Setter
        public Builder admissionControllerOptions(List<GetClustersClusterOptionAdmissionControllerOption> admissionControllerOptions) {
            if (admissionControllerOptions == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterOption", "admissionControllerOptions");
            }
            this.admissionControllerOptions = admissionControllerOptions;
            return this;
        }
        public Builder admissionControllerOptions(GetClustersClusterOptionAdmissionControllerOption... admissionControllerOptions) {
            return admissionControllerOptions(List.of(admissionControllerOptions));
        }
        @CustomType.Setter
        public Builder kubernetesNetworkConfigs(List<GetClustersClusterOptionKubernetesNetworkConfig> kubernetesNetworkConfigs) {
            if (kubernetesNetworkConfigs == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterOption", "kubernetesNetworkConfigs");
            }
            this.kubernetesNetworkConfigs = kubernetesNetworkConfigs;
            return this;
        }
        public Builder kubernetesNetworkConfigs(GetClustersClusterOptionKubernetesNetworkConfig... kubernetesNetworkConfigs) {
            return kubernetesNetworkConfigs(List.of(kubernetesNetworkConfigs));
        }
        @CustomType.Setter
        public Builder persistentVolumeConfigs(List<GetClustersClusterOptionPersistentVolumeConfig> persistentVolumeConfigs) {
            if (persistentVolumeConfigs == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterOption", "persistentVolumeConfigs");
            }
            this.persistentVolumeConfigs = persistentVolumeConfigs;
            return this;
        }
        public Builder persistentVolumeConfigs(GetClustersClusterOptionPersistentVolumeConfig... persistentVolumeConfigs) {
            return persistentVolumeConfigs(List.of(persistentVolumeConfigs));
        }
        @CustomType.Setter
        public Builder serviceLbConfigs(List<GetClustersClusterOptionServiceLbConfig> serviceLbConfigs) {
            if (serviceLbConfigs == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterOption", "serviceLbConfigs");
            }
            this.serviceLbConfigs = serviceLbConfigs;
            return this;
        }
        public Builder serviceLbConfigs(GetClustersClusterOptionServiceLbConfig... serviceLbConfigs) {
            return serviceLbConfigs(List.of(serviceLbConfigs));
        }
        @CustomType.Setter
        public Builder serviceLbSubnetIds(List<String> serviceLbSubnetIds) {
            if (serviceLbSubnetIds == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterOption", "serviceLbSubnetIds");
            }
            this.serviceLbSubnetIds = serviceLbSubnetIds;
            return this;
        }
        public Builder serviceLbSubnetIds(String... serviceLbSubnetIds) {
            return serviceLbSubnetIds(List.of(serviceLbSubnetIds));
        }
        public GetClustersClusterOption build() {
            final var _resultValue = new GetClustersClusterOption();
            _resultValue.addOns = addOns;
            _resultValue.admissionControllerOptions = admissionControllerOptions;
            _resultValue.kubernetesNetworkConfigs = kubernetesNetworkConfigs;
            _resultValue.persistentVolumeConfigs = persistentVolumeConfigs;
            _resultValue.serviceLbConfigs = serviceLbConfigs;
            _resultValue.serviceLbSubnetIds = serviceLbSubnetIds;
            return _resultValue;
        }
    }
}
