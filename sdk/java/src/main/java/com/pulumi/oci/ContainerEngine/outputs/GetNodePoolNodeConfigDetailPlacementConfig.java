// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNodeConfigDetailPlacementConfigPreemptibleNodeConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNodePoolNodeConfigDetailPlacementConfig {
    /**
     * @return The name of the availability domain in which this node is placed.
     * 
     */
    private String availabilityDomain;
    /**
     * @return The OCID of the compute capacity reservation in which to place the compute instance.
     * 
     */
    private String capacityReservationId;
    /**
     * @return A list of fault domains in which to place nodes.
     * 
     */
    private List<String> faultDomains;
    /**
     * @return Configuration options for preemptible nodes.
     * 
     */
    private List<GetNodePoolNodeConfigDetailPlacementConfigPreemptibleNodeConfig> preemptibleNodeConfigs;
    /**
     * @return The OCID of the subnet in which this node is placed.
     * 
     */
    private String subnetId;

    private GetNodePoolNodeConfigDetailPlacementConfig() {}
    /**
     * @return The name of the availability domain in which this node is placed.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The OCID of the compute capacity reservation in which to place the compute instance.
     * 
     */
    public String capacityReservationId() {
        return this.capacityReservationId;
    }
    /**
     * @return A list of fault domains in which to place nodes.
     * 
     */
    public List<String> faultDomains() {
        return this.faultDomains;
    }
    /**
     * @return Configuration options for preemptible nodes.
     * 
     */
    public List<GetNodePoolNodeConfigDetailPlacementConfigPreemptibleNodeConfig> preemptibleNodeConfigs() {
        return this.preemptibleNodeConfigs;
    }
    /**
     * @return The OCID of the subnet in which this node is placed.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolNodeConfigDetailPlacementConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String capacityReservationId;
        private List<String> faultDomains;
        private List<GetNodePoolNodeConfigDetailPlacementConfigPreemptibleNodeConfig> preemptibleNodeConfigs;
        private String subnetId;
        public Builder() {}
        public Builder(GetNodePoolNodeConfigDetailPlacementConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.faultDomains = defaults.faultDomains;
    	      this.preemptibleNodeConfigs = defaults.preemptibleNodeConfigs;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodeConfigDetailPlacementConfig", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(String capacityReservationId) {
            if (capacityReservationId == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodeConfigDetailPlacementConfig", "capacityReservationId");
            }
            this.capacityReservationId = capacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomains(List<String> faultDomains) {
            if (faultDomains == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodeConfigDetailPlacementConfig", "faultDomains");
            }
            this.faultDomains = faultDomains;
            return this;
        }
        public Builder faultDomains(String... faultDomains) {
            return faultDomains(List.of(faultDomains));
        }
        @CustomType.Setter
        public Builder preemptibleNodeConfigs(List<GetNodePoolNodeConfigDetailPlacementConfigPreemptibleNodeConfig> preemptibleNodeConfigs) {
            if (preemptibleNodeConfigs == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodeConfigDetailPlacementConfig", "preemptibleNodeConfigs");
            }
            this.preemptibleNodeConfigs = preemptibleNodeConfigs;
            return this;
        }
        public Builder preemptibleNodeConfigs(GetNodePoolNodeConfigDetailPlacementConfigPreemptibleNodeConfig... preemptibleNodeConfigs) {
            return preemptibleNodeConfigs(List.of(preemptibleNodeConfigs));
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodeConfigDetailPlacementConfig", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public GetNodePoolNodeConfigDetailPlacementConfig build() {
            final var _resultValue = new GetNodePoolNodeConfigDetailPlacementConfig();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.capacityReservationId = capacityReservationId;
            _resultValue.faultDomains = faultDomains;
            _resultValue.preemptibleNodeConfigs = preemptibleNodeConfigs;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
