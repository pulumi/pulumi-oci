// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolInitialNodeLabel;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNode;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNodeConfigDetail;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNodeEvictionNodePoolSetting;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNodePoolCyclingDetail;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNodeShapeConfig;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNodeSource;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolNodeSourceDetail;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNodePoolResult {
    /**
     * @return The OCID of the cluster to which this node pool is attached.
     * 
     */
    private @Nullable String clusterId;
    /**
     * @return The OCID of the compartment in which the node pool exists.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the compute instance backing this node.
     * 
     */
    private @Nullable String id;
    /**
     * @return A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
     * 
     */
    private @Nullable List<GetNodePoolInitialNodeLabel> initialNodeLabels;
    /**
     * @return The version of Kubernetes this node is running.
     * 
     */
    private @Nullable String kubernetesVersion;
    /**
     * @return Details about the state of the node.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The name of the node.
     * 
     */
    private @Nullable String name;
    /**
     * @return The configuration of nodes in the node pool.
     * 
     */
    private @Nullable List<GetNodePoolNodeConfigDetail> nodeConfigDetails;
    /**
     * @return Node Eviction Details configuration
     * 
     */
    private @Nullable List<GetNodePoolNodeEvictionNodePoolSetting> nodeEvictionNodePoolSettings;
    /**
     * @return Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
     * 
     * @deprecated
     * The &#39;node_image_id&#39; field has been deprecated. Please use &#39;node_source_details&#39; instead. If both fields are specified, then &#39;node_source_details&#39; will be used.
     * 
     */
    @Deprecated /* The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used. */
    private @Nullable String nodeImageId;
    /**
     * @return Deprecated. see `nodeSource`. The name of the image running on the nodes in the node pool.
     * 
     * @deprecated
     * The &#39;node_image_name&#39; field has been deprecated. Please use &#39;node_source_details&#39; instead. If both fields are specified, then &#39;node_source_details&#39; will be used.
     * 
     */
    @Deprecated /* The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used. */
    private @Nullable String nodeImageName;
    /**
     * @return A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
     * 
     */
    private @Nullable Map<String,Object> nodeMetadata;
    /**
     * @return Node Pool Cycling Details
     * 
     */
    private @Nullable List<GetNodePoolNodePoolCyclingDetail> nodePoolCyclingDetails;
    /**
     * @return The OCID of the node pool to which this node belongs.
     * 
     */
    private String nodePoolId;
    /**
     * @return The name of the node shape of the nodes in the node pool.
     * 
     */
    private @Nullable String nodeShape;
    /**
     * @return The shape configuration of the nodes.
     * 
     */
    private @Nullable List<GetNodePoolNodeShapeConfig> nodeShapeConfigs;
    /**
     * @return Source running on the nodes in the node pool.
     * 
     */
    private @Nullable List<GetNodePoolNodeSourceDetail> nodeSourceDetails;
    /**
     * @return Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
     * 
     */
    private @Nullable List<GetNodePoolNodeSource> nodeSources;
    /**
     * @return The nodes in the node pool.
     * 
     */
    private @Nullable List<GetNodePoolNode> nodes;
    /**
     * @return The number of nodes in each subnet.
     * 
     */
    private @Nullable Integer quantityPerSubnet;
    /**
     * @return The SSH public key on each node in the node pool on launch.
     * 
     */
    private @Nullable String sshPublicKey;
    /**
     * @return The state of the nodepool.
     * 
     */
    private @Nullable String state;
    /**
     * @return The OCIDs of the subnets in which to place nodes for this node pool.
     * 
     */
    private @Nullable List<String> subnetIds;

    private GetNodePoolResult() {}
    /**
     * @return The OCID of the cluster to which this node pool is attached.
     * 
     */
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    /**
     * @return The OCID of the compartment in which the node pool exists.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the compute instance backing this node.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
     * 
     */
    public List<GetNodePoolInitialNodeLabel> initialNodeLabels() {
        return this.initialNodeLabels == null ? List.of() : this.initialNodeLabels;
    }
    /**
     * @return The version of Kubernetes this node is running.
     * 
     */
    public Optional<String> kubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }
    /**
     * @return Details about the state of the node.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The name of the node.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The configuration of nodes in the node pool.
     * 
     */
    public List<GetNodePoolNodeConfigDetail> nodeConfigDetails() {
        return this.nodeConfigDetails == null ? List.of() : this.nodeConfigDetails;
    }
    /**
     * @return Node Eviction Details configuration
     * 
     */
    public List<GetNodePoolNodeEvictionNodePoolSetting> nodeEvictionNodePoolSettings() {
        return this.nodeEvictionNodePoolSettings == null ? List.of() : this.nodeEvictionNodePoolSettings;
    }
    /**
     * @return Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
     * 
     * @deprecated
     * The &#39;node_image_id&#39; field has been deprecated. Please use &#39;node_source_details&#39; instead. If both fields are specified, then &#39;node_source_details&#39; will be used.
     * 
     */
    @Deprecated /* The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used. */
    public Optional<String> nodeImageId() {
        return Optional.ofNullable(this.nodeImageId);
    }
    /**
     * @return Deprecated. see `nodeSource`. The name of the image running on the nodes in the node pool.
     * 
     * @deprecated
     * The &#39;node_image_name&#39; field has been deprecated. Please use &#39;node_source_details&#39; instead. If both fields are specified, then &#39;node_source_details&#39; will be used.
     * 
     */
    @Deprecated /* The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used. */
    public Optional<String> nodeImageName() {
        return Optional.ofNullable(this.nodeImageName);
    }
    /**
     * @return A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
     * 
     */
    public Map<String,Object> nodeMetadata() {
        return this.nodeMetadata == null ? Map.of() : this.nodeMetadata;
    }
    /**
     * @return Node Pool Cycling Details
     * 
     */
    public List<GetNodePoolNodePoolCyclingDetail> nodePoolCyclingDetails() {
        return this.nodePoolCyclingDetails == null ? List.of() : this.nodePoolCyclingDetails;
    }
    /**
     * @return The OCID of the node pool to which this node belongs.
     * 
     */
    public String nodePoolId() {
        return this.nodePoolId;
    }
    /**
     * @return The name of the node shape of the nodes in the node pool.
     * 
     */
    public Optional<String> nodeShape() {
        return Optional.ofNullable(this.nodeShape);
    }
    /**
     * @return The shape configuration of the nodes.
     * 
     */
    public List<GetNodePoolNodeShapeConfig> nodeShapeConfigs() {
        return this.nodeShapeConfigs == null ? List.of() : this.nodeShapeConfigs;
    }
    /**
     * @return Source running on the nodes in the node pool.
     * 
     */
    public List<GetNodePoolNodeSourceDetail> nodeSourceDetails() {
        return this.nodeSourceDetails == null ? List.of() : this.nodeSourceDetails;
    }
    /**
     * @return Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
     * 
     */
    public List<GetNodePoolNodeSource> nodeSources() {
        return this.nodeSources == null ? List.of() : this.nodeSources;
    }
    /**
     * @return The nodes in the node pool.
     * 
     */
    public List<GetNodePoolNode> nodes() {
        return this.nodes == null ? List.of() : this.nodes;
    }
    /**
     * @return The number of nodes in each subnet.
     * 
     */
    public Optional<Integer> quantityPerSubnet() {
        return Optional.ofNullable(this.quantityPerSubnet);
    }
    /**
     * @return The SSH public key on each node in the node pool on launch.
     * 
     */
    public Optional<String> sshPublicKey() {
        return Optional.ofNullable(this.sshPublicKey);
    }
    /**
     * @return The state of the nodepool.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCIDs of the subnets in which to place nodes for this node pool.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds == null ? List.of() : this.subnetIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterId;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetNodePoolInitialNodeLabel> initialNodeLabels;
        private @Nullable String kubernetesVersion;
        private @Nullable String lifecycleDetails;
        private @Nullable String name;
        private @Nullable List<GetNodePoolNodeConfigDetail> nodeConfigDetails;
        private @Nullable List<GetNodePoolNodeEvictionNodePoolSetting> nodeEvictionNodePoolSettings;
        private @Nullable String nodeImageId;
        private @Nullable String nodeImageName;
        private @Nullable Map<String,Object> nodeMetadata;
        private @Nullable List<GetNodePoolNodePoolCyclingDetail> nodePoolCyclingDetails;
        private String nodePoolId;
        private @Nullable String nodeShape;
        private @Nullable List<GetNodePoolNodeShapeConfig> nodeShapeConfigs;
        private @Nullable List<GetNodePoolNodeSourceDetail> nodeSourceDetails;
        private @Nullable List<GetNodePoolNodeSource> nodeSources;
        private @Nullable List<GetNodePoolNode> nodes;
        private @Nullable Integer quantityPerSubnet;
        private @Nullable String sshPublicKey;
        private @Nullable String state;
        private @Nullable List<String> subnetIds;
        public Builder() {}
        public Builder(GetNodePoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.initialNodeLabels = defaults.initialNodeLabels;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.name = defaults.name;
    	      this.nodeConfigDetails = defaults.nodeConfigDetails;
    	      this.nodeEvictionNodePoolSettings = defaults.nodeEvictionNodePoolSettings;
    	      this.nodeImageId = defaults.nodeImageId;
    	      this.nodeImageName = defaults.nodeImageName;
    	      this.nodeMetadata = defaults.nodeMetadata;
    	      this.nodePoolCyclingDetails = defaults.nodePoolCyclingDetails;
    	      this.nodePoolId = defaults.nodePoolId;
    	      this.nodeShape = defaults.nodeShape;
    	      this.nodeShapeConfigs = defaults.nodeShapeConfigs;
    	      this.nodeSourceDetails = defaults.nodeSourceDetails;
    	      this.nodeSources = defaults.nodeSources;
    	      this.nodes = defaults.nodes;
    	      this.quantityPerSubnet = defaults.quantityPerSubnet;
    	      this.sshPublicKey = defaults.sshPublicKey;
    	      this.state = defaults.state;
    	      this.subnetIds = defaults.subnetIds;
        }

        @CustomType.Setter
        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder initialNodeLabels(@Nullable List<GetNodePoolInitialNodeLabel> initialNodeLabels) {
            this.initialNodeLabels = initialNodeLabels;
            return this;
        }
        public Builder initialNodeLabels(GetNodePoolInitialNodeLabel... initialNodeLabels) {
            return initialNodeLabels(List.of(initialNodeLabels));
        }
        @CustomType.Setter
        public Builder kubernetesVersion(@Nullable String kubernetesVersion) {
            this.kubernetesVersion = kubernetesVersion;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeConfigDetails(@Nullable List<GetNodePoolNodeConfigDetail> nodeConfigDetails) {
            this.nodeConfigDetails = nodeConfigDetails;
            return this;
        }
        public Builder nodeConfigDetails(GetNodePoolNodeConfigDetail... nodeConfigDetails) {
            return nodeConfigDetails(List.of(nodeConfigDetails));
        }
        @CustomType.Setter
        public Builder nodeEvictionNodePoolSettings(@Nullable List<GetNodePoolNodeEvictionNodePoolSetting> nodeEvictionNodePoolSettings) {
            this.nodeEvictionNodePoolSettings = nodeEvictionNodePoolSettings;
            return this;
        }
        public Builder nodeEvictionNodePoolSettings(GetNodePoolNodeEvictionNodePoolSetting... nodeEvictionNodePoolSettings) {
            return nodeEvictionNodePoolSettings(List.of(nodeEvictionNodePoolSettings));
        }
        @CustomType.Setter
        public Builder nodeImageId(@Nullable String nodeImageId) {
            this.nodeImageId = nodeImageId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeImageName(@Nullable String nodeImageName) {
            this.nodeImageName = nodeImageName;
            return this;
        }
        @CustomType.Setter
        public Builder nodeMetadata(@Nullable Map<String,Object> nodeMetadata) {
            this.nodeMetadata = nodeMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder nodePoolCyclingDetails(@Nullable List<GetNodePoolNodePoolCyclingDetail> nodePoolCyclingDetails) {
            this.nodePoolCyclingDetails = nodePoolCyclingDetails;
            return this;
        }
        public Builder nodePoolCyclingDetails(GetNodePoolNodePoolCyclingDetail... nodePoolCyclingDetails) {
            return nodePoolCyclingDetails(List.of(nodePoolCyclingDetails));
        }
        @CustomType.Setter
        public Builder nodePoolId(String nodePoolId) {
            this.nodePoolId = Objects.requireNonNull(nodePoolId);
            return this;
        }
        @CustomType.Setter
        public Builder nodeShape(@Nullable String nodeShape) {
            this.nodeShape = nodeShape;
            return this;
        }
        @CustomType.Setter
        public Builder nodeShapeConfigs(@Nullable List<GetNodePoolNodeShapeConfig> nodeShapeConfigs) {
            this.nodeShapeConfigs = nodeShapeConfigs;
            return this;
        }
        public Builder nodeShapeConfigs(GetNodePoolNodeShapeConfig... nodeShapeConfigs) {
            return nodeShapeConfigs(List.of(nodeShapeConfigs));
        }
        @CustomType.Setter
        public Builder nodeSourceDetails(@Nullable List<GetNodePoolNodeSourceDetail> nodeSourceDetails) {
            this.nodeSourceDetails = nodeSourceDetails;
            return this;
        }
        public Builder nodeSourceDetails(GetNodePoolNodeSourceDetail... nodeSourceDetails) {
            return nodeSourceDetails(List.of(nodeSourceDetails));
        }
        @CustomType.Setter
        public Builder nodeSources(@Nullable List<GetNodePoolNodeSource> nodeSources) {
            this.nodeSources = nodeSources;
            return this;
        }
        public Builder nodeSources(GetNodePoolNodeSource... nodeSources) {
            return nodeSources(List.of(nodeSources));
        }
        @CustomType.Setter
        public Builder nodes(@Nullable List<GetNodePoolNode> nodes) {
            this.nodes = nodes;
            return this;
        }
        public Builder nodes(GetNodePoolNode... nodes) {
            return nodes(List.of(nodes));
        }
        @CustomType.Setter
        public Builder quantityPerSubnet(@Nullable Integer quantityPerSubnet) {
            this.quantityPerSubnet = quantityPerSubnet;
            return this;
        }
        @CustomType.Setter
        public Builder sshPublicKey(@Nullable String sshPublicKey) {
            this.sshPublicKey = sshPublicKey;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        public GetNodePoolResult build() {
            final var o = new GetNodePoolResult();
            o.clusterId = clusterId;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.freeformTags = freeformTags;
            o.id = id;
            o.initialNodeLabels = initialNodeLabels;
            o.kubernetesVersion = kubernetesVersion;
            o.lifecycleDetails = lifecycleDetails;
            o.name = name;
            o.nodeConfigDetails = nodeConfigDetails;
            o.nodeEvictionNodePoolSettings = nodeEvictionNodePoolSettings;
            o.nodeImageId = nodeImageId;
            o.nodeImageName = nodeImageName;
            o.nodeMetadata = nodeMetadata;
            o.nodePoolCyclingDetails = nodePoolCyclingDetails;
            o.nodePoolId = nodePoolId;
            o.nodeShape = nodeShape;
            o.nodeShapeConfigs = nodeShapeConfigs;
            o.nodeSourceDetails = nodeSourceDetails;
            o.nodeSources = nodeSources;
            o.nodes = nodes;
            o.quantityPerSubnet = quantityPerSubnet;
            o.sshPublicKey = sshPublicKey;
            o.state = state;
            o.subnetIds = subnetIds;
            return o;
        }
    }
}
