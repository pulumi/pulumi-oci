// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNodePoolsNodePoolNodeEvictionNodePoolSetting {
    /**
     * @return Duration after which OKE will give up eviction of the pods on the node. PT0M will indicate you want to delete the node without cordon and drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601 e.g PT30M
     * 
     */
    private final String evictionGraceDuration;
    /**
     * @return If the underlying compute instance should be deleted if you cannot evict all the pods in grace period
     * 
     */
    private final Boolean isForceDeleteAfterGraceDuration;

    @CustomType.Constructor
    private GetNodePoolsNodePoolNodeEvictionNodePoolSetting(
        @CustomType.Parameter("evictionGraceDuration") String evictionGraceDuration,
        @CustomType.Parameter("isForceDeleteAfterGraceDuration") Boolean isForceDeleteAfterGraceDuration) {
        this.evictionGraceDuration = evictionGraceDuration;
        this.isForceDeleteAfterGraceDuration = isForceDeleteAfterGraceDuration;
    }

    /**
     * @return Duration after which OKE will give up eviction of the pods on the node. PT0M will indicate you want to delete the node without cordon and drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601 e.g PT30M
     * 
     */
    public String evictionGraceDuration() {
        return this.evictionGraceDuration;
    }
    /**
     * @return If the underlying compute instance should be deleted if you cannot evict all the pods in grace period
     * 
     */
    public Boolean isForceDeleteAfterGraceDuration() {
        return this.isForceDeleteAfterGraceDuration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolsNodePoolNodeEvictionNodePoolSetting defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String evictionGraceDuration;
        private Boolean isForceDeleteAfterGraceDuration;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNodePoolsNodePoolNodeEvictionNodePoolSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.evictionGraceDuration = defaults.evictionGraceDuration;
    	      this.isForceDeleteAfterGraceDuration = defaults.isForceDeleteAfterGraceDuration;
        }

        public Builder evictionGraceDuration(String evictionGraceDuration) {
            this.evictionGraceDuration = Objects.requireNonNull(evictionGraceDuration);
            return this;
        }
        public Builder isForceDeleteAfterGraceDuration(Boolean isForceDeleteAfterGraceDuration) {
            this.isForceDeleteAfterGraceDuration = Objects.requireNonNull(isForceDeleteAfterGraceDuration);
            return this;
        }        public GetNodePoolsNodePoolNodeEvictionNodePoolSetting build() {
            return new GetNodePoolsNodePoolNodeEvictionNodePoolSetting(evictionGraceDuration, isForceDeleteAfterGraceDuration);
        }
    }
}
