// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNodePoolsNodePoolNodeSource {
    /**
     * @return The OCID of the image used to boot the node.
     * 
     */
    private String imageId;
    /**
     * @return The user-friendly name of the entity corresponding to the OCID.
     * 
     */
    private String sourceName;
    /**
     * @return The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     * 
     */
    private String sourceType;

    private GetNodePoolsNodePoolNodeSource() {}
    /**
     * @return The OCID of the image used to boot the node.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return The user-friendly name of the entity corresponding to the OCID.
     * 
     */
    public String sourceName() {
        return this.sourceName;
    }
    /**
     * @return The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolsNodePoolNodeSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String imageId;
        private String sourceName;
        private String sourceType;
        public Builder() {}
        public Builder(GetNodePoolsNodePoolNodeSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageId = defaults.imageId;
    	      this.sourceName = defaults.sourceName;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetNodePoolsNodePoolNodeSource", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceName(String sourceName) {
            if (sourceName == null) {
              throw new MissingRequiredPropertyException("GetNodePoolsNodePoolNodeSource", "sourceName");
            }
            this.sourceName = sourceName;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("GetNodePoolsNodePoolNodeSource", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        public GetNodePoolsNodePoolNodeSource build() {
            final var _resultValue = new GetNodePoolsNodePoolNodeSource();
            _resultValue.imageId = imageId;
            _resultValue.sourceName = sourceName;
            _resultValue.sourceType = sourceType;
            return _resultValue;
        }
    }
}
