// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerEngine.outputs.GetPodShapesFilter;
import com.pulumi.oci.ContainerEngine.outputs.GetPodShapesPodShape;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPodShapesResult {
    private @Nullable String availabilityDomain;
    private String compartmentId;
    private @Nullable List<GetPodShapesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the identifying shape.
     * 
     */
    private @Nullable String name;
    /**
     * @return The list of pod_shapes.
     * 
     */
    private List<GetPodShapesPodShape> podShapes;

    private GetPodShapesResult() {}
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetPodShapesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the identifying shape.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of pod_shapes.
     * 
     */
    public List<GetPodShapesPodShape> podShapes() {
        return this.podShapes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPodShapesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private @Nullable List<GetPodShapesFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetPodShapesPodShape> podShapes;
        public Builder() {}
        public Builder(GetPodShapesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.podShapes = defaults.podShapes;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {

            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetPodShapesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPodShapesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPodShapesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPodShapesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder podShapes(List<GetPodShapesPodShape> podShapes) {
            if (podShapes == null) {
              throw new MissingRequiredPropertyException("GetPodShapesResult", "podShapes");
            }
            this.podShapes = podShapes;
            return this;
        }
        public Builder podShapes(GetPodShapesPodShape... podShapes) {
            return podShapes(List.of(podShapes));
        }
        public GetPodShapesResult build() {
            final var _resultValue = new GetPodShapesResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.podShapes = podShapes;
            return _resultValue;
        }
    }
}
