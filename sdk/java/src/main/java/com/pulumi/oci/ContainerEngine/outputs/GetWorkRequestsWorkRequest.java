// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerEngine.outputs.GetWorkRequestsWorkRequestResource;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkRequestsWorkRequest {
    /**
     * @return The OCID of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The OCID of the work request.
     * 
     */
    private String id;
    /**
     * @return The type of work the work request is doing.
     * 
     */
    private String operationType;
    /**
     * @return The resources this work request affects.
     * 
     */
    private List<GetWorkRequestsWorkRequestResource> resources;
    /**
     * @return A work request status to filter on. Can have multiple parameters of this name.
     * 
     */
    private String status;
    /**
     * @return The time the work request was accepted.
     * 
     */
    private String timeAccepted;
    /**
     * @return The time the work request was finished.
     * 
     */
    private String timeFinished;
    /**
     * @return The time the work request was started.
     * 
     */
    private String timeStarted;

    private GetWorkRequestsWorkRequest() {}
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The OCID of the work request.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The type of work the work request is doing.
     * 
     */
    public String operationType() {
        return this.operationType;
    }
    /**
     * @return The resources this work request affects.
     * 
     */
    public List<GetWorkRequestsWorkRequestResource> resources() {
        return this.resources;
    }
    /**
     * @return A work request status to filter on. Can have multiple parameters of this name.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The time the work request was accepted.
     * 
     */
    public String timeAccepted() {
        return this.timeAccepted;
    }
    /**
     * @return The time the work request was finished.
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return The time the work request was started.
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkRequestsWorkRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String id;
        private String operationType;
        private List<GetWorkRequestsWorkRequestResource> resources;
        private String status;
        private String timeAccepted;
        private String timeFinished;
        private String timeStarted;
        public Builder() {}
        public Builder(GetWorkRequestsWorkRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.operationType = defaults.operationType;
    	      this.resources = defaults.resources;
    	      this.status = defaults.status;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder operationType(String operationType) {
            if (operationType == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "operationType");
            }
            this.operationType = operationType;
            return this;
        }
        @CustomType.Setter
        public Builder resources(List<GetWorkRequestsWorkRequestResource> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(GetWorkRequestsWorkRequestResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(String timeAccepted) {
            if (timeAccepted == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "timeAccepted");
            }
            this.timeAccepted = timeAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            if (timeFinished == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "timeFinished");
            }
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            if (timeStarted == null) {
              throw new MissingRequiredPropertyException("GetWorkRequestsWorkRequest", "timeStarted");
            }
            this.timeStarted = timeStarted;
            return this;
        }
        public GetWorkRequestsWorkRequest build() {
            final var _resultValue = new GetWorkRequestsWorkRequest();
            _resultValue.compartmentId = compartmentId;
            _resultValue.id = id;
            _resultValue.operationType = operationType;
            _resultValue.resources = resources;
            _resultValue.status = status;
            _resultValue.timeAccepted = timeAccepted;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            return _resultValue;
        }
    }
}
