// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodePoolNodeSourceDetails {
    /**
     * @return (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
     * 
     */
    private @Nullable String bootVolumeSizeInGbs;
    /**
     * @return (Updatable) The OCID of the image used to boot the node.
     * 
     */
    private String imageId;
    /**
     * @return (Updatable) The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     * 
     */
    private String sourceType;

    private NodePoolNodeSourceDetails() {}
    /**
     * @return (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/Block/Concepts/bootvolumes.htm) for max custom boot volume sizing and OS-specific requirements.
     * 
     */
    public Optional<String> bootVolumeSizeInGbs() {
        return Optional.ofNullable(this.bootVolumeSizeInGbs);
    }
    /**
     * @return (Updatable) The OCID of the image used to boot the node.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return (Updatable) The source type for the node. Use `IMAGE` when specifying an OCID of an image.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolNodeSourceDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bootVolumeSizeInGbs;
        private String imageId;
        private String sourceType;
        public Builder() {}
        public Builder(NodePoolNodeSourceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootVolumeSizeInGbs = defaults.bootVolumeSizeInGbs;
    	      this.imageId = defaults.imageId;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder bootVolumeSizeInGbs(@Nullable String bootVolumeSizeInGbs) {
            this.bootVolumeSizeInGbs = bootVolumeSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public NodePoolNodeSourceDetails build() {
            final var _resultValue = new NodePoolNodeSourceDetails();
            _resultValue.bootVolumeSizeInGbs = bootVolumeSizeInGbs;
            _resultValue.imageId = imageId;
            _resultValue.sourceType = sourceType;
            return _resultValue;
        }
    }
}
