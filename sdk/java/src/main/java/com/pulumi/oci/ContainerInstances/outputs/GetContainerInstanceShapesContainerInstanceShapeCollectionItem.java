// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerInstances.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ContainerInstances.outputs.GetContainerInstanceShapesContainerInstanceShapeCollectionItemMemoryOption;
import com.pulumi.oci.ContainerInstances.outputs.GetContainerInstanceShapesContainerInstanceShapeCollectionItemNetworkingBandwidthOption;
import com.pulumi.oci.ContainerInstances.outputs.GetContainerInstanceShapesContainerInstanceShapeCollectionItemOcpuOption;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContainerInstanceShapesContainerInstanceShapeCollectionItem {
    /**
     * @return For a flexible shape, the amount of memory available for container instances that use this shape.
     * 
     */
    private List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemMemoryOption> memoryOptions;
    /**
     * @return The name identifying the shape.
     * 
     */
    private String name;
    /**
     * @return For a flexible shape, the amount of networking bandwidth available for container instances that use this shape.
     * 
     */
    private List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemNetworkingBandwidthOption> networkingBandwidthOptions;
    /**
     * @return For a flexible shape, the number of OCPUs available for container instances that use this shape.
     * 
     */
    private List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemOcpuOption> ocpuOptions;
    /**
     * @return A short description of the container instance&#39;s processor (CPU).
     * 
     */
    private String processorDescription;

    private GetContainerInstanceShapesContainerInstanceShapeCollectionItem() {}
    /**
     * @return For a flexible shape, the amount of memory available for container instances that use this shape.
     * 
     */
    public List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemMemoryOption> memoryOptions() {
        return this.memoryOptions;
    }
    /**
     * @return The name identifying the shape.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return For a flexible shape, the amount of networking bandwidth available for container instances that use this shape.
     * 
     */
    public List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemNetworkingBandwidthOption> networkingBandwidthOptions() {
        return this.networkingBandwidthOptions;
    }
    /**
     * @return For a flexible shape, the number of OCPUs available for container instances that use this shape.
     * 
     */
    public List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemOcpuOption> ocpuOptions() {
        return this.ocpuOptions;
    }
    /**
     * @return A short description of the container instance&#39;s processor (CPU).
     * 
     */
    public String processorDescription() {
        return this.processorDescription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerInstanceShapesContainerInstanceShapeCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemMemoryOption> memoryOptions;
        private String name;
        private List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemNetworkingBandwidthOption> networkingBandwidthOptions;
        private List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemOcpuOption> ocpuOptions;
        private String processorDescription;
        public Builder() {}
        public Builder(GetContainerInstanceShapesContainerInstanceShapeCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.memoryOptions = defaults.memoryOptions;
    	      this.name = defaults.name;
    	      this.networkingBandwidthOptions = defaults.networkingBandwidthOptions;
    	      this.ocpuOptions = defaults.ocpuOptions;
    	      this.processorDescription = defaults.processorDescription;
        }

        @CustomType.Setter
        public Builder memoryOptions(List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemMemoryOption> memoryOptions) {
            if (memoryOptions == null) {
              throw new MissingRequiredPropertyException("GetContainerInstanceShapesContainerInstanceShapeCollectionItem", "memoryOptions");
            }
            this.memoryOptions = memoryOptions;
            return this;
        }
        public Builder memoryOptions(GetContainerInstanceShapesContainerInstanceShapeCollectionItemMemoryOption... memoryOptions) {
            return memoryOptions(List.of(memoryOptions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetContainerInstanceShapesContainerInstanceShapeCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkingBandwidthOptions(List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemNetworkingBandwidthOption> networkingBandwidthOptions) {
            if (networkingBandwidthOptions == null) {
              throw new MissingRequiredPropertyException("GetContainerInstanceShapesContainerInstanceShapeCollectionItem", "networkingBandwidthOptions");
            }
            this.networkingBandwidthOptions = networkingBandwidthOptions;
            return this;
        }
        public Builder networkingBandwidthOptions(GetContainerInstanceShapesContainerInstanceShapeCollectionItemNetworkingBandwidthOption... networkingBandwidthOptions) {
            return networkingBandwidthOptions(List.of(networkingBandwidthOptions));
        }
        @CustomType.Setter
        public Builder ocpuOptions(List<GetContainerInstanceShapesContainerInstanceShapeCollectionItemOcpuOption> ocpuOptions) {
            if (ocpuOptions == null) {
              throw new MissingRequiredPropertyException("GetContainerInstanceShapesContainerInstanceShapeCollectionItem", "ocpuOptions");
            }
            this.ocpuOptions = ocpuOptions;
            return this;
        }
        public Builder ocpuOptions(GetContainerInstanceShapesContainerInstanceShapeCollectionItemOcpuOption... ocpuOptions) {
            return ocpuOptions(List.of(ocpuOptions));
        }
        @CustomType.Setter
        public Builder processorDescription(String processorDescription) {
            if (processorDescription == null) {
              throw new MissingRequiredPropertyException("GetContainerInstanceShapesContainerInstanceShapeCollectionItem", "processorDescription");
            }
            this.processorDescription = processorDescription;
            return this;
        }
        public GetContainerInstanceShapesContainerInstanceShapeCollectionItem build() {
            final var _resultValue = new GetContainerInstanceShapesContainerInstanceShapeCollectionItem();
            _resultValue.memoryOptions = memoryOptions;
            _resultValue.name = name;
            _resultValue.networkingBandwidthOptions = networkingBandwidthOptions;
            _resultValue.ocpuOptions = ocpuOptions;
            _resultValue.processorDescription = processorDescription;
            return _resultValue;
        }
    }
}
