// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerInstances.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ContainerInstances.outputs.GetContainerInstanceShapesContainerInstanceShapeCollection;
import com.pulumi.oci.ContainerInstances.outputs.GetContainerInstanceShapesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerInstanceShapesResult {
    private @Nullable String availabilityDomain;
    private String compartmentId;
    /**
     * @return The list of container_instance_shape_collection.
     * 
     */
    private @Nullable List<GetContainerInstanceShapesContainerInstanceShapeCollection> containerInstanceShapeCollections;
    private @Nullable List<GetContainerInstanceShapesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;

    private GetContainerInstanceShapesResult() {}
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of container_instance_shape_collection.
     * 
     */
    public List<GetContainerInstanceShapesContainerInstanceShapeCollection> containerInstanceShapeCollections() {
        return this.containerInstanceShapeCollections == null ? List.of() : this.containerInstanceShapeCollections;
    }
    public List<GetContainerInstanceShapesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerInstanceShapesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private @Nullable List<GetContainerInstanceShapesContainerInstanceShapeCollection> containerInstanceShapeCollections;
        private @Nullable List<GetContainerInstanceShapesFilter> filters;
        private @Nullable String id;
        public Builder() {}
        public Builder(GetContainerInstanceShapesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.containerInstanceShapeCollections = defaults.containerInstanceShapeCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder containerInstanceShapeCollections(@Nullable List<GetContainerInstanceShapesContainerInstanceShapeCollection> containerInstanceShapeCollections) {
            this.containerInstanceShapeCollections = containerInstanceShapeCollections;
            return this;
        }
        public Builder containerInstanceShapeCollections(GetContainerInstanceShapesContainerInstanceShapeCollection... containerInstanceShapeCollections) {
            return containerInstanceShapeCollections(List.of(containerInstanceShapeCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetContainerInstanceShapesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetContainerInstanceShapesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public GetContainerInstanceShapesResult build() {
            final var o = new GetContainerInstanceShapesResult();
            o.availabilityDomain = availabilityDomain;
            o.compartmentId = compartmentId;
            o.containerInstanceShapeCollections = containerInstanceShapeCollections;
            o.filters = filters;
            o.id = id;
            return o;
        }
    }
}
