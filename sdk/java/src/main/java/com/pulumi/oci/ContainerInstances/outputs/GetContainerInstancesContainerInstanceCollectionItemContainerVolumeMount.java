// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerInstances.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMount {
    private Boolean isReadOnly;
    private String mountPath;
    private Integer partition;
    private String subPath;
    private String volumeName;

    private GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMount() {}
    public Boolean isReadOnly() {
        return this.isReadOnly;
    }
    public String mountPath() {
        return this.mountPath;
    }
    public Integer partition() {
        return this.partition;
    }
    public String subPath() {
        return this.subPath;
    }
    public String volumeName() {
        return this.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isReadOnly;
        private String mountPath;
        private Integer partition;
        private String subPath;
        private String volumeName;
        public Builder() {}
        public Builder(GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isReadOnly = defaults.isReadOnly;
    	      this.mountPath = defaults.mountPath;
    	      this.partition = defaults.partition;
    	      this.subPath = defaults.subPath;
    	      this.volumeName = defaults.volumeName;
        }

        @CustomType.Setter
        public Builder isReadOnly(Boolean isReadOnly) {
            this.isReadOnly = Objects.requireNonNull(isReadOnly);
            return this;
        }
        @CustomType.Setter
        public Builder mountPath(String mountPath) {
            this.mountPath = Objects.requireNonNull(mountPath);
            return this;
        }
        @CustomType.Setter
        public Builder partition(Integer partition) {
            this.partition = Objects.requireNonNull(partition);
            return this;
        }
        @CustomType.Setter
        public Builder subPath(String subPath) {
            this.subPath = Objects.requireNonNull(subPath);
            return this;
        }
        @CustomType.Setter
        public Builder volumeName(String volumeName) {
            this.volumeName = Objects.requireNonNull(volumeName);
            return this;
        }
        public GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMount build() {
            final var o = new GetContainerInstancesContainerInstanceCollectionItemContainerVolumeMount();
            o.isReadOnly = isReadOnly;
            o.mountPath = mountPath;
            o.partition = partition;
            o.subPath = subPath;
            o.volumeName = volumeName;
            return o;
        }
    }
}
