// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceMaintenanceEventArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceMaintenanceEventArgs Empty = new InstanceMaintenanceEventArgs();

    /**
     * (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
     * 
     */
    @Import(name="alternativeResolutionAction")
    private @Nullable Output<String> alternativeResolutionAction;

    /**
     * @return (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
     * 
     */
    public Optional<Output<String>> alternativeResolutionAction() {
        return Optional.ofNullable(this.alternativeResolutionAction);
    }

    /**
     * (Updatable) This field is only applicable when setting the alternativeResolutionAction.
     * 
     * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
     * 
     * In cases where the local storage will be lost, this parameter must be set or the request will fail.
     * 
     */
    @Import(name="canDeleteLocalStorage")
    private @Nullable Output<Boolean> canDeleteLocalStorage;

    /**
     * @return (Updatable) This field is only applicable when setting the alternativeResolutionAction.
     * 
     * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
     * 
     * In cases where the local storage will be lost, this parameter must be set or the request will fail.
     * 
     */
    public Optional<Output<Boolean>> canDeleteLocalStorage() {
        return Optional.ofNullable(this.canDeleteLocalStorage);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The OCID of the instance maintenance event.
     * 
     */
    @Import(name="instanceMaintenanceEventId", required=true)
    private Output<String> instanceMaintenanceEventId;

    /**
     * @return The OCID of the instance maintenance event.
     * 
     */
    public Output<String> instanceMaintenanceEventId() {
        return this.instanceMaintenanceEventId;
    }

    /**
     * (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
     * 
     * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeWindowStart")
    private @Nullable Output<String> timeWindowStart;

    /**
     * @return (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
     * 
     * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> timeWindowStart() {
        return Optional.ofNullable(this.timeWindowStart);
    }

    private InstanceMaintenanceEventArgs() {}

    private InstanceMaintenanceEventArgs(InstanceMaintenanceEventArgs $) {
        this.alternativeResolutionAction = $.alternativeResolutionAction;
        this.canDeleteLocalStorage = $.canDeleteLocalStorage;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.instanceMaintenanceEventId = $.instanceMaintenanceEventId;
        this.timeWindowStart = $.timeWindowStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceMaintenanceEventArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceMaintenanceEventArgs $;

        public Builder() {
            $ = new InstanceMaintenanceEventArgs();
        }

        public Builder(InstanceMaintenanceEventArgs defaults) {
            $ = new InstanceMaintenanceEventArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alternativeResolutionAction (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
         * 
         * @return builder
         * 
         */
        public Builder alternativeResolutionAction(@Nullable Output<String> alternativeResolutionAction) {
            $.alternativeResolutionAction = alternativeResolutionAction;
            return this;
        }

        /**
         * @param alternativeResolutionAction (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
         * 
         * @return builder
         * 
         */
        public Builder alternativeResolutionAction(String alternativeResolutionAction) {
            return alternativeResolutionAction(Output.of(alternativeResolutionAction));
        }

        /**
         * @param canDeleteLocalStorage (Updatable) This field is only applicable when setting the alternativeResolutionAction.
         * 
         * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
         * 
         * In cases where the local storage will be lost, this parameter must be set or the request will fail.
         * 
         * @return builder
         * 
         */
        public Builder canDeleteLocalStorage(@Nullable Output<Boolean> canDeleteLocalStorage) {
            $.canDeleteLocalStorage = canDeleteLocalStorage;
            return this;
        }

        /**
         * @param canDeleteLocalStorage (Updatable) This field is only applicable when setting the alternativeResolutionAction.
         * 
         * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
         * 
         * In cases where the local storage will be lost, this parameter must be set or the request will fail.
         * 
         * @return builder
         * 
         */
        public Builder canDeleteLocalStorage(Boolean canDeleteLocalStorage) {
            return canDeleteLocalStorage(Output.of(canDeleteLocalStorage));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param instanceMaintenanceEventId The OCID of the instance maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder instanceMaintenanceEventId(Output<String> instanceMaintenanceEventId) {
            $.instanceMaintenanceEventId = instanceMaintenanceEventId;
            return this;
        }

        /**
         * @param instanceMaintenanceEventId The OCID of the instance maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder instanceMaintenanceEventId(String instanceMaintenanceEventId) {
            return instanceMaintenanceEventId(Output.of(instanceMaintenanceEventId));
        }

        /**
         * @param timeWindowStart (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
         * 
         * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeWindowStart(@Nullable Output<String> timeWindowStart) {
            $.timeWindowStart = timeWindowStart;
            return this;
        }

        /**
         * @param timeWindowStart (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
         * 
         * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeWindowStart(String timeWindowStart) {
            return timeWindowStart(Output.of(timeWindowStart));
        }

        public InstanceMaintenanceEventArgs build() {
            if ($.instanceMaintenanceEventId == null) {
                throw new MissingRequiredPropertyException("InstanceMaintenanceEventArgs", "instanceMaintenanceEventId");
            }
            return $;
        }
    }

}
