// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Core.IpsecConnectionTunnelManagementArgs;
import com.pulumi.oci.Core.inputs.IpsecConnectionTunnelManagementState;
import com.pulumi.oci.Core.outputs.IpsecConnectionTunnelManagementBgpSessionInfo;
import com.pulumi.oci.Core.outputs.IpsecConnectionTunnelManagementDpdConfig;
import com.pulumi.oci.Core.outputs.IpsecConnectionTunnelManagementEncryptionDomainConfig;
import com.pulumi.oci.Core.outputs.IpsecConnectionTunnelManagementPhaseOneDetail;
import com.pulumi.oci.Core.outputs.IpsecConnectionTunnelManagementPhaseTwoDetail;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Ip Sec Connection Tunnel Management resource in Oracle Cloud Infrastructure Core service.
 * 
 * Updates the specified tunnel. This operation lets you change tunnel attributes such as the
 * routing type (BGP dynamic routing or static routing). Here are some important notes:
 * 
 *     * If you change the tunnel&#39;s routing type or BGP session configuration, the tunnel will go
 *     down while it&#39;s reprovisioned.
 *     
 *     * If you want to switch the tunnel&#39;s `routing` from `STATIC` to `BGP`, make sure the tunnel&#39;s
 *     BGP session configuration attributes have been set (bgpSessionConfig).
 *     
 *     * If you want to switch the tunnel&#39;s `routing` from `BGP` to `STATIC`, make sure the
 *     IPSecConnection already has at least one valid CIDR
 *     static route.
 * 
 * ** IMPORTANT **
 * Destroying the `oci.Core.IpsecConnectionTunnelManagement` leaves the resource in its existing state. It will not destroy the tunnel and it will not return the tunnel to its default values.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Core.IpsecConnectionTunnelManagement;
 * import com.pulumi.oci.Core.IpsecConnectionTunnelManagementArgs;
 * import com.pulumi.oci.Core.inputs.IpsecConnectionTunnelManagementBgpSessionInfoArgs;
 * import com.pulumi.oci.Core.inputs.IpsecConnectionTunnelManagementEncryptionDomainConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testIpSecConnectionTunnel = new IpsecConnectionTunnelManagement(&#34;testIpSecConnectionTunnel&#34;, IpsecConnectionTunnelManagementArgs.builder()        
 *             .ipsecId(oci_core_ipsec.test_ipsec().id())
 *             .tunnelId(data.oci_core_ipsec_connection_tunnels().test_ip_sec_connection_tunnels().ip_sec_connection_tunnels()[0].id())
 *             .routing(var_.ip_sec_connection_tunnel_management_routing())
 *             .bgpSessionInfos(IpsecConnectionTunnelManagementBgpSessionInfoArgs.builder()
 *                 .customerBgpAsn(var_.ip_sec_connection_tunnel_management_bgp_session_info_customer_bgp_asn())
 *                 .customerInterfaceIp(var_.ip_sec_connection_tunnel_management_bgp_session_info_customer_interface_ip())
 *                 .oracleInterfaceIp(var_.ip_sec_connection_tunnel_management_bgp_session_info_oracle_interface_ip())
 *                 .build())
 *             .displayName(var_.ip_sec_connection_tunnel_management_display_name())
 *             .encryptionDomainConfig(IpsecConnectionTunnelManagementEncryptionDomainConfigArgs.builder()
 *                 .cpeTrafficSelectors(var_.ip_sec_connection_tunnel_management_encryption_domain_config_cpe_traffic_selector())
 *                 .oracleTrafficSelectors(var_.ip_sec_connection_tunnel_management_encryption_domain_config_oracle_traffic_selector())
 *                 .build())
 *             .sharedSecret(var_.ip_sec_connection_tunnel_management_shared_secret())
 *             .ikeVersion(&#34;V1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="oci:Core/ipsecConnectionTunnelManagement:IpsecConnectionTunnelManagement")
public class IpsecConnectionTunnelManagement extends com.pulumi.resources.CustomResource {
    /**
     * The list of virtual circuit [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s over which your network can reach this tunnel.
     * 
     */
    @Export(name="associatedVirtualCircuits", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> associatedVirtualCircuits;

    /**
     * @return The list of virtual circuit [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s over which your network can reach this tunnel.
     * 
     */
    public Output<List<String>> associatedVirtualCircuits() {
        return this.associatedVirtualCircuits;
    }
    /**
     * Information for establishing a BGP session for the IPSec tunnel. Required if the tunnel uses BGP dynamic routing.
     * 
     * If the tunnel instead uses static routing, you may optionally provide this object and set an IP address for one or both ends of the IPSec tunnel for the purposes of troubleshooting or monitoring the tunnel.
     * 
     */
    @Export(name="bgpSessionInfos", refs={List.class,IpsecConnectionTunnelManagementBgpSessionInfo.class}, tree="[0,1]")
    private Output<List<IpsecConnectionTunnelManagementBgpSessionInfo>> bgpSessionInfos;

    /**
     * @return Information for establishing a BGP session for the IPSec tunnel. Required if the tunnel uses BGP dynamic routing.
     * 
     * If the tunnel instead uses static routing, you may optionally provide this object and set an IP address for one or both ends of the IPSec tunnel for the purposes of troubleshooting or monitoring the tunnel.
     * 
     */
    public Output<List<IpsecConnectionTunnelManagementBgpSessionInfo>> bgpSessionInfos() {
        return this.bgpSessionInfos;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the tunnel.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the tunnel.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The IP address of the CPE device&#39;s VPN headend.  Example: `203.0.113.22`
     * 
     */
    @Export(name="cpeIp", refs={String.class}, tree="[0]")
    private Output<String> cpeIp;

    /**
     * @return The IP address of the CPE device&#39;s VPN headend.  Example: `203.0.113.22`
     * 
     */
    public Output<String> cpeIp() {
        return this.cpeIp;
    }
    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    @Export(name="dpdConfigs", refs={List.class,IpsecConnectionTunnelManagementDpdConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<IpsecConnectionTunnelManagementDpdConfig>> dpdConfigs;

    public Output<Optional<List<IpsecConnectionTunnelManagementDpdConfig>>> dpdConfigs() {
        return Codegen.optional(this.dpdConfigs);
    }
    /**
     * This option defines whether DPD can be initiated from the Oracle side of the connection. `INITIATE_AND_RESPOND` or `RESPOND_ONLY`
     * 
     */
    @Export(name="dpdMode", refs={String.class}, tree="[0]")
    private Output<String> dpdMode;

    /**
     * @return This option defines whether DPD can be initiated from the Oracle side of the connection. `INITIATE_AND_RESPOND` or `RESPOND_ONLY`
     * 
     */
    public Output<String> dpdMode() {
        return this.dpdMode;
    }
    /**
     * DPD timeout in seconds. This sets the longest interval between CPE device health messages before the IPSec connection indicates it has lost contact with the CPE. The default is 20 seconds.
     * 
     */
    @Export(name="dpdTimeoutInSec", refs={Integer.class}, tree="[0]")
    private Output<Integer> dpdTimeoutInSec;

    /**
     * @return DPD timeout in seconds. This sets the longest interval between CPE device health messages before the IPSec connection indicates it has lost contact with the CPE. The default is 20 seconds.
     * 
     */
    public Output<Integer> dpdTimeoutInSec() {
        return this.dpdTimeoutInSec;
    }
    /**
     * Configuration information used by the encryption domain policy. Required if the tunnel uses POLICY routing.
     * 
     */
    @Export(name="encryptionDomainConfig", refs={IpsecConnectionTunnelManagementEncryptionDomainConfig.class}, tree="[0]")
    private Output<IpsecConnectionTunnelManagementEncryptionDomainConfig> encryptionDomainConfig;

    /**
     * @return Configuration information used by the encryption domain policy. Required if the tunnel uses POLICY routing.
     * 
     */
    public Output<IpsecConnectionTunnelManagementEncryptionDomainConfig> encryptionDomainConfig() {
        return this.encryptionDomainConfig;
    }
    /**
     * Internet Key Exchange protocol version.
     * 
     */
    @Export(name="ikeVersion", refs={String.class}, tree="[0]")
    private Output<String> ikeVersion;

    /**
     * @return Internet Key Exchange protocol version.
     * 
     */
    public Output<String> ikeVersion() {
        return this.ikeVersion;
    }
    /**
     * The OCID of the IPSec connection.
     * 
     */
    @Export(name="ipsecId", refs={String.class}, tree="[0]")
    private Output<String> ipsecId;

    /**
     * @return The OCID of the IPSec connection.
     * 
     */
    public Output<String> ipsecId() {
        return this.ipsecId;
    }
    /**
     * By default (the `AUTO` setting), IKE sends packets with a source and destination port set to 500, and when it detects that the port used to forward packets has changed (most likely because a NAT device is between the CPE device and the Oracle VPN headend) it will try to negotiate the use of NAT-T.
     * 
     * The `ENABLED` option sets the IKE protocol to use port 4500 instead of 500 and forces encapsulating traffic with the ESP protocol inside UDP packets.
     * 
     * The `DISABLED` option directs IKE to completely refuse to negotiate NAT-T even if it senses there may be a NAT device in use.
     * 
     */
    @Export(name="natTranslationEnabled", refs={String.class}, tree="[0]")
    private Output<String> natTranslationEnabled;

    /**
     * @return By default (the `AUTO` setting), IKE sends packets with a source and destination port set to 500, and when it detects that the port used to forward packets has changed (most likely because a NAT device is between the CPE device and the Oracle VPN headend) it will try to negotiate the use of NAT-T.
     * 
     * The `ENABLED` option sets the IKE protocol to use port 4500 instead of 500 and forces encapsulating traffic with the ESP protocol inside UDP packets.
     * 
     * The `DISABLED` option directs IKE to completely refuse to negotiate NAT-T even if it senses there may be a NAT device in use.
     * 
     */
    public Output<String> natTranslationEnabled() {
        return this.natTranslationEnabled;
    }
    /**
     * Indicates whether Oracle can only respond to a request to start an IPSec tunnel from the CPE device (`RESPONDER_ONLY`), or both respond to and initiate requests (`INITIATOR_OR_RESPONDER`).
     * 
     */
    @Export(name="oracleCanInitiate", refs={String.class}, tree="[0]")
    private Output<String> oracleCanInitiate;

    /**
     * @return Indicates whether Oracle can only respond to a request to start an IPSec tunnel from the CPE device (`RESPONDER_ONLY`), or both respond to and initiate requests (`INITIATOR_OR_RESPONDER`).
     * 
     */
    public Output<String> oracleCanInitiate() {
        return this.oracleCanInitiate;
    }
    /**
     * Configuration details for IKE phase one (ISAKMP) configuration parameters.
     * 
     * See [PhaseOneConfigDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/PhaseOneConfigDetails) for allowed values but note naming scheme follows [TunnelPhaseOneDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/TunnelPhaseOneDetails).
     * 
     */
    @Export(name="phaseOneDetails", refs={List.class,IpsecConnectionTunnelManagementPhaseOneDetail.class}, tree="[0,1]")
    private Output<List<IpsecConnectionTunnelManagementPhaseOneDetail>> phaseOneDetails;

    /**
     * @return Configuration details for IKE phase one (ISAKMP) configuration parameters.
     * 
     * See [PhaseOneConfigDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/PhaseOneConfigDetails) for allowed values but note naming scheme follows [TunnelPhaseOneDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/TunnelPhaseOneDetails).
     * 
     */
    public Output<List<IpsecConnectionTunnelManagementPhaseOneDetail>> phaseOneDetails() {
        return this.phaseOneDetails;
    }
    /**
     * Configuration details for IPSec phase two configuration parameters.
     * 
     * See [PhaseTwoConfigDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/PhaseTwoConfigDetails) for allowed values, but note naming scheme follows [TunnelPhaseTwoDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/TunnelPhaseTwoDetails).
     * 
     */
    @Export(name="phaseTwoDetails", refs={List.class,IpsecConnectionTunnelManagementPhaseTwoDetail.class}, tree="[0,1]")
    private Output<List<IpsecConnectionTunnelManagementPhaseTwoDetail>> phaseTwoDetails;

    /**
     * @return Configuration details for IPSec phase two configuration parameters.
     * 
     * See [PhaseTwoConfigDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/PhaseTwoConfigDetails) for allowed values, but note naming scheme follows [TunnelPhaseTwoDetails](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/datatypes/TunnelPhaseTwoDetails).
     * 
     */
    public Output<List<IpsecConnectionTunnelManagementPhaseTwoDetail>> phaseTwoDetails() {
        return this.phaseTwoDetails;
    }
    /**
     * The type of routing to use for this tunnel (either BGP dynamic routing, STATIC routing or POLICY routing).
     * 
     */
    @Export(name="routing", refs={String.class}, tree="[0]")
    private Output<String> routing;

    /**
     * @return The type of routing to use for this tunnel (either BGP dynamic routing, STATIC routing or POLICY routing).
     * 
     */
    public Output<String> routing() {
        return this.routing;
    }
    /**
     * The shared secret (pre-shared key) to use for the IPSec tunnel. If you don&#39;t provide a value, Oracle generates a value for you. You can specify your own shared secret later if you like with [UpdateIPSecConnectionTunnelSharedSecret](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnelSharedSecret/UpdateIPSecConnectionTunnelSharedSecret).  Example: `EXAMPLEToUis6j1c.p8G.dVQxcmdfMO0yXMLi.lZTbYCMDGu4V8o`
     * 
     */
    @Export(name="sharedSecret", refs={String.class}, tree="[0]")
    private Output<String> sharedSecret;

    /**
     * @return The shared secret (pre-shared key) to use for the IPSec tunnel. If you don&#39;t provide a value, Oracle generates a value for you. You can specify your own shared secret later if you like with [UpdateIPSecConnectionTunnelSharedSecret](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnelSharedSecret/UpdateIPSecConnectionTunnelSharedSecret).  Example: `EXAMPLEToUis6j1c.p8G.dVQxcmdfMO0yXMLi.lZTbYCMDGu4V8o`
     * 
     */
    public Output<String> sharedSecret() {
        return this.sharedSecret;
    }
    /**
     * The IPSec connection&#39;s tunnel&#39;s lifecycle state.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The IPSec connection&#39;s tunnel&#39;s lifecycle state.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The tunnel&#39;s current state.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The tunnel&#39;s current state.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Export(name="timeStatusUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeStatusUpdated;

    /**
     * @return When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Output<String> timeStatusUpdated() {
        return this.timeStatusUpdated;
    }
    /**
     * The OCID of the IPSec connection&#39;s tunnel.
     * 
     */
    @Export(name="tunnelId", refs={String.class}, tree="[0]")
    private Output<String> tunnelId;

    /**
     * @return The OCID of the IPSec connection&#39;s tunnel.
     * 
     */
    public Output<String> tunnelId() {
        return this.tunnelId;
    }
    /**
     * The IP address of Oracle&#39;s VPN headend.  Example: `129.146.17.50`
     * 
     */
    @Export(name="vpnIp", refs={String.class}, tree="[0]")
    private Output<String> vpnIp;

    /**
     * @return The IP address of Oracle&#39;s VPN headend.  Example: `129.146.17.50`
     * 
     */
    public Output<String> vpnIp() {
        return this.vpnIp;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IpsecConnectionTunnelManagement(String name) {
        this(name, IpsecConnectionTunnelManagementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IpsecConnectionTunnelManagement(String name, IpsecConnectionTunnelManagementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IpsecConnectionTunnelManagement(String name, IpsecConnectionTunnelManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Core/ipsecConnectionTunnelManagement:IpsecConnectionTunnelManagement", name, args == null ? IpsecConnectionTunnelManagementArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IpsecConnectionTunnelManagement(String name, Output<String> id, @Nullable IpsecConnectionTunnelManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Core/ipsecConnectionTunnelManagement:IpsecConnectionTunnelManagement", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "sharedSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IpsecConnectionTunnelManagement get(String name, Output<String> id, @Nullable IpsecConnectionTunnelManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IpsecConnectionTunnelManagement(name, id, state, options);
    }
}
