// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.inputs.ClusterNetworkPlacementConfigurationPrimaryVnicSubnetsArgs;
import com.pulumi.oci.Core.inputs.ClusterNetworkPlacementConfigurationSecondaryVnicSubnetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNetworkPlacementConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNetworkPlacementConfigurationArgs Empty = new ClusterNetworkPlacementConfigurationArgs();

    /**
     * The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     * 
     */
    @Import(name="availabilityDomain", required=true)
    private Output<String> availabilityDomain;

    /**
     * @return The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Output<String> availabilityDomain() {
        return this.availabilityDomain;
    }

    @Import(name="placementConstraint")
    private @Nullable Output<String> placementConstraint;

    public Optional<Output<String>> placementConstraint() {
        return Optional.ofNullable(this.placementConstraint);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
     * 
     */
    @Import(name="primarySubnetId")
    private @Nullable Output<String> primarySubnetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
     * 
     */
    public Optional<Output<String>> primarySubnetId() {
        return Optional.ofNullable(this.primarySubnetId);
    }

    /**
     * Details about the IPv6 primary subnet.
     * 
     */
    @Import(name="primaryVnicSubnets")
    private @Nullable Output<ClusterNetworkPlacementConfigurationPrimaryVnicSubnetsArgs> primaryVnicSubnets;

    /**
     * @return Details about the IPv6 primary subnet.
     * 
     */
    public Optional<Output<ClusterNetworkPlacementConfigurationPrimaryVnicSubnetsArgs>> primaryVnicSubnets() {
        return Optional.ofNullable(this.primaryVnicSubnets);
    }

    /**
     * The set of secondary VNIC data for instances in the pool.
     * 
     */
    @Import(name="secondaryVnicSubnets")
    private @Nullable Output<List<ClusterNetworkPlacementConfigurationSecondaryVnicSubnetArgs>> secondaryVnicSubnets;

    /**
     * @return The set of secondary VNIC data for instances in the pool.
     * 
     */
    public Optional<Output<List<ClusterNetworkPlacementConfigurationSecondaryVnicSubnetArgs>>> secondaryVnicSubnets() {
        return Optional.ofNullable(this.secondaryVnicSubnets);
    }

    private ClusterNetworkPlacementConfigurationArgs() {}

    private ClusterNetworkPlacementConfigurationArgs(ClusterNetworkPlacementConfigurationArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.placementConstraint = $.placementConstraint;
        this.primarySubnetId = $.primarySubnetId;
        this.primaryVnicSubnets = $.primaryVnicSubnets;
        this.secondaryVnicSubnets = $.secondaryVnicSubnets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNetworkPlacementConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNetworkPlacementConfigurationArgs $;

        public Builder() {
            $ = new ClusterNetworkPlacementConfigurationArgs();
        }

        public Builder(ClusterNetworkPlacementConfigurationArgs defaults) {
            $ = new ClusterNetworkPlacementConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        public Builder placementConstraint(@Nullable Output<String> placementConstraint) {
            $.placementConstraint = placementConstraint;
            return this;
        }

        public Builder placementConstraint(String placementConstraint) {
            return placementConstraint(Output.of(placementConstraint));
        }

        /**
         * @param primarySubnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder primarySubnetId(@Nullable Output<String> primarySubnetId) {
            $.primarySubnetId = primarySubnetId;
            return this;
        }

        /**
         * @param primarySubnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder primarySubnetId(String primarySubnetId) {
            return primarySubnetId(Output.of(primarySubnetId));
        }

        /**
         * @param primaryVnicSubnets Details about the IPv6 primary subnet.
         * 
         * @return builder
         * 
         */
        public Builder primaryVnicSubnets(@Nullable Output<ClusterNetworkPlacementConfigurationPrimaryVnicSubnetsArgs> primaryVnicSubnets) {
            $.primaryVnicSubnets = primaryVnicSubnets;
            return this;
        }

        /**
         * @param primaryVnicSubnets Details about the IPv6 primary subnet.
         * 
         * @return builder
         * 
         */
        public Builder primaryVnicSubnets(ClusterNetworkPlacementConfigurationPrimaryVnicSubnetsArgs primaryVnicSubnets) {
            return primaryVnicSubnets(Output.of(primaryVnicSubnets));
        }

        /**
         * @param secondaryVnicSubnets The set of secondary VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVnicSubnets(@Nullable Output<List<ClusterNetworkPlacementConfigurationSecondaryVnicSubnetArgs>> secondaryVnicSubnets) {
            $.secondaryVnicSubnets = secondaryVnicSubnets;
            return this;
        }

        /**
         * @param secondaryVnicSubnets The set of secondary VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVnicSubnets(List<ClusterNetworkPlacementConfigurationSecondaryVnicSubnetArgs> secondaryVnicSubnets) {
            return secondaryVnicSubnets(Output.of(secondaryVnicSubnets));
        }

        /**
         * @param secondaryVnicSubnets The set of secondary VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVnicSubnets(ClusterNetworkPlacementConfigurationSecondaryVnicSubnetArgs... secondaryVnicSubnets) {
            return secondaryVnicSubnets(List.of(secondaryVnicSubnets));
        }

        public ClusterNetworkPlacementConfigurationArgs build() {
            if ($.availabilityDomain == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkPlacementConfigurationArgs", "availabilityDomain");
            }
            return $;
        }
    }

}
