// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComputeHostGroupConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComputeHostGroupConfigurationArgs Empty = new ComputeHostGroupConfigurationArgs();

    /**
     * (Updatable) The OCID for firmware bundle
     * 
     */
    @Import(name="firmwareBundleId")
    private @Nullable Output<String> firmwareBundleId;

    /**
     * @return (Updatable) The OCID for firmware bundle
     * 
     */
    public Optional<Output<String>> firmwareBundleId() {
        return Optional.ofNullable(this.firmwareBundleId);
    }

    /**
     * (Updatable) Preferred recycle level for hosts associated with the reservation config.
     * * `SKIP_RECYCLE` - Skips host wipe.
     * * `FULL_RECYCLE` - Does not skip host wipe. This is the default behavior.
     * 
     */
    @Import(name="recycleLevel")
    private @Nullable Output<String> recycleLevel;

    /**
     * @return (Updatable) Preferred recycle level for hosts associated with the reservation config.
     * * `SKIP_RECYCLE` - Skips host wipe.
     * * `FULL_RECYCLE` - Does not skip host wipe. This is the default behavior.
     * 
     */
    public Optional<Output<String>> recycleLevel() {
        return Optional.ofNullable(this.recycleLevel);
    }

    /**
     * (Updatable) Either the platform name or compute shape that the configuration is targeting
     * 
     */
    @Import(name="target")
    private @Nullable Output<String> target;

    /**
     * @return (Updatable) Either the platform name or compute shape that the configuration is targeting
     * 
     */
    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    private ComputeHostGroupConfigurationArgs() {}

    private ComputeHostGroupConfigurationArgs(ComputeHostGroupConfigurationArgs $) {
        this.firmwareBundleId = $.firmwareBundleId;
        this.recycleLevel = $.recycleLevel;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeHostGroupConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeHostGroupConfigurationArgs $;

        public Builder() {
            $ = new ComputeHostGroupConfigurationArgs();
        }

        public Builder(ComputeHostGroupConfigurationArgs defaults) {
            $ = new ComputeHostGroupConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param firmwareBundleId (Updatable) The OCID for firmware bundle
         * 
         * @return builder
         * 
         */
        public Builder firmwareBundleId(@Nullable Output<String> firmwareBundleId) {
            $.firmwareBundleId = firmwareBundleId;
            return this;
        }

        /**
         * @param firmwareBundleId (Updatable) The OCID for firmware bundle
         * 
         * @return builder
         * 
         */
        public Builder firmwareBundleId(String firmwareBundleId) {
            return firmwareBundleId(Output.of(firmwareBundleId));
        }

        /**
         * @param recycleLevel (Updatable) Preferred recycle level for hosts associated with the reservation config.
         * * `SKIP_RECYCLE` - Skips host wipe.
         * * `FULL_RECYCLE` - Does not skip host wipe. This is the default behavior.
         * 
         * @return builder
         * 
         */
        public Builder recycleLevel(@Nullable Output<String> recycleLevel) {
            $.recycleLevel = recycleLevel;
            return this;
        }

        /**
         * @param recycleLevel (Updatable) Preferred recycle level for hosts associated with the reservation config.
         * * `SKIP_RECYCLE` - Skips host wipe.
         * * `FULL_RECYCLE` - Does not skip host wipe. This is the default behavior.
         * 
         * @return builder
         * 
         */
        public Builder recycleLevel(String recycleLevel) {
            return recycleLevel(Output.of(recycleLevel));
        }

        /**
         * @param target (Updatable) Either the platform name or compute shape that the configuration is targeting
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target (Updatable) Either the platform name or compute shape that the configuration is targeting
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public ComputeHostGroupConfigurationArgs build() {
            return $;
        }
    }

}
