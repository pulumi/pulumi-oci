// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.inputs.GetComputeGpuMemoryClusterInstancesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetComputeGpuMemoryClusterInstancesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetComputeGpuMemoryClusterInstancesArgs Empty = new GetComputeGpuMemoryClusterInstancesArgs();

    /**
     * The OCID of the compute GPU memory cluster.
     * 
     */
    @Import(name="computeGpuMemoryClusterId", required=true)
    private Output<String> computeGpuMemoryClusterId;

    /**
     * @return The OCID of the compute GPU memory cluster.
     * 
     */
    public Output<String> computeGpuMemoryClusterId() {
        return this.computeGpuMemoryClusterId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetComputeGpuMemoryClusterInstancesFilterArgs>> filters;

    public Optional<Output<List<GetComputeGpuMemoryClusterInstancesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetComputeGpuMemoryClusterInstancesArgs() {}

    private GetComputeGpuMemoryClusterInstancesArgs(GetComputeGpuMemoryClusterInstancesArgs $) {
        this.computeGpuMemoryClusterId = $.computeGpuMemoryClusterId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetComputeGpuMemoryClusterInstancesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetComputeGpuMemoryClusterInstancesArgs $;

        public Builder() {
            $ = new GetComputeGpuMemoryClusterInstancesArgs();
        }

        public Builder(GetComputeGpuMemoryClusterInstancesArgs defaults) {
            $ = new GetComputeGpuMemoryClusterInstancesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param computeGpuMemoryClusterId The OCID of the compute GPU memory cluster.
         * 
         * @return builder
         * 
         */
        public Builder computeGpuMemoryClusterId(Output<String> computeGpuMemoryClusterId) {
            $.computeGpuMemoryClusterId = computeGpuMemoryClusterId;
            return this;
        }

        /**
         * @param computeGpuMemoryClusterId The OCID of the compute GPU memory cluster.
         * 
         * @return builder
         * 
         */
        public Builder computeGpuMemoryClusterId(String computeGpuMemoryClusterId) {
            return computeGpuMemoryClusterId(Output.of(computeGpuMemoryClusterId));
        }

        public Builder filters(@Nullable Output<List<GetComputeGpuMemoryClusterInstancesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetComputeGpuMemoryClusterInstancesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetComputeGpuMemoryClusterInstancesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public GetComputeGpuMemoryClusterInstancesArgs build() {
            if ($.computeGpuMemoryClusterId == null) {
                throw new MissingRequiredPropertyException("GetComputeGpuMemoryClusterInstancesArgs", "computeGpuMemoryClusterId");
            }
            return $;
        }
    }

}
