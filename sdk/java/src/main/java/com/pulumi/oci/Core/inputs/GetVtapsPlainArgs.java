// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.inputs.GetVtapsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVtapsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVtapsPlainArgs Empty = new GetVtapsPlainArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only resources that match the given display name exactly.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetVtapsFilter> filters;

    public Optional<List<GetVtapsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Indicates whether to list all VTAPs or only running VTAPs.
     * * When `FALSE`, lists ALL running and stopped VTAPs.
     * * When `TRUE`, lists only running VTAPs (VTAPs where isVtapEnabled = `TRUE`).
     * 
     */
    @Import(name="isVtapEnabled")
    private @Nullable Boolean isVtapEnabled;

    /**
     * @return Indicates whether to list all VTAPs or only running VTAPs.
     * * When `FALSE`, lists ALL running and stopped VTAPs.
     * * When `TRUE`, lists only running VTAPs (VTAPs where isVtapEnabled = `TRUE`).
     * 
     */
    public Optional<Boolean> isVtapEnabled() {
        return Optional.ofNullable(this.isVtapEnabled);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP source.
     * 
     */
    @Import(name="source")
    private @Nullable String source;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP source.
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * A filter to return only resources that match the given VTAP administrative lifecycle state. The state value is case-insensitive.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources that match the given VTAP administrative lifecycle state. The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP target.
     * 
     */
    @Import(name="targetId")
    private @Nullable String targetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP target.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * The IP address of the VTAP target.
     * 
     */
    @Import(name="targetIp")
    private @Nullable String targetIp;

    /**
     * @return The IP address of the VTAP target.
     * 
     */
    public Optional<String> targetIp() {
        return Optional.ofNullable(this.targetIp);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    @Import(name="vcnId")
    private @Nullable String vcnId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    public Optional<String> vcnId() {
        return Optional.ofNullable(this.vcnId);
    }

    private GetVtapsPlainArgs() {}

    private GetVtapsPlainArgs(GetVtapsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.isVtapEnabled = $.isVtapEnabled;
        this.source = $.source;
        this.state = $.state;
        this.targetId = $.targetId;
        this.targetIp = $.targetIp;
        this.vcnId = $.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVtapsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVtapsPlainArgs $;

        public Builder() {
            $ = new GetVtapsPlainArgs();
        }

        public Builder(GetVtapsPlainArgs defaults) {
            $ = new GetVtapsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetVtapsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetVtapsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isVtapEnabled Indicates whether to list all VTAPs or only running VTAPs.
         * * When `FALSE`, lists ALL running and stopped VTAPs.
         * * When `TRUE`, lists only running VTAPs (VTAPs where isVtapEnabled = `TRUE`).
         * 
         * @return builder
         * 
         */
        public Builder isVtapEnabled(@Nullable Boolean isVtapEnabled) {
            $.isVtapEnabled = isVtapEnabled;
            return this;
        }

        /**
         * @param source The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP source.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable String source) {
            $.source = source;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the given VTAP administrative lifecycle state. The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param targetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP target.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable String targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetIp The IP address of the VTAP target.
         * 
         * @return builder
         * 
         */
        public Builder targetIp(@Nullable String targetIp) {
            $.targetIp = targetIp;
            return this;
        }

        /**
         * @param vcnId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
         * 
         * @return builder
         * 
         */
        public Builder vcnId(@Nullable String vcnId) {
            $.vcnId = vcnId;
            return this;
        }

        public GetVtapsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetVtapsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
