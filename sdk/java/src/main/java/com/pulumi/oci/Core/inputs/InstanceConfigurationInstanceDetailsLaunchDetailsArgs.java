// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptionsArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceConfigurationInstanceDetailsLaunchDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceConfigurationInstanceDetailsLaunchDetailsArgs Empty = new InstanceConfigurationInstanceDetailsLaunchDetailsArgs();

    /**
     * Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    @Import(name="agentConfig")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigArgs> agentConfig;

    /**
     * @return Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigArgs>> agentConfig() {
        return Optional.ofNullable(this.agentConfig);
    }

    /**
     * Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     * 
     */
    @Import(name="availabilityConfig")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigArgs> availabilityConfig;

    /**
     * @return Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigArgs>> availabilityConfig() {
        return Optional.ofNullable(this.availabilityConfig);
    }

    /**
     * The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The OCID of the compute capacity reservation this instance is launched under.
     * 
     */
    @Import(name="capacityReservationId")
    private @Nullable Output<String> capacityReservationId;

    /**
     * @return The OCID of the compute capacity reservation this instance is launched under.
     * 
     */
    public Optional<Output<String>> capacityReservationId() {
        return Optional.ofNullable(this.capacityReservationId);
    }

    /**
     * The clusterPlacementGroup Id of the volume for volume placement.
     * 
     */
    @Import(name="clusterPlacementGroupId")
    private @Nullable Output<String> clusterPlacementGroupId;

    /**
     * @return The clusterPlacementGroup Id of the volume for volume placement.
     * 
     */
    public Optional<Output<String>> clusterPlacementGroupId() {
        return Optional.ofNullable(this.clusterPlacementGroupId);
    }

    /**
     * The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     * 
     */
    @Import(name="createVnicDetails")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsArgs> createVnicDetails;

    /**
     * @return Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsArgs>> createVnicDetails() {
        return Optional.ofNullable(this.createVnicDetails);
    }

    /**
     * The OCID of the dedicated virtual machine host to place the instance on.
     * 
     * Dedicated VM hosts can be used when launching individual instances from an instance configuration. They cannot be used to launch instance pools.
     * 
     */
    @Import(name="dedicatedVmHostId")
    private @Nullable Output<String> dedicatedVmHostId;

    /**
     * @return The OCID of the dedicated virtual machine host to place the instance on.
     * 
     * Dedicated VM hosts can be used when launching individual instances from an instance configuration. They cannot be used to launch instance pools.
     * 
     */
    public Optional<Output<String>> dedicatedVmHostId() {
        return Optional.ofNullable(this.dedicatedVmHostId);
    }

    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     * They are distinguished from `metadata` fields in that these can be nested JSON objects (whereas `metadata` fields are string/string maps only).
     * 
     * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
     * 
     */
    @Import(name="extendedMetadata")
    private @Nullable Output<Map<String,String>> extendedMetadata;

    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     * They are distinguished from `metadata` fields in that these can be nested JSON objects (whereas `metadata` fields are string/string maps only).
     * 
     * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
     * 
     */
    public Optional<Output<Map<String,String>>> extendedMetadata() {
        return Optional.ofNullable(this.extendedMetadata);
    }

    /**
     * A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     * 
     * If you do not specify the fault domain, the system selects one for you.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * Example: `FAULT-DOMAIN-1`
     * 
     */
    @Import(name="faultDomain")
    private @Nullable Output<String> faultDomain;

    /**
     * @return A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     * 
     * If you do not specify the fault domain, the system selects one for you.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * Example: `FAULT-DOMAIN-1`
     * 
     */
    public Optional<Output<String>> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }

    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
     * 
     */
    @Import(name="instanceOptions")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptionsArgs> instanceOptions;

    /**
     * @return Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptionsArgs>> instanceOptions() {
        return Optional.ofNullable(this.instanceOptions);
    }

    /**
     * This is an advanced option.
     * 
     * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
     * 
     * If you want more control over the boot process, you can provide your own custom iPXE script that will run when the instance boots; however, you should be aware that the same iPXE script will run every time an instance boots; not only after the initial LaunchInstance call.
     * 
     * The default iPXE script connects to the instance&#39;s local boot volume over iSCSI and performs a network boot. If you use a custom iPXE script and want to network-boot from the instance&#39;s local boot volume over iSCSI the same way as the default iPXE script, you should use the following iSCSI IP address: 169.254.0.2, and boot volume IQN: iqn.2015-02.oracle.boot.
     * 
     * For more information about the Bring Your Own Image feature of Oracle Cloud Infrastructure, see [Bring Your Own Image](https://docs.cloud.oracle.com/iaas/Content/Compute/References/bringyourownimage.htm).
     * 
     * For more information about iPXE, see &lt;http://ipxe.org&gt;.
     * 
     */
    @Import(name="ipxeScript")
    private @Nullable Output<String> ipxeScript;

    /**
     * @return This is an advanced option.
     * 
     * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
     * 
     * If you want more control over the boot process, you can provide your own custom iPXE script that will run when the instance boots; however, you should be aware that the same iPXE script will run every time an instance boots; not only after the initial LaunchInstance call.
     * 
     * The default iPXE script connects to the instance&#39;s local boot volume over iSCSI and performs a network boot. If you use a custom iPXE script and want to network-boot from the instance&#39;s local boot volume over iSCSI the same way as the default iPXE script, you should use the following iSCSI IP address: 169.254.0.2, and boot volume IQN: iqn.2015-02.oracle.boot.
     * 
     * For more information about the Bring Your Own Image feature of Oracle Cloud Infrastructure, see [Bring Your Own Image](https://docs.cloud.oracle.com/iaas/Content/Compute/References/bringyourownimage.htm).
     * 
     * For more information about iPXE, see &lt;http://ipxe.org&gt;.
     * 
     */
    public Optional<Output<String>> ipxeScript() {
        return Optional.ofNullable(this.ipxeScript);
    }

    /**
     * Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
     * 
     */
    @Import(name="isPvEncryptionInTransitEnabled")
    private @Nullable Output<Boolean> isPvEncryptionInTransitEnabled;

    /**
     * @return Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
     * 
     */
    public Optional<Output<Boolean>> isPvEncryptionInTransitEnabled() {
        return Optional.ofNullable(this.isPvEncryptionInTransitEnabled);
    }

    /**
     * Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
     * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
     * * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
     * * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
     * 
     */
    @Import(name="launchMode")
    private @Nullable Output<String> launchMode;

    /**
     * @return Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
     * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
     * * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
     * * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
     * 
     */
    public Optional<Output<String>> launchMode() {
        return Optional.ofNullable(this.launchMode);
    }

    /**
     * Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     * 
     */
    @Import(name="launchOptions")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsArgs> launchOptions;

    /**
     * @return Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsArgs>> launchOptions() {
        return Optional.ofNullable(this.launchOptions);
    }

    /**
     * Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
     * 
     * A metadata service runs on every launched instance. The service is an HTTP endpoint listening on 169.254.169.254. You can use the service to:
     * * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/) to be used for various system initialization tasks.
     * * Get information about the instance, including the custom metadata that you provide when you launch the instance.
     * 
     * **Providing Cloud-Init Metadata**
     * 
     * You can use the following metadata key names to provide information to Cloud-Init:
     * 
     * **&#34;ssh_authorized_keys&#34;** - Provide one or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on the instance. Use a newline character to separate multiple keys. The SSH keys must be in the format necessary for the `authorized_keys` file, as shown in the example below.
     * 
     * **&#34;user_data&#34;** - Provide your own base64-encoded data to be used by Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For information about how to take advantage of user data, see the [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).
     * 
     * **Metadata Example**
     * 
     * &#34;metadata&#34; : { &#34;quake_bot_level&#34; : &#34;Severe&#34;, &#34;ssh_authorized_keys&#34; : &#34;ssh-rsa &lt;your_public_SSH_key&gt;== rsa-key-20160227&#34;, &#34;user_data&#34; : &#34;&lt;your_public_SSH_key&gt;==&#34; } **Getting Metadata on the Instance**
     * 
     * To get information about your instance, connect to the instance using SSH and issue any of the following GET requests:
     * 
     * curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/&lt;any-key-name&gt;
     * 
     * You&#39;ll get back a response that includes all the instance information; only the metadata information; or the metadata information for the specified key name, respectively.
     * 
     * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    /**
     * @return Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
     * 
     * A metadata service runs on every launched instance. The service is an HTTP endpoint listening on 169.254.169.254. You can use the service to:
     * * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/) to be used for various system initialization tasks.
     * * Get information about the instance, including the custom metadata that you provide when you launch the instance.
     * 
     * **Providing Cloud-Init Metadata**
     * 
     * You can use the following metadata key names to provide information to Cloud-Init:
     * 
     * **&#34;ssh_authorized_keys&#34;** - Provide one or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on the instance. Use a newline character to separate multiple keys. The SSH keys must be in the format necessary for the `authorized_keys` file, as shown in the example below.
     * 
     * **&#34;user_data&#34;** - Provide your own base64-encoded data to be used by Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For information about how to take advantage of user data, see the [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).
     * 
     * **Metadata Example**
     * 
     * &#34;metadata&#34; : { &#34;quake_bot_level&#34; : &#34;Severe&#34;, &#34;ssh_authorized_keys&#34; : &#34;ssh-rsa &lt;your_public_SSH_key&gt;== rsa-key-20160227&#34;, &#34;user_data&#34; : &#34;&lt;your_public_SSH_key&gt;==&#34; } **Getting Metadata on the Instance**
     * 
     * To get information about your instance, connect to the instance using SSH and issue any of the following GET requests:
     * 
     * curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/&lt;any-key-name&gt;
     * 
     * You&#39;ll get back a response that includes all the instance information; only the metadata information; or the metadata information for the specified key name, respectively.
     * 
     * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
     * 
     */
    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * (Optional) (Updatable only for VM&#39;s) The platform configuration requested for the instance.
     * 
     * If you provide the parameter, the instance is created with the platform configuration that you specify. For any values that you omit, the instance uses the default configuration values for the `shape` that you specify. If you don&#39;t provide the parameter, the default values for the `shape` are used.
     * 
     * Each shape only supports certain configurable values. If the values that you provide are not valid for the specified `shape`, an error is returned.
     * 
     */
    @Import(name="platformConfig")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigArgs> platformConfig;

    /**
     * @return (Optional) (Updatable only for VM&#39;s) The platform configuration requested for the instance.
     * 
     * If you provide the parameter, the instance is created with the platform configuration that you specify. For any values that you omit, the instance uses the default configuration values for the `shape` that you specify. If you don&#39;t provide the parameter, the default values for the `shape` are used.
     * 
     * Each shape only supports certain configurable values. If the values that you provide are not valid for the specified `shape`, an error is returned.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigArgs>> platformConfig() {
        return Optional.ofNullable(this.platformConfig);
    }

    /**
     * Configuration options for preemptible instances.
     * 
     */
    @Import(name="preemptibleInstanceConfig")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigArgs> preemptibleInstanceConfig;

    /**
     * @return Configuration options for preemptible instances.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigArgs>> preemptibleInstanceConfig() {
        return Optional.ofNullable(this.preemptibleInstanceConfig);
    }

    /**
     * The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
     * * `LIVE_MIGRATE` - Run maintenance using a live migration.
     * * `REBOOT` - Run maintenance using a reboot.
     * 
     */
    @Import(name="preferredMaintenanceAction")
    private @Nullable Output<String> preferredMaintenanceAction;

    /**
     * @return The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
     * * `LIVE_MIGRATE` - Run maintenance using a live migration.
     * * `REBOOT` - Run maintenance using a reboot.
     * 
     */
    public Optional<Output<String>> preferredMaintenanceAction() {
        return Optional.ofNullable(this.preferredMaintenanceAction);
    }

    /**
     * The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     * 
     */
    @Import(name="shape")
    private @Nullable Output<String> shape;

    /**
     * @return The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     * 
     */
    public Optional<Output<String>> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * The shape configuration requested for the instance.
     * 
     */
    @Import(name="shapeConfig")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs> shapeConfig;

    /**
     * @return The shape configuration requested for the instance.
     * 
     */
    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs>> shapeConfig() {
        return Optional.ofNullable(this.shapeConfig);
    }

    @Import(name="sourceDetails")
    private @Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsArgs> sourceDetails;

    public Optional<Output<InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsArgs>> sourceDetails() {
        return Optional.ofNullable(this.sourceDetails);
    }

    private InstanceConfigurationInstanceDetailsLaunchDetailsArgs() {}

    private InstanceConfigurationInstanceDetailsLaunchDetailsArgs(InstanceConfigurationInstanceDetailsLaunchDetailsArgs $) {
        this.agentConfig = $.agentConfig;
        this.availabilityConfig = $.availabilityConfig;
        this.availabilityDomain = $.availabilityDomain;
        this.capacityReservationId = $.capacityReservationId;
        this.clusterPlacementGroupId = $.clusterPlacementGroupId;
        this.compartmentId = $.compartmentId;
        this.createVnicDetails = $.createVnicDetails;
        this.dedicatedVmHostId = $.dedicatedVmHostId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.extendedMetadata = $.extendedMetadata;
        this.faultDomain = $.faultDomain;
        this.freeformTags = $.freeformTags;
        this.instanceOptions = $.instanceOptions;
        this.ipxeScript = $.ipxeScript;
        this.isPvEncryptionInTransitEnabled = $.isPvEncryptionInTransitEnabled;
        this.launchMode = $.launchMode;
        this.launchOptions = $.launchOptions;
        this.metadata = $.metadata;
        this.platformConfig = $.platformConfig;
        this.preemptibleInstanceConfig = $.preemptibleInstanceConfig;
        this.preferredMaintenanceAction = $.preferredMaintenanceAction;
        this.shape = $.shape;
        this.shapeConfig = $.shapeConfig;
        this.sourceDetails = $.sourceDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceConfigurationInstanceDetailsLaunchDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceConfigurationInstanceDetailsLaunchDetailsArgs $;

        public Builder() {
            $ = new InstanceConfigurationInstanceDetailsLaunchDetailsArgs();
        }

        public Builder(InstanceConfigurationInstanceDetailsLaunchDetailsArgs defaults) {
            $ = new InstanceConfigurationInstanceDetailsLaunchDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentConfig Configuration options for the Oracle Cloud Agent software running on the instance.
         * 
         * @return builder
         * 
         */
        public Builder agentConfig(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigArgs> agentConfig) {
            $.agentConfig = agentConfig;
            return this;
        }

        /**
         * @param agentConfig Configuration options for the Oracle Cloud Agent software running on the instance.
         * 
         * @return builder
         * 
         */
        public Builder agentConfig(InstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigArgs agentConfig) {
            return agentConfig(Output.of(agentConfig));
        }

        /**
         * @param availabilityConfig Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
         * 
         * @return builder
         * 
         */
        public Builder availabilityConfig(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigArgs> availabilityConfig) {
            $.availabilityConfig = availabilityConfig;
            return this;
        }

        /**
         * @param availabilityConfig Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
         * 
         * @return builder
         * 
         */
        public Builder availabilityConfig(InstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfigArgs availabilityConfig) {
            return availabilityConfig(Output.of(availabilityConfig));
        }

        /**
         * @param availabilityDomain The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param capacityReservationId The OCID of the compute capacity reservation this instance is launched under.
         * 
         * @return builder
         * 
         */
        public Builder capacityReservationId(@Nullable Output<String> capacityReservationId) {
            $.capacityReservationId = capacityReservationId;
            return this;
        }

        /**
         * @param capacityReservationId The OCID of the compute capacity reservation this instance is launched under.
         * 
         * @return builder
         * 
         */
        public Builder capacityReservationId(String capacityReservationId) {
            return capacityReservationId(Output.of(capacityReservationId));
        }

        /**
         * @param clusterPlacementGroupId The clusterPlacementGroup Id of the volume for volume placement.
         * 
         * @return builder
         * 
         */
        public Builder clusterPlacementGroupId(@Nullable Output<String> clusterPlacementGroupId) {
            $.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }

        /**
         * @param clusterPlacementGroupId The clusterPlacementGroup Id of the volume for volume placement.
         * 
         * @return builder
         * 
         */
        public Builder clusterPlacementGroupId(String clusterPlacementGroupId) {
            return clusterPlacementGroupId(Output.of(clusterPlacementGroupId));
        }

        /**
         * @param compartmentId The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment as the instance that was used to create the instance configuration.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param createVnicDetails Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         * 
         * @return builder
         * 
         */
        public Builder createVnicDetails(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsArgs> createVnicDetails) {
            $.createVnicDetails = createVnicDetails;
            return this;
        }

        /**
         * @param createVnicDetails Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
         * 
         * @return builder
         * 
         */
        public Builder createVnicDetails(InstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsArgs createVnicDetails) {
            return createVnicDetails(Output.of(createVnicDetails));
        }

        /**
         * @param dedicatedVmHostId The OCID of the dedicated virtual machine host to place the instance on.
         * 
         * Dedicated VM hosts can be used when launching individual instances from an instance configuration. They cannot be used to launch instance pools.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedVmHostId(@Nullable Output<String> dedicatedVmHostId) {
            $.dedicatedVmHostId = dedicatedVmHostId;
            return this;
        }

        /**
         * @param dedicatedVmHostId The OCID of the dedicated virtual machine host to place the instance on.
         * 
         * Dedicated VM hosts can be used when launching individual instances from an instance configuration. They cannot be used to launch instance pools.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedVmHostId(String dedicatedVmHostId) {
            return dedicatedVmHostId(Output.of(dedicatedVmHostId));
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param extendedMetadata Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         * 
         * They are distinguished from `metadata` fields in that these can be nested JSON objects (whereas `metadata` fields are string/string maps only).
         * 
         * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
         * 
         * @return builder
         * 
         */
        public Builder extendedMetadata(@Nullable Output<Map<String,String>> extendedMetadata) {
            $.extendedMetadata = extendedMetadata;
            return this;
        }

        /**
         * @param extendedMetadata Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         * 
         * They are distinguished from `metadata` fields in that these can be nested JSON objects (whereas `metadata` fields are string/string maps only).
         * 
         * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
         * 
         * @return builder
         * 
         */
        public Builder extendedMetadata(Map<String,String> extendedMetadata) {
            return extendedMetadata(Output.of(extendedMetadata));
        }

        /**
         * @param faultDomain A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
         * 
         * If you do not specify the fault domain, the system selects one for you.
         * 
         * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
         * 
         * Example: `FAULT-DOMAIN-1`
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(@Nullable Output<String> faultDomain) {
            $.faultDomain = faultDomain;
            return this;
        }

        /**
         * @param faultDomain A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
         * 
         * If you do not specify the fault domain, the system selects one for you.
         * 
         * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
         * 
         * Example: `FAULT-DOMAIN-1`
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(String faultDomain) {
            return faultDomain(Output.of(faultDomain));
        }

        /**
         * @param freeformTags Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param instanceOptions Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
         * 
         * @return builder
         * 
         */
        public Builder instanceOptions(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptionsArgs> instanceOptions) {
            $.instanceOptions = instanceOptions;
            return this;
        }

        /**
         * @param instanceOptions Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
         * 
         * @return builder
         * 
         */
        public Builder instanceOptions(InstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptionsArgs instanceOptions) {
            return instanceOptions(Output.of(instanceOptions));
        }

        /**
         * @param ipxeScript This is an advanced option.
         * 
         * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
         * 
         * If you want more control over the boot process, you can provide your own custom iPXE script that will run when the instance boots; however, you should be aware that the same iPXE script will run every time an instance boots; not only after the initial LaunchInstance call.
         * 
         * The default iPXE script connects to the instance&#39;s local boot volume over iSCSI and performs a network boot. If you use a custom iPXE script and want to network-boot from the instance&#39;s local boot volume over iSCSI the same way as the default iPXE script, you should use the following iSCSI IP address: 169.254.0.2, and boot volume IQN: iqn.2015-02.oracle.boot.
         * 
         * For more information about the Bring Your Own Image feature of Oracle Cloud Infrastructure, see [Bring Your Own Image](https://docs.cloud.oracle.com/iaas/Content/Compute/References/bringyourownimage.htm).
         * 
         * For more information about iPXE, see &lt;http://ipxe.org&gt;.
         * 
         * @return builder
         * 
         */
        public Builder ipxeScript(@Nullable Output<String> ipxeScript) {
            $.ipxeScript = ipxeScript;
            return this;
        }

        /**
         * @param ipxeScript This is an advanced option.
         * 
         * When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
         * 
         * If you want more control over the boot process, you can provide your own custom iPXE script that will run when the instance boots; however, you should be aware that the same iPXE script will run every time an instance boots; not only after the initial LaunchInstance call.
         * 
         * The default iPXE script connects to the instance&#39;s local boot volume over iSCSI and performs a network boot. If you use a custom iPXE script and want to network-boot from the instance&#39;s local boot volume over iSCSI the same way as the default iPXE script, you should use the following iSCSI IP address: 169.254.0.2, and boot volume IQN: iqn.2015-02.oracle.boot.
         * 
         * For more information about the Bring Your Own Image feature of Oracle Cloud Infrastructure, see [Bring Your Own Image](https://docs.cloud.oracle.com/iaas/Content/Compute/References/bringyourownimage.htm).
         * 
         * For more information about iPXE, see &lt;http://ipxe.org&gt;.
         * 
         * @return builder
         * 
         */
        public Builder ipxeScript(String ipxeScript) {
            return ipxeScript(Output.of(ipxeScript));
        }

        /**
         * @param isPvEncryptionInTransitEnabled Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
         * 
         * @return builder
         * 
         */
        public Builder isPvEncryptionInTransitEnabled(@Nullable Output<Boolean> isPvEncryptionInTransitEnabled) {
            $.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }

        /**
         * @param isPvEncryptionInTransitEnabled Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
         * 
         * @return builder
         * 
         */
        public Builder isPvEncryptionInTransitEnabled(Boolean isPvEncryptionInTransitEnabled) {
            return isPvEncryptionInTransitEnabled(Output.of(isPvEncryptionInTransitEnabled));
        }

        /**
         * @param launchMode Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
         * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
         * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
         * * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
         * * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
         * 
         * @return builder
         * 
         */
        public Builder launchMode(@Nullable Output<String> launchMode) {
            $.launchMode = launchMode;
            return this;
        }

        /**
         * @param launchMode Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
         * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
         * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
         * * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
         * * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
         * 
         * @return builder
         * 
         */
        public Builder launchMode(String launchMode) {
            return launchMode(Output.of(launchMode));
        }

        /**
         * @param launchOptions Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
         * 
         * @return builder
         * 
         */
        public Builder launchOptions(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsArgs> launchOptions) {
            $.launchOptions = launchOptions;
            return this;
        }

        /**
         * @param launchOptions Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
         * 
         * @return builder
         * 
         */
        public Builder launchOptions(InstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptionsArgs launchOptions) {
            return launchOptions(Output.of(launchOptions));
        }

        /**
         * @param metadata Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
         * 
         * A metadata service runs on every launched instance. The service is an HTTP endpoint listening on 169.254.169.254. You can use the service to:
         * * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/) to be used for various system initialization tasks.
         * * Get information about the instance, including the custom metadata that you provide when you launch the instance.
         * 
         * **Providing Cloud-Init Metadata**
         * 
         * You can use the following metadata key names to provide information to Cloud-Init:
         * 
         * **&#34;ssh_authorized_keys&#34;** - Provide one or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on the instance. Use a newline character to separate multiple keys. The SSH keys must be in the format necessary for the `authorized_keys` file, as shown in the example below.
         * 
         * **&#34;user_data&#34;** - Provide your own base64-encoded data to be used by Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For information about how to take advantage of user data, see the [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).
         * 
         * **Metadata Example**
         * 
         * &#34;metadata&#34; : { &#34;quake_bot_level&#34; : &#34;Severe&#34;, &#34;ssh_authorized_keys&#34; : &#34;ssh-rsa &lt;your_public_SSH_key&gt;== rsa-key-20160227&#34;, &#34;user_data&#34; : &#34;&lt;your_public_SSH_key&gt;==&#34; } **Getting Metadata on the Instance**
         * 
         * To get information about your instance, connect to the instance using SSH and issue any of the following GET requests:
         * 
         * curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/&lt;any-key-name&gt;
         * 
         * You&#39;ll get back a response that includes all the instance information; only the metadata information; or the metadata information for the specified key name, respectively.
         * 
         * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
         * 
         * A metadata service runs on every launched instance. The service is an HTTP endpoint listening on 169.254.169.254. You can use the service to:
         * * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/) to be used for various system initialization tasks.
         * * Get information about the instance, including the custom metadata that you provide when you launch the instance.
         * 
         * **Providing Cloud-Init Metadata**
         * 
         * You can use the following metadata key names to provide information to Cloud-Init:
         * 
         * **&#34;ssh_authorized_keys&#34;** - Provide one or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on the instance. Use a newline character to separate multiple keys. The SSH keys must be in the format necessary for the `authorized_keys` file, as shown in the example below.
         * 
         * **&#34;user_data&#34;** - Provide your own base64-encoded data to be used by Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For information about how to take advantage of user data, see the [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).
         * 
         * **Metadata Example**
         * 
         * &#34;metadata&#34; : { &#34;quake_bot_level&#34; : &#34;Severe&#34;, &#34;ssh_authorized_keys&#34; : &#34;ssh-rsa &lt;your_public_SSH_key&gt;== rsa-key-20160227&#34;, &#34;user_data&#34; : &#34;&lt;your_public_SSH_key&gt;==&#34; } **Getting Metadata on the Instance**
         * 
         * To get information about your instance, connect to the instance using SSH and issue any of the following GET requests:
         * 
         * curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/ curl -H &#34;Authorization: Bearer Oracle&#34; http://169.254.169.254/opc/v2/instance/metadata/&lt;any-key-name&gt;
         * 
         * You&#39;ll get back a response that includes all the instance information; only the metadata information; or the metadata information for the specified key name, respectively.
         * 
         * The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of 32,000 bytes.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param platformConfig (Optional) (Updatable only for VM&#39;s) The platform configuration requested for the instance.
         * 
         * If you provide the parameter, the instance is created with the platform configuration that you specify. For any values that you omit, the instance uses the default configuration values for the `shape` that you specify. If you don&#39;t provide the parameter, the default values for the `shape` are used.
         * 
         * Each shape only supports certain configurable values. If the values that you provide are not valid for the specified `shape`, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder platformConfig(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigArgs> platformConfig) {
            $.platformConfig = platformConfig;
            return this;
        }

        /**
         * @param platformConfig (Optional) (Updatable only for VM&#39;s) The platform configuration requested for the instance.
         * 
         * If you provide the parameter, the instance is created with the platform configuration that you specify. For any values that you omit, the instance uses the default configuration values for the `shape` that you specify. If you don&#39;t provide the parameter, the default values for the `shape` are used.
         * 
         * Each shape only supports certain configurable values. If the values that you provide are not valid for the specified `shape`, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder platformConfig(InstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfigArgs platformConfig) {
            return platformConfig(Output.of(platformConfig));
        }

        /**
         * @param preemptibleInstanceConfig Configuration options for preemptible instances.
         * 
         * @return builder
         * 
         */
        public Builder preemptibleInstanceConfig(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigArgs> preemptibleInstanceConfig) {
            $.preemptibleInstanceConfig = preemptibleInstanceConfig;
            return this;
        }

        /**
         * @param preemptibleInstanceConfig Configuration options for preemptible instances.
         * 
         * @return builder
         * 
         */
        public Builder preemptibleInstanceConfig(InstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigArgs preemptibleInstanceConfig) {
            return preemptibleInstanceConfig(Output.of(preemptibleInstanceConfig));
        }

        /**
         * @param preferredMaintenanceAction The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
         * * `LIVE_MIGRATE` - Run maintenance using a live migration.
         * * `REBOOT` - Run maintenance using a reboot.
         * 
         * @return builder
         * 
         */
        public Builder preferredMaintenanceAction(@Nullable Output<String> preferredMaintenanceAction) {
            $.preferredMaintenanceAction = preferredMaintenanceAction;
            return this;
        }

        /**
         * @param preferredMaintenanceAction The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
         * * `LIVE_MIGRATE` - Run maintenance using a live migration.
         * * `REBOOT` - Run maintenance using a reboot.
         * 
         * @return builder
         * 
         */
        public Builder preferredMaintenanceAction(String preferredMaintenanceAction) {
            return preferredMaintenanceAction(Output.of(preferredMaintenanceAction));
        }

        /**
         * @param shape The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         * 
         * @return builder
         * 
         */
        public Builder shape(@Nullable Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param shapeConfig The shape configuration requested for the instance.
         * 
         * @return builder
         * 
         */
        public Builder shapeConfig(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs> shapeConfig) {
            $.shapeConfig = shapeConfig;
            return this;
        }

        /**
         * @param shapeConfig The shape configuration requested for the instance.
         * 
         * @return builder
         * 
         */
        public Builder shapeConfig(InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs shapeConfig) {
            return shapeConfig(Output.of(shapeConfig));
        }

        public Builder sourceDetails(@Nullable Output<InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsArgs> sourceDetails) {
            $.sourceDetails = sourceDetails;
            return this;
        }

        public Builder sourceDetails(InstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsArgs sourceDetails) {
            return sourceDetails(Output.of(sourceDetails));
        }

        public InstanceConfigurationInstanceDetailsLaunchDetailsArgs build() {
            return $;
        }
    }

}
