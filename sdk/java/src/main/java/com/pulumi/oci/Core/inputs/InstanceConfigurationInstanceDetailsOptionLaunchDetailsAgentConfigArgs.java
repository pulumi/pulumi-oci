// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfigArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs Empty = new InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs();

    /**
     * Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
     * 
     * To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     * 
     */
    @Import(name="areAllPluginsDisabled")
    private @Nullable Output<Boolean> areAllPluginsDisabled;

    /**
     * @return Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
     * 
     * To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
     * 
     */
    public Optional<Output<Boolean>> areAllPluginsDisabled() {
        return Optional.ofNullable(this.areAllPluginsDisabled);
    }

    /**
     * Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
     * 
     * These are the management plugins: OS Management Service Agent and Compute Instance Run Command.
     * 
     * The management plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
     * * If `isManagementDisabled` is true, all of the management plugins are disabled, regardless of the per-plugin configuration.
     * * If `isManagementDisabled` is false, all of the management plugins are enabled. You can optionally disable individual management plugins by providing a value in the `pluginsConfig` object.
     * 
     */
    @Import(name="isManagementDisabled")
    private @Nullable Output<Boolean> isManagementDisabled;

    /**
     * @return Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
     * 
     * These are the management plugins: OS Management Service Agent and Compute Instance Run Command.
     * 
     * The management plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
     * * If `isManagementDisabled` is true, all of the management plugins are disabled, regardless of the per-plugin configuration.
     * * If `isManagementDisabled` is false, all of the management plugins are enabled. You can optionally disable individual management plugins by providing a value in the `pluginsConfig` object.
     * 
     */
    public Optional<Output<Boolean>> isManagementDisabled() {
        return Optional.ofNullable(this.isManagementDisabled);
    }

    /**
     * Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
     * 
     * These are the monitoring plugins: Compute Instance Monitoring and Custom Logs Monitoring.
     * 
     * The monitoring plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
     * * If `isMonitoringDisabled` is true, all of the monitoring plugins are disabled, regardless of the per-plugin configuration.
     * * If `isMonitoringDisabled` is false, all of the monitoring plugins are enabled. You can optionally disable individual monitoring plugins by providing a value in the `pluginsConfig` object.
     * 
     */
    @Import(name="isMonitoringDisabled")
    private @Nullable Output<Boolean> isMonitoringDisabled;

    /**
     * @return Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
     * 
     * These are the monitoring plugins: Compute Instance Monitoring and Custom Logs Monitoring.
     * 
     * The monitoring plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
     * * If `isMonitoringDisabled` is true, all of the monitoring plugins are disabled, regardless of the per-plugin configuration.
     * * If `isMonitoringDisabled` is false, all of the monitoring plugins are enabled. You can optionally disable individual monitoring plugins by providing a value in the `pluginsConfig` object.
     * 
     */
    public Optional<Output<Boolean>> isMonitoringDisabled() {
        return Optional.ofNullable(this.isMonitoringDisabled);
    }

    /**
     * The configuration of plugins associated with this instance.
     * 
     */
    @Import(name="pluginsConfigs")
    private @Nullable Output<List<InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfigArgs>> pluginsConfigs;

    /**
     * @return The configuration of plugins associated with this instance.
     * 
     */
    public Optional<Output<List<InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfigArgs>>> pluginsConfigs() {
        return Optional.ofNullable(this.pluginsConfigs);
    }

    private InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs() {}

    private InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs(InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs $) {
        this.areAllPluginsDisabled = $.areAllPluginsDisabled;
        this.isManagementDisabled = $.isManagementDisabled;
        this.isMonitoringDisabled = $.isMonitoringDisabled;
        this.pluginsConfigs = $.pluginsConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs $;

        public Builder() {
            $ = new InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs();
        }

        public Builder(InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs defaults) {
            $ = new InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param areAllPluginsDisabled Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
         * 
         * To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         * 
         * @return builder
         * 
         */
        public Builder areAllPluginsDisabled(@Nullable Output<Boolean> areAllPluginsDisabled) {
            $.areAllPluginsDisabled = areAllPluginsDisabled;
            return this;
        }

        /**
         * @param areAllPluginsDisabled Whether Oracle Cloud Agent can run all the available plugins. This includes the management and monitoring plugins.
         * 
         * To get a list of available plugins, use the [ListInstanceagentAvailablePlugins](https://docs.cloud.oracle.com/iaas/api/#/en/instanceagent/20180530/Plugin/ListInstanceagentAvailablePlugins) operation in the Oracle Cloud Agent API. For more information about the available plugins, see [Managing Plugins with Oracle Cloud Agent](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/manage-plugins.htm).
         * 
         * @return builder
         * 
         */
        public Builder areAllPluginsDisabled(Boolean areAllPluginsDisabled) {
            return areAllPluginsDisabled(Output.of(areAllPluginsDisabled));
        }

        /**
         * @param isManagementDisabled Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
         * 
         * These are the management plugins: OS Management Service Agent and Compute Instance Run Command.
         * 
         * The management plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
         * * If `isManagementDisabled` is true, all of the management plugins are disabled, regardless of the per-plugin configuration.
         * * If `isManagementDisabled` is false, all of the management plugins are enabled. You can optionally disable individual management plugins by providing a value in the `pluginsConfig` object.
         * 
         * @return builder
         * 
         */
        public Builder isManagementDisabled(@Nullable Output<Boolean> isManagementDisabled) {
            $.isManagementDisabled = isManagementDisabled;
            return this;
        }

        /**
         * @param isManagementDisabled Whether Oracle Cloud Agent can run all the available management plugins. Default value is false (management plugins are enabled).
         * 
         * These are the management plugins: OS Management Service Agent and Compute Instance Run Command.
         * 
         * The management plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
         * * If `isManagementDisabled` is true, all of the management plugins are disabled, regardless of the per-plugin configuration.
         * * If `isManagementDisabled` is false, all of the management plugins are enabled. You can optionally disable individual management plugins by providing a value in the `pluginsConfig` object.
         * 
         * @return builder
         * 
         */
        public Builder isManagementDisabled(Boolean isManagementDisabled) {
            return isManagementDisabled(Output.of(isManagementDisabled));
        }

        /**
         * @param isMonitoringDisabled Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
         * 
         * These are the monitoring plugins: Compute Instance Monitoring and Custom Logs Monitoring.
         * 
         * The monitoring plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
         * * If `isMonitoringDisabled` is true, all of the monitoring plugins are disabled, regardless of the per-plugin configuration.
         * * If `isMonitoringDisabled` is false, all of the monitoring plugins are enabled. You can optionally disable individual monitoring plugins by providing a value in the `pluginsConfig` object.
         * 
         * @return builder
         * 
         */
        public Builder isMonitoringDisabled(@Nullable Output<Boolean> isMonitoringDisabled) {
            $.isMonitoringDisabled = isMonitoringDisabled;
            return this;
        }

        /**
         * @param isMonitoringDisabled Whether Oracle Cloud Agent can gather performance metrics and monitor the instance using the monitoring plugins. Default value is false (monitoring plugins are enabled).
         * 
         * These are the monitoring plugins: Compute Instance Monitoring and Custom Logs Monitoring.
         * 
         * The monitoring plugins are controlled by this parameter and by the per-plugin configuration in the `pluginsConfig` object.
         * * If `isMonitoringDisabled` is true, all of the monitoring plugins are disabled, regardless of the per-plugin configuration.
         * * If `isMonitoringDisabled` is false, all of the monitoring plugins are enabled. You can optionally disable individual monitoring plugins by providing a value in the `pluginsConfig` object.
         * 
         * @return builder
         * 
         */
        public Builder isMonitoringDisabled(Boolean isMonitoringDisabled) {
            return isMonitoringDisabled(Output.of(isMonitoringDisabled));
        }

        /**
         * @param pluginsConfigs The configuration of plugins associated with this instance.
         * 
         * @return builder
         * 
         */
        public Builder pluginsConfigs(@Nullable Output<List<InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfigArgs>> pluginsConfigs) {
            $.pluginsConfigs = pluginsConfigs;
            return this;
        }

        /**
         * @param pluginsConfigs The configuration of plugins associated with this instance.
         * 
         * @return builder
         * 
         */
        public Builder pluginsConfigs(List<InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfigArgs> pluginsConfigs) {
            return pluginsConfigs(Output.of(pluginsConfigs));
        }

        /**
         * @param pluginsConfigs The configuration of plugins associated with this instance.
         * 
         * @return builder
         * 
         */
        public Builder pluginsConfigs(InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfigArgs... pluginsConfigs) {
            return pluginsConfigs(List.of(pluginsConfigs));
        }

        public InstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigArgs build() {
            return $;
        }
    }

}
