// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs Empty = new InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs();

    /**
     * License Type for the OS license.
     * * `OCI_PROVIDED` - Oracle Cloud Infrastructure provided license (e.g. metered $/OCPU-hour).
     * * `BRING_YOUR_OWN_LICENSE` - Bring your own license.
     * 
     */
    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    /**
     * @return License Type for the OS license.
     * * `OCI_PROVIDED` - Oracle Cloud Infrastructure provided license (e.g. metered $/OCPU-hour).
     * * `BRING_YOUR_OWN_LICENSE` - Bring your own license.
     * 
     */
    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    /**
     * The type of action to run when the instance is interrupted for eviction.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of action to run when the instance is interrupted for eviction.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs() {}

    private InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs(InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs $) {
        this.licenseType = $.licenseType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs $;

        public Builder() {
            $ = new InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs();
        }

        public Builder(InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs defaults) {
            $ = new InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseType License Type for the OS license.
         * * `OCI_PROVIDED` - Oracle Cloud Infrastructure provided license (e.g. metered $/OCPU-hour).
         * * `BRING_YOUR_OWN_LICENSE` - Bring your own license.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType License Type for the OS license.
         * * `OCI_PROVIDED` - Oracle Cloud Infrastructure provided license (e.g. metered $/OCPU-hour).
         * * `BRING_YOUR_OWN_LICENSE` - Bring your own license.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param type The type of action to run when the instance is interrupted for eviction.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of action to run when the instance is interrupted for eviction.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("InstanceConfigurationInstanceDetailsOptionLaunchDetailsLicensingConfigsArgs", "type");
            }
            return $;
        }
    }

}
