// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceMaintenanceEventState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceMaintenanceEventState Empty = new InstanceMaintenanceEventState();

    /**
     * Additional details of the maintenance in the form of json.
     * 
     */
    @Import(name="additionalDetails")
    private @Nullable Output<Map<String,String>> additionalDetails;

    /**
     * @return Additional details of the maintenance in the form of json.
     * 
     */
    public Optional<Output<Map<String,String>>> additionalDetails() {
        return Optional.ofNullable(this.additionalDetails);
    }

    /**
     * (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
     * 
     */
    @Import(name="alternativeResolutionAction")
    private @Nullable Output<String> alternativeResolutionAction;

    /**
     * @return (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
     * 
     */
    public Optional<Output<String>> alternativeResolutionAction() {
        return Optional.ofNullable(this.alternativeResolutionAction);
    }

    /**
     * These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
     * 
     */
    @Import(name="alternativeResolutionActions")
    private @Nullable Output<List<String>> alternativeResolutionActions;

    /**
     * @return These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
     * 
     */
    public Optional<Output<List<String>>> alternativeResolutionActions() {
        return Optional.ofNullable(this.alternativeResolutionActions);
    }

    /**
     * (Updatable) This field is only applicable when setting the alternativeResolutionAction.
     * 
     * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
     * 
     * In cases where the local storage will be lost, this parameter must be set or the request will fail.
     * 
     */
    @Import(name="canDeleteLocalStorage")
    private @Nullable Output<Boolean> canDeleteLocalStorage;

    /**
     * @return (Updatable) This field is only applicable when setting the alternativeResolutionAction.
     * 
     * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
     * 
     * In cases where the local storage will be lost, this parameter must be set or the request will fail.
     * 
     */
    public Optional<Output<Boolean>> canDeleteLocalStorage() {
        return Optional.ofNullable(this.canDeleteLocalStorage);
    }

    /**
     * Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
     * 
     */
    @Import(name="canReschedule")
    private @Nullable Output<Boolean> canReschedule;

    /**
     * @return Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
     * 
     */
    public Optional<Output<Boolean>> canReschedule() {
        return Optional.ofNullable(this.canReschedule);
    }

    /**
     * The OCID of the compartment that contains the instance.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment that contains the instance.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
     * 
     */
    @Import(name="correlationToken")
    private @Nullable Output<String> correlationToken;

    /**
     * @return A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
     * 
     */
    public Optional<Output<String>> correlationToken() {
        return Optional.ofNullable(this.correlationToken);
    }

    /**
     * The creator of the maintenance event.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The creator of the maintenance event.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * It is the descriptive information about the maintenance taking place on the customer instance.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return It is the descriptive information about the maintenance taking place on the customer instance.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
     * 
     */
    @Import(name="estimatedDuration")
    private @Nullable Output<String> estimatedDuration;

    /**
     * @return This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
     * 
     */
    public Optional<Output<String>> estimatedDuration() {
        return Optional.ofNullable(this.estimatedDuration);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
     * 
     */
    @Import(name="instanceAction")
    private @Nullable Output<String> instanceAction;

    /**
     * @return This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
     * 
     */
    public Optional<Output<String>> instanceAction() {
        return Optional.ofNullable(this.instanceAction);
    }

    /**
     * The OCID of the instance.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The OCID of the instance.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The OCID of the instance maintenance event.
     * 
     */
    @Import(name="instanceMaintenanceEventId")
    private @Nullable Output<String> instanceMaintenanceEventId;

    /**
     * @return The OCID of the instance maintenance event.
     * 
     */
    public Optional<Output<String>> instanceMaintenanceEventId() {
        return Optional.ofNullable(this.instanceMaintenanceEventId);
    }

    /**
     * This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
     * 
     */
    @Import(name="maintenanceCategory")
    private @Nullable Output<String> maintenanceCategory;

    /**
     * @return This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
     * 
     */
    public Optional<Output<String>> maintenanceCategory() {
        return Optional.ofNullable(this.maintenanceCategory);
    }

    /**
     * This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
     * 
     */
    @Import(name="maintenanceReason")
    private @Nullable Output<String> maintenanceReason;

    /**
     * @return This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
     * 
     */
    public Optional<Output<String>> maintenanceReason() {
        return Optional.ofNullable(this.maintenanceReason);
    }

    /**
     * The duration of the time window Maintenance is scheduled to begin within.
     * 
     */
    @Import(name="startWindowDuration")
    private @Nullable Output<String> startWindowDuration;

    /**
     * @return The duration of the time window Maintenance is scheduled to begin within.
     * 
     */
    public Optional<Output<String>> startWindowDuration() {
        return Optional.ofNullable(this.startWindowDuration);
    }

    /**
     * The current state of the maintenance event.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the maintenance event.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time at which the Maintenance actually finished.
     * 
     */
    @Import(name="timeFinished")
    private @Nullable Output<String> timeFinished;

    /**
     * @return The time at which the Maintenance actually finished.
     * 
     */
    public Optional<Output<String>> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }

    /**
     * It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
     * 
     */
    @Import(name="timeHardDueDate")
    private @Nullable Output<String> timeHardDueDate;

    /**
     * @return It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
     * 
     */
    public Optional<Output<String>> timeHardDueDate() {
        return Optional.ofNullable(this.timeHardDueDate);
    }

    /**
     * The time at which the Maintenance actually started.
     * 
     */
    @Import(name="timeStarted")
    private @Nullable Output<String> timeStarted;

    /**
     * @return The time at which the Maintenance actually started.
     * 
     */
    public Optional<Output<String>> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    /**
     * (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
     * 
     * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeWindowStart")
    private @Nullable Output<String> timeWindowStart;

    /**
     * @return (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
     * 
     * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> timeWindowStart() {
        return Optional.ofNullable(this.timeWindowStart);
    }

    private InstanceMaintenanceEventState() {}

    private InstanceMaintenanceEventState(InstanceMaintenanceEventState $) {
        this.additionalDetails = $.additionalDetails;
        this.alternativeResolutionAction = $.alternativeResolutionAction;
        this.alternativeResolutionActions = $.alternativeResolutionActions;
        this.canDeleteLocalStorage = $.canDeleteLocalStorage;
        this.canReschedule = $.canReschedule;
        this.compartmentId = $.compartmentId;
        this.correlationToken = $.correlationToken;
        this.createdBy = $.createdBy;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.estimatedDuration = $.estimatedDuration;
        this.freeformTags = $.freeformTags;
        this.instanceAction = $.instanceAction;
        this.instanceId = $.instanceId;
        this.instanceMaintenanceEventId = $.instanceMaintenanceEventId;
        this.maintenanceCategory = $.maintenanceCategory;
        this.maintenanceReason = $.maintenanceReason;
        this.startWindowDuration = $.startWindowDuration;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeFinished = $.timeFinished;
        this.timeHardDueDate = $.timeHardDueDate;
        this.timeStarted = $.timeStarted;
        this.timeWindowStart = $.timeWindowStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceMaintenanceEventState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceMaintenanceEventState $;

        public Builder() {
            $ = new InstanceMaintenanceEventState();
        }

        public Builder(InstanceMaintenanceEventState defaults) {
            $ = new InstanceMaintenanceEventState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalDetails Additional details of the maintenance in the form of json.
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(@Nullable Output<Map<String,String>> additionalDetails) {
            $.additionalDetails = additionalDetails;
            return this;
        }

        /**
         * @param additionalDetails Additional details of the maintenance in the form of json.
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(Map<String,String> additionalDetails) {
            return additionalDetails(Output.of(additionalDetails));
        }

        /**
         * @param alternativeResolutionAction (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
         * 
         * @return builder
         * 
         */
        public Builder alternativeResolutionAction(@Nullable Output<String> alternativeResolutionAction) {
            $.alternativeResolutionAction = alternativeResolutionAction;
            return this;
        }

        /**
         * @param alternativeResolutionAction (Updatable) One of the alternativeResolutionActions that was provided in the InstanceMaintenanceEvent.
         * 
         * @return builder
         * 
         */
        public Builder alternativeResolutionAction(String alternativeResolutionAction) {
            return alternativeResolutionAction(Output.of(alternativeResolutionAction));
        }

        /**
         * @param alternativeResolutionActions These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
         * 
         * @return builder
         * 
         */
        public Builder alternativeResolutionActions(@Nullable Output<List<String>> alternativeResolutionActions) {
            $.alternativeResolutionActions = alternativeResolutionActions;
            return this;
        }

        /**
         * @param alternativeResolutionActions These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
         * 
         * @return builder
         * 
         */
        public Builder alternativeResolutionActions(List<String> alternativeResolutionActions) {
            return alternativeResolutionActions(Output.of(alternativeResolutionActions));
        }

        /**
         * @param alternativeResolutionActions These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
         * 
         * @return builder
         * 
         */
        public Builder alternativeResolutionActions(String... alternativeResolutionActions) {
            return alternativeResolutionActions(List.of(alternativeResolutionActions));
        }

        /**
         * @param canDeleteLocalStorage (Updatable) This field is only applicable when setting the alternativeResolutionAction.
         * 
         * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
         * 
         * In cases where the local storage will be lost, this parameter must be set or the request will fail.
         * 
         * @return builder
         * 
         */
        public Builder canDeleteLocalStorage(@Nullable Output<Boolean> canDeleteLocalStorage) {
            $.canDeleteLocalStorage = canDeleteLocalStorage;
            return this;
        }

        /**
         * @param canDeleteLocalStorage (Updatable) This field is only applicable when setting the alternativeResolutionAction.
         * 
         * For Instances that have local storage, this must be set to true to verify that the local storage will be deleted during the migration. For instances without, this parameter has no effect.
         * 
         * In cases where the local storage will be lost, this parameter must be set or the request will fail.
         * 
         * @return builder
         * 
         */
        public Builder canDeleteLocalStorage(Boolean canDeleteLocalStorage) {
            return canDeleteLocalStorage(Output.of(canDeleteLocalStorage));
        }

        /**
         * @param canReschedule Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
         * 
         * @return builder
         * 
         */
        public Builder canReschedule(@Nullable Output<Boolean> canReschedule) {
            $.canReschedule = canReschedule;
            return this;
        }

        /**
         * @param canReschedule Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
         * 
         * @return builder
         * 
         */
        public Builder canReschedule(Boolean canReschedule) {
            return canReschedule(Output.of(canReschedule));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the instance.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the instance.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param correlationToken A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
         * 
         * @return builder
         * 
         */
        public Builder correlationToken(@Nullable Output<String> correlationToken) {
            $.correlationToken = correlationToken;
            return this;
        }

        /**
         * @param correlationToken A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
         * 
         * @return builder
         * 
         */
        public Builder correlationToken(String correlationToken) {
            return correlationToken(Output.of(correlationToken));
        }

        /**
         * @param createdBy The creator of the maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The creator of the maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description It is the descriptive information about the maintenance taking place on the customer instance.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description It is the descriptive information about the maintenance taking place on the customer instance.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param estimatedDuration This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
         * 
         * @return builder
         * 
         */
        public Builder estimatedDuration(@Nullable Output<String> estimatedDuration) {
            $.estimatedDuration = estimatedDuration;
            return this;
        }

        /**
         * @param estimatedDuration This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
         * 
         * @return builder
         * 
         */
        public Builder estimatedDuration(String estimatedDuration) {
            return estimatedDuration(Output.of(estimatedDuration));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param instanceAction This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
         * 
         * @return builder
         * 
         */
        public Builder instanceAction(@Nullable Output<String> instanceAction) {
            $.instanceAction = instanceAction;
            return this;
        }

        /**
         * @param instanceAction This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
         * 
         * @return builder
         * 
         */
        public Builder instanceAction(String instanceAction) {
            return instanceAction(Output.of(instanceAction));
        }

        /**
         * @param instanceId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param instanceMaintenanceEventId The OCID of the instance maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder instanceMaintenanceEventId(@Nullable Output<String> instanceMaintenanceEventId) {
            $.instanceMaintenanceEventId = instanceMaintenanceEventId;
            return this;
        }

        /**
         * @param instanceMaintenanceEventId The OCID of the instance maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder instanceMaintenanceEventId(String instanceMaintenanceEventId) {
            return instanceMaintenanceEventId(Output.of(instanceMaintenanceEventId));
        }

        /**
         * @param maintenanceCategory This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceCategory(@Nullable Output<String> maintenanceCategory) {
            $.maintenanceCategory = maintenanceCategory;
            return this;
        }

        /**
         * @param maintenanceCategory This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceCategory(String maintenanceCategory) {
            return maintenanceCategory(Output.of(maintenanceCategory));
        }

        /**
         * @param maintenanceReason This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceReason(@Nullable Output<String> maintenanceReason) {
            $.maintenanceReason = maintenanceReason;
            return this;
        }

        /**
         * @param maintenanceReason This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceReason(String maintenanceReason) {
            return maintenanceReason(Output.of(maintenanceReason));
        }

        /**
         * @param startWindowDuration The duration of the time window Maintenance is scheduled to begin within.
         * 
         * @return builder
         * 
         */
        public Builder startWindowDuration(@Nullable Output<String> startWindowDuration) {
            $.startWindowDuration = startWindowDuration;
            return this;
        }

        /**
         * @param startWindowDuration The duration of the time window Maintenance is scheduled to begin within.
         * 
         * @return builder
         * 
         */
        public Builder startWindowDuration(String startWindowDuration) {
            return startWindowDuration(Output.of(startWindowDuration));
        }

        /**
         * @param state The current state of the maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the maintenance event.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeFinished The time at which the Maintenance actually finished.
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(@Nullable Output<String> timeFinished) {
            $.timeFinished = timeFinished;
            return this;
        }

        /**
         * @param timeFinished The time at which the Maintenance actually finished.
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(String timeFinished) {
            return timeFinished(Output.of(timeFinished));
        }

        /**
         * @param timeHardDueDate It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
         * 
         * @return builder
         * 
         */
        public Builder timeHardDueDate(@Nullable Output<String> timeHardDueDate) {
            $.timeHardDueDate = timeHardDueDate;
            return this;
        }

        /**
         * @param timeHardDueDate It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
         * 
         * @return builder
         * 
         */
        public Builder timeHardDueDate(String timeHardDueDate) {
            return timeHardDueDate(Output.of(timeHardDueDate));
        }

        /**
         * @param timeStarted The time at which the Maintenance actually started.
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(@Nullable Output<String> timeStarted) {
            $.timeStarted = timeStarted;
            return this;
        }

        /**
         * @param timeStarted The time at which the Maintenance actually started.
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(String timeStarted) {
            return timeStarted(Output.of(timeStarted));
        }

        /**
         * @param timeWindowStart (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
         * 
         * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeWindowStart(@Nullable Output<String> timeWindowStart) {
            $.timeWindowStart = timeWindowStart;
            return this;
        }

        /**
         * @param timeWindowStart (Updatable) The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
         * 
         * The timeWindowEnd is automatically calculated based on the maintenanceReason and the instanceAction.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeWindowStart(String timeWindowStart) {
            return timeWindowStart(Output.of(timeWindowStart));
        }

        public InstanceMaintenanceEventState build() {
            return $;
        }
    }

}
