// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.inputs.InstancePoolPlacementConfigurationPrimaryVnicSubnetsArgs;
import com.pulumi.oci.Core.inputs.InstancePoolPlacementConfigurationSecondaryVnicSubnetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePoolPlacementConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePoolPlacementConfigurationArgs Empty = new InstancePoolPlacementConfigurationArgs();

    /**
     * (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     * 
     */
    @Import(name="availabilityDomain", required=true)
    private Output<String> availabilityDomain;

    /**
     * @return (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Output<String> availabilityDomain() {
        return this.availabilityDomain;
    }

    /**
     * (Updatable) The fault domains to place instances.
     * 
     * If you don&#39;t provide any values, the system makes a best effort to distribute instances across all fault domains based on capacity.
     * 
     * To distribute the instances evenly across selected fault domains, provide a set of fault domains. For example, you might want instances to be evenly distributed if your applications require high availability.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
     * 
     */
    @Import(name="faultDomains")
    private @Nullable Output<List<String>> faultDomains;

    /**
     * @return (Updatable) The fault domains to place instances.
     * 
     * If you don&#39;t provide any values, the system makes a best effort to distribute instances across all fault domains based on capacity.
     * 
     * To distribute the instances evenly across selected fault domains, provide a set of fault domains. For example, you might want instances to be evenly distributed if your applications require high availability.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
     * 
     */
    public Optional<Output<List<String>>> faultDomains() {
        return Optional.ofNullable(this.faultDomains);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
     * 
     */
    @Import(name="primarySubnetId")
    private @Nullable Output<String> primarySubnetId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
     * 
     */
    public Optional<Output<String>> primarySubnetId() {
        return Optional.ofNullable(this.primarySubnetId);
    }

    /**
     * (Updatable) Details about the IPv6 primary subnet.
     * 
     */
    @Import(name="primaryVnicSubnets")
    private @Nullable Output<InstancePoolPlacementConfigurationPrimaryVnicSubnetsArgs> primaryVnicSubnets;

    /**
     * @return (Updatable) Details about the IPv6 primary subnet.
     * 
     */
    public Optional<Output<InstancePoolPlacementConfigurationPrimaryVnicSubnetsArgs>> primaryVnicSubnets() {
        return Optional.ofNullable(this.primaryVnicSubnets);
    }

    /**
     * (Updatable) The set of secondary VNIC data for instances in the pool.
     * 
     */
    @Import(name="secondaryVnicSubnets")
    private @Nullable Output<List<InstancePoolPlacementConfigurationSecondaryVnicSubnetArgs>> secondaryVnicSubnets;

    /**
     * @return (Updatable) The set of secondary VNIC data for instances in the pool.
     * 
     */
    public Optional<Output<List<InstancePoolPlacementConfigurationSecondaryVnicSubnetArgs>>> secondaryVnicSubnets() {
        return Optional.ofNullable(this.secondaryVnicSubnets);
    }

    private InstancePoolPlacementConfigurationArgs() {}

    private InstancePoolPlacementConfigurationArgs(InstancePoolPlacementConfigurationArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.faultDomains = $.faultDomains;
        this.primarySubnetId = $.primarySubnetId;
        this.primaryVnicSubnets = $.primaryVnicSubnets;
        this.secondaryVnicSubnets = $.secondaryVnicSubnets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePoolPlacementConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePoolPlacementConfigurationArgs $;

        public Builder() {
            $ = new InstancePoolPlacementConfigurationArgs();
        }

        public Builder(InstancePoolPlacementConfigurationArgs defaults) {
            $ = new InstancePoolPlacementConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param faultDomains (Updatable) The fault domains to place instances.
         * 
         * If you don&#39;t provide any values, the system makes a best effort to distribute instances across all fault domains based on capacity.
         * 
         * To distribute the instances evenly across selected fault domains, provide a set of fault domains. For example, you might want instances to be evenly distributed if your applications require high availability.
         * 
         * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
         * 
         * Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
         * 
         * @return builder
         * 
         */
        public Builder faultDomains(@Nullable Output<List<String>> faultDomains) {
            $.faultDomains = faultDomains;
            return this;
        }

        /**
         * @param faultDomains (Updatable) The fault domains to place instances.
         * 
         * If you don&#39;t provide any values, the system makes a best effort to distribute instances across all fault domains based on capacity.
         * 
         * To distribute the instances evenly across selected fault domains, provide a set of fault domains. For example, you might want instances to be evenly distributed if your applications require high availability.
         * 
         * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
         * 
         * Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
         * 
         * @return builder
         * 
         */
        public Builder faultDomains(List<String> faultDomains) {
            return faultDomains(Output.of(faultDomains));
        }

        /**
         * @param faultDomains (Updatable) The fault domains to place instances.
         * 
         * If you don&#39;t provide any values, the system makes a best effort to distribute instances across all fault domains based on capacity.
         * 
         * To distribute the instances evenly across selected fault domains, provide a set of fault domains. For example, you might want instances to be evenly distributed if your applications require high availability.
         * 
         * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
         * 
         * Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
         * 
         * @return builder
         * 
         */
        public Builder faultDomains(String... faultDomains) {
            return faultDomains(List.of(faultDomains));
        }

        /**
         * @param primarySubnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder primarySubnetId(@Nullable Output<String> primarySubnetId) {
            $.primarySubnetId = primarySubnetId;
            return this;
        }

        /**
         * @param primarySubnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the primary subnet to place instances. This field is deprecated. Use `primaryVnicSubnets` instead to set VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder primarySubnetId(String primarySubnetId) {
            return primarySubnetId(Output.of(primarySubnetId));
        }

        /**
         * @param primaryVnicSubnets (Updatable) Details about the IPv6 primary subnet.
         * 
         * @return builder
         * 
         */
        public Builder primaryVnicSubnets(@Nullable Output<InstancePoolPlacementConfigurationPrimaryVnicSubnetsArgs> primaryVnicSubnets) {
            $.primaryVnicSubnets = primaryVnicSubnets;
            return this;
        }

        /**
         * @param primaryVnicSubnets (Updatable) Details about the IPv6 primary subnet.
         * 
         * @return builder
         * 
         */
        public Builder primaryVnicSubnets(InstancePoolPlacementConfigurationPrimaryVnicSubnetsArgs primaryVnicSubnets) {
            return primaryVnicSubnets(Output.of(primaryVnicSubnets));
        }

        /**
         * @param secondaryVnicSubnets (Updatable) The set of secondary VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVnicSubnets(@Nullable Output<List<InstancePoolPlacementConfigurationSecondaryVnicSubnetArgs>> secondaryVnicSubnets) {
            $.secondaryVnicSubnets = secondaryVnicSubnets;
            return this;
        }

        /**
         * @param secondaryVnicSubnets (Updatable) The set of secondary VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVnicSubnets(List<InstancePoolPlacementConfigurationSecondaryVnicSubnetArgs> secondaryVnicSubnets) {
            return secondaryVnicSubnets(Output.of(secondaryVnicSubnets));
        }

        /**
         * @param secondaryVnicSubnets (Updatable) The set of secondary VNIC data for instances in the pool.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVnicSubnets(InstancePoolPlacementConfigurationSecondaryVnicSubnetArgs... secondaryVnicSubnets) {
            return secondaryVnicSubnets(List.of(secondaryVnicSubnets));
        }

        public InstancePoolPlacementConfigurationArgs build() {
            if ($.availabilityDomain == null) {
                throw new MissingRequiredPropertyException("InstancePoolPlacementConfigurationArgs", "availabilityDomain");
            }
            return $;
        }
    }

}
