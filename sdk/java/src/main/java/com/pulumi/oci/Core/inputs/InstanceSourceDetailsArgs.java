// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.inputs.InstanceSourceDetailsInstanceSourceImageFilterDetailsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceSourceDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceSourceDetailsArgs Empty = new InstanceSourceDetailsArgs();

    /**
     * (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     * 
     */
    @Import(name="bootVolumeSizeInGbs")
    private @Nullable Output<String> bootVolumeSizeInGbs;

    /**
     * @return (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     * 
     */
    public Optional<Output<String>> bootVolumeSizeInGbs() {
        return Optional.ofNullable(this.bootVolumeSizeInGbs);
    }

    /**
     * The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     * Allowed values:
     * 
     */
    @Import(name="bootVolumeVpusPerGb")
    private @Nullable Output<String> bootVolumeVpusPerGb;

    /**
     * @return The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     * Allowed values:
     * 
     */
    public Optional<Output<String>> bootVolumeVpusPerGb() {
        return Optional.ofNullable(this.bootVolumeVpusPerGb);
    }

    /**
     * These are the criteria for selecting an image. This is required if imageId is not specified.
     * 
     */
    @Import(name="instanceSourceImageFilterDetails")
    private @Nullable Output<InstanceSourceDetailsInstanceSourceImageFilterDetailsArgs> instanceSourceImageFilterDetails;

    /**
     * @return These are the criteria for selecting an image. This is required if imageId is not specified.
     * 
     */
    public Optional<Output<InstanceSourceDetailsInstanceSourceImageFilterDetailsArgs>> instanceSourceImageFilterDetails() {
        return Optional.ofNullable(this.instanceSourceImageFilterDetails);
    }

    /**
     * (Updatable) Whether to preserve the boot volume that was previously attached to the instance after a successful replacement of that boot volume.
     * 
     */
    @Import(name="isPreserveBootVolumeEnabled")
    private @Nullable Output<Boolean> isPreserveBootVolumeEnabled;

    /**
     * @return (Updatable) Whether to preserve the boot volume that was previously attached to the instance after a successful replacement of that boot volume.
     * 
     */
    public Optional<Output<Boolean>> isPreserveBootVolumeEnabled() {
        return Optional.ofNullable(this.isPreserveBootVolumeEnabled);
    }

    /**
     * (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * (Updatable) The OCID of the boot volume used to boot the instance. Updates are supported only for linux Images. The user will need to manually destroy and re-create the resource for other image types.
     * 
     */
    @Import(name="sourceId")
    private @Nullable Output<String> sourceId;

    /**
     * @return (Updatable) The OCID of the boot volume used to boot the instance. Updates are supported only for linux Images. The user will need to manually destroy and re-create the resource for other image types.
     * 
     */
    public Optional<Output<String>> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }

    /**
     * (Updatable) The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     */
    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    /**
     * @return (Updatable) The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     */
    public Output<String> sourceType() {
        return this.sourceType;
    }

    private InstanceSourceDetailsArgs() {}

    private InstanceSourceDetailsArgs(InstanceSourceDetailsArgs $) {
        this.bootVolumeSizeInGbs = $.bootVolumeSizeInGbs;
        this.bootVolumeVpusPerGb = $.bootVolumeVpusPerGb;
        this.instanceSourceImageFilterDetails = $.instanceSourceImageFilterDetails;
        this.isPreserveBootVolumeEnabled = $.isPreserveBootVolumeEnabled;
        this.kmsKeyId = $.kmsKeyId;
        this.sourceId = $.sourceId;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceSourceDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceSourceDetailsArgs $;

        public Builder() {
            $ = new InstanceSourceDetailsArgs();
        }

        public Builder(InstanceSourceDetailsArgs defaults) {
            $ = new InstanceSourceDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bootVolumeSizeInGbs (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
         * 
         * @return builder
         * 
         */
        public Builder bootVolumeSizeInGbs(@Nullable Output<String> bootVolumeSizeInGbs) {
            $.bootVolumeSizeInGbs = bootVolumeSizeInGbs;
            return this;
        }

        /**
         * @param bootVolumeSizeInGbs (Updatable) The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
         * 
         * @return builder
         * 
         */
        public Builder bootVolumeSizeInGbs(String bootVolumeSizeInGbs) {
            return bootVolumeSizeInGbs(Output.of(bootVolumeSizeInGbs));
        }

        /**
         * @param bootVolumeVpusPerGb The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         * 
         * Allowed values:
         * 
         * @return builder
         * 
         */
        public Builder bootVolumeVpusPerGb(@Nullable Output<String> bootVolumeVpusPerGb) {
            $.bootVolumeVpusPerGb = bootVolumeVpusPerGb;
            return this;
        }

        /**
         * @param bootVolumeVpusPerGb The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
         * 
         * Allowed values:
         * 
         * @return builder
         * 
         */
        public Builder bootVolumeVpusPerGb(String bootVolumeVpusPerGb) {
            return bootVolumeVpusPerGb(Output.of(bootVolumeVpusPerGb));
        }

        /**
         * @param instanceSourceImageFilterDetails These are the criteria for selecting an image. This is required if imageId is not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceSourceImageFilterDetails(@Nullable Output<InstanceSourceDetailsInstanceSourceImageFilterDetailsArgs> instanceSourceImageFilterDetails) {
            $.instanceSourceImageFilterDetails = instanceSourceImageFilterDetails;
            return this;
        }

        /**
         * @param instanceSourceImageFilterDetails These are the criteria for selecting an image. This is required if imageId is not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceSourceImageFilterDetails(InstanceSourceDetailsInstanceSourceImageFilterDetailsArgs instanceSourceImageFilterDetails) {
            return instanceSourceImageFilterDetails(Output.of(instanceSourceImageFilterDetails));
        }

        /**
         * @param isPreserveBootVolumeEnabled (Updatable) Whether to preserve the boot volume that was previously attached to the instance after a successful replacement of that boot volume.
         * 
         * @return builder
         * 
         */
        public Builder isPreserveBootVolumeEnabled(@Nullable Output<Boolean> isPreserveBootVolumeEnabled) {
            $.isPreserveBootVolumeEnabled = isPreserveBootVolumeEnabled;
            return this;
        }

        /**
         * @param isPreserveBootVolumeEnabled (Updatable) Whether to preserve the boot volume that was previously attached to the instance after a successful replacement of that boot volume.
         * 
         * @return builder
         * 
         */
        public Builder isPreserveBootVolumeEnabled(Boolean isPreserveBootVolumeEnabled) {
            return isPreserveBootVolumeEnabled(Output.of(isPreserveBootVolumeEnabled));
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the Vault service key to assign as the master encryption key for the boot volume.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param sourceId (Updatable) The OCID of the boot volume used to boot the instance. Updates are supported only for linux Images. The user will need to manually destroy and re-create the resource for other image types.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(@Nullable Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        /**
         * @param sourceId (Updatable) The OCID of the boot volume used to boot the instance. Updates are supported only for linux Images. The user will need to manually destroy and re-create the resource for other image types.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        /**
         * @param sourceType (Updatable) The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType (Updatable) The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public InstanceSourceDetailsArgs build() {
            if ($.sourceType == null) {
                throw new MissingRequiredPropertyException("InstanceSourceDetailsArgs", "sourceType");
            }
            return $;
        }
    }

}
