// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpsecConnectionTunnelManagementBgpSessionInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpsecConnectionTunnelManagementBgpSessionInfoArgs Empty = new IpsecConnectionTunnelManagementBgpSessionInfoArgs();

    /**
     * The state of the BGP IPv6 session.
     * 
     */
    @Import(name="bgpIpv6State")
    private @Nullable Output<String> bgpIpv6State;

    /**
     * @return The state of the BGP IPv6 session.
     * 
     */
    public Optional<Output<String>> bgpIpv6State() {
        return Optional.ofNullable(this.bgpIpv6State);
    }

    /**
     * @deprecated
     * The &#39;bgp_session_info.0.bgp_ipv6state&#39; field has been deprecated. Please use &#39;bgp_session_info.0.bgp_ipv6_state&#39; instead.
     * 
     */
    @Deprecated /* The 'bgp_session_info.0.bgp_ipv6state' field has been deprecated. Please use 'bgp_session_info.0.bgp_ipv6_state' instead. */
    @Import(name="bgpIpv6state")
    private @Nullable Output<String> bgpIpv6state;

    /**
     * @deprecated
     * The &#39;bgp_session_info.0.bgp_ipv6state&#39; field has been deprecated. Please use &#39;bgp_session_info.0.bgp_ipv6_state&#39; instead.
     * 
     */
    @Deprecated /* The 'bgp_session_info.0.bgp_ipv6state' field has been deprecated. Please use 'bgp_session_info.0.bgp_ipv6_state' instead. */
    public Optional<Output<String>> bgpIpv6state() {
        return Optional.ofNullable(this.bgpIpv6state);
    }

    /**
     * The state of the BGP session.
     * 
     */
    @Import(name="bgpState")
    private @Nullable Output<String> bgpState;

    /**
     * @return The state of the BGP session.
     * 
     */
    public Optional<Output<String>> bgpState() {
        return Optional.ofNullable(this.bgpState);
    }

    /**
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel&#39;s BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `STATIC`, the `customerBgpAsn` must be null.
     * 
     * Example: `12345` (2-byte) or `1587232876` (4-byte)
     * 
     */
    @Import(name="customerBgpAsn")
    private @Nullable Output<String> customerBgpAsn;

    /**
     * @return If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel&#39;s BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `STATIC`, the `customerBgpAsn` must be null.
     * 
     * Example: `12345` (2-byte) or `1587232876` (4-byte)
     * 
     */
    public Optional<Output<String>> customerBgpAsn() {
        return Optional.ofNullable(this.customerBgpAsn);
    }

    /**
     * The IP address for the CPE end of the inside tunnel interface.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * The value must be a /30 or /31.
     * 
     * Example: `10.0.0.5/31`
     * 
     */
    @Import(name="customerInterfaceIp")
    private @Nullable Output<String> customerInterfaceIp;

    /**
     * @return The IP address for the CPE end of the inside tunnel interface.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * The value must be a /30 or /31.
     * 
     * Example: `10.0.0.5/31`
     * 
     */
    public Optional<Output<String>> customerInterfaceIp() {
        return Optional.ofNullable(this.customerInterfaceIp);
    }

    /**
     * The IPv6 address for the CPE end of the inside tunnel interface. This IP address is optional.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * Only subnet masks from /64 up to /127 are allowed.
     * 
     * Example: `2001:db8::1/64`
     * 
     */
    @Import(name="customerInterfaceIpv6")
    private @Nullable Output<String> customerInterfaceIpv6;

    /**
     * @return The IPv6 address for the CPE end of the inside tunnel interface. This IP address is optional.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * Only subnet masks from /64 up to /127 are allowed.
     * 
     * Example: `2001:db8::1/64`
     * 
     */
    public Optional<Output<String>> customerInterfaceIpv6() {
        return Optional.ofNullable(this.customerInterfaceIpv6);
    }

    /**
     * The Oracle BGP ASN.
     * 
     */
    @Import(name="oracleBgpAsn")
    private @Nullable Output<String> oracleBgpAsn;

    /**
     * @return The Oracle BGP ASN.
     * 
     */
    public Optional<Output<String>> oracleBgpAsn() {
        return Optional.ofNullable(this.oracleBgpAsn);
    }

    /**
     * The IP address for the Oracle end of the inside tunnel interface.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * The value must be a /30 or /31.
     * 
     * Example: `10.0.0.4/31`
     * 
     */
    @Import(name="oracleInterfaceIp")
    private @Nullable Output<String> oracleInterfaceIp;

    /**
     * @return The IP address for the Oracle end of the inside tunnel interface.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * The value must be a /30 or /31.
     * 
     * Example: `10.0.0.4/31`
     * 
     */
    public Optional<Output<String>> oracleInterfaceIp() {
        return Optional.ofNullable(this.oracleInterfaceIp);
    }

    /**
     * The IPv6 address for the Oracle end of the inside tunnel interface. This IP address is optional.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * Only subnet masks from /64 up to /127 are allowed.
     * 
     * Example: `2001:db8::1/64`
     * 
     */
    @Import(name="oracleInterfaceIpv6")
    private @Nullable Output<String> oracleInterfaceIpv6;

    /**
     * @return The IPv6 address for the Oracle end of the inside tunnel interface. This IP address is optional.
     * 
     * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
     * 
     * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
     * 
     * Only subnet masks from /64 up to /127 are allowed.
     * 
     * Example: `2001:db8::1/64`
     * 
     */
    public Optional<Output<String>> oracleInterfaceIpv6() {
        return Optional.ofNullable(this.oracleInterfaceIpv6);
    }

    private IpsecConnectionTunnelManagementBgpSessionInfoArgs() {}

    private IpsecConnectionTunnelManagementBgpSessionInfoArgs(IpsecConnectionTunnelManagementBgpSessionInfoArgs $) {
        this.bgpIpv6State = $.bgpIpv6State;
        this.bgpIpv6state = $.bgpIpv6state;
        this.bgpState = $.bgpState;
        this.customerBgpAsn = $.customerBgpAsn;
        this.customerInterfaceIp = $.customerInterfaceIp;
        this.customerInterfaceIpv6 = $.customerInterfaceIpv6;
        this.oracleBgpAsn = $.oracleBgpAsn;
        this.oracleInterfaceIp = $.oracleInterfaceIp;
        this.oracleInterfaceIpv6 = $.oracleInterfaceIpv6;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpsecConnectionTunnelManagementBgpSessionInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpsecConnectionTunnelManagementBgpSessionInfoArgs $;

        public Builder() {
            $ = new IpsecConnectionTunnelManagementBgpSessionInfoArgs();
        }

        public Builder(IpsecConnectionTunnelManagementBgpSessionInfoArgs defaults) {
            $ = new IpsecConnectionTunnelManagementBgpSessionInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bgpIpv6State The state of the BGP IPv6 session.
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv6State(@Nullable Output<String> bgpIpv6State) {
            $.bgpIpv6State = bgpIpv6State;
            return this;
        }

        /**
         * @param bgpIpv6State The state of the BGP IPv6 session.
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv6State(String bgpIpv6State) {
            return bgpIpv6State(Output.of(bgpIpv6State));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The &#39;bgp_session_info.0.bgp_ipv6state&#39; field has been deprecated. Please use &#39;bgp_session_info.0.bgp_ipv6_state&#39; instead.
         * 
         */
        @Deprecated /* The 'bgp_session_info.0.bgp_ipv6state' field has been deprecated. Please use 'bgp_session_info.0.bgp_ipv6_state' instead. */
        public Builder bgpIpv6state(@Nullable Output<String> bgpIpv6state) {
            $.bgpIpv6state = bgpIpv6state;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The &#39;bgp_session_info.0.bgp_ipv6state&#39; field has been deprecated. Please use &#39;bgp_session_info.0.bgp_ipv6_state&#39; instead.
         * 
         */
        @Deprecated /* The 'bgp_session_info.0.bgp_ipv6state' field has been deprecated. Please use 'bgp_session_info.0.bgp_ipv6_state' instead. */
        public Builder bgpIpv6state(String bgpIpv6state) {
            return bgpIpv6state(Output.of(bgpIpv6state));
        }

        /**
         * @param bgpState The state of the BGP session.
         * 
         * @return builder
         * 
         */
        public Builder bgpState(@Nullable Output<String> bgpState) {
            $.bgpState = bgpState;
            return this;
        }

        /**
         * @param bgpState The state of the BGP session.
         * 
         * @return builder
         * 
         */
        public Builder bgpState(String bgpState) {
            return bgpState(Output.of(bgpState));
        }

        /**
         * @param customerBgpAsn If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel&#39;s BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `STATIC`, the `customerBgpAsn` must be null.
         * 
         * Example: `12345` (2-byte) or `1587232876` (4-byte)
         * 
         * @return builder
         * 
         */
        public Builder customerBgpAsn(@Nullable Output<String> customerBgpAsn) {
            $.customerBgpAsn = customerBgpAsn;
            return this;
        }

        /**
         * @param customerBgpAsn If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this ASN is required and used for the tunnel&#39;s BGP session. This is the ASN of the network on the CPE end of the BGP session. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `STATIC`, the `customerBgpAsn` must be null.
         * 
         * Example: `12345` (2-byte) or `1587232876` (4-byte)
         * 
         * @return builder
         * 
         */
        public Builder customerBgpAsn(String customerBgpAsn) {
            return customerBgpAsn(Output.of(customerBgpAsn));
        }

        /**
         * @param customerInterfaceIp The IP address for the CPE end of the inside tunnel interface.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * The value must be a /30 or /31.
         * 
         * Example: `10.0.0.5/31`
         * 
         * @return builder
         * 
         */
        public Builder customerInterfaceIp(@Nullable Output<String> customerInterfaceIp) {
            $.customerInterfaceIp = customerInterfaceIp;
            return this;
        }

        /**
         * @param customerInterfaceIp The IP address for the CPE end of the inside tunnel interface.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * The value must be a /30 or /31.
         * 
         * Example: `10.0.0.5/31`
         * 
         * @return builder
         * 
         */
        public Builder customerInterfaceIp(String customerInterfaceIp) {
            return customerInterfaceIp(Output.of(customerInterfaceIp));
        }

        /**
         * @param customerInterfaceIpv6 The IPv6 address for the CPE end of the inside tunnel interface. This IP address is optional.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * Only subnet masks from /64 up to /127 are allowed.
         * 
         * Example: `2001:db8::1/64`
         * 
         * @return builder
         * 
         */
        public Builder customerInterfaceIpv6(@Nullable Output<String> customerInterfaceIpv6) {
            $.customerInterfaceIpv6 = customerInterfaceIpv6;
            return this;
        }

        /**
         * @param customerInterfaceIpv6 The IPv6 address for the CPE end of the inside tunnel interface. This IP address is optional.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * Only subnet masks from /64 up to /127 are allowed.
         * 
         * Example: `2001:db8::1/64`
         * 
         * @return builder
         * 
         */
        public Builder customerInterfaceIpv6(String customerInterfaceIpv6) {
            return customerInterfaceIpv6(Output.of(customerInterfaceIpv6));
        }

        /**
         * @param oracleBgpAsn The Oracle BGP ASN.
         * 
         * @return builder
         * 
         */
        public Builder oracleBgpAsn(@Nullable Output<String> oracleBgpAsn) {
            $.oracleBgpAsn = oracleBgpAsn;
            return this;
        }

        /**
         * @param oracleBgpAsn The Oracle BGP ASN.
         * 
         * @return builder
         * 
         */
        public Builder oracleBgpAsn(String oracleBgpAsn) {
            return oracleBgpAsn(Output.of(oracleBgpAsn));
        }

        /**
         * @param oracleInterfaceIp The IP address for the Oracle end of the inside tunnel interface.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * The value must be a /30 or /31.
         * 
         * Example: `10.0.0.4/31`
         * 
         * @return builder
         * 
         */
        public Builder oracleInterfaceIp(@Nullable Output<String> oracleInterfaceIp) {
            $.oracleInterfaceIp = oracleInterfaceIp;
            return this;
        }

        /**
         * @param oracleInterfaceIp The IP address for the Oracle end of the inside tunnel interface.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnel/)), this IP address is required and used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, this IP address is optional. You can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * The value must be a /30 or /31.
         * 
         * Example: `10.0.0.4/31`
         * 
         * @return builder
         * 
         */
        public Builder oracleInterfaceIp(String oracleInterfaceIp) {
            return oracleInterfaceIp(Output.of(oracleInterfaceIp));
        }

        /**
         * @param oracleInterfaceIpv6 The IPv6 address for the Oracle end of the inside tunnel interface. This IP address is optional.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * Only subnet masks from /64 up to /127 are allowed.
         * 
         * Example: `2001:db8::1/64`
         * 
         * @return builder
         * 
         */
        public Builder oracleInterfaceIpv6(@Nullable Output<String> oracleInterfaceIpv6) {
            $.oracleInterfaceIpv6 = oracleInterfaceIpv6;
            return this;
        }

        /**
         * @param oracleInterfaceIpv6 The IPv6 address for the Oracle end of the inside tunnel interface. This IP address is optional.
         * 
         * If the tunnel&#39;s `routing` attribute is set to `BGP` (see [IPSecConnectionTunnel](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnectionTunnel/)), this IP address is used for the tunnel&#39;s BGP session.
         * 
         * If `routing` is instead set to `STATIC`, you can set this IP address to troubleshoot or monitor the tunnel.
         * 
         * Only subnet masks from /64 up to /127 are allowed.
         * 
         * Example: `2001:db8::1/64`
         * 
         * @return builder
         * 
         */
        public Builder oracleInterfaceIpv6(String oracleInterfaceIpv6) {
            return oracleInterfaceIpv6(Output.of(oracleInterfaceIpv6));
        }

        public IpsecConnectionTunnelManagementBgpSessionInfoArgs build() {
            return $;
        }
    }

}
