// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VolumeSourceDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeSourceDetailsArgs Empty = new VolumeSourceDetailsArgs();

    /**
     * The OCID of the block volume replica.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The OCID of the block volume replica.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private VolumeSourceDetailsArgs() {}

    private VolumeSourceDetailsArgs(VolumeSourceDetailsArgs $) {
        this.id = $.id;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeSourceDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeSourceDetailsArgs $;

        public Builder() {
            $ = new VolumeSourceDetailsArgs();
        }

        public Builder(VolumeSourceDetailsArgs defaults) {
            $ = new VolumeSourceDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The OCID of the block volume replica.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The OCID of the block volume replica.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param type The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type can be one of these values: `blockVolumeReplica`, `volume`, `volumeBackup`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public VolumeSourceDetailsArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("VolumeSourceDetailsArgs", "id");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("VolumeSourceDetailsArgs", "type");
            }
            return $;
        }
    }

}
