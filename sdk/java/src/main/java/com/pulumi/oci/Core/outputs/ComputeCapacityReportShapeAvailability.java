// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.ComputeCapacityReportShapeAvailabilityInstanceShapeConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ComputeCapacityReportShapeAvailability {
    /**
     * @return A flag denoting whether capacity is available.
     * 
     */
    private @Nullable String availabilityStatus;
    /**
     * @return The total number of new instances that can be created with the specified shape configuration.
     * 
     */
    private @Nullable String availableCount;
    /**
     * @return The fault domain for the capacity report.
     * 
     * If you do not specify a fault domain, the capacity report includes information about all fault domains.
     * 
     */
    private @Nullable String faultDomain;
    /**
     * @return The shape that you want to request a capacity report for. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    private String instanceShape;
    /**
     * @return The shape configuration for a shape in a capacity report.
     * 
     */
    private @Nullable ComputeCapacityReportShapeAvailabilityInstanceShapeConfig instanceShapeConfig;

    private ComputeCapacityReportShapeAvailability() {}
    /**
     * @return A flag denoting whether capacity is available.
     * 
     */
    public Optional<String> availabilityStatus() {
        return Optional.ofNullable(this.availabilityStatus);
    }
    /**
     * @return The total number of new instances that can be created with the specified shape configuration.
     * 
     */
    public Optional<String> availableCount() {
        return Optional.ofNullable(this.availableCount);
    }
    /**
     * @return The fault domain for the capacity report.
     * 
     * If you do not specify a fault domain, the capacity report includes information about all fault domains.
     * 
     */
    public Optional<String> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }
    /**
     * @return The shape that you want to request a capacity report for. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    public String instanceShape() {
        return this.instanceShape;
    }
    /**
     * @return The shape configuration for a shape in a capacity report.
     * 
     */
    public Optional<ComputeCapacityReportShapeAvailabilityInstanceShapeConfig> instanceShapeConfig() {
        return Optional.ofNullable(this.instanceShapeConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputeCapacityReportShapeAvailability defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityStatus;
        private @Nullable String availableCount;
        private @Nullable String faultDomain;
        private String instanceShape;
        private @Nullable ComputeCapacityReportShapeAvailabilityInstanceShapeConfig instanceShapeConfig;
        public Builder() {}
        public Builder(ComputeCapacityReportShapeAvailability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityStatus = defaults.availabilityStatus;
    	      this.availableCount = defaults.availableCount;
    	      this.faultDomain = defaults.faultDomain;
    	      this.instanceShape = defaults.instanceShape;
    	      this.instanceShapeConfig = defaults.instanceShapeConfig;
        }

        @CustomType.Setter
        public Builder availabilityStatus(@Nullable String availabilityStatus) {

            this.availabilityStatus = availabilityStatus;
            return this;
        }
        @CustomType.Setter
        public Builder availableCount(@Nullable String availableCount) {

            this.availableCount = availableCount;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(@Nullable String faultDomain) {

            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder instanceShape(String instanceShape) {
            if (instanceShape == null) {
              throw new MissingRequiredPropertyException("ComputeCapacityReportShapeAvailability", "instanceShape");
            }
            this.instanceShape = instanceShape;
            return this;
        }
        @CustomType.Setter
        public Builder instanceShapeConfig(@Nullable ComputeCapacityReportShapeAvailabilityInstanceShapeConfig instanceShapeConfig) {

            this.instanceShapeConfig = instanceShapeConfig;
            return this;
        }
        public ComputeCapacityReportShapeAvailability build() {
            final var _resultValue = new ComputeCapacityReportShapeAvailability();
            _resultValue.availabilityStatus = availabilityStatus;
            _resultValue.availableCount = availableCount;
            _resultValue.faultDomain = faultDomain;
            _resultValue.instanceShape = instanceShape;
            _resultValue.instanceShapeConfig = instanceShapeConfig;
            return _resultValue;
        }
    }
}
