// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAppCatalogListingsAppCatalogListing {
    /**
     * @return Listing&#39;s contact URL.
     * 
     */
    private @Nullable String contactUrl;
    /**
     * @return Description of the listing.
     * 
     */
    private @Nullable String description;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return the region free ocid of the listing resource.
     * 
     */
    private @Nullable String listingId;
    /**
     * @return Publisher&#39;s logo URL.
     * 
     */
    private @Nullable String publisherLogoUrl;
    /**
     * @return A filter to return only the publisher that matches the given publisher name exactly.
     * 
     */
    private @Nullable String publisherName;
    /**
     * @return The short summary for the listing.
     * 
     */
    private @Nullable String summary;
    /**
     * @return Date and time the listing was published, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     * 
     */
    private @Nullable String timePublished;

    private GetAppCatalogListingsAppCatalogListing() {}
    /**
     * @return Listing&#39;s contact URL.
     * 
     */
    public Optional<String> contactUrl() {
        return Optional.ofNullable(this.contactUrl);
    }
    /**
     * @return Description of the listing.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return the region free ocid of the listing resource.
     * 
     */
    public Optional<String> listingId() {
        return Optional.ofNullable(this.listingId);
    }
    /**
     * @return Publisher&#39;s logo URL.
     * 
     */
    public Optional<String> publisherLogoUrl() {
        return Optional.ofNullable(this.publisherLogoUrl);
    }
    /**
     * @return A filter to return only the publisher that matches the given publisher name exactly.
     * 
     */
    public Optional<String> publisherName() {
        return Optional.ofNullable(this.publisherName);
    }
    /**
     * @return The short summary for the listing.
     * 
     */
    public Optional<String> summary() {
        return Optional.ofNullable(this.summary);
    }
    /**
     * @return Date and time the listing was published, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     * 
     */
    public Optional<String> timePublished() {
        return Optional.ofNullable(this.timePublished);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppCatalogListingsAppCatalogListing defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String contactUrl;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable String listingId;
        private @Nullable String publisherLogoUrl;
        private @Nullable String publisherName;
        private @Nullable String summary;
        private @Nullable String timePublished;
        public Builder() {}
        public Builder(GetAppCatalogListingsAppCatalogListing defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contactUrl = defaults.contactUrl;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.listingId = defaults.listingId;
    	      this.publisherLogoUrl = defaults.publisherLogoUrl;
    	      this.publisherName = defaults.publisherName;
    	      this.summary = defaults.summary;
    	      this.timePublished = defaults.timePublished;
        }

        @CustomType.Setter
        public Builder contactUrl(@Nullable String contactUrl) {
            this.contactUrl = contactUrl;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder listingId(@Nullable String listingId) {
            this.listingId = listingId;
            return this;
        }
        @CustomType.Setter
        public Builder publisherLogoUrl(@Nullable String publisherLogoUrl) {
            this.publisherLogoUrl = publisherLogoUrl;
            return this;
        }
        @CustomType.Setter
        public Builder publisherName(@Nullable String publisherName) {
            this.publisherName = publisherName;
            return this;
        }
        @CustomType.Setter
        public Builder summary(@Nullable String summary) {
            this.summary = summary;
            return this;
        }
        @CustomType.Setter
        public Builder timePublished(@Nullable String timePublished) {
            this.timePublished = timePublished;
            return this;
        }
        public GetAppCatalogListingsAppCatalogListing build() {
            final var o = new GetAppCatalogListingsAppCatalogListing();
            o.contactUrl = contactUrl;
            o.description = description;
            o.displayName = displayName;
            o.listingId = listingId;
            o.publisherLogoUrl = publisherLogoUrl;
            o.publisherName = publisherName;
            o.summary = summary;
            o.timePublished = timePublished;
            return o;
        }
    }
}
