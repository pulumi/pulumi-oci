// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBootVolumeAttachmentsBootVolumeAttachment {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The OCID of the boot volume.
     * 
     */
    private String bootVolumeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    private String encryptionInTransitType;
    /**
     * @return The OCID of the boot volume attachment.
     * 
     */
    private String id;
    /**
     * @return The OCID of the instance.
     * 
     */
    private String instanceId;
    /**
     * @return Whether in-transit encryption for the boot volume&#39;s paravirtualized attachment is enabled or not.
     * 
     */
    private Boolean isPvEncryptionInTransitEnabled;
    /**
     * @return The current state of the boot volume attachment.
     * 
     */
    private String state;
    /**
     * @return The date and time the boot volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the boot volume attachment was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetBootVolumeAttachmentsBootVolumeAttachment() {}
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The OCID of the boot volume.
     * 
     */
    public String bootVolumeId() {
        return this.bootVolumeId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    public String encryptionInTransitType() {
        return this.encryptionInTransitType;
    }
    /**
     * @return The OCID of the boot volume attachment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Whether in-transit encryption for the boot volume&#39;s paravirtualized attachment is enabled or not.
     * 
     */
    public Boolean isPvEncryptionInTransitEnabled() {
        return this.isPvEncryptionInTransitEnabled;
    }
    /**
     * @return The current state of the boot volume attachment.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the boot volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the boot volume attachment was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBootVolumeAttachmentsBootVolumeAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String bootVolumeId;
        private String compartmentId;
        private String displayName;
        private String encryptionInTransitType;
        private String id;
        private String instanceId;
        private Boolean isPvEncryptionInTransitEnabled;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetBootVolumeAttachmentsBootVolumeAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bootVolumeId = defaults.bootVolumeId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.encryptionInTransitType = defaults.encryptionInTransitType;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.isPvEncryptionInTransitEnabled = defaults.isPvEncryptionInTransitEnabled;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeId(String bootVolumeId) {
            if (bootVolumeId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "bootVolumeId");
            }
            this.bootVolumeId = bootVolumeId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionInTransitType(String encryptionInTransitType) {
            if (encryptionInTransitType == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "encryptionInTransitType");
            }
            this.encryptionInTransitType = encryptionInTransitType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder isPvEncryptionInTransitEnabled(Boolean isPvEncryptionInTransitEnabled) {
            if (isPvEncryptionInTransitEnabled == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "isPvEncryptionInTransitEnabled");
            }
            this.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeAttachmentsBootVolumeAttachment", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetBootVolumeAttachmentsBootVolumeAttachment build() {
            final var _resultValue = new GetBootVolumeAttachmentsBootVolumeAttachment();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.bootVolumeId = bootVolumeId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.encryptionInTransitType = encryptionInTransitType;
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
