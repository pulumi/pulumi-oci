// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBootVolumeBootVolumeReplica {
    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The boot volume replica&#39;s Oracle ID (OCID).
     * 
     */
    private String bootVolumeReplicaId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return The OCID of the Vault service master encryption key assigned to the boot volume.
     * 
     */
    private String kmsKeyId;
    private String xrrKmsKeyId;

    private GetBootVolumeBootVolumeReplica() {}
    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The boot volume replica&#39;s Oracle ID (OCID).
     * 
     */
    public String bootVolumeReplicaId() {
        return this.bootVolumeReplicaId;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The OCID of the Vault service master encryption key assigned to the boot volume.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    public String xrrKmsKeyId() {
        return this.xrrKmsKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBootVolumeBootVolumeReplica defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String bootVolumeReplicaId;
        private String displayName;
        private String kmsKeyId;
        private String xrrKmsKeyId;
        public Builder() {}
        public Builder(GetBootVolumeBootVolumeReplica defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bootVolumeReplicaId = defaults.bootVolumeReplicaId;
    	      this.displayName = defaults.displayName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.xrrKmsKeyId = defaults.xrrKmsKeyId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeBootVolumeReplica", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeReplicaId(String bootVolumeReplicaId) {
            if (bootVolumeReplicaId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeBootVolumeReplica", "bootVolumeReplicaId");
            }
            this.bootVolumeReplicaId = bootVolumeReplicaId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeBootVolumeReplica", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeBootVolumeReplica", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder xrrKmsKeyId(String xrrKmsKeyId) {
            if (xrrKmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeBootVolumeReplica", "xrrKmsKeyId");
            }
            this.xrrKmsKeyId = xrrKmsKeyId;
            return this;
        }
        public GetBootVolumeBootVolumeReplica build() {
            final var _resultValue = new GetBootVolumeBootVolumeReplica();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.bootVolumeReplicaId = bootVolumeReplicaId;
            _resultValue.displayName = displayName;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.xrrKmsKeyId = xrrKmsKeyId;
            return _resultValue;
        }
    }
}
