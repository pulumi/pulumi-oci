// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetBootVolumeReplicasBootVolumeReplica;
import com.pulumi.oci.Core.outputs.GetBootVolumeReplicasFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBootVolumeReplicasResult {
    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return The list of boot_volume_replicas.
     * 
     */
    private List<GetBootVolumeReplicasBootVolumeReplica> bootVolumeReplicas;
    /**
     * @return The OCID of the compartment that contains the boot volume replica.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetBootVolumeReplicasFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current state of a boot volume replica.
     * 
     */
    private @Nullable String state;
    private @Nullable String volumeGroupReplicaId;

    private GetBootVolumeReplicasResult() {}
    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The list of boot_volume_replicas.
     * 
     */
    public List<GetBootVolumeReplicasBootVolumeReplica> bootVolumeReplicas() {
        return this.bootVolumeReplicas;
    }
    /**
     * @return The OCID of the compartment that contains the boot volume replica.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetBootVolumeReplicasFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of a boot volume replica.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> volumeGroupReplicaId() {
        return Optional.ofNullable(this.volumeGroupReplicaId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBootVolumeReplicasResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private List<GetBootVolumeReplicasBootVolumeReplica> bootVolumeReplicas;
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetBootVolumeReplicasFilter> filters;
        private String id;
        private @Nullable String state;
        private @Nullable String volumeGroupReplicaId;
        public Builder() {}
        public Builder(GetBootVolumeReplicasResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bootVolumeReplicas = defaults.bootVolumeReplicas;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.volumeGroupReplicaId = defaults.volumeGroupReplicaId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeReplicas(List<GetBootVolumeReplicasBootVolumeReplica> bootVolumeReplicas) {
            this.bootVolumeReplicas = Objects.requireNonNull(bootVolumeReplicas);
            return this;
        }
        public Builder bootVolumeReplicas(GetBootVolumeReplicasBootVolumeReplica... bootVolumeReplicas) {
            return bootVolumeReplicas(List.of(bootVolumeReplicas));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetBootVolumeReplicasFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBootVolumeReplicasFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder volumeGroupReplicaId(@Nullable String volumeGroupReplicaId) {
            this.volumeGroupReplicaId = volumeGroupReplicaId;
            return this;
        }
        public GetBootVolumeReplicasResult build() {
            final var o = new GetBootVolumeReplicasResult();
            o.availabilityDomain = availabilityDomain;
            o.bootVolumeReplicas = bootVolumeReplicas;
            o.compartmentId = compartmentId;
            o.displayName = displayName;
            o.filters = filters;
            o.id = id;
            o.state = state;
            o.volumeGroupReplicaId = volumeGroupReplicaId;
            return o;
        }
    }
}
