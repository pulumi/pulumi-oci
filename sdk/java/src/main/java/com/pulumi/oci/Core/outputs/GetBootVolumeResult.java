// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetBootVolumeAutotunePolicy;
import com.pulumi.oci.Core.outputs.GetBootVolumeBootVolumeReplica;
import com.pulumi.oci.Core.outputs.GetBootVolumeSourceDetail;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBootVolumeResult {
    /**
     * @return The number of Volume Performance Units per GB that this boot volume is effectively tuned to.
     * 
     */
    private String autoTunedVpusPerGb;
    /**
     * @return The list of autotune policies enabled for this volume.
     * 
     */
    private List<GetBootVolumeAutotunePolicy> autotunePolicies;
    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @deprecated
     * The &#39;backup_policy_id&#39; field has been deprecated. Please use the &#39;oci_core_volume_backup_policy_assignment&#39; resource instead.
     * 
     */
    @Deprecated /* The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead. */
    private String backupPolicyId;
    private String bootVolumeId;
    /**
     * @return The list of boot volume replicas of this boot volume
     * 
     */
    private List<GetBootVolumeBootVolumeReplica> bootVolumeReplicas;
    private Boolean bootVolumeReplicasDeletion;
    /**
     * @return The clusterPlacementGroup Id of the volume for volume placement.
     * 
     */
    private String clusterPlacementGroupId;
    /**
     * @return The OCID of the compartment that contains the boot volume.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the boot volume replica.
     * 
     */
    private String id;
    /**
     * @return The image OCID used to create the boot volume.
     * 
     */
    private String imageId;
    /**
     * @return Specifies whether the auto-tune performance is enabled for this boot volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
     * 
     */
    private Boolean isAutoTuneEnabled;
    /**
     * @return Specifies whether the boot volume&#39;s data has finished copying from the source boot volume or boot volume backup.
     * 
     */
    private Boolean isHydrated;
    /**
     * @return The OCID of the Vault service master encryption key assigned to the boot volume.
     * 
     */
    private String kmsKeyId;
    /**
     * @return The size of the boot volume in GBs.
     * 
     */
    private String sizeInGbs;
    /**
     * @return The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `size_in_gbs`.
     * 
     */
    private String sizeInMbs;
    private List<GetBootVolumeSourceDetail> sourceDetails;
    /**
     * @return The current state of a boot volume.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time the boot volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The OCID of the source volume group.
     * 
     */
    private String volumeGroupId;
    /**
     * @return The number of volume performance units (VPUs) that will be applied to this boot volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     */
    private String vpusPerGb;

    private GetBootVolumeResult() {}
    /**
     * @return The number of Volume Performance Units per GB that this boot volume is effectively tuned to.
     * 
     */
    public String autoTunedVpusPerGb() {
        return this.autoTunedVpusPerGb;
    }
    /**
     * @return The list of autotune policies enabled for this volume.
     * 
     */
    public List<GetBootVolumeAutotunePolicy> autotunePolicies() {
        return this.autotunePolicies;
    }
    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @deprecated
     * The &#39;backup_policy_id&#39; field has been deprecated. Please use the &#39;oci_core_volume_backup_policy_assignment&#39; resource instead.
     * 
     */
    @Deprecated /* The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead. */
    public String backupPolicyId() {
        return this.backupPolicyId;
    }
    public String bootVolumeId() {
        return this.bootVolumeId;
    }
    /**
     * @return The list of boot volume replicas of this boot volume
     * 
     */
    public List<GetBootVolumeBootVolumeReplica> bootVolumeReplicas() {
        return this.bootVolumeReplicas;
    }
    public Boolean bootVolumeReplicasDeletion() {
        return this.bootVolumeReplicasDeletion;
    }
    /**
     * @return The clusterPlacementGroup Id of the volume for volume placement.
     * 
     */
    public String clusterPlacementGroupId() {
        return this.clusterPlacementGroupId;
    }
    /**
     * @return The OCID of the compartment that contains the boot volume.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the boot volume replica.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The image OCID used to create the boot volume.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return Specifies whether the auto-tune performance is enabled for this boot volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
     * 
     */
    public Boolean isAutoTuneEnabled() {
        return this.isAutoTuneEnabled;
    }
    /**
     * @return Specifies whether the boot volume&#39;s data has finished copying from the source boot volume or boot volume backup.
     * 
     */
    public Boolean isHydrated() {
        return this.isHydrated;
    }
    /**
     * @return The OCID of the Vault service master encryption key assigned to the boot volume.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The size of the boot volume in GBs.
     * 
     */
    public String sizeInGbs() {
        return this.sizeInGbs;
    }
    /**
     * @return The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `size_in_gbs`.
     * 
     */
    public String sizeInMbs() {
        return this.sizeInMbs;
    }
    public List<GetBootVolumeSourceDetail> sourceDetails() {
        return this.sourceDetails;
    }
    /**
     * @return The current state of a boot volume.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the boot volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The OCID of the source volume group.
     * 
     */
    public String volumeGroupId() {
        return this.volumeGroupId;
    }
    /**
     * @return The number of volume performance units (VPUs) that will be applied to this boot volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     */
    public String vpusPerGb() {
        return this.vpusPerGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBootVolumeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autoTunedVpusPerGb;
        private List<GetBootVolumeAutotunePolicy> autotunePolicies;
        private String availabilityDomain;
        private String backupPolicyId;
        private String bootVolumeId;
        private List<GetBootVolumeBootVolumeReplica> bootVolumeReplicas;
        private Boolean bootVolumeReplicasDeletion;
        private String clusterPlacementGroupId;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String imageId;
        private Boolean isAutoTuneEnabled;
        private Boolean isHydrated;
        private String kmsKeyId;
        private String sizeInGbs;
        private String sizeInMbs;
        private List<GetBootVolumeSourceDetail> sourceDetails;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String volumeGroupId;
        private String vpusPerGb;
        public Builder() {}
        public Builder(GetBootVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoTunedVpusPerGb = defaults.autoTunedVpusPerGb;
    	      this.autotunePolicies = defaults.autotunePolicies;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.backupPolicyId = defaults.backupPolicyId;
    	      this.bootVolumeId = defaults.bootVolumeId;
    	      this.bootVolumeReplicas = defaults.bootVolumeReplicas;
    	      this.bootVolumeReplicasDeletion = defaults.bootVolumeReplicasDeletion;
    	      this.clusterPlacementGroupId = defaults.clusterPlacementGroupId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.isAutoTuneEnabled = defaults.isAutoTuneEnabled;
    	      this.isHydrated = defaults.isHydrated;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.sizeInGbs = defaults.sizeInGbs;
    	      this.sizeInMbs = defaults.sizeInMbs;
    	      this.sourceDetails = defaults.sourceDetails;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.volumeGroupId = defaults.volumeGroupId;
    	      this.vpusPerGb = defaults.vpusPerGb;
        }

        @CustomType.Setter
        public Builder autoTunedVpusPerGb(String autoTunedVpusPerGb) {
            if (autoTunedVpusPerGb == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "autoTunedVpusPerGb");
            }
            this.autoTunedVpusPerGb = autoTunedVpusPerGb;
            return this;
        }
        @CustomType.Setter
        public Builder autotunePolicies(List<GetBootVolumeAutotunePolicy> autotunePolicies) {
            if (autotunePolicies == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "autotunePolicies");
            }
            this.autotunePolicies = autotunePolicies;
            return this;
        }
        public Builder autotunePolicies(GetBootVolumeAutotunePolicy... autotunePolicies) {
            return autotunePolicies(List.of(autotunePolicies));
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder backupPolicyId(String backupPolicyId) {
            if (backupPolicyId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "backupPolicyId");
            }
            this.backupPolicyId = backupPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeId(String bootVolumeId) {
            if (bootVolumeId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "bootVolumeId");
            }
            this.bootVolumeId = bootVolumeId;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeReplicas(List<GetBootVolumeBootVolumeReplica> bootVolumeReplicas) {
            if (bootVolumeReplicas == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "bootVolumeReplicas");
            }
            this.bootVolumeReplicas = bootVolumeReplicas;
            return this;
        }
        public Builder bootVolumeReplicas(GetBootVolumeBootVolumeReplica... bootVolumeReplicas) {
            return bootVolumeReplicas(List.of(bootVolumeReplicas));
        }
        @CustomType.Setter
        public Builder bootVolumeReplicasDeletion(Boolean bootVolumeReplicasDeletion) {
            if (bootVolumeReplicasDeletion == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "bootVolumeReplicasDeletion");
            }
            this.bootVolumeReplicasDeletion = bootVolumeReplicasDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPlacementGroupId(String clusterPlacementGroupId) {
            if (clusterPlacementGroupId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "clusterPlacementGroupId");
            }
            this.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoTuneEnabled(Boolean isAutoTuneEnabled) {
            if (isAutoTuneEnabled == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "isAutoTuneEnabled");
            }
            this.isAutoTuneEnabled = isAutoTuneEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isHydrated(Boolean isHydrated) {
            if (isHydrated == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "isHydrated");
            }
            this.isHydrated = isHydrated;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInGbs(String sizeInGbs) {
            if (sizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "sizeInGbs");
            }
            this.sizeInGbs = sizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInMbs(String sizeInMbs) {
            if (sizeInMbs == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "sizeInMbs");
            }
            this.sizeInMbs = sizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDetails(List<GetBootVolumeSourceDetail> sourceDetails) {
            if (sourceDetails == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "sourceDetails");
            }
            this.sourceDetails = sourceDetails;
            return this;
        }
        public Builder sourceDetails(GetBootVolumeSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder volumeGroupId(String volumeGroupId) {
            if (volumeGroupId == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "volumeGroupId");
            }
            this.volumeGroupId = volumeGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder vpusPerGb(String vpusPerGb) {
            if (vpusPerGb == null) {
              throw new MissingRequiredPropertyException("GetBootVolumeResult", "vpusPerGb");
            }
            this.vpusPerGb = vpusPerGb;
            return this;
        }
        public GetBootVolumeResult build() {
            final var _resultValue = new GetBootVolumeResult();
            _resultValue.autoTunedVpusPerGb = autoTunedVpusPerGb;
            _resultValue.autotunePolicies = autotunePolicies;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.backupPolicyId = backupPolicyId;
            _resultValue.bootVolumeId = bootVolumeId;
            _resultValue.bootVolumeReplicas = bootVolumeReplicas;
            _resultValue.bootVolumeReplicasDeletion = bootVolumeReplicasDeletion;
            _resultValue.clusterPlacementGroupId = clusterPlacementGroupId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            _resultValue.isAutoTuneEnabled = isAutoTuneEnabled;
            _resultValue.isHydrated = isHydrated;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.sizeInGbs = sizeInGbs;
            _resultValue.sizeInMbs = sizeInMbs;
            _resultValue.sourceDetails = sourceDetails;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.volumeGroupId = volumeGroupId;
            _resultValue.vpusPerGb = vpusPerGb;
            return _resultValue;
        }
    }
}
