// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetComputeGpuMemoryFabricResult {
    /**
     * @return Additional data that can be exposed to the customer. Right now it will include the switch tray ids.
     * 
     */
    private Map<String,String> additionalData;
    /**
     * @return The total number of available bare metal hosts located in this compute GPU memory fabric.
     * 
     */
    private String availableHostCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
     * 
     */
    private String compartmentId;
    private String computeGpuMemoryFabricId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique HPC Island
     * 
     */
    private String computeHpcIslandId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique Local Block
     * 
     */
    private String computeLocalBlockId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique Network Block
     * 
     */
    private String computeNetworkBlockId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return The health state of the GPU memory fabric
     * 
     */
    private String fabricHealth;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The total number of healthy bare metal hosts located in this compute GPU memory fabric.
     * 
     */
    private String healthyHostCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Customer-unique GPU memory fabric
     * 
     */
    private String id;
    /**
     * @return The lifecycle state of the GPU memory fabric
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time that the compute GPU memory fabric record was created, in the format defined by [RFC3339] (https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The total number of bare metal hosts located in this compute GPU memory fabric.
     * 
     */
    private String totalHostCount;

    private GetComputeGpuMemoryFabricResult() {}
    /**
     * @return Additional data that can be exposed to the customer. Right now it will include the switch tray ids.
     * 
     */
    public Map<String,String> additionalData() {
        return this.additionalData;
    }
    /**
     * @return The total number of available bare metal hosts located in this compute GPU memory fabric.
     * 
     */
    public String availableHostCount() {
        return this.availableHostCount;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String computeGpuMemoryFabricId() {
        return this.computeGpuMemoryFabricId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique HPC Island
     * 
     */
    public String computeHpcIslandId() {
        return this.computeHpcIslandId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique Local Block
     * 
     */
    public String computeLocalBlockId() {
        return this.computeLocalBlockId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for Customer-unique Network Block
     * 
     */
    public String computeNetworkBlockId() {
        return this.computeNetworkBlockId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The health state of the GPU memory fabric
     * 
     */
    public String fabricHealth() {
        return this.fabricHealth;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The total number of healthy bare metal hosts located in this compute GPU memory fabric.
     * 
     */
    public String healthyHostCount() {
        return this.healthyHostCount;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Customer-unique GPU memory fabric
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The lifecycle state of the GPU memory fabric
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time that the compute GPU memory fabric record was created, in the format defined by [RFC3339] (https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The total number of bare metal hosts located in this compute GPU memory fabric.
     * 
     */
    public String totalHostCount() {
        return this.totalHostCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeGpuMemoryFabricResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> additionalData;
        private String availableHostCount;
        private String compartmentId;
        private String computeGpuMemoryFabricId;
        private String computeHpcIslandId;
        private String computeLocalBlockId;
        private String computeNetworkBlockId;
        private Map<String,String> definedTags;
        private String displayName;
        private String fabricHealth;
        private Map<String,String> freeformTags;
        private String healthyHostCount;
        private String id;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String totalHostCount;
        public Builder() {}
        public Builder(GetComputeGpuMemoryFabricResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalData = defaults.additionalData;
    	      this.availableHostCount = defaults.availableHostCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeGpuMemoryFabricId = defaults.computeGpuMemoryFabricId;
    	      this.computeHpcIslandId = defaults.computeHpcIslandId;
    	      this.computeLocalBlockId = defaults.computeLocalBlockId;
    	      this.computeNetworkBlockId = defaults.computeNetworkBlockId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.fabricHealth = defaults.fabricHealth;
    	      this.freeformTags = defaults.freeformTags;
    	      this.healthyHostCount = defaults.healthyHostCount;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.totalHostCount = defaults.totalHostCount;
        }

        @CustomType.Setter
        public Builder additionalData(Map<String,String> additionalData) {
            if (additionalData == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "additionalData");
            }
            this.additionalData = additionalData;
            return this;
        }
        @CustomType.Setter
        public Builder availableHostCount(String availableHostCount) {
            if (availableHostCount == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "availableHostCount");
            }
            this.availableHostCount = availableHostCount;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeGpuMemoryFabricId(String computeGpuMemoryFabricId) {
            if (computeGpuMemoryFabricId == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "computeGpuMemoryFabricId");
            }
            this.computeGpuMemoryFabricId = computeGpuMemoryFabricId;
            return this;
        }
        @CustomType.Setter
        public Builder computeHpcIslandId(String computeHpcIslandId) {
            if (computeHpcIslandId == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "computeHpcIslandId");
            }
            this.computeHpcIslandId = computeHpcIslandId;
            return this;
        }
        @CustomType.Setter
        public Builder computeLocalBlockId(String computeLocalBlockId) {
            if (computeLocalBlockId == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "computeLocalBlockId");
            }
            this.computeLocalBlockId = computeLocalBlockId;
            return this;
        }
        @CustomType.Setter
        public Builder computeNetworkBlockId(String computeNetworkBlockId) {
            if (computeNetworkBlockId == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "computeNetworkBlockId");
            }
            this.computeNetworkBlockId = computeNetworkBlockId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fabricHealth(String fabricHealth) {
            if (fabricHealth == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "fabricHealth");
            }
            this.fabricHealth = fabricHealth;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder healthyHostCount(String healthyHostCount) {
            if (healthyHostCount == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "healthyHostCount");
            }
            this.healthyHostCount = healthyHostCount;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder totalHostCount(String totalHostCount) {
            if (totalHostCount == null) {
              throw new MissingRequiredPropertyException("GetComputeGpuMemoryFabricResult", "totalHostCount");
            }
            this.totalHostCount = totalHostCount;
            return this;
        }
        public GetComputeGpuMemoryFabricResult build() {
            final var _resultValue = new GetComputeGpuMemoryFabricResult();
            _resultValue.additionalData = additionalData;
            _resultValue.availableHostCount = availableHostCount;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeGpuMemoryFabricId = computeGpuMemoryFabricId;
            _resultValue.computeHpcIslandId = computeHpcIslandId;
            _resultValue.computeLocalBlockId = computeLocalBlockId;
            _resultValue.computeNetworkBlockId = computeNetworkBlockId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.fabricHealth = fabricHealth;
            _resultValue.freeformTags = freeformTags;
            _resultValue.healthyHostCount = healthyHostCount;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.totalHostCount = totalHostCount;
            return _resultValue;
        }
    }
}
