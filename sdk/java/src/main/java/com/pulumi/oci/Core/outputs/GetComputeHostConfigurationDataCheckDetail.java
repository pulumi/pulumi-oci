// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetComputeHostConfigurationDataCheckDetail {
    /**
     * @return Configuration state of the Compute Bare Metal Host.
     * 
     */
    private String configurationState;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Customer-unique firmware bundle associated with the Host Configuration.
     * 
     */
    private String firmwareBundleId;
    /**
     * @return Preferred recycle level for hosts associated with the reservation config.
     * * `SKIP_RECYCLE` - Skips host wipe.
     * * `FULL_RECYCLE` - Does not skip host wipe. This is the default behavior.
     * 
     */
    private String recycleLevel;
    /**
     * @return The type of configuration
     * 
     */
    private String type;

    private GetComputeHostConfigurationDataCheckDetail() {}
    /**
     * @return Configuration state of the Compute Bare Metal Host.
     * 
     */
    public String configurationState() {
        return this.configurationState;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Customer-unique firmware bundle associated with the Host Configuration.
     * 
     */
    public String firmwareBundleId() {
        return this.firmwareBundleId;
    }
    /**
     * @return Preferred recycle level for hosts associated with the reservation config.
     * * `SKIP_RECYCLE` - Skips host wipe.
     * * `FULL_RECYCLE` - Does not skip host wipe. This is the default behavior.
     * 
     */
    public String recycleLevel() {
        return this.recycleLevel;
    }
    /**
     * @return The type of configuration
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeHostConfigurationDataCheckDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationState;
        private String firmwareBundleId;
        private String recycleLevel;
        private String type;
        public Builder() {}
        public Builder(GetComputeHostConfigurationDataCheckDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationState = defaults.configurationState;
    	      this.firmwareBundleId = defaults.firmwareBundleId;
    	      this.recycleLevel = defaults.recycleLevel;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder configurationState(String configurationState) {
            if (configurationState == null) {
              throw new MissingRequiredPropertyException("GetComputeHostConfigurationDataCheckDetail", "configurationState");
            }
            this.configurationState = configurationState;
            return this;
        }
        @CustomType.Setter
        public Builder firmwareBundleId(String firmwareBundleId) {
            if (firmwareBundleId == null) {
              throw new MissingRequiredPropertyException("GetComputeHostConfigurationDataCheckDetail", "firmwareBundleId");
            }
            this.firmwareBundleId = firmwareBundleId;
            return this;
        }
        @CustomType.Setter
        public Builder recycleLevel(String recycleLevel) {
            if (recycleLevel == null) {
              throw new MissingRequiredPropertyException("GetComputeHostConfigurationDataCheckDetail", "recycleLevel");
            }
            this.recycleLevel = recycleLevel;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetComputeHostConfigurationDataCheckDetail", "type");
            }
            this.type = type;
            return this;
        }
        public GetComputeHostConfigurationDataCheckDetail build() {
            final var _resultValue = new GetComputeHostConfigurationDataCheckDetail();
            _resultValue.configurationState = configurationState;
            _resultValue.firmwareBundleId = firmwareBundleId;
            _resultValue.recycleLevel = recycleLevel;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
