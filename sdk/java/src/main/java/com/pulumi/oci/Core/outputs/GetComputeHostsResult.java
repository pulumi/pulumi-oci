// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetComputeHostsComputeHostCollection;
import com.pulumi.oci.Core.outputs.GetComputeHostsFilter;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetComputeHostsResult {
    /**
     * @return The availability domain of the compute host.  Example: `Uocm:US-CHICAGO-1-AD-2`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The list of compute_host_collection.
     * 
     */
    private List<GetComputeHostsComputeHostCollection> computeHostCollections;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute host group this host was attached to at the time of recycle.
     * 
     */
    private @Nullable String computeHostGroupId;
    private @Nullable String computeHostHealth;
    private @Nullable String computeHostLifecycleState;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetComputeHostsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A free-form description detailing why the host is in its current state.
     * 
     */
    private Map<String,String> lifecycleDetails;
    private @Nullable String networkResourceId;

    private GetComputeHostsResult() {}
    /**
     * @return The availability domain of the compute host.  Example: `Uocm:US-CHICAGO-1-AD-2`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of compute_host_collection.
     * 
     */
    public List<GetComputeHostsComputeHostCollection> computeHostCollections() {
        return this.computeHostCollections;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute host group this host was attached to at the time of recycle.
     * 
     */
    public Optional<String> computeHostGroupId() {
        return Optional.ofNullable(this.computeHostGroupId);
    }
    public Optional<String> computeHostHealth() {
        return Optional.ofNullable(this.computeHostHealth);
    }
    public Optional<String> computeHostLifecycleState() {
        return Optional.ofNullable(this.computeHostLifecycleState);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetComputeHostsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A free-form description detailing why the host is in its current state.
     * 
     */
    public Map<String,String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public Optional<String> networkResourceId() {
        return Optional.ofNullable(this.networkResourceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeHostsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private List<GetComputeHostsComputeHostCollection> computeHostCollections;
        private @Nullable String computeHostGroupId;
        private @Nullable String computeHostHealth;
        private @Nullable String computeHostLifecycleState;
        private @Nullable String displayName;
        private @Nullable List<GetComputeHostsFilter> filters;
        private String id;
        private Map<String,String> lifecycleDetails;
        private @Nullable String networkResourceId;
        public Builder() {}
        public Builder(GetComputeHostsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeHostCollections = defaults.computeHostCollections;
    	      this.computeHostGroupId = defaults.computeHostGroupId;
    	      this.computeHostHealth = defaults.computeHostHealth;
    	      this.computeHostLifecycleState = defaults.computeHostLifecycleState;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.networkResourceId = defaults.networkResourceId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {

            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetComputeHostsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeHostCollections(List<GetComputeHostsComputeHostCollection> computeHostCollections) {
            if (computeHostCollections == null) {
              throw new MissingRequiredPropertyException("GetComputeHostsResult", "computeHostCollections");
            }
            this.computeHostCollections = computeHostCollections;
            return this;
        }
        public Builder computeHostCollections(GetComputeHostsComputeHostCollection... computeHostCollections) {
            return computeHostCollections(List.of(computeHostCollections));
        }
        @CustomType.Setter
        public Builder computeHostGroupId(@Nullable String computeHostGroupId) {

            this.computeHostGroupId = computeHostGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder computeHostHealth(@Nullable String computeHostHealth) {

            this.computeHostHealth = computeHostHealth;
            return this;
        }
        @CustomType.Setter
        public Builder computeHostLifecycleState(@Nullable String computeHostLifecycleState) {

            this.computeHostLifecycleState = computeHostLifecycleState;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetComputeHostsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetComputeHostsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetComputeHostsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(Map<String,String> lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetComputeHostsResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder networkResourceId(@Nullable String networkResourceId) {

            this.networkResourceId = networkResourceId;
            return this;
        }
        public GetComputeHostsResult build() {
            final var _resultValue = new GetComputeHostsResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeHostCollections = computeHostCollections;
            _resultValue.computeHostGroupId = computeHostGroupId;
            _resultValue.computeHostHealth = computeHostHealth;
            _resultValue.computeHostLifecycleState = computeHostLifecycleState;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.networkResourceId = networkResourceId;
            return _resultValue;
        }
    }
}
