// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetComputeImageCapabilitySchemaResult {
    /**
     * @return The OCID of the compartment containing the compute global image capability schema
     * 
     */
    private String compartmentId;
    /**
     * @return The ocid of the compute global image capability schema
     * 
     */
    private String computeGlobalImageCapabilitySchemaId;
    /**
     * @return The name of the compute global image capability schema version
     * 
     */
    private String computeGlobalImageCapabilitySchemaVersionName;
    private String computeImageCapabilitySchemaId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The compute image capability schema [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String id;
    /**
     * @return The OCID of the image associated with this compute image capability schema
     * 
     */
    private String imageId;
    private @Nullable String isMergeEnabled;
    /**
     * @return A mapping of each capability name to its ImageCapabilityDescriptor.
     * 
     */
    private Map<String,String> schemaData;
    /**
     * @return The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetComputeImageCapabilitySchemaResult() {}
    /**
     * @return The OCID of the compartment containing the compute global image capability schema
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The ocid of the compute global image capability schema
     * 
     */
    public String computeGlobalImageCapabilitySchemaId() {
        return this.computeGlobalImageCapabilitySchemaId;
    }
    /**
     * @return The name of the compute global image capability schema version
     * 
     */
    public String computeGlobalImageCapabilitySchemaVersionName() {
        return this.computeGlobalImageCapabilitySchemaVersionName;
    }
    public String computeImageCapabilitySchemaId() {
        return this.computeImageCapabilitySchemaId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The compute image capability schema [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the image associated with this compute image capability schema
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    public Optional<String> isMergeEnabled() {
        return Optional.ofNullable(this.isMergeEnabled);
    }
    /**
     * @return A mapping of each capability name to its ImageCapabilityDescriptor.
     * 
     */
    public Map<String,String> schemaData() {
        return this.schemaData;
    }
    /**
     * @return The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeImageCapabilitySchemaResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String computeGlobalImageCapabilitySchemaId;
        private String computeGlobalImageCapabilitySchemaVersionName;
        private String computeImageCapabilitySchemaId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String imageId;
        private @Nullable String isMergeEnabled;
        private Map<String,String> schemaData;
        private String timeCreated;
        public Builder() {}
        public Builder(GetComputeImageCapabilitySchemaResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeGlobalImageCapabilitySchemaId = defaults.computeGlobalImageCapabilitySchemaId;
    	      this.computeGlobalImageCapabilitySchemaVersionName = defaults.computeGlobalImageCapabilitySchemaVersionName;
    	      this.computeImageCapabilitySchemaId = defaults.computeImageCapabilitySchemaId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.isMergeEnabled = defaults.isMergeEnabled;
    	      this.schemaData = defaults.schemaData;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeGlobalImageCapabilitySchemaId(String computeGlobalImageCapabilitySchemaId) {
            if (computeGlobalImageCapabilitySchemaId == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "computeGlobalImageCapabilitySchemaId");
            }
            this.computeGlobalImageCapabilitySchemaId = computeGlobalImageCapabilitySchemaId;
            return this;
        }
        @CustomType.Setter
        public Builder computeGlobalImageCapabilitySchemaVersionName(String computeGlobalImageCapabilitySchemaVersionName) {
            if (computeGlobalImageCapabilitySchemaVersionName == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "computeGlobalImageCapabilitySchemaVersionName");
            }
            this.computeGlobalImageCapabilitySchemaVersionName = computeGlobalImageCapabilitySchemaVersionName;
            return this;
        }
        @CustomType.Setter
        public Builder computeImageCapabilitySchemaId(String computeImageCapabilitySchemaId) {
            if (computeImageCapabilitySchemaId == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "computeImageCapabilitySchemaId");
            }
            this.computeImageCapabilitySchemaId = computeImageCapabilitySchemaId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder isMergeEnabled(@Nullable String isMergeEnabled) {

            this.isMergeEnabled = isMergeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder schemaData(Map<String,String> schemaData) {
            if (schemaData == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "schemaData");
            }
            this.schemaData = schemaData;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemaResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetComputeImageCapabilitySchemaResult build() {
            final var _resultValue = new GetComputeImageCapabilitySchemaResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeGlobalImageCapabilitySchemaId = computeGlobalImageCapabilitySchemaId;
            _resultValue.computeGlobalImageCapabilitySchemaVersionName = computeGlobalImageCapabilitySchemaVersionName;
            _resultValue.computeImageCapabilitySchemaId = computeImageCapabilitySchemaId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            _resultValue.isMergeEnabled = isMergeEnabled;
            _resultValue.schemaData = schemaData;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
