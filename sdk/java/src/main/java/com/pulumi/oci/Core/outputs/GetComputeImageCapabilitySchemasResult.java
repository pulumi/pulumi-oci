// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetComputeImageCapabilitySchemasComputeImageCapabilitySchema;
import com.pulumi.oci.Core.outputs.GetComputeImageCapabilitySchemasFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetComputeImageCapabilitySchemasResult {
    /**
     * @return The OCID of the compartment containing the compute global image capability schema
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The list of compute_image_capability_schemas.
     * 
     */
    private List<GetComputeImageCapabilitySchemasComputeImageCapabilitySchema> computeImageCapabilitySchemas;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetComputeImageCapabilitySchemasFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The OCID of the image associated with this compute image capability schema
     * 
     */
    private @Nullable String imageId;

    private GetComputeImageCapabilitySchemasResult() {}
    /**
     * @return The OCID of the compartment containing the compute global image capability schema
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The list of compute_image_capability_schemas.
     * 
     */
    public List<GetComputeImageCapabilitySchemasComputeImageCapabilitySchema> computeImageCapabilitySchemas() {
        return this.computeImageCapabilitySchemas;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetComputeImageCapabilitySchemasFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the image associated with this compute image capability schema
     * 
     */
    public Optional<String> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeImageCapabilitySchemasResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private List<GetComputeImageCapabilitySchemasComputeImageCapabilitySchema> computeImageCapabilitySchemas;
        private @Nullable String displayName;
        private @Nullable List<GetComputeImageCapabilitySchemasFilter> filters;
        private String id;
        private @Nullable String imageId;
        public Builder() {}
        public Builder(GetComputeImageCapabilitySchemasResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeImageCapabilitySchemas = defaults.computeImageCapabilitySchemas;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeImageCapabilitySchemas(List<GetComputeImageCapabilitySchemasComputeImageCapabilitySchema> computeImageCapabilitySchemas) {
            if (computeImageCapabilitySchemas == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemasResult", "computeImageCapabilitySchemas");
            }
            this.computeImageCapabilitySchemas = computeImageCapabilitySchemas;
            return this;
        }
        public Builder computeImageCapabilitySchemas(GetComputeImageCapabilitySchemasComputeImageCapabilitySchema... computeImageCapabilitySchemas) {
            return computeImageCapabilitySchemas(List.of(computeImageCapabilitySchemas));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetComputeImageCapabilitySchemasFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetComputeImageCapabilitySchemasFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetComputeImageCapabilitySchemasResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(@Nullable String imageId) {

            this.imageId = imageId;
            return this;
        }
        public GetComputeImageCapabilitySchemasResult build() {
            final var _resultValue = new GetComputeImageCapabilitySchemasResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeImageCapabilitySchemas = computeImageCapabilitySchemas;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            return _resultValue;
        }
    }
}
