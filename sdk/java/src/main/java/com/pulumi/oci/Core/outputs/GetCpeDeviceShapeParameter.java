// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCpeDeviceShapeParameter {
    /**
     * @return A descriptive label for the question (for example, to display in a form in a graphical interface). Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return A description or explanation of the question, to help the customer answer accurately.
     * 
     */
    private String explanation;
    /**
     * @return A string that identifies the question.
     * 
     */
    private String key;

    private GetCpeDeviceShapeParameter() {}
    /**
     * @return A descriptive label for the question (for example, to display in a form in a graphical interface). Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A description or explanation of the question, to help the customer answer accurately.
     * 
     */
    public String explanation() {
        return this.explanation;
    }
    /**
     * @return A string that identifies the question.
     * 
     */
    public String key() {
        return this.key;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCpeDeviceShapeParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String explanation;
        private String key;
        public Builder() {}
        public Builder(GetCpeDeviceShapeParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.explanation = defaults.explanation;
    	      this.key = defaults.key;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCpeDeviceShapeParameter", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder explanation(String explanation) {
            if (explanation == null) {
              throw new MissingRequiredPropertyException("GetCpeDeviceShapeParameter", "explanation");
            }
            this.explanation = explanation;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetCpeDeviceShapeParameter", "key");
            }
            this.key = key;
            return this;
        }
        public GetCpeDeviceShapeParameter build() {
            final var _resultValue = new GetCpeDeviceShapeParameter();
            _resultValue.displayName = displayName;
            _resultValue.explanation = explanation;
            _resultValue.key = key;
            return _resultValue;
        }
    }
}
