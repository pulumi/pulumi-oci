// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetCrossConnectGroupMacsecPropertyPrimaryKey;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCrossConnectGroupMacsecProperty {
    /**
     * @return Type of encryption cipher suite to use for the MACsec connection.
     * 
     */
    private @Nullable String encryptionCipher;
    /**
     * @return Indicates whether unencrypted traffic is allowed if MACsec Key Agreement protocol (MKA) fails.
     * 
     */
    private @Nullable Boolean isUnprotectedTrafficAllowed;
    /**
     * @return An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
     * 
     */
    private @Nullable List<GetCrossConnectGroupMacsecPropertyPrimaryKey> primaryKeys;
    /**
     * @return The cross-connect group&#39;s current state.
     * 
     */
    private @Nullable String state;

    private GetCrossConnectGroupMacsecProperty() {}
    /**
     * @return Type of encryption cipher suite to use for the MACsec connection.
     * 
     */
    public Optional<String> encryptionCipher() {
        return Optional.ofNullable(this.encryptionCipher);
    }
    /**
     * @return Indicates whether unencrypted traffic is allowed if MACsec Key Agreement protocol (MKA) fails.
     * 
     */
    public Optional<Boolean> isUnprotectedTrafficAllowed() {
        return Optional.ofNullable(this.isUnprotectedTrafficAllowed);
    }
    /**
     * @return An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
     * 
     */
    public List<GetCrossConnectGroupMacsecPropertyPrimaryKey> primaryKeys() {
        return this.primaryKeys == null ? List.of() : this.primaryKeys;
    }
    /**
     * @return The cross-connect group&#39;s current state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCrossConnectGroupMacsecProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String encryptionCipher;
        private @Nullable Boolean isUnprotectedTrafficAllowed;
        private @Nullable List<GetCrossConnectGroupMacsecPropertyPrimaryKey> primaryKeys;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetCrossConnectGroupMacsecProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionCipher = defaults.encryptionCipher;
    	      this.isUnprotectedTrafficAllowed = defaults.isUnprotectedTrafficAllowed;
    	      this.primaryKeys = defaults.primaryKeys;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder encryptionCipher(@Nullable String encryptionCipher) {
            this.encryptionCipher = encryptionCipher;
            return this;
        }
        @CustomType.Setter
        public Builder isUnprotectedTrafficAllowed(@Nullable Boolean isUnprotectedTrafficAllowed) {
            this.isUnprotectedTrafficAllowed = isUnprotectedTrafficAllowed;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKeys(@Nullable List<GetCrossConnectGroupMacsecPropertyPrimaryKey> primaryKeys) {
            this.primaryKeys = primaryKeys;
            return this;
        }
        public Builder primaryKeys(GetCrossConnectGroupMacsecPropertyPrimaryKey... primaryKeys) {
            return primaryKeys(List.of(primaryKeys));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetCrossConnectGroupMacsecProperty build() {
            final var o = new GetCrossConnectGroupMacsecProperty();
            o.encryptionCipher = encryptionCipher;
            o.isUnprotectedTrafficAllowed = isUnprotectedTrafficAllowed;
            o.primaryKeys = primaryKeys;
            o.state = state;
            return o;
        }
    }
}
