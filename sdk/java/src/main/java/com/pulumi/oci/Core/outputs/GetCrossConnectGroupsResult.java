// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetCrossConnectGroupsCrossConnectGroup;
import com.pulumi.oci.Core.outputs.GetCrossConnectGroupsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCrossConnectGroupsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the cross-connect group.
     * 
     */
    private String compartmentId;
    /**
     * @return The list of cross_connect_groups.
     * 
     */
    private List<GetCrossConnectGroupsCrossConnectGroup> crossConnectGroups;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetCrossConnectGroupsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The cross-connect group&#39;s current state.
     * 
     */
    private @Nullable String state;

    private GetCrossConnectGroupsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the cross-connect group.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of cross_connect_groups.
     * 
     */
    public List<GetCrossConnectGroupsCrossConnectGroup> crossConnectGroups() {
        return this.crossConnectGroups;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetCrossConnectGroupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The cross-connect group&#39;s current state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCrossConnectGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetCrossConnectGroupsCrossConnectGroup> crossConnectGroups;
        private @Nullable String displayName;
        private @Nullable List<GetCrossConnectGroupsFilter> filters;
        private String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetCrossConnectGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.crossConnectGroups = defaults.crossConnectGroups;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder crossConnectGroups(List<GetCrossConnectGroupsCrossConnectGroup> crossConnectGroups) {
            this.crossConnectGroups = Objects.requireNonNull(crossConnectGroups);
            return this;
        }
        public Builder crossConnectGroups(GetCrossConnectGroupsCrossConnectGroup... crossConnectGroups) {
            return crossConnectGroups(List.of(crossConnectGroups));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetCrossConnectGroupsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetCrossConnectGroupsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetCrossConnectGroupsResult build() {
            final var _resultValue = new GetCrossConnectGroupsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.crossConnectGroups = crossConnectGroups;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
