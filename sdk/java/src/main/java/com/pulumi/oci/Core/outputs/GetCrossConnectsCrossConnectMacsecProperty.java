// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCrossConnectsCrossConnectMacsecProperty {
    /**
     * @return Type of encryption cipher suite to use for the MACsec connection.
     * 
     */
    private String encryptionCipher;
    /**
     * @return Indicates whether unencrypted traffic is allowed if MACsec Key Agreement protocol (MKA) fails.
     * 
     */
    private Boolean isUnprotectedTrafficAllowed;
    /**
     * @return An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
     * 
     */
    private List<GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey> primaryKeys;
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    private String state;

    private GetCrossConnectsCrossConnectMacsecProperty() {}
    /**
     * @return Type of encryption cipher suite to use for the MACsec connection.
     * 
     */
    public String encryptionCipher() {
        return this.encryptionCipher;
    }
    /**
     * @return Indicates whether unencrypted traffic is allowed if MACsec Key Agreement protocol (MKA) fails.
     * 
     */
    public Boolean isUnprotectedTrafficAllowed() {
        return this.isUnprotectedTrafficAllowed;
    }
    /**
     * @return An object defining the Secrets-in-Vault OCIDs representing the MACsec key.
     * 
     */
    public List<GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey> primaryKeys() {
        return this.primaryKeys;
    }
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCrossConnectsCrossConnectMacsecProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String encryptionCipher;
        private Boolean isUnprotectedTrafficAllowed;
        private List<GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey> primaryKeys;
        private String state;
        public Builder() {}
        public Builder(GetCrossConnectsCrossConnectMacsecProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionCipher = defaults.encryptionCipher;
    	      this.isUnprotectedTrafficAllowed = defaults.isUnprotectedTrafficAllowed;
    	      this.primaryKeys = defaults.primaryKeys;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder encryptionCipher(String encryptionCipher) {
            if (encryptionCipher == null) {
              throw new MissingRequiredPropertyException("GetCrossConnectsCrossConnectMacsecProperty", "encryptionCipher");
            }
            this.encryptionCipher = encryptionCipher;
            return this;
        }
        @CustomType.Setter
        public Builder isUnprotectedTrafficAllowed(Boolean isUnprotectedTrafficAllowed) {
            if (isUnprotectedTrafficAllowed == null) {
              throw new MissingRequiredPropertyException("GetCrossConnectsCrossConnectMacsecProperty", "isUnprotectedTrafficAllowed");
            }
            this.isUnprotectedTrafficAllowed = isUnprotectedTrafficAllowed;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKeys(List<GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey> primaryKeys) {
            if (primaryKeys == null) {
              throw new MissingRequiredPropertyException("GetCrossConnectsCrossConnectMacsecProperty", "primaryKeys");
            }
            this.primaryKeys = primaryKeys;
            return this;
        }
        public Builder primaryKeys(GetCrossConnectsCrossConnectMacsecPropertyPrimaryKey... primaryKeys) {
            return primaryKeys(List.of(primaryKeys));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCrossConnectsCrossConnectMacsecProperty", "state");
            }
            this.state = state;
            return this;
        }
        public GetCrossConnectsCrossConnectMacsecProperty build() {
            final var _resultValue = new GetCrossConnectsCrossConnectMacsecProperty();
            _resultValue.encryptionCipher = encryptionCipher;
            _resultValue.isUnprotectedTrafficAllowed = isUnprotectedTrafficAllowed;
            _resultValue.primaryKeys = primaryKeys;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
