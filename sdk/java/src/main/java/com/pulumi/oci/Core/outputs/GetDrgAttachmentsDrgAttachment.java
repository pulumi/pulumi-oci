// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetDrgAttachmentsDrgAttachmentNetworkDetail;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDrgAttachmentsDrgAttachment {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     * 
     */
    private String drgId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table assigned to the DRG attachment.
     * 
     */
    private String drgRouteTableId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export route distribution used to specify how routes in the assigned DRG route table are advertised to the attachment. If this value is null, no routes are advertised through this attachment.
     * 
     */
    private String exportDrgRouteDistributionId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the DRG attachment and attached network live in a different tenancy than the DRG.  Example: `false`
     * 
     */
    private Boolean isCrossTenancy;
    private List<GetDrgAttachmentsDrgAttachmentNetworkDetail> networkDetails;
    private Boolean removeExportDrgRouteDistributionTrigger;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
     * 
     */
    private String routeTableId;
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    private String state;
    /**
     * @return The date and time the DRG attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    private String vcnId;

    private GetDrgAttachmentsDrgAttachment() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     * 
     */
    public String drgId() {
        return this.drgId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table assigned to the DRG attachment.
     * 
     */
    public String drgRouteTableId() {
        return this.drgRouteTableId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export route distribution used to specify how routes in the assigned DRG route table are advertised to the attachment. If this value is null, no routes are advertised through this attachment.
     * 
     */
    public String exportDrgRouteDistributionId() {
        return this.exportDrgRouteDistributionId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the DRG attachment and attached network live in a different tenancy than the DRG.  Example: `false`
     * 
     */
    public Boolean isCrossTenancy() {
        return this.isCrossTenancy;
    }
    public List<GetDrgAttachmentsDrgAttachmentNetworkDetail> networkDetails() {
        return this.networkDetails;
    }
    public Boolean removeExportDrgRouteDistributionTrigger() {
        return this.removeExportDrgRouteDistributionTrigger;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the DRG attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrgAttachmentsDrgAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private String drgId;
        private String drgRouteTableId;
        private String exportDrgRouteDistributionId;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isCrossTenancy;
        private List<GetDrgAttachmentsDrgAttachmentNetworkDetail> networkDetails;
        private Boolean removeExportDrgRouteDistributionTrigger;
        private String routeTableId;
        private String state;
        private String timeCreated;
        private String vcnId;
        public Builder() {}
        public Builder(GetDrgAttachmentsDrgAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.drgId = defaults.drgId;
    	      this.drgRouteTableId = defaults.drgRouteTableId;
    	      this.exportDrgRouteDistributionId = defaults.exportDrgRouteDistributionId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCrossTenancy = defaults.isCrossTenancy;
    	      this.networkDetails = defaults.networkDetails;
    	      this.removeExportDrgRouteDistributionTrigger = defaults.removeExportDrgRouteDistributionTrigger;
    	      this.routeTableId = defaults.routeTableId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder drgId(String drgId) {
            if (drgId == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "drgId");
            }
            this.drgId = drgId;
            return this;
        }
        @CustomType.Setter
        public Builder drgRouteTableId(String drgRouteTableId) {
            if (drgRouteTableId == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "drgRouteTableId");
            }
            this.drgRouteTableId = drgRouteTableId;
            return this;
        }
        @CustomType.Setter
        public Builder exportDrgRouteDistributionId(String exportDrgRouteDistributionId) {
            if (exportDrgRouteDistributionId == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "exportDrgRouteDistributionId");
            }
            this.exportDrgRouteDistributionId = exportDrgRouteDistributionId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCrossTenancy(Boolean isCrossTenancy) {
            if (isCrossTenancy == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "isCrossTenancy");
            }
            this.isCrossTenancy = isCrossTenancy;
            return this;
        }
        @CustomType.Setter
        public Builder networkDetails(List<GetDrgAttachmentsDrgAttachmentNetworkDetail> networkDetails) {
            if (networkDetails == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "networkDetails");
            }
            this.networkDetails = networkDetails;
            return this;
        }
        public Builder networkDetails(GetDrgAttachmentsDrgAttachmentNetworkDetail... networkDetails) {
            return networkDetails(List.of(networkDetails));
        }
        @CustomType.Setter
        public Builder removeExportDrgRouteDistributionTrigger(Boolean removeExportDrgRouteDistributionTrigger) {
            if (removeExportDrgRouteDistributionTrigger == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "removeExportDrgRouteDistributionTrigger");
            }
            this.removeExportDrgRouteDistributionTrigger = removeExportDrgRouteDistributionTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(String routeTableId) {
            if (routeTableId == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "routeTableId");
            }
            this.routeTableId = routeTableId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            if (vcnId == null) {
              throw new MissingRequiredPropertyException("GetDrgAttachmentsDrgAttachment", "vcnId");
            }
            this.vcnId = vcnId;
            return this;
        }
        public GetDrgAttachmentsDrgAttachment build() {
            final var _resultValue = new GetDrgAttachmentsDrgAttachment();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.drgId = drgId;
            _resultValue.drgRouteTableId = drgRouteTableId;
            _resultValue.exportDrgRouteDistributionId = exportDrgRouteDistributionId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isCrossTenancy = isCrossTenancy;
            _resultValue.networkDetails = networkDetails;
            _resultValue.removeExportDrgRouteDistributionTrigger = removeExportDrgRouteDistributionTrigger;
            _resultValue.routeTableId = routeTableId;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
