// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDrgAttachmentsDrgAttachmentNetworkDetail {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     * 
     */
    private @Nullable String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target IPSec tunnel attachment.
     * 
     */
    private @Nullable List<String> ids;
    /**
     * @return The IPSec connection that contains the attached IPSec tunnel.
     * 
     */
    private @Nullable String ipsecConnectionId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
     * 
     */
    private @Nullable String routeTableId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit&#39;s DRG attachment.
     * 
     */
    private @Nullable String transportAttachmentId;
    /**
     * @return Boolean flag that determines wether all traffic over the virtual circuits is encrypted.  Example: `true`
     * 
     */
    private @Nullable Boolean transportOnlyMode;
    /**
     * @return The type can be one of these values: `IPSEC_TUNNEL`, `LOOPBACK`, `REMOTE_PEERING_CONNECTION`, `VCN`, `VIRTUAL_CIRCUIT`
     * 
     */
    private @Nullable String type;
    /**
     * @return Indicates whether the VCN CIDRs or the individual subnet CIDRs are imported from the attachment. Routes from the VCN ingress route table are always imported.
     * 
     */
    private @Nullable String vcnRouteType;

    private GetDrgAttachmentsDrgAttachmentNetworkDetail() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network attached to the DRG.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target IPSec tunnel attachment.
     * 
     */
    public List<String> ids() {
        return this.ids == null ? List.of() : this.ids;
    }
    /**
     * @return The IPSec connection that contains the attached IPSec tunnel.
     * 
     */
    public Optional<String> ipsecConnectionId() {
        return Optional.ofNullable(this.ipsecConnectionId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the DRG attachment is using.
     * 
     */
    public Optional<String> routeTableId() {
        return Optional.ofNullable(this.routeTableId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit&#39;s DRG attachment.
     * 
     */
    public Optional<String> transportAttachmentId() {
        return Optional.ofNullable(this.transportAttachmentId);
    }
    /**
     * @return Boolean flag that determines wether all traffic over the virtual circuits is encrypted.  Example: `true`
     * 
     */
    public Optional<Boolean> transportOnlyMode() {
        return Optional.ofNullable(this.transportOnlyMode);
    }
    /**
     * @return The type can be one of these values: `IPSEC_TUNNEL`, `LOOPBACK`, `REMOTE_PEERING_CONNECTION`, `VCN`, `VIRTUAL_CIRCUIT`
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return Indicates whether the VCN CIDRs or the individual subnet CIDRs are imported from the attachment. Routes from the VCN ingress route table are always imported.
     * 
     */
    public Optional<String> vcnRouteType() {
        return Optional.ofNullable(this.vcnRouteType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrgAttachmentsDrgAttachmentNetworkDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private @Nullable List<String> ids;
        private @Nullable String ipsecConnectionId;
        private @Nullable String routeTableId;
        private @Nullable String transportAttachmentId;
        private @Nullable Boolean transportOnlyMode;
        private @Nullable String type;
        private @Nullable String vcnRouteType;
        public Builder() {}
        public Builder(GetDrgAttachmentsDrgAttachmentNetworkDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.ipsecConnectionId = defaults.ipsecConnectionId;
    	      this.routeTableId = defaults.routeTableId;
    	      this.transportAttachmentId = defaults.transportAttachmentId;
    	      this.transportOnlyMode = defaults.transportOnlyMode;
    	      this.type = defaults.type;
    	      this.vcnRouteType = defaults.vcnRouteType;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(@Nullable List<String> ids) {
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder ipsecConnectionId(@Nullable String ipsecConnectionId) {
            this.ipsecConnectionId = ipsecConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(@Nullable String routeTableId) {
            this.routeTableId = routeTableId;
            return this;
        }
        @CustomType.Setter
        public Builder transportAttachmentId(@Nullable String transportAttachmentId) {
            this.transportAttachmentId = transportAttachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder transportOnlyMode(@Nullable Boolean transportOnlyMode) {
            this.transportOnlyMode = transportOnlyMode;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vcnRouteType(@Nullable String vcnRouteType) {
            this.vcnRouteType = vcnRouteType;
            return this;
        }
        public GetDrgAttachmentsDrgAttachmentNetworkDetail build() {
            final var o = new GetDrgAttachmentsDrgAttachmentNetworkDetail();
            o.id = id;
            o.ids = ids;
            o.ipsecConnectionId = ipsecConnectionId;
            o.routeTableId = routeTableId;
            o.transportAttachmentId = transportAttachmentId;
            o.transportOnlyMode = transportOnlyMode;
            o.type = type;
            o.vcnRouteType = vcnRouteType;
            return o;
        }
    }
}
