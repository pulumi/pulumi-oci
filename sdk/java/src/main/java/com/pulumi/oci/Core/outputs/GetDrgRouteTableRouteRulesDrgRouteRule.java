// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDrgRouteTableRouteRulesDrgRouteRule {
    /**
     * @return Additional properties for the route, computed by the service.
     * 
     */
    private @Nullable Map<String,Object> attributes;
    /**
     * @return Represents the range of IP addresses to match against when routing traffic.
     * 
     */
    private @Nullable String destination;
    /**
     * @return The type of destination for the rule.
     * 
     */
    private @Nullable String destinationType;
    /**
     * @return The Oracle-assigned ID of the DRG route rule.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates that if the next hop attachment does not exist, so traffic for this route is discarded without notification.
     * 
     */
    private @Nullable Boolean isBlackhole;
    /**
     * @return Indicates that the route was not imported due to a conflict between route rules.
     * 
     */
    private @Nullable Boolean isConflict;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next hop DRG attachment responsible for reaching the network destination.
     * 
     */
    private @Nullable String nextHopDrgAttachmentId;
    /**
     * @return The earliest origin of a route. If a route is advertised to a DRG through an IPsec tunnel attachment, and is propagated to peered DRGs via RPC attachments, the route&#39;s provenance in the peered DRGs remains `IPSEC_TUNNEL`, because that is the earliest origin.
     * 
     */
    private @Nullable String routeProvenance;
    /**
     * @return Static routes are specified through the DRG route table API. Dynamic routes are learned by the DRG from the DRG attachments through various routing protocols.
     * 
     */
    private @Nullable String routeType;

    private GetDrgRouteTableRouteRulesDrgRouteRule() {}
    /**
     * @return Additional properties for the route, computed by the service.
     * 
     */
    public Map<String,Object> attributes() {
        return this.attributes == null ? Map.of() : this.attributes;
    }
    /**
     * @return Represents the range of IP addresses to match against when routing traffic.
     * 
     */
    public Optional<String> destination() {
        return Optional.ofNullable(this.destination);
    }
    /**
     * @return The type of destination for the rule.
     * 
     */
    public Optional<String> destinationType() {
        return Optional.ofNullable(this.destinationType);
    }
    /**
     * @return The Oracle-assigned ID of the DRG route rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates that if the next hop attachment does not exist, so traffic for this route is discarded without notification.
     * 
     */
    public Optional<Boolean> isBlackhole() {
        return Optional.ofNullable(this.isBlackhole);
    }
    /**
     * @return Indicates that the route was not imported due to a conflict between route rules.
     * 
     */
    public Optional<Boolean> isConflict() {
        return Optional.ofNullable(this.isConflict);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next hop DRG attachment responsible for reaching the network destination.
     * 
     */
    public Optional<String> nextHopDrgAttachmentId() {
        return Optional.ofNullable(this.nextHopDrgAttachmentId);
    }
    /**
     * @return The earliest origin of a route. If a route is advertised to a DRG through an IPsec tunnel attachment, and is propagated to peered DRGs via RPC attachments, the route&#39;s provenance in the peered DRGs remains `IPSEC_TUNNEL`, because that is the earliest origin.
     * 
     */
    public Optional<String> routeProvenance() {
        return Optional.ofNullable(this.routeProvenance);
    }
    /**
     * @return Static routes are specified through the DRG route table API. Dynamic routes are learned by the DRG from the DRG attachments through various routing protocols.
     * 
     */
    public Optional<String> routeType() {
        return Optional.ofNullable(this.routeType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrgRouteTableRouteRulesDrgRouteRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> attributes;
        private @Nullable String destination;
        private @Nullable String destinationType;
        private @Nullable String id;
        private @Nullable Boolean isBlackhole;
        private @Nullable Boolean isConflict;
        private @Nullable String nextHopDrgAttachmentId;
        private @Nullable String routeProvenance;
        private @Nullable String routeType;
        public Builder() {}
        public Builder(GetDrgRouteTableRouteRulesDrgRouteRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.destination = defaults.destination;
    	      this.destinationType = defaults.destinationType;
    	      this.id = defaults.id;
    	      this.isBlackhole = defaults.isBlackhole;
    	      this.isConflict = defaults.isConflict;
    	      this.nextHopDrgAttachmentId = defaults.nextHopDrgAttachmentId;
    	      this.routeProvenance = defaults.routeProvenance;
    	      this.routeType = defaults.routeType;
        }

        @CustomType.Setter
        public Builder attributes(@Nullable Map<String,Object> attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder destination(@Nullable String destination) {
            this.destination = destination;
            return this;
        }
        @CustomType.Setter
        public Builder destinationType(@Nullable String destinationType) {
            this.destinationType = destinationType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isBlackhole(@Nullable Boolean isBlackhole) {
            this.isBlackhole = isBlackhole;
            return this;
        }
        @CustomType.Setter
        public Builder isConflict(@Nullable Boolean isConflict) {
            this.isConflict = isConflict;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopDrgAttachmentId(@Nullable String nextHopDrgAttachmentId) {
            this.nextHopDrgAttachmentId = nextHopDrgAttachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder routeProvenance(@Nullable String routeProvenance) {
            this.routeProvenance = routeProvenance;
            return this;
        }
        @CustomType.Setter
        public Builder routeType(@Nullable String routeType) {
            this.routeType = routeType;
            return this;
        }
        public GetDrgRouteTableRouteRulesDrgRouteRule build() {
            final var o = new GetDrgRouteTableRouteRulesDrgRouteRule();
            o.attributes = attributes;
            o.destination = destination;
            o.destinationType = destinationType;
            o.id = id;
            o.isBlackhole = isBlackhole;
            o.isConflict = isConflict;
            o.nextHopDrgAttachmentId = nextHopDrgAttachmentId;
            o.routeProvenance = routeProvenance;
            o.routeType = routeType;
            return o;
        }
    }
}
