// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetFastConnectProviderServicesFastConnectProviderService;
import com.pulumi.oci.Core.outputs.GetFastConnectProviderServicesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetFastConnectProviderServicesResult {
    private String compartmentId;
    /**
     * @return The list of fast_connect_provider_services.
     * 
     */
    private List<GetFastConnectProviderServicesFastConnectProviderService> fastConnectProviderServices;
    private @Nullable List<GetFastConnectProviderServicesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetFastConnectProviderServicesResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of fast_connect_provider_services.
     * 
     */
    public List<GetFastConnectProviderServicesFastConnectProviderService> fastConnectProviderServices() {
        return this.fastConnectProviderServices;
    }
    public List<GetFastConnectProviderServicesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFastConnectProviderServicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetFastConnectProviderServicesFastConnectProviderService> fastConnectProviderServices;
        private @Nullable List<GetFastConnectProviderServicesFilter> filters;
        private String id;
        public Builder() {}
        public Builder(GetFastConnectProviderServicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.fastConnectProviderServices = defaults.fastConnectProviderServices;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder fastConnectProviderServices(List<GetFastConnectProviderServicesFastConnectProviderService> fastConnectProviderServices) {
            this.fastConnectProviderServices = Objects.requireNonNull(fastConnectProviderServices);
            return this;
        }
        public Builder fastConnectProviderServices(GetFastConnectProviderServicesFastConnectProviderService... fastConnectProviderServices) {
            return fastConnectProviderServices(List.of(fastConnectProviderServices));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFastConnectProviderServicesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetFastConnectProviderServicesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public GetFastConnectProviderServicesResult build() {
            final var o = new GetFastConnectProviderServicesResult();
            o.compartmentId = compartmentId;
            o.fastConnectProviderServices = fastConnectProviderServices;
            o.filters = filters;
            o.id = id;
            return o;
        }
    }
}
