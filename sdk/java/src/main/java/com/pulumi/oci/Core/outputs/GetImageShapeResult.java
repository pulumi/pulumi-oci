// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetImageShapeMemoryConstraint;
import com.pulumi.oci.Core.outputs.GetImageShapeOcpuConstraint;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetImageShapeResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String imageId;
    /**
     * @return For a flexible image and shape, the amount of memory supported for instances that use this image.
     * 
     */
    private List<GetImageShapeMemoryConstraint> memoryConstraints;
    /**
     * @return OCPU options for an image and shape.
     * 
     */
    private List<GetImageShapeOcpuConstraint> ocpuConstraints;
    /**
     * @return The shape name.
     * 
     */
    private String shape;
    private String shapeName;

    private GetImageShapeResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return For a flexible image and shape, the amount of memory supported for instances that use this image.
     * 
     */
    public List<GetImageShapeMemoryConstraint> memoryConstraints() {
        return this.memoryConstraints;
    }
    /**
     * @return OCPU options for an image and shape.
     * 
     */
    public List<GetImageShapeOcpuConstraint> ocpuConstraints() {
        return this.ocpuConstraints;
    }
    /**
     * @return The shape name.
     * 
     */
    public String shape() {
        return this.shape;
    }
    public String shapeName() {
        return this.shapeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageShapeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String imageId;
        private List<GetImageShapeMemoryConstraint> memoryConstraints;
        private List<GetImageShapeOcpuConstraint> ocpuConstraints;
        private String shape;
        private String shapeName;
        public Builder() {}
        public Builder(GetImageShapeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.memoryConstraints = defaults.memoryConstraints;
    	      this.ocpuConstraints = defaults.ocpuConstraints;
    	      this.shape = defaults.shape;
    	      this.shapeName = defaults.shapeName;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetImageShapeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetImageShapeResult", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder memoryConstraints(List<GetImageShapeMemoryConstraint> memoryConstraints) {
            if (memoryConstraints == null) {
              throw new MissingRequiredPropertyException("GetImageShapeResult", "memoryConstraints");
            }
            this.memoryConstraints = memoryConstraints;
            return this;
        }
        public Builder memoryConstraints(GetImageShapeMemoryConstraint... memoryConstraints) {
            return memoryConstraints(List.of(memoryConstraints));
        }
        @CustomType.Setter
        public Builder ocpuConstraints(List<GetImageShapeOcpuConstraint> ocpuConstraints) {
            if (ocpuConstraints == null) {
              throw new MissingRequiredPropertyException("GetImageShapeResult", "ocpuConstraints");
            }
            this.ocpuConstraints = ocpuConstraints;
            return this;
        }
        public Builder ocpuConstraints(GetImageShapeOcpuConstraint... ocpuConstraints) {
            return ocpuConstraints(List.of(ocpuConstraints));
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetImageShapeResult", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeName(String shapeName) {
            if (shapeName == null) {
              throw new MissingRequiredPropertyException("GetImageShapeResult", "shapeName");
            }
            this.shapeName = shapeName;
            return this;
        }
        public GetImageShapeResult build() {
            final var _resultValue = new GetImageShapeResult();
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            _resultValue.memoryConstraints = memoryConstraints;
            _resultValue.ocpuConstraints = ocpuConstraints;
            _resultValue.shape = shape;
            _resultValue.shapeName = shapeName;
            return _resultValue;
        }
    }
}
