// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetImageShapesFilter;
import com.pulumi.oci.Core.outputs.GetImageShapesImageShapeCompatibility;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImageShapesResult {
    private @Nullable List<GetImageShapesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String imageId;
    /**
     * @return The list of image_shape_compatibilities.
     * 
     */
    private @Nullable List<GetImageShapesImageShapeCompatibility> imageShapeCompatibilities;

    private GetImageShapesResult() {}
    public List<GetImageShapesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return The list of image_shape_compatibilities.
     * 
     */
    public List<GetImageShapesImageShapeCompatibility> imageShapeCompatibilities() {
        return this.imageShapeCompatibilities == null ? List.of() : this.imageShapeCompatibilities;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageShapesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetImageShapesFilter> filters;
        private @Nullable String id;
        private String imageId;
        private @Nullable List<GetImageShapesImageShapeCompatibility> imageShapeCompatibilities;
        public Builder() {}
        public Builder(GetImageShapesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.imageShapeCompatibilities = defaults.imageShapeCompatibilities;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetImageShapesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetImageShapesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        @CustomType.Setter
        public Builder imageShapeCompatibilities(@Nullable List<GetImageShapesImageShapeCompatibility> imageShapeCompatibilities) {
            this.imageShapeCompatibilities = imageShapeCompatibilities;
            return this;
        }
        public Builder imageShapeCompatibilities(GetImageShapesImageShapeCompatibility... imageShapeCompatibilities) {
            return imageShapeCompatibilities(List.of(imageShapeCompatibilities));
        }
        public GetImageShapesResult build() {
            final var o = new GetImageShapesResult();
            o.filters = filters;
            o.id = id;
            o.imageId = imageId;
            o.imageShapeCompatibilities = imageShapeCompatibilities;
            return o;
        }
    }
}
