// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetImagesImageAgentFeature {
    /**
     * @return This attribute is not used.
     * 
     */
    private Boolean isManagementSupported;
    /**
     * @return This attribute is not used.
     * 
     */
    private Boolean isMonitoringSupported;

    private GetImagesImageAgentFeature() {}
    /**
     * @return This attribute is not used.
     * 
     */
    public Boolean isManagementSupported() {
        return this.isManagementSupported;
    }
    /**
     * @return This attribute is not used.
     * 
     */
    public Boolean isMonitoringSupported() {
        return this.isMonitoringSupported;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagesImageAgentFeature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isManagementSupported;
        private Boolean isMonitoringSupported;
        public Builder() {}
        public Builder(GetImagesImageAgentFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isManagementSupported = defaults.isManagementSupported;
    	      this.isMonitoringSupported = defaults.isMonitoringSupported;
        }

        @CustomType.Setter
        public Builder isManagementSupported(Boolean isManagementSupported) {
            if (isManagementSupported == null) {
              throw new MissingRequiredPropertyException("GetImagesImageAgentFeature", "isManagementSupported");
            }
            this.isManagementSupported = isManagementSupported;
            return this;
        }
        @CustomType.Setter
        public Builder isMonitoringSupported(Boolean isMonitoringSupported) {
            if (isMonitoringSupported == null) {
              throw new MissingRequiredPropertyException("GetImagesImageAgentFeature", "isMonitoringSupported");
            }
            this.isMonitoringSupported = isMonitoringSupported;
            return this;
        }
        public GetImagesImageAgentFeature build() {
            final var _resultValue = new GetImagesImageAgentFeature();
            _resultValue.isManagementSupported = isManagementSupported;
            _resultValue.isMonitoringSupported = isMonitoringSupported;
            return _resultValue;
        }
    }
}
