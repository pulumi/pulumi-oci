// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailLicensingConfig;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailPlacementConstraintDetail;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetInstanceConfigurationInstanceDetailLaunchDetail {
    /**
     * @return Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig> agentConfigs;
    /**
     * @return Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig> availabilityConfigs;
    /**
     * @return The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The OCID of the compute capacity reservation this instance is launched under.
     * 
     */
    private String capacityReservationId;
    /**
     * @return The OCID of the cluster placement group of the instance.
     * 
     */
    private String clusterPlacementGroupId;
    /**
     * @return The OCID of the compartment containing images to search
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [compute cluster](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/compute-clusters.htm) that the instance will be created in.
     * 
     */
    private String computeClusterId;
    /**
     * @return Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail> createVnicDetails;
    /**
     * @return The OCID of the dedicated virtual machine host to place the instance on.
     * 
     */
    private String dedicatedVmHostId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    private Map<String,String> extendedMetadata;
    /**
     * @return A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     * 
     */
    private String faultDomain;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption> instanceOptions;
    /**
     * @return This is an advanced option.
     * 
     */
    private String ipxeScript;
    /**
     * @return Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     * 
     */
    private Boolean isPvEncryptionInTransitEnabled;
    /**
     * @return Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
     * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
     * * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
     * * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
     * 
     */
    private String launchMode;
    /**
     * @return Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption> launchOptions;
    /**
     * @return List of licensing configurations associated with target launch values.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailLicensingConfig> licensingConfigs;
    /**
     * @return Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
     * 
     */
    private Map<String,String> metadata;
    /**
     * @return The details for providing placement constraints.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailPlacementConstraintDetail> placementConstraintDetails;
    /**
     * @return The platform configuration requested for the instance.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig> platformConfigs;
    /**
     * @return Configuration options for preemptible instances.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig> preemptibleInstanceConfigs;
    /**
     * @return The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
     * * `LIVE_MIGRATE` - Run maintenance using a live migration.
     * * `REBOOT` - Run maintenance using a reboot.
     * 
     */
    private String preferredMaintenanceAction;
    /**
     * @return [Security attributes](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/zpr-artifacts.htm#security-attributes) are labels for a resource that can be referenced in a [Zero Trust Packet Routing](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/overview.htm) (ZPR) policy to control access to ZPR-supported resources.  Example: `{&#34;Oracle-DataSecurity-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;:&#34;42&#34;,&#34;mode&#34;:&#34;audit&#34;}}}`
     * 
     */
    private Map<String,String> securityAttributes;
    /**
     * @return The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     * 
     */
    private String shape;
    /**
     * @return The shape configuration requested for the instance.
     * 
     */
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig> shapeConfigs;
    private List<GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail> sourceDetails;

    private GetInstanceConfigurationInstanceDetailLaunchDetail() {}
    /**
     * @return Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig> agentConfigs() {
        return this.agentConfigs;
    }
    /**
     * @return Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig> availabilityConfigs() {
        return this.availabilityConfigs;
    }
    /**
     * @return The availability domain of the instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The OCID of the compute capacity reservation this instance is launched under.
     * 
     */
    public String capacityReservationId() {
        return this.capacityReservationId;
    }
    /**
     * @return The OCID of the cluster placement group of the instance.
     * 
     */
    public String clusterPlacementGroupId() {
        return this.clusterPlacementGroupId;
    }
    /**
     * @return The OCID of the compartment containing images to search
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [compute cluster](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/compute-clusters.htm) that the instance will be created in.
     * 
     */
    public String computeClusterId() {
        return this.computeClusterId;
    }
    /**
     * @return Contains the properties of the VNIC for an instance configuration. See [CreateVnicDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CreateVnicDetails/) and [Instance Configurations](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/instancemanagement.htm#config) for more information.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail> createVnicDetails() {
        return this.createVnicDetails;
    }
    /**
     * @return The OCID of the dedicated virtual machine host to place the instance on.
     * 
     */
    public String dedicatedVmHostId() {
        return this.dedicatedVmHostId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    public Map<String,String> extendedMetadata() {
        return this.extendedMetadata;
    }
    /**
     * @return A fault domain is a grouping of hardware and infrastructure within an availability domain. Each availability domain contains three fault domains. Fault domains let you distribute your instances so that they are not on the same physical hardware within a single availability domain. A hardware failure or Compute hardware maintenance that affects one fault domain does not affect instances in other fault domains.
     * 
     */
    public String faultDomain() {
        return this.faultDomain;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Optional mutable instance options. As a part of Instance Metadata Service Security Header, This allows user to disable the legacy imds endpoints.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption> instanceOptions() {
        return this.instanceOptions;
    }
    /**
     * @return This is an advanced option.
     * 
     */
    public String ipxeScript() {
        return this.ipxeScript;
    }
    /**
     * @return Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [InstanceConfigurationLaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/InstanceConfigurationLaunchInstanceDetails).
     * 
     */
    public Boolean isPvEncryptionInTransitEnabled() {
        return this.isPvEncryptionInTransitEnabled;
    }
    /**
     * @return Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     * * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
     * * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
     * * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
     * * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
     * 
     */
    public String launchMode() {
        return this.launchMode;
    }
    /**
     * @return Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption> launchOptions() {
        return this.launchOptions;
    }
    /**
     * @return List of licensing configurations associated with target launch values.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailLicensingConfig> licensingConfigs() {
        return this.licensingConfigs;
    }
    /**
     * @return Custom metadata key/value pairs that you provide, such as the SSH public key required to connect to the instance.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    /**
     * @return The details for providing placement constraints.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailPlacementConstraintDetail> placementConstraintDetails() {
        return this.placementConstraintDetails;
    }
    /**
     * @return The platform configuration requested for the instance.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig> platformConfigs() {
        return this.platformConfigs;
    }
    /**
     * @return Configuration options for preemptible instances.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig> preemptibleInstanceConfigs() {
        return this.preemptibleInstanceConfigs;
    }
    /**
     * @return The preferred maintenance action for an instance. The default is LIVE_MIGRATE, if live migration is supported.
     * * `LIVE_MIGRATE` - Run maintenance using a live migration.
     * * `REBOOT` - Run maintenance using a reboot.
     * 
     */
    public String preferredMaintenanceAction() {
        return this.preferredMaintenanceAction;
    }
    /**
     * @return [Security attributes](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/zpr-artifacts.htm#security-attributes) are labels for a resource that can be referenced in a [Zero Trust Packet Routing](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/overview.htm) (ZPR) policy to control access to ZPR-supported resources.  Example: `{&#34;Oracle-DataSecurity-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;:&#34;42&#34;,&#34;mode&#34;:&#34;audit&#34;}}}`
     * 
     */
    public Map<String,String> securityAttributes() {
        return this.securityAttributes;
    }
    /**
     * @return The shape of an instance. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The shape configuration requested for the instance.
     * 
     */
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig> shapeConfigs() {
        return this.shapeConfigs;
    }
    public List<GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail> sourceDetails() {
        return this.sourceDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceConfigurationInstanceDetailLaunchDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig> agentConfigs;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig> availabilityConfigs;
        private String availabilityDomain;
        private String capacityReservationId;
        private String clusterPlacementGroupId;
        private String compartmentId;
        private String computeClusterId;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail> createVnicDetails;
        private String dedicatedVmHostId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> extendedMetadata;
        private String faultDomain;
        private Map<String,String> freeformTags;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption> instanceOptions;
        private String ipxeScript;
        private Boolean isPvEncryptionInTransitEnabled;
        private String launchMode;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption> launchOptions;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailLicensingConfig> licensingConfigs;
        private Map<String,String> metadata;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailPlacementConstraintDetail> placementConstraintDetails;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig> platformConfigs;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig> preemptibleInstanceConfigs;
        private String preferredMaintenanceAction;
        private Map<String,String> securityAttributes;
        private String shape;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig> shapeConfigs;
        private List<GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail> sourceDetails;
        public Builder() {}
        public Builder(GetInstanceConfigurationInstanceDetailLaunchDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentConfigs = defaults.agentConfigs;
    	      this.availabilityConfigs = defaults.availabilityConfigs;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.clusterPlacementGroupId = defaults.clusterPlacementGroupId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeClusterId = defaults.computeClusterId;
    	      this.createVnicDetails = defaults.createVnicDetails;
    	      this.dedicatedVmHostId = defaults.dedicatedVmHostId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.extendedMetadata = defaults.extendedMetadata;
    	      this.faultDomain = defaults.faultDomain;
    	      this.freeformTags = defaults.freeformTags;
    	      this.instanceOptions = defaults.instanceOptions;
    	      this.ipxeScript = defaults.ipxeScript;
    	      this.isPvEncryptionInTransitEnabled = defaults.isPvEncryptionInTransitEnabled;
    	      this.launchMode = defaults.launchMode;
    	      this.launchOptions = defaults.launchOptions;
    	      this.licensingConfigs = defaults.licensingConfigs;
    	      this.metadata = defaults.metadata;
    	      this.placementConstraintDetails = defaults.placementConstraintDetails;
    	      this.platformConfigs = defaults.platformConfigs;
    	      this.preemptibleInstanceConfigs = defaults.preemptibleInstanceConfigs;
    	      this.preferredMaintenanceAction = defaults.preferredMaintenanceAction;
    	      this.securityAttributes = defaults.securityAttributes;
    	      this.shape = defaults.shape;
    	      this.shapeConfigs = defaults.shapeConfigs;
    	      this.sourceDetails = defaults.sourceDetails;
        }

        @CustomType.Setter
        public Builder agentConfigs(List<GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig> agentConfigs) {
            if (agentConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "agentConfigs");
            }
            this.agentConfigs = agentConfigs;
            return this;
        }
        public Builder agentConfigs(GetInstanceConfigurationInstanceDetailLaunchDetailAgentConfig... agentConfigs) {
            return agentConfigs(List.of(agentConfigs));
        }
        @CustomType.Setter
        public Builder availabilityConfigs(List<GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig> availabilityConfigs) {
            if (availabilityConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "availabilityConfigs");
            }
            this.availabilityConfigs = availabilityConfigs;
            return this;
        }
        public Builder availabilityConfigs(GetInstanceConfigurationInstanceDetailLaunchDetailAvailabilityConfig... availabilityConfigs) {
            return availabilityConfigs(List.of(availabilityConfigs));
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(String capacityReservationId) {
            if (capacityReservationId == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "capacityReservationId");
            }
            this.capacityReservationId = capacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPlacementGroupId(String clusterPlacementGroupId) {
            if (clusterPlacementGroupId == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "clusterPlacementGroupId");
            }
            this.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeClusterId(String computeClusterId) {
            if (computeClusterId == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "computeClusterId");
            }
            this.computeClusterId = computeClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder createVnicDetails(List<GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail> createVnicDetails) {
            if (createVnicDetails == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "createVnicDetails");
            }
            this.createVnicDetails = createVnicDetails;
            return this;
        }
        public Builder createVnicDetails(GetInstanceConfigurationInstanceDetailLaunchDetailCreateVnicDetail... createVnicDetails) {
            return createVnicDetails(List.of(createVnicDetails));
        }
        @CustomType.Setter
        public Builder dedicatedVmHostId(String dedicatedVmHostId) {
            if (dedicatedVmHostId == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "dedicatedVmHostId");
            }
            this.dedicatedVmHostId = dedicatedVmHostId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder extendedMetadata(Map<String,String> extendedMetadata) {
            if (extendedMetadata == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "extendedMetadata");
            }
            this.extendedMetadata = extendedMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(String faultDomain) {
            if (faultDomain == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "faultDomain");
            }
            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder instanceOptions(List<GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption> instanceOptions) {
            if (instanceOptions == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "instanceOptions");
            }
            this.instanceOptions = instanceOptions;
            return this;
        }
        public Builder instanceOptions(GetInstanceConfigurationInstanceDetailLaunchDetailInstanceOption... instanceOptions) {
            return instanceOptions(List.of(instanceOptions));
        }
        @CustomType.Setter
        public Builder ipxeScript(String ipxeScript) {
            if (ipxeScript == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "ipxeScript");
            }
            this.ipxeScript = ipxeScript;
            return this;
        }
        @CustomType.Setter
        public Builder isPvEncryptionInTransitEnabled(Boolean isPvEncryptionInTransitEnabled) {
            if (isPvEncryptionInTransitEnabled == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "isPvEncryptionInTransitEnabled");
            }
            this.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder launchMode(String launchMode) {
            if (launchMode == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "launchMode");
            }
            this.launchMode = launchMode;
            return this;
        }
        @CustomType.Setter
        public Builder launchOptions(List<GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption> launchOptions) {
            if (launchOptions == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "launchOptions");
            }
            this.launchOptions = launchOptions;
            return this;
        }
        public Builder launchOptions(GetInstanceConfigurationInstanceDetailLaunchDetailLaunchOption... launchOptions) {
            return launchOptions(List.of(launchOptions));
        }
        @CustomType.Setter
        public Builder licensingConfigs(List<GetInstanceConfigurationInstanceDetailLaunchDetailLicensingConfig> licensingConfigs) {
            if (licensingConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "licensingConfigs");
            }
            this.licensingConfigs = licensingConfigs;
            return this;
        }
        public Builder licensingConfigs(GetInstanceConfigurationInstanceDetailLaunchDetailLicensingConfig... licensingConfigs) {
            return licensingConfigs(List.of(licensingConfigs));
        }
        @CustomType.Setter
        public Builder metadata(Map<String,String> metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder placementConstraintDetails(List<GetInstanceConfigurationInstanceDetailLaunchDetailPlacementConstraintDetail> placementConstraintDetails) {
            if (placementConstraintDetails == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "placementConstraintDetails");
            }
            this.placementConstraintDetails = placementConstraintDetails;
            return this;
        }
        public Builder placementConstraintDetails(GetInstanceConfigurationInstanceDetailLaunchDetailPlacementConstraintDetail... placementConstraintDetails) {
            return placementConstraintDetails(List.of(placementConstraintDetails));
        }
        @CustomType.Setter
        public Builder platformConfigs(List<GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig> platformConfigs) {
            if (platformConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "platformConfigs");
            }
            this.platformConfigs = platformConfigs;
            return this;
        }
        public Builder platformConfigs(GetInstanceConfigurationInstanceDetailLaunchDetailPlatformConfig... platformConfigs) {
            return platformConfigs(List.of(platformConfigs));
        }
        @CustomType.Setter
        public Builder preemptibleInstanceConfigs(List<GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig> preemptibleInstanceConfigs) {
            if (preemptibleInstanceConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "preemptibleInstanceConfigs");
            }
            this.preemptibleInstanceConfigs = preemptibleInstanceConfigs;
            return this;
        }
        public Builder preemptibleInstanceConfigs(GetInstanceConfigurationInstanceDetailLaunchDetailPreemptibleInstanceConfig... preemptibleInstanceConfigs) {
            return preemptibleInstanceConfigs(List.of(preemptibleInstanceConfigs));
        }
        @CustomType.Setter
        public Builder preferredMaintenanceAction(String preferredMaintenanceAction) {
            if (preferredMaintenanceAction == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "preferredMaintenanceAction");
            }
            this.preferredMaintenanceAction = preferredMaintenanceAction;
            return this;
        }
        @CustomType.Setter
        public Builder securityAttributes(Map<String,String> securityAttributes) {
            if (securityAttributes == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "securityAttributes");
            }
            this.securityAttributes = securityAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeConfigs(List<GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig> shapeConfigs) {
            if (shapeConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "shapeConfigs");
            }
            this.shapeConfigs = shapeConfigs;
            return this;
        }
        public Builder shapeConfigs(GetInstanceConfigurationInstanceDetailLaunchDetailShapeConfig... shapeConfigs) {
            return shapeConfigs(List.of(shapeConfigs));
        }
        @CustomType.Setter
        public Builder sourceDetails(List<GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail> sourceDetails) {
            if (sourceDetails == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailLaunchDetail", "sourceDetails");
            }
            this.sourceDetails = sourceDetails;
            return this;
        }
        public Builder sourceDetails(GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        public GetInstanceConfigurationInstanceDetailLaunchDetail build() {
            final var _resultValue = new GetInstanceConfigurationInstanceDetailLaunchDetail();
            _resultValue.agentConfigs = agentConfigs;
            _resultValue.availabilityConfigs = availabilityConfigs;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.capacityReservationId = capacityReservationId;
            _resultValue.clusterPlacementGroupId = clusterPlacementGroupId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeClusterId = computeClusterId;
            _resultValue.createVnicDetails = createVnicDetails;
            _resultValue.dedicatedVmHostId = dedicatedVmHostId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.extendedMetadata = extendedMetadata;
            _resultValue.faultDomain = faultDomain;
            _resultValue.freeformTags = freeformTags;
            _resultValue.instanceOptions = instanceOptions;
            _resultValue.ipxeScript = ipxeScript;
            _resultValue.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            _resultValue.launchMode = launchMode;
            _resultValue.launchOptions = launchOptions;
            _resultValue.licensingConfigs = licensingConfigs;
            _resultValue.metadata = metadata;
            _resultValue.placementConstraintDetails = placementConstraintDetails;
            _resultValue.platformConfigs = platformConfigs;
            _resultValue.preemptibleInstanceConfigs = preemptibleInstanceConfigs;
            _resultValue.preferredMaintenanceAction = preferredMaintenanceAction;
            _resultValue.securityAttributes = securityAttributes;
            _resultValue.shape = shape;
            _resultValue.shapeConfigs = shapeConfigs;
            _resultValue.sourceDetails = sourceDetails;
            return _resultValue;
        }
    }
}
