// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig {
    /**
     * @return Whether to live migrate supported VM instances to a healthy physical VM host without disrupting running instances during infrastructure maintenance events. If null, Oracle chooses the best option for migrating the VM during infrastructure maintenance events.
     * 
     */
    private Boolean isLiveMigrationPreferred;
    /**
     * @return The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     * * `RESTORE_INSTANCE` - The instance is restored to the lifecycle state it was in before the maintenance event. If the instance was running, it is automatically rebooted. This is the default action when a value is not set.
     * * `STOP_INSTANCE` - The instance is recovered in the stopped state.
     * 
     */
    private String recoveryAction;

    private GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig() {}
    /**
     * @return Whether to live migrate supported VM instances to a healthy physical VM host without disrupting running instances during infrastructure maintenance events. If null, Oracle chooses the best option for migrating the VM during infrastructure maintenance events.
     * 
     */
    public Boolean isLiveMigrationPreferred() {
        return this.isLiveMigrationPreferred;
    }
    /**
     * @return The lifecycle state for an instance when it is recovered after infrastructure maintenance.
     * * `RESTORE_INSTANCE` - The instance is restored to the lifecycle state it was in before the maintenance event. If the instance was running, it is automatically rebooted. This is the default action when a value is not set.
     * * `STOP_INSTANCE` - The instance is recovered in the stopped state.
     * 
     */
    public String recoveryAction() {
        return this.recoveryAction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isLiveMigrationPreferred;
        private String recoveryAction;
        public Builder() {}
        public Builder(GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isLiveMigrationPreferred = defaults.isLiveMigrationPreferred;
    	      this.recoveryAction = defaults.recoveryAction;
        }

        @CustomType.Setter
        public Builder isLiveMigrationPreferred(Boolean isLiveMigrationPreferred) {
            if (isLiveMigrationPreferred == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig", "isLiveMigrationPreferred");
            }
            this.isLiveMigrationPreferred = isLiveMigrationPreferred;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAction(String recoveryAction) {
            if (recoveryAction == null) {
              throw new MissingRequiredPropertyException("GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig", "recoveryAction");
            }
            this.recoveryAction = recoveryAction;
            return this;
        }
        public GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig build() {
            final var _resultValue = new GetInstanceConfigurationInstanceDetailOptionLaunchDetailAvailabilityConfig();
            _resultValue.isLiveMigrationPreferred = isLiveMigrationPreferred;
            _resultValue.recoveryAction = recoveryAction;
            return _resultValue;
        }
    }
}
