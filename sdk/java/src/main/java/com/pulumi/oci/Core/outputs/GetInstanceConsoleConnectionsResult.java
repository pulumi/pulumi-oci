// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetInstanceConsoleConnectionsFilter;
import com.pulumi.oci.Core.outputs.GetInstanceConsoleConnectionsInstanceConsoleConnection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceConsoleConnectionsResult {
    /**
     * @return The OCID of the compartment to contain the console connection.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetInstanceConsoleConnectionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of instance_console_connections.
     * 
     */
    private List<GetInstanceConsoleConnectionsInstanceConsoleConnection> instanceConsoleConnections;
    /**
     * @return The OCID of the instance the console connection connects to.
     * 
     */
    private @Nullable String instanceId;

    private GetInstanceConsoleConnectionsResult() {}
    /**
     * @return The OCID of the compartment to contain the console connection.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetInstanceConsoleConnectionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of instance_console_connections.
     * 
     */
    public List<GetInstanceConsoleConnectionsInstanceConsoleConnection> instanceConsoleConnections() {
        return this.instanceConsoleConnections;
    }
    /**
     * @return The OCID of the instance the console connection connects to.
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceConsoleConnectionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetInstanceConsoleConnectionsFilter> filters;
        private String id;
        private List<GetInstanceConsoleConnectionsInstanceConsoleConnection> instanceConsoleConnections;
        private @Nullable String instanceId;
        public Builder() {}
        public Builder(GetInstanceConsoleConnectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceConsoleConnections = defaults.instanceConsoleConnections;
    	      this.instanceId = defaults.instanceId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetInstanceConsoleConnectionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetInstanceConsoleConnectionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetInstanceConsoleConnectionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstanceConsoleConnectionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceConsoleConnections(List<GetInstanceConsoleConnectionsInstanceConsoleConnection> instanceConsoleConnections) {
            if (instanceConsoleConnections == null) {
              throw new MissingRequiredPropertyException("GetInstanceConsoleConnectionsResult", "instanceConsoleConnections");
            }
            this.instanceConsoleConnections = instanceConsoleConnections;
            return this;
        }
        public Builder instanceConsoleConnections(GetInstanceConsoleConnectionsInstanceConsoleConnection... instanceConsoleConnections) {
            return instanceConsoleConnections(List.of(instanceConsoleConnections));
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {

            this.instanceId = instanceId;
            return this;
        }
        public GetInstanceConsoleConnectionsResult build() {
            final var _resultValue = new GetInstanceConsoleConnectionsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.instanceConsoleConnections = instanceConsoleConnections;
            _resultValue.instanceId = instanceId;
            return _resultValue;
        }
    }
}
