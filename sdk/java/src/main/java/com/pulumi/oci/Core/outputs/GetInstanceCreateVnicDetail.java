// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetInstanceCreateVnicDetailIpv6addressIpv6subnetCidrPairDetail;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetInstanceCreateVnicDetail {
    private Boolean assignIpv6ip;
    private Boolean assignPrivateDnsRecord;
    private String assignPublicIp;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The hostname for the instance VNIC&#39;s primary private IP.
     * 
     */
    private String hostnameLabel;
    private List<GetInstanceCreateVnicDetailIpv6addressIpv6subnetCidrPairDetail> ipv6addressIpv6subnetCidrPairDetails;
    private List<String> nsgIds;
    /**
     * @return The private IP address of instance VNIC. To set the private IP address, use the `private_ip` argument in create_vnic_details.
     * 
     */
    private String privateIp;
    private Boolean skipSourceDestCheck;
    private String subnetId;
    private String vlanId;

    private GetInstanceCreateVnicDetail() {}
    public Boolean assignIpv6ip() {
        return this.assignIpv6ip;
    }
    public Boolean assignPrivateDnsRecord() {
        return this.assignPrivateDnsRecord;
    }
    public String assignPublicIp() {
        return this.assignPublicIp;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The hostname for the instance VNIC&#39;s primary private IP.
     * 
     */
    public String hostnameLabel() {
        return this.hostnameLabel;
    }
    public List<GetInstanceCreateVnicDetailIpv6addressIpv6subnetCidrPairDetail> ipv6addressIpv6subnetCidrPairDetails() {
        return this.ipv6addressIpv6subnetCidrPairDetails;
    }
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The private IP address of instance VNIC. To set the private IP address, use the `private_ip` argument in create_vnic_details.
     * 
     */
    public String privateIp() {
        return this.privateIp;
    }
    public Boolean skipSourceDestCheck() {
        return this.skipSourceDestCheck;
    }
    public String subnetId() {
        return this.subnetId;
    }
    public String vlanId() {
        return this.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceCreateVnicDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean assignIpv6ip;
        private Boolean assignPrivateDnsRecord;
        private String assignPublicIp;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String hostnameLabel;
        private List<GetInstanceCreateVnicDetailIpv6addressIpv6subnetCidrPairDetail> ipv6addressIpv6subnetCidrPairDetails;
        private List<String> nsgIds;
        private String privateIp;
        private Boolean skipSourceDestCheck;
        private String subnetId;
        private String vlanId;
        public Builder() {}
        public Builder(GetInstanceCreateVnicDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignIpv6ip = defaults.assignIpv6ip;
    	      this.assignPrivateDnsRecord = defaults.assignPrivateDnsRecord;
    	      this.assignPublicIp = defaults.assignPublicIp;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostnameLabel = defaults.hostnameLabel;
    	      this.ipv6addressIpv6subnetCidrPairDetails = defaults.ipv6addressIpv6subnetCidrPairDetails;
    	      this.nsgIds = defaults.nsgIds;
    	      this.privateIp = defaults.privateIp;
    	      this.skipSourceDestCheck = defaults.skipSourceDestCheck;
    	      this.subnetId = defaults.subnetId;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder assignIpv6ip(Boolean assignIpv6ip) {
            if (assignIpv6ip == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "assignIpv6ip");
            }
            this.assignIpv6ip = assignIpv6ip;
            return this;
        }
        @CustomType.Setter
        public Builder assignPrivateDnsRecord(Boolean assignPrivateDnsRecord) {
            if (assignPrivateDnsRecord == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "assignPrivateDnsRecord");
            }
            this.assignPrivateDnsRecord = assignPrivateDnsRecord;
            return this;
        }
        @CustomType.Setter
        public Builder assignPublicIp(String assignPublicIp) {
            if (assignPublicIp == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "assignPublicIp");
            }
            this.assignPublicIp = assignPublicIp;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameLabel(String hostnameLabel) {
            if (hostnameLabel == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "hostnameLabel");
            }
            this.hostnameLabel = hostnameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6addressIpv6subnetCidrPairDetails(List<GetInstanceCreateVnicDetailIpv6addressIpv6subnetCidrPairDetail> ipv6addressIpv6subnetCidrPairDetails) {
            if (ipv6addressIpv6subnetCidrPairDetails == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "ipv6addressIpv6subnetCidrPairDetails");
            }
            this.ipv6addressIpv6subnetCidrPairDetails = ipv6addressIpv6subnetCidrPairDetails;
            return this;
        }
        public Builder ipv6addressIpv6subnetCidrPairDetails(GetInstanceCreateVnicDetailIpv6addressIpv6subnetCidrPairDetail... ipv6addressIpv6subnetCidrPairDetails) {
            return ipv6addressIpv6subnetCidrPairDetails(List.of(ipv6addressIpv6subnetCidrPairDetails));
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder privateIp(String privateIp) {
            if (privateIp == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "privateIp");
            }
            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder skipSourceDestCheck(Boolean skipSourceDestCheck) {
            if (skipSourceDestCheck == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "skipSourceDestCheck");
            }
            this.skipSourceDestCheck = skipSourceDestCheck;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(String vlanId) {
            if (vlanId == null) {
              throw new MissingRequiredPropertyException("GetInstanceCreateVnicDetail", "vlanId");
            }
            this.vlanId = vlanId;
            return this;
        }
        public GetInstanceCreateVnicDetail build() {
            final var _resultValue = new GetInstanceCreateVnicDetail();
            _resultValue.assignIpv6ip = assignIpv6ip;
            _resultValue.assignPrivateDnsRecord = assignPrivateDnsRecord;
            _resultValue.assignPublicIp = assignPublicIp;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostnameLabel = hostnameLabel;
            _resultValue.ipv6addressIpv6subnetCidrPairDetails = ipv6addressIpv6subnetCidrPairDetails;
            _resultValue.nsgIds = nsgIds;
            _resultValue.privateIp = privateIp;
            _resultValue.skipSourceDestCheck = skipSourceDestCheck;
            _resultValue.subnetId = subnetId;
            _resultValue.vlanId = vlanId;
            return _resultValue;
        }
    }
}
