// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail {
    /**
     * @return The OCID of the compartment containing images to search
     * 
     */
    private String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return The OCID of the Vault service key to assign as the master encryption key for the boot volume.
     * 
     */
    private String kmsKeyId;
    private String sizeInGbs;
    private String volumeCreationType;
    private String vpusPerGb;

    private GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail() {}
    /**
     * @return The OCID of the compartment containing images to search
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The OCID of the Vault service key to assign as the master encryption key for the boot volume.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    public String sizeInGbs() {
        return this.sizeInGbs;
    }
    public String volumeCreationType() {
        return this.volumeCreationType;
    }
    public String vpusPerGb() {
        return this.vpusPerGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String displayName;
        private String kmsKeyId;
        private String sizeInGbs;
        private String volumeCreationType;
        private String vpusPerGb;
        public Builder() {}
        public Builder(GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.sizeInGbs = defaults.sizeInGbs;
    	      this.volumeCreationType = defaults.volumeCreationType;
    	      this.vpusPerGb = defaults.vpusPerGb;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInGbs(String sizeInGbs) {
            if (sizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail", "sizeInGbs");
            }
            this.sizeInGbs = sizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder volumeCreationType(String volumeCreationType) {
            if (volumeCreationType == null) {
              throw new MissingRequiredPropertyException("GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail", "volumeCreationType");
            }
            this.volumeCreationType = volumeCreationType;
            return this;
        }
        @CustomType.Setter
        public Builder vpusPerGb(String vpusPerGb) {
            if (vpusPerGb == null) {
              throw new MissingRequiredPropertyException("GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail", "vpusPerGb");
            }
            this.vpusPerGb = vpusPerGb;
            return this;
        }
        public GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail build() {
            final var _resultValue = new GetInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetail();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.sizeInGbs = sizeInGbs;
            _resultValue.volumeCreationType = volumeCreationType;
            _resultValue.vpusPerGb = vpusPerGb;
            return _resultValue;
        }
    }
}
