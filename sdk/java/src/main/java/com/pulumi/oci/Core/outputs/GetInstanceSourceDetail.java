// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetInstanceSourceDetailInstanceSourceImageFilterDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceSourceDetail {
    /**
     * @return The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     * 
     */
    private String bootVolumeSizeInGbs;
    /**
     * @return The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     */
    private String bootVolumeVpusPerGb;
    /**
     * @return These are the criteria for selecting an image. This is required if imageId is not specified.
     * 
     */
    private List<GetInstanceSourceDetailInstanceSourceImageFilterDetail> instanceSourceImageFilterDetails;
    /**
     * @return The OCID of the Vault service key to assign as the master encryption key for the boot volume.
     * 
     */
    private String kmsKeyId;
    /**
     * @return The OCID of the boot volume used to boot the instance.
     * 
     */
    private String sourceId;
    /**
     * @return The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     */
    private String sourceType;

    private GetInstanceSourceDetail() {}
    /**
     * @return The size of the boot volume in GBs. Minimum value is 50 GB and maximum value is 32,768 GB (32 TB).
     * 
     */
    public String bootVolumeSizeInGbs() {
        return this.bootVolumeSizeInGbs;
    }
    /**
     * @return The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     */
    public String bootVolumeVpusPerGb() {
        return this.bootVolumeVpusPerGb;
    }
    /**
     * @return These are the criteria for selecting an image. This is required if imageId is not specified.
     * 
     */
    public List<GetInstanceSourceDetailInstanceSourceImageFilterDetail> instanceSourceImageFilterDetails() {
        return this.instanceSourceImageFilterDetails;
    }
    /**
     * @return The OCID of the Vault service key to assign as the master encryption key for the boot volume.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The OCID of the boot volume used to boot the instance.
     * 
     */
    public String sourceId() {
        return this.sourceId;
    }
    /**
     * @return The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceSourceDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bootVolumeSizeInGbs;
        private String bootVolumeVpusPerGb;
        private List<GetInstanceSourceDetailInstanceSourceImageFilterDetail> instanceSourceImageFilterDetails;
        private String kmsKeyId;
        private String sourceId;
        private String sourceType;
        public Builder() {}
        public Builder(GetInstanceSourceDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootVolumeSizeInGbs = defaults.bootVolumeSizeInGbs;
    	      this.bootVolumeVpusPerGb = defaults.bootVolumeVpusPerGb;
    	      this.instanceSourceImageFilterDetails = defaults.instanceSourceImageFilterDetails;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.sourceId = defaults.sourceId;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder bootVolumeSizeInGbs(String bootVolumeSizeInGbs) {
            this.bootVolumeSizeInGbs = Objects.requireNonNull(bootVolumeSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeVpusPerGb(String bootVolumeVpusPerGb) {
            this.bootVolumeVpusPerGb = Objects.requireNonNull(bootVolumeVpusPerGb);
            return this;
        }
        @CustomType.Setter
        public Builder instanceSourceImageFilterDetails(List<GetInstanceSourceDetailInstanceSourceImageFilterDetail> instanceSourceImageFilterDetails) {
            this.instanceSourceImageFilterDetails = Objects.requireNonNull(instanceSourceImageFilterDetails);
            return this;
        }
        public Builder instanceSourceImageFilterDetails(GetInstanceSourceDetailInstanceSourceImageFilterDetail... instanceSourceImageFilterDetails) {
            return instanceSourceImageFilterDetails(List.of(instanceSourceImageFilterDetails));
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(String sourceId) {
            this.sourceId = Objects.requireNonNull(sourceId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public GetInstanceSourceDetail build() {
            final var _resultValue = new GetInstanceSourceDetail();
            _resultValue.bootVolumeSizeInGbs = bootVolumeSizeInGbs;
            _resultValue.bootVolumeVpusPerGb = bootVolumeVpusPerGb;
            _resultValue.instanceSourceImageFilterDetails = instanceSourceImageFilterDetails;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.sourceId = sourceId;
            _resultValue.sourceType = sourceType;
            return _resultValue;
        }
    }
}
