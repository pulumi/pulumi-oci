// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetInstancesInstanceAgentConfig;
import com.pulumi.oci.Core.outputs.GetInstancesInstanceAvailabilityConfig;
import com.pulumi.oci.Core.outputs.GetInstancesInstanceCreateVnicDetail;
import com.pulumi.oci.Core.outputs.GetInstancesInstanceInstanceOption;
import com.pulumi.oci.Core.outputs.GetInstancesInstanceLaunchOption;
import com.pulumi.oci.Core.outputs.GetInstancesInstancePlatformConfig;
import com.pulumi.oci.Core.outputs.GetInstancesInstancePreemptibleInstanceConfig;
import com.pulumi.oci.Core.outputs.GetInstancesInstanceShapeConfig;
import com.pulumi.oci.Core.outputs.GetInstancesInstanceSourceDetail;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancesInstance {
    /**
     * @return Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    private @Nullable List<GetInstancesInstanceAgentConfig> agentConfigs;
    private @Nullable Boolean async;
    /**
     * @return Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     * 
     */
    private @Nullable List<GetInstancesInstanceAvailabilityConfig> availabilityConfigs;
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return The OCID of the attached boot volume. If the `source_type` is `bootVolume`, this will be the same OCID as the `source_id`.
     * 
     */
    private @Nullable String bootVolumeId;
    /**
     * @return The OCID of the compute capacity reservation.
     * 
     */
    private @Nullable String capacityReservationId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute cluster. A [compute cluster](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/compute-clusters.htm) is a remote direct memory access (RDMA) network group.
     * 
     */
    private @Nullable String computeClusterId;
    private @Nullable List<GetInstancesInstanceCreateVnicDetail> createVnicDetails;
    /**
     * @return The OCID of the dedicated virtual machine host that the instance is placed on.
     * 
     */
    private @Nullable String dedicatedVmHostId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    private @Nullable Map<String,Object> extendedMetadata;
    /**
     * @return The name of the fault domain the instance is running in.
     * 
     */
    private @Nullable String faultDomain;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @deprecated
     * The &#39;hostname_label&#39; field has been deprecated. Please use &#39;hostname_label under create_vnic_details&#39; instead.
     * 
     */
    @Deprecated /* The 'hostname_label' field has been deprecated. Please use 'hostname_label under create_vnic_details' instead. */
    private @Nullable String hostnameLabel;
    /**
     * @return The OCID of the instance.
     * 
     */
    private @Nullable String id;
    /**
     * @return Deprecated. Use `sourceDetails` instead.
     * 
     * @deprecated
     * The &#39;image&#39; field has been deprecated. Please use &#39;source_details&#39; instead. If both fields are specified, then &#39;source_details&#39; will be used.
     * 
     */
    @Deprecated /* The 'image' field has been deprecated. Please use 'source_details' instead. If both fields are specified, then 'source_details' will be used. */
    private @Nullable String image;
    /**
     * @return The OCID of the Instance Configuration used to source launch details for this instance. Any other fields supplied in the instance launch request override the details stored in the Instance Configuration for this instance launch.
     * 
     */
    private @Nullable String instanceConfigurationId;
    /**
     * @return Optional mutable instance options
     * 
     */
    private @Nullable List<GetInstancesInstanceInstanceOption> instanceOptions;
    /**
     * @return When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
     * 
     */
    private @Nullable String ipxeScript;
    /**
     * @return Whether the instanceâ€™s OCPUs and memory are distributed across multiple NUMA nodes.
     * 
     */
    private @Nullable Boolean isCrossNumaNode;
    /**
     * @return Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     * 
     */
    private @Nullable Boolean isPvEncryptionInTransitEnabled;
    /**
     * @return Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     * 
     */
    private @Nullable String launchMode;
    /**
     * @return Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     * 
     */
    private @Nullable List<GetInstancesInstanceLaunchOption> launchOptions;
    /**
     * @return Custom metadata that you provide.
     * 
     */
    private @Nullable Map<String,Object> metadata;
    /**
     * @return The platform configuration for the instance.
     * 
     */
    private @Nullable List<GetInstancesInstancePlatformConfig> platformConfigs;
    /**
     * @return (Optional) Configuration options for preemptible instances.
     * 
     */
    private @Nullable List<GetInstancesInstancePreemptibleInstanceConfig> preemptibleInstanceConfigs;
    /**
     * @return (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     * 
     */
    private @Nullable Boolean preserveBootVolume;
    private @Nullable String privateIp;
    private @Nullable String publicIp;
    /**
     * @return The region that contains the availability domain the instance is running in.
     * 
     */
    private @Nullable String region;
    /**
     * @return The shape of the instance. The shape determines the number of CPUs and the amount of memory allocated to the instance. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    private @Nullable String shape;
    /**
     * @return The shape configuration for an instance. The shape configuration determines the resources allocated to an instance.
     * 
     */
    private @Nullable List<GetInstancesInstanceShapeConfig> shapeConfigs;
    private @Nullable List<GetInstancesInstanceSourceDetail> sourceDetails;
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    private @Nullable String state;
    /**
     * @deprecated
     * The &#39;subnet_id&#39; field has been deprecated. Please use &#39;subnet_id under create_vnic_details&#39; instead.
     * 
     */
    @Deprecated /* The 'subnet_id' field has been deprecated. Please use 'subnet_id under create_vnic_details' instead. */
    private @Nullable String subnetId;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The date and time the instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the instance is expected to be stopped / started,  in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). After that time if instance hasn&#39;t been rebooted, Oracle will reboot the instance within 24 hours of the due time. Regardless of how the instance was stopped, the flag will be reset to empty as soon as instance reaches Stopped state. Example: `2018-05-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeMaintenanceRebootDue;
    private @Nullable String updateOperationConstraint;

    private GetInstancesInstance() {}
    /**
     * @return Configuration options for the Oracle Cloud Agent software running on the instance.
     * 
     */
    public List<GetInstancesInstanceAgentConfig> agentConfigs() {
        return this.agentConfigs == null ? List.of() : this.agentConfigs;
    }
    public Optional<Boolean> async() {
        return Optional.ofNullable(this.async);
    }
    /**
     * @return Options for defining the availabiity of a VM instance after a maintenance event that impacts the underlying hardware.
     * 
     */
    public List<GetInstancesInstanceAvailabilityConfig> availabilityConfigs() {
        return this.availabilityConfigs == null ? List.of() : this.availabilityConfigs;
    }
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The OCID of the attached boot volume. If the `source_type` is `bootVolume`, this will be the same OCID as the `source_id`.
     * 
     */
    public Optional<String> bootVolumeId() {
        return Optional.ofNullable(this.bootVolumeId);
    }
    /**
     * @return The OCID of the compute capacity reservation.
     * 
     */
    public Optional<String> capacityReservationId() {
        return Optional.ofNullable(this.capacityReservationId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute cluster. A [compute cluster](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/compute-clusters.htm) is a remote direct memory access (RDMA) network group.
     * 
     */
    public Optional<String> computeClusterId() {
        return Optional.ofNullable(this.computeClusterId);
    }
    public List<GetInstancesInstanceCreateVnicDetail> createVnicDetails() {
        return this.createVnicDetails == null ? List.of() : this.createVnicDetails;
    }
    /**
     * @return The OCID of the dedicated virtual machine host that the instance is placed on.
     * 
     */
    public Optional<String> dedicatedVmHostId() {
        return Optional.ofNullable(this.dedicatedVmHostId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    public Map<String,Object> extendedMetadata() {
        return this.extendedMetadata == null ? Map.of() : this.extendedMetadata;
    }
    /**
     * @return The name of the fault domain the instance is running in.
     * 
     */
    public Optional<String> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @deprecated
     * The &#39;hostname_label&#39; field has been deprecated. Please use &#39;hostname_label under create_vnic_details&#39; instead.
     * 
     */
    @Deprecated /* The 'hostname_label' field has been deprecated. Please use 'hostname_label under create_vnic_details' instead. */
    public Optional<String> hostnameLabel() {
        return Optional.ofNullable(this.hostnameLabel);
    }
    /**
     * @return The OCID of the instance.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Deprecated. Use `sourceDetails` instead.
     * 
     * @deprecated
     * The &#39;image&#39; field has been deprecated. Please use &#39;source_details&#39; instead. If both fields are specified, then &#39;source_details&#39; will be used.
     * 
     */
    @Deprecated /* The 'image' field has been deprecated. Please use 'source_details' instead. If both fields are specified, then 'source_details' will be used. */
    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }
    /**
     * @return The OCID of the Instance Configuration used to source launch details for this instance. Any other fields supplied in the instance launch request override the details stored in the Instance Configuration for this instance launch.
     * 
     */
    public Optional<String> instanceConfigurationId() {
        return Optional.ofNullable(this.instanceConfigurationId);
    }
    /**
     * @return Optional mutable instance options
     * 
     */
    public List<GetInstancesInstanceInstanceOption> instanceOptions() {
        return this.instanceOptions == null ? List.of() : this.instanceOptions;
    }
    /**
     * @return When a bare metal or virtual machine instance boots, the iPXE firmware that runs on the instance is configured to run an iPXE script to continue the boot process.
     * 
     */
    public Optional<String> ipxeScript() {
        return Optional.ofNullable(this.ipxeScript);
    }
    /**
     * @return Whether the instanceâ€™s OCPUs and memory are distributed across multiple NUMA nodes.
     * 
     */
    public Optional<Boolean> isCrossNumaNode() {
        return Optional.ofNullable(this.isCrossNumaNode);
    }
    /**
     * @return Deprecated. Instead use `isPvEncryptionInTransitEnabled` in [LaunchInstanceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/datatypes/LaunchInstanceDetails).
     * 
     */
    public Optional<Boolean> isPvEncryptionInTransitEnabled() {
        return Optional.ofNullable(this.isPvEncryptionInTransitEnabled);
    }
    /**
     * @return Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
     * 
     */
    public Optional<String> launchMode() {
        return Optional.ofNullable(this.launchMode);
    }
    /**
     * @return Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
     * 
     */
    public List<GetInstancesInstanceLaunchOption> launchOptions() {
        return this.launchOptions == null ? List.of() : this.launchOptions;
    }
    /**
     * @return Custom metadata that you provide.
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    /**
     * @return The platform configuration for the instance.
     * 
     */
    public List<GetInstancesInstancePlatformConfig> platformConfigs() {
        return this.platformConfigs == null ? List.of() : this.platformConfigs;
    }
    /**
     * @return (Optional) Configuration options for preemptible instances.
     * 
     */
    public List<GetInstancesInstancePreemptibleInstanceConfig> preemptibleInstanceConfigs() {
        return this.preemptibleInstanceConfigs == null ? List.of() : this.preemptibleInstanceConfigs;
    }
    /**
     * @return (Optional) Whether to preserve the boot volume that was used to launch the preemptible instance when the instance is terminated. Defaults to false if not specified.
     * 
     */
    public Optional<Boolean> preserveBootVolume() {
        return Optional.ofNullable(this.preserveBootVolume);
    }
    public Optional<String> privateIp() {
        return Optional.ofNullable(this.privateIp);
    }
    public Optional<String> publicIp() {
        return Optional.ofNullable(this.publicIp);
    }
    /**
     * @return The region that contains the availability domain the instance is running in.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The shape of the instance. The shape determines the number of CPUs and the amount of memory allocated to the instance. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    /**
     * @return The shape configuration for an instance. The shape configuration determines the resources allocated to an instance.
     * 
     */
    public List<GetInstancesInstanceShapeConfig> shapeConfigs() {
        return this.shapeConfigs == null ? List.of() : this.shapeConfigs;
    }
    public List<GetInstancesInstanceSourceDetail> sourceDetails() {
        return this.sourceDetails == null ? List.of() : this.sourceDetails;
    }
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @deprecated
     * The &#39;subnet_id&#39; field has been deprecated. Please use &#39;subnet_id under create_vnic_details&#39; instead.
     * 
     */
    @Deprecated /* The 'subnet_id' field has been deprecated. Please use 'subnet_id under create_vnic_details' instead. */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The date and time the instance was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the instance is expected to be stopped / started,  in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). After that time if instance hasn&#39;t been rebooted, Oracle will reboot the instance within 24 hours of the due time. Regardless of how the instance was stopped, the flag will be reset to empty as soon as instance reaches Stopped state. Example: `2018-05-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeMaintenanceRebootDue() {
        return Optional.ofNullable(this.timeMaintenanceRebootDue);
    }
    public Optional<String> updateOperationConstraint() {
        return Optional.ofNullable(this.updateOperationConstraint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetInstancesInstanceAgentConfig> agentConfigs;
        private @Nullable Boolean async;
        private @Nullable List<GetInstancesInstanceAvailabilityConfig> availabilityConfigs;
        private @Nullable String availabilityDomain;
        private @Nullable String bootVolumeId;
        private @Nullable String capacityReservationId;
        private @Nullable String compartmentId;
        private @Nullable String computeClusterId;
        private @Nullable List<GetInstancesInstanceCreateVnicDetail> createVnicDetails;
        private @Nullable String dedicatedVmHostId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> extendedMetadata;
        private @Nullable String faultDomain;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String hostnameLabel;
        private @Nullable String id;
        private @Nullable String image;
        private @Nullable String instanceConfigurationId;
        private @Nullable List<GetInstancesInstanceInstanceOption> instanceOptions;
        private @Nullable String ipxeScript;
        private @Nullable Boolean isCrossNumaNode;
        private @Nullable Boolean isPvEncryptionInTransitEnabled;
        private @Nullable String launchMode;
        private @Nullable List<GetInstancesInstanceLaunchOption> launchOptions;
        private @Nullable Map<String,Object> metadata;
        private @Nullable List<GetInstancesInstancePlatformConfig> platformConfigs;
        private @Nullable List<GetInstancesInstancePreemptibleInstanceConfig> preemptibleInstanceConfigs;
        private @Nullable Boolean preserveBootVolume;
        private @Nullable String privateIp;
        private @Nullable String publicIp;
        private @Nullable String region;
        private @Nullable String shape;
        private @Nullable List<GetInstancesInstanceShapeConfig> shapeConfigs;
        private @Nullable List<GetInstancesInstanceSourceDetail> sourceDetails;
        private @Nullable String state;
        private @Nullable String subnetId;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeMaintenanceRebootDue;
        private @Nullable String updateOperationConstraint;
        public Builder() {}
        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentConfigs = defaults.agentConfigs;
    	      this.async = defaults.async;
    	      this.availabilityConfigs = defaults.availabilityConfigs;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bootVolumeId = defaults.bootVolumeId;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeClusterId = defaults.computeClusterId;
    	      this.createVnicDetails = defaults.createVnicDetails;
    	      this.dedicatedVmHostId = defaults.dedicatedVmHostId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.extendedMetadata = defaults.extendedMetadata;
    	      this.faultDomain = defaults.faultDomain;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostnameLabel = defaults.hostnameLabel;
    	      this.id = defaults.id;
    	      this.image = defaults.image;
    	      this.instanceConfigurationId = defaults.instanceConfigurationId;
    	      this.instanceOptions = defaults.instanceOptions;
    	      this.ipxeScript = defaults.ipxeScript;
    	      this.isCrossNumaNode = defaults.isCrossNumaNode;
    	      this.isPvEncryptionInTransitEnabled = defaults.isPvEncryptionInTransitEnabled;
    	      this.launchMode = defaults.launchMode;
    	      this.launchOptions = defaults.launchOptions;
    	      this.metadata = defaults.metadata;
    	      this.platformConfigs = defaults.platformConfigs;
    	      this.preemptibleInstanceConfigs = defaults.preemptibleInstanceConfigs;
    	      this.preserveBootVolume = defaults.preserveBootVolume;
    	      this.privateIp = defaults.privateIp;
    	      this.publicIp = defaults.publicIp;
    	      this.region = defaults.region;
    	      this.shape = defaults.shape;
    	      this.shapeConfigs = defaults.shapeConfigs;
    	      this.sourceDetails = defaults.sourceDetails;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeMaintenanceRebootDue = defaults.timeMaintenanceRebootDue;
    	      this.updateOperationConstraint = defaults.updateOperationConstraint;
        }

        @CustomType.Setter
        public Builder agentConfigs(@Nullable List<GetInstancesInstanceAgentConfig> agentConfigs) {
            this.agentConfigs = agentConfigs;
            return this;
        }
        public Builder agentConfigs(GetInstancesInstanceAgentConfig... agentConfigs) {
            return agentConfigs(List.of(agentConfigs));
        }
        @CustomType.Setter
        public Builder async(@Nullable Boolean async) {
            this.async = async;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityConfigs(@Nullable List<GetInstancesInstanceAvailabilityConfig> availabilityConfigs) {
            this.availabilityConfigs = availabilityConfigs;
            return this;
        }
        public Builder availabilityConfigs(GetInstancesInstanceAvailabilityConfig... availabilityConfigs) {
            return availabilityConfigs(List.of(availabilityConfigs));
        }
        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder bootVolumeId(@Nullable String bootVolumeId) {
            this.bootVolumeId = bootVolumeId;
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(@Nullable String capacityReservationId) {
            this.capacityReservationId = capacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeClusterId(@Nullable String computeClusterId) {
            this.computeClusterId = computeClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder createVnicDetails(@Nullable List<GetInstancesInstanceCreateVnicDetail> createVnicDetails) {
            this.createVnicDetails = createVnicDetails;
            return this;
        }
        public Builder createVnicDetails(GetInstancesInstanceCreateVnicDetail... createVnicDetails) {
            return createVnicDetails(List.of(createVnicDetails));
        }
        @CustomType.Setter
        public Builder dedicatedVmHostId(@Nullable String dedicatedVmHostId) {
            this.dedicatedVmHostId = dedicatedVmHostId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder extendedMetadata(@Nullable Map<String,Object> extendedMetadata) {
            this.extendedMetadata = extendedMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(@Nullable String faultDomain) {
            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameLabel(@Nullable String hostnameLabel) {
            this.hostnameLabel = hostnameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder image(@Nullable String image) {
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder instanceConfigurationId(@Nullable String instanceConfigurationId) {
            this.instanceConfigurationId = instanceConfigurationId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceOptions(@Nullable List<GetInstancesInstanceInstanceOption> instanceOptions) {
            this.instanceOptions = instanceOptions;
            return this;
        }
        public Builder instanceOptions(GetInstancesInstanceInstanceOption... instanceOptions) {
            return instanceOptions(List.of(instanceOptions));
        }
        @CustomType.Setter
        public Builder ipxeScript(@Nullable String ipxeScript) {
            this.ipxeScript = ipxeScript;
            return this;
        }
        @CustomType.Setter
        public Builder isCrossNumaNode(@Nullable Boolean isCrossNumaNode) {
            this.isCrossNumaNode = isCrossNumaNode;
            return this;
        }
        @CustomType.Setter
        public Builder isPvEncryptionInTransitEnabled(@Nullable Boolean isPvEncryptionInTransitEnabled) {
            this.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder launchMode(@Nullable String launchMode) {
            this.launchMode = launchMode;
            return this;
        }
        @CustomType.Setter
        public Builder launchOptions(@Nullable List<GetInstancesInstanceLaunchOption> launchOptions) {
            this.launchOptions = launchOptions;
            return this;
        }
        public Builder launchOptions(GetInstancesInstanceLaunchOption... launchOptions) {
            return launchOptions(List.of(launchOptions));
        }
        @CustomType.Setter
        public Builder metadata(@Nullable Map<String,Object> metadata) {
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder platformConfigs(@Nullable List<GetInstancesInstancePlatformConfig> platformConfigs) {
            this.platformConfigs = platformConfigs;
            return this;
        }
        public Builder platformConfigs(GetInstancesInstancePlatformConfig... platformConfigs) {
            return platformConfigs(List.of(platformConfigs));
        }
        @CustomType.Setter
        public Builder preemptibleInstanceConfigs(@Nullable List<GetInstancesInstancePreemptibleInstanceConfig> preemptibleInstanceConfigs) {
            this.preemptibleInstanceConfigs = preemptibleInstanceConfigs;
            return this;
        }
        public Builder preemptibleInstanceConfigs(GetInstancesInstancePreemptibleInstanceConfig... preemptibleInstanceConfigs) {
            return preemptibleInstanceConfigs(List.of(preemptibleInstanceConfigs));
        }
        @CustomType.Setter
        public Builder preserveBootVolume(@Nullable Boolean preserveBootVolume) {
            this.preserveBootVolume = preserveBootVolume;
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(@Nullable String privateIp) {
            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(@Nullable String publicIp) {
            this.publicIp = publicIp;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeConfigs(@Nullable List<GetInstancesInstanceShapeConfig> shapeConfigs) {
            this.shapeConfigs = shapeConfigs;
            return this;
        }
        public Builder shapeConfigs(GetInstancesInstanceShapeConfig... shapeConfigs) {
            return shapeConfigs(List.of(shapeConfigs));
        }
        @CustomType.Setter
        public Builder sourceDetails(@Nullable List<GetInstancesInstanceSourceDetail> sourceDetails) {
            this.sourceDetails = sourceDetails;
            return this;
        }
        public Builder sourceDetails(GetInstancesInstanceSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceRebootDue(@Nullable String timeMaintenanceRebootDue) {
            this.timeMaintenanceRebootDue = timeMaintenanceRebootDue;
            return this;
        }
        @CustomType.Setter
        public Builder updateOperationConstraint(@Nullable String updateOperationConstraint) {
            this.updateOperationConstraint = updateOperationConstraint;
            return this;
        }
        public GetInstancesInstance build() {
            final var o = new GetInstancesInstance();
            o.agentConfigs = agentConfigs;
            o.async = async;
            o.availabilityConfigs = availabilityConfigs;
            o.availabilityDomain = availabilityDomain;
            o.bootVolumeId = bootVolumeId;
            o.capacityReservationId = capacityReservationId;
            o.compartmentId = compartmentId;
            o.computeClusterId = computeClusterId;
            o.createVnicDetails = createVnicDetails;
            o.dedicatedVmHostId = dedicatedVmHostId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.extendedMetadata = extendedMetadata;
            o.faultDomain = faultDomain;
            o.freeformTags = freeformTags;
            o.hostnameLabel = hostnameLabel;
            o.id = id;
            o.image = image;
            o.instanceConfigurationId = instanceConfigurationId;
            o.instanceOptions = instanceOptions;
            o.ipxeScript = ipxeScript;
            o.isCrossNumaNode = isCrossNumaNode;
            o.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            o.launchMode = launchMode;
            o.launchOptions = launchOptions;
            o.metadata = metadata;
            o.platformConfigs = platformConfigs;
            o.preemptibleInstanceConfigs = preemptibleInstanceConfigs;
            o.preserveBootVolume = preserveBootVolume;
            o.privateIp = privateIp;
            o.publicIp = publicIp;
            o.region = region;
            o.shape = shape;
            o.shapeConfigs = shapeConfigs;
            o.sourceDetails = sourceDetails;
            o.state = state;
            o.subnetId = subnetId;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeMaintenanceRebootDue = timeMaintenanceRebootDue;
            o.updateOperationConstraint = updateOperationConstraint;
            return o;
        }
    }
}
