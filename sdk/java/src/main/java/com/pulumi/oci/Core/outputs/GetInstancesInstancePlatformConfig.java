// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancesInstancePlatformConfig {
    /**
     * @return Whether virtualization instructions are available.
     * 
     */
    private @Nullable Boolean areVirtualInstructionsEnabled;
    /**
     * @return Instance Platform Configuration Configuration Map for flexible setting input.
     * 
     */
    private @Nullable Map<String,Object> configMap;
    /**
     * @return Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
     * 
     */
    private @Nullable Boolean isAccessControlServiceEnabled;
    /**
     * @return Whether the input-output memory management unit is enabled.
     * 
     */
    private @Nullable Boolean isInputOutputMemoryManagementUnitEnabled;
    /**
     * @return Whether the Measured Boot is to be enabled on the instance.
     * 
     */
    private @Nullable Boolean isMeasuredBootEnabled;
    /**
     * @return Whether the instance is a confidential instance. If this value is `true`, the instance is a confidential instance. The default value is `false`.
     * 
     */
    private @Nullable Boolean isMemoryEncryptionEnabled;
    /**
     * @return Whether the Secure Boot is to be enabled on the instance.
     * 
     */
    private @Nullable Boolean isSecureBootEnabled;
    /**
     * @return Whether symmetric multi-threading is enabled on the instance.
     * 
     */
    private @Nullable Boolean isSymmetricMultiThreadingEnabled;
    /**
     * @return Whether the Trusted Platform Module (TPM) is to be enabled on the instance.
     * 
     */
    private @Nullable Boolean isTrustedPlatformModuleEnabled;
    /**
     * @return The number of NUMA nodes per socket (NPS).
     * 
     */
    private @Nullable String numaNodesPerSocket;
    /**
     * @return The percentage of cores enabled.
     * 
     */
    private @Nullable Integer percentageOfCoresEnabled;
    /**
     * @return (Required) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    private @Nullable String type;

    private GetInstancesInstancePlatformConfig() {}
    /**
     * @return Whether virtualization instructions are available.
     * 
     */
    public Optional<Boolean> areVirtualInstructionsEnabled() {
        return Optional.ofNullable(this.areVirtualInstructionsEnabled);
    }
    /**
     * @return Instance Platform Configuration Configuration Map for flexible setting input.
     * 
     */
    public Map<String,Object> configMap() {
        return this.configMap == null ? Map.of() : this.configMap;
    }
    /**
     * @return Whether the Access Control Service is enabled on the instance. When enabled, the platform can enforce PCIe device isolation, required for VFIO device passthrough.
     * 
     */
    public Optional<Boolean> isAccessControlServiceEnabled() {
        return Optional.ofNullable(this.isAccessControlServiceEnabled);
    }
    /**
     * @return Whether the input-output memory management unit is enabled.
     * 
     */
    public Optional<Boolean> isInputOutputMemoryManagementUnitEnabled() {
        return Optional.ofNullable(this.isInputOutputMemoryManagementUnitEnabled);
    }
    /**
     * @return Whether the Measured Boot is to be enabled on the instance.
     * 
     */
    public Optional<Boolean> isMeasuredBootEnabled() {
        return Optional.ofNullable(this.isMeasuredBootEnabled);
    }
    /**
     * @return Whether the instance is a confidential instance. If this value is `true`, the instance is a confidential instance. The default value is `false`.
     * 
     */
    public Optional<Boolean> isMemoryEncryptionEnabled() {
        return Optional.ofNullable(this.isMemoryEncryptionEnabled);
    }
    /**
     * @return Whether the Secure Boot is to be enabled on the instance.
     * 
     */
    public Optional<Boolean> isSecureBootEnabled() {
        return Optional.ofNullable(this.isSecureBootEnabled);
    }
    /**
     * @return Whether symmetric multi-threading is enabled on the instance.
     * 
     */
    public Optional<Boolean> isSymmetricMultiThreadingEnabled() {
        return Optional.ofNullable(this.isSymmetricMultiThreadingEnabled);
    }
    /**
     * @return Whether the Trusted Platform Module (TPM) is to be enabled on the instance.
     * 
     */
    public Optional<Boolean> isTrustedPlatformModuleEnabled() {
        return Optional.ofNullable(this.isTrustedPlatformModuleEnabled);
    }
    /**
     * @return The number of NUMA nodes per socket (NPS).
     * 
     */
    public Optional<String> numaNodesPerSocket() {
        return Optional.ofNullable(this.numaNodesPerSocket);
    }
    /**
     * @return The percentage of cores enabled.
     * 
     */
    public Optional<Integer> percentageOfCoresEnabled() {
        return Optional.ofNullable(this.percentageOfCoresEnabled);
    }
    /**
     * @return (Required) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstancePlatformConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean areVirtualInstructionsEnabled;
        private @Nullable Map<String,Object> configMap;
        private @Nullable Boolean isAccessControlServiceEnabled;
        private @Nullable Boolean isInputOutputMemoryManagementUnitEnabled;
        private @Nullable Boolean isMeasuredBootEnabled;
        private @Nullable Boolean isMemoryEncryptionEnabled;
        private @Nullable Boolean isSecureBootEnabled;
        private @Nullable Boolean isSymmetricMultiThreadingEnabled;
        private @Nullable Boolean isTrustedPlatformModuleEnabled;
        private @Nullable String numaNodesPerSocket;
        private @Nullable Integer percentageOfCoresEnabled;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetInstancesInstancePlatformConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areVirtualInstructionsEnabled = defaults.areVirtualInstructionsEnabled;
    	      this.configMap = defaults.configMap;
    	      this.isAccessControlServiceEnabled = defaults.isAccessControlServiceEnabled;
    	      this.isInputOutputMemoryManagementUnitEnabled = defaults.isInputOutputMemoryManagementUnitEnabled;
    	      this.isMeasuredBootEnabled = defaults.isMeasuredBootEnabled;
    	      this.isMemoryEncryptionEnabled = defaults.isMemoryEncryptionEnabled;
    	      this.isSecureBootEnabled = defaults.isSecureBootEnabled;
    	      this.isSymmetricMultiThreadingEnabled = defaults.isSymmetricMultiThreadingEnabled;
    	      this.isTrustedPlatformModuleEnabled = defaults.isTrustedPlatformModuleEnabled;
    	      this.numaNodesPerSocket = defaults.numaNodesPerSocket;
    	      this.percentageOfCoresEnabled = defaults.percentageOfCoresEnabled;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder areVirtualInstructionsEnabled(@Nullable Boolean areVirtualInstructionsEnabled) {
            this.areVirtualInstructionsEnabled = areVirtualInstructionsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder configMap(@Nullable Map<String,Object> configMap) {
            this.configMap = configMap;
            return this;
        }
        @CustomType.Setter
        public Builder isAccessControlServiceEnabled(@Nullable Boolean isAccessControlServiceEnabled) {
            this.isAccessControlServiceEnabled = isAccessControlServiceEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isInputOutputMemoryManagementUnitEnabled(@Nullable Boolean isInputOutputMemoryManagementUnitEnabled) {
            this.isInputOutputMemoryManagementUnitEnabled = isInputOutputMemoryManagementUnitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isMeasuredBootEnabled(@Nullable Boolean isMeasuredBootEnabled) {
            this.isMeasuredBootEnabled = isMeasuredBootEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isMemoryEncryptionEnabled(@Nullable Boolean isMemoryEncryptionEnabled) {
            this.isMemoryEncryptionEnabled = isMemoryEncryptionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSecureBootEnabled(@Nullable Boolean isSecureBootEnabled) {
            this.isSecureBootEnabled = isSecureBootEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSymmetricMultiThreadingEnabled(@Nullable Boolean isSymmetricMultiThreadingEnabled) {
            this.isSymmetricMultiThreadingEnabled = isSymmetricMultiThreadingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isTrustedPlatformModuleEnabled(@Nullable Boolean isTrustedPlatformModuleEnabled) {
            this.isTrustedPlatformModuleEnabled = isTrustedPlatformModuleEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder numaNodesPerSocket(@Nullable String numaNodesPerSocket) {
            this.numaNodesPerSocket = numaNodesPerSocket;
            return this;
        }
        @CustomType.Setter
        public Builder percentageOfCoresEnabled(@Nullable Integer percentageOfCoresEnabled) {
            this.percentageOfCoresEnabled = percentageOfCoresEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetInstancesInstancePlatformConfig build() {
            final var o = new GetInstancesInstancePlatformConfig();
            o.areVirtualInstructionsEnabled = areVirtualInstructionsEnabled;
            o.configMap = configMap;
            o.isAccessControlServiceEnabled = isAccessControlServiceEnabled;
            o.isInputOutputMemoryManagementUnitEnabled = isInputOutputMemoryManagementUnitEnabled;
            o.isMeasuredBootEnabled = isMeasuredBootEnabled;
            o.isMemoryEncryptionEnabled = isMemoryEncryptionEnabled;
            o.isSecureBootEnabled = isSecureBootEnabled;
            o.isSymmetricMultiThreadingEnabled = isSymmetricMultiThreadingEnabled;
            o.isTrustedPlatformModuleEnabled = isTrustedPlatformModuleEnabled;
            o.numaNodesPerSocket = numaNodesPerSocket;
            o.percentageOfCoresEnabled = percentageOfCoresEnabled;
            o.type = type;
            return o;
        }
    }
}
