// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary {
    /**
     * @return Address type of the CIDR within a subnet.
     * 
     */
    private String addressType;
    /**
     * @return The CIDR range of a subnet.
     * 
     */
    private String cidr;
    /**
     * @return The CIDR utilisation of a subnet.
     * 
     */
    private Double utilization;

    private GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary() {}
    /**
     * @return Address type of the CIDR within a subnet.
     * 
     */
    public String addressType() {
        return this.addressType;
    }
    /**
     * @return The CIDR range of a subnet.
     * 
     */
    public String cidr() {
        return this.cidr;
    }
    /**
     * @return The CIDR utilisation of a subnet.
     * 
     */
    public Double utilization() {
        return this.utilization;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressType;
        private String cidr;
        private Double utilization;
        public Builder() {}
        public Builder(GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressType = defaults.addressType;
    	      this.cidr = defaults.cidr;
    	      this.utilization = defaults.utilization;
        }

        @CustomType.Setter
        public Builder addressType(String addressType) {
            if (addressType == null) {
              throw new MissingRequiredPropertyException("GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary", "addressType");
            }
            this.addressType = addressType;
            return this;
        }
        @CustomType.Setter
        public Builder cidr(String cidr) {
            if (cidr == null) {
              throw new MissingRequiredPropertyException("GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary", "cidr");
            }
            this.cidr = cidr;
            return this;
        }
        @CustomType.Setter
        public Builder utilization(Double utilization) {
            if (utilization == null) {
              throw new MissingRequiredPropertyException("GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary", "utilization");
            }
            this.utilization = utilization;
            return this;
        }
        public GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary build() {
            final var _resultValue = new GetIpInventorySubnetCidrIpInventoryCidrUtilizationSummary();
            _resultValue.addressType = addressType;
            _resultValue.cidr = cidr;
            _resultValue.utilization = utilization;
            return _resultValue;
        }
    }
}
