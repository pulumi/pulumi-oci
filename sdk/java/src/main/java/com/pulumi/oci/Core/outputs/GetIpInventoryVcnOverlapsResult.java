// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetIpInventoryVcnOverlapsFilter;
import com.pulumi.oci.Core.outputs.GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetIpInventoryVcnOverlapsResult {
    private List<String> compartmentLists;
    private @Nullable List<GetIpInventoryVcnOverlapsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Lists `IpInventoryVcnOverlapSummary` object.
     * 
     */
    private List<GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary> ipInventoryVcnOverlapSummaries;
    /**
     * @return The timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String lastUpdatedTimestamp;
    /**
     * @return Indicates the status of the data.
     * 
     */
    private String message;
    /**
     * @return The overlap count for the given VCN and compartments.
     * 
     */
    private Integer overlapCount;
    private List<String> regionLists;
    private String vcnId;

    private GetIpInventoryVcnOverlapsResult() {}
    public List<String> compartmentLists() {
        return this.compartmentLists;
    }
    public List<GetIpInventoryVcnOverlapsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Lists `IpInventoryVcnOverlapSummary` object.
     * 
     */
    public List<GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary> ipInventoryVcnOverlapSummaries() {
        return this.ipInventoryVcnOverlapSummaries;
    }
    /**
     * @return The timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }
    /**
     * @return Indicates the status of the data.
     * 
     */
    public String message() {
        return this.message;
    }
    /**
     * @return The overlap count for the given VCN and compartments.
     * 
     */
    public Integer overlapCount() {
        return this.overlapCount;
    }
    public List<String> regionLists() {
        return this.regionLists;
    }
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpInventoryVcnOverlapsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> compartmentLists;
        private @Nullable List<GetIpInventoryVcnOverlapsFilter> filters;
        private String id;
        private List<GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary> ipInventoryVcnOverlapSummaries;
        private String lastUpdatedTimestamp;
        private String message;
        private Integer overlapCount;
        private List<String> regionLists;
        private String vcnId;
        public Builder() {}
        public Builder(GetIpInventoryVcnOverlapsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentLists = defaults.compartmentLists;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ipInventoryVcnOverlapSummaries = defaults.ipInventoryVcnOverlapSummaries;
    	      this.lastUpdatedTimestamp = defaults.lastUpdatedTimestamp;
    	      this.message = defaults.message;
    	      this.overlapCount = defaults.overlapCount;
    	      this.regionLists = defaults.regionLists;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder compartmentLists(List<String> compartmentLists) {
            if (compartmentLists == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "compartmentLists");
            }
            this.compartmentLists = compartmentLists;
            return this;
        }
        public Builder compartmentLists(String... compartmentLists) {
            return compartmentLists(List.of(compartmentLists));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetIpInventoryVcnOverlapsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetIpInventoryVcnOverlapsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipInventoryVcnOverlapSummaries(List<GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary> ipInventoryVcnOverlapSummaries) {
            if (ipInventoryVcnOverlapSummaries == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "ipInventoryVcnOverlapSummaries");
            }
            this.ipInventoryVcnOverlapSummaries = ipInventoryVcnOverlapSummaries;
            return this;
        }
        public Builder ipInventoryVcnOverlapSummaries(GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary... ipInventoryVcnOverlapSummaries) {
            return ipInventoryVcnOverlapSummaries(List.of(ipInventoryVcnOverlapSummaries));
        }
        @CustomType.Setter
        public Builder lastUpdatedTimestamp(String lastUpdatedTimestamp) {
            if (lastUpdatedTimestamp == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "lastUpdatedTimestamp");
            }
            this.lastUpdatedTimestamp = lastUpdatedTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder message(String message) {
            if (message == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "message");
            }
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder overlapCount(Integer overlapCount) {
            if (overlapCount == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "overlapCount");
            }
            this.overlapCount = overlapCount;
            return this;
        }
        @CustomType.Setter
        public Builder regionLists(List<String> regionLists) {
            if (regionLists == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "regionLists");
            }
            this.regionLists = regionLists;
            return this;
        }
        public Builder regionLists(String... regionLists) {
            return regionLists(List.of(regionLists));
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            if (vcnId == null) {
              throw new MissingRequiredPropertyException("GetIpInventoryVcnOverlapsResult", "vcnId");
            }
            this.vcnId = vcnId;
            return this;
        }
        public GetIpInventoryVcnOverlapsResult build() {
            final var _resultValue = new GetIpInventoryVcnOverlapsResult();
            _resultValue.compartmentLists = compartmentLists;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.ipInventoryVcnOverlapSummaries = ipInventoryVcnOverlapSummaries;
            _resultValue.lastUpdatedTimestamp = lastUpdatedTimestamp;
            _resultValue.message = message;
            _resultValue.overlapCount = overlapCount;
            _resultValue.regionLists = regionLists;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
