// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIpsecConnectionTunnelDpdConfig {
    /**
     * @return Dead peer detection (DPD) mode set on the Oracle side of the connection.
     * 
     */
    private String dpdMode;
    /**
     * @return DPD timeout in seconds.
     * 
     */
    private Integer dpdTimeoutInSec;

    private GetIpsecConnectionTunnelDpdConfig() {}
    /**
     * @return Dead peer detection (DPD) mode set on the Oracle side of the connection.
     * 
     */
    public String dpdMode() {
        return this.dpdMode;
    }
    /**
     * @return DPD timeout in seconds.
     * 
     */
    public Integer dpdTimeoutInSec() {
        return this.dpdTimeoutInSec;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpsecConnectionTunnelDpdConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dpdMode;
        private Integer dpdTimeoutInSec;
        public Builder() {}
        public Builder(GetIpsecConnectionTunnelDpdConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dpdMode = defaults.dpdMode;
    	      this.dpdTimeoutInSec = defaults.dpdTimeoutInSec;
        }

        @CustomType.Setter
        public Builder dpdMode(String dpdMode) {
            if (dpdMode == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelDpdConfig", "dpdMode");
            }
            this.dpdMode = dpdMode;
            return this;
        }
        @CustomType.Setter
        public Builder dpdTimeoutInSec(Integer dpdTimeoutInSec) {
            if (dpdTimeoutInSec == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelDpdConfig", "dpdTimeoutInSec");
            }
            this.dpdTimeoutInSec = dpdTimeoutInSec;
            return this;
        }
        public GetIpsecConnectionTunnelDpdConfig build() {
            final var _resultValue = new GetIpsecConnectionTunnelDpdConfig();
            _resultValue.dpdMode = dpdMode;
            _resultValue.dpdTimeoutInSec = dpdTimeoutInSec;
            return _resultValue;
        }
    }
}
