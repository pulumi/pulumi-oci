// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIpsecConnectionTunnelPhaseTwoDetail {
    /**
     * @return Phase two authentication algorithm proposed during tunnel negotiation.
     * 
     */
    private String customAuthenticationAlgorithm;
    /**
     * @return The proposed custom phase two encryption algorithm.
     * 
     */
    private String customEncryptionAlgorithm;
    /**
     * @return The proposed Diffie-Hellman group.
     * 
     */
    private String dhGroup;
    /**
     * @return Indicates whether custom phase two configuration is enabled. If this option is not enabled, default settings are proposed.
     * 
     */
    private Boolean isCustomPhaseTwoConfig;
    /**
     * @return Indicates that ESP phase two is established.
     * 
     */
    private Boolean isEspEstablished;
    /**
     * @return Indicates that PFS (perfect forward secrecy) is enabled.
     * 
     */
    private Boolean isPfsEnabled;
    /**
     * @return The total configured lifetime of the IKE security association.
     * 
     */
    private Integer lifetime;
    /**
     * @return The negotiated phase two authentication algorithm.
     * 
     */
    private String negotiatedAuthenticationAlgorithm;
    /**
     * @return The negotiated Diffie-Hellman group.
     * 
     */
    private String negotiatedDhGroup;
    /**
     * @return The negotiated encryption algorithm.
     * 
     */
    private String negotiatedEncryptionAlgorithm;
    /**
     * @deprecated
     * The &#39;phase_two_details.0.remaining_lifetime&#39; field has been deprecated. Please use &#39;phase_two_details.0.remaining_lifetime_int&#39; instead.
     * 
     */
    @Deprecated /* The 'phase_two_details.0.remaining_lifetime' field has been deprecated. Please use 'phase_two_details.0.remaining_lifetime_int' instead. */
    private String remainingLifetime;
    /**
     * @return The remaining lifetime before the key is refreshed.
     * 
     */
    private Integer remainingLifetimeInt;
    /**
     * @return The date and time the remaining lifetime was last retrieved, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String remainingLifetimeLastRetrieved;

    private GetIpsecConnectionTunnelPhaseTwoDetail() {}
    /**
     * @return Phase two authentication algorithm proposed during tunnel negotiation.
     * 
     */
    public String customAuthenticationAlgorithm() {
        return this.customAuthenticationAlgorithm;
    }
    /**
     * @return The proposed custom phase two encryption algorithm.
     * 
     */
    public String customEncryptionAlgorithm() {
        return this.customEncryptionAlgorithm;
    }
    /**
     * @return The proposed Diffie-Hellman group.
     * 
     */
    public String dhGroup() {
        return this.dhGroup;
    }
    /**
     * @return Indicates whether custom phase two configuration is enabled. If this option is not enabled, default settings are proposed.
     * 
     */
    public Boolean isCustomPhaseTwoConfig() {
        return this.isCustomPhaseTwoConfig;
    }
    /**
     * @return Indicates that ESP phase two is established.
     * 
     */
    public Boolean isEspEstablished() {
        return this.isEspEstablished;
    }
    /**
     * @return Indicates that PFS (perfect forward secrecy) is enabled.
     * 
     */
    public Boolean isPfsEnabled() {
        return this.isPfsEnabled;
    }
    /**
     * @return The total configured lifetime of the IKE security association.
     * 
     */
    public Integer lifetime() {
        return this.lifetime;
    }
    /**
     * @return The negotiated phase two authentication algorithm.
     * 
     */
    public String negotiatedAuthenticationAlgorithm() {
        return this.negotiatedAuthenticationAlgorithm;
    }
    /**
     * @return The negotiated Diffie-Hellman group.
     * 
     */
    public String negotiatedDhGroup() {
        return this.negotiatedDhGroup;
    }
    /**
     * @return The negotiated encryption algorithm.
     * 
     */
    public String negotiatedEncryptionAlgorithm() {
        return this.negotiatedEncryptionAlgorithm;
    }
    /**
     * @deprecated
     * The &#39;phase_two_details.0.remaining_lifetime&#39; field has been deprecated. Please use &#39;phase_two_details.0.remaining_lifetime_int&#39; instead.
     * 
     */
    @Deprecated /* The 'phase_two_details.0.remaining_lifetime' field has been deprecated. Please use 'phase_two_details.0.remaining_lifetime_int' instead. */
    public String remainingLifetime() {
        return this.remainingLifetime;
    }
    /**
     * @return The remaining lifetime before the key is refreshed.
     * 
     */
    public Integer remainingLifetimeInt() {
        return this.remainingLifetimeInt;
    }
    /**
     * @return The date and time the remaining lifetime was last retrieved, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String remainingLifetimeLastRetrieved() {
        return this.remainingLifetimeLastRetrieved;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpsecConnectionTunnelPhaseTwoDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String customAuthenticationAlgorithm;
        private String customEncryptionAlgorithm;
        private String dhGroup;
        private Boolean isCustomPhaseTwoConfig;
        private Boolean isEspEstablished;
        private Boolean isPfsEnabled;
        private Integer lifetime;
        private String negotiatedAuthenticationAlgorithm;
        private String negotiatedDhGroup;
        private String negotiatedEncryptionAlgorithm;
        private String remainingLifetime;
        private Integer remainingLifetimeInt;
        private String remainingLifetimeLastRetrieved;
        public Builder() {}
        public Builder(GetIpsecConnectionTunnelPhaseTwoDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customAuthenticationAlgorithm = defaults.customAuthenticationAlgorithm;
    	      this.customEncryptionAlgorithm = defaults.customEncryptionAlgorithm;
    	      this.dhGroup = defaults.dhGroup;
    	      this.isCustomPhaseTwoConfig = defaults.isCustomPhaseTwoConfig;
    	      this.isEspEstablished = defaults.isEspEstablished;
    	      this.isPfsEnabled = defaults.isPfsEnabled;
    	      this.lifetime = defaults.lifetime;
    	      this.negotiatedAuthenticationAlgorithm = defaults.negotiatedAuthenticationAlgorithm;
    	      this.negotiatedDhGroup = defaults.negotiatedDhGroup;
    	      this.negotiatedEncryptionAlgorithm = defaults.negotiatedEncryptionAlgorithm;
    	      this.remainingLifetime = defaults.remainingLifetime;
    	      this.remainingLifetimeInt = defaults.remainingLifetimeInt;
    	      this.remainingLifetimeLastRetrieved = defaults.remainingLifetimeLastRetrieved;
        }

        @CustomType.Setter
        public Builder customAuthenticationAlgorithm(String customAuthenticationAlgorithm) {
            if (customAuthenticationAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "customAuthenticationAlgorithm");
            }
            this.customAuthenticationAlgorithm = customAuthenticationAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder customEncryptionAlgorithm(String customEncryptionAlgorithm) {
            if (customEncryptionAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "customEncryptionAlgorithm");
            }
            this.customEncryptionAlgorithm = customEncryptionAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder dhGroup(String dhGroup) {
            if (dhGroup == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "dhGroup");
            }
            this.dhGroup = dhGroup;
            return this;
        }
        @CustomType.Setter
        public Builder isCustomPhaseTwoConfig(Boolean isCustomPhaseTwoConfig) {
            if (isCustomPhaseTwoConfig == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "isCustomPhaseTwoConfig");
            }
            this.isCustomPhaseTwoConfig = isCustomPhaseTwoConfig;
            return this;
        }
        @CustomType.Setter
        public Builder isEspEstablished(Boolean isEspEstablished) {
            if (isEspEstablished == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "isEspEstablished");
            }
            this.isEspEstablished = isEspEstablished;
            return this;
        }
        @CustomType.Setter
        public Builder isPfsEnabled(Boolean isPfsEnabled) {
            if (isPfsEnabled == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "isPfsEnabled");
            }
            this.isPfsEnabled = isPfsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lifetime(Integer lifetime) {
            if (lifetime == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "lifetime");
            }
            this.lifetime = lifetime;
            return this;
        }
        @CustomType.Setter
        public Builder negotiatedAuthenticationAlgorithm(String negotiatedAuthenticationAlgorithm) {
            if (negotiatedAuthenticationAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "negotiatedAuthenticationAlgorithm");
            }
            this.negotiatedAuthenticationAlgorithm = negotiatedAuthenticationAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder negotiatedDhGroup(String negotiatedDhGroup) {
            if (negotiatedDhGroup == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "negotiatedDhGroup");
            }
            this.negotiatedDhGroup = negotiatedDhGroup;
            return this;
        }
        @CustomType.Setter
        public Builder negotiatedEncryptionAlgorithm(String negotiatedEncryptionAlgorithm) {
            if (negotiatedEncryptionAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "negotiatedEncryptionAlgorithm");
            }
            this.negotiatedEncryptionAlgorithm = negotiatedEncryptionAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder remainingLifetime(String remainingLifetime) {
            if (remainingLifetime == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "remainingLifetime");
            }
            this.remainingLifetime = remainingLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder remainingLifetimeInt(Integer remainingLifetimeInt) {
            if (remainingLifetimeInt == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "remainingLifetimeInt");
            }
            this.remainingLifetimeInt = remainingLifetimeInt;
            return this;
        }
        @CustomType.Setter
        public Builder remainingLifetimeLastRetrieved(String remainingLifetimeLastRetrieved) {
            if (remainingLifetimeLastRetrieved == null) {
              throw new MissingRequiredPropertyException("GetIpsecConnectionTunnelPhaseTwoDetail", "remainingLifetimeLastRetrieved");
            }
            this.remainingLifetimeLastRetrieved = remainingLifetimeLastRetrieved;
            return this;
        }
        public GetIpsecConnectionTunnelPhaseTwoDetail build() {
            final var _resultValue = new GetIpsecConnectionTunnelPhaseTwoDetail();
            _resultValue.customAuthenticationAlgorithm = customAuthenticationAlgorithm;
            _resultValue.customEncryptionAlgorithm = customEncryptionAlgorithm;
            _resultValue.dhGroup = dhGroup;
            _resultValue.isCustomPhaseTwoConfig = isCustomPhaseTwoConfig;
            _resultValue.isEspEstablished = isEspEstablished;
            _resultValue.isPfsEnabled = isPfsEnabled;
            _resultValue.lifetime = lifetime;
            _resultValue.negotiatedAuthenticationAlgorithm = negotiatedAuthenticationAlgorithm;
            _resultValue.negotiatedDhGroup = negotiatedDhGroup;
            _resultValue.negotiatedEncryptionAlgorithm = negotiatedEncryptionAlgorithm;
            _resultValue.remainingLifetime = remainingLifetime;
            _resultValue.remainingLifetimeInt = remainingLifetimeInt;
            _resultValue.remainingLifetimeLastRetrieved = remainingLifetimeLastRetrieved;
            return _resultValue;
        }
    }
}
