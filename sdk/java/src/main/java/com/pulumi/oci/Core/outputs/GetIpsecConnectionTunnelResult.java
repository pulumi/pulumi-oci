// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetIpsecConnectionTunnelBgpSessionInfo;
import com.pulumi.oci.Core.outputs.GetIpsecConnectionTunnelEncryptionDomainConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpsecConnectionTunnelResult {
    /**
     * @return Information needed to establish a BGP Session on an interface.
     * 
     */
    private @Nullable List<GetIpsecConnectionTunnelBgpSessionInfo> bgpSessionInfos;
    /**
     * @return The OCID of the compartment containing the tunnel.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The IP address of Cpe headend.  Example: `129.146.17.50`
     * 
     */
    private @Nullable String cpeIp;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Configuration information used by the encryption domain policy.
     * 
     */
    private @Nullable List<GetIpsecConnectionTunnelEncryptionDomainConfig> encryptionDomainConfigs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Internet Key Exchange protocol version.
     * 
     */
    private @Nullable String ikeVersion;
    private String ipsecId;
    /**
     * @return the routing strategy used for this tunnel, either static route or BGP dynamic routing
     * 
     */
    private @Nullable String routing;
    /**
     * @return The IPSec connection&#39;s tunnel&#39;s lifecycle state.
     * 
     */
    private @Nullable String state;
    /**
     * @return The tunnel&#39;s current state.
     * 
     */
    private @Nullable String status;
    /**
     * @return The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeStatusUpdated;
    private String tunnelId;
    /**
     * @return The IP address of Oracle&#39;s VPN headend.  Example: `129.146.17.50`
     * 
     */
    private @Nullable String vpnIp;

    private GetIpsecConnectionTunnelResult() {}
    /**
     * @return Information needed to establish a BGP Session on an interface.
     * 
     */
    public List<GetIpsecConnectionTunnelBgpSessionInfo> bgpSessionInfos() {
        return this.bgpSessionInfos == null ? List.of() : this.bgpSessionInfos;
    }
    /**
     * @return The OCID of the compartment containing the tunnel.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The IP address of Cpe headend.  Example: `129.146.17.50`
     * 
     */
    public Optional<String> cpeIp() {
        return Optional.ofNullable(this.cpeIp);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Configuration information used by the encryption domain policy.
     * 
     */
    public List<GetIpsecConnectionTunnelEncryptionDomainConfig> encryptionDomainConfigs() {
        return this.encryptionDomainConfigs == null ? List.of() : this.encryptionDomainConfigs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Internet Key Exchange protocol version.
     * 
     */
    public Optional<String> ikeVersion() {
        return Optional.ofNullable(this.ikeVersion);
    }
    public String ipsecId() {
        return this.ipsecId;
    }
    /**
     * @return the routing strategy used for this tunnel, either static route or BGP dynamic routing
     * 
     */
    public Optional<String> routing() {
        return Optional.ofNullable(this.routing);
    }
    /**
     * @return The IPSec connection&#39;s tunnel&#39;s lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The tunnel&#39;s current state.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeStatusUpdated() {
        return Optional.ofNullable(this.timeStatusUpdated);
    }
    public String tunnelId() {
        return this.tunnelId;
    }
    /**
     * @return The IP address of Oracle&#39;s VPN headend.  Example: `129.146.17.50`
     * 
     */
    public Optional<String> vpnIp() {
        return Optional.ofNullable(this.vpnIp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpsecConnectionTunnelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetIpsecConnectionTunnelBgpSessionInfo> bgpSessionInfos;
        private @Nullable String compartmentId;
        private @Nullable String cpeIp;
        private @Nullable String displayName;
        private @Nullable List<GetIpsecConnectionTunnelEncryptionDomainConfig> encryptionDomainConfigs;
        private @Nullable String id;
        private @Nullable String ikeVersion;
        private String ipsecId;
        private @Nullable String routing;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable String timeCreated;
        private @Nullable String timeStatusUpdated;
        private String tunnelId;
        private @Nullable String vpnIp;
        public Builder() {}
        public Builder(GetIpsecConnectionTunnelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgpSessionInfos = defaults.bgpSessionInfos;
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpeIp = defaults.cpeIp;
    	      this.displayName = defaults.displayName;
    	      this.encryptionDomainConfigs = defaults.encryptionDomainConfigs;
    	      this.id = defaults.id;
    	      this.ikeVersion = defaults.ikeVersion;
    	      this.ipsecId = defaults.ipsecId;
    	      this.routing = defaults.routing;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeStatusUpdated = defaults.timeStatusUpdated;
    	      this.tunnelId = defaults.tunnelId;
    	      this.vpnIp = defaults.vpnIp;
        }

        @CustomType.Setter
        public Builder bgpSessionInfos(@Nullable List<GetIpsecConnectionTunnelBgpSessionInfo> bgpSessionInfos) {
            this.bgpSessionInfos = bgpSessionInfos;
            return this;
        }
        public Builder bgpSessionInfos(GetIpsecConnectionTunnelBgpSessionInfo... bgpSessionInfos) {
            return bgpSessionInfos(List.of(bgpSessionInfos));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cpeIp(@Nullable String cpeIp) {
            this.cpeIp = cpeIp;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionDomainConfigs(@Nullable List<GetIpsecConnectionTunnelEncryptionDomainConfig> encryptionDomainConfigs) {
            this.encryptionDomainConfigs = encryptionDomainConfigs;
            return this;
        }
        public Builder encryptionDomainConfigs(GetIpsecConnectionTunnelEncryptionDomainConfig... encryptionDomainConfigs) {
            return encryptionDomainConfigs(List.of(encryptionDomainConfigs));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ikeVersion(@Nullable String ikeVersion) {
            this.ikeVersion = ikeVersion;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecId(String ipsecId) {
            this.ipsecId = Objects.requireNonNull(ipsecId);
            return this;
        }
        @CustomType.Setter
        public Builder routing(@Nullable String routing) {
            this.routing = routing;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeStatusUpdated(@Nullable String timeStatusUpdated) {
            this.timeStatusUpdated = timeStatusUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelId(String tunnelId) {
            this.tunnelId = Objects.requireNonNull(tunnelId);
            return this;
        }
        @CustomType.Setter
        public Builder vpnIp(@Nullable String vpnIp) {
            this.vpnIp = vpnIp;
            return this;
        }
        public GetIpsecConnectionTunnelResult build() {
            final var o = new GetIpsecConnectionTunnelResult();
            o.bgpSessionInfos = bgpSessionInfos;
            o.compartmentId = compartmentId;
            o.cpeIp = cpeIp;
            o.displayName = displayName;
            o.encryptionDomainConfigs = encryptionDomainConfigs;
            o.id = id;
            o.ikeVersion = ikeVersion;
            o.ipsecId = ipsecId;
            o.routing = routing;
            o.state = state;
            o.status = status;
            o.timeCreated = timeCreated;
            o.timeStatusUpdated = timeStatusUpdated;
            o.tunnelId = tunnelId;
            o.vpnIp = vpnIp;
            return o;
        }
    }
}
