// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetListingResourceVersionsAppCatalogListingResourceVersion {
    private List<Integer> accessiblePorts;
    private List<String> allowedActions;
    private List<String> availableRegions;
    private List<String> compatibleShapes;
    private String listingId;
    private String listingResourceId;
    private String listingResourceVersion;
    private String timePublished;

    private GetListingResourceVersionsAppCatalogListingResourceVersion() {}
    public List<Integer> accessiblePorts() {
        return this.accessiblePorts;
    }
    public List<String> allowedActions() {
        return this.allowedActions;
    }
    public List<String> availableRegions() {
        return this.availableRegions;
    }
    public List<String> compatibleShapes() {
        return this.compatibleShapes;
    }
    public String listingId() {
        return this.listingId;
    }
    public String listingResourceId() {
        return this.listingResourceId;
    }
    public String listingResourceVersion() {
        return this.listingResourceVersion;
    }
    public String timePublished() {
        return this.timePublished;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingResourceVersionsAppCatalogListingResourceVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Integer> accessiblePorts;
        private List<String> allowedActions;
        private List<String> availableRegions;
        private List<String> compatibleShapes;
        private String listingId;
        private String listingResourceId;
        private String listingResourceVersion;
        private String timePublished;
        public Builder() {}
        public Builder(GetListingResourceVersionsAppCatalogListingResourceVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessiblePorts = defaults.accessiblePorts;
    	      this.allowedActions = defaults.allowedActions;
    	      this.availableRegions = defaults.availableRegions;
    	      this.compatibleShapes = defaults.compatibleShapes;
    	      this.listingId = defaults.listingId;
    	      this.listingResourceId = defaults.listingResourceId;
    	      this.listingResourceVersion = defaults.listingResourceVersion;
    	      this.timePublished = defaults.timePublished;
        }

        @CustomType.Setter
        public Builder accessiblePorts(List<Integer> accessiblePorts) {
            if (accessiblePorts == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "accessiblePorts");
            }
            this.accessiblePorts = accessiblePorts;
            return this;
        }
        public Builder accessiblePorts(Integer... accessiblePorts) {
            return accessiblePorts(List.of(accessiblePorts));
        }
        @CustomType.Setter
        public Builder allowedActions(List<String> allowedActions) {
            if (allowedActions == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "allowedActions");
            }
            this.allowedActions = allowedActions;
            return this;
        }
        public Builder allowedActions(String... allowedActions) {
            return allowedActions(List.of(allowedActions));
        }
        @CustomType.Setter
        public Builder availableRegions(List<String> availableRegions) {
            if (availableRegions == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "availableRegions");
            }
            this.availableRegions = availableRegions;
            return this;
        }
        public Builder availableRegions(String... availableRegions) {
            return availableRegions(List.of(availableRegions));
        }
        @CustomType.Setter
        public Builder compatibleShapes(List<String> compatibleShapes) {
            if (compatibleShapes == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "compatibleShapes");
            }
            this.compatibleShapes = compatibleShapes;
            return this;
        }
        public Builder compatibleShapes(String... compatibleShapes) {
            return compatibleShapes(List.of(compatibleShapes));
        }
        @CustomType.Setter
        public Builder listingId(String listingId) {
            if (listingId == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "listingId");
            }
            this.listingId = listingId;
            return this;
        }
        @CustomType.Setter
        public Builder listingResourceId(String listingResourceId) {
            if (listingResourceId == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "listingResourceId");
            }
            this.listingResourceId = listingResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder listingResourceVersion(String listingResourceVersion) {
            if (listingResourceVersion == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "listingResourceVersion");
            }
            this.listingResourceVersion = listingResourceVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timePublished(String timePublished) {
            if (timePublished == null) {
              throw new MissingRequiredPropertyException("GetListingResourceVersionsAppCatalogListingResourceVersion", "timePublished");
            }
            this.timePublished = timePublished;
            return this;
        }
        public GetListingResourceVersionsAppCatalogListingResourceVersion build() {
            final var _resultValue = new GetListingResourceVersionsAppCatalogListingResourceVersion();
            _resultValue.accessiblePorts = accessiblePorts;
            _resultValue.allowedActions = allowedActions;
            _resultValue.availableRegions = availableRegions;
            _resultValue.compatibleShapes = compatibleShapes;
            _resultValue.listingId = listingId;
            _resultValue.listingResourceId = listingResourceId;
            _resultValue.listingResourceVersion = listingResourceVersion;
            _resultValue.timePublished = timePublished;
            return _resultValue;
        }
    }
}
