// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPublicIpsPublicIp {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the entity the public IP is assigned to, or in the process of being assigned to.
     * 
     */
    private String assignedEntityId;
    /**
     * @return The type of entity the public IP is assigned to, or in the process of being assigned to.
     * 
     */
    private String assignedEntityType;
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The public IP&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    private String id;
    /**
     * @return The public IP address of the `publicIp` object.  Example: `203.0.113.2`
     * 
     */
    private String ipAddress;
    /**
     * @return A filter to return only public IPs that match given lifetime.
     * 
     */
    private String lifetime;
    /**
     * @return Deprecated. Use `assignedEntityId` instead.
     * 
     */
    private String privateIpId;
    /**
     * @return A filter to return only resources that belong to the given public IP pool.
     * 
     */
    private String publicIpPoolId;
    /**
     * @return Whether the public IP is regional or specific to a particular availability domain.
     * 
     */
    private String scope;
    /**
     * @return The public IP&#39;s current state.
     * 
     */
    private String state;
    /**
     * @return The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetPublicIpsPublicIp() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the entity the public IP is assigned to, or in the process of being assigned to.
     * 
     */
    public String assignedEntityId() {
        return this.assignedEntityId;
    }
    /**
     * @return The type of entity the public IP is assigned to, or in the process of being assigned to.
     * 
     */
    public String assignedEntityType() {
        return this.assignedEntityType;
    }
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The public IP&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The public IP address of the `publicIp` object.  Example: `203.0.113.2`
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return A filter to return only public IPs that match given lifetime.
     * 
     */
    public String lifetime() {
        return this.lifetime;
    }
    /**
     * @return Deprecated. Use `assignedEntityId` instead.
     * 
     */
    public String privateIpId() {
        return this.privateIpId;
    }
    /**
     * @return A filter to return only resources that belong to the given public IP pool.
     * 
     */
    public String publicIpPoolId() {
        return this.publicIpPoolId;
    }
    /**
     * @return Whether the public IP is regional or specific to a particular availability domain.
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return The public IP&#39;s current state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the public IP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicIpsPublicIp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String assignedEntityId;
        private String assignedEntityType;
        private String availabilityDomain;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String ipAddress;
        private String lifetime;
        private String privateIpId;
        private String publicIpPoolId;
        private String scope;
        private String state;
        private String timeCreated;
        public Builder() {}
        public Builder(GetPublicIpsPublicIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedEntityId = defaults.assignedEntityId;
    	      this.assignedEntityType = defaults.assignedEntityType;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.lifetime = defaults.lifetime;
    	      this.privateIpId = defaults.privateIpId;
    	      this.publicIpPoolId = defaults.publicIpPoolId;
    	      this.scope = defaults.scope;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder assignedEntityId(String assignedEntityId) {
            this.assignedEntityId = Objects.requireNonNull(assignedEntityId);
            return this;
        }
        @CustomType.Setter
        public Builder assignedEntityType(String assignedEntityType) {
            this.assignedEntityType = Objects.requireNonNull(assignedEntityType);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder lifetime(String lifetime) {
            this.lifetime = Objects.requireNonNull(lifetime);
            return this;
        }
        @CustomType.Setter
        public Builder privateIpId(String privateIpId) {
            this.privateIpId = Objects.requireNonNull(privateIpId);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpPoolId(String publicIpPoolId) {
            this.publicIpPoolId = Objects.requireNonNull(publicIpPoolId);
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public GetPublicIpsPublicIp build() {
            final var o = new GetPublicIpsPublicIp();
            o.assignedEntityId = assignedEntityId;
            o.assignedEntityType = assignedEntityType;
            o.availabilityDomain = availabilityDomain;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.ipAddress = ipAddress;
            o.lifetime = lifetime;
            o.privateIpId = privateIpId;
            o.publicIpPoolId = publicIpPoolId;
            o.scope = scope;
            o.state = state;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
