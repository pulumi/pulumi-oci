// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRemotePeeringConnectionsRemotePeeringConnection {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     * 
     */
    private @Nullable String drgId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the RPC.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     * 
     */
    private @Nullable Boolean isCrossTenancyPeering;
    /**
     * @return If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC.
     * 
     */
    private @Nullable String peerId;
    /**
     * @return If this RPC is peered, this value is the region that contains the other RPC.  Example: `us-ashburn-1`
     * 
     */
    private @Nullable String peerRegionName;
    /**
     * @return If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC&#39;s tenancy.
     * 
     */
    private @Nullable String peerTenancyId;
    /**
     * @return Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
     * 
     */
    private @Nullable String peeringStatus;
    /**
     * @return The RPC&#39;s current lifecycle state.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;

    private GetRemotePeeringConnectionsRemotePeeringConnection() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
     * 
     */
    public Optional<String> drgId() {
        return Optional.ofNullable(this.drgId);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the RPC.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     * 
     */
    public Optional<Boolean> isCrossTenancyPeering() {
        return Optional.ofNullable(this.isCrossTenancyPeering);
    }
    /**
     * @return If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC.
     * 
     */
    public Optional<String> peerId() {
        return Optional.ofNullable(this.peerId);
    }
    /**
     * @return If this RPC is peered, this value is the region that contains the other RPC.  Example: `us-ashburn-1`
     * 
     */
    public Optional<String> peerRegionName() {
        return Optional.ofNullable(this.peerRegionName);
    }
    /**
     * @return If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC&#39;s tenancy.
     * 
     */
    public Optional<String> peerTenancyId() {
        return Optional.ofNullable(this.peerTenancyId);
    }
    /**
     * @return Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
     * 
     */
    public Optional<String> peeringStatus() {
        return Optional.ofNullable(this.peeringStatus);
    }
    /**
     * @return The RPC&#39;s current lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemotePeeringConnectionsRemotePeeringConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable String drgId;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isCrossTenancyPeering;
        private @Nullable String peerId;
        private @Nullable String peerRegionName;
        private @Nullable String peerTenancyId;
        private @Nullable String peeringStatus;
        private @Nullable String state;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetRemotePeeringConnectionsRemotePeeringConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.drgId = defaults.drgId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCrossTenancyPeering = defaults.isCrossTenancyPeering;
    	      this.peerId = defaults.peerId;
    	      this.peerRegionName = defaults.peerRegionName;
    	      this.peerTenancyId = defaults.peerTenancyId;
    	      this.peeringStatus = defaults.peeringStatus;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder drgId(@Nullable String drgId) {
            this.drgId = drgId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCrossTenancyPeering(@Nullable Boolean isCrossTenancyPeering) {
            this.isCrossTenancyPeering = isCrossTenancyPeering;
            return this;
        }
        @CustomType.Setter
        public Builder peerId(@Nullable String peerId) {
            this.peerId = peerId;
            return this;
        }
        @CustomType.Setter
        public Builder peerRegionName(@Nullable String peerRegionName) {
            this.peerRegionName = peerRegionName;
            return this;
        }
        @CustomType.Setter
        public Builder peerTenancyId(@Nullable String peerTenancyId) {
            this.peerTenancyId = peerTenancyId;
            return this;
        }
        @CustomType.Setter
        public Builder peeringStatus(@Nullable String peeringStatus) {
            this.peeringStatus = peeringStatus;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetRemotePeeringConnectionsRemotePeeringConnection build() {
            final var o = new GetRemotePeeringConnectionsRemotePeeringConnection();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.drgId = drgId;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isCrossTenancyPeering = isCrossTenancyPeering;
            o.peerId = peerId;
            o.peerRegionName = peerRegionName;
            o.peerTenancyId = peerTenancyId;
            o.peeringStatus = peeringStatus;
            o.state = state;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
