// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRouteTablesRouteTableRouteRule {
    /**
     * @return Deprecated. Instead use `destination` and `destinationType`. Requests that include both `cidrBlock` and `destination` will be rejected.
     * 
     * @deprecated
     * The &#39;cidr_block&#39; field has been deprecated. Please use &#39;destination&#39; instead.
     * 
     */
    @Deprecated /* The 'cidr_block' field has been deprecated. Please use 'destination' instead. */
    private String cidrBlock;
    /**
     * @return An optional description of your choice for the rule.
     * 
     */
    private String description;
    /**
     * @return Conceptually, this is the range of IP addresses used for matching when routing traffic. Required if you provide a `destinationType`.
     * 
     */
    private String destination;
    /**
     * @return Type of destination for the rule. Required if you provide a `destination`.
     * 
     */
    private String destinationType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the route rule&#39;s target. For information about the type of targets you can specify, see [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
     * 
     */
    private String networkEntityId;
    private String routeType;

    private GetRouteTablesRouteTableRouteRule() {}
    /**
     * @return Deprecated. Instead use `destination` and `destinationType`. Requests that include both `cidrBlock` and `destination` will be rejected.
     * 
     * @deprecated
     * The &#39;cidr_block&#39; field has been deprecated. Please use &#39;destination&#39; instead.
     * 
     */
    @Deprecated /* The 'cidr_block' field has been deprecated. Please use 'destination' instead. */
    public String cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * @return An optional description of your choice for the rule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Conceptually, this is the range of IP addresses used for matching when routing traffic. Required if you provide a `destinationType`.
     * 
     */
    public String destination() {
        return this.destination;
    }
    /**
     * @return Type of destination for the rule. Required if you provide a `destination`.
     * 
     */
    public String destinationType() {
        return this.destinationType;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the route rule&#39;s target. For information about the type of targets you can specify, see [Route Tables](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingroutetables.htm).
     * 
     */
    public String networkEntityId() {
        return this.networkEntityId;
    }
    public String routeType() {
        return this.routeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteTablesRouteTableRouteRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cidrBlock;
        private String description;
        private String destination;
        private String destinationType;
        private String networkEntityId;
        private String routeType;
        public Builder() {}
        public Builder(GetRouteTablesRouteTableRouteRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.description = defaults.description;
    	      this.destination = defaults.destination;
    	      this.destinationType = defaults.destinationType;
    	      this.networkEntityId = defaults.networkEntityId;
    	      this.routeType = defaults.routeType;
        }

        @CustomType.Setter
        public Builder cidrBlock(String cidrBlock) {
            this.cidrBlock = Objects.requireNonNull(cidrBlock);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder destination(String destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        @CustomType.Setter
        public Builder destinationType(String destinationType) {
            this.destinationType = Objects.requireNonNull(destinationType);
            return this;
        }
        @CustomType.Setter
        public Builder networkEntityId(String networkEntityId) {
            this.networkEntityId = Objects.requireNonNull(networkEntityId);
            return this;
        }
        @CustomType.Setter
        public Builder routeType(String routeType) {
            this.routeType = Objects.requireNonNull(routeType);
            return this;
        }
        public GetRouteTablesRouteTableRouteRule build() {
            final var o = new GetRouteTablesRouteTableRouteRule();
            o.cidrBlock = cidrBlock;
            o.description = description;
            o.destination = destination;
            o.destinationType = destinationType;
            o.networkEntityId = networkEntityId;
            o.routeType = routeType;
            return o;
        }
    }
}
