// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetShapeFilter;
import com.pulumi.oci.Core.outputs.GetShapeShape;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetShapeResult {
    private @Nullable String availabilityDomain;
    private String compartmentId;
    private @Nullable List<GetShapeFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String imageId;
    private @Nullable List<GetShapeShape> shapes;

    private GetShapeResult() {}
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetShapeFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> imageId() {
        return Optional.ofNullable(this.imageId);
    }
    public List<GetShapeShape> shapes() {
        return this.shapes == null ? List.of() : this.shapes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShapeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private @Nullable List<GetShapeFilter> filters;
        private @Nullable String id;
        private @Nullable String imageId;
        private @Nullable List<GetShapeShape> shapes;
        public Builder() {}
        public Builder(GetShapeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.shapes = defaults.shapes;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetShapeFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetShapeFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(@Nullable String imageId) {
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder shapes(@Nullable List<GetShapeShape> shapes) {
            this.shapes = shapes;
            return this;
        }
        public Builder shapes(GetShapeShape... shapes) {
            return shapes(List.of(shapes));
        }
        public GetShapeResult build() {
            final var o = new GetShapeResult();
            o.availabilityDomain = availabilityDomain;
            o.compartmentId = compartmentId;
            o.filters = filters;
            o.id = id;
            o.imageId = imageId;
            o.shapes = shapes;
            return o;
        }
    }
}
