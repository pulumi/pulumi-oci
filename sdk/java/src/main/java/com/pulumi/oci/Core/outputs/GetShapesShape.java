// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetShapesShapeMaxVnicAttachmentOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeMemoryOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeNetworkingBandwidthOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeOcpuOption;
import com.pulumi.oci.Core.outputs.GetShapesShapePlatformConfigOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeRecommendedAlternative;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetShapesShape {
    /**
     * @return For a subcore burstable VM, the supported baseline OCPU utilization for instances that use this shape.
     * 
     */
    private List<String> baselineOcpuUtilizations;
    /**
     * @return How instances that use this shape are charged.
     * 
     */
    private String billingType;
    /**
     * @return A short description of the graphics processing unit (GPU) available for this shape.
     * 
     */
    private String gpuDescription;
    /**
     * @return The number of GPUs available for this shape.
     * 
     */
    private Integer gpus;
    /**
     * @return Whether billing continues when the instances that use this shape are in the stopped state.
     * 
     */
    private Boolean isBilledForStoppedInstance;
    /**
     * @return Whether the shape supports creating flexible instances. A [flexible shape](https://docs.cloud.oracle.com/iaas/Content/Compute/References/computeshapes.htm#flexible) is a shape that lets you customize the number of OCPUs and the amount of memory when launching or resizing your instance.
     * 
     */
    private Boolean isFlexible;
    /**
     * @return Whether Live Migration is currently supported for this shape.
     * 
     */
    private Boolean isLiveMigrationSupported;
    /**
     * @return Whether the shape supports creating subcore or burstable instances. A [burstable instance](https://docs.cloud.oracle.com/iaas/Content/Compute/References/burstable-instances.htm) is a virtual machine (VM) instance that provides a baseline level of CPU performance with the ability to burst to a higher level to support occasional spikes in usage.
     * 
     */
    private Boolean isSubcore;
    /**
     * @return A short description of the local disks available for this shape.
     * 
     */
    private String localDiskDescription;
    /**
     * @return The number of local disks available for this shape.
     * 
     */
    private Integer localDisks;
    /**
     * @return The aggregate size of the local disks available for this shape, in gigabytes.
     * 
     */
    private Double localDisksTotalSizeInGbs;
    /**
     * @return For a flexible shape, the number of VNIC attachments that are available for instances that use this shape.
     * 
     */
    private List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions;
    /**
     * @return The maximum number of VNIC attachments available for this shape.
     * 
     */
    private Integer maxVnicAttachments;
    /**
     * @return The default amount of memory available for this shape, in gigabytes.
     * 
     */
    private Double memoryInGbs;
    /**
     * @return For a flexible shape, the amount of memory available for instances that use this shape.
     * 
     */
    private List<GetShapesShapeMemoryOption> memoryOptions;
    /**
     * @return For a subcore burstable VM, the minimum total baseline OCPUs required. The total baseline OCPUs is equal to baselineOcpuUtilization chosen multiplied by the number of OCPUs chosen.
     * 
     */
    private Double minTotalBaselineOcpusRequired;
    /**
     * @return The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    private String name;
    /**
     * @return The number of physical network interface card (NIC) ports available for this shape.
     * 
     */
    private Integer networkPorts;
    /**
     * @return The networking bandwidth available for this shape, in gigabits per second.
     * 
     */
    private Double networkingBandwidthInGbps;
    /**
     * @return For a flexible shape, the amount of networking bandwidth available for instances that use this shape.
     * 
     */
    private List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions;
    /**
     * @return For a flexible shape, the number of OCPUs available for instances that use this shape.
     * 
     */
    private List<GetShapesShapeOcpuOption> ocpuOptions;
    /**
     * @return The default number of OCPUs available for this shape.
     * 
     */
    private Double ocpus;
    /**
     * @return The list of supported platform configuration options for this shape.
     * 
     */
    private List<GetShapesShapePlatformConfigOption> platformConfigOptions;
    /**
     * @return A short description of the shape&#39;s processor (CPU).
     * 
     */
    private String processorDescription;
    /**
     * @return The list of of compartment quotas for the shape.
     * 
     */
    private List<String> quotaNames;
    /**
     * @return The networking bandwidth available for the remote direct memory access (RDMA) network for this shape, in gigabits per second.
     * 
     */
    private Integer rdmaBandwidthInGbps;
    /**
     * @return The number of networking ports available for the remote direct memory access (RDMA) network between nodes in a high performance computing (HPC) cluster network. If the shape does not support cluster networks, this value is `0`.
     * 
     */
    private Integer rdmaPorts;
    /**
     * @return The list of shapes and shape details (if applicable) that Oracle recommends that you use as an alternative to the current shape.
     * 
     */
    private List<GetShapesShapeRecommendedAlternative> recommendedAlternatives;
    /**
     * @return The list of compatible shapes that this shape can be changed to. For more information, see [Changing the Shape of an Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/resizinginstances.htm).
     * 
     */
    private List<String> resizeCompatibleShapes;

    private GetShapesShape() {}
    /**
     * @return For a subcore burstable VM, the supported baseline OCPU utilization for instances that use this shape.
     * 
     */
    public List<String> baselineOcpuUtilizations() {
        return this.baselineOcpuUtilizations;
    }
    /**
     * @return How instances that use this shape are charged.
     * 
     */
    public String billingType() {
        return this.billingType;
    }
    /**
     * @return A short description of the graphics processing unit (GPU) available for this shape.
     * 
     */
    public String gpuDescription() {
        return this.gpuDescription;
    }
    /**
     * @return The number of GPUs available for this shape.
     * 
     */
    public Integer gpus() {
        return this.gpus;
    }
    /**
     * @return Whether billing continues when the instances that use this shape are in the stopped state.
     * 
     */
    public Boolean isBilledForStoppedInstance() {
        return this.isBilledForStoppedInstance;
    }
    /**
     * @return Whether the shape supports creating flexible instances. A [flexible shape](https://docs.cloud.oracle.com/iaas/Content/Compute/References/computeshapes.htm#flexible) is a shape that lets you customize the number of OCPUs and the amount of memory when launching or resizing your instance.
     * 
     */
    public Boolean isFlexible() {
        return this.isFlexible;
    }
    /**
     * @return Whether Live Migration is currently supported for this shape.
     * 
     */
    public Boolean isLiveMigrationSupported() {
        return this.isLiveMigrationSupported;
    }
    /**
     * @return Whether the shape supports creating subcore or burstable instances. A [burstable instance](https://docs.cloud.oracle.com/iaas/Content/Compute/References/burstable-instances.htm) is a virtual machine (VM) instance that provides a baseline level of CPU performance with the ability to burst to a higher level to support occasional spikes in usage.
     * 
     */
    public Boolean isSubcore() {
        return this.isSubcore;
    }
    /**
     * @return A short description of the local disks available for this shape.
     * 
     */
    public String localDiskDescription() {
        return this.localDiskDescription;
    }
    /**
     * @return The number of local disks available for this shape.
     * 
     */
    public Integer localDisks() {
        return this.localDisks;
    }
    /**
     * @return The aggregate size of the local disks available for this shape, in gigabytes.
     * 
     */
    public Double localDisksTotalSizeInGbs() {
        return this.localDisksTotalSizeInGbs;
    }
    /**
     * @return For a flexible shape, the number of VNIC attachments that are available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions() {
        return this.maxVnicAttachmentOptions;
    }
    /**
     * @return The maximum number of VNIC attachments available for this shape.
     * 
     */
    public Integer maxVnicAttachments() {
        return this.maxVnicAttachments;
    }
    /**
     * @return The default amount of memory available for this shape, in gigabytes.
     * 
     */
    public Double memoryInGbs() {
        return this.memoryInGbs;
    }
    /**
     * @return For a flexible shape, the amount of memory available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeMemoryOption> memoryOptions() {
        return this.memoryOptions;
    }
    /**
     * @return For a subcore burstable VM, the minimum total baseline OCPUs required. The total baseline OCPUs is equal to baselineOcpuUtilization chosen multiplied by the number of OCPUs chosen.
     * 
     */
    public Double minTotalBaselineOcpusRequired() {
        return this.minTotalBaselineOcpusRequired;
    }
    /**
     * @return The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of physical network interface card (NIC) ports available for this shape.
     * 
     */
    public Integer networkPorts() {
        return this.networkPorts;
    }
    /**
     * @return The networking bandwidth available for this shape, in gigabits per second.
     * 
     */
    public Double networkingBandwidthInGbps() {
        return this.networkingBandwidthInGbps;
    }
    /**
     * @return For a flexible shape, the amount of networking bandwidth available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions() {
        return this.networkingBandwidthOptions;
    }
    /**
     * @return For a flexible shape, the number of OCPUs available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeOcpuOption> ocpuOptions() {
        return this.ocpuOptions;
    }
    /**
     * @return The default number of OCPUs available for this shape.
     * 
     */
    public Double ocpus() {
        return this.ocpus;
    }
    /**
     * @return The list of supported platform configuration options for this shape.
     * 
     */
    public List<GetShapesShapePlatformConfigOption> platformConfigOptions() {
        return this.platformConfigOptions;
    }
    /**
     * @return A short description of the shape&#39;s processor (CPU).
     * 
     */
    public String processorDescription() {
        return this.processorDescription;
    }
    /**
     * @return The list of of compartment quotas for the shape.
     * 
     */
    public List<String> quotaNames() {
        return this.quotaNames;
    }
    /**
     * @return The networking bandwidth available for the remote direct memory access (RDMA) network for this shape, in gigabits per second.
     * 
     */
    public Integer rdmaBandwidthInGbps() {
        return this.rdmaBandwidthInGbps;
    }
    /**
     * @return The number of networking ports available for the remote direct memory access (RDMA) network between nodes in a high performance computing (HPC) cluster network. If the shape does not support cluster networks, this value is `0`.
     * 
     */
    public Integer rdmaPorts() {
        return this.rdmaPorts;
    }
    /**
     * @return The list of shapes and shape details (if applicable) that Oracle recommends that you use as an alternative to the current shape.
     * 
     */
    public List<GetShapesShapeRecommendedAlternative> recommendedAlternatives() {
        return this.recommendedAlternatives;
    }
    /**
     * @return The list of compatible shapes that this shape can be changed to. For more information, see [Changing the Shape of an Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/resizinginstances.htm).
     * 
     */
    public List<String> resizeCompatibleShapes() {
        return this.resizeCompatibleShapes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShapesShape defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> baselineOcpuUtilizations;
        private String billingType;
        private String gpuDescription;
        private Integer gpus;
        private Boolean isBilledForStoppedInstance;
        private Boolean isFlexible;
        private Boolean isLiveMigrationSupported;
        private Boolean isSubcore;
        private String localDiskDescription;
        private Integer localDisks;
        private Double localDisksTotalSizeInGbs;
        private List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions;
        private Integer maxVnicAttachments;
        private Double memoryInGbs;
        private List<GetShapesShapeMemoryOption> memoryOptions;
        private Double minTotalBaselineOcpusRequired;
        private String name;
        private Integer networkPorts;
        private Double networkingBandwidthInGbps;
        private List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions;
        private List<GetShapesShapeOcpuOption> ocpuOptions;
        private Double ocpus;
        private List<GetShapesShapePlatformConfigOption> platformConfigOptions;
        private String processorDescription;
        private List<String> quotaNames;
        private Integer rdmaBandwidthInGbps;
        private Integer rdmaPorts;
        private List<GetShapesShapeRecommendedAlternative> recommendedAlternatives;
        private List<String> resizeCompatibleShapes;
        public Builder() {}
        public Builder(GetShapesShape defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineOcpuUtilizations = defaults.baselineOcpuUtilizations;
    	      this.billingType = defaults.billingType;
    	      this.gpuDescription = defaults.gpuDescription;
    	      this.gpus = defaults.gpus;
    	      this.isBilledForStoppedInstance = defaults.isBilledForStoppedInstance;
    	      this.isFlexible = defaults.isFlexible;
    	      this.isLiveMigrationSupported = defaults.isLiveMigrationSupported;
    	      this.isSubcore = defaults.isSubcore;
    	      this.localDiskDescription = defaults.localDiskDescription;
    	      this.localDisks = defaults.localDisks;
    	      this.localDisksTotalSizeInGbs = defaults.localDisksTotalSizeInGbs;
    	      this.maxVnicAttachmentOptions = defaults.maxVnicAttachmentOptions;
    	      this.maxVnicAttachments = defaults.maxVnicAttachments;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.memoryOptions = defaults.memoryOptions;
    	      this.minTotalBaselineOcpusRequired = defaults.minTotalBaselineOcpusRequired;
    	      this.name = defaults.name;
    	      this.networkPorts = defaults.networkPorts;
    	      this.networkingBandwidthInGbps = defaults.networkingBandwidthInGbps;
    	      this.networkingBandwidthOptions = defaults.networkingBandwidthOptions;
    	      this.ocpuOptions = defaults.ocpuOptions;
    	      this.ocpus = defaults.ocpus;
    	      this.platformConfigOptions = defaults.platformConfigOptions;
    	      this.processorDescription = defaults.processorDescription;
    	      this.quotaNames = defaults.quotaNames;
    	      this.rdmaBandwidthInGbps = defaults.rdmaBandwidthInGbps;
    	      this.rdmaPorts = defaults.rdmaPorts;
    	      this.recommendedAlternatives = defaults.recommendedAlternatives;
    	      this.resizeCompatibleShapes = defaults.resizeCompatibleShapes;
        }

        @CustomType.Setter
        public Builder baselineOcpuUtilizations(List<String> baselineOcpuUtilizations) {
            this.baselineOcpuUtilizations = Objects.requireNonNull(baselineOcpuUtilizations);
            return this;
        }
        public Builder baselineOcpuUtilizations(String... baselineOcpuUtilizations) {
            return baselineOcpuUtilizations(List.of(baselineOcpuUtilizations));
        }
        @CustomType.Setter
        public Builder billingType(String billingType) {
            this.billingType = Objects.requireNonNull(billingType);
            return this;
        }
        @CustomType.Setter
        public Builder gpuDescription(String gpuDescription) {
            this.gpuDescription = Objects.requireNonNull(gpuDescription);
            return this;
        }
        @CustomType.Setter
        public Builder gpus(Integer gpus) {
            this.gpus = Objects.requireNonNull(gpus);
            return this;
        }
        @CustomType.Setter
        public Builder isBilledForStoppedInstance(Boolean isBilledForStoppedInstance) {
            this.isBilledForStoppedInstance = Objects.requireNonNull(isBilledForStoppedInstance);
            return this;
        }
        @CustomType.Setter
        public Builder isFlexible(Boolean isFlexible) {
            this.isFlexible = Objects.requireNonNull(isFlexible);
            return this;
        }
        @CustomType.Setter
        public Builder isLiveMigrationSupported(Boolean isLiveMigrationSupported) {
            this.isLiveMigrationSupported = Objects.requireNonNull(isLiveMigrationSupported);
            return this;
        }
        @CustomType.Setter
        public Builder isSubcore(Boolean isSubcore) {
            this.isSubcore = Objects.requireNonNull(isSubcore);
            return this;
        }
        @CustomType.Setter
        public Builder localDiskDescription(String localDiskDescription) {
            this.localDiskDescription = Objects.requireNonNull(localDiskDescription);
            return this;
        }
        @CustomType.Setter
        public Builder localDisks(Integer localDisks) {
            this.localDisks = Objects.requireNonNull(localDisks);
            return this;
        }
        @CustomType.Setter
        public Builder localDisksTotalSizeInGbs(Double localDisksTotalSizeInGbs) {
            this.localDisksTotalSizeInGbs = Objects.requireNonNull(localDisksTotalSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder maxVnicAttachmentOptions(List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions) {
            this.maxVnicAttachmentOptions = Objects.requireNonNull(maxVnicAttachmentOptions);
            return this;
        }
        public Builder maxVnicAttachmentOptions(GetShapesShapeMaxVnicAttachmentOption... maxVnicAttachmentOptions) {
            return maxVnicAttachmentOptions(List.of(maxVnicAttachmentOptions));
        }
        @CustomType.Setter
        public Builder maxVnicAttachments(Integer maxVnicAttachments) {
            this.maxVnicAttachments = Objects.requireNonNull(maxVnicAttachments);
            return this;
        }
        @CustomType.Setter
        public Builder memoryInGbs(Double memoryInGbs) {
            this.memoryInGbs = Objects.requireNonNull(memoryInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder memoryOptions(List<GetShapesShapeMemoryOption> memoryOptions) {
            this.memoryOptions = Objects.requireNonNull(memoryOptions);
            return this;
        }
        public Builder memoryOptions(GetShapesShapeMemoryOption... memoryOptions) {
            return memoryOptions(List.of(memoryOptions));
        }
        @CustomType.Setter
        public Builder minTotalBaselineOcpusRequired(Double minTotalBaselineOcpusRequired) {
            this.minTotalBaselineOcpusRequired = Objects.requireNonNull(minTotalBaselineOcpusRequired);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkPorts(Integer networkPorts) {
            this.networkPorts = Objects.requireNonNull(networkPorts);
            return this;
        }
        @CustomType.Setter
        public Builder networkingBandwidthInGbps(Double networkingBandwidthInGbps) {
            this.networkingBandwidthInGbps = Objects.requireNonNull(networkingBandwidthInGbps);
            return this;
        }
        @CustomType.Setter
        public Builder networkingBandwidthOptions(List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions) {
            this.networkingBandwidthOptions = Objects.requireNonNull(networkingBandwidthOptions);
            return this;
        }
        public Builder networkingBandwidthOptions(GetShapesShapeNetworkingBandwidthOption... networkingBandwidthOptions) {
            return networkingBandwidthOptions(List.of(networkingBandwidthOptions));
        }
        @CustomType.Setter
        public Builder ocpuOptions(List<GetShapesShapeOcpuOption> ocpuOptions) {
            this.ocpuOptions = Objects.requireNonNull(ocpuOptions);
            return this;
        }
        public Builder ocpuOptions(GetShapesShapeOcpuOption... ocpuOptions) {
            return ocpuOptions(List.of(ocpuOptions));
        }
        @CustomType.Setter
        public Builder ocpus(Double ocpus) {
            this.ocpus = Objects.requireNonNull(ocpus);
            return this;
        }
        @CustomType.Setter
        public Builder platformConfigOptions(List<GetShapesShapePlatformConfigOption> platformConfigOptions) {
            this.platformConfigOptions = Objects.requireNonNull(platformConfigOptions);
            return this;
        }
        public Builder platformConfigOptions(GetShapesShapePlatformConfigOption... platformConfigOptions) {
            return platformConfigOptions(List.of(platformConfigOptions));
        }
        @CustomType.Setter
        public Builder processorDescription(String processorDescription) {
            this.processorDescription = Objects.requireNonNull(processorDescription);
            return this;
        }
        @CustomType.Setter
        public Builder quotaNames(List<String> quotaNames) {
            this.quotaNames = Objects.requireNonNull(quotaNames);
            return this;
        }
        public Builder quotaNames(String... quotaNames) {
            return quotaNames(List.of(quotaNames));
        }
        @CustomType.Setter
        public Builder rdmaBandwidthInGbps(Integer rdmaBandwidthInGbps) {
            this.rdmaBandwidthInGbps = Objects.requireNonNull(rdmaBandwidthInGbps);
            return this;
        }
        @CustomType.Setter
        public Builder rdmaPorts(Integer rdmaPorts) {
            this.rdmaPorts = Objects.requireNonNull(rdmaPorts);
            return this;
        }
        @CustomType.Setter
        public Builder recommendedAlternatives(List<GetShapesShapeRecommendedAlternative> recommendedAlternatives) {
            this.recommendedAlternatives = Objects.requireNonNull(recommendedAlternatives);
            return this;
        }
        public Builder recommendedAlternatives(GetShapesShapeRecommendedAlternative... recommendedAlternatives) {
            return recommendedAlternatives(List.of(recommendedAlternatives));
        }
        @CustomType.Setter
        public Builder resizeCompatibleShapes(List<String> resizeCompatibleShapes) {
            this.resizeCompatibleShapes = Objects.requireNonNull(resizeCompatibleShapes);
            return this;
        }
        public Builder resizeCompatibleShapes(String... resizeCompatibleShapes) {
            return resizeCompatibleShapes(List.of(resizeCompatibleShapes));
        }
        public GetShapesShape build() {
            final var o = new GetShapesShape();
            o.baselineOcpuUtilizations = baselineOcpuUtilizations;
            o.billingType = billingType;
            o.gpuDescription = gpuDescription;
            o.gpus = gpus;
            o.isBilledForStoppedInstance = isBilledForStoppedInstance;
            o.isFlexible = isFlexible;
            o.isLiveMigrationSupported = isLiveMigrationSupported;
            o.isSubcore = isSubcore;
            o.localDiskDescription = localDiskDescription;
            o.localDisks = localDisks;
            o.localDisksTotalSizeInGbs = localDisksTotalSizeInGbs;
            o.maxVnicAttachmentOptions = maxVnicAttachmentOptions;
            o.maxVnicAttachments = maxVnicAttachments;
            o.memoryInGbs = memoryInGbs;
            o.memoryOptions = memoryOptions;
            o.minTotalBaselineOcpusRequired = minTotalBaselineOcpusRequired;
            o.name = name;
            o.networkPorts = networkPorts;
            o.networkingBandwidthInGbps = networkingBandwidthInGbps;
            o.networkingBandwidthOptions = networkingBandwidthOptions;
            o.ocpuOptions = ocpuOptions;
            o.ocpus = ocpus;
            o.platformConfigOptions = platformConfigOptions;
            o.processorDescription = processorDescription;
            o.quotaNames = quotaNames;
            o.rdmaBandwidthInGbps = rdmaBandwidthInGbps;
            o.rdmaPorts = rdmaPorts;
            o.recommendedAlternatives = recommendedAlternatives;
            o.resizeCompatibleShapes = resizeCompatibleShapes;
            return o;
        }
    }
}
