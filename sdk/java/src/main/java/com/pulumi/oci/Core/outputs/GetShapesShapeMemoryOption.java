// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetShapesShapeMemoryOption {
    /**
     * @return The default amount of memory per OCPU available for this shape, in gigabytes.
     * 
     */
    private Double defaultPerOcpuInGbs;
    /**
     * @return The maximum amount of memory, in gigabytes.
     * 
     */
    private Double maxInGbs;
    /**
     * @return The maximum amount of memory per NUMA node, in gigabytes.
     * 
     */
    private Double maxPerNumaNodeInGbs;
    /**
     * @return The maximum amount of memory per OCPU available for this shape, in gigabytes.
     * 
     */
    private Double maxPerOcpuInGbs;
    /**
     * @return The minimum amount of memory, in gigabytes.
     * 
     */
    private Double minInGbs;
    /**
     * @return The minimum amount of memory per OCPU available for this shape, in gigabytes.
     * 
     */
    private Double minPerOcpuInGbs;

    private GetShapesShapeMemoryOption() {}
    /**
     * @return The default amount of memory per OCPU available for this shape, in gigabytes.
     * 
     */
    public Double defaultPerOcpuInGbs() {
        return this.defaultPerOcpuInGbs;
    }
    /**
     * @return The maximum amount of memory, in gigabytes.
     * 
     */
    public Double maxInGbs() {
        return this.maxInGbs;
    }
    /**
     * @return The maximum amount of memory per NUMA node, in gigabytes.
     * 
     */
    public Double maxPerNumaNodeInGbs() {
        return this.maxPerNumaNodeInGbs;
    }
    /**
     * @return The maximum amount of memory per OCPU available for this shape, in gigabytes.
     * 
     */
    public Double maxPerOcpuInGbs() {
        return this.maxPerOcpuInGbs;
    }
    /**
     * @return The minimum amount of memory, in gigabytes.
     * 
     */
    public Double minInGbs() {
        return this.minInGbs;
    }
    /**
     * @return The minimum amount of memory per OCPU available for this shape, in gigabytes.
     * 
     */
    public Double minPerOcpuInGbs() {
        return this.minPerOcpuInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShapesShapeMemoryOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double defaultPerOcpuInGbs;
        private Double maxInGbs;
        private Double maxPerNumaNodeInGbs;
        private Double maxPerOcpuInGbs;
        private Double minInGbs;
        private Double minPerOcpuInGbs;
        public Builder() {}
        public Builder(GetShapesShapeMemoryOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultPerOcpuInGbs = defaults.defaultPerOcpuInGbs;
    	      this.maxInGbs = defaults.maxInGbs;
    	      this.maxPerNumaNodeInGbs = defaults.maxPerNumaNodeInGbs;
    	      this.maxPerOcpuInGbs = defaults.maxPerOcpuInGbs;
    	      this.minInGbs = defaults.minInGbs;
    	      this.minPerOcpuInGbs = defaults.minPerOcpuInGbs;
        }

        @CustomType.Setter
        public Builder defaultPerOcpuInGbs(Double defaultPerOcpuInGbs) {
            this.defaultPerOcpuInGbs = Objects.requireNonNull(defaultPerOcpuInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder maxInGbs(Double maxInGbs) {
            this.maxInGbs = Objects.requireNonNull(maxInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder maxPerNumaNodeInGbs(Double maxPerNumaNodeInGbs) {
            this.maxPerNumaNodeInGbs = Objects.requireNonNull(maxPerNumaNodeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder maxPerOcpuInGbs(Double maxPerOcpuInGbs) {
            this.maxPerOcpuInGbs = Objects.requireNonNull(maxPerOcpuInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder minInGbs(Double minInGbs) {
            this.minInGbs = Objects.requireNonNull(minInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder minPerOcpuInGbs(Double minPerOcpuInGbs) {
            this.minPerOcpuInGbs = Objects.requireNonNull(minPerOcpuInGbs);
            return this;
        }
        public GetShapesShapeMemoryOption build() {
            final var o = new GetShapesShapeMemoryOption();
            o.defaultPerOcpuInGbs = defaultPerOcpuInGbs;
            o.maxInGbs = maxInGbs;
            o.maxPerNumaNodeInGbs = maxPerNumaNodeInGbs;
            o.maxPerOcpuInGbs = maxPerOcpuInGbs;
            o.minInGbs = minInGbs;
            o.minPerOcpuInGbs = minPerOcpuInGbs;
            return o;
        }
    }
}
