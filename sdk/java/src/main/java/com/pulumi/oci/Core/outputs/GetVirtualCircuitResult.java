// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVirtualCircuitCrossConnectMapping;
import com.pulumi.oci.Core.outputs.GetVirtualCircuitPublicPrefix;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualCircuitResult {
    /**
     * @return The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
     * 
     */
    private @Nullable String bandwidthShapeName;
    /**
     * @return Set to `ENABLED` (the default) to activate the BGP session of the virtual circuit, set to `DISABLED` to deactivate the virtual circuit.
     * 
     */
    private @Nullable String bgpAdminState;
    /**
     * @return The state of the Ipv6 BGP session associated with the virtual circuit.
     * 
     */
    private @Nullable String bgpIpv6sessionState;
    /**
     * @return Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
     * 
     * @deprecated
     * The &#39;bgp_management&#39; field has been deprecated. Please use the &#39;oci_core_fast_connect_provider_service&#39; data source instead.
     * 
     */
    @Deprecated /* The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead. */
    private @Nullable String bgpManagement;
    /**
     * @return The state of the Ipv4 BGP session associated with the virtual circuit.
     * 
     */
    private @Nullable String bgpSessionState;
    /**
     * @return The OCID of the compartment containing the virtual circuit.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return An array of mappings, each containing properties for a cross-connect or cross-connect group that is associated with this virtual circuit.
     * 
     */
    private @Nullable List<GetVirtualCircuitCrossConnectMapping> crossConnectMappings;
    /**
     * @return The BGP ASN of the network at the other end of the BGP session from Oracle. If the session is between the customer&#39;s edge router and Oracle, the value is the customer&#39;s ASN. If the BGP session is between the provider&#39;s edge router and Oracle, the value is the provider&#39;s ASN. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
     * 
     */
    private @Nullable String customerAsn;
    /**
     * @return Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
     * 
     * @deprecated
     * The &#39;customer_bgp_asn&#39; field has been deprecated. Please use &#39;customer_asn&#39; instead.
     * 
     */
    @Deprecated /* The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead. */
    private @Nullable Integer customerBgpAsn;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer&#39;s [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses. Applicable only to private virtual circuits.
     * 
     */
    private @Nullable String gatewayId;
    /**
     * @return The virtual circuit&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    private @Nullable String id;
    /**
     * @return The layer 3 IP MTU to use on this virtual circuit.
     * 
     */
    private @Nullable String ipMtu;
    /**
     * @return Set to `true` to enable BFD for IPv4 BGP peering, or set to `false` to disable BFD. If this is not set, the default is `false`.
     * 
     */
    private @Nullable Boolean isBfdEnabled;
    /**
     * @return Set to `true` for the virtual circuit to carry only encrypted traffic, or set to `false` for the virtual circuit to carry unencrypted traffic. If this is not set, the default is `false`.
     * 
     */
    private @Nullable Boolean isTransportMode;
    /**
     * @return The Oracle BGP ASN.
     * 
     */
    private @Nullable Integer oracleBgpAsn;
    /**
     * @return The OCID of the service offered by the provider (if the customer is connecting via a provider).
     * 
     */
    private @Nullable String providerServiceId;
    /**
     * @return The service key name offered by the provider (if the customer is connecting via a provider).
     * 
     */
    private @Nullable String providerServiceKeyName;
    /**
     * @return The provider&#39;s state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
     * 
     */
    private @Nullable String providerState;
    /**
     * @return For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection. All prefix sizes are allowed.
     * 
     */
    private @Nullable List<GetVirtualCircuitPublicPrefix> publicPrefixes;
    /**
     * @return Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
     * 
     */
    private @Nullable String referenceComment;
    /**
     * @return The Oracle Cloud Infrastructure region where this virtual circuit is located.
     * 
     */
    private @Nullable String region;
    /**
     * @return The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
     * 
     */
    private @Nullable List<String> routingPolicies;
    /**
     * @return Provider service type.
     * 
     */
    private @Nullable String serviceType;
    /**
     * @return The virtual circuit&#39;s current state. For information about the different states, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Whether the virtual circuit supports private or public peering. For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
     * 
     */
    private @Nullable String type;
    private String virtualCircuitId;

    private GetVirtualCircuitResult() {}
    /**
     * @return The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
     * 
     */
    public Optional<String> bandwidthShapeName() {
        return Optional.ofNullable(this.bandwidthShapeName);
    }
    /**
     * @return Set to `ENABLED` (the default) to activate the BGP session of the virtual circuit, set to `DISABLED` to deactivate the virtual circuit.
     * 
     */
    public Optional<String> bgpAdminState() {
        return Optional.ofNullable(this.bgpAdminState);
    }
    /**
     * @return The state of the Ipv6 BGP session associated with the virtual circuit.
     * 
     */
    public Optional<String> bgpIpv6sessionState() {
        return Optional.ofNullable(this.bgpIpv6sessionState);
    }
    /**
     * @return Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
     * 
     * @deprecated
     * The &#39;bgp_management&#39; field has been deprecated. Please use the &#39;oci_core_fast_connect_provider_service&#39; data source instead.
     * 
     */
    @Deprecated /* The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead. */
    public Optional<String> bgpManagement() {
        return Optional.ofNullable(this.bgpManagement);
    }
    /**
     * @return The state of the Ipv4 BGP session associated with the virtual circuit.
     * 
     */
    public Optional<String> bgpSessionState() {
        return Optional.ofNullable(this.bgpSessionState);
    }
    /**
     * @return The OCID of the compartment containing the virtual circuit.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return An array of mappings, each containing properties for a cross-connect or cross-connect group that is associated with this virtual circuit.
     * 
     */
    public List<GetVirtualCircuitCrossConnectMapping> crossConnectMappings() {
        return this.crossConnectMappings == null ? List.of() : this.crossConnectMappings;
    }
    /**
     * @return The BGP ASN of the network at the other end of the BGP session from Oracle. If the session is between the customer&#39;s edge router and Oracle, the value is the customer&#39;s ASN. If the BGP session is between the provider&#39;s edge router and Oracle, the value is the provider&#39;s ASN. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
     * 
     */
    public Optional<String> customerAsn() {
        return Optional.ofNullable(this.customerAsn);
    }
    /**
     * @return Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
     * 
     * @deprecated
     * The &#39;customer_bgp_asn&#39; field has been deprecated. Please use &#39;customer_asn&#39; instead.
     * 
     */
    @Deprecated /* The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead. */
    public Optional<Integer> customerBgpAsn() {
        return Optional.ofNullable(this.customerBgpAsn);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer&#39;s [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses. Applicable only to private virtual circuits.
     * 
     */
    public Optional<String> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }
    /**
     * @return The virtual circuit&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The layer 3 IP MTU to use on this virtual circuit.
     * 
     */
    public Optional<String> ipMtu() {
        return Optional.ofNullable(this.ipMtu);
    }
    /**
     * @return Set to `true` to enable BFD for IPv4 BGP peering, or set to `false` to disable BFD. If this is not set, the default is `false`.
     * 
     */
    public Optional<Boolean> isBfdEnabled() {
        return Optional.ofNullable(this.isBfdEnabled);
    }
    /**
     * @return Set to `true` for the virtual circuit to carry only encrypted traffic, or set to `false` for the virtual circuit to carry unencrypted traffic. If this is not set, the default is `false`.
     * 
     */
    public Optional<Boolean> isTransportMode() {
        return Optional.ofNullable(this.isTransportMode);
    }
    /**
     * @return The Oracle BGP ASN.
     * 
     */
    public Optional<Integer> oracleBgpAsn() {
        return Optional.ofNullable(this.oracleBgpAsn);
    }
    /**
     * @return The OCID of the service offered by the provider (if the customer is connecting via a provider).
     * 
     */
    public Optional<String> providerServiceId() {
        return Optional.ofNullable(this.providerServiceId);
    }
    /**
     * @return The service key name offered by the provider (if the customer is connecting via a provider).
     * 
     */
    public Optional<String> providerServiceKeyName() {
        return Optional.ofNullable(this.providerServiceKeyName);
    }
    /**
     * @return The provider&#39;s state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
     * 
     */
    public Optional<String> providerState() {
        return Optional.ofNullable(this.providerState);
    }
    /**
     * @return For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection. All prefix sizes are allowed.
     * 
     */
    public List<GetVirtualCircuitPublicPrefix> publicPrefixes() {
        return this.publicPrefixes == null ? List.of() : this.publicPrefixes;
    }
    /**
     * @return Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
     * 
     */
    public Optional<String> referenceComment() {
        return Optional.ofNullable(this.referenceComment);
    }
    /**
     * @return The Oracle Cloud Infrastructure region where this virtual circuit is located.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
     * 
     */
    public List<String> routingPolicies() {
        return this.routingPolicies == null ? List.of() : this.routingPolicies;
    }
    /**
     * @return Provider service type.
     * 
     */
    public Optional<String> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }
    /**
     * @return The virtual circuit&#39;s current state. For information about the different states, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Whether the virtual circuit supports private or public peering. For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public String virtualCircuitId() {
        return this.virtualCircuitId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualCircuitResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bandwidthShapeName;
        private @Nullable String bgpAdminState;
        private @Nullable String bgpIpv6sessionState;
        private @Nullable String bgpManagement;
        private @Nullable String bgpSessionState;
        private @Nullable String compartmentId;
        private @Nullable List<GetVirtualCircuitCrossConnectMapping> crossConnectMappings;
        private @Nullable String customerAsn;
        private @Nullable Integer customerBgpAsn;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String gatewayId;
        private @Nullable String id;
        private @Nullable String ipMtu;
        private @Nullable Boolean isBfdEnabled;
        private @Nullable Boolean isTransportMode;
        private @Nullable Integer oracleBgpAsn;
        private @Nullable String providerServiceId;
        private @Nullable String providerServiceKeyName;
        private @Nullable String providerState;
        private @Nullable List<GetVirtualCircuitPublicPrefix> publicPrefixes;
        private @Nullable String referenceComment;
        private @Nullable String region;
        private @Nullable List<String> routingPolicies;
        private @Nullable String serviceType;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String type;
        private String virtualCircuitId;
        public Builder() {}
        public Builder(GetVirtualCircuitResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthShapeName = defaults.bandwidthShapeName;
    	      this.bgpAdminState = defaults.bgpAdminState;
    	      this.bgpIpv6sessionState = defaults.bgpIpv6sessionState;
    	      this.bgpManagement = defaults.bgpManagement;
    	      this.bgpSessionState = defaults.bgpSessionState;
    	      this.compartmentId = defaults.compartmentId;
    	      this.crossConnectMappings = defaults.crossConnectMappings;
    	      this.customerAsn = defaults.customerAsn;
    	      this.customerBgpAsn = defaults.customerBgpAsn;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.gatewayId = defaults.gatewayId;
    	      this.id = defaults.id;
    	      this.ipMtu = defaults.ipMtu;
    	      this.isBfdEnabled = defaults.isBfdEnabled;
    	      this.isTransportMode = defaults.isTransportMode;
    	      this.oracleBgpAsn = defaults.oracleBgpAsn;
    	      this.providerServiceId = defaults.providerServiceId;
    	      this.providerServiceKeyName = defaults.providerServiceKeyName;
    	      this.providerState = defaults.providerState;
    	      this.publicPrefixes = defaults.publicPrefixes;
    	      this.referenceComment = defaults.referenceComment;
    	      this.region = defaults.region;
    	      this.routingPolicies = defaults.routingPolicies;
    	      this.serviceType = defaults.serviceType;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.type = defaults.type;
    	      this.virtualCircuitId = defaults.virtualCircuitId;
        }

        @CustomType.Setter
        public Builder bandwidthShapeName(@Nullable String bandwidthShapeName) {
            this.bandwidthShapeName = bandwidthShapeName;
            return this;
        }
        @CustomType.Setter
        public Builder bgpAdminState(@Nullable String bgpAdminState) {
            this.bgpAdminState = bgpAdminState;
            return this;
        }
        @CustomType.Setter
        public Builder bgpIpv6sessionState(@Nullable String bgpIpv6sessionState) {
            this.bgpIpv6sessionState = bgpIpv6sessionState;
            return this;
        }
        @CustomType.Setter
        public Builder bgpManagement(@Nullable String bgpManagement) {
            this.bgpManagement = bgpManagement;
            return this;
        }
        @CustomType.Setter
        public Builder bgpSessionState(@Nullable String bgpSessionState) {
            this.bgpSessionState = bgpSessionState;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder crossConnectMappings(@Nullable List<GetVirtualCircuitCrossConnectMapping> crossConnectMappings) {
            this.crossConnectMappings = crossConnectMappings;
            return this;
        }
        public Builder crossConnectMappings(GetVirtualCircuitCrossConnectMapping... crossConnectMappings) {
            return crossConnectMappings(List.of(crossConnectMappings));
        }
        @CustomType.Setter
        public Builder customerAsn(@Nullable String customerAsn) {
            this.customerAsn = customerAsn;
            return this;
        }
        @CustomType.Setter
        public Builder customerBgpAsn(@Nullable Integer customerBgpAsn) {
            this.customerBgpAsn = customerBgpAsn;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayId(@Nullable String gatewayId) {
            this.gatewayId = gatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipMtu(@Nullable String ipMtu) {
            this.ipMtu = ipMtu;
            return this;
        }
        @CustomType.Setter
        public Builder isBfdEnabled(@Nullable Boolean isBfdEnabled) {
            this.isBfdEnabled = isBfdEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isTransportMode(@Nullable Boolean isTransportMode) {
            this.isTransportMode = isTransportMode;
            return this;
        }
        @CustomType.Setter
        public Builder oracleBgpAsn(@Nullable Integer oracleBgpAsn) {
            this.oracleBgpAsn = oracleBgpAsn;
            return this;
        }
        @CustomType.Setter
        public Builder providerServiceId(@Nullable String providerServiceId) {
            this.providerServiceId = providerServiceId;
            return this;
        }
        @CustomType.Setter
        public Builder providerServiceKeyName(@Nullable String providerServiceKeyName) {
            this.providerServiceKeyName = providerServiceKeyName;
            return this;
        }
        @CustomType.Setter
        public Builder providerState(@Nullable String providerState) {
            this.providerState = providerState;
            return this;
        }
        @CustomType.Setter
        public Builder publicPrefixes(@Nullable List<GetVirtualCircuitPublicPrefix> publicPrefixes) {
            this.publicPrefixes = publicPrefixes;
            return this;
        }
        public Builder publicPrefixes(GetVirtualCircuitPublicPrefix... publicPrefixes) {
            return publicPrefixes(List.of(publicPrefixes));
        }
        @CustomType.Setter
        public Builder referenceComment(@Nullable String referenceComment) {
            this.referenceComment = referenceComment;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder routingPolicies(@Nullable List<String> routingPolicies) {
            this.routingPolicies = routingPolicies;
            return this;
        }
        public Builder routingPolicies(String... routingPolicies) {
            return routingPolicies(List.of(routingPolicies));
        }
        @CustomType.Setter
        public Builder serviceType(@Nullable String serviceType) {
            this.serviceType = serviceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder virtualCircuitId(String virtualCircuitId) {
            this.virtualCircuitId = Objects.requireNonNull(virtualCircuitId);
            return this;
        }
        public GetVirtualCircuitResult build() {
            final var o = new GetVirtualCircuitResult();
            o.bandwidthShapeName = bandwidthShapeName;
            o.bgpAdminState = bgpAdminState;
            o.bgpIpv6sessionState = bgpIpv6sessionState;
            o.bgpManagement = bgpManagement;
            o.bgpSessionState = bgpSessionState;
            o.compartmentId = compartmentId;
            o.crossConnectMappings = crossConnectMappings;
            o.customerAsn = customerAsn;
            o.customerBgpAsn = customerBgpAsn;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.gatewayId = gatewayId;
            o.id = id;
            o.ipMtu = ipMtu;
            o.isBfdEnabled = isBfdEnabled;
            o.isTransportMode = isTransportMode;
            o.oracleBgpAsn = oracleBgpAsn;
            o.providerServiceId = providerServiceId;
            o.providerServiceKeyName = providerServiceKeyName;
            o.providerState = providerState;
            o.publicPrefixes = publicPrefixes;
            o.referenceComment = referenceComment;
            o.region = region;
            o.routingPolicies = routingPolicies;
            o.serviceType = serviceType;
            o.state = state;
            o.timeCreated = timeCreated;
            o.type = type;
            o.virtualCircuitId = virtualCircuitId;
            return o;
        }
    }
}
