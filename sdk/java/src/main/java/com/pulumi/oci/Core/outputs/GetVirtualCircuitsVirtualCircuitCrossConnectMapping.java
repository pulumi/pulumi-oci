// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualCircuitsVirtualCircuitCrossConnectMapping {
    /**
     * @return The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don&#39;t use BGP MD5 authentication.
     * 
     */
    private @Nullable String bgpMd5authKey;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
     * 
     */
    private @Nullable String crossConnectOrCrossConnectGroupId;
    /**
     * @return The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider&#39;s edge router. Must use a subnet mask from /28 to /31.
     * 
     */
    private @Nullable String customerBgpPeeringIp;
    /**
     * @return The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider&#39;s edge router. Only subnet masks from /64 up to /127 are allowed.
     * 
     */
    private @Nullable String customerBgpPeeringIpv6;
    /**
     * @return The IPv4 address for Oracle&#39;s end of the BGP session. Must use a subnet mask from /28 to /31. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    private @Nullable String oracleBgpPeeringIp;
    /**
     * @return The IPv6 address for Oracle&#39;s end of the BGP session. Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    private @Nullable String oracleBgpPeeringIpv6;
    /**
     * @return The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
     * 
     */
    private @Nullable Integer vlan;

    private GetVirtualCircuitsVirtualCircuitCrossConnectMapping() {}
    /**
     * @return The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don&#39;t use BGP MD5 authentication.
     * 
     */
    public Optional<String> bgpMd5authKey() {
        return Optional.ofNullable(this.bgpMd5authKey);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
     * 
     */
    public Optional<String> crossConnectOrCrossConnectGroupId() {
        return Optional.ofNullable(this.crossConnectOrCrossConnectGroupId);
    }
    /**
     * @return The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider&#39;s edge router. Must use a subnet mask from /28 to /31.
     * 
     */
    public Optional<String> customerBgpPeeringIp() {
        return Optional.ofNullable(this.customerBgpPeeringIp);
    }
    /**
     * @return The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider&#39;s edge router. Only subnet masks from /64 up to /127 are allowed.
     * 
     */
    public Optional<String> customerBgpPeeringIpv6() {
        return Optional.ofNullable(this.customerBgpPeeringIpv6);
    }
    /**
     * @return The IPv4 address for Oracle&#39;s end of the BGP session. Must use a subnet mask from /28 to /31. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    public Optional<String> oracleBgpPeeringIp() {
        return Optional.ofNullable(this.oracleBgpPeeringIp);
    }
    /**
     * @return The IPv6 address for Oracle&#39;s end of the BGP session. Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    public Optional<String> oracleBgpPeeringIpv6() {
        return Optional.ofNullable(this.oracleBgpPeeringIpv6);
    }
    /**
     * @return The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
     * 
     */
    public Optional<Integer> vlan() {
        return Optional.ofNullable(this.vlan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualCircuitsVirtualCircuitCrossConnectMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bgpMd5authKey;
        private @Nullable String crossConnectOrCrossConnectGroupId;
        private @Nullable String customerBgpPeeringIp;
        private @Nullable String customerBgpPeeringIpv6;
        private @Nullable String oracleBgpPeeringIp;
        private @Nullable String oracleBgpPeeringIpv6;
        private @Nullable Integer vlan;
        public Builder() {}
        public Builder(GetVirtualCircuitsVirtualCircuitCrossConnectMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgpMd5authKey = defaults.bgpMd5authKey;
    	      this.crossConnectOrCrossConnectGroupId = defaults.crossConnectOrCrossConnectGroupId;
    	      this.customerBgpPeeringIp = defaults.customerBgpPeeringIp;
    	      this.customerBgpPeeringIpv6 = defaults.customerBgpPeeringIpv6;
    	      this.oracleBgpPeeringIp = defaults.oracleBgpPeeringIp;
    	      this.oracleBgpPeeringIpv6 = defaults.oracleBgpPeeringIpv6;
    	      this.vlan = defaults.vlan;
        }

        @CustomType.Setter
        public Builder bgpMd5authKey(@Nullable String bgpMd5authKey) {
            this.bgpMd5authKey = bgpMd5authKey;
            return this;
        }
        @CustomType.Setter
        public Builder crossConnectOrCrossConnectGroupId(@Nullable String crossConnectOrCrossConnectGroupId) {
            this.crossConnectOrCrossConnectGroupId = crossConnectOrCrossConnectGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder customerBgpPeeringIp(@Nullable String customerBgpPeeringIp) {
            this.customerBgpPeeringIp = customerBgpPeeringIp;
            return this;
        }
        @CustomType.Setter
        public Builder customerBgpPeeringIpv6(@Nullable String customerBgpPeeringIpv6) {
            this.customerBgpPeeringIpv6 = customerBgpPeeringIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder oracleBgpPeeringIp(@Nullable String oracleBgpPeeringIp) {
            this.oracleBgpPeeringIp = oracleBgpPeeringIp;
            return this;
        }
        @CustomType.Setter
        public Builder oracleBgpPeeringIpv6(@Nullable String oracleBgpPeeringIpv6) {
            this.oracleBgpPeeringIpv6 = oracleBgpPeeringIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder vlan(@Nullable Integer vlan) {
            this.vlan = vlan;
            return this;
        }
        public GetVirtualCircuitsVirtualCircuitCrossConnectMapping build() {
            final var o = new GetVirtualCircuitsVirtualCircuitCrossConnectMapping();
            o.bgpMd5authKey = bgpMd5authKey;
            o.crossConnectOrCrossConnectGroupId = crossConnectOrCrossConnectGroupId;
            o.customerBgpPeeringIp = customerBgpPeeringIp;
            o.customerBgpPeeringIpv6 = customerBgpPeeringIpv6;
            o.oracleBgpPeeringIp = oracleBgpPeeringIp;
            o.oracleBgpPeeringIpv6 = oracleBgpPeeringIpv6;
            o.vlan = vlan;
            return o;
        }
    }
}
