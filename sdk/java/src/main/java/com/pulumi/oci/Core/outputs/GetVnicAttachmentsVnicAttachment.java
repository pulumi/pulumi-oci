// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetVnicAttachmentsVnicAttachmentCreateVnicDetail;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVnicAttachmentsVnicAttachment {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    private List<GetVnicAttachmentsVnicAttachmentCreateVnicDetail> createVnicDetails;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return The OCID of the VNIC attachment.
     * 
     */
    private String id;
    /**
     * @return The OCID of the instance.
     * 
     */
    private String instanceId;
    /**
     * @return Which physical network interface card (NIC) the VNIC uses. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     * 
     */
    private Integer nicIndex;
    /**
     * @return The current state of the VNIC attachment.
     * 
     */
    private String state;
    /**
     * @return The OCID of the subnet to create the VNIC in.
     * 
     */
    private String subnetId;
    /**
     * @return The date and time the VNIC attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The OCID of the VLAN to create the VNIC in. Creating the VNIC in a VLAN (instead of a subnet) is possible only if you are an Oracle Cloud VMware Solution customer. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
     * 
     */
    private String vlanId;
    /**
     * @return The Oracle-assigned VLAN tag of the attached VNIC. Available after the attachment process is complete.
     * 
     */
    private Integer vlanTag;
    /**
     * @return The OCID of the VNIC.
     * 
     */
    private String vnicId;

    private GetVnicAttachmentsVnicAttachment() {}
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetVnicAttachmentsVnicAttachmentCreateVnicDetail> createVnicDetails() {
        return this.createVnicDetails;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The OCID of the VNIC attachment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Which physical network interface card (NIC) the VNIC uses. Certain bare metal instance shapes have two active physical NICs (0 and 1). If you add a secondary VNIC to one of these instances, you can specify which NIC the VNIC will use. For more information, see [Virtual Network Interface Cards (VNICs)](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/managingVNICs.htm).
     * 
     */
    public Integer nicIndex() {
        return this.nicIndex;
    }
    /**
     * @return The current state of the VNIC attachment.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The OCID of the subnet to create the VNIC in.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The date and time the VNIC attachment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The OCID of the VLAN to create the VNIC in. Creating the VNIC in a VLAN (instead of a subnet) is possible only if you are an Oracle Cloud VMware Solution customer. See [Vlan](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Vlan).
     * 
     */
    public String vlanId() {
        return this.vlanId;
    }
    /**
     * @return The Oracle-assigned VLAN tag of the attached VNIC. Available after the attachment process is complete.
     * 
     */
    public Integer vlanTag() {
        return this.vlanTag;
    }
    /**
     * @return The OCID of the VNIC.
     * 
     */
    public String vnicId() {
        return this.vnicId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVnicAttachmentsVnicAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private List<GetVnicAttachmentsVnicAttachmentCreateVnicDetail> createVnicDetails;
        private String displayName;
        private String id;
        private String instanceId;
        private Integer nicIndex;
        private String state;
        private String subnetId;
        private String timeCreated;
        private String vlanId;
        private Integer vlanTag;
        private String vnicId;
        public Builder() {}
        public Builder(GetVnicAttachmentsVnicAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createVnicDetails = defaults.createVnicDetails;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.nicIndex = defaults.nicIndex;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vlanId = defaults.vlanId;
    	      this.vlanTag = defaults.vlanTag;
    	      this.vnicId = defaults.vnicId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createVnicDetails(List<GetVnicAttachmentsVnicAttachmentCreateVnicDetail> createVnicDetails) {
            if (createVnicDetails == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "createVnicDetails");
            }
            this.createVnicDetails = createVnicDetails;
            return this;
        }
        public Builder createVnicDetails(GetVnicAttachmentsVnicAttachmentCreateVnicDetail... createVnicDetails) {
            return createVnicDetails(List.of(createVnicDetails));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder nicIndex(Integer nicIndex) {
            if (nicIndex == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "nicIndex");
            }
            this.nicIndex = nicIndex;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(String vlanId) {
            if (vlanId == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "vlanId");
            }
            this.vlanId = vlanId;
            return this;
        }
        @CustomType.Setter
        public Builder vlanTag(Integer vlanTag) {
            if (vlanTag == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "vlanTag");
            }
            this.vlanTag = vlanTag;
            return this;
        }
        @CustomType.Setter
        public Builder vnicId(String vnicId) {
            if (vnicId == null) {
              throw new MissingRequiredPropertyException("GetVnicAttachmentsVnicAttachment", "vnicId");
            }
            this.vnicId = vnicId;
            return this;
        }
        public GetVnicAttachmentsVnicAttachment build() {
            final var _resultValue = new GetVnicAttachmentsVnicAttachment();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createVnicDetails = createVnicDetails;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.nicIndex = nicIndex;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.vlanId = vlanId;
            _resultValue.vlanTag = vlanTag;
            _resultValue.vnicId = vnicId;
            return _resultValue;
        }
    }
}
