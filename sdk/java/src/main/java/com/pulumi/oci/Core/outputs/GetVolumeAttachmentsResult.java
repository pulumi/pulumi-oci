// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVolumeAttachmentsFilter;
import com.pulumi.oci.Core.outputs.GetVolumeAttachmentsVolumeAttachment;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeAttachmentsResult {
    /**
     * @return The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetVolumeAttachmentsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The OCID of the instance the volume is attached to.
     * 
     */
    private @Nullable String instanceId;
    /**
     * @return The list of volume_attachments.
     * 
     */
    private @Nullable List<GetVolumeAttachmentsVolumeAttachment> volumeAttachments;
    /**
     * @return The OCID of the volume.
     * 
     */
    private @Nullable String volumeId;

    private GetVolumeAttachmentsResult() {}
    /**
     * @return The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetVolumeAttachmentsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The OCID of the instance the volume is attached to.
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return The list of volume_attachments.
     * 
     */
    public List<GetVolumeAttachmentsVolumeAttachment> volumeAttachments() {
        return this.volumeAttachments == null ? List.of() : this.volumeAttachments;
    }
    /**
     * @return The OCID of the volume.
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeAttachmentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private @Nullable List<GetVolumeAttachmentsFilter> filters;
        private @Nullable String id;
        private @Nullable String instanceId;
        private @Nullable List<GetVolumeAttachmentsVolumeAttachment> volumeAttachments;
        private @Nullable String volumeId;
        public Builder() {}
        public Builder(GetVolumeAttachmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.volumeAttachments = defaults.volumeAttachments;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVolumeAttachmentsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVolumeAttachmentsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeAttachments(@Nullable List<GetVolumeAttachmentsVolumeAttachment> volumeAttachments) {
            this.volumeAttachments = volumeAttachments;
            return this;
        }
        public Builder volumeAttachments(GetVolumeAttachmentsVolumeAttachment... volumeAttachments) {
            return volumeAttachments(List.of(volumeAttachments));
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {
            this.volumeId = volumeId;
            return this;
        }
        public GetVolumeAttachmentsResult build() {
            final var o = new GetVolumeAttachmentsResult();
            o.availabilityDomain = availabilityDomain;
            o.compartmentId = compartmentId;
            o.filters = filters;
            o.id = id;
            o.instanceId = instanceId;
            o.volumeAttachments = volumeAttachments;
            o.volumeId = volumeId;
            return o;
        }
    }
}
