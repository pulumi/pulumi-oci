// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVolumeAttachmentsVolumeAttachmentMultipathDevice;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeAttachmentsVolumeAttachment {
    /**
     * @return The type of volume attachment.
     * 
     */
    private @Nullable String attachmentType;
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the &#34;CHAP password&#34;.)
     * 
     */
    private @Nullable String chapSecret;
    /**
     * @return The volume&#39;s system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.&lt;unique_ID&gt;`
     * 
     */
    private @Nullable String chapUsername;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     * @deprecated
     * The &#39;compartment_id&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field. */
    private @Nullable String compartmentId;
    /**
     * @return The device name.
     * 
     */
    private @Nullable String device;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    private @Nullable String encryptionInTransitType;
    /**
     * @return The OCID of the volume attachment.
     * 
     */
    private @Nullable String id;
    /**
     * @return The OCID of the instance.
     * 
     */
    private @Nullable String instanceId;
    /**
     * @return The volume&#39;s iSCSI IP address.  Example: `169.254.2.2`
     * 
     */
    private @Nullable String ipv4;
    /**
     * @return The target volume&#39;s iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     * 
     */
    private @Nullable String iqn;
    /**
     * @return Whether Oracle Cloud Agent is enabled perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
     * 
     */
    private @Nullable Boolean isAgentAutoIscsiLoginEnabled;
    /**
     * @return Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
     * 
     */
    private @Nullable Boolean isMultipath;
    /**
     * @return Whether in-transit encryption for the data volume&#39;s paravirtualized attachment is enabled or not.
     * 
     */
    private @Nullable Boolean isPvEncryptionInTransitEnabled;
    /**
     * @return Whether the attachment was created in read-only mode.
     * 
     */
    private @Nullable Boolean isReadOnly;
    private @Nullable Boolean isShareable;
    /**
     * @return The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
     * 
     */
    private @Nullable String iscsiLoginState;
    /**
     * @return A list of secondary multipath devices
     * 
     */
    private @Nullable List<GetVolumeAttachmentsVolumeAttachmentMultipathDevice> multipathDevices;
    /**
     * @return The volume&#39;s iSCSI port, usually port 860 or 3260.  Example: `3260`
     * 
     */
    private @Nullable Integer port;
    /**
     * @return The current state of the volume attachment.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    private @Nullable Boolean useChap;
    /**
     * @return The OCID of the volume.
     * 
     */
    private @Nullable String volumeId;

    private GetVolumeAttachmentsVolumeAttachment() {}
    /**
     * @return The type of volume attachment.
     * 
     */
    public Optional<String> attachmentType() {
        return Optional.ofNullable(this.attachmentType);
    }
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the &#34;CHAP password&#34;.)
     * 
     */
    public Optional<String> chapSecret() {
        return Optional.ofNullable(this.chapSecret);
    }
    /**
     * @return The volume&#39;s system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.&lt;unique_ID&gt;`
     * 
     */
    public Optional<String> chapUsername() {
        return Optional.ofNullable(this.chapUsername);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     * @deprecated
     * The &#39;compartment_id&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field. */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The device name.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    public Optional<String> encryptionInTransitType() {
        return Optional.ofNullable(this.encryptionInTransitType);
    }
    /**
     * @return The OCID of the volume attachment.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The OCID of the instance.
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return The volume&#39;s iSCSI IP address.  Example: `169.254.2.2`
     * 
     */
    public Optional<String> ipv4() {
        return Optional.ofNullable(this.ipv4);
    }
    /**
     * @return The target volume&#39;s iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     * 
     */
    public Optional<String> iqn() {
        return Optional.ofNullable(this.iqn);
    }
    /**
     * @return Whether Oracle Cloud Agent is enabled perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
     * 
     */
    public Optional<Boolean> isAgentAutoIscsiLoginEnabled() {
        return Optional.ofNullable(this.isAgentAutoIscsiLoginEnabled);
    }
    /**
     * @return Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
     * 
     */
    public Optional<Boolean> isMultipath() {
        return Optional.ofNullable(this.isMultipath);
    }
    /**
     * @return Whether in-transit encryption for the data volume&#39;s paravirtualized attachment is enabled or not.
     * 
     */
    public Optional<Boolean> isPvEncryptionInTransitEnabled() {
        return Optional.ofNullable(this.isPvEncryptionInTransitEnabled);
    }
    /**
     * @return Whether the attachment was created in read-only mode.
     * 
     */
    public Optional<Boolean> isReadOnly() {
        return Optional.ofNullable(this.isReadOnly);
    }
    public Optional<Boolean> isShareable() {
        return Optional.ofNullable(this.isShareable);
    }
    /**
     * @return The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
     * 
     */
    public Optional<String> iscsiLoginState() {
        return Optional.ofNullable(this.iscsiLoginState);
    }
    /**
     * @return A list of secondary multipath devices
     * 
     */
    public List<GetVolumeAttachmentsVolumeAttachmentMultipathDevice> multipathDevices() {
        return this.multipathDevices == null ? List.of() : this.multipathDevices;
    }
    /**
     * @return The volume&#39;s iSCSI port, usually port 860 or 3260.  Example: `3260`
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return The current state of the volume attachment.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    public Optional<Boolean> useChap() {
        return Optional.ofNullable(this.useChap);
    }
    /**
     * @return The OCID of the volume.
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeAttachmentsVolumeAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String attachmentType;
        private @Nullable String availabilityDomain;
        private @Nullable String chapSecret;
        private @Nullable String chapUsername;
        private @Nullable String compartmentId;
        private @Nullable String device;
        private @Nullable String displayName;
        private @Nullable String encryptionInTransitType;
        private @Nullable String id;
        private @Nullable String instanceId;
        private @Nullable String ipv4;
        private @Nullable String iqn;
        private @Nullable Boolean isAgentAutoIscsiLoginEnabled;
        private @Nullable Boolean isMultipath;
        private @Nullable Boolean isPvEncryptionInTransitEnabled;
        private @Nullable Boolean isReadOnly;
        private @Nullable Boolean isShareable;
        private @Nullable String iscsiLoginState;
        private @Nullable List<GetVolumeAttachmentsVolumeAttachmentMultipathDevice> multipathDevices;
        private @Nullable Integer port;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable Boolean useChap;
        private @Nullable String volumeId;
        public Builder() {}
        public Builder(GetVolumeAttachmentsVolumeAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachmentType = defaults.attachmentType;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.chapSecret = defaults.chapSecret;
    	      this.chapUsername = defaults.chapUsername;
    	      this.compartmentId = defaults.compartmentId;
    	      this.device = defaults.device;
    	      this.displayName = defaults.displayName;
    	      this.encryptionInTransitType = defaults.encryptionInTransitType;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.ipv4 = defaults.ipv4;
    	      this.iqn = defaults.iqn;
    	      this.isAgentAutoIscsiLoginEnabled = defaults.isAgentAutoIscsiLoginEnabled;
    	      this.isMultipath = defaults.isMultipath;
    	      this.isPvEncryptionInTransitEnabled = defaults.isPvEncryptionInTransitEnabled;
    	      this.isReadOnly = defaults.isReadOnly;
    	      this.isShareable = defaults.isShareable;
    	      this.iscsiLoginState = defaults.iscsiLoginState;
    	      this.multipathDevices = defaults.multipathDevices;
    	      this.port = defaults.port;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.useChap = defaults.useChap;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder attachmentType(@Nullable String attachmentType) {
            this.attachmentType = attachmentType;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder chapSecret(@Nullable String chapSecret) {
            this.chapSecret = chapSecret;
            return this;
        }
        @CustomType.Setter
        public Builder chapUsername(@Nullable String chapUsername) {
            this.chapUsername = chapUsername;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionInTransitType(@Nullable String encryptionInTransitType) {
            this.encryptionInTransitType = encryptionInTransitType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4(@Nullable String ipv4) {
            this.ipv4 = ipv4;
            return this;
        }
        @CustomType.Setter
        public Builder iqn(@Nullable String iqn) {
            this.iqn = iqn;
            return this;
        }
        @CustomType.Setter
        public Builder isAgentAutoIscsiLoginEnabled(@Nullable Boolean isAgentAutoIscsiLoginEnabled) {
            this.isAgentAutoIscsiLoginEnabled = isAgentAutoIscsiLoginEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isMultipath(@Nullable Boolean isMultipath) {
            this.isMultipath = isMultipath;
            return this;
        }
        @CustomType.Setter
        public Builder isPvEncryptionInTransitEnabled(@Nullable Boolean isPvEncryptionInTransitEnabled) {
            this.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isReadOnly(@Nullable Boolean isReadOnly) {
            this.isReadOnly = isReadOnly;
            return this;
        }
        @CustomType.Setter
        public Builder isShareable(@Nullable Boolean isShareable) {
            this.isShareable = isShareable;
            return this;
        }
        @CustomType.Setter
        public Builder iscsiLoginState(@Nullable String iscsiLoginState) {
            this.iscsiLoginState = iscsiLoginState;
            return this;
        }
        @CustomType.Setter
        public Builder multipathDevices(@Nullable List<GetVolumeAttachmentsVolumeAttachmentMultipathDevice> multipathDevices) {
            this.multipathDevices = multipathDevices;
            return this;
        }
        public Builder multipathDevices(GetVolumeAttachmentsVolumeAttachmentMultipathDevice... multipathDevices) {
            return multipathDevices(List.of(multipathDevices));
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder useChap(@Nullable Boolean useChap) {
            this.useChap = useChap;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {
            this.volumeId = volumeId;
            return this;
        }
        public GetVolumeAttachmentsVolumeAttachment build() {
            final var o = new GetVolumeAttachmentsVolumeAttachment();
            o.attachmentType = attachmentType;
            o.availabilityDomain = availabilityDomain;
            o.chapSecret = chapSecret;
            o.chapUsername = chapUsername;
            o.compartmentId = compartmentId;
            o.device = device;
            o.displayName = displayName;
            o.encryptionInTransitType = encryptionInTransitType;
            o.id = id;
            o.instanceId = instanceId;
            o.ipv4 = ipv4;
            o.iqn = iqn;
            o.isAgentAutoIscsiLoginEnabled = isAgentAutoIscsiLoginEnabled;
            o.isMultipath = isMultipath;
            o.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            o.isReadOnly = isReadOnly;
            o.isShareable = isShareable;
            o.iscsiLoginState = iscsiLoginState;
            o.multipathDevices = multipathDevices;
            o.port = port;
            o.state = state;
            o.timeCreated = timeCreated;
            o.useChap = useChap;
            o.volumeId = volumeId;
            return o;
        }
    }
}
