// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeBackupPoliciesVolumeBackupPolicySchedule {
    /**
     * @return The type of volume backup to create.
     * 
     */
    private @Nullable String backupType;
    /**
     * @return The day of the month to schedule the volume backup.
     * 
     */
    private @Nullable Integer dayOfMonth;
    /**
     * @return The day of the week to schedule the volume backup.
     * 
     */
    private @Nullable String dayOfWeek;
    /**
     * @return The hour of the day to schedule the volume backup.
     * 
     */
    private @Nullable Integer hourOfDay;
    /**
     * @return The month of the year to schedule the volume backup.
     * 
     */
    private @Nullable String month;
    /**
     * @return The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
     * 
     */
    private @Nullable Integer offsetSeconds;
    /**
     * @return Indicates how the offset is defined. If value is `STRUCTURED`, then `hourOfDay`, `dayOfWeek`, `dayOfMonth`, and `month` fields are used and `offsetSeconds` will be ignored in requests and users should ignore its value from the responses.
     * 
     */
    private @Nullable String offsetType;
    /**
     * @return The volume backup frequency.
     * 
     */
    private @Nullable String period;
    /**
     * @return How long, in seconds, to keep the volume backups created by this schedule.
     * 
     */
    private @Nullable Integer retentionSeconds;
    /**
     * @return Specifies what time zone is the schedule in
     * 
     */
    private @Nullable String timeZone;

    private GetVolumeBackupPoliciesVolumeBackupPolicySchedule() {}
    /**
     * @return The type of volume backup to create.
     * 
     */
    public Optional<String> backupType() {
        return Optional.ofNullable(this.backupType);
    }
    /**
     * @return The day of the month to schedule the volume backup.
     * 
     */
    public Optional<Integer> dayOfMonth() {
        return Optional.ofNullable(this.dayOfMonth);
    }
    /**
     * @return The day of the week to schedule the volume backup.
     * 
     */
    public Optional<String> dayOfWeek() {
        return Optional.ofNullable(this.dayOfWeek);
    }
    /**
     * @return The hour of the day to schedule the volume backup.
     * 
     */
    public Optional<Integer> hourOfDay() {
        return Optional.ofNullable(this.hourOfDay);
    }
    /**
     * @return The month of the year to schedule the volume backup.
     * 
     */
    public Optional<String> month() {
        return Optional.ofNullable(this.month);
    }
    /**
     * @return The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
     * 
     */
    public Optional<Integer> offsetSeconds() {
        return Optional.ofNullable(this.offsetSeconds);
    }
    /**
     * @return Indicates how the offset is defined. If value is `STRUCTURED`, then `hourOfDay`, `dayOfWeek`, `dayOfMonth`, and `month` fields are used and `offsetSeconds` will be ignored in requests and users should ignore its value from the responses.
     * 
     */
    public Optional<String> offsetType() {
        return Optional.ofNullable(this.offsetType);
    }
    /**
     * @return The volume backup frequency.
     * 
     */
    public Optional<String> period() {
        return Optional.ofNullable(this.period);
    }
    /**
     * @return How long, in seconds, to keep the volume backups created by this schedule.
     * 
     */
    public Optional<Integer> retentionSeconds() {
        return Optional.ofNullable(this.retentionSeconds);
    }
    /**
     * @return Specifies what time zone is the schedule in
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeBackupPoliciesVolumeBackupPolicySchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupType;
        private @Nullable Integer dayOfMonth;
        private @Nullable String dayOfWeek;
        private @Nullable Integer hourOfDay;
        private @Nullable String month;
        private @Nullable Integer offsetSeconds;
        private @Nullable String offsetType;
        private @Nullable String period;
        private @Nullable Integer retentionSeconds;
        private @Nullable String timeZone;
        public Builder() {}
        public Builder(GetVolumeBackupPoliciesVolumeBackupPolicySchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupType = defaults.backupType;
    	      this.dayOfMonth = defaults.dayOfMonth;
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.hourOfDay = defaults.hourOfDay;
    	      this.month = defaults.month;
    	      this.offsetSeconds = defaults.offsetSeconds;
    	      this.offsetType = defaults.offsetType;
    	      this.period = defaults.period;
    	      this.retentionSeconds = defaults.retentionSeconds;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder backupType(@Nullable String backupType) {
            this.backupType = backupType;
            return this;
        }
        @CustomType.Setter
        public Builder dayOfMonth(@Nullable Integer dayOfMonth) {
            this.dayOfMonth = dayOfMonth;
            return this;
        }
        @CustomType.Setter
        public Builder dayOfWeek(@Nullable String dayOfWeek) {
            this.dayOfWeek = dayOfWeek;
            return this;
        }
        @CustomType.Setter
        public Builder hourOfDay(@Nullable Integer hourOfDay) {
            this.hourOfDay = hourOfDay;
            return this;
        }
        @CustomType.Setter
        public Builder month(@Nullable String month) {
            this.month = month;
            return this;
        }
        @CustomType.Setter
        public Builder offsetSeconds(@Nullable Integer offsetSeconds) {
            this.offsetSeconds = offsetSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder offsetType(@Nullable String offsetType) {
            this.offsetType = offsetType;
            return this;
        }
        @CustomType.Setter
        public Builder period(@Nullable String period) {
            this.period = period;
            return this;
        }
        @CustomType.Setter
        public Builder retentionSeconds(@Nullable Integer retentionSeconds) {
            this.retentionSeconds = retentionSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = timeZone;
            return this;
        }
        public GetVolumeBackupPoliciesVolumeBackupPolicySchedule build() {
            final var o = new GetVolumeBackupPoliciesVolumeBackupPolicySchedule();
            o.backupType = backupType;
            o.dayOfMonth = dayOfMonth;
            o.dayOfWeek = dayOfWeek;
            o.hourOfDay = hourOfDay;
            o.month = month;
            o.offsetSeconds = offsetSeconds;
            o.offsetType = offsetType;
            o.period = period;
            o.retentionSeconds = retentionSeconds;
            o.timeZone = timeZone;
            return o;
        }
    }
}
