// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment {
    /**
     * @return The OCID of an asset (e.g. a volume).
     * 
     */
    private String assetId;
    /**
     * @return The OCID of the volume backup policy assignment.
     * 
     */
    private String id;
    /**
     * @return The OCID of the volume backup policy that has been assigned to the volume.
     * 
     */
    private String policyId;
    /**
     * @return The date and time the volume backup policy was assigned to the volume. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The OCID of the Vault service key which is the master encryption key for the block / boot volume cross region backups, which will be used in the destination region to encrypt the backup&#39;s encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     * 
     */
    private String xrcKmsKeyId;

    private GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment() {}
    /**
     * @return The OCID of an asset (e.g. a volume).
     * 
     */
    public String assetId() {
        return this.assetId;
    }
    /**
     * @return The OCID of the volume backup policy assignment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the volume backup policy that has been assigned to the volume.
     * 
     */
    public String policyId() {
        return this.policyId;
    }
    /**
     * @return The date and time the volume backup policy was assigned to the volume. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The OCID of the Vault service key which is the master encryption key for the block / boot volume cross region backups, which will be used in the destination region to encrypt the backup&#39;s encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     * 
     */
    public String xrcKmsKeyId() {
        return this.xrcKmsKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String assetId;
        private String id;
        private String policyId;
        private String timeCreated;
        private String xrcKmsKeyId;
        public Builder() {}
        public Builder(GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetId = defaults.assetId;
    	      this.id = defaults.id;
    	      this.policyId = defaults.policyId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.xrcKmsKeyId = defaults.xrcKmsKeyId;
        }

        @CustomType.Setter
        public Builder assetId(String assetId) {
            if (assetId == null) {
              throw new MissingRequiredPropertyException("GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment", "assetId");
            }
            this.assetId = assetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder policyId(String policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder xrcKmsKeyId(String xrcKmsKeyId) {
            if (xrcKmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment", "xrcKmsKeyId");
            }
            this.xrcKmsKeyId = xrcKmsKeyId;
            return this;
        }
        public GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment build() {
            final var _resultValue = new GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment();
            _resultValue.assetId = assetId;
            _resultValue.id = id;
            _resultValue.policyId = policyId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.xrcKmsKeyId = xrcKmsKeyId;
            return _resultValue;
        }
    }
}
