// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVolumeBackupsVolumeBackupSourceDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeBackupsVolumeBackup {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    private @Nullable String expirationTime;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the volume backup.
     * 
     */
    private @Nullable String id;
    /**
     * @return The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return The size of the volume, in GBs.
     * 
     */
    private @Nullable String sizeInGbs;
    /**
     * @return The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `size_in_gbs`.
     * 
     * @deprecated
     * The &#39;size_in_mbs&#39; field has been deprecated. Please use &#39;size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead. */
    private @Nullable String sizeInMbs;
    private @Nullable List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails;
    /**
     * @return Specifies whether the backup was created manually, or via scheduled backup policy.
     * 
     */
    private @Nullable String sourceType;
    /**
     * @return A filter to return only resources that originated from the given source volume backup.
     * 
     */
    private @Nullable String sourceVolumeBackupId;
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    private @Nullable String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
     * 
     */
    private @Nullable String timeRequestReceived;
    /**
     * @return The type of a volume backup. Supported values are &#39;FULL&#39; or &#39;INCREMENTAL&#39;.
     * 
     */
    private @Nullable String type;
    /**
     * @return The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
     * 
     */
    private @Nullable String uniqueSizeInGbs;
    /**
     * @return The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
     * 
     * @deprecated
     * The &#39;unique_size_in_mbs&#39; field has been deprecated. Please use &#39;unique_size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead. */
    private @Nullable String uniqueSizeInMbs;
    /**
     * @return The OCID of the volume.
     * 
     */
    private @Nullable String volumeId;

    private GetVolumeBackupsVolumeBackup() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    public Optional<String> expirationTime() {
        return Optional.ofNullable(this.expirationTime);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the volume backup.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return The size of the volume, in GBs.
     * 
     */
    public Optional<String> sizeInGbs() {
        return Optional.ofNullable(this.sizeInGbs);
    }
    /**
     * @return The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `size_in_gbs`.
     * 
     * @deprecated
     * The &#39;size_in_mbs&#39; field has been deprecated. Please use &#39;size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead. */
    public Optional<String> sizeInMbs() {
        return Optional.ofNullable(this.sizeInMbs);
    }
    public List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails() {
        return this.sourceDetails == null ? List.of() : this.sourceDetails;
    }
    /**
     * @return Specifies whether the backup was created manually, or via scheduled backup policy.
     * 
     */
    public Optional<String> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }
    /**
     * @return A filter to return only resources that originated from the given source volume backup.
     * 
     */
    public Optional<String> sourceVolumeBackupId() {
        return Optional.ofNullable(this.sourceVolumeBackupId);
    }
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
     * 
     */
    public Optional<String> timeRequestReceived() {
        return Optional.ofNullable(this.timeRequestReceived);
    }
    /**
     * @return The type of a volume backup. Supported values are &#39;FULL&#39; or &#39;INCREMENTAL&#39;.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
     * 
     */
    public Optional<String> uniqueSizeInGbs() {
        return Optional.ofNullable(this.uniqueSizeInGbs);
    }
    /**
     * @return The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
     * 
     * @deprecated
     * The &#39;unique_size_in_mbs&#39; field has been deprecated. Please use &#39;unique_size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead. */
    public Optional<String> uniqueSizeInMbs() {
        return Optional.ofNullable(this.uniqueSizeInMbs);
    }
    /**
     * @return The OCID of the volume.
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeBackupsVolumeBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable String expirationTime;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String kmsKeyId;
        private @Nullable String sizeInGbs;
        private @Nullable String sizeInMbs;
        private @Nullable List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails;
        private @Nullable String sourceType;
        private @Nullable String sourceVolumeBackupId;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeRequestReceived;
        private @Nullable String type;
        private @Nullable String uniqueSizeInGbs;
        private @Nullable String uniqueSizeInMbs;
        private @Nullable String volumeId;
        public Builder() {}
        public Builder(GetVolumeBackupsVolumeBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.expirationTime = defaults.expirationTime;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.sizeInGbs = defaults.sizeInGbs;
    	      this.sizeInMbs = defaults.sizeInMbs;
    	      this.sourceDetails = defaults.sourceDetails;
    	      this.sourceType = defaults.sourceType;
    	      this.sourceVolumeBackupId = defaults.sourceVolumeBackupId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeRequestReceived = defaults.timeRequestReceived;
    	      this.type = defaults.type;
    	      this.uniqueSizeInGbs = defaults.uniqueSizeInGbs;
    	      this.uniqueSizeInMbs = defaults.uniqueSizeInMbs;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder expirationTime(@Nullable String expirationTime) {
            this.expirationTime = expirationTime;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInGbs(@Nullable String sizeInGbs) {
            this.sizeInGbs = sizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInMbs(@Nullable String sizeInMbs) {
            this.sizeInMbs = sizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDetails(@Nullable List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails) {
            this.sourceDetails = sourceDetails;
            return this;
        }
        public Builder sourceDetails(GetVolumeBackupsVolumeBackupSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        @CustomType.Setter
        public Builder sourceType(@Nullable String sourceType) {
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVolumeBackupId(@Nullable String sourceVolumeBackupId) {
            this.sourceVolumeBackupId = sourceVolumeBackupId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeRequestReceived(@Nullable String timeRequestReceived) {
            this.timeRequestReceived = timeRequestReceived;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uniqueSizeInGbs(@Nullable String uniqueSizeInGbs) {
            this.uniqueSizeInGbs = uniqueSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder uniqueSizeInMbs(@Nullable String uniqueSizeInMbs) {
            this.uniqueSizeInMbs = uniqueSizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {
            this.volumeId = volumeId;
            return this;
        }
        public GetVolumeBackupsVolumeBackup build() {
            final var o = new GetVolumeBackupsVolumeBackup();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.expirationTime = expirationTime;
            o.freeformTags = freeformTags;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.sizeInGbs = sizeInGbs;
            o.sizeInMbs = sizeInMbs;
            o.sourceDetails = sourceDetails;
            o.sourceType = sourceType;
            o.sourceVolumeBackupId = sourceVolumeBackupId;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeRequestReceived = timeRequestReceived;
            o.type = type;
            o.uniqueSizeInGbs = uniqueSizeInGbs;
            o.uniqueSizeInMbs = uniqueSizeInMbs;
            o.volumeId = volumeId;
            return o;
        }
    }
}
