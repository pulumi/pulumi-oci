// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.GetVolumeAutotunePolicy;
import com.pulumi.oci.Core.outputs.GetVolumeBlockVolumeReplica;
import com.pulumi.oci.Core.outputs.GetVolumeSourceDetail;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVolumeResult {
    /**
     * @return The number of Volume Performance Units per GB that this volume is effectively tuned to.
     * 
     */
    private String autoTunedVpusPerGb;
    /**
     * @return The list of autotune policies enabled for this volume.
     * 
     */
    private List<GetVolumeAutotunePolicy> autotunePolicies;
    /**
     * @return The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @deprecated
     * The &#39;backup_policy_id&#39; field has been deprecated. Please use the &#39;oci_core_volume_backup_policy_assignment&#39; resource instead.
     * 
     */
    @Deprecated /* The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead. */
    private String backupPolicyId;
    /**
     * @return The list of block volume replicas of this volume.
     * 
     */
    private List<GetVolumeBlockVolumeReplica> blockVolumeReplicas;
    private Boolean blockVolumeReplicasDeletion;
    /**
     * @return The clusterPlacementGroup Id of the volume for volume placement.
     * 
     */
    private String clusterPlacementGroupId;
    /**
     * @return The OCID of the compartment that contains the volume.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the block volume replica.
     * 
     */
    private String id;
    /**
     * @return Specifies whether the auto-tune performance is enabled for this volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
     * 
     */
    private Boolean isAutoTuneEnabled;
    /**
     * @return Specifies whether the cloned volume&#39;s data has finished copying from the source volume or backup.
     * 
     */
    private Boolean isHydrated;
    /**
     * @return The OCID of the Vault service key which is the master encryption key for the volume.
     * 
     */
    private String kmsKeyId;
    /**
     * @return The size of the volume in GBs.
     * 
     */
    private String sizeInGbs;
    /**
     * @return The size of the volume in MBs. This field is deprecated. Use sizeInGBs instead.
     * 
     * @deprecated
     * The &#39;size_in_mbs&#39; field has been deprecated. Please use &#39;size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead. */
    private String sizeInMbs;
    /**
     * @return Specifies the volume source details for a new Block volume. The volume source is either another Block volume in the same Availability Domain or a Block volume backup. This is an optional field. If not specified or set to null, the new Block volume will be empty. When specified, the new Block volume will contain data from the source volume or backup.
     * 
     */
    private List<GetVolumeSourceDetail> sourceDetails;
    /**
     * @return The current state of a volume.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    private String volumeBackupId;
    /**
     * @return The OCID of the source volume group.
     * 
     */
    private String volumeGroupId;
    private String volumeId;
    /**
     * @return The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     */
    private String vpusPerGb;
    private String xrcKmsKeyId;

    private GetVolumeResult() {}
    /**
     * @return The number of Volume Performance Units per GB that this volume is effectively tuned to.
     * 
     */
    public String autoTunedVpusPerGb() {
        return this.autoTunedVpusPerGb;
    }
    /**
     * @return The list of autotune policies enabled for this volume.
     * 
     */
    public List<GetVolumeAutotunePolicy> autotunePolicies() {
        return this.autotunePolicies;
    }
    /**
     * @return The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @deprecated
     * The &#39;backup_policy_id&#39; field has been deprecated. Please use the &#39;oci_core_volume_backup_policy_assignment&#39; resource instead.
     * 
     */
    @Deprecated /* The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead. */
    public String backupPolicyId() {
        return this.backupPolicyId;
    }
    /**
     * @return The list of block volume replicas of this volume.
     * 
     */
    public List<GetVolumeBlockVolumeReplica> blockVolumeReplicas() {
        return this.blockVolumeReplicas;
    }
    public Boolean blockVolumeReplicasDeletion() {
        return this.blockVolumeReplicasDeletion;
    }
    /**
     * @return The clusterPlacementGroup Id of the volume for volume placement.
     * 
     */
    public String clusterPlacementGroupId() {
        return this.clusterPlacementGroupId;
    }
    /**
     * @return The OCID of the compartment that contains the volume.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the block volume replica.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies whether the auto-tune performance is enabled for this volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
     * 
     */
    public Boolean isAutoTuneEnabled() {
        return this.isAutoTuneEnabled;
    }
    /**
     * @return Specifies whether the cloned volume&#39;s data has finished copying from the source volume or backup.
     * 
     */
    public Boolean isHydrated() {
        return this.isHydrated;
    }
    /**
     * @return The OCID of the Vault service key which is the master encryption key for the volume.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The size of the volume in GBs.
     * 
     */
    public String sizeInGbs() {
        return this.sizeInGbs;
    }
    /**
     * @return The size of the volume in MBs. This field is deprecated. Use sizeInGBs instead.
     * 
     * @deprecated
     * The &#39;size_in_mbs&#39; field has been deprecated. Please use &#39;size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead. */
    public String sizeInMbs() {
        return this.sizeInMbs;
    }
    /**
     * @return Specifies the volume source details for a new Block volume. The volume source is either another Block volume in the same Availability Domain or a Block volume backup. This is an optional field. If not specified or set to null, the new Block volume will be empty. When specified, the new Block volume will contain data from the source volume or backup.
     * 
     */
    public List<GetVolumeSourceDetail> sourceDetails() {
        return this.sourceDetails;
    }
    /**
     * @return The current state of a volume.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    public String volumeBackupId() {
        return this.volumeBackupId;
    }
    /**
     * @return The OCID of the source volume group.
     * 
     */
    public String volumeGroupId() {
        return this.volumeGroupId;
    }
    public String volumeId() {
        return this.volumeId;
    }
    /**
     * @return The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service&#39;s elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
     * 
     */
    public String vpusPerGb() {
        return this.vpusPerGb;
    }
    public String xrcKmsKeyId() {
        return this.xrcKmsKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autoTunedVpusPerGb;
        private List<GetVolumeAutotunePolicy> autotunePolicies;
        private String availabilityDomain;
        private String backupPolicyId;
        private List<GetVolumeBlockVolumeReplica> blockVolumeReplicas;
        private Boolean blockVolumeReplicasDeletion;
        private String clusterPlacementGroupId;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isAutoTuneEnabled;
        private Boolean isHydrated;
        private String kmsKeyId;
        private String sizeInGbs;
        private String sizeInMbs;
        private List<GetVolumeSourceDetail> sourceDetails;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String volumeBackupId;
        private String volumeGroupId;
        private String volumeId;
        private String vpusPerGb;
        private String xrcKmsKeyId;
        public Builder() {}
        public Builder(GetVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoTunedVpusPerGb = defaults.autoTunedVpusPerGb;
    	      this.autotunePolicies = defaults.autotunePolicies;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.backupPolicyId = defaults.backupPolicyId;
    	      this.blockVolumeReplicas = defaults.blockVolumeReplicas;
    	      this.blockVolumeReplicasDeletion = defaults.blockVolumeReplicasDeletion;
    	      this.clusterPlacementGroupId = defaults.clusterPlacementGroupId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoTuneEnabled = defaults.isAutoTuneEnabled;
    	      this.isHydrated = defaults.isHydrated;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.sizeInGbs = defaults.sizeInGbs;
    	      this.sizeInMbs = defaults.sizeInMbs;
    	      this.sourceDetails = defaults.sourceDetails;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.volumeBackupId = defaults.volumeBackupId;
    	      this.volumeGroupId = defaults.volumeGroupId;
    	      this.volumeId = defaults.volumeId;
    	      this.vpusPerGb = defaults.vpusPerGb;
    	      this.xrcKmsKeyId = defaults.xrcKmsKeyId;
        }

        @CustomType.Setter
        public Builder autoTunedVpusPerGb(String autoTunedVpusPerGb) {
            if (autoTunedVpusPerGb == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "autoTunedVpusPerGb");
            }
            this.autoTunedVpusPerGb = autoTunedVpusPerGb;
            return this;
        }
        @CustomType.Setter
        public Builder autotunePolicies(List<GetVolumeAutotunePolicy> autotunePolicies) {
            if (autotunePolicies == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "autotunePolicies");
            }
            this.autotunePolicies = autotunePolicies;
            return this;
        }
        public Builder autotunePolicies(GetVolumeAutotunePolicy... autotunePolicies) {
            return autotunePolicies(List.of(autotunePolicies));
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder backupPolicyId(String backupPolicyId) {
            if (backupPolicyId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "backupPolicyId");
            }
            this.backupPolicyId = backupPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder blockVolumeReplicas(List<GetVolumeBlockVolumeReplica> blockVolumeReplicas) {
            if (blockVolumeReplicas == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "blockVolumeReplicas");
            }
            this.blockVolumeReplicas = blockVolumeReplicas;
            return this;
        }
        public Builder blockVolumeReplicas(GetVolumeBlockVolumeReplica... blockVolumeReplicas) {
            return blockVolumeReplicas(List.of(blockVolumeReplicas));
        }
        @CustomType.Setter
        public Builder blockVolumeReplicasDeletion(Boolean blockVolumeReplicasDeletion) {
            if (blockVolumeReplicasDeletion == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "blockVolumeReplicasDeletion");
            }
            this.blockVolumeReplicasDeletion = blockVolumeReplicasDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPlacementGroupId(String clusterPlacementGroupId) {
            if (clusterPlacementGroupId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "clusterPlacementGroupId");
            }
            this.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoTuneEnabled(Boolean isAutoTuneEnabled) {
            if (isAutoTuneEnabled == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "isAutoTuneEnabled");
            }
            this.isAutoTuneEnabled = isAutoTuneEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isHydrated(Boolean isHydrated) {
            if (isHydrated == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "isHydrated");
            }
            this.isHydrated = isHydrated;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInGbs(String sizeInGbs) {
            if (sizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "sizeInGbs");
            }
            this.sizeInGbs = sizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInMbs(String sizeInMbs) {
            if (sizeInMbs == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "sizeInMbs");
            }
            this.sizeInMbs = sizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDetails(List<GetVolumeSourceDetail> sourceDetails) {
            if (sourceDetails == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "sourceDetails");
            }
            this.sourceDetails = sourceDetails;
            return this;
        }
        public Builder sourceDetails(GetVolumeSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder volumeBackupId(String volumeBackupId) {
            if (volumeBackupId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "volumeBackupId");
            }
            this.volumeBackupId = volumeBackupId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeGroupId(String volumeGroupId) {
            if (volumeGroupId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "volumeGroupId");
            }
            this.volumeGroupId = volumeGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(String volumeId) {
            if (volumeId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "volumeId");
            }
            this.volumeId = volumeId;
            return this;
        }
        @CustomType.Setter
        public Builder vpusPerGb(String vpusPerGb) {
            if (vpusPerGb == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "vpusPerGb");
            }
            this.vpusPerGb = vpusPerGb;
            return this;
        }
        @CustomType.Setter
        public Builder xrcKmsKeyId(String xrcKmsKeyId) {
            if (xrcKmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetVolumeResult", "xrcKmsKeyId");
            }
            this.xrcKmsKeyId = xrcKmsKeyId;
            return this;
        }
        public GetVolumeResult build() {
            final var _resultValue = new GetVolumeResult();
            _resultValue.autoTunedVpusPerGb = autoTunedVpusPerGb;
            _resultValue.autotunePolicies = autotunePolicies;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.backupPolicyId = backupPolicyId;
            _resultValue.blockVolumeReplicas = blockVolumeReplicas;
            _resultValue.blockVolumeReplicasDeletion = blockVolumeReplicasDeletion;
            _resultValue.clusterPlacementGroupId = clusterPlacementGroupId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isAutoTuneEnabled = isAutoTuneEnabled;
            _resultValue.isHydrated = isHydrated;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.sizeInGbs = sizeInGbs;
            _resultValue.sizeInMbs = sizeInMbs;
            _resultValue.sourceDetails = sourceDetails;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.volumeBackupId = volumeBackupId;
            _resultValue.volumeGroupId = volumeGroupId;
            _resultValue.volumeId = volumeId;
            _resultValue.vpusPerGb = vpusPerGb;
            _resultValue.xrcKmsKeyId = xrcKmsKeyId;
            return _resultValue;
        }
    }
}
