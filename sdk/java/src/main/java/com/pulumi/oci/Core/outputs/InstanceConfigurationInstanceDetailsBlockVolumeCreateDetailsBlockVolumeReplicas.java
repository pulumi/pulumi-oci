// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas {
    /**
     * @return The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The display name of the block volume replica. You may optionally specify a *display name* for the block volume replica, otherwise a default is provided.
     * 
     */
    private @Nullable String displayName;

    private InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas() {}
    /**
     * @return The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The display name of the block volume replica. You may optionally specify a *display name* for the block volume replica, otherwise a default is provided.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private @Nullable String displayName;
        public Builder() {}
        public Builder(InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.displayName = defaults.displayName;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        public InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas build() {
            final var _resultValue = new InstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.displayName = displayName;
            return _resultValue;
        }
    }
}
