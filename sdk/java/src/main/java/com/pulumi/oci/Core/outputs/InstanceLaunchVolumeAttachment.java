// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.InstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceLaunchVolumeAttachment {
    /**
     * @return The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
     * 
     */
    private @Nullable String device;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    private @Nullable String encryptionInTransitType;
    /**
     * @return Whether to enable Oracle Cloud Agent to perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
     * 
     */
    private @Nullable Boolean isAgentAutoIscsiLoginEnabled;
    /**
     * @return Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
     * 
     */
    private @Nullable Boolean isPvEncryptionInTransitEnabled;
    /**
     * @return Whether the attachment was created in read-only mode.
     * 
     */
    private @Nullable Boolean isReadOnly;
    /**
     * @return Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     * 
     */
    private @Nullable Boolean isShareable;
    /**
     * @return Define a volume that will be created and attached or attached to an instance on creation.
     * 
     */
    private @Nullable InstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails launchCreateVolumeDetails;
    /**
     * @return The type of volume. Currently, the only supported value is &#34;iscsi&#34;.
     * 
     */
    private String type;
    /**
     * @return Whether to use CHAP authentication for the volume attachment. Defaults to false.
     * 
     */
    private @Nullable Boolean useChap;
    /**
     * @return The OCID of the volume. If CreateVolumeDetails is specified, this field must be omitted from the request.
     * 
     */
    private @Nullable String volumeId;

    private InstanceLaunchVolumeAttachment() {}
    /**
     * @return The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    public Optional<String> encryptionInTransitType() {
        return Optional.ofNullable(this.encryptionInTransitType);
    }
    /**
     * @return Whether to enable Oracle Cloud Agent to perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
     * 
     */
    public Optional<Boolean> isAgentAutoIscsiLoginEnabled() {
        return Optional.ofNullable(this.isAgentAutoIscsiLoginEnabled);
    }
    /**
     * @return Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
     * 
     */
    public Optional<Boolean> isPvEncryptionInTransitEnabled() {
        return Optional.ofNullable(this.isPvEncryptionInTransitEnabled);
    }
    /**
     * @return Whether the attachment was created in read-only mode.
     * 
     */
    public Optional<Boolean> isReadOnly() {
        return Optional.ofNullable(this.isReadOnly);
    }
    /**
     * @return Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     * 
     */
    public Optional<Boolean> isShareable() {
        return Optional.ofNullable(this.isShareable);
    }
    /**
     * @return Define a volume that will be created and attached or attached to an instance on creation.
     * 
     */
    public Optional<InstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails> launchCreateVolumeDetails() {
        return Optional.ofNullable(this.launchCreateVolumeDetails);
    }
    /**
     * @return The type of volume. Currently, the only supported value is &#34;iscsi&#34;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Whether to use CHAP authentication for the volume attachment. Defaults to false.
     * 
     */
    public Optional<Boolean> useChap() {
        return Optional.ofNullable(this.useChap);
    }
    /**
     * @return The OCID of the volume. If CreateVolumeDetails is specified, this field must be omitted from the request.
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceLaunchVolumeAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String device;
        private @Nullable String displayName;
        private @Nullable String encryptionInTransitType;
        private @Nullable Boolean isAgentAutoIscsiLoginEnabled;
        private @Nullable Boolean isPvEncryptionInTransitEnabled;
        private @Nullable Boolean isReadOnly;
        private @Nullable Boolean isShareable;
        private @Nullable InstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails launchCreateVolumeDetails;
        private String type;
        private @Nullable Boolean useChap;
        private @Nullable String volumeId;
        public Builder() {}
        public Builder(InstanceLaunchVolumeAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.displayName = defaults.displayName;
    	      this.encryptionInTransitType = defaults.encryptionInTransitType;
    	      this.isAgentAutoIscsiLoginEnabled = defaults.isAgentAutoIscsiLoginEnabled;
    	      this.isPvEncryptionInTransitEnabled = defaults.isPvEncryptionInTransitEnabled;
    	      this.isReadOnly = defaults.isReadOnly;
    	      this.isShareable = defaults.isShareable;
    	      this.launchCreateVolumeDetails = defaults.launchCreateVolumeDetails;
    	      this.type = defaults.type;
    	      this.useChap = defaults.useChap;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder device(@Nullable String device) {

            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionInTransitType(@Nullable String encryptionInTransitType) {

            this.encryptionInTransitType = encryptionInTransitType;
            return this;
        }
        @CustomType.Setter
        public Builder isAgentAutoIscsiLoginEnabled(@Nullable Boolean isAgentAutoIscsiLoginEnabled) {

            this.isAgentAutoIscsiLoginEnabled = isAgentAutoIscsiLoginEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isPvEncryptionInTransitEnabled(@Nullable Boolean isPvEncryptionInTransitEnabled) {

            this.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isReadOnly(@Nullable Boolean isReadOnly) {

            this.isReadOnly = isReadOnly;
            return this;
        }
        @CustomType.Setter
        public Builder isShareable(@Nullable Boolean isShareable) {

            this.isShareable = isShareable;
            return this;
        }
        @CustomType.Setter
        public Builder launchCreateVolumeDetails(@Nullable InstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails launchCreateVolumeDetails) {

            this.launchCreateVolumeDetails = launchCreateVolumeDetails;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("InstanceLaunchVolumeAttachment", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder useChap(@Nullable Boolean useChap) {

            this.useChap = useChap;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {

            this.volumeId = volumeId;
            return this;
        }
        public InstanceLaunchVolumeAttachment build() {
            final var _resultValue = new InstanceLaunchVolumeAttachment();
            _resultValue.device = device;
            _resultValue.displayName = displayName;
            _resultValue.encryptionInTransitType = encryptionInTransitType;
            _resultValue.isAgentAutoIscsiLoginEnabled = isAgentAutoIscsiLoginEnabled;
            _resultValue.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            _resultValue.isReadOnly = isReadOnly;
            _resultValue.isShareable = isShareable;
            _resultValue.launchCreateVolumeDetails = launchCreateVolumeDetails;
            _resultValue.type = type;
            _resultValue.useChap = useChap;
            _resultValue.volumeId = volumeId;
            return _resultValue;
        }
    }
}
