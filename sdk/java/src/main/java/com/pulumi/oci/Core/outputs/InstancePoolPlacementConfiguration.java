// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.InstancePoolPlacementConfigurationPrimaryVnicSubnets;
import com.pulumi.oci.Core.outputs.InstancePoolPlacementConfigurationSecondaryVnicSubnet;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstancePoolPlacementConfiguration {
    /**
     * @return (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return (Updatable) The fault domains to place instances.
     * 
     * If you don&#39;t provide any values, the system makes a best effort to distribute instances across all fault domains based on capacity.
     * 
     * To distribute the instances evenly across selected fault domains, provide a set of fault domains. For example, you might want instances to be evenly distributed if your applications require high availability.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
     * Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
     * 
     */
    private @Nullable List<String> faultDomains;
    private @Nullable String primarySubnetId;
    /**
     * @return (Updatable) Details about the IPv6 primary subnet.
     * 
     */
    private @Nullable InstancePoolPlacementConfigurationPrimaryVnicSubnets primaryVnicSubnets;
    /**
     * @return (Updatable) The set of secondary VNIC data for instances in the pool.
     * 
     */
    private @Nullable List<InstancePoolPlacementConfigurationSecondaryVnicSubnet> secondaryVnicSubnets;

    private InstancePoolPlacementConfiguration() {}
    /**
     * @return (Updatable) The availability domain to place instances.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return (Updatable) The fault domains to place instances.
     * 
     * If you don&#39;t provide any values, the system makes a best effort to distribute instances across all fault domains based on capacity.
     * 
     * To distribute the instances evenly across selected fault domains, provide a set of fault domains. For example, you might want instances to be evenly distributed if your applications require high availability.
     * 
     * To get a list of fault domains, use the [ListFaultDomains](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/FaultDomain/ListFaultDomains) operation in the Identity and Access Management Service API.
     * 
     * &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
     * Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
     * 
     */
    public List<String> faultDomains() {
        return this.faultDomains == null ? List.of() : this.faultDomains;
    }
    public Optional<String> primarySubnetId() {
        return Optional.ofNullable(this.primarySubnetId);
    }
    /**
     * @return (Updatable) Details about the IPv6 primary subnet.
     * 
     */
    public Optional<InstancePoolPlacementConfigurationPrimaryVnicSubnets> primaryVnicSubnets() {
        return Optional.ofNullable(this.primaryVnicSubnets);
    }
    /**
     * @return (Updatable) The set of secondary VNIC data for instances in the pool.
     * 
     */
    public List<InstancePoolPlacementConfigurationSecondaryVnicSubnet> secondaryVnicSubnets() {
        return this.secondaryVnicSubnets == null ? List.of() : this.secondaryVnicSubnets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstancePoolPlacementConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private @Nullable List<String> faultDomains;
        private @Nullable String primarySubnetId;
        private @Nullable InstancePoolPlacementConfigurationPrimaryVnicSubnets primaryVnicSubnets;
        private @Nullable List<InstancePoolPlacementConfigurationSecondaryVnicSubnet> secondaryVnicSubnets;
        public Builder() {}
        public Builder(InstancePoolPlacementConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.faultDomains = defaults.faultDomains;
    	      this.primarySubnetId = defaults.primarySubnetId;
    	      this.primaryVnicSubnets = defaults.primaryVnicSubnets;
    	      this.secondaryVnicSubnets = defaults.secondaryVnicSubnets;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("InstancePoolPlacementConfiguration", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomains(@Nullable List<String> faultDomains) {

            this.faultDomains = faultDomains;
            return this;
        }
        public Builder faultDomains(String... faultDomains) {
            return faultDomains(List.of(faultDomains));
        }
        @CustomType.Setter
        public Builder primarySubnetId(@Nullable String primarySubnetId) {

            this.primarySubnetId = primarySubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder primaryVnicSubnets(@Nullable InstancePoolPlacementConfigurationPrimaryVnicSubnets primaryVnicSubnets) {

            this.primaryVnicSubnets = primaryVnicSubnets;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryVnicSubnets(@Nullable List<InstancePoolPlacementConfigurationSecondaryVnicSubnet> secondaryVnicSubnets) {

            this.secondaryVnicSubnets = secondaryVnicSubnets;
            return this;
        }
        public Builder secondaryVnicSubnets(InstancePoolPlacementConfigurationSecondaryVnicSubnet... secondaryVnicSubnets) {
            return secondaryVnicSubnets(List.of(secondaryVnicSubnets));
        }
        public InstancePoolPlacementConfiguration build() {
            final var _resultValue = new InstancePoolPlacementConfiguration();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.faultDomains = faultDomains;
            _resultValue.primarySubnetId = primarySubnetId;
            _resultValue.primaryVnicSubnets = primaryVnicSubnets;
            _resultValue.secondaryVnicSubnets = secondaryVnicSubnets;
            return _resultValue;
        }
    }
}
