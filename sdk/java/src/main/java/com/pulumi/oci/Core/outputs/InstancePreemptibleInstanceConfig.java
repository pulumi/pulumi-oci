// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Core.outputs.InstancePreemptibleInstanceConfigPreemptionAction;
import java.util.Objects;

@CustomType
public final class InstancePreemptibleInstanceConfig {
    /**
     * @return The action to run when the preemptible instance is interrupted for eviction.
     * 
     */
    private InstancePreemptibleInstanceConfigPreemptionAction preemptionAction;

    private InstancePreemptibleInstanceConfig() {}
    /**
     * @return The action to run when the preemptible instance is interrupted for eviction.
     * 
     */
    public InstancePreemptibleInstanceConfigPreemptionAction preemptionAction() {
        return this.preemptionAction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstancePreemptibleInstanceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private InstancePreemptibleInstanceConfigPreemptionAction preemptionAction;
        public Builder() {}
        public Builder(InstancePreemptibleInstanceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preemptionAction = defaults.preemptionAction;
        }

        @CustomType.Setter
        public Builder preemptionAction(InstancePreemptibleInstanceConfigPreemptionAction preemptionAction) {
            if (preemptionAction == null) {
              throw new MissingRequiredPropertyException("InstancePreemptibleInstanceConfig", "preemptionAction");
            }
            this.preemptionAction = preemptionAction;
            return this;
        }
        public InstancePreemptibleInstanceConfig build() {
            final var _resultValue = new InstancePreemptibleInstanceConfig();
            _resultValue.preemptionAction = preemptionAction;
            return _resultValue;
        }
    }
}
