// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataCatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataCatalog.outputs.GetCatalogPrivateEndpointLock;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCatalogPrivateEndpointResult {
    /**
     * @return The list of catalogs using the private reverse connection endpoint
     * 
     */
    private List<String> attachedCatalogs;
    private String catalogPrivateEndpointId;
    /**
     * @return Identifier of the compartment this private endpoint belongs to
     * 
     */
    private String compartmentId;
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Mutable name of the Private Reverse Connection Endpoint
     * 
     */
    private String displayName;
    /**
     * @return List of DNS zones to be used by the data assets to be harvested. Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
     * 
     */
    private List<String> dnsZones;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Unique identifier that is immutable
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in &#39;Failed&#39; state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetCatalogPrivateEndpointLock> locks;
    /**
     * @return The current state of the private endpoint resource.
     * 
     */
    private String state;
    /**
     * @return Subnet Identifier
     * 
     */
    private String subnetId;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the private endpoint was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time the private endpoint was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetCatalogPrivateEndpointResult() {}
    /**
     * @return The list of catalogs using the private reverse connection endpoint
     * 
     */
    public List<String> attachedCatalogs() {
        return this.attachedCatalogs;
    }
    public String catalogPrivateEndpointId() {
        return this.catalogPrivateEndpointId;
    }
    /**
     * @return Identifier of the compartment this private endpoint belongs to
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Mutable name of the Private Reverse Connection Endpoint
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return List of DNS zones to be used by the data assets to be harvested. Example: custpvtsubnet.oraclevcn.com for data asset: db.custpvtsubnet.oraclevcn.com
     * 
     */
    public List<String> dnsZones() {
        return this.dnsZones;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in &#39;Failed&#39; state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetCatalogPrivateEndpointLock> locks() {
        return this.locks;
    }
    /**
     * @return The current state of the private endpoint resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Subnet Identifier
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the private endpoint was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the private endpoint was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogPrivateEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> attachedCatalogs;
        private String catalogPrivateEndpointId;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private List<String> dnsZones;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<GetCatalogPrivateEndpointLock> locks;
        private String state;
        private String subnetId;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetCatalogPrivateEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedCatalogs = defaults.attachedCatalogs;
    	      this.catalogPrivateEndpointId = defaults.catalogPrivateEndpointId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.dnsZones = defaults.dnsZones;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.locks = defaults.locks;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder attachedCatalogs(List<String> attachedCatalogs) {
            if (attachedCatalogs == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "attachedCatalogs");
            }
            this.attachedCatalogs = attachedCatalogs;
            return this;
        }
        public Builder attachedCatalogs(String... attachedCatalogs) {
            return attachedCatalogs(List.of(attachedCatalogs));
        }
        @CustomType.Setter
        public Builder catalogPrivateEndpointId(String catalogPrivateEndpointId) {
            if (catalogPrivateEndpointId == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "catalogPrivateEndpointId");
            }
            this.catalogPrivateEndpointId = catalogPrivateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder dnsZones(List<String> dnsZones) {
            if (dnsZones == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "dnsZones");
            }
            this.dnsZones = dnsZones;
            return this;
        }
        public Builder dnsZones(String... dnsZones) {
            return dnsZones(List.of(dnsZones));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetCatalogPrivateEndpointLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetCatalogPrivateEndpointLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetCatalogPrivateEndpointResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetCatalogPrivateEndpointResult build() {
            final var _resultValue = new GetCatalogPrivateEndpointResult();
            _resultValue.attachedCatalogs = attachedCatalogs;
            _resultValue.catalogPrivateEndpointId = catalogPrivateEndpointId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.dnsZones = dnsZones;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.locks = locks;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
