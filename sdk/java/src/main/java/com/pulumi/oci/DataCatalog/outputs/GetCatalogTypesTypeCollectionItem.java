// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataCatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCatalogTypesTypeCollectionItem {
    /**
     * @return Unique catalog identifier.
     * 
     */
    private @Nullable String catalogId;
    /**
     * @return Detailed description of the type.
     * 
     */
    private @Nullable String description;
    /**
     * @return Unique type key that is immutable.
     * 
     */
    private @Nullable String key;
    /**
     * @return Immutable resource name.
     * 
     */
    private @Nullable String name;
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    private @Nullable String state;
    /**
     * @return Indicates the category of this type . For example, data assets or connections.
     * 
     */
    private @Nullable String typeCategory;
    /**
     * @return URI to the type instance in the API.
     * 
     */
    private @Nullable String uri;

    private GetCatalogTypesTypeCollectionItem() {}
    /**
     * @return Unique catalog identifier.
     * 
     */
    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    /**
     * @return Detailed description of the type.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Unique type key that is immutable.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Immutable resource name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Indicates the category of this type . For example, data assets or connections.
     * 
     */
    public Optional<String> typeCategory() {
        return Optional.ofNullable(this.typeCategory);
    }
    /**
     * @return URI to the type instance in the API.
     * 
     */
    public Optional<String> uri() {
        return Optional.ofNullable(this.uri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogTypesTypeCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String catalogId;
        private @Nullable String description;
        private @Nullable String key;
        private @Nullable String name;
        private @Nullable String state;
        private @Nullable String typeCategory;
        private @Nullable String uri;
        public Builder() {}
        public Builder(GetCatalogTypesTypeCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.description = defaults.description;
    	      this.key = defaults.key;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.typeCategory = defaults.typeCategory;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder catalogId(@Nullable String catalogId) {
            this.catalogId = catalogId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder typeCategory(@Nullable String typeCategory) {
            this.typeCategory = typeCategory;
            return this;
        }
        @CustomType.Setter
        public Builder uri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }
        public GetCatalogTypesTypeCollectionItem build() {
            final var o = new GetCatalogTypesTypeCollectionItem();
            o.catalogId = catalogId;
            o.description = description;
            o.key = key;
            o.name = name;
            o.state = state;
            o.typeCategory = typeCategory;
            o.uri = uri;
            return o;
        }
    }
}
