// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataConnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataConnectivity.outputs.GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition;
import com.pulumi.oci.DataConnectivity.outputs.GetRegistryDataAssetNativeTypeSystemTypeParentRef;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRegistryDataAssetNativeTypeSystemType {
    /**
     * @return The configuration details of a configurable object. This contains one or more config param definitions.
     * 
     */
    private List<GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition> configDefinitions;
    /**
     * @return A user-defined description for the object.
     * 
     */
    private String description;
    /**
     * @return The data type.
     * 
     */
    private String dtType;
    /**
     * @return The identifying key for the object.
     * 
     */
    private String key;
    /**
     * @return The property which differentiates the subtypes.
     * 
     */
    private String modelType;
    /**
     * @return The model version of an object.
     * 
     */
    private String modelVersion;
    /**
     * @return Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return A reference to the parent object.
     * 
     */
    private List<GetRegistryDataAssetNativeTypeSystemTypeParentRef> parentReves;
    /**
     * @return The data type system name.
     * 
     */
    private String typeSystemName;

    private GetRegistryDataAssetNativeTypeSystemType() {}
    /**
     * @return The configuration details of a configurable object. This contains one or more config param definitions.
     * 
     */
    public List<GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition> configDefinitions() {
        return this.configDefinitions;
    }
    /**
     * @return A user-defined description for the object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The data type.
     * 
     */
    public String dtType() {
        return this.dtType;
    }
    /**
     * @return The identifying key for the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The property which differentiates the subtypes.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return The model version of an object.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return A reference to the parent object.
     * 
     */
    public List<GetRegistryDataAssetNativeTypeSystemTypeParentRef> parentReves() {
        return this.parentReves;
    }
    /**
     * @return The data type system name.
     * 
     */
    public String typeSystemName() {
        return this.typeSystemName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryDataAssetNativeTypeSystemType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition> configDefinitions;
        private String description;
        private String dtType;
        private String key;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private List<GetRegistryDataAssetNativeTypeSystemTypeParentRef> parentReves;
        private String typeSystemName;
        public Builder() {}
        public Builder(GetRegistryDataAssetNativeTypeSystemType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configDefinitions = defaults.configDefinitions;
    	      this.description = defaults.description;
    	      this.dtType = defaults.dtType;
    	      this.key = defaults.key;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.parentReves = defaults.parentReves;
    	      this.typeSystemName = defaults.typeSystemName;
        }

        @CustomType.Setter
        public Builder configDefinitions(List<GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition> configDefinitions) {
            this.configDefinitions = Objects.requireNonNull(configDefinitions);
            return this;
        }
        public Builder configDefinitions(GetRegistryDataAssetNativeTypeSystemTypeConfigDefinition... configDefinitions) {
            return configDefinitions(List.of(configDefinitions));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder dtType(String dtType) {
            this.dtType = Objects.requireNonNull(dtType);
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            this.modelType = Objects.requireNonNull(modelType);
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            this.modelVersion = Objects.requireNonNull(modelVersion);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            this.objectStatus = Objects.requireNonNull(objectStatus);
            return this;
        }
        @CustomType.Setter
        public Builder parentReves(List<GetRegistryDataAssetNativeTypeSystemTypeParentRef> parentReves) {
            this.parentReves = Objects.requireNonNull(parentReves);
            return this;
        }
        public Builder parentReves(GetRegistryDataAssetNativeTypeSystemTypeParentRef... parentReves) {
            return parentReves(List.of(parentReves));
        }
        @CustomType.Setter
        public Builder typeSystemName(String typeSystemName) {
            this.typeSystemName = Objects.requireNonNull(typeSystemName);
            return this;
        }
        public GetRegistryDataAssetNativeTypeSystemType build() {
            final var o = new GetRegistryDataAssetNativeTypeSystemType();
            o.configDefinitions = configDefinitions;
            o.description = description;
            o.dtType = dtType;
            o.key = key;
            o.modelType = modelType;
            o.modelVersion = modelVersion;
            o.name = name;
            o.objectStatus = objectStatus;
            o.parentReves = parentReves;
            o.typeSystemName = typeSystemName;
            return o;
        }
    }
}
