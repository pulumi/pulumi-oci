// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataConnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataConnectivity.outputs.GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinitionParentRef;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition {
    /**
     * @return The parameter configuration details.
     * 
     */
    private Map<String,Object> configParameterDefinitions;
    /**
     * @return Specifies whether the configuration is contained.
     * 
     */
    private Boolean isContained;
    /**
     * @return The identifying key for the object.
     * 
     */
    private String key;
    /**
     * @return The property which differentiates the subtypes.
     * 
     */
    private String modelType;
    /**
     * @return The model version of an object.
     * 
     */
    private String modelVersion;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return A reference to the parent object.
     * 
     */
    private GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinitionParentRef parentRef;

    private GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition() {}
    /**
     * @return The parameter configuration details.
     * 
     */
    public Map<String,Object> configParameterDefinitions() {
        return this.configParameterDefinitions;
    }
    /**
     * @return Specifies whether the configuration is contained.
     * 
     */
    public Boolean isContained() {
        return this.isContained;
    }
    /**
     * @return The identifying key for the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The property which differentiates the subtypes.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return The model version of an object.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return A reference to the parent object.
     * 
     */
    public GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinitionParentRef parentRef() {
        return this.parentRef;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> configParameterDefinitions;
        private Boolean isContained;
        private String key;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinitionParentRef parentRef;
        public Builder() {}
        public Builder(GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configParameterDefinitions = defaults.configParameterDefinitions;
    	      this.isContained = defaults.isContained;
    	      this.key = defaults.key;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.parentRef = defaults.parentRef;
        }

        @CustomType.Setter
        public Builder configParameterDefinitions(Map<String,Object> configParameterDefinitions) {
            this.configParameterDefinitions = Objects.requireNonNull(configParameterDefinitions);
            return this;
        }
        @CustomType.Setter
        public Builder isContained(Boolean isContained) {
            this.isContained = Objects.requireNonNull(isContained);
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            this.modelType = Objects.requireNonNull(modelType);
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            this.modelVersion = Objects.requireNonNull(modelVersion);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            this.objectStatus = Objects.requireNonNull(objectStatus);
            return this;
        }
        @CustomType.Setter
        public Builder parentRef(GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinitionParentRef parentRef) {
            this.parentRef = Objects.requireNonNull(parentRef);
            return this;
        }
        public GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition build() {
            final var o = new GetRegistryDataAssetsDataAssetSummaryCollectionItemNativeTypeSystemTypeConfigDefinition();
            o.configParameterDefinitions = configParameterDefinitions;
            o.isContained = isContained;
            o.key = key;
            o.modelType = modelType;
            o.modelVersion = modelVersion;
            o.name = name;
            o.objectStatus = objectStatus;
            o.parentRef = parentRef;
            return o;
        }
    }
}
