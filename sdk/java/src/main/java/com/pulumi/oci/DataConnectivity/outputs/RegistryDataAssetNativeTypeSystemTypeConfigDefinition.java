// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataConnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataConnectivity.outputs.RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegistryDataAssetNativeTypeSystemTypeConfigDefinition {
    /**
     * @return (Updatable) The parameter configuration details.
     * 
     */
    private @Nullable Map<String,Object> configParameterDefinitions;
    /**
     * @return (Updatable) Specifies whether the configuration is contained.
     * 
     */
    private @Nullable Boolean isContained;
    /**
     * @return (Updatable) The identifying key for the object.
     * 
     */
    private @Nullable String key;
    /**
     * @return (Updatable) The property which differentiates the subtypes.
     * 
     */
    private @Nullable String modelType;
    /**
     * @return (Updatable) The model version of an object.
     * 
     */
    private @Nullable String modelVersion;
    /**
     * @return (Updatable) Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private @Nullable String name;
    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private @Nullable Integer objectStatus;
    /**
     * @return (Updatable) A reference to the parent object.
     * 
     */
    private @Nullable RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef parentRef;

    private RegistryDataAssetNativeTypeSystemTypeConfigDefinition() {}
    /**
     * @return (Updatable) The parameter configuration details.
     * 
     */
    public Map<String,Object> configParameterDefinitions() {
        return this.configParameterDefinitions == null ? Map.of() : this.configParameterDefinitions;
    }
    /**
     * @return (Updatable) Specifies whether the configuration is contained.
     * 
     */
    public Optional<Boolean> isContained() {
        return Optional.ofNullable(this.isContained);
    }
    /**
     * @return (Updatable) The identifying key for the object.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return (Updatable) The property which differentiates the subtypes.
     * 
     */
    public Optional<String> modelType() {
        return Optional.ofNullable(this.modelType);
    }
    /**
     * @return (Updatable) The model version of an object.
     * 
     */
    public Optional<String> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }
    /**
     * @return (Updatable) Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Integer> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }
    /**
     * @return (Updatable) A reference to the parent object.
     * 
     */
    public Optional<RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef> parentRef() {
        return Optional.ofNullable(this.parentRef);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryDataAssetNativeTypeSystemTypeConfigDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> configParameterDefinitions;
        private @Nullable Boolean isContained;
        private @Nullable String key;
        private @Nullable String modelType;
        private @Nullable String modelVersion;
        private @Nullable String name;
        private @Nullable Integer objectStatus;
        private @Nullable RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef parentRef;
        public Builder() {}
        public Builder(RegistryDataAssetNativeTypeSystemTypeConfigDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configParameterDefinitions = defaults.configParameterDefinitions;
    	      this.isContained = defaults.isContained;
    	      this.key = defaults.key;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.parentRef = defaults.parentRef;
        }

        @CustomType.Setter
        public Builder configParameterDefinitions(@Nullable Map<String,Object> configParameterDefinitions) {
            this.configParameterDefinitions = configParameterDefinitions;
            return this;
        }
        @CustomType.Setter
        public Builder isContained(@Nullable Boolean isContained) {
            this.isContained = isContained;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(@Nullable String modelType) {
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(@Nullable String modelVersion) {
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(@Nullable Integer objectStatus) {
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder parentRef(@Nullable RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRef parentRef) {
            this.parentRef = parentRef;
            return this;
        }
        public RegistryDataAssetNativeTypeSystemTypeConfigDefinition build() {
            final var o = new RegistryDataAssetNativeTypeSystemTypeConfigDefinition();
            o.configParameterDefinitions = configParameterDefinitions;
            o.isContained = isContained;
            o.key = key;
            o.modelType = modelType;
            o.modelVersion = modelVersion;
            o.name = name;
            o.objectStatus = objectStatus;
            o.parentRef = parentRef;
            return o;
        }
    }
}
