// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataFlow.inputs.SqlEndpointDriverShapeConfigArgs;
import com.pulumi.oci.DataFlow.inputs.SqlEndpointExecutorShapeConfigArgs;
import com.pulumi.oci.DataFlow.inputs.SqlEndpointNetworkConfigurationArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlEndpointArgs Empty = new SqlEndpointArgs();

    /**
     * (Updatable) The identifier of the compartment used with the SQL Endpoint.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The identifier of the compartment used with the SQL Endpoint.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The description of CreateSQLEndpointDetails.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of CreateSQLEndpointDetails.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The SQL Endpoint name, which can be changed.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The SQL Endpoint name, which can be changed.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The shape of the SQL Endpoint driver instance.
     * 
     */
    @Import(name="driverShape", required=true)
    private Output<String> driverShape;

    /**
     * @return The shape of the SQL Endpoint driver instance.
     * 
     */
    public Output<String> driverShape() {
        return this.driverShape;
    }

    /**
     * This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    @Import(name="driverShapeConfig")
    private @Nullable Output<SqlEndpointDriverShapeConfigArgs> driverShapeConfig;

    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    public Optional<Output<SqlEndpointDriverShapeConfigArgs>> driverShapeConfig() {
        return Optional.ofNullable(this.driverShapeConfig);
    }

    /**
     * The shape of the SQL Endpoint worker instance.
     * 
     */
    @Import(name="executorShape", required=true)
    private Output<String> executorShape;

    /**
     * @return The shape of the SQL Endpoint worker instance.
     * 
     */
    public Output<String> executorShape() {
        return this.executorShape;
    }

    /**
     * This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    @Import(name="executorShapeConfig")
    private @Nullable Output<SqlEndpointExecutorShapeConfigArgs> executorShapeConfig;

    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    public Optional<Output<SqlEndpointExecutorShapeConfigArgs>> executorShapeConfig() {
        return Optional.ofNullable(this.executorShapeConfig);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The maximum number of executors.
     * 
     */
    @Import(name="maxExecutorCount", required=true)
    private Output<Integer> maxExecutorCount;

    /**
     * @return The maximum number of executors.
     * 
     */
    public Output<Integer> maxExecutorCount() {
        return this.maxExecutorCount;
    }

    /**
     * Metastore OCID
     * 
     */
    @Import(name="metastoreId", required=true)
    private Output<String> metastoreId;

    /**
     * @return Metastore OCID
     * 
     */
    public Output<String> metastoreId() {
        return this.metastoreId;
    }

    /**
     * The minimum number of executors.
     * 
     */
    @Import(name="minExecutorCount", required=true)
    private Output<Integer> minExecutorCount;

    /**
     * @return The minimum number of executors.
     * 
     */
    public Output<Integer> minExecutorCount() {
        return this.minExecutorCount;
    }

    /**
     * The network configuration of a SQL Endpoint.
     * 
     */
    @Import(name="networkConfiguration", required=true)
    private Output<SqlEndpointNetworkConfigurationArgs> networkConfiguration;

    /**
     * @return The network configuration of a SQL Endpoint.
     * 
     */
    public Output<SqlEndpointNetworkConfigurationArgs> networkConfiguration() {
        return this.networkConfiguration;
    }

    /**
     * The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    @Import(name="sparkAdvancedConfigurations")
    private @Nullable Output<Map<String,Object>> sparkAdvancedConfigurations;

    /**
     * @return The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    public Optional<Output<Map<String,Object>>> sparkAdvancedConfigurations() {
        return Optional.ofNullable(this.sparkAdvancedConfigurations);
    }

    /**
     * The version of the SQL Endpoint.
     * 
     */
    @Import(name="sqlEndpointVersion", required=true)
    private Output<String> sqlEndpointVersion;

    /**
     * @return The version of the SQL Endpoint.
     * 
     */
    public Output<String> sqlEndpointVersion() {
        return this.sqlEndpointVersion;
    }

    private SqlEndpointArgs() {}

    private SqlEndpointArgs(SqlEndpointArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.driverShape = $.driverShape;
        this.driverShapeConfig = $.driverShapeConfig;
        this.executorShape = $.executorShape;
        this.executorShapeConfig = $.executorShapeConfig;
        this.freeformTags = $.freeformTags;
        this.maxExecutorCount = $.maxExecutorCount;
        this.metastoreId = $.metastoreId;
        this.minExecutorCount = $.minExecutorCount;
        this.networkConfiguration = $.networkConfiguration;
        this.sparkAdvancedConfigurations = $.sparkAdvancedConfigurations;
        this.sqlEndpointVersion = $.sqlEndpointVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlEndpointArgs $;

        public Builder() {
            $ = new SqlEndpointArgs();
        }

        public Builder(SqlEndpointArgs defaults) {
            $ = new SqlEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The identifier of the compartment used with the SQL Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The identifier of the compartment used with the SQL Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description The description of CreateSQLEndpointDetails.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of CreateSQLEndpointDetails.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The SQL Endpoint name, which can be changed.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The SQL Endpoint name, which can be changed.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param driverShape The shape of the SQL Endpoint driver instance.
         * 
         * @return builder
         * 
         */
        public Builder driverShape(Output<String> driverShape) {
            $.driverShape = driverShape;
            return this;
        }

        /**
         * @param driverShape The shape of the SQL Endpoint driver instance.
         * 
         * @return builder
         * 
         */
        public Builder driverShape(String driverShape) {
            return driverShape(Output.of(driverShape));
        }

        /**
         * @param driverShapeConfig This is used to configure the shape of the driver or executor if a flexible shape is used.
         * 
         * @return builder
         * 
         */
        public Builder driverShapeConfig(@Nullable Output<SqlEndpointDriverShapeConfigArgs> driverShapeConfig) {
            $.driverShapeConfig = driverShapeConfig;
            return this;
        }

        /**
         * @param driverShapeConfig This is used to configure the shape of the driver or executor if a flexible shape is used.
         * 
         * @return builder
         * 
         */
        public Builder driverShapeConfig(SqlEndpointDriverShapeConfigArgs driverShapeConfig) {
            return driverShapeConfig(Output.of(driverShapeConfig));
        }

        /**
         * @param executorShape The shape of the SQL Endpoint worker instance.
         * 
         * @return builder
         * 
         */
        public Builder executorShape(Output<String> executorShape) {
            $.executorShape = executorShape;
            return this;
        }

        /**
         * @param executorShape The shape of the SQL Endpoint worker instance.
         * 
         * @return builder
         * 
         */
        public Builder executorShape(String executorShape) {
            return executorShape(Output.of(executorShape));
        }

        /**
         * @param executorShapeConfig This is used to configure the shape of the driver or executor if a flexible shape is used.
         * 
         * @return builder
         * 
         */
        public Builder executorShapeConfig(@Nullable Output<SqlEndpointExecutorShapeConfigArgs> executorShapeConfig) {
            $.executorShapeConfig = executorShapeConfig;
            return this;
        }

        /**
         * @param executorShapeConfig This is used to configure the shape of the driver or executor if a flexible shape is used.
         * 
         * @return builder
         * 
         */
        public Builder executorShapeConfig(SqlEndpointExecutorShapeConfigArgs executorShapeConfig) {
            return executorShapeConfig(Output.of(executorShapeConfig));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param maxExecutorCount The maximum number of executors.
         * 
         * @return builder
         * 
         */
        public Builder maxExecutorCount(Output<Integer> maxExecutorCount) {
            $.maxExecutorCount = maxExecutorCount;
            return this;
        }

        /**
         * @param maxExecutorCount The maximum number of executors.
         * 
         * @return builder
         * 
         */
        public Builder maxExecutorCount(Integer maxExecutorCount) {
            return maxExecutorCount(Output.of(maxExecutorCount));
        }

        /**
         * @param metastoreId Metastore OCID
         * 
         * @return builder
         * 
         */
        public Builder metastoreId(Output<String> metastoreId) {
            $.metastoreId = metastoreId;
            return this;
        }

        /**
         * @param metastoreId Metastore OCID
         * 
         * @return builder
         * 
         */
        public Builder metastoreId(String metastoreId) {
            return metastoreId(Output.of(metastoreId));
        }

        /**
         * @param minExecutorCount The minimum number of executors.
         * 
         * @return builder
         * 
         */
        public Builder minExecutorCount(Output<Integer> minExecutorCount) {
            $.minExecutorCount = minExecutorCount;
            return this;
        }

        /**
         * @param minExecutorCount The minimum number of executors.
         * 
         * @return builder
         * 
         */
        public Builder minExecutorCount(Integer minExecutorCount) {
            return minExecutorCount(Output.of(minExecutorCount));
        }

        /**
         * @param networkConfiguration The network configuration of a SQL Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(Output<SqlEndpointNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        /**
         * @param networkConfiguration The network configuration of a SQL Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(SqlEndpointNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        /**
         * @param sparkAdvancedConfigurations The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
         * 
         * @return builder
         * 
         */
        public Builder sparkAdvancedConfigurations(@Nullable Output<Map<String,Object>> sparkAdvancedConfigurations) {
            $.sparkAdvancedConfigurations = sparkAdvancedConfigurations;
            return this;
        }

        /**
         * @param sparkAdvancedConfigurations The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
         * 
         * @return builder
         * 
         */
        public Builder sparkAdvancedConfigurations(Map<String,Object> sparkAdvancedConfigurations) {
            return sparkAdvancedConfigurations(Output.of(sparkAdvancedConfigurations));
        }

        /**
         * @param sqlEndpointVersion The version of the SQL Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder sqlEndpointVersion(Output<String> sqlEndpointVersion) {
            $.sqlEndpointVersion = sqlEndpointVersion;
            return this;
        }

        /**
         * @param sqlEndpointVersion The version of the SQL Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder sqlEndpointVersion(String sqlEndpointVersion) {
            return sqlEndpointVersion(Output.of(sqlEndpointVersion));
        }

        public SqlEndpointArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "displayName");
            }
            if ($.driverShape == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "driverShape");
            }
            if ($.executorShape == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "executorShape");
            }
            if ($.maxExecutorCount == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "maxExecutorCount");
            }
            if ($.metastoreId == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "metastoreId");
            }
            if ($.minExecutorCount == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "minExecutorCount");
            }
            if ($.networkConfiguration == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "networkConfiguration");
            }
            if ($.sqlEndpointVersion == null) {
                throw new MissingRequiredPropertyException("SqlEndpointArgs", "sqlEndpointVersion");
            }
            return $;
        }
    }

}
