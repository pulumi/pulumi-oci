// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataFlow.inputs.RunStatementOutputArgs;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunStatementState extends com.pulumi.resources.ResourceArgs {

    public static final RunStatementState Empty = new RunStatementState();

    /**
     * The statement code to execute. Example: `println(sc.version)`
     * 
     */
    @Import(name="code")
    private @Nullable Output<String> code;

    /**
     * @return The statement code to execute. Example: `println(sc.version)`
     * 
     */
    public Optional<Output<String>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * The execution output of a statement.
     * 
     */
    @Import(name="outputs")
    private @Nullable Output<List<RunStatementOutputArgs>> outputs;

    /**
     * @return The execution output of a statement.
     * 
     */
    public Optional<Output<List<RunStatementOutputArgs>>> outputs() {
        return Optional.ofNullable(this.outputs);
    }

    /**
     * The execution progress.
     * 
     */
    @Import(name="progress")
    private @Nullable Output<Double> progress;

    /**
     * @return The execution progress.
     * 
     */
    public Optional<Output<Double>> progress() {
        return Optional.ofNullable(this.progress);
    }

    /**
     * The unique ID for the run
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="runId")
    private @Nullable Output<String> runId;

    /**
     * @return The unique ID for the run
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> runId() {
        return Optional.ofNullable(this.runId);
    }

    /**
     * The current state of this statement.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of this statement.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time a statement execution was completed, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2022-05-31T21:10:29.600Z`
     * 
     */
    @Import(name="timeCompleted")
    private @Nullable Output<String> timeCompleted;

    /**
     * @return The date and time a statement execution was completed, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2022-05-31T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCompleted() {
        return Optional.ofNullable(this.timeCompleted);
    }

    /**
     * The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    private RunStatementState() {}

    private RunStatementState(RunStatementState $) {
        this.code = $.code;
        this.outputs = $.outputs;
        this.progress = $.progress;
        this.runId = $.runId;
        this.state = $.state;
        this.timeCompleted = $.timeCompleted;
        this.timeCreated = $.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunStatementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunStatementState $;

        public Builder() {
            $ = new RunStatementState();
        }

        public Builder(RunStatementState defaults) {
            $ = new RunStatementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param code The statement code to execute. Example: `println(sc.version)`
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable Output<String> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code The statement code to execute. Example: `println(sc.version)`
         * 
         * @return builder
         * 
         */
        public Builder code(String code) {
            return code(Output.of(code));
        }

        /**
         * @param outputs The execution output of a statement.
         * 
         * @return builder
         * 
         */
        public Builder outputs(@Nullable Output<List<RunStatementOutputArgs>> outputs) {
            $.outputs = outputs;
            return this;
        }

        /**
         * @param outputs The execution output of a statement.
         * 
         * @return builder
         * 
         */
        public Builder outputs(List<RunStatementOutputArgs> outputs) {
            return outputs(Output.of(outputs));
        }

        /**
         * @param outputs The execution output of a statement.
         * 
         * @return builder
         * 
         */
        public Builder outputs(RunStatementOutputArgs... outputs) {
            return outputs(List.of(outputs));
        }

        /**
         * @param progress The execution progress.
         * 
         * @return builder
         * 
         */
        public Builder progress(@Nullable Output<Double> progress) {
            $.progress = progress;
            return this;
        }

        /**
         * @param progress The execution progress.
         * 
         * @return builder
         * 
         */
        public Builder progress(Double progress) {
            return progress(Output.of(progress));
        }

        /**
         * @param runId The unique ID for the run
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder runId(@Nullable Output<String> runId) {
            $.runId = runId;
            return this;
        }

        /**
         * @param runId The unique ID for the run
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder runId(String runId) {
            return runId(Output.of(runId));
        }

        /**
         * @param state The current state of this statement.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of this statement.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCompleted The date and time a statement execution was completed, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2022-05-31T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCompleted(@Nullable Output<String> timeCompleted) {
            $.timeCompleted = timeCompleted;
            return this;
        }

        /**
         * @param timeCompleted The date and time a statement execution was completed, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2022-05-31T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCompleted(String timeCompleted) {
            return timeCompleted(Output.of(timeCompleted));
        }

        /**
         * @param timeCreated The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time a application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        public RunStatementState build() {
            return $;
        }
    }

}
