// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataFlow.outputs.GetInvokeRunsRunApplicationLogConfig;
import com.pulumi.oci.DataFlow.outputs.GetInvokeRunsRunDriverShapeConfig;
import com.pulumi.oci.DataFlow.outputs.GetInvokeRunsRunExecutorShapeConfig;
import com.pulumi.oci.DataFlow.outputs.GetInvokeRunsRunParameter;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInvokeRunsRun {
    /**
     * @return The ID of the application.
     * 
     */
    private @Nullable String applicationId;
    /**
     * @return Logging details of Application logs for Data Flow Run.
     * 
     */
    private @Nullable List<GetInvokeRunsRunApplicationLogConfig> applicationLogConfigs;
    /**
     * @return A comma separated list of one or more archive files as Oracle Cloud Infrastructure URIs. For example, ``oci://path/to/a.zip,oci://path/to/b.zip``. An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution of a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    private @Nullable String archiveUri;
    /**
     * @return The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ &#34;--input&#34;, &#34;${input_file}&#34;, &#34;--name&#34;, &#34;John Doe&#34; ]` If &#34;input_file&#34; has a value of &#34;mydata.xml&#34;, then the value above will be translated to `--input mydata.xml --name &#34;John Doe&#34;`
     * 
     */
    private @Nullable List<String> arguments;
    private @Nullable Boolean asynchronous;
    /**
     * @return The class for the application.
     * 
     */
    private @Nullable String className;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    private @Nullable Map<String,Object> configuration;
    /**
     * @return The data read by the run in bytes.
     * 
     */
    private @Nullable String dataReadInBytes;
    /**
     * @return The data written by the run in bytes.
     * 
     */
    private @Nullable String dataWrittenInBytes;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The query parameter for the Spark application name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The VM shape for the driver. Sets the driver cores and memory.
     * 
     */
    private @Nullable String driverShape;
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    private @Nullable List<GetInvokeRunsRunDriverShapeConfig> driverShapeConfigs;
    /**
     * @return The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
     * 
     */
    private @Nullable String execute;
    /**
     * @return The VM shape for the executors. Sets the executor cores and memory.
     * 
     */
    private @Nullable String executorShape;
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    private @Nullable List<GetInvokeRunsRunExecutorShapeConfig> executorShapeConfigs;
    /**
     * @return An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    private @Nullable String fileUri;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The ID of a run.
     * 
     */
    private @Nullable String id;
    /**
     * @return The timeout value in minutes used to manage Runs. A Run would be stopped after inactivity for this amount of time period. Note: This parameter is currently only applicable for Runs of type `SESSION`. Default value is 2880 minutes (2 days)
     * 
     */
    private @Nullable String idleTimeoutInMinutes;
    /**
     * @return The Spark language.
     * 
     */
    private @Nullable String language;
    /**
     * @return The detailed messages about the lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    private @Nullable String logsBucketUri;
    /**
     * @return The maximum duration in minutes for which an Application should run. Data Flow Run would be terminated once it reaches this duration from the time it transitions to `IN_PROGRESS` state.
     * 
     */
    private @Nullable String maxDurationInMinutes;
    /**
     * @return The OCID of Oracle Cloud Infrastructure Hive Metastore.
     * 
     */
    private @Nullable String metastoreId;
    /**
     * @return The number of executor VMs requested.
     * 
     */
    private @Nullable Integer numExecutors;
    /**
     * @return Unique Oracle assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.
     * 
     */
    private @Nullable String opcRequestId;
    /**
     * @return The OCID of the user who created the resource.
     * 
     */
    private @Nullable String ownerPrincipalId;
    /**
     * @return The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
     * 
     */
    private @Nullable String ownerUserName;
    /**
     * @return An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: &#34;iterations&#34;, value: &#34;10&#34;}, { name: &#34;input_file&#34;, value: &#34;mydata.xml&#34; }, { name: &#34;variable_x&#34;, value: &#34;${x}&#34;} ]
     * 
     */
    private @Nullable List<GetInvokeRunsRunParameter> parameters;
    /**
     * @return The ID of the pool.
     * 
     */
    private @Nullable String poolId;
    /**
     * @return An array of DNS zone names. Example: `[ &#34;app.examplecorp.com&#34;, &#34;app.examplecorp2.com&#34; ]`
     * 
     */
    private @Nullable List<String> privateEndpointDnsZones;
    /**
     * @return The OCID of a private endpoint.
     * 
     */
    private @Nullable String privateEndpointId;
    /**
     * @return The maximum number of hosts to be accessed through the private endpoint. This value is used to calculate the relevant CIDR block and should be a multiple of 256.  If the value is not a multiple of 256, it is rounded up to the next multiple of 256. For example, 300 is rounded up to 512.
     * 
     */
    private @Nullable Integer privateEndpointMaxHostCount;
    /**
     * @return An array of network security group OCIDs.
     * 
     */
    private @Nullable List<String> privateEndpointNsgIds;
    /**
     * @return The OCID of a subnet.
     * 
     */
    private @Nullable String privateEndpointSubnetId;
    /**
     * @return The duration of the run in milliseconds.
     * 
     */
    private @Nullable String runDurationInMilliseconds;
    /**
     * @return The Spark version utilized to run the application.
     * 
     */
    private @Nullable String sparkVersion;
    /**
     * @return The LifecycleState of the run.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The total number of oCPU requested by the run.
     * 
     */
    private @Nullable Integer totalOcpu;
    /**
     * @return The Spark application processing type.
     * 
     */
    private @Nullable String type;
    /**
     * @return An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    private @Nullable String warehouseBucketUri;

    private GetInvokeRunsRun() {}
    /**
     * @return The ID of the application.
     * 
     */
    public Optional<String> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }
    /**
     * @return Logging details of Application logs for Data Flow Run.
     * 
     */
    public List<GetInvokeRunsRunApplicationLogConfig> applicationLogConfigs() {
        return this.applicationLogConfigs == null ? List.of() : this.applicationLogConfigs;
    }
    /**
     * @return A comma separated list of one or more archive files as Oracle Cloud Infrastructure URIs. For example, ``oci://path/to/a.zip,oci://path/to/b.zip``. An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution of a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    public Optional<String> archiveUri() {
        return Optional.ofNullable(this.archiveUri);
    }
    /**
     * @return The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ &#34;--input&#34;, &#34;${input_file}&#34;, &#34;--name&#34;, &#34;John Doe&#34; ]` If &#34;input_file&#34; has a value of &#34;mydata.xml&#34;, then the value above will be translated to `--input mydata.xml --name &#34;John Doe&#34;`
     * 
     */
    public List<String> arguments() {
        return this.arguments == null ? List.of() : this.arguments;
    }
    public Optional<Boolean> asynchronous() {
        return Optional.ofNullable(this.asynchronous);
    }
    /**
     * @return The class for the application.
     * 
     */
    public Optional<String> className() {
        return Optional.ofNullable(this.className);
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    public Map<String,Object> configuration() {
        return this.configuration == null ? Map.of() : this.configuration;
    }
    /**
     * @return The data read by the run in bytes.
     * 
     */
    public Optional<String> dataReadInBytes() {
        return Optional.ofNullable(this.dataReadInBytes);
    }
    /**
     * @return The data written by the run in bytes.
     * 
     */
    public Optional<String> dataWrittenInBytes() {
        return Optional.ofNullable(this.dataWrittenInBytes);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The query parameter for the Spark application name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The VM shape for the driver. Sets the driver cores and memory.
     * 
     */
    public Optional<String> driverShape() {
        return Optional.ofNullable(this.driverShape);
    }
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    public List<GetInvokeRunsRunDriverShapeConfig> driverShapeConfigs() {
        return this.driverShapeConfigs == null ? List.of() : this.driverShapeConfigs;
    }
    /**
     * @return The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
     * 
     */
    public Optional<String> execute() {
        return Optional.ofNullable(this.execute);
    }
    /**
     * @return The VM shape for the executors. Sets the executor cores and memory.
     * 
     */
    public Optional<String> executorShape() {
        return Optional.ofNullable(this.executorShape);
    }
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    public List<GetInvokeRunsRunExecutorShapeConfig> executorShapeConfigs() {
        return this.executorShapeConfigs == null ? List.of() : this.executorShapeConfigs;
    }
    /**
     * @return An Oracle Cloud Infrastructure URI of the file containing the application to execute. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    public Optional<String> fileUri() {
        return Optional.ofNullable(this.fileUri);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The ID of a run.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The timeout value in minutes used to manage Runs. A Run would be stopped after inactivity for this amount of time period. Note: This parameter is currently only applicable for Runs of type `SESSION`. Default value is 2880 minutes (2 days)
     * 
     */
    public Optional<String> idleTimeoutInMinutes() {
        return Optional.ofNullable(this.idleTimeoutInMinutes);
    }
    /**
     * @return The Spark language.
     * 
     */
    public Optional<String> language() {
        return Optional.ofNullable(this.language);
    }
    /**
     * @return The detailed messages about the lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    public Optional<String> logsBucketUri() {
        return Optional.ofNullable(this.logsBucketUri);
    }
    /**
     * @return The maximum duration in minutes for which an Application should run. Data Flow Run would be terminated once it reaches this duration from the time it transitions to `IN_PROGRESS` state.
     * 
     */
    public Optional<String> maxDurationInMinutes() {
        return Optional.ofNullable(this.maxDurationInMinutes);
    }
    /**
     * @return The OCID of Oracle Cloud Infrastructure Hive Metastore.
     * 
     */
    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }
    /**
     * @return The number of executor VMs requested.
     * 
     */
    public Optional<Integer> numExecutors() {
        return Optional.ofNullable(this.numExecutors);
    }
    /**
     * @return Unique Oracle assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.
     * 
     */
    public Optional<String> opcRequestId() {
        return Optional.ofNullable(this.opcRequestId);
    }
    /**
     * @return The OCID of the user who created the resource.
     * 
     */
    public Optional<String> ownerPrincipalId() {
        return Optional.ofNullable(this.ownerPrincipalId);
    }
    /**
     * @return The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
     * 
     */
    public Optional<String> ownerUserName() {
        return Optional.ofNullable(this.ownerUserName);
    }
    /**
     * @return An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: &#34;iterations&#34;, value: &#34;10&#34;}, { name: &#34;input_file&#34;, value: &#34;mydata.xml&#34; }, { name: &#34;variable_x&#34;, value: &#34;${x}&#34;} ]
     * 
     */
    public List<GetInvokeRunsRunParameter> parameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    /**
     * @return The ID of the pool.
     * 
     */
    public Optional<String> poolId() {
        return Optional.ofNullable(this.poolId);
    }
    /**
     * @return An array of DNS zone names. Example: `[ &#34;app.examplecorp.com&#34;, &#34;app.examplecorp2.com&#34; ]`
     * 
     */
    public List<String> privateEndpointDnsZones() {
        return this.privateEndpointDnsZones == null ? List.of() : this.privateEndpointDnsZones;
    }
    /**
     * @return The OCID of a private endpoint.
     * 
     */
    public Optional<String> privateEndpointId() {
        return Optional.ofNullable(this.privateEndpointId);
    }
    /**
     * @return The maximum number of hosts to be accessed through the private endpoint. This value is used to calculate the relevant CIDR block and should be a multiple of 256.  If the value is not a multiple of 256, it is rounded up to the next multiple of 256. For example, 300 is rounded up to 512.
     * 
     */
    public Optional<Integer> privateEndpointMaxHostCount() {
        return Optional.ofNullable(this.privateEndpointMaxHostCount);
    }
    /**
     * @return An array of network security group OCIDs.
     * 
     */
    public List<String> privateEndpointNsgIds() {
        return this.privateEndpointNsgIds == null ? List.of() : this.privateEndpointNsgIds;
    }
    /**
     * @return The OCID of a subnet.
     * 
     */
    public Optional<String> privateEndpointSubnetId() {
        return Optional.ofNullable(this.privateEndpointSubnetId);
    }
    /**
     * @return The duration of the run in milliseconds.
     * 
     */
    public Optional<String> runDurationInMilliseconds() {
        return Optional.ofNullable(this.runDurationInMilliseconds);
    }
    /**
     * @return The Spark version utilized to run the application.
     * 
     */
    public Optional<String> sparkVersion() {
        return Optional.ofNullable(this.sparkVersion);
    }
    /**
     * @return The LifecycleState of the run.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The total number of oCPU requested by the run.
     * 
     */
    public Optional<Integer> totalOcpu() {
        return Optional.ofNullable(this.totalOcpu);
    }
    /**
     * @return The Spark application processing type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    public Optional<String> warehouseBucketUri() {
        return Optional.ofNullable(this.warehouseBucketUri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvokeRunsRun defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationId;
        private @Nullable List<GetInvokeRunsRunApplicationLogConfig> applicationLogConfigs;
        private @Nullable String archiveUri;
        private @Nullable List<String> arguments;
        private @Nullable Boolean asynchronous;
        private @Nullable String className;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> configuration;
        private @Nullable String dataReadInBytes;
        private @Nullable String dataWrittenInBytes;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable String driverShape;
        private @Nullable List<GetInvokeRunsRunDriverShapeConfig> driverShapeConfigs;
        private @Nullable String execute;
        private @Nullable String executorShape;
        private @Nullable List<GetInvokeRunsRunExecutorShapeConfig> executorShapeConfigs;
        private @Nullable String fileUri;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String idleTimeoutInMinutes;
        private @Nullable String language;
        private @Nullable String lifecycleDetails;
        private @Nullable String logsBucketUri;
        private @Nullable String maxDurationInMinutes;
        private @Nullable String metastoreId;
        private @Nullable Integer numExecutors;
        private @Nullable String opcRequestId;
        private @Nullable String ownerPrincipalId;
        private @Nullable String ownerUserName;
        private @Nullable List<GetInvokeRunsRunParameter> parameters;
        private @Nullable String poolId;
        private @Nullable List<String> privateEndpointDnsZones;
        private @Nullable String privateEndpointId;
        private @Nullable Integer privateEndpointMaxHostCount;
        private @Nullable List<String> privateEndpointNsgIds;
        private @Nullable String privateEndpointSubnetId;
        private @Nullable String runDurationInMilliseconds;
        private @Nullable String sparkVersion;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable Integer totalOcpu;
        private @Nullable String type;
        private @Nullable String warehouseBucketUri;
        public Builder() {}
        public Builder(GetInvokeRunsRun defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.applicationLogConfigs = defaults.applicationLogConfigs;
    	      this.archiveUri = defaults.archiveUri;
    	      this.arguments = defaults.arguments;
    	      this.asynchronous = defaults.asynchronous;
    	      this.className = defaults.className;
    	      this.compartmentId = defaults.compartmentId;
    	      this.configuration = defaults.configuration;
    	      this.dataReadInBytes = defaults.dataReadInBytes;
    	      this.dataWrittenInBytes = defaults.dataWrittenInBytes;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.driverShape = defaults.driverShape;
    	      this.driverShapeConfigs = defaults.driverShapeConfigs;
    	      this.execute = defaults.execute;
    	      this.executorShape = defaults.executorShape;
    	      this.executorShapeConfigs = defaults.executorShapeConfigs;
    	      this.fileUri = defaults.fileUri;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.idleTimeoutInMinutes = defaults.idleTimeoutInMinutes;
    	      this.language = defaults.language;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.logsBucketUri = defaults.logsBucketUri;
    	      this.maxDurationInMinutes = defaults.maxDurationInMinutes;
    	      this.metastoreId = defaults.metastoreId;
    	      this.numExecutors = defaults.numExecutors;
    	      this.opcRequestId = defaults.opcRequestId;
    	      this.ownerPrincipalId = defaults.ownerPrincipalId;
    	      this.ownerUserName = defaults.ownerUserName;
    	      this.parameters = defaults.parameters;
    	      this.poolId = defaults.poolId;
    	      this.privateEndpointDnsZones = defaults.privateEndpointDnsZones;
    	      this.privateEndpointId = defaults.privateEndpointId;
    	      this.privateEndpointMaxHostCount = defaults.privateEndpointMaxHostCount;
    	      this.privateEndpointNsgIds = defaults.privateEndpointNsgIds;
    	      this.privateEndpointSubnetId = defaults.privateEndpointSubnetId;
    	      this.runDurationInMilliseconds = defaults.runDurationInMilliseconds;
    	      this.sparkVersion = defaults.sparkVersion;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalOcpu = defaults.totalOcpu;
    	      this.type = defaults.type;
    	      this.warehouseBucketUri = defaults.warehouseBucketUri;
        }

        @CustomType.Setter
        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationLogConfigs(@Nullable List<GetInvokeRunsRunApplicationLogConfig> applicationLogConfigs) {
            this.applicationLogConfigs = applicationLogConfigs;
            return this;
        }
        public Builder applicationLogConfigs(GetInvokeRunsRunApplicationLogConfig... applicationLogConfigs) {
            return applicationLogConfigs(List.of(applicationLogConfigs));
        }
        @CustomType.Setter
        public Builder archiveUri(@Nullable String archiveUri) {
            this.archiveUri = archiveUri;
            return this;
        }
        @CustomType.Setter
        public Builder arguments(@Nullable List<String> arguments) {
            this.arguments = arguments;
            return this;
        }
        public Builder arguments(String... arguments) {
            return arguments(List.of(arguments));
        }
        @CustomType.Setter
        public Builder asynchronous(@Nullable Boolean asynchronous) {
            this.asynchronous = asynchronous;
            return this;
        }
        @CustomType.Setter
        public Builder className(@Nullable String className) {
            this.className = className;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder configuration(@Nullable Map<String,Object> configuration) {
            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder dataReadInBytes(@Nullable String dataReadInBytes) {
            this.dataReadInBytes = dataReadInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder dataWrittenInBytes(@Nullable String dataWrittenInBytes) {
            this.dataWrittenInBytes = dataWrittenInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder driverShape(@Nullable String driverShape) {
            this.driverShape = driverShape;
            return this;
        }
        @CustomType.Setter
        public Builder driverShapeConfigs(@Nullable List<GetInvokeRunsRunDriverShapeConfig> driverShapeConfigs) {
            this.driverShapeConfigs = driverShapeConfigs;
            return this;
        }
        public Builder driverShapeConfigs(GetInvokeRunsRunDriverShapeConfig... driverShapeConfigs) {
            return driverShapeConfigs(List.of(driverShapeConfigs));
        }
        @CustomType.Setter
        public Builder execute(@Nullable String execute) {
            this.execute = execute;
            return this;
        }
        @CustomType.Setter
        public Builder executorShape(@Nullable String executorShape) {
            this.executorShape = executorShape;
            return this;
        }
        @CustomType.Setter
        public Builder executorShapeConfigs(@Nullable List<GetInvokeRunsRunExecutorShapeConfig> executorShapeConfigs) {
            this.executorShapeConfigs = executorShapeConfigs;
            return this;
        }
        public Builder executorShapeConfigs(GetInvokeRunsRunExecutorShapeConfig... executorShapeConfigs) {
            return executorShapeConfigs(List.of(executorShapeConfigs));
        }
        @CustomType.Setter
        public Builder fileUri(@Nullable String fileUri) {
            this.fileUri = fileUri;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeoutInMinutes(@Nullable String idleTimeoutInMinutes) {
            this.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder language(@Nullable String language) {
            this.language = language;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder logsBucketUri(@Nullable String logsBucketUri) {
            this.logsBucketUri = logsBucketUri;
            return this;
        }
        @CustomType.Setter
        public Builder maxDurationInMinutes(@Nullable String maxDurationInMinutes) {
            this.maxDurationInMinutes = maxDurationInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder metastoreId(@Nullable String metastoreId) {
            this.metastoreId = metastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder numExecutors(@Nullable Integer numExecutors) {
            this.numExecutors = numExecutors;
            return this;
        }
        @CustomType.Setter
        public Builder opcRequestId(@Nullable String opcRequestId) {
            this.opcRequestId = opcRequestId;
            return this;
        }
        @CustomType.Setter
        public Builder ownerPrincipalId(@Nullable String ownerPrincipalId) {
            this.ownerPrincipalId = ownerPrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder ownerUserName(@Nullable String ownerUserName) {
            this.ownerUserName = ownerUserName;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable List<GetInvokeRunsRunParameter> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(GetInvokeRunsRunParameter... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder poolId(@Nullable String poolId) {
            this.poolId = poolId;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointDnsZones(@Nullable List<String> privateEndpointDnsZones) {
            this.privateEndpointDnsZones = privateEndpointDnsZones;
            return this;
        }
        public Builder privateEndpointDnsZones(String... privateEndpointDnsZones) {
            return privateEndpointDnsZones(List.of(privateEndpointDnsZones));
        }
        @CustomType.Setter
        public Builder privateEndpointId(@Nullable String privateEndpointId) {
            this.privateEndpointId = privateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointMaxHostCount(@Nullable Integer privateEndpointMaxHostCount) {
            this.privateEndpointMaxHostCount = privateEndpointMaxHostCount;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointNsgIds(@Nullable List<String> privateEndpointNsgIds) {
            this.privateEndpointNsgIds = privateEndpointNsgIds;
            return this;
        }
        public Builder privateEndpointNsgIds(String... privateEndpointNsgIds) {
            return privateEndpointNsgIds(List.of(privateEndpointNsgIds));
        }
        @CustomType.Setter
        public Builder privateEndpointSubnetId(@Nullable String privateEndpointSubnetId) {
            this.privateEndpointSubnetId = privateEndpointSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder runDurationInMilliseconds(@Nullable String runDurationInMilliseconds) {
            this.runDurationInMilliseconds = runDurationInMilliseconds;
            return this;
        }
        @CustomType.Setter
        public Builder sparkVersion(@Nullable String sparkVersion) {
            this.sparkVersion = sparkVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder totalOcpu(@Nullable Integer totalOcpu) {
            this.totalOcpu = totalOcpu;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder warehouseBucketUri(@Nullable String warehouseBucketUri) {
            this.warehouseBucketUri = warehouseBucketUri;
            return this;
        }
        public GetInvokeRunsRun build() {
            final var o = new GetInvokeRunsRun();
            o.applicationId = applicationId;
            o.applicationLogConfigs = applicationLogConfigs;
            o.archiveUri = archiveUri;
            o.arguments = arguments;
            o.asynchronous = asynchronous;
            o.className = className;
            o.compartmentId = compartmentId;
            o.configuration = configuration;
            o.dataReadInBytes = dataReadInBytes;
            o.dataWrittenInBytes = dataWrittenInBytes;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.driverShape = driverShape;
            o.driverShapeConfigs = driverShapeConfigs;
            o.execute = execute;
            o.executorShape = executorShape;
            o.executorShapeConfigs = executorShapeConfigs;
            o.fileUri = fileUri;
            o.freeformTags = freeformTags;
            o.id = id;
            o.idleTimeoutInMinutes = idleTimeoutInMinutes;
            o.language = language;
            o.lifecycleDetails = lifecycleDetails;
            o.logsBucketUri = logsBucketUri;
            o.maxDurationInMinutes = maxDurationInMinutes;
            o.metastoreId = metastoreId;
            o.numExecutors = numExecutors;
            o.opcRequestId = opcRequestId;
            o.ownerPrincipalId = ownerPrincipalId;
            o.ownerUserName = ownerUserName;
            o.parameters = parameters;
            o.poolId = poolId;
            o.privateEndpointDnsZones = privateEndpointDnsZones;
            o.privateEndpointId = privateEndpointId;
            o.privateEndpointMaxHostCount = privateEndpointMaxHostCount;
            o.privateEndpointNsgIds = privateEndpointNsgIds;
            o.privateEndpointSubnetId = privateEndpointSubnetId;
            o.runDurationInMilliseconds = runDurationInMilliseconds;
            o.sparkVersion = sparkVersion;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.totalOcpu = totalOcpu;
            o.type = type;
            o.warehouseBucketUri = warehouseBucketUri;
            return o;
        }
    }
}
