// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataFlow.outputs.GetPoolConfiguration;
import com.pulumi.oci.DataFlow.outputs.GetPoolPoolMetric;
import com.pulumi.oci.DataFlow.outputs.GetPoolSchedule;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPoolResult {
    /**
     * @return The OCID of a compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return List of PoolConfig items.
     * 
     */
    private List<GetPoolConfiguration> configurations;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A user-friendly description. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return A user-friendly name. It does not have to be unique. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of a pool. Unique Id to indentify a dataflow pool resource.
     * 
     */
    private String id;
    /**
     * @return Optional timeout value in minutes used to auto stop Pools. A Pool will be auto stopped after inactivity for this amount of time period. If value not set, pool will not be auto stopped auto.
     * 
     */
    private Integer idleTimeoutInMinutes;
    /**
     * @return The detailed messages about the lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The OCID of the user who created the resource.
     * 
     */
    private String ownerPrincipalId;
    /**
     * @return The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
     * 
     */
    private String ownerUserName;
    private String poolId;
    /**
     * @return A collection of metrics related to a particular pool.
     * 
     */
    private List<GetPoolPoolMetric> poolMetrics;
    /**
     * @return A list of schedules for pool to auto start and stop.
     * 
     */
    private List<GetPoolSchedule> schedules;
    /**
     * @return The current state of this pool.
     * 
     */
    private String state;
    /**
     * @return The date and time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetPoolResult() {}
    /**
     * @return The OCID of a compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return List of PoolConfig items.
     * 
     */
    public List<GetPoolConfiguration> configurations() {
        return this.configurations;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly description. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly name. It does not have to be unique. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of a pool. Unique Id to indentify a dataflow pool resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Optional timeout value in minutes used to auto stop Pools. A Pool will be auto stopped after inactivity for this amount of time period. If value not set, pool will not be auto stopped auto.
     * 
     */
    public Integer idleTimeoutInMinutes() {
        return this.idleTimeoutInMinutes;
    }
    /**
     * @return The detailed messages about the lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the user who created the resource.
     * 
     */
    public String ownerPrincipalId() {
        return this.ownerPrincipalId;
    }
    /**
     * @return The username of the user who created the resource.  If the username of the owner does not exist, `null` will be returned and the caller should refer to the ownerPrincipalId value instead.
     * 
     */
    public String ownerUserName() {
        return this.ownerUserName;
    }
    public String poolId() {
        return this.poolId;
    }
    /**
     * @return A collection of metrics related to a particular pool.
     * 
     */
    public List<GetPoolPoolMetric> poolMetrics() {
        return this.poolMetrics;
    }
    /**
     * @return A list of schedules for pool to auto start and stop.
     * 
     */
    public List<GetPoolSchedule> schedules() {
        return this.schedules;
    }
    /**
     * @return The current state of this pool.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetPoolConfiguration> configurations;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Integer idleTimeoutInMinutes;
        private String lifecycleDetails;
        private String ownerPrincipalId;
        private String ownerUserName;
        private String poolId;
        private List<GetPoolPoolMetric> poolMetrics;
        private List<GetPoolSchedule> schedules;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.configurations = defaults.configurations;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.idleTimeoutInMinutes = defaults.idleTimeoutInMinutes;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.ownerPrincipalId = defaults.ownerPrincipalId;
    	      this.ownerUserName = defaults.ownerUserName;
    	      this.poolId = defaults.poolId;
    	      this.poolMetrics = defaults.poolMetrics;
    	      this.schedules = defaults.schedules;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder configurations(List<GetPoolConfiguration> configurations) {
            if (configurations == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "configurations");
            }
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(GetPoolConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
            if (idleTimeoutInMinutes == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "idleTimeoutInMinutes");
            }
            this.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder ownerPrincipalId(String ownerPrincipalId) {
            if (ownerPrincipalId == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "ownerPrincipalId");
            }
            this.ownerPrincipalId = ownerPrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder ownerUserName(String ownerUserName) {
            if (ownerUserName == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "ownerUserName");
            }
            this.ownerUserName = ownerUserName;
            return this;
        }
        @CustomType.Setter
        public Builder poolId(String poolId) {
            if (poolId == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "poolId");
            }
            this.poolId = poolId;
            return this;
        }
        @CustomType.Setter
        public Builder poolMetrics(List<GetPoolPoolMetric> poolMetrics) {
            if (poolMetrics == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "poolMetrics");
            }
            this.poolMetrics = poolMetrics;
            return this;
        }
        public Builder poolMetrics(GetPoolPoolMetric... poolMetrics) {
            return poolMetrics(List.of(poolMetrics));
        }
        @CustomType.Setter
        public Builder schedules(List<GetPoolSchedule> schedules) {
            if (schedules == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "schedules");
            }
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetPoolSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetPoolResult build() {
            final var _resultValue = new GetPoolResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.configurations = configurations;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.idleTimeoutInMinutes = idleTimeoutInMinutes;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.ownerPrincipalId = ownerPrincipalId;
            _resultValue.ownerUserName = ownerUserName;
            _resultValue.poolId = poolId;
            _resultValue.poolMetrics = poolMetrics;
            _resultValue.schedules = schedules;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
