// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataFlow.outputs.GetPoolsPoolCollectionItemConfigurationShapeConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPoolsPoolCollectionItemConfiguration {
    /**
     * @return Maximum number of compute instances in the pool for a given compute shape.
     * 
     */
    private Integer max;
    /**
     * @return Minimum number of compute instances in the pool for a given compute shape.
     * 
     */
    private Integer min;
    /**
     * @return The compute shape of the resources you would like to provision.
     * 
     */
    private String shape;
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    private List<GetPoolsPoolCollectionItemConfigurationShapeConfig> shapeConfigs;

    private GetPoolsPoolCollectionItemConfiguration() {}
    /**
     * @return Maximum number of compute instances in the pool for a given compute shape.
     * 
     */
    public Integer max() {
        return this.max;
    }
    /**
     * @return Minimum number of compute instances in the pool for a given compute shape.
     * 
     */
    public Integer min() {
        return this.min;
    }
    /**
     * @return The compute shape of the resources you would like to provision.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    public List<GetPoolsPoolCollectionItemConfigurationShapeConfig> shapeConfigs() {
        return this.shapeConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolsPoolCollectionItemConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer max;
        private Integer min;
        private String shape;
        private List<GetPoolsPoolCollectionItemConfigurationShapeConfig> shapeConfigs;
        public Builder() {}
        public Builder(GetPoolsPoolCollectionItemConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.max = defaults.max;
    	      this.min = defaults.min;
    	      this.shape = defaults.shape;
    	      this.shapeConfigs = defaults.shapeConfigs;
        }

        @CustomType.Setter
        public Builder max(Integer max) {
            this.max = Objects.requireNonNull(max);
            return this;
        }
        @CustomType.Setter
        public Builder min(Integer min) {
            this.min = Objects.requireNonNull(min);
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        @CustomType.Setter
        public Builder shapeConfigs(List<GetPoolsPoolCollectionItemConfigurationShapeConfig> shapeConfigs) {
            this.shapeConfigs = Objects.requireNonNull(shapeConfigs);
            return this;
        }
        public Builder shapeConfigs(GetPoolsPoolCollectionItemConfigurationShapeConfig... shapeConfigs) {
            return shapeConfigs(List.of(shapeConfigs));
        }
        public GetPoolsPoolCollectionItemConfiguration build() {
            final var _resultValue = new GetPoolsPoolCollectionItemConfiguration();
            _resultValue.max = max;
            _resultValue.min = min;
            _resultValue.shape = shape;
            _resultValue.shapeConfigs = shapeConfigs;
            return _resultValue;
        }
    }
}
