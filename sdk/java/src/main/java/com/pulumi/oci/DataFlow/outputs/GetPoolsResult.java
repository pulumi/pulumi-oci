// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataFlow.outputs.GetPoolsFilter;
import com.pulumi.oci.DataFlow.outputs.GetPoolsPoolCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPoolsResult {
    /**
     * @return The OCID of a compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return A user-friendly name. It does not have to be unique. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable String displayNameStartsWith;
    private @Nullable List<GetPoolsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The OCID of the user who created the resource.
     * 
     */
    private @Nullable String ownerPrincipalId;
    /**
     * @return The list of pool_collection.
     * 
     */
    private List<GetPoolsPoolCollection> poolCollections;
    /**
     * @return The current state of this pool.
     * 
     */
    private @Nullable String state;

    private GetPoolsResult() {}
    /**
     * @return The OCID of a compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name. It does not have to be unique. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<String> displayNameStartsWith() {
        return Optional.ofNullable(this.displayNameStartsWith);
    }
    public List<GetPoolsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the user who created the resource.
     * 
     */
    public Optional<String> ownerPrincipalId() {
        return Optional.ofNullable(this.ownerPrincipalId);
    }
    /**
     * @return The list of pool_collection.
     * 
     */
    public List<GetPoolsPoolCollection> poolCollections() {
        return this.poolCollections;
    }
    /**
     * @return The current state of this pool.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable String displayNameStartsWith;
        private @Nullable List<GetPoolsFilter> filters;
        private String id;
        private @Nullable String ownerPrincipalId;
        private List<GetPoolsPoolCollection> poolCollections;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetPoolsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.displayNameStartsWith = defaults.displayNameStartsWith;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ownerPrincipalId = defaults.ownerPrincipalId;
    	      this.poolCollections = defaults.poolCollections;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder displayNameStartsWith(@Nullable String displayNameStartsWith) {
            this.displayNameStartsWith = displayNameStartsWith;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPoolsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetPoolsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ownerPrincipalId(@Nullable String ownerPrincipalId) {
            this.ownerPrincipalId = ownerPrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder poolCollections(List<GetPoolsPoolCollection> poolCollections) {
            this.poolCollections = Objects.requireNonNull(poolCollections);
            return this;
        }
        public Builder poolCollections(GetPoolsPoolCollection... poolCollections) {
            return poolCollections(List.of(poolCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetPoolsResult build() {
            final var o = new GetPoolsResult();
            o.compartmentId = compartmentId;
            o.displayName = displayName;
            o.displayNameStartsWith = displayNameStartsWith;
            o.filters = filters;
            o.id = id;
            o.ownerPrincipalId = ownerPrincipalId;
            o.poolCollections = poolCollections;
            o.state = state;
            return o;
        }
    }
}
