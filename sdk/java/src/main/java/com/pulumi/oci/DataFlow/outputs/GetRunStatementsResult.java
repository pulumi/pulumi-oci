// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataFlow.outputs.GetRunStatementsFilter;
import com.pulumi.oci.DataFlow.outputs.GetRunStatementsStatementCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRunStatementsResult {
    private @Nullable List<GetRunStatementsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of a run.
     * 
     */
    private String runId;
    /**
     * @return The current state of this statement.
     * 
     */
    private @Nullable String state;
    /**
     * @return The list of statement_collection.
     * 
     */
    private List<GetRunStatementsStatementCollection> statementCollections;

    private GetRunStatementsResult() {}
    public List<GetRunStatementsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of a run.
     * 
     */
    public String runId() {
        return this.runId;
    }
    /**
     * @return The current state of this statement.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of statement_collection.
     * 
     */
    public List<GetRunStatementsStatementCollection> statementCollections() {
        return this.statementCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRunStatementsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetRunStatementsFilter> filters;
        private String id;
        private String runId;
        private @Nullable String state;
        private List<GetRunStatementsStatementCollection> statementCollections;
        public Builder() {}
        public Builder(GetRunStatementsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.runId = defaults.runId;
    	      this.state = defaults.state;
    	      this.statementCollections = defaults.statementCollections;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetRunStatementsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetRunStatementsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRunStatementsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder runId(String runId) {
            if (runId == null) {
              throw new MissingRequiredPropertyException("GetRunStatementsResult", "runId");
            }
            this.runId = runId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder statementCollections(List<GetRunStatementsStatementCollection> statementCollections) {
            if (statementCollections == null) {
              throw new MissingRequiredPropertyException("GetRunStatementsResult", "statementCollections");
            }
            this.statementCollections = statementCollections;
            return this;
        }
        public Builder statementCollections(GetRunStatementsStatementCollection... statementCollections) {
            return statementCollections(List.of(statementCollections));
        }
        public GetRunStatementsResult build() {
            final var _resultValue = new GetRunStatementsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.runId = runId;
            _resultValue.state = state;
            _resultValue.statementCollections = statementCollections;
            return _resultValue;
        }
    }
}
