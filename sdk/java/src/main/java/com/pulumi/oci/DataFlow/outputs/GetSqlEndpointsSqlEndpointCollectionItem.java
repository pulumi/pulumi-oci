// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataFlow.outputs.GetSqlEndpointsSqlEndpointCollectionItemDriverShapeConfig;
import com.pulumi.oci.DataFlow.outputs.GetSqlEndpointsSqlEndpointCollectionItemExecutorShapeConfig;
import com.pulumi.oci.DataFlow.outputs.GetSqlEndpointsSqlEndpointCollectionItemNetworkConfiguration;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSqlEndpointsSqlEndpointCollectionItem {
    /**
     * @return The OCID of the compartment in which to query resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The description of the SQL Endpoint.
     * 
     */
    private @Nullable String description;
    /**
     * @return The query parameter for the Spark application name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The shape of the SQL Endpoint driver instance.
     * 
     */
    private @Nullable String driverShape;
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    private @Nullable List<GetSqlEndpointsSqlEndpointCollectionItemDriverShapeConfig> driverShapeConfigs;
    /**
     * @return The shape of the SQL Endpoint executor instance.
     * 
     */
    private @Nullable String executorShape;
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    private @Nullable List<GetSqlEndpointsSqlEndpointCollectionItemExecutorShapeConfig> executorShapeConfigs;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The provision identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return The JDBC URL field. For example, jdbc:spark://{serviceFQDN}:443/default;SparkServerType=DFI
     * 
     */
    private @Nullable String jdbcEndpointUrl;
    /**
     * @return The OCID of Oracle Cloud Infrastructure Lake.
     * 
     */
    private @Nullable String lakeId;
    /**
     * @return This token is used by Splat, and indicates that the service accepts the request, and that the request is currently being processed.
     * 
     */
    private @Nullable String lastAcceptedRequestToken;
    /**
     * @return The maximum number of executors.
     * 
     */
    private @Nullable Integer maxExecutorCount;
    /**
     * @return The OCID of Oracle Cloud Infrastructure Hive Metastore.
     * 
     */
    private @Nullable String metastoreId;
    /**
     * @return The minimum number of executors.
     * 
     */
    private @Nullable Integer minExecutorCount;
    /**
     * @return The network configuration of a SQL Endpoint.
     * 
     */
    private @Nullable List<GetSqlEndpointsSqlEndpointCollectionItemNetworkConfiguration> networkConfigurations;
    /**
     * @return The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    private @Nullable Map<String,Object> sparkAdvancedConfigurations;
    /**
     * @return The version of SQL Endpoint.
     * 
     */
    private @Nullable String sqlEndpointVersion;
    /**
     * @return A filter to return only those resources whose sqlEndpointLifecycleState matches the given sqlEndpointLifecycleState.
     * 
     */
    private @Nullable String state;
    /**
     * @return A message describing the reason why the resource is in it&#39;s current state. Helps bubble up errors in state changes. For example, it can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    private @Nullable String stateMessage;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the Sql Endpoint was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the Sql Endpoint was updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The warehouse bucket URI. It is a Oracle Cloud Infrastructure Object Storage bucket URI as defined here https://docs.oracle.com/en/cloud/paas/atp-cloud/atpud/object-storage-uris.html
     * 
     */
    private @Nullable String warehouseBucketUri;

    private GetSqlEndpointsSqlEndpointCollectionItem() {}
    /**
     * @return The OCID of the compartment in which to query resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The description of the SQL Endpoint.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The query parameter for the Spark application name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The shape of the SQL Endpoint driver instance.
     * 
     */
    public Optional<String> driverShape() {
        return Optional.ofNullable(this.driverShape);
    }
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    public List<GetSqlEndpointsSqlEndpointCollectionItemDriverShapeConfig> driverShapeConfigs() {
        return this.driverShapeConfigs == null ? List.of() : this.driverShapeConfigs;
    }
    /**
     * @return The shape of the SQL Endpoint executor instance.
     * 
     */
    public Optional<String> executorShape() {
        return Optional.ofNullable(this.executorShape);
    }
    /**
     * @return This is used to configure the shape of the driver or executor if a flexible shape is used.
     * 
     */
    public List<GetSqlEndpointsSqlEndpointCollectionItemExecutorShapeConfig> executorShapeConfigs() {
        return this.executorShapeConfigs == null ? List.of() : this.executorShapeConfigs;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The provision identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The JDBC URL field. For example, jdbc:spark://{serviceFQDN}:443/default;SparkServerType=DFI
     * 
     */
    public Optional<String> jdbcEndpointUrl() {
        return Optional.ofNullable(this.jdbcEndpointUrl);
    }
    /**
     * @return The OCID of Oracle Cloud Infrastructure Lake.
     * 
     */
    public Optional<String> lakeId() {
        return Optional.ofNullable(this.lakeId);
    }
    /**
     * @return This token is used by Splat, and indicates that the service accepts the request, and that the request is currently being processed.
     * 
     */
    public Optional<String> lastAcceptedRequestToken() {
        return Optional.ofNullable(this.lastAcceptedRequestToken);
    }
    /**
     * @return The maximum number of executors.
     * 
     */
    public Optional<Integer> maxExecutorCount() {
        return Optional.ofNullable(this.maxExecutorCount);
    }
    /**
     * @return The OCID of Oracle Cloud Infrastructure Hive Metastore.
     * 
     */
    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }
    /**
     * @return The minimum number of executors.
     * 
     */
    public Optional<Integer> minExecutorCount() {
        return Optional.ofNullable(this.minExecutorCount);
    }
    /**
     * @return The network configuration of a SQL Endpoint.
     * 
     */
    public List<GetSqlEndpointsSqlEndpointCollectionItemNetworkConfiguration> networkConfigurations() {
        return this.networkConfigurations == null ? List.of() : this.networkConfigurations;
    }
    /**
     * @return The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties. Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    public Map<String,Object> sparkAdvancedConfigurations() {
        return this.sparkAdvancedConfigurations == null ? Map.of() : this.sparkAdvancedConfigurations;
    }
    /**
     * @return The version of SQL Endpoint.
     * 
     */
    public Optional<String> sqlEndpointVersion() {
        return Optional.ofNullable(this.sqlEndpointVersion);
    }
    /**
     * @return A filter to return only those resources whose sqlEndpointLifecycleState matches the given sqlEndpointLifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return A message describing the reason why the resource is in it&#39;s current state. Helps bubble up errors in state changes. For example, it can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public Optional<String> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the Sql Endpoint was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the Sql Endpoint was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The warehouse bucket URI. It is a Oracle Cloud Infrastructure Object Storage bucket URI as defined here https://docs.oracle.com/en/cloud/paas/atp-cloud/atpud/object-storage-uris.html
     * 
     */
    public Optional<String> warehouseBucketUri() {
        return Optional.ofNullable(this.warehouseBucketUri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlEndpointsSqlEndpointCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable String driverShape;
        private @Nullable List<GetSqlEndpointsSqlEndpointCollectionItemDriverShapeConfig> driverShapeConfigs;
        private @Nullable String executorShape;
        private @Nullable List<GetSqlEndpointsSqlEndpointCollectionItemExecutorShapeConfig> executorShapeConfigs;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String jdbcEndpointUrl;
        private @Nullable String lakeId;
        private @Nullable String lastAcceptedRequestToken;
        private @Nullable Integer maxExecutorCount;
        private @Nullable String metastoreId;
        private @Nullable Integer minExecutorCount;
        private @Nullable List<GetSqlEndpointsSqlEndpointCollectionItemNetworkConfiguration> networkConfigurations;
        private @Nullable Map<String,Object> sparkAdvancedConfigurations;
        private @Nullable String sqlEndpointVersion;
        private @Nullable String state;
        private @Nullable String stateMessage;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String warehouseBucketUri;
        public Builder() {}
        public Builder(GetSqlEndpointsSqlEndpointCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.driverShape = defaults.driverShape;
    	      this.driverShapeConfigs = defaults.driverShapeConfigs;
    	      this.executorShape = defaults.executorShape;
    	      this.executorShapeConfigs = defaults.executorShapeConfigs;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.jdbcEndpointUrl = defaults.jdbcEndpointUrl;
    	      this.lakeId = defaults.lakeId;
    	      this.lastAcceptedRequestToken = defaults.lastAcceptedRequestToken;
    	      this.maxExecutorCount = defaults.maxExecutorCount;
    	      this.metastoreId = defaults.metastoreId;
    	      this.minExecutorCount = defaults.minExecutorCount;
    	      this.networkConfigurations = defaults.networkConfigurations;
    	      this.sparkAdvancedConfigurations = defaults.sparkAdvancedConfigurations;
    	      this.sqlEndpointVersion = defaults.sqlEndpointVersion;
    	      this.state = defaults.state;
    	      this.stateMessage = defaults.stateMessage;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.warehouseBucketUri = defaults.warehouseBucketUri;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder driverShape(@Nullable String driverShape) {
            this.driverShape = driverShape;
            return this;
        }
        @CustomType.Setter
        public Builder driverShapeConfigs(@Nullable List<GetSqlEndpointsSqlEndpointCollectionItemDriverShapeConfig> driverShapeConfigs) {
            this.driverShapeConfigs = driverShapeConfigs;
            return this;
        }
        public Builder driverShapeConfigs(GetSqlEndpointsSqlEndpointCollectionItemDriverShapeConfig... driverShapeConfigs) {
            return driverShapeConfigs(List.of(driverShapeConfigs));
        }
        @CustomType.Setter
        public Builder executorShape(@Nullable String executorShape) {
            this.executorShape = executorShape;
            return this;
        }
        @CustomType.Setter
        public Builder executorShapeConfigs(@Nullable List<GetSqlEndpointsSqlEndpointCollectionItemExecutorShapeConfig> executorShapeConfigs) {
            this.executorShapeConfigs = executorShapeConfigs;
            return this;
        }
        public Builder executorShapeConfigs(GetSqlEndpointsSqlEndpointCollectionItemExecutorShapeConfig... executorShapeConfigs) {
            return executorShapeConfigs(List.of(executorShapeConfigs));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jdbcEndpointUrl(@Nullable String jdbcEndpointUrl) {
            this.jdbcEndpointUrl = jdbcEndpointUrl;
            return this;
        }
        @CustomType.Setter
        public Builder lakeId(@Nullable String lakeId) {
            this.lakeId = lakeId;
            return this;
        }
        @CustomType.Setter
        public Builder lastAcceptedRequestToken(@Nullable String lastAcceptedRequestToken) {
            this.lastAcceptedRequestToken = lastAcceptedRequestToken;
            return this;
        }
        @CustomType.Setter
        public Builder maxExecutorCount(@Nullable Integer maxExecutorCount) {
            this.maxExecutorCount = maxExecutorCount;
            return this;
        }
        @CustomType.Setter
        public Builder metastoreId(@Nullable String metastoreId) {
            this.metastoreId = metastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder minExecutorCount(@Nullable Integer minExecutorCount) {
            this.minExecutorCount = minExecutorCount;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfigurations(@Nullable List<GetSqlEndpointsSqlEndpointCollectionItemNetworkConfiguration> networkConfigurations) {
            this.networkConfigurations = networkConfigurations;
            return this;
        }
        public Builder networkConfigurations(GetSqlEndpointsSqlEndpointCollectionItemNetworkConfiguration... networkConfigurations) {
            return networkConfigurations(List.of(networkConfigurations));
        }
        @CustomType.Setter
        public Builder sparkAdvancedConfigurations(@Nullable Map<String,Object> sparkAdvancedConfigurations) {
            this.sparkAdvancedConfigurations = sparkAdvancedConfigurations;
            return this;
        }
        @CustomType.Setter
        public Builder sqlEndpointVersion(@Nullable String sqlEndpointVersion) {
            this.sqlEndpointVersion = sqlEndpointVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateMessage(@Nullable String stateMessage) {
            this.stateMessage = stateMessage;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder warehouseBucketUri(@Nullable String warehouseBucketUri) {
            this.warehouseBucketUri = warehouseBucketUri;
            return this;
        }
        public GetSqlEndpointsSqlEndpointCollectionItem build() {
            final var o = new GetSqlEndpointsSqlEndpointCollectionItem();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.driverShape = driverShape;
            o.driverShapeConfigs = driverShapeConfigs;
            o.executorShape = executorShape;
            o.executorShapeConfigs = executorShapeConfigs;
            o.freeformTags = freeformTags;
            o.id = id;
            o.jdbcEndpointUrl = jdbcEndpointUrl;
            o.lakeId = lakeId;
            o.lastAcceptedRequestToken = lastAcceptedRequestToken;
            o.maxExecutorCount = maxExecutorCount;
            o.metastoreId = metastoreId;
            o.minExecutorCount = minExecutorCount;
            o.networkConfigurations = networkConfigurations;
            o.sparkAdvancedConfigurations = sparkAdvancedConfigurations;
            o.sqlEndpointVersion = sqlEndpointVersion;
            o.state = state;
            o.stateMessage = stateMessage;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.warehouseBucketUri = warehouseBucketUri;
            return o;
        }
    }
}
