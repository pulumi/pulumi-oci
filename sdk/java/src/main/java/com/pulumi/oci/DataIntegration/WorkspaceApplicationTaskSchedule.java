// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataIntegration.WorkspaceApplicationTaskScheduleArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleState;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceApplicationTaskScheduleLastRunDetail;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceApplicationTaskScheduleMetadata;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceApplicationTaskScheduleParentRef;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceApplicationTaskScheduleRegistryMetadata;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceApplicationTaskScheduleScheduleRef;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource provides the Workspace Application Task Schedule resource in Oracle Cloud Infrastructure Data Integration service.
 * 
 * Endpoint to be used create TaskSchedule.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DataIntegration.WorkspaceApplicationTaskSchedule;
 * import com.pulumi.oci.DataIntegration.WorkspaceApplicationTaskScheduleArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleRegistryMetadataArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataAggregatorArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testWorkspaceApplicationTaskSchedule = new WorkspaceApplicationTaskSchedule("testWorkspaceApplicationTaskSchedule", WorkspaceApplicationTaskScheduleArgs.builder()        
 *             .applicationKey(workspaceApplicationTaskScheduleApplicationKey)
 *             .identifier(workspaceApplicationTaskScheduleIdentifier)
 *             .name(workspaceApplicationTaskScheduleName)
 *             .workspaceId(testWorkspace.id())
 *             .authMode(workspaceApplicationTaskScheduleAuthMode)
 *             .configProviderDelegate(workspaceApplicationTaskScheduleConfigProviderDelegate)
 *             .description(workspaceApplicationTaskScheduleDescription)
 *             .endTimeMillis(workspaceApplicationTaskScheduleEndTimeMillis)
 *             .expectedDuration(workspaceApplicationTaskScheduleExpectedDuration)
 *             .expectedDurationUnit(workspaceApplicationTaskScheduleExpectedDurationUnit)
 *             .isBackfillEnabled(workspaceApplicationTaskScheduleIsBackfillEnabled)
 *             .isConcurrentAllowed(workspaceApplicationTaskScheduleIsConcurrentAllowed)
 *             .isEnabled(workspaceApplicationTaskScheduleIsEnabled)
 *             .key(workspaceApplicationTaskScheduleKey)
 *             .modelVersion(workspaceApplicationTaskScheduleModelVersion)
 *             .numberOfRetries(workspaceApplicationTaskScheduleNumberOfRetries)
 *             .objectStatus(workspaceApplicationTaskScheduleObjectStatus)
 *             .objectVersion(workspaceApplicationTaskScheduleObjectVersion)
 *             .parentRef(WorkspaceApplicationTaskScheduleParentRefArgs.builder()
 *                 .parent(workspaceApplicationTaskScheduleParentRefParent)
 *                 .rootDocId(testRootDoc.id())
 *                 .build())
 *             .registryMetadata(WorkspaceApplicationTaskScheduleRegistryMetadataArgs.builder()
 *                 .aggregatorKey(workspaceApplicationTaskScheduleRegistryMetadataAggregatorKey)
 *                 .isFavorite(workspaceApplicationTaskScheduleRegistryMetadataIsFavorite)
 *                 .key(workspaceApplicationTaskScheduleRegistryMetadataKey)
 *                 .labels(workspaceApplicationTaskScheduleRegistryMetadataLabels)
 *                 .registryVersion(workspaceApplicationTaskScheduleRegistryMetadataRegistryVersion)
 *                 .build())
 *             .retryDelay(workspaceApplicationTaskScheduleRetryDelay)
 *             .retryDelayUnit(workspaceApplicationTaskScheduleRetryDelayUnit)
 *             .scheduleRef(WorkspaceApplicationTaskScheduleScheduleRefArgs.builder()
 *                 .description(workspaceApplicationTaskScheduleScheduleRefDescription)
 *                 .frequencyDetails(WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs.builder()
 *                     .modelType(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsModelType)
 *                     .customExpression(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsCustomExpression)
 *                     .dayOfWeek(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsDayOfWeek)
 *                     .days(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsDays)
 *                     .frequency(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsFrequency)
 *                     .interval(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsInterval)
 *                     .time(WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeArgs.builder()
 *                         .hour(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeHour)
 *                         .minute(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeMinute)
 *                         .second(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeSecond)
 *                         .build())
 *                     .weekOfMonth(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsWeekOfMonth)
 *                     .build())
 *                 .identifier(workspaceApplicationTaskScheduleScheduleRefIdentifier)
 *                 .isDaylightAdjustmentEnabled(workspaceApplicationTaskScheduleScheduleRefIsDaylightAdjustmentEnabled)
 *                 .key(workspaceApplicationTaskScheduleScheduleRefKey)
 *                 .metadata(WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs.builder()
 *                     .aggregator(WorkspaceApplicationTaskScheduleScheduleRefMetadataAggregatorArgs.builder()
 *                         .description(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorDescription)
 *                         .identifier(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorIdentifier)
 *                         .key(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorKey)
 *                         .name(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorName)
 *                         .type(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorType)
 *                         .build())
 *                     .aggregatorKey(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorKey)
 *                     .countStatistics(WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsArgs.builder()
 *                         .objectTypeCountLists(WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListArgs.builder()
 *                             .objectCount(workspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListObjectCount)
 *                             .objectType(workspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListObjectType)
 *                             .build())
 *                         .build())
 *                     .createdBy(workspaceApplicationTaskScheduleScheduleRefMetadataCreatedBy)
 *                     .createdByName(workspaceApplicationTaskScheduleScheduleRefMetadataCreatedByName)
 *                     .identifierPath(workspaceApplicationTaskScheduleScheduleRefMetadataIdentifierPath)
 *                     .infoFields(workspaceApplicationTaskScheduleScheduleRefMetadataInfoFields)
 *                     .isFavorite(workspaceApplicationTaskScheduleScheduleRefMetadataIsFavorite)
 *                     .labels(workspaceApplicationTaskScheduleScheduleRefMetadataLabels)
 *                     .registryVersion(workspaceApplicationTaskScheduleScheduleRefMetadataRegistryVersion)
 *                     .timeCreated(workspaceApplicationTaskScheduleScheduleRefMetadataTimeCreated)
 *                     .timeUpdated(workspaceApplicationTaskScheduleScheduleRefMetadataTimeUpdated)
 *                     .updatedBy(workspaceApplicationTaskScheduleScheduleRefMetadataUpdatedBy)
 *                     .updatedByName(workspaceApplicationTaskScheduleScheduleRefMetadataUpdatedByName)
 *                     .build())
 *                 .modelType(workspaceApplicationTaskScheduleScheduleRefModelType)
 *                 .modelVersion(workspaceApplicationTaskScheduleScheduleRefModelVersion)
 *                 .name(workspaceApplicationTaskScheduleScheduleRefName)
 *                 .objectStatus(workspaceApplicationTaskScheduleScheduleRefObjectStatus)
 *                 .objectVersion(workspaceApplicationTaskScheduleScheduleRefObjectVersion)
 *                 .parentRef(WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs.builder()
 *                     .parent(workspaceApplicationTaskScheduleScheduleRefParentRefParent)
 *                     .rootDocId(testRootDoc.id())
 *                     .build())
 *                 .timezone(workspaceApplicationTaskScheduleScheduleRefTimezone)
 *                 .build())
 *             .startTimeMillis(workspaceApplicationTaskScheduleStartTimeMillis)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * WorkspaceApplicationTaskSchedules can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule test_workspace_application_task_schedule &#34;workspaces/{workspaceId}/applications/{applicationKey}/taskSchedules/{taskScheduleKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule")
public class WorkspaceApplicationTaskSchedule extends com.pulumi.resources.CustomResource {
    /**
     * The application key.
     * 
     */
    @Export(name="applicationKey", refs={String.class}, tree="[0]")
    private Output<String> applicationKey;

    /**
     * @return The application key.
     * 
     */
    public Output<String> applicationKey() {
        return this.applicationKey;
    }
    /**
     * (Updatable) The authorization mode for the task.
     * 
     */
    @Export(name="authMode", refs={String.class}, tree="[0]")
    private Output<String> authMode;

    /**
     * @return (Updatable) The authorization mode for the task.
     * 
     */
    public Output<String> authMode() {
        return this.authMode;
    }
    /**
     * (Updatable) The information about the configuration provider.
     * 
     */
    @Export(name="configProviderDelegate", refs={String.class}, tree="[0]")
    private Output<String> configProviderDelegate;

    /**
     * @return (Updatable) The information about the configuration provider.
     * 
     */
    public Output<String> configProviderDelegate() {
        return this.configProviderDelegate;
    }
    /**
     * (Updatable) The description of the aggregator.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) The description of the aggregator.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) The end time in milliseconds.
     * 
     */
    @Export(name="endTimeMillis", refs={String.class}, tree="[0]")
    private Output<String> endTimeMillis;

    /**
     * @return (Updatable) The end time in milliseconds.
     * 
     */
    public Output<String> endTimeMillis() {
        return this.endTimeMillis;
    }
    /**
     * (Updatable) The expected duration of the task execution.
     * 
     */
    @Export(name="expectedDuration", refs={Double.class}, tree="[0]")
    private Output<Double> expectedDuration;

    /**
     * @return (Updatable) The expected duration of the task execution.
     * 
     */
    public Output<Double> expectedDuration() {
        return this.expectedDuration;
    }
    /**
     * (Updatable) The expected duration unit of the task execution.
     * 
     */
    @Export(name="expectedDurationUnit", refs={String.class}, tree="[0]")
    private Output<String> expectedDurationUnit;

    /**
     * @return (Updatable) The expected duration unit of the task execution.
     * 
     */
    public Output<String> expectedDurationUnit() {
        return this.expectedDurationUnit;
    }
    /**
     * (Updatable) The identifier of the aggregator.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return (Updatable) The identifier of the aggregator.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * (Updatable) Whether the backfill is enabled.
     * 
     */
    @Export(name="isBackfillEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isBackfillEnabled;

    /**
     * @return (Updatable) Whether the backfill is enabled.
     * 
     */
    public Output<Boolean> isBackfillEnabled() {
        return this.isBackfillEnabled;
    }
    /**
     * (Updatable) Whether the same task can be executed concurrently.
     * 
     */
    @Export(name="isConcurrentAllowed", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isConcurrentAllowed;

    /**
     * @return (Updatable) Whether the same task can be executed concurrently.
     * 
     */
    public Output<Boolean> isConcurrentAllowed() {
        return this.isConcurrentAllowed;
    }
    /**
     * (Updatable) Whether the task schedule is enabled.
     * 
     */
    @Export(name="isEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Whether the task schedule is enabled.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }
    /**
     * (Updatable) The key of the aggregator object.
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return (Updatable) The key of the aggregator object.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * The last run details for the task run.
     * 
     */
    @Export(name="lastRunDetails", refs={List.class,WorkspaceApplicationTaskScheduleLastRunDetail.class}, tree="[0,1]")
    private Output<List<WorkspaceApplicationTaskScheduleLastRunDetail>> lastRunDetails;

    /**
     * @return The last run details for the task run.
     * 
     */
    public Output<List<WorkspaceApplicationTaskScheduleLastRunDetail>> lastRunDetails() {
        return this.lastRunDetails;
    }
    /**
     * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Export(name="metadatas", refs={List.class,WorkspaceApplicationTaskScheduleMetadata.class}, tree="[0,1]")
    private Output<List<WorkspaceApplicationTaskScheduleMetadata>> metadatas;

    /**
     * @return (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Output<List<WorkspaceApplicationTaskScheduleMetadata>> metadatas() {
        return this.metadatas;
    }
    /**
     * (Updatable) The type of the object.
     * 
     */
    @Export(name="modelType", refs={String.class}, tree="[0]")
    private Output<String> modelType;

    /**
     * @return (Updatable) The type of the object.
     * 
     */
    public Output<String> modelType() {
        return this.modelType;
    }
    /**
     * (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    @Export(name="modelVersion", refs={String.class}, tree="[0]")
    private Output<String> modelVersion;

    /**
     * @return (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    public Output<String> modelVersion() {
        return this.modelVersion;
    }
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="nextRunTimeMillis", refs={String.class}, tree="[0]")
    private Output<String> nextRunTimeMillis;

    public Output<String> nextRunTimeMillis() {
        return this.nextRunTimeMillis;
    }
    /**
     * (Updatable) The number of retries.
     * 
     */
    @Export(name="numberOfRetries", refs={Integer.class}, tree="[0]")
    private Output<Integer> numberOfRetries;

    /**
     * @return (Updatable) The number of retries.
     * 
     */
    public Output<Integer> numberOfRetries() {
        return this.numberOfRetries;
    }
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Export(name="objectStatus", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Output<Integer> objectStatus() {
        return this.objectStatus;
    }
    /**
     * (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    @Export(name="objectVersion", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectVersion;

    /**
     * @return (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Output<Integer> objectVersion() {
        return this.objectVersion;
    }
    /**
     * (Updatable) A reference to the object&#39;s parent.
     * 
     */
    @Export(name="parentRef", refs={WorkspaceApplicationTaskScheduleParentRef.class}, tree="[0]")
    private Output<WorkspaceApplicationTaskScheduleParentRef> parentRef;

    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    public Output<WorkspaceApplicationTaskScheduleParentRef> parentRef() {
        return this.parentRef;
    }
    /**
     * (Updatable) Information about the object and its parent.
     * 
     */
    @Export(name="registryMetadata", refs={WorkspaceApplicationTaskScheduleRegistryMetadata.class}, tree="[0]")
    private Output<WorkspaceApplicationTaskScheduleRegistryMetadata> registryMetadata;

    /**
     * @return (Updatable) Information about the object and its parent.
     * 
     */
    public Output<WorkspaceApplicationTaskScheduleRegistryMetadata> registryMetadata() {
        return this.registryMetadata;
    }
    /**
     * The number of retry attempts.
     * 
     */
    @Export(name="retryAttempts", refs={Integer.class}, tree="[0]")
    private Output<Integer> retryAttempts;

    /**
     * @return The number of retry attempts.
     * 
     */
    public Output<Integer> retryAttempts() {
        return this.retryAttempts;
    }
    /**
     * (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
     * 
     */
    @Export(name="retryDelay", refs={Double.class}, tree="[0]")
    private Output<Double> retryDelay;

    /**
     * @return (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
     * 
     */
    public Output<Double> retryDelay() {
        return this.retryDelay;
    }
    /**
     * (Updatable) The unit for the retry delay.
     * 
     */
    @Export(name="retryDelayUnit", refs={String.class}, tree="[0]")
    private Output<String> retryDelayUnit;

    /**
     * @return (Updatable) The unit for the retry delay.
     * 
     */
    public Output<String> retryDelayUnit() {
        return this.retryDelayUnit;
    }
    /**
     * (Updatable) The schedule object
     * 
     */
    @Export(name="scheduleRef", refs={WorkspaceApplicationTaskScheduleScheduleRef.class}, tree="[0]")
    private Output<WorkspaceApplicationTaskScheduleScheduleRef> scheduleRef;

    /**
     * @return (Updatable) The schedule object
     * 
     */
    public Output<WorkspaceApplicationTaskScheduleScheduleRef> scheduleRef() {
        return this.scheduleRef;
    }
    /**
     * (Updatable) The start time in milliseconds.
     * 
     */
    @Export(name="startTimeMillis", refs={String.class}, tree="[0]")
    private Output<String> startTimeMillis;

    /**
     * @return (Updatable) The start time in milliseconds.
     * 
     */
    public Output<String> startTimeMillis() {
        return this.startTimeMillis;
    }
    /**
     * The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkspaceApplicationTaskSchedule(String name) {
        this(name, WorkspaceApplicationTaskScheduleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkspaceApplicationTaskSchedule(String name, WorkspaceApplicationTaskScheduleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkspaceApplicationTaskSchedule(String name, WorkspaceApplicationTaskScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule", name, args == null ? WorkspaceApplicationTaskScheduleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WorkspaceApplicationTaskSchedule(String name, Output<String> id, @Nullable WorkspaceApplicationTaskScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkspaceApplicationTaskSchedule get(String name, Output<String> id, @Nullable WorkspaceApplicationTaskScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkspaceApplicationTaskSchedule(name, id, state, options);
    }
}
