// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataIntegration.WorkspaceProjectArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceProjectState;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceProjectMetadata;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceProjectParentRef;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceProjectRegistryMetadata;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Workspace Project resource in Oracle Cloud Infrastructure Data Integration service.
 * 
 * Creates a project. Projects are organizational constructs within a workspace that you use to organize your design-time resources, such as tasks or data flows. Projects can be organized into folders.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DataIntegration.WorkspaceProject;
 * import com.pulumi.oci.DataIntegration.WorkspaceProjectArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceProjectRegistryMetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testWorkspaceProject = new WorkspaceProject(&#34;testWorkspaceProject&#34;, WorkspaceProjectArgs.builder()        
 *             .identifier(var_.workspace_project_identifier())
 *             .workspaceId(oci_dataintegration_workspace.test_workspace().id())
 *             .description(var_.workspace_project_description())
 *             .key(var_.workspace_project_key())
 *             .modelVersion(var_.workspace_project_model_version())
 *             .objectStatus(var_.workspace_project_object_status())
 *             .registryMetadata(WorkspaceProjectRegistryMetadataArgs.builder()
 *                 .aggregatorKey(var_.workspace_project_registry_metadata_aggregator_key())
 *                 .isFavorite(var_.workspace_project_registry_metadata_is_favorite())
 *                 .key(var_.workspace_project_registry_metadata_key())
 *                 .labels(var_.workspace_project_registry_metadata_labels())
 *                 .registryVersion(var_.workspace_project_registry_metadata_registry_version())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * WorkspaceProjects can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DataIntegration/workspaceProject:WorkspaceProject test_workspace_project &#34;workspaces/{workspaceId}/projects/{projectKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataIntegration/workspaceProject:WorkspaceProject")
public class WorkspaceProject extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) A user defined description for the project.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) A user defined description for the project.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * (Updatable) The identifying key for the object.
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return (Updatable) The identifying key for the object.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    @Export(name="keyMap", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> keyMap;

    /**
     * @return A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    public Output<Map<String,Object>> keyMap() {
        return this.keyMap;
    }
    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Export(name="metadatas", refs={List.class,WorkspaceProjectMetadata.class}, tree="[0,1]")
    private Output<List<WorkspaceProjectMetadata>> metadatas;

    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Output<List<WorkspaceProjectMetadata>> metadatas() {
        return this.metadatas;
    }
    /**
     * The type of the object.
     * 
     */
    @Export(name="modelType", refs={String.class}, tree="[0]")
    private Output<String> modelType;

    /**
     * @return The type of the object.
     * 
     */
    public Output<String> modelType() {
        return this.modelType;
    }
    /**
     * (Updatable) The model version of an object.
     * 
     */
    @Export(name="modelVersion", refs={String.class}, tree="[0]")
    private Output<String> modelVersion;

    /**
     * @return (Updatable) The model version of an object.
     * 
     */
    public Output<String> modelVersion() {
        return this.modelVersion;
    }
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Export(name="objectStatus", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Output<Integer> objectStatus() {
        return this.objectStatus;
    }
    /**
     * The version of the object that is used to track changes in the object instance.
     * 
     */
    @Export(name="objectVersion", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectVersion;

    /**
     * @return The version of the object that is used to track changes in the object instance.
     * 
     */
    public Output<Integer> objectVersion() {
        return this.objectVersion;
    }
    /**
     * A reference to the object&#39;s parent.
     * 
     */
    @Export(name="parentReves", refs={List.class,WorkspaceProjectParentRef.class}, tree="[0,1]")
    private Output<List<WorkspaceProjectParentRef>> parentReves;

    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public Output<List<WorkspaceProjectParentRef>> parentReves() {
        return this.parentReves;
    }
    @Export(name="projectKey", refs={String.class}, tree="[0]")
    private Output<String> projectKey;

    public Output<String> projectKey() {
        return this.projectKey;
    }
    /**
     * (Updatable) Information about the object and its parent.
     * 
     */
    @Export(name="registryMetadata", refs={WorkspaceProjectRegistryMetadata.class}, tree="[0]")
    private Output<WorkspaceProjectRegistryMetadata> registryMetadata;

    /**
     * @return (Updatable) Information about the object and its parent.
     * 
     */
    public Output<WorkspaceProjectRegistryMetadata> registryMetadata() {
        return this.registryMetadata;
    }
    /**
     * The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkspaceProject(String name) {
        this(name, WorkspaceProjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkspaceProject(String name, WorkspaceProjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkspaceProject(String name, WorkspaceProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataIntegration/workspaceProject:WorkspaceProject", name, args == null ? WorkspaceProjectArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WorkspaceProject(String name, Output<String> id, @Nullable WorkspaceProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataIntegration/workspaceProject:WorkspaceProject", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkspaceProject get(String name, Output<String> id, @Nullable WorkspaceProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkspaceProject(name, id, state, options);
    }
}
