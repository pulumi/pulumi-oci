// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataIntegration.WorkspaceTaskArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskState;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskAuthConfig;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskCancelRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskConfigProviderDelegate;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskExecuteRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskInputPort;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskMetadata;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskOpConfigValues;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskOutputPort;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskParameter;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskParentRef;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskPollRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskRegistryMetadata;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskTypedExpression;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Workspace Task resource in Oracle Cloud Infrastructure Data Integration service.
 * 
 * Creates a new task ready for performing data integrations. There are specialized types of tasks that include data loader and integration tasks.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DataIntegration.WorkspaceTask;
 * import com.pulumi.oci.DataIntegration.WorkspaceTaskArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskRegistryMetadataArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskAuthConfigArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskAuthConfigParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskCancelRestCallConfigArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskCancelRestCallConfigConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskCancelRestCallConfigConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskConfigProviderDelegateArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskExecuteRestCallConfigArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskExecuteRestCallConfigConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskExecuteRestCallConfigConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskInputPortArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskInputPortConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskInputPortConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskInputPortConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskInputPortParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOpConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOpConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOpConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOutputPortArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOutputPortConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOutputPortConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOutputPortConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOutputPortParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParameterArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParameterConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParameterConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParameterConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParameterParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskPollRestCallConfigArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskPollRestCallConfigConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskPollRestCallConfigConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskTypedExpressionArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskTypedExpressionConfigValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskTypedExpressionConfigValuesParentRefArgs;
 * import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskTypedExpressionParentRefArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testWorkspaceTask = new WorkspaceTask("testWorkspaceTask", WorkspaceTaskArgs.builder()
 *             .identifier(workspaceTaskIdentifier)
 *             .modelType(workspaceTaskModelType)
 *             .name(workspaceTaskName)
 *             .registryMetadata(WorkspaceTaskRegistryMetadataArgs.builder()
 *                 .aggregatorKey(workspaceTaskRegistryMetadataAggregatorKey)
 *                 .isFavorite(workspaceTaskRegistryMetadataIsFavorite)
 *                 .key(workspaceTaskRegistryMetadataKey)
 *                 .labels(workspaceTaskRegistryMetadataLabels)
 *                 .registryVersion(workspaceTaskRegistryMetadataRegistryVersion)
 *                 .build())
 *             .workspaceId(testWorkspace.id())
 *             .apiCallMode(workspaceTaskApiCallMode)
 *             .authConfig(WorkspaceTaskAuthConfigArgs.builder()
 *                 .key(workspaceTaskAuthConfigKey)
 *                 .modelType(workspaceTaskAuthConfigModelType)
 *                 .modelVersion(workspaceTaskAuthConfigModelVersion)
 *                 .parentRef(WorkspaceTaskAuthConfigParentRefArgs.builder()
 *                     .parent(workspaceTaskAuthConfigParentRefParent)
 *                     .rootDocId(testRootDoc.id())
 *                     .build())
 *                 .resourcePrincipalSource(workspaceTaskAuthConfigResourcePrincipalSource)
 *                 .build())
 *             .authDetails(List.of(Map.ofEntries(
 *                 Map.entry("key", workspaceTaskAuthDetailsKey),
 *                 Map.entry("modelType", workspaceTaskAuthDetailsModelType),
 *                 Map.entry("modelVersion", workspaceTaskAuthDetailsModelVersion),
 *                 Map.entry("parentRef", List.of(Map.ofEntries(
 *                     Map.entry("parent", workspaceTaskAuthDetailsParentRefParent),
 *                     Map.entry("rootDocId", testRootDoc.id())
 *                 )))
 *             )))
 *             .cancelEndpoint(List.of(Map.ofEntries(
 *                 Map.entry("configValues", List.of(Map.ofEntries(
 *                     Map.entry("configParamValues", List.of(Map.ofEntries(
 *                         Map.entry("intValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesIntValue),
 *                         Map.entry("objectValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesObjectValue),
 *                         Map.entry("parameterValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesParameterValue),
 *                         Map.entry("refValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesRefValue),
 *                         Map.entry("rootObjectValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesRootObjectValue),
 *                         Map.entry("stringValue", workspaceTaskCancelEndpointConfigValuesConfigParamValuesStringValue)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskCancelEndpointConfigValuesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     )))
 *                 ))),
 *                 Map.entry("exprString", workspaceTaskCancelEndpointExprString),
 *                 Map.entry("key", workspaceTaskCancelEndpointKey),
 *                 Map.entry("modelType", workspaceTaskCancelEndpointModelType),
 *                 Map.entry("modelVersion", workspaceTaskCancelEndpointModelVersion),
 *                 Map.entry("objectStatus", workspaceTaskCancelEndpointObjectStatus),
 *                 Map.entry("parentRef", List.of(Map.ofEntries(
 *                     Map.entry("parent", workspaceTaskCancelEndpointParentRefParent),
 *                     Map.entry("rootDocId", testRootDoc.id())
 *                 )))
 *             )))
 *             .cancelMethodType(workspaceTaskCancelMethodType)
 *             .cancelRestCallConfig(WorkspaceTaskCancelRestCallConfigArgs.builder()
 *                 .configValues(WorkspaceTaskCancelRestCallConfigConfigValuesArgs.builder()
 *                     .configParamValues(WorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesArgs.builder()
 *                         .intValue(workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesIntValue)
 *                         .objectValue(workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesObjectValue)
 *                         .parameterValue(workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesParameterValue)
 *                         .refValue(workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRefValue)
 *                         .rootObjectValue(workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRootObjectValue)
 *                         .stringValue(workspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesStringValue)
 *                         .build())
 *                     .parentRef(WorkspaceTaskCancelRestCallConfigConfigValuesParentRefArgs.builder()
 *                         .parent(workspaceTaskCancelRestCallConfigConfigValuesParentRefParent)
 *                         .rootDocId(testRootDoc.id())
 *                         .build())
 *                     .build())
 *                 .methodType(workspaceTaskCancelRestCallConfigMethodType)
 *                 .requestHeaders(workspaceTaskCancelRestCallConfigRequestHeaders)
 *                 .build())
 *             .conditionalCompositeFieldMap(List.of(Map.ofEntries(
 *                 Map.entry("configValues", List.of(Map.ofEntries(
 *                     Map.entry("configParamValues", List.of(Map.ofEntries(
 *                         Map.entry("intValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesIntValue),
 *                         Map.entry("objectValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesObjectValue),
 *                         Map.entry("parameterValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesParameterValue),
 *                         Map.entry("refValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesRefValue),
 *                         Map.entry("rootObjectValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesRootObjectValue),
 *                         Map.entry("stringValue", workspaceTaskConditionalCompositeFieldMapConfigValuesConfigParamValuesStringValue)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskConditionalCompositeFieldMapConfigValuesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     )))
 *                 ))),
 *                 Map.entry("description", workspaceTaskConditionalCompositeFieldMapDescription),
 *                 Map.entry("fieldMapScope", List.of(Map.ofEntries(
 *                     Map.entry("modelType", workspaceTaskConditionalCompositeFieldMapFieldMapScopeModelType),
 *                     Map.entry("configValues", List.of(Map.ofEntries(
 *                         Map.entry("configParamValues", List.of(Map.ofEntries(
 *                             Map.entry("intValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesIntValue),
 *                             Map.entry("objectValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesObjectValue),
 *                             Map.entry("parameterValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesParameterValue),
 *                             Map.entry("refValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesRefValue),
 *                             Map.entry("rootObjectValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesRootObjectValue),
 *                             Map.entry("stringValue", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesConfigParamValuesStringValue)
 *                         ))),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskConditionalCompositeFieldMapFieldMapScopeConfigValuesParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         )))
 *                     ))),
 *                     Map.entry("description", workspaceTaskConditionalCompositeFieldMapFieldMapScopeDescription),
 *                     Map.entry("fromName", workspaceTaskConditionalCompositeFieldMapFieldMapScopeFromName),
 *                     Map.entry("isCascade", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsCascade),
 *                     Map.entry("isCaseSensitive", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsCaseSensitive),
 *                     Map.entry("isJavaRegexSyntax", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsJavaRegexSyntax),
 *                     Map.entry("isSkipRemainingRulesOnMatch", workspaceTaskConditionalCompositeFieldMapFieldMapScopeIsSkipRemainingRulesOnMatch),
 *                     Map.entry("key", workspaceTaskConditionalCompositeFieldMapFieldMapScopeKey),
 *                     Map.entry("matchingStrategy", workspaceTaskConditionalCompositeFieldMapFieldMapScopeMatchingStrategy),
 *                     Map.entry("modelVersion", workspaceTaskConditionalCompositeFieldMapFieldMapScopeModelVersion),
 *                     Map.entry("name", workspaceTaskConditionalCompositeFieldMapFieldMapScopeName),
 *                     Map.entry("names", workspaceTaskConditionalCompositeFieldMapFieldMapScopeNames),
 *                     Map.entry("objectStatus", workspaceTaskConditionalCompositeFieldMapFieldMapScopeObjectStatus),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskConditionalCompositeFieldMapFieldMapScopeParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     ))),
 *                     Map.entry("pattern", workspaceTaskConditionalCompositeFieldMapFieldMapScopePattern),
 *                     Map.entry("ruleType", workspaceTaskConditionalCompositeFieldMapFieldMapScopeRuleType),
 *                     Map.entry("scope", workspaceTaskConditionalCompositeFieldMapFieldMapScopeScope),
 *                     Map.entry("toName", workspaceTaskConditionalCompositeFieldMapFieldMapScopeToName),
 *                     Map.entry("types", workspaceTaskConditionalCompositeFieldMapFieldMapScopeTypes)
 *                 ))),
 *                 Map.entry("fieldMaps", workspaceTaskConditionalCompositeFieldMapFieldMaps),
 *                 Map.entry("key", workspaceTaskConditionalCompositeFieldMapKey),
 *                 Map.entry("modelType", workspaceTaskConditionalCompositeFieldMapModelType),
 *                 Map.entry("modelVersion", workspaceTaskConditionalCompositeFieldMapModelVersion),
 *                 Map.entry("objectStatus", workspaceTaskConditionalCompositeFieldMapObjectStatus),
 *                 Map.entry("parentRef", List.of(Map.ofEntries(
 *                     Map.entry("parent", workspaceTaskConditionalCompositeFieldMapParentRefParent),
 *                     Map.entry("rootDocId", testRootDoc.id())
 *                 )))
 *             )))
 *             .configProviderDelegate(WorkspaceTaskConfigProviderDelegateArgs.builder()
 *                 .bindings(WorkspaceTaskConfigProviderDelegateBindingArgs.builder()
 *                     .rootObjectValue(workspaceTaskConfigProviderDelegateBindingsRootObjectValue)
 *                     .simpleValue(workspaceTaskConfigProviderDelegateBindingsSimpleValue)
 *                     .build())
 *                 .build())
 *             .dataFlow(List.of(Map.ofEntries(
 *                 Map.entry("description", workspaceTaskDataFlowDescription),
 *                 Map.entry("flowConfigValues", List.of(Map.ofEntries(
 *                     Map.entry("configParamValues", List.of(Map.ofEntries(
 *                         Map.entry("intValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesIntValue),
 *                         Map.entry("objectValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesObjectValue),
 *                         Map.entry("parameterValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesParameterValue),
 *                         Map.entry("refValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesRefValue),
 *                         Map.entry("rootObjectValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesRootObjectValue),
 *                         Map.entry("stringValue", workspaceTaskDataFlowFlowConfigValuesConfigParamValuesStringValue)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskDataFlowFlowConfigValuesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     )))
 *                 ))),
 *                 Map.entry("identifier", workspaceTaskDataFlowIdentifier),
 *                 Map.entry("key", workspaceTaskDataFlowKey),
 *                 Map.entry("keyMap", workspaceTaskDataFlowKeyMap),
 *                 Map.entry("metadata", List.of(Map.ofEntries(
 *                     Map.entry("aggregator", List.of(Map.ofEntries(
 *                         Map.entry("description", workspaceTaskDataFlowMetadataAggregatorDescription),
 *                         Map.entry("identifier", workspaceTaskDataFlowMetadataAggregatorIdentifier),
 *                         Map.entry("key", workspaceTaskDataFlowMetadataAggregatorKey),
 *                         Map.entry("name", workspaceTaskDataFlowMetadataAggregatorName),
 *                         Map.entry("type", workspaceTaskDataFlowMetadataAggregatorType)
 *                     ))),
 *                     Map.entry("aggregatorKey", workspaceTaskDataFlowMetadataAggregatorKey),
 *                     Map.entry("countStatistics", List.of(Map.of("objectTypeCountList", List.of(Map.ofEntries(
 *                         Map.entry("objectCount", workspaceTaskDataFlowMetadataCountStatisticsObjectTypeCountListObjectCount),
 *                         Map.entry("objectType", workspaceTaskDataFlowMetadataCountStatisticsObjectTypeCountListObjectType)
 *                     ))))),
 *                     Map.entry("createdBy", workspaceTaskDataFlowMetadataCreatedBy),
 *                     Map.entry("createdByName", workspaceTaskDataFlowMetadataCreatedByName),
 *                     Map.entry("identifierPath", workspaceTaskDataFlowMetadataIdentifierPath),
 *                     Map.entry("infoFields", workspaceTaskDataFlowMetadataInfoFields),
 *                     Map.entry("isFavorite", workspaceTaskDataFlowMetadataIsFavorite),
 *                     Map.entry("labels", workspaceTaskDataFlowMetadataLabels),
 *                     Map.entry("registryVersion", workspaceTaskDataFlowMetadataRegistryVersion),
 *                     Map.entry("timeCreated", workspaceTaskDataFlowMetadataTimeCreated),
 *                     Map.entry("timeUpdated", workspaceTaskDataFlowMetadataTimeUpdated),
 *                     Map.entry("updatedBy", workspaceTaskDataFlowMetadataUpdatedBy),
 *                     Map.entry("updatedByName", workspaceTaskDataFlowMetadataUpdatedByName)
 *                 ))),
 *                 Map.entry("modelType", workspaceTaskDataFlowModelType),
 *                 Map.entry("modelVersion", workspaceTaskDataFlowModelVersion),
 *                 Map.entry("name", workspaceTaskDataFlowName),
 *                 Map.entry("nodes", List.of(Map.ofEntries(
 *                     Map.entry("configProviderDelegate", workspaceTaskDataFlowNodesConfigProviderDelegate),
 *                     Map.entry("description", workspaceTaskDataFlowNodesDescription),
 *                     Map.entry("inputLinks", List.of(Map.ofEntries(
 *                         Map.entry("description", workspaceTaskDataFlowNodesInputLinksDescription),
 *                         Map.entry("fieldMap", workspaceTaskDataFlowNodesInputLinksFieldMap),
 *                         Map.entry("fromLink", workspaceTaskDataFlowNodesInputLinksFromLink),
 *                         Map.entry("key", workspaceTaskDataFlowNodesInputLinksKey),
 *                         Map.entry("modelType", workspaceTaskDataFlowNodesInputLinksModelType),
 *                         Map.entry("modelVersion", workspaceTaskDataFlowNodesInputLinksModelVersion),
 *                         Map.entry("objectStatus", workspaceTaskDataFlowNodesInputLinksObjectStatus),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskDataFlowNodesInputLinksParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         ))),
 *                         Map.entry("port", workspaceTaskDataFlowNodesInputLinksPort)
 *                     ))),
 *                     Map.entry("key", workspaceTaskDataFlowNodesKey),
 *                     Map.entry("modelType", workspaceTaskDataFlowNodesModelType),
 *                     Map.entry("modelVersion", workspaceTaskDataFlowNodesModelVersion),
 *                     Map.entry("name", workspaceTaskDataFlowNodesName),
 *                     Map.entry("objectStatus", workspaceTaskDataFlowNodesObjectStatus),
 *                     Map.entry("operator", workspaceTaskDataFlowNodesOperator),
 *                     Map.entry("outputLinks", List.of(Map.ofEntries(
 *                         Map.entry("description", workspaceTaskDataFlowNodesOutputLinksDescription),
 *                         Map.entry("key", workspaceTaskDataFlowNodesOutputLinksKey),
 *                         Map.entry("modelType", workspaceTaskDataFlowNodesOutputLinksModelType),
 *                         Map.entry("modelVersion", workspaceTaskDataFlowNodesOutputLinksModelVersion),
 *                         Map.entry("objectStatus", workspaceTaskDataFlowNodesOutputLinksObjectStatus),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskDataFlowNodesOutputLinksParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         ))),
 *                         Map.entry("port", workspaceTaskDataFlowNodesOutputLinksPort),
 *                         Map.entry("toLinks", workspaceTaskDataFlowNodesOutputLinksToLinks)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskDataFlowNodesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     ))),
 *                     Map.entry("uiProperties", List.of(Map.ofEntries(
 *                         Map.entry("coordinateX", workspaceTaskDataFlowNodesUiPropertiesCoordinateX),
 *                         Map.entry("coordinateY", workspaceTaskDataFlowNodesUiPropertiesCoordinateY)
 *                     )))
 *                 ))),
 *                 Map.entry("objectStatus", workspaceTaskDataFlowObjectStatus),
 *                 Map.entry("objectVersion", workspaceTaskDataFlowObjectVersion),
 *                 Map.entry("parameters", List.of(Map.ofEntries(
 *                     Map.entry("configValues", List.of(Map.ofEntries(
 *                         Map.entry("configParamValues", List.of(Map.ofEntries(
 *                             Map.entry("intValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesIntValue),
 *                             Map.entry("objectValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesObjectValue),
 *                             Map.entry("parameterValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesParameterValue),
 *                             Map.entry("refValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesRefValue),
 *                             Map.entry("rootObjectValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesRootObjectValue),
 *                             Map.entry("stringValue", workspaceTaskDataFlowParametersConfigValuesConfigParamValuesStringValue)
 *                         ))),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskDataFlowParametersConfigValuesParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         )))
 *                     ))),
 *                     Map.entry("defaultValue", workspaceTaskDataFlowParametersDefaultValue),
 *                     Map.entry("description", workspaceTaskDataFlowParametersDescription),
 *                     Map.entry("isInput", workspaceTaskDataFlowParametersIsInput),
 *                     Map.entry("isOutput", workspaceTaskDataFlowParametersIsOutput),
 *                     Map.entry("key", workspaceTaskDataFlowParametersKey),
 *                     Map.entry("modelType", workspaceTaskDataFlowParametersModelType),
 *                     Map.entry("modelVersion", workspaceTaskDataFlowParametersModelVersion),
 *                     Map.entry("name", workspaceTaskDataFlowParametersName),
 *                     Map.entry("objectStatus", workspaceTaskDataFlowParametersObjectStatus),
 *                     Map.entry("outputAggregationType", workspaceTaskDataFlowParametersOutputAggregationType),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskDataFlowParametersParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     ))),
 *                     Map.entry("rootObjectDefaultValue", workspaceTaskDataFlowParametersRootObjectDefaultValue),
 *                     Map.entry("type", workspaceTaskDataFlowParametersType),
 *                     Map.entry("typeName", workspaceTaskDataFlowParametersTypeName),
 *                     Map.entry("usedFor", workspaceTaskDataFlowParametersUsedFor)
 *                 ))),
 *                 Map.entry("parentRef", List.of(Map.ofEntries(
 *                     Map.entry("parent", workspaceTaskDataFlowParentRefParent),
 *                     Map.entry("rootDocId", testRootDoc.id())
 *                 ))),
 *                 Map.entry("targetFieldMapSummary", List.of(Map.of("fieldMap", workspaceTaskDataFlowTargetFieldMapSummaryFieldMap))),
 *                 Map.entry("typedObjectMap", List.of(Map.of("typedObject", workspaceTaskDataFlowTypedObjectMapTypedObject)))
 *             )))
 *             .dataflowApplication(List.of(Map.ofEntries(
 *                 Map.entry("applicationId", testApplication.id()),
 *                 Map.entry("compartmentId", compartmentId),
 *                 Map.entry("configValues", List.of(Map.ofEntries(
 *                     Map.entry("configParamValues", List.of(Map.ofEntries(
 *                         Map.entry("intValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesIntValue),
 *                         Map.entry("objectValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesObjectValue),
 *                         Map.entry("parameterValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesParameterValue),
 *                         Map.entry("refValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesRefValue),
 *                         Map.entry("rootObjectValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesRootObjectValue),
 *                         Map.entry("stringValue", workspaceTaskDataflowApplicationConfigValuesConfigParamValuesStringValue)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskDataflowApplicationConfigValuesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     )))
 *                 )))
 *             )))
 *             .description(workspaceTaskDescription)
 *             .endpoint(List.of(Map.ofEntries(
 *                 Map.entry("configValues", List.of(Map.ofEntries(
 *                     Map.entry("configParamValues", List.of(Map.ofEntries(
 *                         Map.entry("intValue", workspaceTaskEndpointConfigValuesConfigParamValuesIntValue),
 *                         Map.entry("objectValue", workspaceTaskEndpointConfigValuesConfigParamValuesObjectValue),
 *                         Map.entry("parameterValue", workspaceTaskEndpointConfigValuesConfigParamValuesParameterValue),
 *                         Map.entry("refValue", workspaceTaskEndpointConfigValuesConfigParamValuesRefValue),
 *                         Map.entry("rootObjectValue", workspaceTaskEndpointConfigValuesConfigParamValuesRootObjectValue),
 *                         Map.entry("stringValue", workspaceTaskEndpointConfigValuesConfigParamValuesStringValue)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskEndpointConfigValuesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     )))
 *                 ))),
 *                 Map.entry("exprString", workspaceTaskEndpointExprString),
 *                 Map.entry("key", workspaceTaskEndpointKey),
 *                 Map.entry("modelType", workspaceTaskEndpointModelType),
 *                 Map.entry("modelVersion", workspaceTaskEndpointModelVersion),
 *                 Map.entry("objectStatus", workspaceTaskEndpointObjectStatus),
 *                 Map.entry("parentRef", List.of(Map.ofEntries(
 *                     Map.entry("parent", workspaceTaskEndpointParentRefParent),
 *                     Map.entry("rootDocId", testRootDoc.id())
 *                 )))
 *             )))
 *             .executeRestCallConfig(WorkspaceTaskExecuteRestCallConfigArgs.builder()
 *                 .configValues(WorkspaceTaskExecuteRestCallConfigConfigValuesArgs.builder()
 *                     .configParamValues(WorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesArgs.builder()
 *                         .intValue(workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesIntValue)
 *                         .objectValue(workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesObjectValue)
 *                         .parameterValue(workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesParameterValue)
 *                         .refValue(workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRefValue)
 *                         .rootObjectValue(workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRootObjectValue)
 *                         .stringValue(workspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesStringValue)
 *                         .build())
 *                     .parentRef(WorkspaceTaskExecuteRestCallConfigConfigValuesParentRefArgs.builder()
 *                         .parent(workspaceTaskExecuteRestCallConfigConfigValuesParentRefParent)
 *                         .rootDocId(testRootDoc.id())
 *                         .build())
 *                     .build())
 *                 .methodType(workspaceTaskExecuteRestCallConfigMethodType)
 *                 .requestHeaders(workspaceTaskExecuteRestCallConfigRequestHeaders)
 *                 .build())
 *             .headers(workspaceTaskHeaders)
 *             .inputPorts(WorkspaceTaskInputPortArgs.builder()
 *                 .modelType(workspaceTaskInputPortsModelType)
 *                 .configValues(WorkspaceTaskInputPortConfigValuesArgs.builder()
 *                     .configParamValues(WorkspaceTaskInputPortConfigValuesConfigParamValuesArgs.builder()
 *                         .intValue(workspaceTaskInputPortsConfigValuesConfigParamValuesIntValue)
 *                         .objectValue(workspaceTaskInputPortsConfigValuesConfigParamValuesObjectValue)
 *                         .parameterValue(workspaceTaskInputPortsConfigValuesConfigParamValuesParameterValue)
 *                         .refValue(workspaceTaskInputPortsConfigValuesConfigParamValuesRefValue)
 *                         .rootObjectValue(workspaceTaskInputPortsConfigValuesConfigParamValuesRootObjectValue)
 *                         .stringValue(workspaceTaskInputPortsConfigValuesConfigParamValuesStringValue)
 *                         .build())
 *                     .parentRef(WorkspaceTaskInputPortConfigValuesParentRefArgs.builder()
 *                         .parent(workspaceTaskInputPortsConfigValuesParentRefParent)
 *                         .rootDocId(testRootDoc.id())
 *                         .build())
 *                     .build())
 *                 .description(workspaceTaskInputPortsDescription)
 *                 .fields(workspaceTaskInputPortsFields)
 *                 .key(workspaceTaskInputPortsKey)
 *                 .modelVersion(workspaceTaskInputPortsModelVersion)
 *                 .name(workspaceTaskInputPortsName)
 *                 .objectStatus(workspaceTaskInputPortsObjectStatus)
 *                 .parentRef(WorkspaceTaskInputPortParentRefArgs.builder()
 *                     .parent(workspaceTaskInputPortsParentRefParent)
 *                     .rootDocId(testRootDoc.id())
 *                     .build())
 *                 .portType(workspaceTaskInputPortsPortType)
 *                 .build())
 *             .isSingleLoad(workspaceTaskIsSingleLoad)
 *             .jsonData(workspaceTaskJsonData)
 *             .key(workspaceTaskKey)
 *             .methodType(workspaceTaskMethodType)
 *             .modelVersion(workspaceTaskModelVersion)
 *             .objectStatus(workspaceTaskObjectStatus)
 *             .opConfigValues(WorkspaceTaskOpConfigValuesArgs.builder()
 *                 .configParamValues(WorkspaceTaskOpConfigValuesConfigParamValuesArgs.builder()
 *                     .intValue(workspaceTaskOpConfigValuesConfigParamValuesIntValue)
 *                     .objectValue(workspaceTaskOpConfigValuesConfigParamValuesObjectValue)
 *                     .parameterValue(workspaceTaskOpConfigValuesConfigParamValuesParameterValue)
 *                     .refValue(workspaceTaskOpConfigValuesConfigParamValuesRefValue)
 *                     .rootObjectValue(workspaceTaskOpConfigValuesConfigParamValuesRootObjectValue)
 *                     .stringValue(workspaceTaskOpConfigValuesConfigParamValuesStringValue)
 *                     .build())
 *                 .parentRef(WorkspaceTaskOpConfigValuesParentRefArgs.builder()
 *                     .parent(workspaceTaskOpConfigValuesParentRefParent)
 *                     .rootDocId(testRootDoc.id())
 *                     .build())
 *                 .build())
 *             .operation(workspaceTaskOperation)
 *             .outputPorts(WorkspaceTaskOutputPortArgs.builder()
 *                 .modelType(workspaceTaskOutputPortsModelType)
 *                 .configValues(WorkspaceTaskOutputPortConfigValuesArgs.builder()
 *                     .configParamValues(WorkspaceTaskOutputPortConfigValuesConfigParamValuesArgs.builder()
 *                         .intValue(workspaceTaskOutputPortsConfigValuesConfigParamValuesIntValue)
 *                         .objectValue(workspaceTaskOutputPortsConfigValuesConfigParamValuesObjectValue)
 *                         .parameterValue(workspaceTaskOutputPortsConfigValuesConfigParamValuesParameterValue)
 *                         .refValue(workspaceTaskOutputPortsConfigValuesConfigParamValuesRefValue)
 *                         .rootObjectValue(workspaceTaskOutputPortsConfigValuesConfigParamValuesRootObjectValue)
 *                         .stringValue(workspaceTaskOutputPortsConfigValuesConfigParamValuesStringValue)
 *                         .build())
 *                     .parentRef(WorkspaceTaskOutputPortConfigValuesParentRefArgs.builder()
 *                         .parent(workspaceTaskOutputPortsConfigValuesParentRefParent)
 *                         .rootDocId(testRootDoc.id())
 *                         .build())
 *                     .build())
 *                 .description(workspaceTaskOutputPortsDescription)
 *                 .fields(workspaceTaskOutputPortsFields)
 *                 .key(workspaceTaskOutputPortsKey)
 *                 .modelVersion(workspaceTaskOutputPortsModelVersion)
 *                 .name(workspaceTaskOutputPortsName)
 *                 .objectStatus(workspaceTaskOutputPortsObjectStatus)
 *                 .parentRef(WorkspaceTaskOutputPortParentRefArgs.builder()
 *                     .parent(workspaceTaskOutputPortsParentRefParent)
 *                     .rootDocId(testRootDoc.id())
 *                     .build())
 *                 .portType(workspaceTaskOutputPortsPortType)
 *                 .build())
 *             .parallelLoadLimit(workspaceTaskParallelLoadLimit)
 *             .parameters(WorkspaceTaskParameterArgs.builder()
 *                 .modelType(workspaceTaskParametersModelType)
 *                 .configValues(WorkspaceTaskParameterConfigValuesArgs.builder()
 *                     .configParamValues(WorkspaceTaskParameterConfigValuesConfigParamValuesArgs.builder()
 *                         .intValue(workspaceTaskParametersConfigValuesConfigParamValuesIntValue)
 *                         .objectValue(workspaceTaskParametersConfigValuesConfigParamValuesObjectValue)
 *                         .parameterValue(workspaceTaskParametersConfigValuesConfigParamValuesParameterValue)
 *                         .refValue(workspaceTaskParametersConfigValuesConfigParamValuesRefValue)
 *                         .rootObjectValue(workspaceTaskParametersConfigValuesConfigParamValuesRootObjectValue)
 *                         .stringValue(workspaceTaskParametersConfigValuesConfigParamValuesStringValue)
 *                         .build())
 *                     .parentRef(WorkspaceTaskParameterConfigValuesParentRefArgs.builder()
 *                         .parent(workspaceTaskParametersConfigValuesParentRefParent)
 *                         .rootDocId(testRootDoc.id())
 *                         .build())
 *                     .build())
 *                 .defaultValue(workspaceTaskParametersDefaultValue)
 *                 .description(workspaceTaskParametersDescription)
 *                 .isInput(workspaceTaskParametersIsInput)
 *                 .isOutput(workspaceTaskParametersIsOutput)
 *                 .key(workspaceTaskParametersKey)
 *                 .modelVersion(workspaceTaskParametersModelVersion)
 *                 .name(workspaceTaskParametersName)
 *                 .objectStatus(workspaceTaskParametersObjectStatus)
 *                 .outputAggregationType(workspaceTaskParametersOutputAggregationType)
 *                 .parentRef(WorkspaceTaskParameterParentRefArgs.builder()
 *                     .parent(workspaceTaskParametersParentRefParent)
 *                     .rootDocId(testRootDoc.id())
 *                     .build())
 *                 .rootObjectDefaultValue(workspaceTaskParametersRootObjectDefaultValue)
 *                 .type(workspaceTaskParametersType)
 *                 .typeName(workspaceTaskParametersTypeName)
 *                 .usedFor(workspaceTaskParametersUsedFor)
 *                 .build())
 *             .parentRef(WorkspaceTaskParentRefArgs.builder()
 *                 .parent(workspaceTaskParentRefParent)
 *                 .rootDocId(testRootDoc.id())
 *                 .build())
 *             .pipeline(List.of(Map.ofEntries(
 *                 Map.entry("description", workspaceTaskPipelineDescription),
 *                 Map.entry("flowConfigValues", List.of(Map.ofEntries(
 *                     Map.entry("configParamValues", List.of(Map.ofEntries(
 *                         Map.entry("intValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesIntValue),
 *                         Map.entry("objectValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesObjectValue),
 *                         Map.entry("parameterValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesParameterValue),
 *                         Map.entry("refValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesRefValue),
 *                         Map.entry("rootObjectValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesRootObjectValue),
 *                         Map.entry("stringValue", workspaceTaskPipelineFlowConfigValuesConfigParamValuesStringValue)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskPipelineFlowConfigValuesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     )))
 *                 ))),
 *                 Map.entry("identifier", workspaceTaskPipelineIdentifier),
 *                 Map.entry("key", workspaceTaskPipelineKey),
 *                 Map.entry("metadata", List.of(Map.ofEntries(
 *                     Map.entry("aggregator", List.of(Map.ofEntries(
 *                         Map.entry("description", workspaceTaskPipelineMetadataAggregatorDescription),
 *                         Map.entry("identifier", workspaceTaskPipelineMetadataAggregatorIdentifier),
 *                         Map.entry("key", workspaceTaskPipelineMetadataAggregatorKey),
 *                         Map.entry("name", workspaceTaskPipelineMetadataAggregatorName),
 *                         Map.entry("type", workspaceTaskPipelineMetadataAggregatorType)
 *                     ))),
 *                     Map.entry("aggregatorKey", workspaceTaskPipelineMetadataAggregatorKey),
 *                     Map.entry("countStatistics", List.of(Map.of("objectTypeCountList", List.of(Map.ofEntries(
 *                         Map.entry("objectCount", workspaceTaskPipelineMetadataCountStatisticsObjectTypeCountListObjectCount),
 *                         Map.entry("objectType", workspaceTaskPipelineMetadataCountStatisticsObjectTypeCountListObjectType)
 *                     ))))),
 *                     Map.entry("createdBy", workspaceTaskPipelineMetadataCreatedBy),
 *                     Map.entry("createdByName", workspaceTaskPipelineMetadataCreatedByName),
 *                     Map.entry("identifierPath", workspaceTaskPipelineMetadataIdentifierPath),
 *                     Map.entry("infoFields", workspaceTaskPipelineMetadataInfoFields),
 *                     Map.entry("isFavorite", workspaceTaskPipelineMetadataIsFavorite),
 *                     Map.entry("labels", workspaceTaskPipelineMetadataLabels),
 *                     Map.entry("registryVersion", workspaceTaskPipelineMetadataRegistryVersion),
 *                     Map.entry("timeCreated", workspaceTaskPipelineMetadataTimeCreated),
 *                     Map.entry("timeUpdated", workspaceTaskPipelineMetadataTimeUpdated),
 *                     Map.entry("updatedBy", workspaceTaskPipelineMetadataUpdatedBy),
 *                     Map.entry("updatedByName", workspaceTaskPipelineMetadataUpdatedByName)
 *                 ))),
 *                 Map.entry("modelType", workspaceTaskPipelineModelType),
 *                 Map.entry("modelVersion", workspaceTaskPipelineModelVersion),
 *                 Map.entry("name", workspaceTaskPipelineName),
 *                 Map.entry("nodes", List.of(Map.ofEntries(
 *                     Map.entry("configProviderDelegate", workspaceTaskPipelineNodesConfigProviderDelegate),
 *                     Map.entry("description", workspaceTaskPipelineNodesDescription),
 *                     Map.entry("inputLinks", List.of(Map.ofEntries(
 *                         Map.entry("description", workspaceTaskPipelineNodesInputLinksDescription),
 *                         Map.entry("fieldMap", workspaceTaskPipelineNodesInputLinksFieldMap),
 *                         Map.entry("fromLink", workspaceTaskPipelineNodesInputLinksFromLink),
 *                         Map.entry("key", workspaceTaskPipelineNodesInputLinksKey),
 *                         Map.entry("modelType", workspaceTaskPipelineNodesInputLinksModelType),
 *                         Map.entry("modelVersion", workspaceTaskPipelineNodesInputLinksModelVersion),
 *                         Map.entry("objectStatus", workspaceTaskPipelineNodesInputLinksObjectStatus),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskPipelineNodesInputLinksParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         ))),
 *                         Map.entry("port", workspaceTaskPipelineNodesInputLinksPort)
 *                     ))),
 *                     Map.entry("key", workspaceTaskPipelineNodesKey),
 *                     Map.entry("modelType", workspaceTaskPipelineNodesModelType),
 *                     Map.entry("modelVersion", workspaceTaskPipelineNodesModelVersion),
 *                     Map.entry("name", workspaceTaskPipelineNodesName),
 *                     Map.entry("objectStatus", workspaceTaskPipelineNodesObjectStatus),
 *                     Map.entry("operator", workspaceTaskPipelineNodesOperator),
 *                     Map.entry("outputLinks", List.of(Map.ofEntries(
 *                         Map.entry("description", workspaceTaskPipelineNodesOutputLinksDescription),
 *                         Map.entry("key", workspaceTaskPipelineNodesOutputLinksKey),
 *                         Map.entry("modelType", workspaceTaskPipelineNodesOutputLinksModelType),
 *                         Map.entry("modelVersion", workspaceTaskPipelineNodesOutputLinksModelVersion),
 *                         Map.entry("objectStatus", workspaceTaskPipelineNodesOutputLinksObjectStatus),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskPipelineNodesOutputLinksParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         ))),
 *                         Map.entry("port", workspaceTaskPipelineNodesOutputLinksPort),
 *                         Map.entry("toLinks", workspaceTaskPipelineNodesOutputLinksToLinks)
 *                     ))),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskPipelineNodesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     ))),
 *                     Map.entry("uiProperties", List.of(Map.ofEntries(
 *                         Map.entry("coordinateX", workspaceTaskPipelineNodesUiPropertiesCoordinateX),
 *                         Map.entry("coordinateY", workspaceTaskPipelineNodesUiPropertiesCoordinateY)
 *                     )))
 *                 ))),
 *                 Map.entry("objectStatus", workspaceTaskPipelineObjectStatus),
 *                 Map.entry("objectVersion", workspaceTaskPipelineObjectVersion),
 *                 Map.entry("parameters", List.of(Map.ofEntries(
 *                     Map.entry("configValues", List.of(Map.ofEntries(
 *                         Map.entry("configParamValues", List.of(Map.ofEntries(
 *                             Map.entry("intValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesIntValue),
 *                             Map.entry("objectValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesObjectValue),
 *                             Map.entry("parameterValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesParameterValue),
 *                             Map.entry("refValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesRefValue),
 *                             Map.entry("rootObjectValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesRootObjectValue),
 *                             Map.entry("stringValue", workspaceTaskPipelineParametersConfigValuesConfigParamValuesStringValue)
 *                         ))),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskPipelineParametersConfigValuesParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         )))
 *                     ))),
 *                     Map.entry("defaultValue", workspaceTaskPipelineParametersDefaultValue),
 *                     Map.entry("description", workspaceTaskPipelineParametersDescription),
 *                     Map.entry("isInput", workspaceTaskPipelineParametersIsInput),
 *                     Map.entry("isOutput", workspaceTaskPipelineParametersIsOutput),
 *                     Map.entry("key", workspaceTaskPipelineParametersKey),
 *                     Map.entry("modelType", workspaceTaskPipelineParametersModelType),
 *                     Map.entry("modelVersion", workspaceTaskPipelineParametersModelVersion),
 *                     Map.entry("name", workspaceTaskPipelineParametersName),
 *                     Map.entry("objectStatus", workspaceTaskPipelineParametersObjectStatus),
 *                     Map.entry("outputAggregationType", workspaceTaskPipelineParametersOutputAggregationType),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskPipelineParametersParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     ))),
 *                     Map.entry("rootObjectDefaultValue", workspaceTaskPipelineParametersRootObjectDefaultValue),
 *                     Map.entry("type", workspaceTaskPipelineParametersType),
 *                     Map.entry("typeName", workspaceTaskPipelineParametersTypeName),
 *                     Map.entry("usedFor", workspaceTaskPipelineParametersUsedFor)
 *                 ))),
 *                 Map.entry("parentRef", List.of(Map.ofEntries(
 *                     Map.entry("parent", workspaceTaskPipelineParentRefParent),
 *                     Map.entry("rootDocId", testRootDoc.id())
 *                 ))),
 *                 Map.entry("variables", List.of(Map.ofEntries(
 *                     Map.entry("configValues", List.of(Map.ofEntries(
 *                         Map.entry("configParamValues", List.of(Map.ofEntries(
 *                             Map.entry("intValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesIntValue),
 *                             Map.entry("objectValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesObjectValue),
 *                             Map.entry("parameterValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesParameterValue),
 *                             Map.entry("refValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesRefValue),
 *                             Map.entry("rootObjectValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesRootObjectValue),
 *                             Map.entry("stringValue", workspaceTaskPipelineVariablesConfigValuesConfigParamValuesStringValue)
 *                         ))),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskPipelineVariablesConfigValuesParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         )))
 *                     ))),
 *                     Map.entry("defaultValue", workspaceTaskPipelineVariablesDefaultValue),
 *                     Map.entry("description", workspaceTaskPipelineVariablesDescription),
 *                     Map.entry("identifier", workspaceTaskPipelineVariablesIdentifier),
 *                     Map.entry("key", workspaceTaskPipelineVariablesKey),
 *                     Map.entry("modelType", workspaceTaskPipelineVariablesModelType),
 *                     Map.entry("modelVersion", workspaceTaskPipelineVariablesModelVersion),
 *                     Map.entry("name", workspaceTaskPipelineVariablesName),
 *                     Map.entry("objectStatus", workspaceTaskPipelineVariablesObjectStatus),
 *                     Map.entry("objectVersion", workspaceTaskPipelineVariablesObjectVersion),
 *                     Map.entry("parentRef", List.of(Map.ofEntries(
 *                         Map.entry("parent", workspaceTaskPipelineVariablesParentRefParent),
 *                         Map.entry("rootDocId", testRootDoc.id())
 *                     ))),
 *                     Map.entry("rootObjectDefaultValue", List.of(Map.ofEntries(
 *                         Map.entry("key", workspaceTaskPipelineVariablesRootObjectDefaultValueKey),
 *                         Map.entry("modelType", workspaceTaskPipelineVariablesRootObjectDefaultValueModelType),
 *                         Map.entry("modelVersion", workspaceTaskPipelineVariablesRootObjectDefaultValueModelVersion),
 *                         Map.entry("objectStatus", workspaceTaskPipelineVariablesRootObjectDefaultValueObjectStatus),
 *                         Map.entry("parentRef", List.of(Map.ofEntries(
 *                             Map.entry("parent", workspaceTaskPipelineVariablesRootObjectDefaultValueParentRefParent),
 *                             Map.entry("rootDocId", testRootDoc.id())
 *                         )))
 *                     ))),
 *                     Map.entry("type", workspaceTaskPipelineVariablesType)
 *                 )))
 *             )))
 *             .pollRestCallConfig(WorkspaceTaskPollRestCallConfigArgs.builder()
 *                 .configValues(WorkspaceTaskPollRestCallConfigConfigValuesArgs.builder()
 *                     .configParamValues(WorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesArgs.builder()
 *                         .intValue(workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesIntValue)
 *                         .objectValue(workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesObjectValue)
 *                         .parameterValue(workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesParameterValue)
 *                         .refValue(workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRefValue)
 *                         .rootObjectValue(workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRootObjectValue)
 *                         .stringValue(workspaceTaskPollRestCallConfigConfigValuesConfigParamValuesStringValue)
 *                         .build())
 *                     .parentRef(WorkspaceTaskPollRestCallConfigConfigValuesParentRefArgs.builder()
 *                         .parent(workspaceTaskPollRestCallConfigConfigValuesParentRefParent)
 *                         .rootDocId(testRootDoc.id())
 *                         .build())
 *                     .build())
 *                 .methodType(workspaceTaskPollRestCallConfigMethodType)
 *                 .requestHeaders(workspaceTaskPollRestCallConfigRequestHeaders)
 *                 .build())
 *             .script(List.of(Map.ofEntries(
 *                 Map.entry("key", workspaceTaskScriptKey),
 *                 Map.entry("modelType", workspaceTaskScriptModelType),
 *                 Map.entry("modelVersion", workspaceTaskScriptModelVersion),
 *                 Map.entry("objectStatus", workspaceTaskScriptObjectStatus),
 *                 Map.entry("parentRef", List.of(Map.ofEntries(
 *                     Map.entry("parent", workspaceTaskScriptParentRefParent),
 *                     Map.entry("rootDocId", testRootDoc.id())
 *                 )))
 *             )))
 *             .sqlScriptType(workspaceTaskSqlScriptType)
 *             .typedExpressions(WorkspaceTaskTypedExpressionArgs.builder()
 *                 .configValues(WorkspaceTaskTypedExpressionConfigValuesArgs.builder()
 *                     .configParamValues(WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesArgs.builder()
 *                         .intValue(workspaceTaskTypedExpressionsConfigValuesConfigParamValuesIntValue)
 *                         .objectValue(workspaceTaskTypedExpressionsConfigValuesConfigParamValuesObjectValue)
 *                         .parameterValue(workspaceTaskTypedExpressionsConfigValuesConfigParamValuesParameterValue)
 *                         .refValue(workspaceTaskTypedExpressionsConfigValuesConfigParamValuesRefValue)
 *                         .rootObjectValue(workspaceTaskTypedExpressionsConfigValuesConfigParamValuesRootObjectValue)
 *                         .stringValue(workspaceTaskTypedExpressionsConfigValuesConfigParamValuesStringValue)
 *                         .build())
 *                     .parentRef(WorkspaceTaskTypedExpressionConfigValuesParentRefArgs.builder()
 *                         .parent(workspaceTaskTypedExpressionsConfigValuesParentRefParent)
 *                         .rootDocId(testRootDoc.id())
 *                         .build())
 *                     .build())
 *                 .description(workspaceTaskTypedExpressionsDescription)
 *                 .expression(workspaceTaskTypedExpressionsExpression)
 *                 .key(workspaceTaskTypedExpressionsKey)
 *                 .modelType(workspaceTaskTypedExpressionsModelType)
 *                 .modelVersion(workspaceTaskTypedExpressionsModelVersion)
 *                 .name(workspaceTaskTypedExpressionsName)
 *                 .objectStatus(workspaceTaskTypedExpressionsObjectStatus)
 *                 .parentRef(WorkspaceTaskTypedExpressionParentRefArgs.builder()
 *                     .parent(workspaceTaskTypedExpressionsParentRefParent)
 *                     .rootDocId(testRootDoc.id())
 *                     .build())
 *                 .type(workspaceTaskTypedExpressionsType)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * WorkspaceTasks can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:DataIntegration/workspaceTask:WorkspaceTask test_workspace_task &#34;workspaces/{workspaceId}/tasks/{taskKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataIntegration/workspaceTask:WorkspaceTask")
public class WorkspaceTask extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    @Export(name="apiCallMode", refs={String.class}, tree="[0]")
    private Output<String> apiCallMode;

    /**
     * @return (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    public Output<String> apiCallMode() {
        return this.apiCallMode;
    }
    /**
     * (Updatable) Authentication configuration for Generic REST invocation.
     * 
     */
    @Export(name="authConfig", refs={WorkspaceTaskAuthConfig.class}, tree="[0]")
    private Output<WorkspaceTaskAuthConfig> authConfig;

    /**
     * @return (Updatable) Authentication configuration for Generic REST invocation.
     * 
     */
    public Output<WorkspaceTaskAuthConfig> authConfig() {
        return this.authConfig;
    }
    /**
     * (Updatable) The REST API configuration for cancelling the task.
     * 
     */
    @Export(name="cancelRestCallConfig", refs={WorkspaceTaskCancelRestCallConfig.class}, tree="[0]")
    private Output<WorkspaceTaskCancelRestCallConfig> cancelRestCallConfig;

    /**
     * @return (Updatable) The REST API configuration for cancelling the task.
     * 
     */
    public Output<WorkspaceTaskCancelRestCallConfig> cancelRestCallConfig() {
        return this.cancelRestCallConfig;
    }
    /**
     * (Updatable) The type to create a config provider.
     * 
     */
    @Export(name="configProviderDelegate", refs={WorkspaceTaskConfigProviderDelegate.class}, tree="[0]")
    private Output<WorkspaceTaskConfigProviderDelegate> configProviderDelegate;

    /**
     * @return (Updatable) The type to create a config provider.
     * 
     */
    public Output<WorkspaceTaskConfigProviderDelegate> configProviderDelegate() {
        return this.configProviderDelegate;
    }
    /**
     * (Updatable) Detailed description for the object.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) Detailed description for the object.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) The REST API configuration for execution.
     * 
     */
    @Export(name="executeRestCallConfig", refs={WorkspaceTaskExecuteRestCallConfig.class}, tree="[0]")
    private Output<WorkspaceTaskExecuteRestCallConfig> executeRestCallConfig;

    /**
     * @return (Updatable) The REST API configuration for execution.
     * 
     */
    public Output<WorkspaceTaskExecuteRestCallConfig> executeRestCallConfig() {
        return this.executeRestCallConfig;
    }
    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * (Updatable) An array of input ports.
     * 
     */
    @Export(name="inputPorts", refs={List.class,WorkspaceTaskInputPort.class}, tree="[0,1]")
    private Output<List<WorkspaceTaskInputPort>> inputPorts;

    /**
     * @return (Updatable) An array of input ports.
     * 
     */
    public Output<List<WorkspaceTaskInputPort>> inputPorts() {
        return this.inputPorts;
    }
    /**
     * (Updatable) Defines whether Data Loader task is used for single load or multiple
     * 
     */
    @Export(name="isSingleLoad", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isSingleLoad;

    /**
     * @return (Updatable) Defines whether Data Loader task is used for single load or multiple
     * 
     */
    public Output<Boolean> isSingleLoad() {
        return this.isSingleLoad;
    }
    /**
     * (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    @Export(name="keyMap", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> keyMap;

    /**
     * @return A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    public Output<Map<String,String>> keyMap() {
        return this.keyMap;
    }
    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Export(name="metadatas", refs={List.class,WorkspaceTaskMetadata.class}, tree="[0,1]")
    private Output<List<WorkspaceTaskMetadata>> metadatas;

    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Output<List<WorkspaceTaskMetadata>> metadatas() {
        return this.metadatas;
    }
    /**
     * (Updatable) The type of the task.
     * 
     */
    @Export(name="modelType", refs={String.class}, tree="[0]")
    private Output<String> modelType;

    /**
     * @return (Updatable) The type of the task.
     * 
     */
    public Output<String> modelType() {
        return this.modelType;
    }
    /**
     * (Updatable) The object&#39;s model version.
     * 
     */
    @Export(name="modelVersion", refs={String.class}, tree="[0]")
    private Output<String> modelVersion;

    /**
     * @return (Updatable) The object&#39;s model version.
     * 
     */
    public Output<String> modelVersion() {
        return this.modelVersion;
    }
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Export(name="objectStatus", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Output<Integer> objectStatus() {
        return this.objectStatus;
    }
    /**
     * This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    @Export(name="objectVersion", refs={Integer.class}, tree="[0]")
    private Output<Integer> objectVersion;

    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Output<Integer> objectVersion() {
        return this.objectVersion;
    }
    /**
     * (Updatable) Configuration values can be string, objects, or parameters.
     * 
     */
    @Export(name="opConfigValues", refs={WorkspaceTaskOpConfigValues.class}, tree="[0]")
    private Output<WorkspaceTaskOpConfigValues> opConfigValues;

    /**
     * @return (Updatable) Configuration values can be string, objects, or parameters.
     * 
     */
    public Output<WorkspaceTaskOpConfigValues> opConfigValues() {
        return this.opConfigValues;
    }
    /**
     * (Updatable) Describes the shape of the execution result
     * 
     */
    @Export(name="operation", refs={String.class}, tree="[0]")
    private Output<String> operation;

    /**
     * @return (Updatable) Describes the shape of the execution result
     * 
     */
    public Output<String> operation() {
        return this.operation;
    }
    /**
     * (Updatable) An array of output ports.
     * 
     */
    @Export(name="outputPorts", refs={List.class,WorkspaceTaskOutputPort.class}, tree="[0,1]")
    private Output<List<WorkspaceTaskOutputPort>> outputPorts;

    /**
     * @return (Updatable) An array of output ports.
     * 
     */
    public Output<List<WorkspaceTaskOutputPort>> outputPorts() {
        return this.outputPorts;
    }
    /**
     * (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    @Export(name="parallelLoadLimit", refs={Integer.class}, tree="[0]")
    private Output<Integer> parallelLoadLimit;

    /**
     * @return (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    public Output<Integer> parallelLoadLimit() {
        return this.parallelLoadLimit;
    }
    /**
     * (Updatable) An array of parameters.
     * 
     */
    @Export(name="parameters", refs={List.class,WorkspaceTaskParameter.class}, tree="[0,1]")
    private Output<List<WorkspaceTaskParameter>> parameters;

    /**
     * @return (Updatable) An array of parameters.
     * 
     */
    public Output<List<WorkspaceTaskParameter>> parameters() {
        return this.parameters;
    }
    /**
     * (Updatable) A reference to the object&#39;s parent.
     * 
     */
    @Export(name="parentRef", refs={WorkspaceTaskParentRef.class}, tree="[0]")
    private Output<WorkspaceTaskParentRef> parentRef;

    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    public Output<WorkspaceTaskParentRef> parentRef() {
        return this.parentRef;
    }
    /**
     * (Updatable) The REST API configuration for polling.
     * 
     */
    @Export(name="pollRestCallConfig", refs={WorkspaceTaskPollRestCallConfig.class}, tree="[0]")
    private Output<WorkspaceTaskPollRestCallConfig> pollRestCallConfig;

    /**
     * @return (Updatable) The REST API configuration for polling.
     * 
     */
    public Output<WorkspaceTaskPollRestCallConfig> pollRestCallConfig() {
        return this.pollRestCallConfig;
    }
    /**
     * (Updatable) Information about the object and its parent.
     * 
     */
    @Export(name="registryMetadata", refs={WorkspaceTaskRegistryMetadata.class}, tree="[0]")
    private Output<WorkspaceTaskRegistryMetadata> registryMetadata;

    /**
     * @return (Updatable) Information about the object and its parent.
     * 
     */
    public Output<WorkspaceTaskRegistryMetadata> registryMetadata() {
        return this.registryMetadata;
    }
    /**
     * (Updatable) List of typed expressions.
     * 
     */
    @Export(name="typedExpressions", refs={List.class,WorkspaceTaskTypedExpression.class}, tree="[0,1]")
    private Output<List<WorkspaceTaskTypedExpression>> typedExpressions;

    /**
     * @return (Updatable) List of typed expressions.
     * 
     */
    public Output<List<WorkspaceTaskTypedExpression>> typedExpressions() {
        return this.typedExpressions;
    }
    /**
     * The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkspaceTask(java.lang.String name) {
        this(name, WorkspaceTaskArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkspaceTask(java.lang.String name, WorkspaceTaskArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkspaceTask(java.lang.String name, WorkspaceTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataIntegration/workspaceTask:WorkspaceTask", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WorkspaceTask(java.lang.String name, Output<java.lang.String> id, @Nullable WorkspaceTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataIntegration/workspaceTask:WorkspaceTask", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkspaceTaskArgs makeArgs(WorkspaceTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkspaceTaskArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkspaceTask get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkspaceTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkspaceTask(name, id, state, options);
    }
}
