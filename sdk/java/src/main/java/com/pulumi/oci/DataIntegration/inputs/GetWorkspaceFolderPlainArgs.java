// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetWorkspaceFolderPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWorkspaceFolderPlainArgs Empty = new GetWorkspaceFolderPlainArgs();

    /**
     * The folder key.
     * 
     */
    @Import(name="folderKey", required=true)
    private String folderKey;

    /**
     * @return The folder key.
     * 
     */
    public String folderKey() {
        return this.folderKey;
    }

    /**
     * The workspace ID.
     * 
     */
    @Import(name="workspaceId", required=true)
    private String workspaceId;

    /**
     * @return The workspace ID.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    private GetWorkspaceFolderPlainArgs() {}

    private GetWorkspaceFolderPlainArgs(GetWorkspaceFolderPlainArgs $) {
        this.folderKey = $.folderKey;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWorkspaceFolderPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWorkspaceFolderPlainArgs $;

        public Builder() {
            $ = new GetWorkspaceFolderPlainArgs();
        }

        public Builder(GetWorkspaceFolderPlainArgs defaults) {
            $ = new GetWorkspaceFolderPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param folderKey The folder key.
         * 
         * @return builder
         * 
         */
        public Builder folderKey(String folderKey) {
            $.folderKey = folderKey;
            return this;
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public GetWorkspaceFolderPlainArgs build() {
            if ($.folderKey == null) {
                throw new MissingRequiredPropertyException("GetWorkspaceFolderPlainArgs", "folderKey");
            }
            if ($.workspaceId == null) {
                throw new MissingRequiredPropertyException("GetWorkspaceFolderPlainArgs", "workspaceId");
            }
            return $;
        }
    }

}
