// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetWorkspaceTaskPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWorkspaceTaskPlainArgs Empty = new GetWorkspaceTaskPlainArgs();

    /**
     * Used to expand references of the object. If value is true, then all referenced objects are expanded. If value is false, then shallow objects are returned in place of references. Default is false. &lt;br&gt;&lt;br&gt;&lt;B&gt;Example:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?expandReferences=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
     * 
     */
    @Import(name="expandReferences", required=true)
    private String expandReferences;

    /**
     * @return Used to expand references of the object. If value is true, then all referenced objects are expanded. If value is false, then shallow objects are returned in place of references. Default is false. &lt;br&gt;&lt;br&gt;&lt;B&gt;Example:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?expandReferences=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
     * 
     */
    public String expandReferences() {
        return this.expandReferences;
    }

    /**
     * The key of the object.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return The key of the object.
     * 
     */
    public String key() {
        return this.key;
    }

    /**
     * The workspace ID.
     * 
     */
    @Import(name="workspaceId", required=true)
    private String workspaceId;

    /**
     * @return The workspace ID.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    private GetWorkspaceTaskPlainArgs() {}

    private GetWorkspaceTaskPlainArgs(GetWorkspaceTaskPlainArgs $) {
        this.expandReferences = $.expandReferences;
        this.key = $.key;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWorkspaceTaskPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWorkspaceTaskPlainArgs $;

        public Builder() {
            $ = new GetWorkspaceTaskPlainArgs();
        }

        public Builder(GetWorkspaceTaskPlainArgs defaults) {
            $ = new GetWorkspaceTaskPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expandReferences Used to expand references of the object. If value is true, then all referenced objects are expanded. If value is false, then shallow objects are returned in place of references. Default is false. &lt;br&gt;&lt;br&gt;&lt;B&gt;Example:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?expandReferences=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
         * 
         * @return builder
         * 
         */
        public Builder expandReferences(String expandReferences) {
            $.expandReferences = expandReferences;
            return this;
        }

        /**
         * @param key The key of the object.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public GetWorkspaceTaskPlainArgs build() {
            if ($.expandReferences == null) {
                throw new MissingRequiredPropertyException("GetWorkspaceTaskPlainArgs", "expandReferences");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("GetWorkspaceTaskPlainArgs", "key");
            }
            if ($.workspaceId == null) {
                throw new MissingRequiredPropertyException("GetWorkspaceTaskPlainArgs", "workspaceId");
            }
            return $;
        }
    }

}
