// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationDependentObjectMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationParentRefArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationPublishedObjectMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationRegistryMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationSourceApplicationInfoArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceApplicationState extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceApplicationState Empty = new WorkspaceApplicationState();

    /**
     * The source application version of the application.
     * 
     */
    @Import(name="applicationVersion")
    private @Nullable Output<Integer> applicationVersion;

    /**
     * @return The source application version of the application.
     * 
     */
    public Optional<Output<Integer>> applicationVersion() {
        return Optional.ofNullable(this.applicationVersion);
    }

    /**
     * OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * A list of dependent objects in this patch.
     * 
     */
    @Import(name="dependentObjectMetadatas")
    private @Nullable Output<List<WorkspaceApplicationDependentObjectMetadataArgs>> dependentObjectMetadatas;

    /**
     * @return A list of dependent objects in this patch.
     * 
     */
    public Optional<Output<List<WorkspaceApplicationDependentObjectMetadataArgs>>> dependentObjectMetadatas() {
        return Optional.ofNullable(this.dependentObjectMetadatas);
    }

    /**
     * (Updatable) Detailed description for the object.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Detailed description for the object.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * (Updatable) Currently not used on application creation. Reserved for future.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return (Updatable) Currently not used on application creation. Reserved for future.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    @Import(name="keyMap")
    private @Nullable Output<Map<String,Object>> keyMap;

    /**
     * @return A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    public Optional<Output<Map<String,Object>>> keyMap() {
        return Optional.ofNullable(this.keyMap);
    }

    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Import(name="metadatas")
    private @Nullable Output<List<WorkspaceApplicationMetadataArgs>> metadatas;

    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Optional<Output<List<WorkspaceApplicationMetadataArgs>>> metadatas() {
        return Optional.ofNullable(this.metadatas);
    }

    /**
     * (Updatable) The type of the application.
     * 
     */
    @Import(name="modelType")
    private @Nullable Output<String> modelType;

    /**
     * @return (Updatable) The type of the application.
     * 
     */
    public Optional<Output<String>> modelType() {
        return Optional.ofNullable(this.modelType);
    }

    /**
     * (Updatable) The object&#39;s model version.
     * 
     */
    @Import(name="modelVersion")
    private @Nullable Output<String> modelVersion;

    /**
     * @return (Updatable) The object&#39;s model version.
     * 
     */
    public Optional<Output<String>> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }

    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Import(name="objectStatus")
    private @Nullable Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Output<Integer>> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }

    /**
     * The object version.
     * 
     */
    @Import(name="objectVersion")
    private @Nullable Output<Integer> objectVersion;

    /**
     * @return The object version.
     * 
     */
    public Optional<Output<Integer>> objectVersion() {
        return Optional.ofNullable(this.objectVersion);
    }

    /**
     * A reference to the object&#39;s parent.
     * 
     */
    @Import(name="parentReves")
    private @Nullable Output<List<WorkspaceApplicationParentRefArgs>> parentReves;

    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public Optional<Output<List<WorkspaceApplicationParentRefArgs>>> parentReves() {
        return Optional.ofNullable(this.parentReves);
    }

    /**
     * A list of objects that are published or unpublished in this patch.
     * 
     */
    @Import(name="publishedObjectMetadatas")
    private @Nullable Output<List<WorkspaceApplicationPublishedObjectMetadataArgs>> publishedObjectMetadatas;

    /**
     * @return A list of objects that are published or unpublished in this patch.
     * 
     */
    public Optional<Output<List<WorkspaceApplicationPublishedObjectMetadataArgs>>> publishedObjectMetadatas() {
        return Optional.ofNullable(this.publishedObjectMetadatas);
    }

    /**
     * Information about the object and its parent.
     * 
     */
    @Import(name="registryMetadata")
    private @Nullable Output<WorkspaceApplicationRegistryMetadataArgs> registryMetadata;

    /**
     * @return Information about the object and its parent.
     * 
     */
    public Optional<Output<WorkspaceApplicationRegistryMetadataArgs>> registryMetadata() {
        return Optional.ofNullable(this.registryMetadata);
    }

    /**
     * The information about the application.
     * 
     */
    @Import(name="sourceApplicationInfo")
    private @Nullable Output<WorkspaceApplicationSourceApplicationInfoArgs> sourceApplicationInfo;

    /**
     * @return The information about the application.
     * 
     */
    public Optional<Output<WorkspaceApplicationSourceApplicationInfoArgs>> sourceApplicationInfo() {
        return Optional.ofNullable(this.sourceApplicationInfo);
    }

    /**
     * (Updatable) The current state of the workspace.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The current state of the workspace.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the application was created, in the timestamp format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the application was created, in the timestamp format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the application was patched, in the timestamp format defined by RFC3339.
     * 
     */
    @Import(name="timePatched")
    private @Nullable Output<String> timePatched;

    /**
     * @return The date and time the application was patched, in the timestamp format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timePatched() {
        return Optional.ofNullable(this.timePatched);
    }

    /**
     * The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private WorkspaceApplicationState() {}

    private WorkspaceApplicationState(WorkspaceApplicationState $) {
        this.applicationVersion = $.applicationVersion;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.dependentObjectMetadatas = $.dependentObjectMetadatas;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.identifier = $.identifier;
        this.key = $.key;
        this.keyMap = $.keyMap;
        this.metadatas = $.metadatas;
        this.modelType = $.modelType;
        this.modelVersion = $.modelVersion;
        this.name = $.name;
        this.objectStatus = $.objectStatus;
        this.objectVersion = $.objectVersion;
        this.parentReves = $.parentReves;
        this.publishedObjectMetadatas = $.publishedObjectMetadatas;
        this.registryMetadata = $.registryMetadata;
        this.sourceApplicationInfo = $.sourceApplicationInfo;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timePatched = $.timePatched;
        this.timeUpdated = $.timeUpdated;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceApplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceApplicationState $;

        public Builder() {
            $ = new WorkspaceApplicationState();
        }

        public Builder(WorkspaceApplicationState defaults) {
            $ = new WorkspaceApplicationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationVersion The source application version of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationVersion(@Nullable Output<Integer> applicationVersion) {
            $.applicationVersion = applicationVersion;
            return this;
        }

        /**
         * @param applicationVersion The source application version of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationVersion(Integer applicationVersion) {
            return applicationVersion(Output.of(applicationVersion));
        }

        /**
         * @param compartmentId OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param dependentObjectMetadatas A list of dependent objects in this patch.
         * 
         * @return builder
         * 
         */
        public Builder dependentObjectMetadatas(@Nullable Output<List<WorkspaceApplicationDependentObjectMetadataArgs>> dependentObjectMetadatas) {
            $.dependentObjectMetadatas = dependentObjectMetadatas;
            return this;
        }

        /**
         * @param dependentObjectMetadatas A list of dependent objects in this patch.
         * 
         * @return builder
         * 
         */
        public Builder dependentObjectMetadatas(List<WorkspaceApplicationDependentObjectMetadataArgs> dependentObjectMetadatas) {
            return dependentObjectMetadatas(Output.of(dependentObjectMetadatas));
        }

        /**
         * @param dependentObjectMetadatas A list of dependent objects in this patch.
         * 
         * @return builder
         * 
         */
        public Builder dependentObjectMetadatas(WorkspaceApplicationDependentObjectMetadataArgs... dependentObjectMetadatas) {
            return dependentObjectMetadatas(List.of(dependentObjectMetadatas));
        }

        /**
         * @param description (Updatable) Detailed description for the object.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Detailed description for the object.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param identifier (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param key (Updatable) Currently not used on application creation. Reserved for future.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key (Updatable) Currently not used on application creation. Reserved for future.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param keyMap A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
         * 
         * @return builder
         * 
         */
        public Builder keyMap(@Nullable Output<Map<String,Object>> keyMap) {
            $.keyMap = keyMap;
            return this;
        }

        /**
         * @param keyMap A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
         * 
         * @return builder
         * 
         */
        public Builder keyMap(Map<String,Object> keyMap) {
            return keyMap(Output.of(keyMap));
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(@Nullable Output<List<WorkspaceApplicationMetadataArgs>> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(List<WorkspaceApplicationMetadataArgs> metadatas) {
            return metadatas(Output.of(metadatas));
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(WorkspaceApplicationMetadataArgs... metadatas) {
            return metadatas(List.of(metadatas));
        }

        /**
         * @param modelType (Updatable) The type of the application.
         * 
         * @return builder
         * 
         */
        public Builder modelType(@Nullable Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        /**
         * @param modelType (Updatable) The type of the application.
         * 
         * @return builder
         * 
         */
        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        /**
         * @param modelVersion (Updatable) The object&#39;s model version.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(@Nullable Output<String> modelVersion) {
            $.modelVersion = modelVersion;
            return this;
        }

        /**
         * @param modelVersion (Updatable) The object&#39;s model version.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(String modelVersion) {
            return modelVersion(Output.of(modelVersion));
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(@Nullable Output<Integer> objectStatus) {
            $.objectStatus = objectStatus;
            return this;
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(Integer objectStatus) {
            return objectStatus(Output.of(objectStatus));
        }

        /**
         * @param objectVersion The object version.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(@Nullable Output<Integer> objectVersion) {
            $.objectVersion = objectVersion;
            return this;
        }

        /**
         * @param objectVersion The object version.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(Integer objectVersion) {
            return objectVersion(Output.of(objectVersion));
        }

        /**
         * @param parentReves A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentReves(@Nullable Output<List<WorkspaceApplicationParentRefArgs>> parentReves) {
            $.parentReves = parentReves;
            return this;
        }

        /**
         * @param parentReves A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentReves(List<WorkspaceApplicationParentRefArgs> parentReves) {
            return parentReves(Output.of(parentReves));
        }

        /**
         * @param parentReves A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentReves(WorkspaceApplicationParentRefArgs... parentReves) {
            return parentReves(List.of(parentReves));
        }

        /**
         * @param publishedObjectMetadatas A list of objects that are published or unpublished in this patch.
         * 
         * @return builder
         * 
         */
        public Builder publishedObjectMetadatas(@Nullable Output<List<WorkspaceApplicationPublishedObjectMetadataArgs>> publishedObjectMetadatas) {
            $.publishedObjectMetadatas = publishedObjectMetadatas;
            return this;
        }

        /**
         * @param publishedObjectMetadatas A list of objects that are published or unpublished in this patch.
         * 
         * @return builder
         * 
         */
        public Builder publishedObjectMetadatas(List<WorkspaceApplicationPublishedObjectMetadataArgs> publishedObjectMetadatas) {
            return publishedObjectMetadatas(Output.of(publishedObjectMetadatas));
        }

        /**
         * @param publishedObjectMetadatas A list of objects that are published or unpublished in this patch.
         * 
         * @return builder
         * 
         */
        public Builder publishedObjectMetadatas(WorkspaceApplicationPublishedObjectMetadataArgs... publishedObjectMetadatas) {
            return publishedObjectMetadatas(List.of(publishedObjectMetadatas));
        }

        /**
         * @param registryMetadata Information about the object and its parent.
         * 
         * @return builder
         * 
         */
        public Builder registryMetadata(@Nullable Output<WorkspaceApplicationRegistryMetadataArgs> registryMetadata) {
            $.registryMetadata = registryMetadata;
            return this;
        }

        /**
         * @param registryMetadata Information about the object and its parent.
         * 
         * @return builder
         * 
         */
        public Builder registryMetadata(WorkspaceApplicationRegistryMetadataArgs registryMetadata) {
            return registryMetadata(Output.of(registryMetadata));
        }

        /**
         * @param sourceApplicationInfo The information about the application.
         * 
         * @return builder
         * 
         */
        public Builder sourceApplicationInfo(@Nullable Output<WorkspaceApplicationSourceApplicationInfoArgs> sourceApplicationInfo) {
            $.sourceApplicationInfo = sourceApplicationInfo;
            return this;
        }

        /**
         * @param sourceApplicationInfo The information about the application.
         * 
         * @return builder
         * 
         */
        public Builder sourceApplicationInfo(WorkspaceApplicationSourceApplicationInfoArgs sourceApplicationInfo) {
            return sourceApplicationInfo(Output.of(sourceApplicationInfo));
        }

        /**
         * @param state (Updatable) The current state of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The current state of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the application was created, in the timestamp format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the application was created, in the timestamp format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timePatched The date and time the application was patched, in the timestamp format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timePatched(@Nullable Output<String> timePatched) {
            $.timePatched = timePatched;
            return this;
        }

        /**
         * @param timePatched The date and time the application was patched, in the timestamp format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timePatched(String timePatched) {
            return timePatched(Output.of(timePatched));
        }

        /**
         * @param timeUpdated The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public WorkspaceApplicationState build() {
            return $;
        }
    }

}
