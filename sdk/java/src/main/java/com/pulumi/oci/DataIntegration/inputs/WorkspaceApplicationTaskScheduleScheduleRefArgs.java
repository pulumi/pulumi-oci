// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceApplicationTaskScheduleScheduleRefArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceApplicationTaskScheduleScheduleRefArgs Empty = new WorkspaceApplicationTaskScheduleScheduleRefArgs();

    /**
     * (Updatable) The description of the aggregator.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the aggregator.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The model that holds the frequency details.
     * 
     */
    @Import(name="frequencyDetails")
    private @Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs> frequencyDetails;

    /**
     * @return (Updatable) The model that holds the frequency details.
     * 
     */
    public Optional<Output<WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs>> frequencyDetails() {
        return Optional.ofNullable(this.frequencyDetails);
    }

    /**
     * (Updatable) The identifier of the aggregator.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return (Updatable) The identifier of the aggregator.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * (Updatable) A flag to indicate daylight saving.
     * 
     */
    @Import(name="isDaylightAdjustmentEnabled")
    private @Nullable Output<Boolean> isDaylightAdjustmentEnabled;

    /**
     * @return (Updatable) A flag to indicate daylight saving.
     * 
     */
    public Optional<Output<Boolean>> isDaylightAdjustmentEnabled() {
        return Optional.ofNullable(this.isDaylightAdjustmentEnabled);
    }

    /**
     * (Updatable) The key of the aggregator object.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return (Updatable) The key of the aggregator object.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs> metadata;

    /**
     * @return (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Optional<Output<WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * (Updatable) The type of the object.
     * 
     */
    @Import(name="modelType")
    private @Nullable Output<String> modelType;

    /**
     * @return (Updatable) The type of the object.
     * 
     */
    public Optional<Output<String>> modelType() {
        return Optional.ofNullable(this.modelType);
    }

    /**
     * (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    @Import(name="modelVersion")
    private @Nullable Output<String> modelVersion;

    /**
     * @return (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    public Optional<Output<String>> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }

    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Import(name="objectStatus")
    private @Nullable Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Output<Integer>> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }

    /**
     * (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    @Import(name="objectVersion")
    private @Nullable Output<Integer> objectVersion;

    /**
     * @return (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Optional<Output<Integer>> objectVersion() {
        return Optional.ofNullable(this.objectVersion);
    }

    /**
     * (Updatable) A reference to the object&#39;s parent.
     * 
     */
    @Import(name="parentRef")
    private @Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs> parentRef;

    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    public Optional<Output<WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs>> parentRef() {
        return Optional.ofNullable(this.parentRef);
    }

    /**
     * (Updatable) The timezone for the schedule.
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return (Updatable) The timezone for the schedule.
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    private WorkspaceApplicationTaskScheduleScheduleRefArgs() {}

    private WorkspaceApplicationTaskScheduleScheduleRefArgs(WorkspaceApplicationTaskScheduleScheduleRefArgs $) {
        this.description = $.description;
        this.frequencyDetails = $.frequencyDetails;
        this.identifier = $.identifier;
        this.isDaylightAdjustmentEnabled = $.isDaylightAdjustmentEnabled;
        this.key = $.key;
        this.metadata = $.metadata;
        this.modelType = $.modelType;
        this.modelVersion = $.modelVersion;
        this.name = $.name;
        this.objectStatus = $.objectStatus;
        this.objectVersion = $.objectVersion;
        this.parentRef = $.parentRef;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceApplicationTaskScheduleScheduleRefArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceApplicationTaskScheduleScheduleRefArgs $;

        public Builder() {
            $ = new WorkspaceApplicationTaskScheduleScheduleRefArgs();
        }

        public Builder(WorkspaceApplicationTaskScheduleScheduleRefArgs defaults) {
            $ = new WorkspaceApplicationTaskScheduleScheduleRefArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description (Updatable) The description of the aggregator.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the aggregator.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param frequencyDetails (Updatable) The model that holds the frequency details.
         * 
         * @return builder
         * 
         */
        public Builder frequencyDetails(@Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs> frequencyDetails) {
            $.frequencyDetails = frequencyDetails;
            return this;
        }

        /**
         * @param frequencyDetails (Updatable) The model that holds the frequency details.
         * 
         * @return builder
         * 
         */
        public Builder frequencyDetails(WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs frequencyDetails) {
            return frequencyDetails(Output.of(frequencyDetails));
        }

        /**
         * @param identifier (Updatable) The identifier of the aggregator.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier (Updatable) The identifier of the aggregator.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param isDaylightAdjustmentEnabled (Updatable) A flag to indicate daylight saving.
         * 
         * @return builder
         * 
         */
        public Builder isDaylightAdjustmentEnabled(@Nullable Output<Boolean> isDaylightAdjustmentEnabled) {
            $.isDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            return this;
        }

        /**
         * @param isDaylightAdjustmentEnabled (Updatable) A flag to indicate daylight saving.
         * 
         * @return builder
         * 
         */
        public Builder isDaylightAdjustmentEnabled(Boolean isDaylightAdjustmentEnabled) {
            return isDaylightAdjustmentEnabled(Output.of(isDaylightAdjustmentEnabled));
        }

        /**
         * @param key (Updatable) The key of the aggregator object.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key (Updatable) The key of the aggregator object.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param metadata (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadata(WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param modelType (Updatable) The type of the object.
         * 
         * @return builder
         * 
         */
        public Builder modelType(@Nullable Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        /**
         * @param modelType (Updatable) The type of the object.
         * 
         * @return builder
         * 
         */
        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        /**
         * @param modelVersion (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(@Nullable Output<String> modelVersion) {
            $.modelVersion = modelVersion;
            return this;
        }

        /**
         * @param modelVersion (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(String modelVersion) {
            return modelVersion(Output.of(modelVersion));
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(@Nullable Output<Integer> objectStatus) {
            $.objectStatus = objectStatus;
            return this;
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(Integer objectStatus) {
            return objectStatus(Output.of(objectStatus));
        }

        /**
         * @param objectVersion (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(@Nullable Output<Integer> objectVersion) {
            $.objectVersion = objectVersion;
            return this;
        }

        /**
         * @param objectVersion (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(Integer objectVersion) {
            return objectVersion(Output.of(objectVersion));
        }

        /**
         * @param parentRef (Updatable) A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentRef(@Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs> parentRef) {
            $.parentRef = parentRef;
            return this;
        }

        /**
         * @param parentRef (Updatable) A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentRef(WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs parentRef) {
            return parentRef(Output.of(parentRef));
        }

        /**
         * @param timezone (Updatable) The timezone for the schedule.
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone (Updatable) The timezone for the schedule.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public WorkspaceApplicationTaskScheduleScheduleRefArgs build() {
            return $;
        }
    }

}
