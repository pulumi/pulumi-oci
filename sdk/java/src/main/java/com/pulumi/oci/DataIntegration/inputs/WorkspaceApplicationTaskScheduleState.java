// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleLastRunDetailArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleParentRefArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleRegistryMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceApplicationTaskScheduleScheduleRefArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceApplicationTaskScheduleState extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceApplicationTaskScheduleState Empty = new WorkspaceApplicationTaskScheduleState();

    /**
     * The application key.
     * 
     */
    @Import(name="applicationKey")
    private @Nullable Output<String> applicationKey;

    /**
     * @return The application key.
     * 
     */
    public Optional<Output<String>> applicationKey() {
        return Optional.ofNullable(this.applicationKey);
    }

    /**
     * (Updatable) The authorization mode for the task.
     * 
     */
    @Import(name="authMode")
    private @Nullable Output<String> authMode;

    /**
     * @return (Updatable) The authorization mode for the task.
     * 
     */
    public Optional<Output<String>> authMode() {
        return Optional.ofNullable(this.authMode);
    }

    /**
     * (Updatable) The information about the configuration provider.
     * 
     */
    @Import(name="configProviderDelegate")
    private @Nullable Output<String> configProviderDelegate;

    /**
     * @return (Updatable) The information about the configuration provider.
     * 
     */
    public Optional<Output<String>> configProviderDelegate() {
        return Optional.ofNullable(this.configProviderDelegate);
    }

    /**
     * (Updatable) Detailed description for the object.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Detailed description for the object.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The end time in milliseconds.
     * 
     */
    @Import(name="endTimeMillis")
    private @Nullable Output<String> endTimeMillis;

    /**
     * @return (Updatable) The end time in milliseconds.
     * 
     */
    public Optional<Output<String>> endTimeMillis() {
        return Optional.ofNullable(this.endTimeMillis);
    }

    /**
     * (Updatable) The expected duration of the task execution.
     * 
     */
    @Import(name="expectedDuration")
    private @Nullable Output<Double> expectedDuration;

    /**
     * @return (Updatable) The expected duration of the task execution.
     * 
     */
    public Optional<Output<Double>> expectedDuration() {
        return Optional.ofNullable(this.expectedDuration);
    }

    /**
     * (Updatable) The expected duration unit of the task execution.
     * 
     */
    @Import(name="expectedDurationUnit")
    private @Nullable Output<String> expectedDurationUnit;

    /**
     * @return (Updatable) The expected duration unit of the task execution.
     * 
     */
    public Optional<Output<String>> expectedDurationUnit() {
        return Optional.ofNullable(this.expectedDurationUnit);
    }

    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * (Updatable) Whether the backfill is enabled.
     * 
     */
    @Import(name="isBackfillEnabled")
    private @Nullable Output<Boolean> isBackfillEnabled;

    /**
     * @return (Updatable) Whether the backfill is enabled.
     * 
     */
    public Optional<Output<Boolean>> isBackfillEnabled() {
        return Optional.ofNullable(this.isBackfillEnabled);
    }

    /**
     * (Updatable) Whether the same task can be executed concurrently.
     * 
     */
    @Import(name="isConcurrentAllowed")
    private @Nullable Output<Boolean> isConcurrentAllowed;

    /**
     * @return (Updatable) Whether the same task can be executed concurrently.
     * 
     */
    public Optional<Output<Boolean>> isConcurrentAllowed() {
        return Optional.ofNullable(this.isConcurrentAllowed);
    }

    /**
     * (Updatable) Whether the task schedule is enabled.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Whether the task schedule is enabled.
     * 
     */
    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * (Updatable) Generated key that can be used in API calls to identify taskSchedule. On scenarios where reference to the taskSchedule is needed, a value can be passed in create.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return (Updatable) Generated key that can be used in API calls to identify taskSchedule. On scenarios where reference to the taskSchedule is needed, a value can be passed in create.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The last run details for the task run.
     * 
     */
    @Import(name="lastRunDetails")
    private @Nullable Output<List<WorkspaceApplicationTaskScheduleLastRunDetailArgs>> lastRunDetails;

    /**
     * @return The last run details for the task run.
     * 
     */
    public Optional<Output<List<WorkspaceApplicationTaskScheduleLastRunDetailArgs>>> lastRunDetails() {
        return Optional.ofNullable(this.lastRunDetails);
    }

    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Import(name="metadatas")
    private @Nullable Output<List<WorkspaceApplicationTaskScheduleMetadataArgs>> metadatas;

    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Optional<Output<List<WorkspaceApplicationTaskScheduleMetadataArgs>>> metadatas() {
        return Optional.ofNullable(this.metadatas);
    }

    /**
     * The type of the object.
     * 
     */
    @Import(name="modelType")
    private @Nullable Output<String> modelType;

    /**
     * @return The type of the object.
     * 
     */
    public Optional<Output<String>> modelType() {
        return Optional.ofNullable(this.modelType);
    }

    /**
     * (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    @Import(name="modelVersion")
    private @Nullable Output<String> modelVersion;

    /**
     * @return (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    public Optional<Output<String>> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }

    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nextRunTimeMillis")
    private @Nullable Output<String> nextRunTimeMillis;

    public Optional<Output<String>> nextRunTimeMillis() {
        return Optional.ofNullable(this.nextRunTimeMillis);
    }

    /**
     * (Updatable) The number of retries.
     * 
     */
    @Import(name="numberOfRetries")
    private @Nullable Output<Integer> numberOfRetries;

    /**
     * @return (Updatable) The number of retries.
     * 
     */
    public Optional<Output<Integer>> numberOfRetries() {
        return Optional.ofNullable(this.numberOfRetries);
    }

    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Import(name="objectStatus")
    private @Nullable Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Output<Integer>> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }

    /**
     * (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    @Import(name="objectVersion")
    private @Nullable Output<Integer> objectVersion;

    /**
     * @return (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Optional<Output<Integer>> objectVersion() {
        return Optional.ofNullable(this.objectVersion);
    }

    /**
     * (Updatable) A reference to the object&#39;s parent.
     * 
     */
    @Import(name="parentRef")
    private @Nullable Output<WorkspaceApplicationTaskScheduleParentRefArgs> parentRef;

    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    public Optional<Output<WorkspaceApplicationTaskScheduleParentRefArgs>> parentRef() {
        return Optional.ofNullable(this.parentRef);
    }

    /**
     * (Updatable) Information about the object and its parent.
     * 
     */
    @Import(name="registryMetadata")
    private @Nullable Output<WorkspaceApplicationTaskScheduleRegistryMetadataArgs> registryMetadata;

    /**
     * @return (Updatable) Information about the object and its parent.
     * 
     */
    public Optional<Output<WorkspaceApplicationTaskScheduleRegistryMetadataArgs>> registryMetadata() {
        return Optional.ofNullable(this.registryMetadata);
    }

    /**
     * The number of retry attempts.
     * 
     */
    @Import(name="retryAttempts")
    private @Nullable Output<Integer> retryAttempts;

    /**
     * @return The number of retry attempts.
     * 
     */
    public Optional<Output<Integer>> retryAttempts() {
        return Optional.ofNullable(this.retryAttempts);
    }

    /**
     * (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
     * 
     */
    @Import(name="retryDelay")
    private @Nullable Output<Double> retryDelay;

    /**
     * @return (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
     * 
     */
    public Optional<Output<Double>> retryDelay() {
        return Optional.ofNullable(this.retryDelay);
    }

    /**
     * (Updatable) The unit for the retry delay.
     * 
     */
    @Import(name="retryDelayUnit")
    private @Nullable Output<String> retryDelayUnit;

    /**
     * @return (Updatable) The unit for the retry delay.
     * 
     */
    public Optional<Output<String>> retryDelayUnit() {
        return Optional.ofNullable(this.retryDelayUnit);
    }

    /**
     * (Updatable) The schedule object
     * 
     */
    @Import(name="scheduleRef")
    private @Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefArgs> scheduleRef;

    /**
     * @return (Updatable) The schedule object
     * 
     */
    public Optional<Output<WorkspaceApplicationTaskScheduleScheduleRefArgs>> scheduleRef() {
        return Optional.ofNullable(this.scheduleRef);
    }

    /**
     * (Updatable) The start time in milliseconds.
     * 
     */
    @Import(name="startTimeMillis")
    private @Nullable Output<String> startTimeMillis;

    /**
     * @return (Updatable) The start time in milliseconds.
     * 
     */
    public Optional<Output<String>> startTimeMillis() {
        return Optional.ofNullable(this.startTimeMillis);
    }

    /**
     * The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private WorkspaceApplicationTaskScheduleState() {}

    private WorkspaceApplicationTaskScheduleState(WorkspaceApplicationTaskScheduleState $) {
        this.applicationKey = $.applicationKey;
        this.authMode = $.authMode;
        this.configProviderDelegate = $.configProviderDelegate;
        this.description = $.description;
        this.endTimeMillis = $.endTimeMillis;
        this.expectedDuration = $.expectedDuration;
        this.expectedDurationUnit = $.expectedDurationUnit;
        this.identifier = $.identifier;
        this.isBackfillEnabled = $.isBackfillEnabled;
        this.isConcurrentAllowed = $.isConcurrentAllowed;
        this.isEnabled = $.isEnabled;
        this.key = $.key;
        this.lastRunDetails = $.lastRunDetails;
        this.metadatas = $.metadatas;
        this.modelType = $.modelType;
        this.modelVersion = $.modelVersion;
        this.name = $.name;
        this.nextRunTimeMillis = $.nextRunTimeMillis;
        this.numberOfRetries = $.numberOfRetries;
        this.objectStatus = $.objectStatus;
        this.objectVersion = $.objectVersion;
        this.parentRef = $.parentRef;
        this.registryMetadata = $.registryMetadata;
        this.retryAttempts = $.retryAttempts;
        this.retryDelay = $.retryDelay;
        this.retryDelayUnit = $.retryDelayUnit;
        this.scheduleRef = $.scheduleRef;
        this.startTimeMillis = $.startTimeMillis;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceApplicationTaskScheduleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceApplicationTaskScheduleState $;

        public Builder() {
            $ = new WorkspaceApplicationTaskScheduleState();
        }

        public Builder(WorkspaceApplicationTaskScheduleState defaults) {
            $ = new WorkspaceApplicationTaskScheduleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationKey The application key.
         * 
         * @return builder
         * 
         */
        public Builder applicationKey(@Nullable Output<String> applicationKey) {
            $.applicationKey = applicationKey;
            return this;
        }

        /**
         * @param applicationKey The application key.
         * 
         * @return builder
         * 
         */
        public Builder applicationKey(String applicationKey) {
            return applicationKey(Output.of(applicationKey));
        }

        /**
         * @param authMode (Updatable) The authorization mode for the task.
         * 
         * @return builder
         * 
         */
        public Builder authMode(@Nullable Output<String> authMode) {
            $.authMode = authMode;
            return this;
        }

        /**
         * @param authMode (Updatable) The authorization mode for the task.
         * 
         * @return builder
         * 
         */
        public Builder authMode(String authMode) {
            return authMode(Output.of(authMode));
        }

        /**
         * @param configProviderDelegate (Updatable) The information about the configuration provider.
         * 
         * @return builder
         * 
         */
        public Builder configProviderDelegate(@Nullable Output<String> configProviderDelegate) {
            $.configProviderDelegate = configProviderDelegate;
            return this;
        }

        /**
         * @param configProviderDelegate (Updatable) The information about the configuration provider.
         * 
         * @return builder
         * 
         */
        public Builder configProviderDelegate(String configProviderDelegate) {
            return configProviderDelegate(Output.of(configProviderDelegate));
        }

        /**
         * @param description (Updatable) Detailed description for the object.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Detailed description for the object.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param endTimeMillis (Updatable) The end time in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder endTimeMillis(@Nullable Output<String> endTimeMillis) {
            $.endTimeMillis = endTimeMillis;
            return this;
        }

        /**
         * @param endTimeMillis (Updatable) The end time in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder endTimeMillis(String endTimeMillis) {
            return endTimeMillis(Output.of(endTimeMillis));
        }

        /**
         * @param expectedDuration (Updatable) The expected duration of the task execution.
         * 
         * @return builder
         * 
         */
        public Builder expectedDuration(@Nullable Output<Double> expectedDuration) {
            $.expectedDuration = expectedDuration;
            return this;
        }

        /**
         * @param expectedDuration (Updatable) The expected duration of the task execution.
         * 
         * @return builder
         * 
         */
        public Builder expectedDuration(Double expectedDuration) {
            return expectedDuration(Output.of(expectedDuration));
        }

        /**
         * @param expectedDurationUnit (Updatable) The expected duration unit of the task execution.
         * 
         * @return builder
         * 
         */
        public Builder expectedDurationUnit(@Nullable Output<String> expectedDurationUnit) {
            $.expectedDurationUnit = expectedDurationUnit;
            return this;
        }

        /**
         * @param expectedDurationUnit (Updatable) The expected duration unit of the task execution.
         * 
         * @return builder
         * 
         */
        public Builder expectedDurationUnit(String expectedDurationUnit) {
            return expectedDurationUnit(Output.of(expectedDurationUnit));
        }

        /**
         * @param identifier (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param isBackfillEnabled (Updatable) Whether the backfill is enabled.
         * 
         * @return builder
         * 
         */
        public Builder isBackfillEnabled(@Nullable Output<Boolean> isBackfillEnabled) {
            $.isBackfillEnabled = isBackfillEnabled;
            return this;
        }

        /**
         * @param isBackfillEnabled (Updatable) Whether the backfill is enabled.
         * 
         * @return builder
         * 
         */
        public Builder isBackfillEnabled(Boolean isBackfillEnabled) {
            return isBackfillEnabled(Output.of(isBackfillEnabled));
        }

        /**
         * @param isConcurrentAllowed (Updatable) Whether the same task can be executed concurrently.
         * 
         * @return builder
         * 
         */
        public Builder isConcurrentAllowed(@Nullable Output<Boolean> isConcurrentAllowed) {
            $.isConcurrentAllowed = isConcurrentAllowed;
            return this;
        }

        /**
         * @param isConcurrentAllowed (Updatable) Whether the same task can be executed concurrently.
         * 
         * @return builder
         * 
         */
        public Builder isConcurrentAllowed(Boolean isConcurrentAllowed) {
            return isConcurrentAllowed(Output.of(isConcurrentAllowed));
        }

        /**
         * @param isEnabled (Updatable) Whether the task schedule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled (Updatable) Whether the task schedule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param key (Updatable) Generated key that can be used in API calls to identify taskSchedule. On scenarios where reference to the taskSchedule is needed, a value can be passed in create.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key (Updatable) Generated key that can be used in API calls to identify taskSchedule. On scenarios where reference to the taskSchedule is needed, a value can be passed in create.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param lastRunDetails The last run details for the task run.
         * 
         * @return builder
         * 
         */
        public Builder lastRunDetails(@Nullable Output<List<WorkspaceApplicationTaskScheduleLastRunDetailArgs>> lastRunDetails) {
            $.lastRunDetails = lastRunDetails;
            return this;
        }

        /**
         * @param lastRunDetails The last run details for the task run.
         * 
         * @return builder
         * 
         */
        public Builder lastRunDetails(List<WorkspaceApplicationTaskScheduleLastRunDetailArgs> lastRunDetails) {
            return lastRunDetails(Output.of(lastRunDetails));
        }

        /**
         * @param lastRunDetails The last run details for the task run.
         * 
         * @return builder
         * 
         */
        public Builder lastRunDetails(WorkspaceApplicationTaskScheduleLastRunDetailArgs... lastRunDetails) {
            return lastRunDetails(List.of(lastRunDetails));
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(@Nullable Output<List<WorkspaceApplicationTaskScheduleMetadataArgs>> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(List<WorkspaceApplicationTaskScheduleMetadataArgs> metadatas) {
            return metadatas(Output.of(metadatas));
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(WorkspaceApplicationTaskScheduleMetadataArgs... metadatas) {
            return metadatas(List.of(metadatas));
        }

        /**
         * @param modelType The type of the object.
         * 
         * @return builder
         * 
         */
        public Builder modelType(@Nullable Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        /**
         * @param modelType The type of the object.
         * 
         * @return builder
         * 
         */
        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        /**
         * @param modelVersion (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(@Nullable Output<String> modelVersion) {
            $.modelVersion = modelVersion;
            return this;
        }

        /**
         * @param modelVersion (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(String modelVersion) {
            return modelVersion(Output.of(modelVersion));
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nextRunTimeMillis(@Nullable Output<String> nextRunTimeMillis) {
            $.nextRunTimeMillis = nextRunTimeMillis;
            return this;
        }

        public Builder nextRunTimeMillis(String nextRunTimeMillis) {
            return nextRunTimeMillis(Output.of(nextRunTimeMillis));
        }

        /**
         * @param numberOfRetries (Updatable) The number of retries.
         * 
         * @return builder
         * 
         */
        public Builder numberOfRetries(@Nullable Output<Integer> numberOfRetries) {
            $.numberOfRetries = numberOfRetries;
            return this;
        }

        /**
         * @param numberOfRetries (Updatable) The number of retries.
         * 
         * @return builder
         * 
         */
        public Builder numberOfRetries(Integer numberOfRetries) {
            return numberOfRetries(Output.of(numberOfRetries));
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(@Nullable Output<Integer> objectStatus) {
            $.objectStatus = objectStatus;
            return this;
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(Integer objectStatus) {
            return objectStatus(Output.of(objectStatus));
        }

        /**
         * @param objectVersion (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(@Nullable Output<Integer> objectVersion) {
            $.objectVersion = objectVersion;
            return this;
        }

        /**
         * @param objectVersion (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(Integer objectVersion) {
            return objectVersion(Output.of(objectVersion));
        }

        /**
         * @param parentRef (Updatable) A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentRef(@Nullable Output<WorkspaceApplicationTaskScheduleParentRefArgs> parentRef) {
            $.parentRef = parentRef;
            return this;
        }

        /**
         * @param parentRef (Updatable) A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentRef(WorkspaceApplicationTaskScheduleParentRefArgs parentRef) {
            return parentRef(Output.of(parentRef));
        }

        /**
         * @param registryMetadata (Updatable) Information about the object and its parent.
         * 
         * @return builder
         * 
         */
        public Builder registryMetadata(@Nullable Output<WorkspaceApplicationTaskScheduleRegistryMetadataArgs> registryMetadata) {
            $.registryMetadata = registryMetadata;
            return this;
        }

        /**
         * @param registryMetadata (Updatable) Information about the object and its parent.
         * 
         * @return builder
         * 
         */
        public Builder registryMetadata(WorkspaceApplicationTaskScheduleRegistryMetadataArgs registryMetadata) {
            return registryMetadata(Output.of(registryMetadata));
        }

        /**
         * @param retryAttempts The number of retry attempts.
         * 
         * @return builder
         * 
         */
        public Builder retryAttempts(@Nullable Output<Integer> retryAttempts) {
            $.retryAttempts = retryAttempts;
            return this;
        }

        /**
         * @param retryAttempts The number of retry attempts.
         * 
         * @return builder
         * 
         */
        public Builder retryAttempts(Integer retryAttempts) {
            return retryAttempts(Output.of(retryAttempts));
        }

        /**
         * @param retryDelay (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
         * 
         * @return builder
         * 
         */
        public Builder retryDelay(@Nullable Output<Double> retryDelay) {
            $.retryDelay = retryDelay;
            return this;
        }

        /**
         * @param retryDelay (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
         * 
         * @return builder
         * 
         */
        public Builder retryDelay(Double retryDelay) {
            return retryDelay(Output.of(retryDelay));
        }

        /**
         * @param retryDelayUnit (Updatable) The unit for the retry delay.
         * 
         * @return builder
         * 
         */
        public Builder retryDelayUnit(@Nullable Output<String> retryDelayUnit) {
            $.retryDelayUnit = retryDelayUnit;
            return this;
        }

        /**
         * @param retryDelayUnit (Updatable) The unit for the retry delay.
         * 
         * @return builder
         * 
         */
        public Builder retryDelayUnit(String retryDelayUnit) {
            return retryDelayUnit(Output.of(retryDelayUnit));
        }

        /**
         * @param scheduleRef (Updatable) The schedule object
         * 
         * @return builder
         * 
         */
        public Builder scheduleRef(@Nullable Output<WorkspaceApplicationTaskScheduleScheduleRefArgs> scheduleRef) {
            $.scheduleRef = scheduleRef;
            return this;
        }

        /**
         * @param scheduleRef (Updatable) The schedule object
         * 
         * @return builder
         * 
         */
        public Builder scheduleRef(WorkspaceApplicationTaskScheduleScheduleRefArgs scheduleRef) {
            return scheduleRef(Output.of(scheduleRef));
        }

        /**
         * @param startTimeMillis (Updatable) The start time in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder startTimeMillis(@Nullable Output<String> startTimeMillis) {
            $.startTimeMillis = startTimeMillis;
            return this;
        }

        /**
         * @param startTimeMillis (Updatable) The start time in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder startTimeMillis(String startTimeMillis) {
            return startTimeMillis(Output.of(startTimeMillis));
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public WorkspaceApplicationTaskScheduleState build() {
            return $;
        }
    }

}
