// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceExportRequestExportedItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceExportRequestExportedItemArgs Empty = new WorkspaceExportRequestExportedItemArgs();

    /**
     * Aggregator key
     * 
     */
    @Import(name="aggregatorKey")
    private @Nullable Output<String> aggregatorKey;

    /**
     * @return Aggregator key
     * 
     */
    public Optional<Output<String>> aggregatorKey() {
        return Optional.ofNullable(this.aggregatorKey);
    }

    /**
     * Object identifier
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return Object identifier
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Export object request key
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Export object request key
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Name of the export request.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the export request.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Object name path
     * 
     */
    @Import(name="namePath")
    private @Nullable Output<String> namePath;

    /**
     * @return Object name path
     * 
     */
    public Optional<Output<String>> namePath() {
        return Optional.ofNullable(this.namePath);
    }

    /**
     * Object type
     * 
     */
    @Import(name="objectType")
    private @Nullable Output<String> objectType;

    /**
     * @return Object type
     * 
     */
    public Optional<Output<String>> objectType() {
        return Optional.ofNullable(this.objectType);
    }

    /**
     * Object version
     * 
     */
    @Import(name="objectVersion")
    private @Nullable Output<String> objectVersion;

    /**
     * @return Object version
     * 
     */
    public Optional<Output<String>> objectVersion() {
        return Optional.ofNullable(this.objectVersion);
    }

    /**
     * time at which this object was last updated.
     * 
     */
    @Import(name="timeUpdatedInMillis")
    private @Nullable Output<String> timeUpdatedInMillis;

    /**
     * @return time at which this object was last updated.
     * 
     */
    public Optional<Output<String>> timeUpdatedInMillis() {
        return Optional.ofNullable(this.timeUpdatedInMillis);
    }

    private WorkspaceExportRequestExportedItemArgs() {}

    private WorkspaceExportRequestExportedItemArgs(WorkspaceExportRequestExportedItemArgs $) {
        this.aggregatorKey = $.aggregatorKey;
        this.identifier = $.identifier;
        this.key = $.key;
        this.name = $.name;
        this.namePath = $.namePath;
        this.objectType = $.objectType;
        this.objectVersion = $.objectVersion;
        this.timeUpdatedInMillis = $.timeUpdatedInMillis;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceExportRequestExportedItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceExportRequestExportedItemArgs $;

        public Builder() {
            $ = new WorkspaceExportRequestExportedItemArgs();
        }

        public Builder(WorkspaceExportRequestExportedItemArgs defaults) {
            $ = new WorkspaceExportRequestExportedItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregatorKey Aggregator key
         * 
         * @return builder
         * 
         */
        public Builder aggregatorKey(@Nullable Output<String> aggregatorKey) {
            $.aggregatorKey = aggregatorKey;
            return this;
        }

        /**
         * @param aggregatorKey Aggregator key
         * 
         * @return builder
         * 
         */
        public Builder aggregatorKey(String aggregatorKey) {
            return aggregatorKey(Output.of(aggregatorKey));
        }

        /**
         * @param identifier Object identifier
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Object identifier
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param key Export object request key
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Export object request key
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param name Name of the export request.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the export request.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namePath Object name path
         * 
         * @return builder
         * 
         */
        public Builder namePath(@Nullable Output<String> namePath) {
            $.namePath = namePath;
            return this;
        }

        /**
         * @param namePath Object name path
         * 
         * @return builder
         * 
         */
        public Builder namePath(String namePath) {
            return namePath(Output.of(namePath));
        }

        /**
         * @param objectType Object type
         * 
         * @return builder
         * 
         */
        public Builder objectType(@Nullable Output<String> objectType) {
            $.objectType = objectType;
            return this;
        }

        /**
         * @param objectType Object type
         * 
         * @return builder
         * 
         */
        public Builder objectType(String objectType) {
            return objectType(Output.of(objectType));
        }

        /**
         * @param objectVersion Object version
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(@Nullable Output<String> objectVersion) {
            $.objectVersion = objectVersion;
            return this;
        }

        /**
         * @param objectVersion Object version
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(String objectVersion) {
            return objectVersion(Output.of(objectVersion));
        }

        /**
         * @param timeUpdatedInMillis time at which this object was last updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdatedInMillis(@Nullable Output<String> timeUpdatedInMillis) {
            $.timeUpdatedInMillis = timeUpdatedInMillis;
            return this;
        }

        /**
         * @param timeUpdatedInMillis time at which this object was last updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdatedInMillis(String timeUpdatedInMillis) {
            return timeUpdatedInMillis(Output.of(timeUpdatedInMillis));
        }

        public WorkspaceExportRequestExportedItemArgs build() {
            return $;
        }
    }

}
