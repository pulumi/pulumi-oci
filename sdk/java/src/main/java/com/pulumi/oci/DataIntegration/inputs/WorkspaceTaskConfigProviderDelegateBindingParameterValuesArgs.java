// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskConfigProviderDelegateBindingParameterValuesRootObjectValueArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs Empty = new WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs();

    /**
     * The root object value, used in custom parameters.
     * 
     */
    @Import(name="rootObjectValue")
    private @Nullable Output<WorkspaceTaskConfigProviderDelegateBindingParameterValuesRootObjectValueArgs> rootObjectValue;

    /**
     * @return The root object value, used in custom parameters.
     * 
     */
    public Optional<Output<WorkspaceTaskConfigProviderDelegateBindingParameterValuesRootObjectValueArgs>> rootObjectValue() {
        return Optional.ofNullable(this.rootObjectValue);
    }

    /**
     * A simple value for the parameter.
     * 
     */
    @Import(name="simpleValue")
    private @Nullable Output<String> simpleValue;

    /**
     * @return A simple value for the parameter.
     * 
     */
    public Optional<Output<String>> simpleValue() {
        return Optional.ofNullable(this.simpleValue);
    }

    private WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs() {}

    private WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs(WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs $) {
        this.rootObjectValue = $.rootObjectValue;
        this.simpleValue = $.simpleValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs $;

        public Builder() {
            $ = new WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs();
        }

        public Builder(WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs defaults) {
            $ = new WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rootObjectValue The root object value, used in custom parameters.
         * 
         * @return builder
         * 
         */
        public Builder rootObjectValue(@Nullable Output<WorkspaceTaskConfigProviderDelegateBindingParameterValuesRootObjectValueArgs> rootObjectValue) {
            $.rootObjectValue = rootObjectValue;
            return this;
        }

        /**
         * @param rootObjectValue The root object value, used in custom parameters.
         * 
         * @return builder
         * 
         */
        public Builder rootObjectValue(WorkspaceTaskConfigProviderDelegateBindingParameterValuesRootObjectValueArgs rootObjectValue) {
            return rootObjectValue(Output.of(rootObjectValue));
        }

        /**
         * @param simpleValue A simple value for the parameter.
         * 
         * @return builder
         * 
         */
        public Builder simpleValue(@Nullable Output<String> simpleValue) {
            $.simpleValue = simpleValue;
            return this;
        }

        /**
         * @param simpleValue A simple value for the parameter.
         * 
         * @return builder
         * 
         */
        public Builder simpleValue(String simpleValue) {
            return simpleValue(Output.of(simpleValue));
        }

        public WorkspaceTaskConfigProviderDelegateBindingParameterValuesArgs build() {
            return $;
        }
    }

}
