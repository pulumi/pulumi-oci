// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs Empty = new WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs();

    /**
     * (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * (Updatable) The type of the task.
     * 
     */
    @Import(name="modelType")
    private @Nullable Output<String> modelType;

    /**
     * @return (Updatable) The type of the task.
     * 
     */
    public Optional<Output<String>> modelType() {
        return Optional.ofNullable(this.modelType);
    }

    /**
     * (Updatable) The object&#39;s model version.
     * 
     */
    @Import(name="modelVersion")
    private @Nullable Output<String> modelVersion;

    /**
     * @return (Updatable) The object&#39;s model version.
     * 
     */
    public Optional<Output<String>> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }

    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Import(name="objectStatus")
    private @Nullable Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Output<Integer>> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }

    private WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs() {}

    private WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs(WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs $) {
        this.key = $.key;
        this.modelType = $.modelType;
        this.modelVersion = $.modelVersion;
        this.objectStatus = $.objectStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs $;

        public Builder() {
            $ = new WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs();
        }

        public Builder(WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs defaults) {
            $ = new WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param modelType (Updatable) The type of the task.
         * 
         * @return builder
         * 
         */
        public Builder modelType(@Nullable Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        /**
         * @param modelType (Updatable) The type of the task.
         * 
         * @return builder
         * 
         */
        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        /**
         * @param modelVersion (Updatable) The object&#39;s model version.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(@Nullable Output<String> modelVersion) {
            $.modelVersion = modelVersion;
            return this;
        }

        /**
         * @param modelVersion (Updatable) The object&#39;s model version.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(String modelVersion) {
            return modelVersion(Output.of(modelVersion));
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(@Nullable Output<Integer> objectStatus) {
            $.objectStatus = objectStatus;
            return this;
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(Integer objectStatus) {
            return objectStatus(Output.of(objectStatus));
        }

        public WorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValueArgs build() {
            return $;
        }
    }

}
