// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskAuthConfigArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskCancelRestCallConfigArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskConfigProviderDelegateArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskExecuteRestCallConfigArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskInputPortArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOpConfigValuesArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskOutputPortArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParameterArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskParentRefArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskPollRestCallConfigArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskRegistryMetadataArgs;
import com.pulumi.oci.DataIntegration.inputs.WorkspaceTaskTypedExpressionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceTaskState extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceTaskState Empty = new WorkspaceTaskState();

    /**
     * (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    @Import(name="apiCallMode")
    private @Nullable Output<String> apiCallMode;

    /**
     * @return (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    public Optional<Output<String>> apiCallMode() {
        return Optional.ofNullable(this.apiCallMode);
    }

    /**
     * (Updatable) Authentication configuration for Generic REST invocation.
     * 
     */
    @Import(name="authConfig")
    private @Nullable Output<WorkspaceTaskAuthConfigArgs> authConfig;

    /**
     * @return (Updatable) Authentication configuration for Generic REST invocation.
     * 
     */
    public Optional<Output<WorkspaceTaskAuthConfigArgs>> authConfig() {
        return Optional.ofNullable(this.authConfig);
    }

    /**
     * (Updatable) The REST API configuration for cancelling the task.
     * 
     */
    @Import(name="cancelRestCallConfig")
    private @Nullable Output<WorkspaceTaskCancelRestCallConfigArgs> cancelRestCallConfig;

    /**
     * @return (Updatable) The REST API configuration for cancelling the task.
     * 
     */
    public Optional<Output<WorkspaceTaskCancelRestCallConfigArgs>> cancelRestCallConfig() {
        return Optional.ofNullable(this.cancelRestCallConfig);
    }

    /**
     * (Updatable) The type to create a config provider.
     * 
     */
    @Import(name="configProviderDelegate")
    private @Nullable Output<WorkspaceTaskConfigProviderDelegateArgs> configProviderDelegate;

    /**
     * @return (Updatable) The type to create a config provider.
     * 
     */
    public Optional<Output<WorkspaceTaskConfigProviderDelegateArgs>> configProviderDelegate() {
        return Optional.ofNullable(this.configProviderDelegate);
    }

    /**
     * (Updatable) Detailed description for the object.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Detailed description for the object.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The REST API configuration for execution.
     * 
     */
    @Import(name="executeRestCallConfig")
    private @Nullable Output<WorkspaceTaskExecuteRestCallConfigArgs> executeRestCallConfig;

    /**
     * @return (Updatable) The REST API configuration for execution.
     * 
     */
    public Optional<Output<WorkspaceTaskExecuteRestCallConfigArgs>> executeRestCallConfig() {
        return Optional.ofNullable(this.executeRestCallConfig);
    }

    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * (Updatable) An array of input ports.
     * 
     */
    @Import(name="inputPorts")
    private @Nullable Output<List<WorkspaceTaskInputPortArgs>> inputPorts;

    /**
     * @return (Updatable) An array of input ports.
     * 
     */
    public Optional<Output<List<WorkspaceTaskInputPortArgs>>> inputPorts() {
        return Optional.ofNullable(this.inputPorts);
    }

    /**
     * (Updatable) Defines whether Data Loader task is used for single load or multiple
     * 
     */
    @Import(name="isSingleLoad")
    private @Nullable Output<Boolean> isSingleLoad;

    /**
     * @return (Updatable) Defines whether Data Loader task is used for single load or multiple
     * 
     */
    public Optional<Output<Boolean>> isSingleLoad() {
        return Optional.ofNullable(this.isSingleLoad);
    }

    /**
     * (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    @Import(name="keyMap")
    private @Nullable Output<Map<String,Object>> keyMap;

    /**
     * @return A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    public Optional<Output<Map<String,Object>>> keyMap() {
        return Optional.ofNullable(this.keyMap);
    }

    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Import(name="metadatas")
    private @Nullable Output<List<WorkspaceTaskMetadataArgs>> metadatas;

    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Optional<Output<List<WorkspaceTaskMetadataArgs>>> metadatas() {
        return Optional.ofNullable(this.metadatas);
    }

    /**
     * (Updatable) The type of the task.
     * 
     */
    @Import(name="modelType")
    private @Nullable Output<String> modelType;

    /**
     * @return (Updatable) The type of the task.
     * 
     */
    public Optional<Output<String>> modelType() {
        return Optional.ofNullable(this.modelType);
    }

    /**
     * (Updatable) The object&#39;s model version.
     * 
     */
    @Import(name="modelVersion")
    private @Nullable Output<String> modelVersion;

    /**
     * @return (Updatable) The object&#39;s model version.
     * 
     */
    public Optional<Output<String>> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }

    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Import(name="objectStatus")
    private @Nullable Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Output<Integer>> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }

    /**
     * This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    @Import(name="objectVersion")
    private @Nullable Output<Integer> objectVersion;

    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Optional<Output<Integer>> objectVersion() {
        return Optional.ofNullable(this.objectVersion);
    }

    /**
     * (Updatable) Configuration values can be string, objects, or parameters.
     * 
     */
    @Import(name="opConfigValues")
    private @Nullable Output<WorkspaceTaskOpConfigValuesArgs> opConfigValues;

    /**
     * @return (Updatable) Configuration values can be string, objects, or parameters.
     * 
     */
    public Optional<Output<WorkspaceTaskOpConfigValuesArgs>> opConfigValues() {
        return Optional.ofNullable(this.opConfigValues);
    }

    /**
     * (Updatable) Describes the shape of the execution result
     * 
     */
    @Import(name="operation")
    private @Nullable Output<String> operation;

    /**
     * @return (Updatable) Describes the shape of the execution result
     * 
     */
    public Optional<Output<String>> operation() {
        return Optional.ofNullable(this.operation);
    }

    /**
     * (Updatable) An array of output ports.
     * 
     */
    @Import(name="outputPorts")
    private @Nullable Output<List<WorkspaceTaskOutputPortArgs>> outputPorts;

    /**
     * @return (Updatable) An array of output ports.
     * 
     */
    public Optional<Output<List<WorkspaceTaskOutputPortArgs>>> outputPorts() {
        return Optional.ofNullable(this.outputPorts);
    }

    /**
     * (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    @Import(name="parallelLoadLimit")
    private @Nullable Output<Integer> parallelLoadLimit;

    /**
     * @return (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    public Optional<Output<Integer>> parallelLoadLimit() {
        return Optional.ofNullable(this.parallelLoadLimit);
    }

    /**
     * (Updatable) An array of parameters.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<WorkspaceTaskParameterArgs>> parameters;

    /**
     * @return (Updatable) An array of parameters.
     * 
     */
    public Optional<Output<List<WorkspaceTaskParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * (Updatable) A reference to the object&#39;s parent.
     * 
     */
    @Import(name="parentRef")
    private @Nullable Output<WorkspaceTaskParentRefArgs> parentRef;

    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    public Optional<Output<WorkspaceTaskParentRefArgs>> parentRef() {
        return Optional.ofNullable(this.parentRef);
    }

    /**
     * (Updatable) The REST API configuration for polling.
     * 
     */
    @Import(name="pollRestCallConfig")
    private @Nullable Output<WorkspaceTaskPollRestCallConfigArgs> pollRestCallConfig;

    /**
     * @return (Updatable) The REST API configuration for polling.
     * 
     */
    public Optional<Output<WorkspaceTaskPollRestCallConfigArgs>> pollRestCallConfig() {
        return Optional.ofNullable(this.pollRestCallConfig);
    }

    /**
     * (Updatable) Information about the object and its parent.
     * 
     */
    @Import(name="registryMetadata")
    private @Nullable Output<WorkspaceTaskRegistryMetadataArgs> registryMetadata;

    /**
     * @return (Updatable) Information about the object and its parent.
     * 
     */
    public Optional<Output<WorkspaceTaskRegistryMetadataArgs>> registryMetadata() {
        return Optional.ofNullable(this.registryMetadata);
    }

    /**
     * (Updatable) List of typed expressions.
     * 
     */
    @Import(name="typedExpressions")
    private @Nullable Output<List<WorkspaceTaskTypedExpressionArgs>> typedExpressions;

    /**
     * @return (Updatable) List of typed expressions.
     * 
     */
    public Optional<Output<List<WorkspaceTaskTypedExpressionArgs>>> typedExpressions() {
        return Optional.ofNullable(this.typedExpressions);
    }

    /**
     * The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return The workspace ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private WorkspaceTaskState() {}

    private WorkspaceTaskState(WorkspaceTaskState $) {
        this.apiCallMode = $.apiCallMode;
        this.authConfig = $.authConfig;
        this.cancelRestCallConfig = $.cancelRestCallConfig;
        this.configProviderDelegate = $.configProviderDelegate;
        this.description = $.description;
        this.executeRestCallConfig = $.executeRestCallConfig;
        this.identifier = $.identifier;
        this.inputPorts = $.inputPorts;
        this.isSingleLoad = $.isSingleLoad;
        this.key = $.key;
        this.keyMap = $.keyMap;
        this.metadatas = $.metadatas;
        this.modelType = $.modelType;
        this.modelVersion = $.modelVersion;
        this.name = $.name;
        this.objectStatus = $.objectStatus;
        this.objectVersion = $.objectVersion;
        this.opConfigValues = $.opConfigValues;
        this.operation = $.operation;
        this.outputPorts = $.outputPorts;
        this.parallelLoadLimit = $.parallelLoadLimit;
        this.parameters = $.parameters;
        this.parentRef = $.parentRef;
        this.pollRestCallConfig = $.pollRestCallConfig;
        this.registryMetadata = $.registryMetadata;
        this.typedExpressions = $.typedExpressions;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceTaskState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceTaskState $;

        public Builder() {
            $ = new WorkspaceTaskState();
        }

        public Builder(WorkspaceTaskState defaults) {
            $ = new WorkspaceTaskState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiCallMode (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
         * 
         * @return builder
         * 
         */
        public Builder apiCallMode(@Nullable Output<String> apiCallMode) {
            $.apiCallMode = apiCallMode;
            return this;
        }

        /**
         * @param apiCallMode (Updatable) The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
         * 
         * @return builder
         * 
         */
        public Builder apiCallMode(String apiCallMode) {
            return apiCallMode(Output.of(apiCallMode));
        }

        /**
         * @param authConfig (Updatable) Authentication configuration for Generic REST invocation.
         * 
         * @return builder
         * 
         */
        public Builder authConfig(@Nullable Output<WorkspaceTaskAuthConfigArgs> authConfig) {
            $.authConfig = authConfig;
            return this;
        }

        /**
         * @param authConfig (Updatable) Authentication configuration for Generic REST invocation.
         * 
         * @return builder
         * 
         */
        public Builder authConfig(WorkspaceTaskAuthConfigArgs authConfig) {
            return authConfig(Output.of(authConfig));
        }

        /**
         * @param cancelRestCallConfig (Updatable) The REST API configuration for cancelling the task.
         * 
         * @return builder
         * 
         */
        public Builder cancelRestCallConfig(@Nullable Output<WorkspaceTaskCancelRestCallConfigArgs> cancelRestCallConfig) {
            $.cancelRestCallConfig = cancelRestCallConfig;
            return this;
        }

        /**
         * @param cancelRestCallConfig (Updatable) The REST API configuration for cancelling the task.
         * 
         * @return builder
         * 
         */
        public Builder cancelRestCallConfig(WorkspaceTaskCancelRestCallConfigArgs cancelRestCallConfig) {
            return cancelRestCallConfig(Output.of(cancelRestCallConfig));
        }

        /**
         * @param configProviderDelegate (Updatable) The type to create a config provider.
         * 
         * @return builder
         * 
         */
        public Builder configProviderDelegate(@Nullable Output<WorkspaceTaskConfigProviderDelegateArgs> configProviderDelegate) {
            $.configProviderDelegate = configProviderDelegate;
            return this;
        }

        /**
         * @param configProviderDelegate (Updatable) The type to create a config provider.
         * 
         * @return builder
         * 
         */
        public Builder configProviderDelegate(WorkspaceTaskConfigProviderDelegateArgs configProviderDelegate) {
            return configProviderDelegate(Output.of(configProviderDelegate));
        }

        /**
         * @param description (Updatable) Detailed description for the object.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Detailed description for the object.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param executeRestCallConfig (Updatable) The REST API configuration for execution.
         * 
         * @return builder
         * 
         */
        public Builder executeRestCallConfig(@Nullable Output<WorkspaceTaskExecuteRestCallConfigArgs> executeRestCallConfig) {
            $.executeRestCallConfig = executeRestCallConfig;
            return this;
        }

        /**
         * @param executeRestCallConfig (Updatable) The REST API configuration for execution.
         * 
         * @return builder
         * 
         */
        public Builder executeRestCallConfig(WorkspaceTaskExecuteRestCallConfigArgs executeRestCallConfig) {
            return executeRestCallConfig(Output.of(executeRestCallConfig));
        }

        /**
         * @param identifier (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param inputPorts (Updatable) An array of input ports.
         * 
         * @return builder
         * 
         */
        public Builder inputPorts(@Nullable Output<List<WorkspaceTaskInputPortArgs>> inputPorts) {
            $.inputPorts = inputPorts;
            return this;
        }

        /**
         * @param inputPorts (Updatable) An array of input ports.
         * 
         * @return builder
         * 
         */
        public Builder inputPorts(List<WorkspaceTaskInputPortArgs> inputPorts) {
            return inputPorts(Output.of(inputPorts));
        }

        /**
         * @param inputPorts (Updatable) An array of input ports.
         * 
         * @return builder
         * 
         */
        public Builder inputPorts(WorkspaceTaskInputPortArgs... inputPorts) {
            return inputPorts(List.of(inputPorts));
        }

        /**
         * @param isSingleLoad (Updatable) Defines whether Data Loader task is used for single load or multiple
         * 
         * @return builder
         * 
         */
        public Builder isSingleLoad(@Nullable Output<Boolean> isSingleLoad) {
            $.isSingleLoad = isSingleLoad;
            return this;
        }

        /**
         * @param isSingleLoad (Updatable) Defines whether Data Loader task is used for single load or multiple
         * 
         * @return builder
         * 
         */
        public Builder isSingleLoad(Boolean isSingleLoad) {
            return isSingleLoad(Output.of(isSingleLoad));
        }

        /**
         * @param key (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key (Updatable) Generated key that can be used in API calls to identify task. On scenarios where reference to the task is needed, a value can be passed in create.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param keyMap A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
         * 
         * @return builder
         * 
         */
        public Builder keyMap(@Nullable Output<Map<String,Object>> keyMap) {
            $.keyMap = keyMap;
            return this;
        }

        /**
         * @param keyMap A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
         * 
         * @return builder
         * 
         */
        public Builder keyMap(Map<String,Object> keyMap) {
            return keyMap(Output.of(keyMap));
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(@Nullable Output<List<WorkspaceTaskMetadataArgs>> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(List<WorkspaceTaskMetadataArgs> metadatas) {
            return metadatas(Output.of(metadatas));
        }

        /**
         * @param metadatas A summary type containing information about the object including its key, name and when/who created/updated it.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(WorkspaceTaskMetadataArgs... metadatas) {
            return metadatas(List.of(metadatas));
        }

        /**
         * @param modelType (Updatable) The type of the task.
         * 
         * @return builder
         * 
         */
        public Builder modelType(@Nullable Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        /**
         * @param modelType (Updatable) The type of the task.
         * 
         * @return builder
         * 
         */
        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        /**
         * @param modelVersion (Updatable) The object&#39;s model version.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(@Nullable Output<String> modelVersion) {
            $.modelVersion = modelVersion;
            return this;
        }

        /**
         * @param modelVersion (Updatable) The object&#39;s model version.
         * 
         * @return builder
         * 
         */
        public Builder modelVersion(String modelVersion) {
            return modelVersion(Output.of(modelVersion));
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(@Nullable Output<Integer> objectStatus) {
            $.objectStatus = objectStatus;
            return this;
        }

        /**
         * @param objectStatus (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
         * 
         * @return builder
         * 
         */
        public Builder objectStatus(Integer objectStatus) {
            return objectStatus(Output.of(objectStatus));
        }

        /**
         * @param objectVersion This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(@Nullable Output<Integer> objectVersion) {
            $.objectVersion = objectVersion;
            return this;
        }

        /**
         * @param objectVersion This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
         * 
         * @return builder
         * 
         */
        public Builder objectVersion(Integer objectVersion) {
            return objectVersion(Output.of(objectVersion));
        }

        /**
         * @param opConfigValues (Updatable) Configuration values can be string, objects, or parameters.
         * 
         * @return builder
         * 
         */
        public Builder opConfigValues(@Nullable Output<WorkspaceTaskOpConfigValuesArgs> opConfigValues) {
            $.opConfigValues = opConfigValues;
            return this;
        }

        /**
         * @param opConfigValues (Updatable) Configuration values can be string, objects, or parameters.
         * 
         * @return builder
         * 
         */
        public Builder opConfigValues(WorkspaceTaskOpConfigValuesArgs opConfigValues) {
            return opConfigValues(Output.of(opConfigValues));
        }

        /**
         * @param operation (Updatable) Describes the shape of the execution result
         * 
         * @return builder
         * 
         */
        public Builder operation(@Nullable Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation (Updatable) Describes the shape of the execution result
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param outputPorts (Updatable) An array of output ports.
         * 
         * @return builder
         * 
         */
        public Builder outputPorts(@Nullable Output<List<WorkspaceTaskOutputPortArgs>> outputPorts) {
            $.outputPorts = outputPorts;
            return this;
        }

        /**
         * @param outputPorts (Updatable) An array of output ports.
         * 
         * @return builder
         * 
         */
        public Builder outputPorts(List<WorkspaceTaskOutputPortArgs> outputPorts) {
            return outputPorts(Output.of(outputPorts));
        }

        /**
         * @param outputPorts (Updatable) An array of output ports.
         * 
         * @return builder
         * 
         */
        public Builder outputPorts(WorkspaceTaskOutputPortArgs... outputPorts) {
            return outputPorts(List.of(outputPorts));
        }

        /**
         * @param parallelLoadLimit (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
         * 
         * @return builder
         * 
         */
        public Builder parallelLoadLimit(@Nullable Output<Integer> parallelLoadLimit) {
            $.parallelLoadLimit = parallelLoadLimit;
            return this;
        }

        /**
         * @param parallelLoadLimit (Updatable) Defines the number of entities being loaded in parallel at a time for a Data Loader task
         * 
         * @return builder
         * 
         */
        public Builder parallelLoadLimit(Integer parallelLoadLimit) {
            return parallelLoadLimit(Output.of(parallelLoadLimit));
        }

        /**
         * @param parameters (Updatable) An array of parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<WorkspaceTaskParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters (Updatable) An array of parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<WorkspaceTaskParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters (Updatable) An array of parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(WorkspaceTaskParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param parentRef (Updatable) A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentRef(@Nullable Output<WorkspaceTaskParentRefArgs> parentRef) {
            $.parentRef = parentRef;
            return this;
        }

        /**
         * @param parentRef (Updatable) A reference to the object&#39;s parent.
         * 
         * @return builder
         * 
         */
        public Builder parentRef(WorkspaceTaskParentRefArgs parentRef) {
            return parentRef(Output.of(parentRef));
        }

        /**
         * @param pollRestCallConfig (Updatable) The REST API configuration for polling.
         * 
         * @return builder
         * 
         */
        public Builder pollRestCallConfig(@Nullable Output<WorkspaceTaskPollRestCallConfigArgs> pollRestCallConfig) {
            $.pollRestCallConfig = pollRestCallConfig;
            return this;
        }

        /**
         * @param pollRestCallConfig (Updatable) The REST API configuration for polling.
         * 
         * @return builder
         * 
         */
        public Builder pollRestCallConfig(WorkspaceTaskPollRestCallConfigArgs pollRestCallConfig) {
            return pollRestCallConfig(Output.of(pollRestCallConfig));
        }

        /**
         * @param registryMetadata (Updatable) Information about the object and its parent.
         * 
         * @return builder
         * 
         */
        public Builder registryMetadata(@Nullable Output<WorkspaceTaskRegistryMetadataArgs> registryMetadata) {
            $.registryMetadata = registryMetadata;
            return this;
        }

        /**
         * @param registryMetadata (Updatable) Information about the object and its parent.
         * 
         * @return builder
         * 
         */
        public Builder registryMetadata(WorkspaceTaskRegistryMetadataArgs registryMetadata) {
            return registryMetadata(Output.of(registryMetadata));
        }

        /**
         * @param typedExpressions (Updatable) List of typed expressions.
         * 
         * @return builder
         * 
         */
        public Builder typedExpressions(@Nullable Output<List<WorkspaceTaskTypedExpressionArgs>> typedExpressions) {
            $.typedExpressions = typedExpressions;
            return this;
        }

        /**
         * @param typedExpressions (Updatable) List of typed expressions.
         * 
         * @return builder
         * 
         */
        public Builder typedExpressions(List<WorkspaceTaskTypedExpressionArgs> typedExpressions) {
            return typedExpressions(Output.of(typedExpressions));
        }

        /**
         * @param typedExpressions (Updatable) List of typed expressions.
         * 
         * @return builder
         * 
         */
        public Builder typedExpressions(WorkspaceTaskTypedExpressionArgs... typedExpressions) {
            return typedExpressions(List.of(typedExpressions));
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The workspace ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public WorkspaceTaskState build() {
            return $;
        }
    }

}
