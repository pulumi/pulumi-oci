// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs Empty = new WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs();

    /**
     * An integer value of the parameter.
     * 
     */
    @Import(name="intValue")
    private @Nullable Output<Integer> intValue;

    /**
     * @return An integer value of the parameter.
     * 
     */
    public Optional<Output<Integer>> intValue() {
        return Optional.ofNullable(this.intValue);
    }

    private WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs() {}

    private WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs(WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs $) {
        this.intValue = $.intValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs $;

        public Builder() {
            $ = new WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs();
        }

        public Builder(WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs defaults) {
            $ = new WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param intValue An integer value of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder intValue(@Nullable Output<Integer> intValue) {
            $.intValue = intValue;
            return this;
        }

        /**
         * @param intValue An integer value of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder intValue(Integer intValue) {
            return intValue(Output.of(intValue));
        }

        public WorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLengthArgs build() {
            return $;
        }
    }

}
