// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata {
    /**
     * @return The patch action indicating if object was created, updated, or deleted.
     * 
     */
    private String action;
    /**
     * @return Used to filter by the identifier of the published object.
     * 
     */
    private String identifier;
    /**
     * @return The key of the object.
     * 
     */
    private String key;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private String name;
    /**
     * @return The fully qualified path of the published object, which would include its project and folder.
     * 
     */
    private String namePath;
    /**
     * @return The object version.
     * 
     */
    private Integer objectVersion;
    /**
     * @return The type of the object in patch.
     * 
     */
    private String type;

    private GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata() {}
    /**
     * @return The patch action indicating if object was created, updated, or deleted.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Used to filter by the identifier of the published object.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return The key of the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The fully qualified path of the published object, which would include its project and folder.
     * 
     */
    public String namePath() {
        return this.namePath;
    }
    /**
     * @return The object version.
     * 
     */
    public Integer objectVersion() {
        return this.objectVersion;
    }
    /**
     * @return The type of the object in patch.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String identifier;
        private String key;
        private String name;
        private String namePath;
        private Integer objectVersion;
        private String type;
        public Builder() {}
        public Builder(GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.identifier = defaults.identifier;
    	      this.key = defaults.key;
    	      this.name = defaults.name;
    	      this.namePath = defaults.namePath;
    	      this.objectVersion = defaults.objectVersion;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namePath(String namePath) {
            if (namePath == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata", "namePath");
            }
            this.namePath = namePath;
            return this;
        }
        @CustomType.Setter
        public Builder objectVersion(Integer objectVersion) {
            if (objectVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata", "objectVersion");
            }
            this.objectVersion = objectVersion;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata", "type");
            }
            this.type = type;
            return this;
        }
        public GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata build() {
            final var _resultValue = new GetWorkspaceApplicationPatchesPatchSummaryCollectionItemPatchObjectMetadata();
            _resultValue.action = action;
            _resultValue.identifier = identifier;
            _resultValue.key = key;
            _resultValue.name = name;
            _resultValue.namePath = namePath;
            _resultValue.objectVersion = objectVersion;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
