// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationScheduleFrequencyDetail;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationScheduleMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationScheduleParentRef;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationScheduleRegistryMetadata;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkspaceApplicationScheduleResult {
    private String applicationKey;
    /**
     * @return The description of the aggregator.
     * 
     */
    private String description;
    /**
     * @return The model that holds the frequency details.
     * 
     */
    private List<GetWorkspaceApplicationScheduleFrequencyDetail> frequencyDetails;
    private String id;
    /**
     * @return The identifier of the aggregator.
     * 
     */
    private String identifier;
    /**
     * @return A flag to indicate daylight saving.
     * 
     */
    private Boolean isDaylightAdjustmentEnabled;
    /**
     * @return The key of the aggregator object.
     * 
     */
    private String key;
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    private List<GetWorkspaceApplicationScheduleMetadata> metadatas;
    /**
     * @return The type of the object.
     * 
     */
    private String modelType;
    /**
     * @return This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    private String modelVersion;
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    private Integer objectVersion;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private List<GetWorkspaceApplicationScheduleParentRef> parentReves;
    private List<GetWorkspaceApplicationScheduleRegistryMetadata> registryMetadatas;
    private String scheduleKey;
    /**
     * @return The timezone for the schedule.
     * 
     */
    private String timezone;
    private String workspaceId;

    private GetWorkspaceApplicationScheduleResult() {}
    public String applicationKey() {
        return this.applicationKey;
    }
    /**
     * @return The description of the aggregator.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The model that holds the frequency details.
     * 
     */
    public List<GetWorkspaceApplicationScheduleFrequencyDetail> frequencyDetails() {
        return this.frequencyDetails;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The identifier of the aggregator.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return A flag to indicate daylight saving.
     * 
     */
    public Boolean isDaylightAdjustmentEnabled() {
        return this.isDaylightAdjustmentEnabled;
    }
    /**
     * @return The key of the aggregator object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public List<GetWorkspaceApplicationScheduleMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return The type of the object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Integer objectVersion() {
        return this.objectVersion;
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public List<GetWorkspaceApplicationScheduleParentRef> parentReves() {
        return this.parentReves;
    }
    public List<GetWorkspaceApplicationScheduleRegistryMetadata> registryMetadatas() {
        return this.registryMetadatas;
    }
    public String scheduleKey() {
        return this.scheduleKey;
    }
    /**
     * @return The timezone for the schedule.
     * 
     */
    public String timezone() {
        return this.timezone;
    }
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceApplicationScheduleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationKey;
        private String description;
        private List<GetWorkspaceApplicationScheduleFrequencyDetail> frequencyDetails;
        private String id;
        private String identifier;
        private Boolean isDaylightAdjustmentEnabled;
        private String key;
        private List<GetWorkspaceApplicationScheduleMetadata> metadatas;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private Integer objectVersion;
        private List<GetWorkspaceApplicationScheduleParentRef> parentReves;
        private List<GetWorkspaceApplicationScheduleRegistryMetadata> registryMetadatas;
        private String scheduleKey;
        private String timezone;
        private String workspaceId;
        public Builder() {}
        public Builder(GetWorkspaceApplicationScheduleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationKey = defaults.applicationKey;
    	      this.description = defaults.description;
    	      this.frequencyDetails = defaults.frequencyDetails;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.isDaylightAdjustmentEnabled = defaults.isDaylightAdjustmentEnabled;
    	      this.key = defaults.key;
    	      this.metadatas = defaults.metadatas;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.objectVersion = defaults.objectVersion;
    	      this.parentReves = defaults.parentReves;
    	      this.registryMetadatas = defaults.registryMetadatas;
    	      this.scheduleKey = defaults.scheduleKey;
    	      this.timezone = defaults.timezone;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder applicationKey(String applicationKey) {
            if (applicationKey == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "applicationKey");
            }
            this.applicationKey = applicationKey;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder frequencyDetails(List<GetWorkspaceApplicationScheduleFrequencyDetail> frequencyDetails) {
            if (frequencyDetails == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "frequencyDetails");
            }
            this.frequencyDetails = frequencyDetails;
            return this;
        }
        public Builder frequencyDetails(GetWorkspaceApplicationScheduleFrequencyDetail... frequencyDetails) {
            return frequencyDetails(List.of(frequencyDetails));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder isDaylightAdjustmentEnabled(Boolean isDaylightAdjustmentEnabled) {
            if (isDaylightAdjustmentEnabled == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "isDaylightAdjustmentEnabled");
            }
            this.isDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(List<GetWorkspaceApplicationScheduleMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetWorkspaceApplicationScheduleMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            if (modelVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "modelVersion");
            }
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            if (objectStatus == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "objectStatus");
            }
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder objectVersion(Integer objectVersion) {
            if (objectVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "objectVersion");
            }
            this.objectVersion = objectVersion;
            return this;
        }
        @CustomType.Setter
        public Builder parentReves(List<GetWorkspaceApplicationScheduleParentRef> parentReves) {
            if (parentReves == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "parentReves");
            }
            this.parentReves = parentReves;
            return this;
        }
        public Builder parentReves(GetWorkspaceApplicationScheduleParentRef... parentReves) {
            return parentReves(List.of(parentReves));
        }
        @CustomType.Setter
        public Builder registryMetadatas(List<GetWorkspaceApplicationScheduleRegistryMetadata> registryMetadatas) {
            if (registryMetadatas == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "registryMetadatas");
            }
            this.registryMetadatas = registryMetadatas;
            return this;
        }
        public Builder registryMetadatas(GetWorkspaceApplicationScheduleRegistryMetadata... registryMetadatas) {
            return registryMetadatas(List.of(registryMetadatas));
        }
        @CustomType.Setter
        public Builder scheduleKey(String scheduleKey) {
            if (scheduleKey == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "scheduleKey");
            }
            this.scheduleKey = scheduleKey;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationScheduleResult", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        public GetWorkspaceApplicationScheduleResult build() {
            final var _resultValue = new GetWorkspaceApplicationScheduleResult();
            _resultValue.applicationKey = applicationKey;
            _resultValue.description = description;
            _resultValue.frequencyDetails = frequencyDetails;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.isDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            _resultValue.key = key;
            _resultValue.metadatas = metadatas;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.objectVersion = objectVersion;
            _resultValue.parentReves = parentReves;
            _resultValue.registryMetadatas = registryMetadatas;
            _resultValue.scheduleKey = scheduleKey;
            _resultValue.timezone = timezone;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
