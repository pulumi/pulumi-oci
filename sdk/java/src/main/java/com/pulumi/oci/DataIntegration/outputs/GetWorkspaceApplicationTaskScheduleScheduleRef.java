// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetail;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationTaskScheduleScheduleRefMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationTaskScheduleScheduleRefParentRef;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkspaceApplicationTaskScheduleScheduleRef {
    /**
     * @return The description of the aggregator.
     * 
     */
    private String description;
    /**
     * @return The model that holds the frequency details.
     * 
     */
    private List<GetWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetail> frequencyDetails;
    /**
     * @return The identifier of the aggregator.
     * 
     */
    private String identifier;
    private Boolean isDaylightAdjustmentEnabled;
    /**
     * @return The key of the aggregator object.
     * 
     */
    private String key;
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    private List<GetWorkspaceApplicationTaskScheduleScheduleRefMetadata> metadatas;
    /**
     * @return The type of the object.
     * 
     */
    private String modelType;
    /**
     * @return This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    private String modelVersion;
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    private Integer objectVersion;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private List<GetWorkspaceApplicationTaskScheduleScheduleRefParentRef> parentReves;
    /**
     * @return The timezone for the schedule.
     * 
     */
    private String timezone;

    private GetWorkspaceApplicationTaskScheduleScheduleRef() {}
    /**
     * @return The description of the aggregator.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The model that holds the frequency details.
     * 
     */
    public List<GetWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetail> frequencyDetails() {
        return this.frequencyDetails;
    }
    /**
     * @return The identifier of the aggregator.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    public Boolean isDaylightAdjustmentEnabled() {
        return this.isDaylightAdjustmentEnabled;
    }
    /**
     * @return The key of the aggregator object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public List<GetWorkspaceApplicationTaskScheduleScheduleRefMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return The type of the object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Integer objectVersion() {
        return this.objectVersion;
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public List<GetWorkspaceApplicationTaskScheduleScheduleRefParentRef> parentReves() {
        return this.parentReves;
    }
    /**
     * @return The timezone for the schedule.
     * 
     */
    public String timezone() {
        return this.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceApplicationTaskScheduleScheduleRef defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private List<GetWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetail> frequencyDetails;
        private String identifier;
        private Boolean isDaylightAdjustmentEnabled;
        private String key;
        private List<GetWorkspaceApplicationTaskScheduleScheduleRefMetadata> metadatas;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private Integer objectVersion;
        private List<GetWorkspaceApplicationTaskScheduleScheduleRefParentRef> parentReves;
        private String timezone;
        public Builder() {}
        public Builder(GetWorkspaceApplicationTaskScheduleScheduleRef defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.frequencyDetails = defaults.frequencyDetails;
    	      this.identifier = defaults.identifier;
    	      this.isDaylightAdjustmentEnabled = defaults.isDaylightAdjustmentEnabled;
    	      this.key = defaults.key;
    	      this.metadatas = defaults.metadatas;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.objectVersion = defaults.objectVersion;
    	      this.parentReves = defaults.parentReves;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder frequencyDetails(List<GetWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetail> frequencyDetails) {
            if (frequencyDetails == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "frequencyDetails");
            }
            this.frequencyDetails = frequencyDetails;
            return this;
        }
        public Builder frequencyDetails(GetWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetail... frequencyDetails) {
            return frequencyDetails(List.of(frequencyDetails));
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder isDaylightAdjustmentEnabled(Boolean isDaylightAdjustmentEnabled) {
            if (isDaylightAdjustmentEnabled == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "isDaylightAdjustmentEnabled");
            }
            this.isDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(List<GetWorkspaceApplicationTaskScheduleScheduleRefMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetWorkspaceApplicationTaskScheduleScheduleRefMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            if (modelVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "modelVersion");
            }
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            if (objectStatus == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "objectStatus");
            }
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder objectVersion(Integer objectVersion) {
            if (objectVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "objectVersion");
            }
            this.objectVersion = objectVersion;
            return this;
        }
        @CustomType.Setter
        public Builder parentReves(List<GetWorkspaceApplicationTaskScheduleScheduleRefParentRef> parentReves) {
            if (parentReves == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "parentReves");
            }
            this.parentReves = parentReves;
            return this;
        }
        public Builder parentReves(GetWorkspaceApplicationTaskScheduleScheduleRefParentRef... parentReves) {
            return parentReves(List.of(parentReves));
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskScheduleScheduleRef", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        public GetWorkspaceApplicationTaskScheduleScheduleRef build() {
            final var _resultValue = new GetWorkspaceApplicationTaskScheduleScheduleRef();
            _resultValue.description = description;
            _resultValue.frequencyDetails = frequencyDetails;
            _resultValue.identifier = identifier;
            _resultValue.isDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            _resultValue.key = key;
            _resultValue.metadatas = metadatas;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.objectVersion = objectVersion;
            _resultValue.parentReves = parentReves;
            _resultValue.timezone = timezone;
            return _resultValue;
        }
    }
}
