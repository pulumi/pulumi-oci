// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefFrequencyDetails;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefParentRef;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef {
    /**
     * @return The description of the aggregator.
     * 
     */
    private String description;
    /**
     * @return The model that holds the frequency details.
     * 
     */
    private GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefFrequencyDetails frequencyDetails;
    /**
     * @return Used to filter by the identifier of the object.
     * 
     */
    private String identifier;
    private Boolean isDaylightAdjustmentEnabled;
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    private String key;
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    private GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefMetadata metadata;
    /**
     * @return The type of the object.
     * 
     */
    private String modelType;
    /**
     * @return This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    private String modelVersion;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    private Integer objectVersion;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefParentRef parentRef;
    /**
     * @return The timezone for the schedule.
     * 
     */
    private String timezone;

    private GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef() {}
    /**
     * @return The description of the aggregator.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The model that holds the frequency details.
     * 
     */
    public GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefFrequencyDetails frequencyDetails() {
        return this.frequencyDetails;
    }
    /**
     * @return Used to filter by the identifier of the object.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    public Boolean isDaylightAdjustmentEnabled() {
        return this.isDaylightAdjustmentEnabled;
    }
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefMetadata metadata() {
        return this.metadata;
    }
    /**
     * @return The type of the object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return This is a version number that is used by the service to upgrade objects if needed through releases of the service.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Integer objectVersion() {
        return this.objectVersion;
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefParentRef parentRef() {
        return this.parentRef;
    }
    /**
     * @return The timezone for the schedule.
     * 
     */
    public String timezone() {
        return this.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefFrequencyDetails frequencyDetails;
        private String identifier;
        private Boolean isDaylightAdjustmentEnabled;
        private String key;
        private GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefMetadata metadata;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private Integer objectVersion;
        private GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefParentRef parentRef;
        private String timezone;
        public Builder() {}
        public Builder(GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.frequencyDetails = defaults.frequencyDetails;
    	      this.identifier = defaults.identifier;
    	      this.isDaylightAdjustmentEnabled = defaults.isDaylightAdjustmentEnabled;
    	      this.key = defaults.key;
    	      this.metadata = defaults.metadata;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.objectVersion = defaults.objectVersion;
    	      this.parentRef = defaults.parentRef;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder frequencyDetails(GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefFrequencyDetails frequencyDetails) {
            if (frequencyDetails == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "frequencyDetails");
            }
            this.frequencyDetails = frequencyDetails;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder isDaylightAdjustmentEnabled(Boolean isDaylightAdjustmentEnabled) {
            if (isDaylightAdjustmentEnabled == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "isDaylightAdjustmentEnabled");
            }
            this.isDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefMetadata metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            if (modelVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "modelVersion");
            }
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            if (objectStatus == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "objectStatus");
            }
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder objectVersion(Integer objectVersion) {
            if (objectVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "objectVersion");
            }
            this.objectVersion = objectVersion;
            return this;
        }
        @CustomType.Setter
        public Builder parentRef(GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRefParentRef parentRef) {
            if (parentRef == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "parentRef");
            }
            this.parentRef = parentRef;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        public GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef build() {
            final var _resultValue = new GetWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollectionItemScheduleRef();
            _resultValue.description = description;
            _resultValue.frequencyDetails = frequencyDetails;
            _resultValue.identifier = identifier;
            _resultValue.isDaylightAdjustmentEnabled = isDaylightAdjustmentEnabled;
            _resultValue.key = key;
            _resultValue.metadata = metadata;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.objectVersion = objectVersion;
            _resultValue.parentRef = parentRef;
            _resultValue.timezone = timezone;
            return _resultValue;
        }
    }
}
