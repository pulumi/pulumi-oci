// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceFoldersFolderSummaryCollectionItemMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceFoldersFolderSummaryCollectionItemParentRef;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceFoldersFolderSummaryCollectionItemRegistryMetadata;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceFoldersFolderSummaryCollectionItem {
    /**
     * @return The category name.
     * 
     */
    private @Nullable String categoryName;
    /**
     * @return The description of the aggregator.
     * 
     */
    private @Nullable String description;
    private @Nullable String folderKey;
    /**
     * @return Used to filter by the identifier of the object.
     * 
     */
    private String identifier;
    /**
     * @return The key of the aggregator object.
     * 
     */
    private @Nullable String key;
    /**
     * @return A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    private @Nullable Map<String,Object> keyMap;
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    private @Nullable List<GetWorkspaceFoldersFolderSummaryCollectionItemMetadata> metadatas;
    /**
     * @return The type of the object.
     * 
     */
    private @Nullable String modelType;
    /**
     * @return The model version of an object.
     * 
     */
    private @Nullable String modelVersion;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private @Nullable Integer objectStatus;
    /**
     * @return The version of the object that is used to track changes in the object instance.
     * 
     */
    private @Nullable Integer objectVersion;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private @Nullable List<GetWorkspaceFoldersFolderSummaryCollectionItemParentRef> parentReves;
    private GetWorkspaceFoldersFolderSummaryCollectionItemRegistryMetadata registryMetadata;
    /**
     * @return The workspace ID.
     * 
     */
    private String workspaceId;

    private GetWorkspaceFoldersFolderSummaryCollectionItem() {}
    /**
     * @return The category name.
     * 
     */
    public Optional<String> categoryName() {
        return Optional.ofNullable(this.categoryName);
    }
    /**
     * @return The description of the aggregator.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> folderKey() {
        return Optional.ofNullable(this.folderKey);
    }
    /**
     * @return Used to filter by the identifier of the object.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return The key of the aggregator object.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    public Map<String,Object> keyMap() {
        return this.keyMap == null ? Map.of() : this.keyMap;
    }
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public List<GetWorkspaceFoldersFolderSummaryCollectionItemMetadata> metadatas() {
        return this.metadatas == null ? List.of() : this.metadatas;
    }
    /**
     * @return The type of the object.
     * 
     */
    public Optional<String> modelType() {
        return Optional.ofNullable(this.modelType);
    }
    /**
     * @return The model version of an object.
     * 
     */
    public Optional<String> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Integer> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }
    /**
     * @return The version of the object that is used to track changes in the object instance.
     * 
     */
    public Optional<Integer> objectVersion() {
        return Optional.ofNullable(this.objectVersion);
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public List<GetWorkspaceFoldersFolderSummaryCollectionItemParentRef> parentReves() {
        return this.parentReves == null ? List.of() : this.parentReves;
    }
    public GetWorkspaceFoldersFolderSummaryCollectionItemRegistryMetadata registryMetadata() {
        return this.registryMetadata;
    }
    /**
     * @return The workspace ID.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceFoldersFolderSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String categoryName;
        private @Nullable String description;
        private @Nullable String folderKey;
        private String identifier;
        private @Nullable String key;
        private @Nullable Map<String,Object> keyMap;
        private @Nullable List<GetWorkspaceFoldersFolderSummaryCollectionItemMetadata> metadatas;
        private @Nullable String modelType;
        private @Nullable String modelVersion;
        private String name;
        private @Nullable Integer objectStatus;
        private @Nullable Integer objectVersion;
        private @Nullable List<GetWorkspaceFoldersFolderSummaryCollectionItemParentRef> parentReves;
        private GetWorkspaceFoldersFolderSummaryCollectionItemRegistryMetadata registryMetadata;
        private String workspaceId;
        public Builder() {}
        public Builder(GetWorkspaceFoldersFolderSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryName = defaults.categoryName;
    	      this.description = defaults.description;
    	      this.folderKey = defaults.folderKey;
    	      this.identifier = defaults.identifier;
    	      this.key = defaults.key;
    	      this.keyMap = defaults.keyMap;
    	      this.metadatas = defaults.metadatas;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.objectVersion = defaults.objectVersion;
    	      this.parentReves = defaults.parentReves;
    	      this.registryMetadata = defaults.registryMetadata;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder categoryName(@Nullable String categoryName) {
            this.categoryName = categoryName;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder folderKey(@Nullable String folderKey) {
            this.folderKey = folderKey;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            this.identifier = Objects.requireNonNull(identifier);
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder keyMap(@Nullable Map<String,Object> keyMap) {
            this.keyMap = keyMap;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(@Nullable List<GetWorkspaceFoldersFolderSummaryCollectionItemMetadata> metadatas) {
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetWorkspaceFoldersFolderSummaryCollectionItemMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder modelType(@Nullable String modelType) {
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(@Nullable String modelVersion) {
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(@Nullable Integer objectStatus) {
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder objectVersion(@Nullable Integer objectVersion) {
            this.objectVersion = objectVersion;
            return this;
        }
        @CustomType.Setter
        public Builder parentReves(@Nullable List<GetWorkspaceFoldersFolderSummaryCollectionItemParentRef> parentReves) {
            this.parentReves = parentReves;
            return this;
        }
        public Builder parentReves(GetWorkspaceFoldersFolderSummaryCollectionItemParentRef... parentReves) {
            return parentReves(List.of(parentReves));
        }
        @CustomType.Setter
        public Builder registryMetadata(GetWorkspaceFoldersFolderSummaryCollectionItemRegistryMetadata registryMetadata) {
            this.registryMetadata = Objects.requireNonNull(registryMetadata);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        public GetWorkspaceFoldersFolderSummaryCollectionItem build() {
            final var o = new GetWorkspaceFoldersFolderSummaryCollectionItem();
            o.categoryName = categoryName;
            o.description = description;
            o.folderKey = folderKey;
            o.identifier = identifier;
            o.key = key;
            o.keyMap = keyMap;
            o.metadatas = metadatas;
            o.modelType = modelType;
            o.modelVersion = modelVersion;
            o.name = name;
            o.objectStatus = objectStatus;
            o.objectVersion = objectVersion;
            o.parentReves = parentReves;
            o.registryMetadata = registryMetadata;
            o.workspaceId = workspaceId;
            return o;
        }
    }
}
