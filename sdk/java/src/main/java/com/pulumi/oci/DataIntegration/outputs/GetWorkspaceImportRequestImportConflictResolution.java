// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkspaceImportRequestImportConflictResolution {
    /**
     * @return In case of DUPLICATE mode, prefix will be used to disambiguate the object.
     * 
     */
    private String duplicatePrefix;
    /**
     * @return In case of DUPLICATE mode, suffix will be used to disambiguate the object.
     * 
     */
    private String duplicateSuffix;
    /**
     * @return Import Objects Conflict resolution Type (RETAIN/DUPLICATE/REPLACE).
     * 
     */
    private String importConflictResolutionType;

    private GetWorkspaceImportRequestImportConflictResolution() {}
    /**
     * @return In case of DUPLICATE mode, prefix will be used to disambiguate the object.
     * 
     */
    public String duplicatePrefix() {
        return this.duplicatePrefix;
    }
    /**
     * @return In case of DUPLICATE mode, suffix will be used to disambiguate the object.
     * 
     */
    public String duplicateSuffix() {
        return this.duplicateSuffix;
    }
    /**
     * @return Import Objects Conflict resolution Type (RETAIN/DUPLICATE/REPLACE).
     * 
     */
    public String importConflictResolutionType() {
        return this.importConflictResolutionType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceImportRequestImportConflictResolution defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String duplicatePrefix;
        private String duplicateSuffix;
        private String importConflictResolutionType;
        public Builder() {}
        public Builder(GetWorkspaceImportRequestImportConflictResolution defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duplicatePrefix = defaults.duplicatePrefix;
    	      this.duplicateSuffix = defaults.duplicateSuffix;
    	      this.importConflictResolutionType = defaults.importConflictResolutionType;
        }

        @CustomType.Setter
        public Builder duplicatePrefix(String duplicatePrefix) {
            if (duplicatePrefix == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceImportRequestImportConflictResolution", "duplicatePrefix");
            }
            this.duplicatePrefix = duplicatePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder duplicateSuffix(String duplicateSuffix) {
            if (duplicateSuffix == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceImportRequestImportConflictResolution", "duplicateSuffix");
            }
            this.duplicateSuffix = duplicateSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder importConflictResolutionType(String importConflictResolutionType) {
            if (importConflictResolutionType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceImportRequestImportConflictResolution", "importConflictResolutionType");
            }
            this.importConflictResolutionType = importConflictResolutionType;
            return this;
        }
        public GetWorkspaceImportRequestImportConflictResolution build() {
            final var _resultValue = new GetWorkspaceImportRequestImportConflictResolution();
            _resultValue.duplicatePrefix = duplicatePrefix;
            _resultValue.duplicateSuffix = duplicateSuffix;
            _resultValue.importConflictResolutionType = importConflictResolutionType;
            return _resultValue;
        }
    }
}
