// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskAuthConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskCancelRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskConfigProviderDelegate;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskExecuteRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskInputPort;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskOpConfigValue;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskOutputPort;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskParameter;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskParentRef;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskPollRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskRegistryMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTaskTypedExpression;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetWorkspaceTaskResult {
    /**
     * @return The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    private String apiCallMode;
    /**
     * @return Authentication configuration for Generic REST invocation.
     * 
     */
    private List<GetWorkspaceTaskAuthConfig> authConfigs;
    /**
     * @return The REST API configuration for cancelling the task.
     * 
     */
    private List<GetWorkspaceTaskCancelRestCallConfig> cancelRestCallConfigs;
    /**
     * @return The information about the configuration provider.
     * 
     */
    private List<GetWorkspaceTaskConfigProviderDelegate> configProviderDelegates;
    /**
     * @return Detailed description for the object.
     * 
     */
    private String description;
    /**
     * @return The REST API configuration for execution.
     * 
     */
    private List<GetWorkspaceTaskExecuteRestCallConfig> executeRestCallConfigs;
    private String expandReferences;
    private String id;
    /**
     * @return Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    private String identifier;
    /**
     * @return An array of input ports.
     * 
     */
    private List<GetWorkspaceTaskInputPort> inputPorts;
    /**
     * @return Defines whether Data Loader task is used for single load or multiple
     * 
     */
    private Boolean isSingleLoad;
    /**
     * @return The key of the object.
     * 
     */
    private String key;
    /**
     * @return A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    private Map<String,Object> keyMap;
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    private List<GetWorkspaceTaskMetadata> metadatas;
    /**
     * @return The type of the types object.
     * 
     */
    private String modelType;
    /**
     * @return The model version of an object.
     * 
     */
    private String modelVersion;
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    private Integer objectVersion;
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    private List<GetWorkspaceTaskOpConfigValue> opConfigValues;
    /**
     * @return Describes the shape of the execution result
     * 
     */
    private String operation;
    /**
     * @return An array of output ports.
     * 
     */
    private List<GetWorkspaceTaskOutputPort> outputPorts;
    /**
     * @return Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    private Integer parallelLoadLimit;
    /**
     * @return A list of parameters for the pipeline, this allows certain aspects of the pipeline to be configured when the pipeline is executed.
     * 
     */
    private List<GetWorkspaceTaskParameter> parameters;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private List<GetWorkspaceTaskParentRef> parentReves;
    /**
     * @return The REST API configuration for polling.
     * 
     */
    private List<GetWorkspaceTaskPollRestCallConfig> pollRestCallConfigs;
    /**
     * @return Information about the object and its parent.
     * 
     */
    private List<GetWorkspaceTaskRegistryMetadata> registryMetadatas;
    /**
     * @return List of typed expressions.
     * 
     */
    private List<GetWorkspaceTaskTypedExpression> typedExpressions;
    private String workspaceId;

    private GetWorkspaceTaskResult() {}
    /**
     * @return The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    public String apiCallMode() {
        return this.apiCallMode;
    }
    /**
     * @return Authentication configuration for Generic REST invocation.
     * 
     */
    public List<GetWorkspaceTaskAuthConfig> authConfigs() {
        return this.authConfigs;
    }
    /**
     * @return The REST API configuration for cancelling the task.
     * 
     */
    public List<GetWorkspaceTaskCancelRestCallConfig> cancelRestCallConfigs() {
        return this.cancelRestCallConfigs;
    }
    /**
     * @return The information about the configuration provider.
     * 
     */
    public List<GetWorkspaceTaskConfigProviderDelegate> configProviderDelegates() {
        return this.configProviderDelegates;
    }
    /**
     * @return Detailed description for the object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The REST API configuration for execution.
     * 
     */
    public List<GetWorkspaceTaskExecuteRestCallConfig> executeRestCallConfigs() {
        return this.executeRestCallConfigs;
    }
    public String expandReferences() {
        return this.expandReferences;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return An array of input ports.
     * 
     */
    public List<GetWorkspaceTaskInputPort> inputPorts() {
        return this.inputPorts;
    }
    /**
     * @return Defines whether Data Loader task is used for single load or multiple
     * 
     */
    public Boolean isSingleLoad() {
        return this.isSingleLoad;
    }
    /**
     * @return The key of the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    public Map<String,Object> keyMap() {
        return this.keyMap;
    }
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public List<GetWorkspaceTaskMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return The type of the types object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return The model version of an object.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Integer objectVersion() {
        return this.objectVersion;
    }
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    public List<GetWorkspaceTaskOpConfigValue> opConfigValues() {
        return this.opConfigValues;
    }
    /**
     * @return Describes the shape of the execution result
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return An array of output ports.
     * 
     */
    public List<GetWorkspaceTaskOutputPort> outputPorts() {
        return this.outputPorts;
    }
    /**
     * @return Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    public Integer parallelLoadLimit() {
        return this.parallelLoadLimit;
    }
    /**
     * @return A list of parameters for the pipeline, this allows certain aspects of the pipeline to be configured when the pipeline is executed.
     * 
     */
    public List<GetWorkspaceTaskParameter> parameters() {
        return this.parameters;
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public List<GetWorkspaceTaskParentRef> parentReves() {
        return this.parentReves;
    }
    /**
     * @return The REST API configuration for polling.
     * 
     */
    public List<GetWorkspaceTaskPollRestCallConfig> pollRestCallConfigs() {
        return this.pollRestCallConfigs;
    }
    /**
     * @return Information about the object and its parent.
     * 
     */
    public List<GetWorkspaceTaskRegistryMetadata> registryMetadatas() {
        return this.registryMetadatas;
    }
    /**
     * @return List of typed expressions.
     * 
     */
    public List<GetWorkspaceTaskTypedExpression> typedExpressions() {
        return this.typedExpressions;
    }
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceTaskResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiCallMode;
        private List<GetWorkspaceTaskAuthConfig> authConfigs;
        private List<GetWorkspaceTaskCancelRestCallConfig> cancelRestCallConfigs;
        private List<GetWorkspaceTaskConfigProviderDelegate> configProviderDelegates;
        private String description;
        private List<GetWorkspaceTaskExecuteRestCallConfig> executeRestCallConfigs;
        private String expandReferences;
        private String id;
        private String identifier;
        private List<GetWorkspaceTaskInputPort> inputPorts;
        private Boolean isSingleLoad;
        private String key;
        private Map<String,Object> keyMap;
        private List<GetWorkspaceTaskMetadata> metadatas;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private Integer objectVersion;
        private List<GetWorkspaceTaskOpConfigValue> opConfigValues;
        private String operation;
        private List<GetWorkspaceTaskOutputPort> outputPorts;
        private Integer parallelLoadLimit;
        private List<GetWorkspaceTaskParameter> parameters;
        private List<GetWorkspaceTaskParentRef> parentReves;
        private List<GetWorkspaceTaskPollRestCallConfig> pollRestCallConfigs;
        private List<GetWorkspaceTaskRegistryMetadata> registryMetadatas;
        private List<GetWorkspaceTaskTypedExpression> typedExpressions;
        private String workspaceId;
        public Builder() {}
        public Builder(GetWorkspaceTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiCallMode = defaults.apiCallMode;
    	      this.authConfigs = defaults.authConfigs;
    	      this.cancelRestCallConfigs = defaults.cancelRestCallConfigs;
    	      this.configProviderDelegates = defaults.configProviderDelegates;
    	      this.description = defaults.description;
    	      this.executeRestCallConfigs = defaults.executeRestCallConfigs;
    	      this.expandReferences = defaults.expandReferences;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.inputPorts = defaults.inputPorts;
    	      this.isSingleLoad = defaults.isSingleLoad;
    	      this.key = defaults.key;
    	      this.keyMap = defaults.keyMap;
    	      this.metadatas = defaults.metadatas;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.objectVersion = defaults.objectVersion;
    	      this.opConfigValues = defaults.opConfigValues;
    	      this.operation = defaults.operation;
    	      this.outputPorts = defaults.outputPorts;
    	      this.parallelLoadLimit = defaults.parallelLoadLimit;
    	      this.parameters = defaults.parameters;
    	      this.parentReves = defaults.parentReves;
    	      this.pollRestCallConfigs = defaults.pollRestCallConfigs;
    	      this.registryMetadatas = defaults.registryMetadatas;
    	      this.typedExpressions = defaults.typedExpressions;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder apiCallMode(String apiCallMode) {
            if (apiCallMode == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "apiCallMode");
            }
            this.apiCallMode = apiCallMode;
            return this;
        }
        @CustomType.Setter
        public Builder authConfigs(List<GetWorkspaceTaskAuthConfig> authConfigs) {
            if (authConfigs == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "authConfigs");
            }
            this.authConfigs = authConfigs;
            return this;
        }
        public Builder authConfigs(GetWorkspaceTaskAuthConfig... authConfigs) {
            return authConfigs(List.of(authConfigs));
        }
        @CustomType.Setter
        public Builder cancelRestCallConfigs(List<GetWorkspaceTaskCancelRestCallConfig> cancelRestCallConfigs) {
            if (cancelRestCallConfigs == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "cancelRestCallConfigs");
            }
            this.cancelRestCallConfigs = cancelRestCallConfigs;
            return this;
        }
        public Builder cancelRestCallConfigs(GetWorkspaceTaskCancelRestCallConfig... cancelRestCallConfigs) {
            return cancelRestCallConfigs(List.of(cancelRestCallConfigs));
        }
        @CustomType.Setter
        public Builder configProviderDelegates(List<GetWorkspaceTaskConfigProviderDelegate> configProviderDelegates) {
            if (configProviderDelegates == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "configProviderDelegates");
            }
            this.configProviderDelegates = configProviderDelegates;
            return this;
        }
        public Builder configProviderDelegates(GetWorkspaceTaskConfigProviderDelegate... configProviderDelegates) {
            return configProviderDelegates(List.of(configProviderDelegates));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder executeRestCallConfigs(List<GetWorkspaceTaskExecuteRestCallConfig> executeRestCallConfigs) {
            if (executeRestCallConfigs == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "executeRestCallConfigs");
            }
            this.executeRestCallConfigs = executeRestCallConfigs;
            return this;
        }
        public Builder executeRestCallConfigs(GetWorkspaceTaskExecuteRestCallConfig... executeRestCallConfigs) {
            return executeRestCallConfigs(List.of(executeRestCallConfigs));
        }
        @CustomType.Setter
        public Builder expandReferences(String expandReferences) {
            if (expandReferences == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "expandReferences");
            }
            this.expandReferences = expandReferences;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder inputPorts(List<GetWorkspaceTaskInputPort> inputPorts) {
            if (inputPorts == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "inputPorts");
            }
            this.inputPorts = inputPorts;
            return this;
        }
        public Builder inputPorts(GetWorkspaceTaskInputPort... inputPorts) {
            return inputPorts(List.of(inputPorts));
        }
        @CustomType.Setter
        public Builder isSingleLoad(Boolean isSingleLoad) {
            if (isSingleLoad == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "isSingleLoad");
            }
            this.isSingleLoad = isSingleLoad;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder keyMap(Map<String,Object> keyMap) {
            if (keyMap == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "keyMap");
            }
            this.keyMap = keyMap;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(List<GetWorkspaceTaskMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetWorkspaceTaskMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            if (modelVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "modelVersion");
            }
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            if (objectStatus == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "objectStatus");
            }
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder objectVersion(Integer objectVersion) {
            if (objectVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "objectVersion");
            }
            this.objectVersion = objectVersion;
            return this;
        }
        @CustomType.Setter
        public Builder opConfigValues(List<GetWorkspaceTaskOpConfigValue> opConfigValues) {
            if (opConfigValues == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "opConfigValues");
            }
            this.opConfigValues = opConfigValues;
            return this;
        }
        public Builder opConfigValues(GetWorkspaceTaskOpConfigValue... opConfigValues) {
            return opConfigValues(List.of(opConfigValues));
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            if (operation == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "operation");
            }
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder outputPorts(List<GetWorkspaceTaskOutputPort> outputPorts) {
            if (outputPorts == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "outputPorts");
            }
            this.outputPorts = outputPorts;
            return this;
        }
        public Builder outputPorts(GetWorkspaceTaskOutputPort... outputPorts) {
            return outputPorts(List.of(outputPorts));
        }
        @CustomType.Setter
        public Builder parallelLoadLimit(Integer parallelLoadLimit) {
            if (parallelLoadLimit == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "parallelLoadLimit");
            }
            this.parallelLoadLimit = parallelLoadLimit;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(List<GetWorkspaceTaskParameter> parameters) {
            if (parameters == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "parameters");
            }
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(GetWorkspaceTaskParameter... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder parentReves(List<GetWorkspaceTaskParentRef> parentReves) {
            if (parentReves == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "parentReves");
            }
            this.parentReves = parentReves;
            return this;
        }
        public Builder parentReves(GetWorkspaceTaskParentRef... parentReves) {
            return parentReves(List.of(parentReves));
        }
        @CustomType.Setter
        public Builder pollRestCallConfigs(List<GetWorkspaceTaskPollRestCallConfig> pollRestCallConfigs) {
            if (pollRestCallConfigs == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "pollRestCallConfigs");
            }
            this.pollRestCallConfigs = pollRestCallConfigs;
            return this;
        }
        public Builder pollRestCallConfigs(GetWorkspaceTaskPollRestCallConfig... pollRestCallConfigs) {
            return pollRestCallConfigs(List.of(pollRestCallConfigs));
        }
        @CustomType.Setter
        public Builder registryMetadatas(List<GetWorkspaceTaskRegistryMetadata> registryMetadatas) {
            if (registryMetadatas == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "registryMetadatas");
            }
            this.registryMetadatas = registryMetadatas;
            return this;
        }
        public Builder registryMetadatas(GetWorkspaceTaskRegistryMetadata... registryMetadatas) {
            return registryMetadatas(List.of(registryMetadatas));
        }
        @CustomType.Setter
        public Builder typedExpressions(List<GetWorkspaceTaskTypedExpression> typedExpressions) {
            if (typedExpressions == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "typedExpressions");
            }
            this.typedExpressions = typedExpressions;
            return this;
        }
        public Builder typedExpressions(GetWorkspaceTaskTypedExpression... typedExpressions) {
            return typedExpressions(List.of(typedExpressions));
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTaskResult", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        public GetWorkspaceTaskResult build() {
            final var _resultValue = new GetWorkspaceTaskResult();
            _resultValue.apiCallMode = apiCallMode;
            _resultValue.authConfigs = authConfigs;
            _resultValue.cancelRestCallConfigs = cancelRestCallConfigs;
            _resultValue.configProviderDelegates = configProviderDelegates;
            _resultValue.description = description;
            _resultValue.executeRestCallConfigs = executeRestCallConfigs;
            _resultValue.expandReferences = expandReferences;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.inputPorts = inputPorts;
            _resultValue.isSingleLoad = isSingleLoad;
            _resultValue.key = key;
            _resultValue.keyMap = keyMap;
            _resultValue.metadatas = metadatas;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.objectVersion = objectVersion;
            _resultValue.opConfigValues = opConfigValues;
            _resultValue.operation = operation;
            _resultValue.outputPorts = outputPorts;
            _resultValue.parallelLoadLimit = parallelLoadLimit;
            _resultValue.parameters = parameters;
            _resultValue.parentReves = parentReves;
            _resultValue.pollRestCallConfigs = pollRestCallConfigs;
            _resultValue.registryMetadatas = registryMetadatas;
            _resultValue.typedExpressions = typedExpressions;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
