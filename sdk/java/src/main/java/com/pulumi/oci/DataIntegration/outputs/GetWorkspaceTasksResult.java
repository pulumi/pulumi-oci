// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksFilter;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceTasksResult {
    /**
     * @return An array of fields.
     * 
     */
    private @Nullable List<String> fields;
    private @Nullable List<GetWorkspaceTasksFilter> filters;
    private @Nullable String folderId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    private @Nullable List<String> identifiers;
    /**
     * @return The key of the object.
     * 
     */
    private @Nullable List<String> keys;
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private @Nullable String name;
    /**
     * @return The list of task_summary_collection.
     * 
     */
    private List<GetWorkspaceTasksTaskSummaryCollection> taskSummaryCollections;
    /**
     * @return The object type.
     * 
     */
    private @Nullable List<String> types;
    private String workspaceId;

    private GetWorkspaceTasksResult() {}
    /**
     * @return An array of fields.
     * 
     */
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    public List<GetWorkspaceTasksFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> folderId() {
        return Optional.ofNullable(this.folderId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public List<String> identifiers() {
        return this.identifiers == null ? List.of() : this.identifiers;
    }
    /**
     * @return The key of the object.
     * 
     */
    public List<String> keys() {
        return this.keys == null ? List.of() : this.keys;
    }
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of task_summary_collection.
     * 
     */
    public List<GetWorkspaceTasksTaskSummaryCollection> taskSummaryCollections() {
        return this.taskSummaryCollections;
    }
    /**
     * @return The object type.
     * 
     */
    public List<String> types() {
        return this.types == null ? List.of() : this.types;
    }
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceTasksResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> fields;
        private @Nullable List<GetWorkspaceTasksFilter> filters;
        private @Nullable String folderId;
        private String id;
        private @Nullable List<String> identifiers;
        private @Nullable List<String> keys;
        private @Nullable String name;
        private List<GetWorkspaceTasksTaskSummaryCollection> taskSummaryCollections;
        private @Nullable List<String> types;
        private String workspaceId;
        public Builder() {}
        public Builder(GetWorkspaceTasksResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fields = defaults.fields;
    	      this.filters = defaults.filters;
    	      this.folderId = defaults.folderId;
    	      this.id = defaults.id;
    	      this.identifiers = defaults.identifiers;
    	      this.keys = defaults.keys;
    	      this.name = defaults.name;
    	      this.taskSummaryCollections = defaults.taskSummaryCollections;
    	      this.types = defaults.types;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder fields(@Nullable List<String> fields) {

            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetWorkspaceTasksFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetWorkspaceTasksFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder folderId(@Nullable String folderId) {

            this.folderId = folderId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifiers(@Nullable List<String> identifiers) {

            this.identifiers = identifiers;
            return this;
        }
        public Builder identifiers(String... identifiers) {
            return identifiers(List.of(identifiers));
        }
        @CustomType.Setter
        public Builder keys(@Nullable List<String> keys) {

            this.keys = keys;
            return this;
        }
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder taskSummaryCollections(List<GetWorkspaceTasksTaskSummaryCollection> taskSummaryCollections) {
            if (taskSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksResult", "taskSummaryCollections");
            }
            this.taskSummaryCollections = taskSummaryCollections;
            return this;
        }
        public Builder taskSummaryCollections(GetWorkspaceTasksTaskSummaryCollection... taskSummaryCollections) {
            return taskSummaryCollections(List.of(taskSummaryCollections));
        }
        @CustomType.Setter
        public Builder types(@Nullable List<String> types) {

            this.types = types;
            return this;
        }
        public Builder types(String... types) {
            return types(List.of(types));
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksResult", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        public GetWorkspaceTasksResult build() {
            final var _resultValue = new GetWorkspaceTasksResult();
            _resultValue.fields = fields;
            _resultValue.filters = filters;
            _resultValue.folderId = folderId;
            _resultValue.id = id;
            _resultValue.identifiers = identifiers;
            _resultValue.keys = keys;
            _resultValue.name = name;
            _resultValue.taskSummaryCollections = taskSummaryCollections;
            _resultValue.types = types;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
