// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemAuthConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemCancelRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemConfigProviderDelegate;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemExecuteRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemInputPort;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemOpConfigValues;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemOutputPort;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameter;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemParentRef;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemPollRestCallConfig;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemRegistryMetadata;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemTypedExpression;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetWorkspaceTasksTaskSummaryCollectionItem {
    /**
     * @return The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    private String apiCallMode;
    /**
     * @return Authentication configuration for Generic REST invocation.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemAuthConfig authConfig;
    /**
     * @return The REST API configuration for cancelling the task.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemCancelRestCallConfig cancelRestCallConfig;
    /**
     * @return The information about the configuration provider.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemConfigProviderDelegate configProviderDelegate;
    /**
     * @return Detailed description for the object.
     * 
     */
    private String description;
    /**
     * @return The REST API configuration for execution.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemExecuteRestCallConfig executeRestCallConfig;
    /**
     * @return Used to filter by the identifier of the object.
     * 
     */
    private String identifier;
    /**
     * @return An array of input ports.
     * 
     */
    private List<GetWorkspaceTasksTaskSummaryCollectionItemInputPort> inputPorts;
    /**
     * @return Defines whether Data Loader task is used for single load or multiple
     * 
     */
    private Boolean isSingleLoad;
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    private String key;
    /**
     * @return A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    private Map<String,String> keyMap;
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    private List<GetWorkspaceTasksTaskSummaryCollectionItemMetadata> metadatas;
    /**
     * @return The type of the types object.
     * 
     */
    private String modelType;
    /**
     * @return The model version of an object.
     * 
     */
    private String modelVersion;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    private Integer objectVersion;
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemOpConfigValues opConfigValues;
    /**
     * @return Describes the shape of the execution result
     * 
     */
    private String operation;
    /**
     * @return An array of output ports.
     * 
     */
    private List<GetWorkspaceTasksTaskSummaryCollectionItemOutputPort> outputPorts;
    /**
     * @return Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    private Integer parallelLoadLimit;
    /**
     * @return A list of parameters for the pipeline, this allows certain aspects of the pipeline to be configured when the pipeline is executed.
     * 
     */
    private List<GetWorkspaceTasksTaskSummaryCollectionItemParameter> parameters;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemParentRef parentRef;
    /**
     * @return The REST API configuration for polling.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemPollRestCallConfig pollRestCallConfig;
    /**
     * @return Information about the object and its parent.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemRegistryMetadata registryMetadata;
    /**
     * @return List of typed expressions.
     * 
     */
    private List<GetWorkspaceTasksTaskSummaryCollectionItemTypedExpression> typedExpressions;
    /**
     * @return The workspace ID.
     * 
     */
    private String workspaceId;

    private GetWorkspaceTasksTaskSummaryCollectionItem() {}
    /**
     * @return The REST invocation pattern to use. ASYNC_OCI_WORKREQUEST is being deprecated as well as cancelEndpoint/MethodType.
     * 
     */
    public String apiCallMode() {
        return this.apiCallMode;
    }
    /**
     * @return Authentication configuration for Generic REST invocation.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemAuthConfig authConfig() {
        return this.authConfig;
    }
    /**
     * @return The REST API configuration for cancelling the task.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemCancelRestCallConfig cancelRestCallConfig() {
        return this.cancelRestCallConfig;
    }
    /**
     * @return The information about the configuration provider.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemConfigProviderDelegate configProviderDelegate() {
        return this.configProviderDelegate;
    }
    /**
     * @return Detailed description for the object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The REST API configuration for execution.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemExecuteRestCallConfig executeRestCallConfig() {
        return this.executeRestCallConfig;
    }
    /**
     * @return Used to filter by the identifier of the object.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return An array of input ports.
     * 
     */
    public List<GetWorkspaceTasksTaskSummaryCollectionItemInputPort> inputPorts() {
        return this.inputPorts;
    }
    /**
     * @return Defines whether Data Loader task is used for single load or multiple
     * 
     */
    public Boolean isSingleLoad() {
        return this.isSingleLoad;
    }
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     * 
     */
    public Map<String,String> keyMap() {
        return this.keyMap;
    }
    /**
     * @return A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public List<GetWorkspaceTasksTaskSummaryCollectionItemMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return The type of the types object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return The model version of an object.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
     * 
     */
    public Integer objectVersion() {
        return this.objectVersion;
    }
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemOpConfigValues opConfigValues() {
        return this.opConfigValues;
    }
    /**
     * @return Describes the shape of the execution result
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return An array of output ports.
     * 
     */
    public List<GetWorkspaceTasksTaskSummaryCollectionItemOutputPort> outputPorts() {
        return this.outputPorts;
    }
    /**
     * @return Defines the number of entities being loaded in parallel at a time for a Data Loader task
     * 
     */
    public Integer parallelLoadLimit() {
        return this.parallelLoadLimit;
    }
    /**
     * @return A list of parameters for the pipeline, this allows certain aspects of the pipeline to be configured when the pipeline is executed.
     * 
     */
    public List<GetWorkspaceTasksTaskSummaryCollectionItemParameter> parameters() {
        return this.parameters;
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemParentRef parentRef() {
        return this.parentRef;
    }
    /**
     * @return The REST API configuration for polling.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemPollRestCallConfig pollRestCallConfig() {
        return this.pollRestCallConfig;
    }
    /**
     * @return Information about the object and its parent.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemRegistryMetadata registryMetadata() {
        return this.registryMetadata;
    }
    /**
     * @return List of typed expressions.
     * 
     */
    public List<GetWorkspaceTasksTaskSummaryCollectionItemTypedExpression> typedExpressions() {
        return this.typedExpressions;
    }
    /**
     * @return The workspace ID.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceTasksTaskSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiCallMode;
        private GetWorkspaceTasksTaskSummaryCollectionItemAuthConfig authConfig;
        private GetWorkspaceTasksTaskSummaryCollectionItemCancelRestCallConfig cancelRestCallConfig;
        private GetWorkspaceTasksTaskSummaryCollectionItemConfigProviderDelegate configProviderDelegate;
        private String description;
        private GetWorkspaceTasksTaskSummaryCollectionItemExecuteRestCallConfig executeRestCallConfig;
        private String identifier;
        private List<GetWorkspaceTasksTaskSummaryCollectionItemInputPort> inputPorts;
        private Boolean isSingleLoad;
        private String key;
        private Map<String,String> keyMap;
        private List<GetWorkspaceTasksTaskSummaryCollectionItemMetadata> metadatas;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private Integer objectVersion;
        private GetWorkspaceTasksTaskSummaryCollectionItemOpConfigValues opConfigValues;
        private String operation;
        private List<GetWorkspaceTasksTaskSummaryCollectionItemOutputPort> outputPorts;
        private Integer parallelLoadLimit;
        private List<GetWorkspaceTasksTaskSummaryCollectionItemParameter> parameters;
        private GetWorkspaceTasksTaskSummaryCollectionItemParentRef parentRef;
        private GetWorkspaceTasksTaskSummaryCollectionItemPollRestCallConfig pollRestCallConfig;
        private GetWorkspaceTasksTaskSummaryCollectionItemRegistryMetadata registryMetadata;
        private List<GetWorkspaceTasksTaskSummaryCollectionItemTypedExpression> typedExpressions;
        private String workspaceId;
        public Builder() {}
        public Builder(GetWorkspaceTasksTaskSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiCallMode = defaults.apiCallMode;
    	      this.authConfig = defaults.authConfig;
    	      this.cancelRestCallConfig = defaults.cancelRestCallConfig;
    	      this.configProviderDelegate = defaults.configProviderDelegate;
    	      this.description = defaults.description;
    	      this.executeRestCallConfig = defaults.executeRestCallConfig;
    	      this.identifier = defaults.identifier;
    	      this.inputPorts = defaults.inputPorts;
    	      this.isSingleLoad = defaults.isSingleLoad;
    	      this.key = defaults.key;
    	      this.keyMap = defaults.keyMap;
    	      this.metadatas = defaults.metadatas;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.objectVersion = defaults.objectVersion;
    	      this.opConfigValues = defaults.opConfigValues;
    	      this.operation = defaults.operation;
    	      this.outputPorts = defaults.outputPorts;
    	      this.parallelLoadLimit = defaults.parallelLoadLimit;
    	      this.parameters = defaults.parameters;
    	      this.parentRef = defaults.parentRef;
    	      this.pollRestCallConfig = defaults.pollRestCallConfig;
    	      this.registryMetadata = defaults.registryMetadata;
    	      this.typedExpressions = defaults.typedExpressions;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder apiCallMode(String apiCallMode) {
            if (apiCallMode == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "apiCallMode");
            }
            this.apiCallMode = apiCallMode;
            return this;
        }
        @CustomType.Setter
        public Builder authConfig(GetWorkspaceTasksTaskSummaryCollectionItemAuthConfig authConfig) {
            if (authConfig == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "authConfig");
            }
            this.authConfig = authConfig;
            return this;
        }
        @CustomType.Setter
        public Builder cancelRestCallConfig(GetWorkspaceTasksTaskSummaryCollectionItemCancelRestCallConfig cancelRestCallConfig) {
            if (cancelRestCallConfig == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "cancelRestCallConfig");
            }
            this.cancelRestCallConfig = cancelRestCallConfig;
            return this;
        }
        @CustomType.Setter
        public Builder configProviderDelegate(GetWorkspaceTasksTaskSummaryCollectionItemConfigProviderDelegate configProviderDelegate) {
            if (configProviderDelegate == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "configProviderDelegate");
            }
            this.configProviderDelegate = configProviderDelegate;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder executeRestCallConfig(GetWorkspaceTasksTaskSummaryCollectionItemExecuteRestCallConfig executeRestCallConfig) {
            if (executeRestCallConfig == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "executeRestCallConfig");
            }
            this.executeRestCallConfig = executeRestCallConfig;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder inputPorts(List<GetWorkspaceTasksTaskSummaryCollectionItemInputPort> inputPorts) {
            if (inputPorts == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "inputPorts");
            }
            this.inputPorts = inputPorts;
            return this;
        }
        public Builder inputPorts(GetWorkspaceTasksTaskSummaryCollectionItemInputPort... inputPorts) {
            return inputPorts(List.of(inputPorts));
        }
        @CustomType.Setter
        public Builder isSingleLoad(Boolean isSingleLoad) {
            if (isSingleLoad == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "isSingleLoad");
            }
            this.isSingleLoad = isSingleLoad;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder keyMap(Map<String,String> keyMap) {
            if (keyMap == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "keyMap");
            }
            this.keyMap = keyMap;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(List<GetWorkspaceTasksTaskSummaryCollectionItemMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetWorkspaceTasksTaskSummaryCollectionItemMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            if (modelVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "modelVersion");
            }
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            if (objectStatus == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "objectStatus");
            }
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder objectVersion(Integer objectVersion) {
            if (objectVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "objectVersion");
            }
            this.objectVersion = objectVersion;
            return this;
        }
        @CustomType.Setter
        public Builder opConfigValues(GetWorkspaceTasksTaskSummaryCollectionItemOpConfigValues opConfigValues) {
            if (opConfigValues == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "opConfigValues");
            }
            this.opConfigValues = opConfigValues;
            return this;
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            if (operation == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "operation");
            }
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder outputPorts(List<GetWorkspaceTasksTaskSummaryCollectionItemOutputPort> outputPorts) {
            if (outputPorts == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "outputPorts");
            }
            this.outputPorts = outputPorts;
            return this;
        }
        public Builder outputPorts(GetWorkspaceTasksTaskSummaryCollectionItemOutputPort... outputPorts) {
            return outputPorts(List.of(outputPorts));
        }
        @CustomType.Setter
        public Builder parallelLoadLimit(Integer parallelLoadLimit) {
            if (parallelLoadLimit == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "parallelLoadLimit");
            }
            this.parallelLoadLimit = parallelLoadLimit;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(List<GetWorkspaceTasksTaskSummaryCollectionItemParameter> parameters) {
            if (parameters == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "parameters");
            }
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(GetWorkspaceTasksTaskSummaryCollectionItemParameter... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder parentRef(GetWorkspaceTasksTaskSummaryCollectionItemParentRef parentRef) {
            if (parentRef == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "parentRef");
            }
            this.parentRef = parentRef;
            return this;
        }
        @CustomType.Setter
        public Builder pollRestCallConfig(GetWorkspaceTasksTaskSummaryCollectionItemPollRestCallConfig pollRestCallConfig) {
            if (pollRestCallConfig == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "pollRestCallConfig");
            }
            this.pollRestCallConfig = pollRestCallConfig;
            return this;
        }
        @CustomType.Setter
        public Builder registryMetadata(GetWorkspaceTasksTaskSummaryCollectionItemRegistryMetadata registryMetadata) {
            if (registryMetadata == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "registryMetadata");
            }
            this.registryMetadata = registryMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder typedExpressions(List<GetWorkspaceTasksTaskSummaryCollectionItemTypedExpression> typedExpressions) {
            if (typedExpressions == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "typedExpressions");
            }
            this.typedExpressions = typedExpressions;
            return this;
        }
        public Builder typedExpressions(GetWorkspaceTasksTaskSummaryCollectionItemTypedExpression... typedExpressions) {
            return typedExpressions(List.of(typedExpressions));
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItem", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        public GetWorkspaceTasksTaskSummaryCollectionItem build() {
            final var _resultValue = new GetWorkspaceTasksTaskSummaryCollectionItem();
            _resultValue.apiCallMode = apiCallMode;
            _resultValue.authConfig = authConfig;
            _resultValue.cancelRestCallConfig = cancelRestCallConfig;
            _resultValue.configProviderDelegate = configProviderDelegate;
            _resultValue.description = description;
            _resultValue.executeRestCallConfig = executeRestCallConfig;
            _resultValue.identifier = identifier;
            _resultValue.inputPorts = inputPorts;
            _resultValue.isSingleLoad = isSingleLoad;
            _resultValue.key = key;
            _resultValue.keyMap = keyMap;
            _resultValue.metadatas = metadatas;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.objectVersion = objectVersion;
            _resultValue.opConfigValues = opConfigValues;
            _resultValue.operation = operation;
            _resultValue.outputPorts = outputPorts;
            _resultValue.parallelLoadLimit = parallelLoadLimit;
            _resultValue.parameters = parameters;
            _resultValue.parentRef = parentRef;
            _resultValue.pollRestCallConfig = pollRestCallConfig;
            _resultValue.registryMetadata = registryMetadata;
            _resultValue.typedExpressions = typedExpressions;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
