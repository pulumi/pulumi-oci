// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemInputPortConfigValues;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemInputPortParentRef;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkspaceTasksTaskSummaryCollectionItemInputPort {
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemInputPortConfigValues configValues;
    /**
     * @return Detailed description for the object.
     * 
     */
    private String description;
    /**
     * @return Specifies the fields to get for an object.
     * 
     */
    private List<String> fields;
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    private String key;
    /**
     * @return The type of the types object.
     * 
     */
    private String modelType;
    /**
     * @return The model version of an object.
     * 
     */
    private String modelVersion;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemInputPortParentRef parentRef;
    /**
     * @return The port details for the data asset.Type.
     * 
     */
    private String portType;

    private GetWorkspaceTasksTaskSummaryCollectionItemInputPort() {}
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemInputPortConfigValues configValues() {
        return this.configValues;
    }
    /**
     * @return Detailed description for the object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Specifies the fields to get for an object.
     * 
     */
    public List<String> fields() {
        return this.fields;
    }
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The type of the types object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return The model version of an object.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemInputPortParentRef parentRef() {
        return this.parentRef;
    }
    /**
     * @return The port details for the data asset.Type.
     * 
     */
    public String portType() {
        return this.portType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceTasksTaskSummaryCollectionItemInputPort defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetWorkspaceTasksTaskSummaryCollectionItemInputPortConfigValues configValues;
        private String description;
        private List<String> fields;
        private String key;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private GetWorkspaceTasksTaskSummaryCollectionItemInputPortParentRef parentRef;
        private String portType;
        public Builder() {}
        public Builder(GetWorkspaceTasksTaskSummaryCollectionItemInputPort defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configValues = defaults.configValues;
    	      this.description = defaults.description;
    	      this.fields = defaults.fields;
    	      this.key = defaults.key;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.parentRef = defaults.parentRef;
    	      this.portType = defaults.portType;
        }

        @CustomType.Setter
        public Builder configValues(GetWorkspaceTasksTaskSummaryCollectionItemInputPortConfigValues configValues) {
            if (configValues == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "configValues");
            }
            this.configValues = configValues;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder fields(List<String> fields) {
            if (fields == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "fields");
            }
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            if (modelVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "modelVersion");
            }
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            if (objectStatus == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "objectStatus");
            }
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder parentRef(GetWorkspaceTasksTaskSummaryCollectionItemInputPortParentRef parentRef) {
            if (parentRef == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "parentRef");
            }
            this.parentRef = parentRef;
            return this;
        }
        @CustomType.Setter
        public Builder portType(String portType) {
            if (portType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemInputPort", "portType");
            }
            this.portType = portType;
            return this;
        }
        public GetWorkspaceTasksTaskSummaryCollectionItemInputPort build() {
            final var _resultValue = new GetWorkspaceTasksTaskSummaryCollectionItemInputPort();
            _resultValue.configValues = configValues;
            _resultValue.description = description;
            _resultValue.fields = fields;
            _resultValue.key = key;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.parentRef = parentRef;
            _resultValue.portType = portType;
            return _resultValue;
        }
    }
}
