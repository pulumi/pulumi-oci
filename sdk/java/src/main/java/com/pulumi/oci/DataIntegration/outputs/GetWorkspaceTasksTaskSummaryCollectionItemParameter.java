// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterConfigValues;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspaceTasksTaskSummaryCollectionItemParameterParentRef;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkspaceTasksTaskSummaryCollectionItemParameter {
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemParameterConfigValues configValues;
    /**
     * @return A default value for the vairable.
     * 
     */
    private String defaultValue;
    /**
     * @return Detailed description for the object.
     * 
     */
    private String description;
    /**
     * @return Specifies whether the parameter is input value.
     * 
     */
    private Boolean isInput;
    /**
     * @return Specifies whether the parameter is output value.
     * 
     */
    private Boolean isOutput;
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    private String key;
    /**
     * @return The type of the types object.
     * 
     */
    private String modelType;
    /**
     * @return The model version of an object.
     * 
     */
    private String modelVersion;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private String name;
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private Integer objectStatus;
    /**
     * @return The output aggregation type.
     * 
     */
    private String outputAggregationType;
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    private GetWorkspaceTasksTaskSummaryCollectionItemParameterParentRef parentRef;
    /**
     * @return A base class for all model types, including First Class and its contained objects.
     * 
     */
    private String rootObjectDefaultValue;
    /**
     * @return Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. &lt;br&gt;&lt;br&gt;&lt;B&gt;Examples:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=false&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
     * 
     */
    private String type;
    /**
     * @return The type of value the parameter was created for.
     * 
     */
    private String typeName;
    /**
     * @return The param name for which parameter is created for for eg. driver Shape, Operation etc.
     * 
     */
    private String usedFor;

    private GetWorkspaceTasksTaskSummaryCollectionItemParameter() {}
    /**
     * @return Configuration values can be string, objects, or parameters.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemParameterConfigValues configValues() {
        return this.configValues;
    }
    /**
     * @return A default value for the vairable.
     * 
     */
    public String defaultValue() {
        return this.defaultValue;
    }
    /**
     * @return Detailed description for the object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Specifies whether the parameter is input value.
     * 
     */
    public Boolean isInput() {
        return this.isInput;
    }
    /**
     * @return Specifies whether the parameter is output value.
     * 
     */
    public Boolean isOutput() {
        return this.isOutput;
    }
    /**
     * @return Used to filter by the key of the object.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The type of the types object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return The model version of an object.
     * 
     */
    public String modelVersion() {
        return this.modelVersion;
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Integer objectStatus() {
        return this.objectStatus;
    }
    /**
     * @return The output aggregation type.
     * 
     */
    public String outputAggregationType() {
        return this.outputAggregationType;
    }
    /**
     * @return A reference to the object&#39;s parent.
     * 
     */
    public GetWorkspaceTasksTaskSummaryCollectionItemParameterParentRef parentRef() {
        return this.parentRef;
    }
    /**
     * @return A base class for all model types, including First Class and its contained objects.
     * 
     */
    public String rootObjectDefaultValue() {
        return this.rootObjectDefaultValue;
    }
    /**
     * @return Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. &lt;br&gt;&lt;br&gt;&lt;B&gt;Examples:&lt;/B&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=false&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;li&gt;&lt;B&gt;?type=DATA_LOADER_TASK&amp;typeInSubtree=true&lt;/B&gt; returns all objects of type data loader task&lt;/li&gt; &lt;/ul&gt;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The type of value the parameter was created for.
     * 
     */
    public String typeName() {
        return this.typeName;
    }
    /**
     * @return The param name for which parameter is created for for eg. driver Shape, Operation etc.
     * 
     */
    public String usedFor() {
        return this.usedFor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceTasksTaskSummaryCollectionItemParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetWorkspaceTasksTaskSummaryCollectionItemParameterConfigValues configValues;
        private String defaultValue;
        private String description;
        private Boolean isInput;
        private Boolean isOutput;
        private String key;
        private String modelType;
        private String modelVersion;
        private String name;
        private Integer objectStatus;
        private String outputAggregationType;
        private GetWorkspaceTasksTaskSummaryCollectionItemParameterParentRef parentRef;
        private String rootObjectDefaultValue;
        private String type;
        private String typeName;
        private String usedFor;
        public Builder() {}
        public Builder(GetWorkspaceTasksTaskSummaryCollectionItemParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configValues = defaults.configValues;
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.isInput = defaults.isInput;
    	      this.isOutput = defaults.isOutput;
    	      this.key = defaults.key;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.outputAggregationType = defaults.outputAggregationType;
    	      this.parentRef = defaults.parentRef;
    	      this.rootObjectDefaultValue = defaults.rootObjectDefaultValue;
    	      this.type = defaults.type;
    	      this.typeName = defaults.typeName;
    	      this.usedFor = defaults.usedFor;
        }

        @CustomType.Setter
        public Builder configValues(GetWorkspaceTasksTaskSummaryCollectionItemParameterConfigValues configValues) {
            if (configValues == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "configValues");
            }
            this.configValues = configValues;
            return this;
        }
        @CustomType.Setter
        public Builder defaultValue(String defaultValue) {
            if (defaultValue == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "defaultValue");
            }
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isInput(Boolean isInput) {
            if (isInput == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "isInput");
            }
            this.isInput = isInput;
            return this;
        }
        @CustomType.Setter
        public Builder isOutput(Boolean isOutput) {
            if (isOutput == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "isOutput");
            }
            this.isOutput = isOutput;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(String modelVersion) {
            if (modelVersion == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "modelVersion");
            }
            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(Integer objectStatus) {
            if (objectStatus == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "objectStatus");
            }
            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder outputAggregationType(String outputAggregationType) {
            if (outputAggregationType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "outputAggregationType");
            }
            this.outputAggregationType = outputAggregationType;
            return this;
        }
        @CustomType.Setter
        public Builder parentRef(GetWorkspaceTasksTaskSummaryCollectionItemParameterParentRef parentRef) {
            if (parentRef == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "parentRef");
            }
            this.parentRef = parentRef;
            return this;
        }
        @CustomType.Setter
        public Builder rootObjectDefaultValue(String rootObjectDefaultValue) {
            if (rootObjectDefaultValue == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "rootObjectDefaultValue");
            }
            this.rootObjectDefaultValue = rootObjectDefaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder typeName(String typeName) {
            if (typeName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "typeName");
            }
            this.typeName = typeName;
            return this;
        }
        @CustomType.Setter
        public Builder usedFor(String usedFor) {
            if (usedFor == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceTasksTaskSummaryCollectionItemParameter", "usedFor");
            }
            this.usedFor = usedFor;
            return this;
        }
        public GetWorkspaceTasksTaskSummaryCollectionItemParameter build() {
            final var _resultValue = new GetWorkspaceTasksTaskSummaryCollectionItemParameter();
            _resultValue.configValues = configValues;
            _resultValue.defaultValue = defaultValue;
            _resultValue.description = description;
            _resultValue.isInput = isInput;
            _resultValue.isOutput = isOutput;
            _resultValue.key = key;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.outputAggregationType = outputAggregationType;
            _resultValue.parentRef = parentRef;
            _resultValue.rootObjectDefaultValue = rootObjectDefaultValue;
            _resultValue.type = type;
            _resultValue.typeName = typeName;
            _resultValue.usedFor = usedFor;
            return _resultValue;
        }
    }
}
