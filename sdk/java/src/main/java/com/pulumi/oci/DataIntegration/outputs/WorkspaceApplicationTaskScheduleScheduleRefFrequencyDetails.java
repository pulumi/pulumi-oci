// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTime;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails {
    /**
     * @return (Updatable) This holds the complete cron expression for this schedule, for example, 10 0/5 * * * ? that fires every 5 minutes, at 10 seconds after the minute (i.e. 10:00:10 am, 10:05:10 am, etc.)
     * 
     */
    private @Nullable String customExpression;
    /**
     * @return (Updatable) This holds the day of the week on which the schedule should be triggered.
     * 
     */
    private @Nullable String dayOfWeek;
    /**
     * @return (Updatable) A list of days of the month to be scheduled. i.e. excute every 2nd,3rd, 10th of the month.
     * 
     */
    private @Nullable List<Integer> days;
    /**
     * @return (Updatable) the frequency of the schedule.
     * 
     */
    private @Nullable String frequency;
    /**
     * @return (Updatable) This hold the repeatability aspect of a schedule. i.e. in a monhtly frequency, a task can be scheduled for every month, once in two months, once in tree months etc.
     * 
     */
    private @Nullable Integer interval;
    /**
     * @return (Updatable) The type of the object.
     * 
     */
    private String modelType;
    /**
     * @return (Updatable) A model to hold time in hour:minute:second format.
     * 
     */
    private @Nullable WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTime time;
    /**
     * @return (Updatable) This holds the week of the month in which the schedule should be triggered.
     * 
     */
    private @Nullable String weekOfMonth;

    private WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails() {}
    /**
     * @return (Updatable) This holds the complete cron expression for this schedule, for example, 10 0/5 * * * ? that fires every 5 minutes, at 10 seconds after the minute (i.e. 10:00:10 am, 10:05:10 am, etc.)
     * 
     */
    public Optional<String> customExpression() {
        return Optional.ofNullable(this.customExpression);
    }
    /**
     * @return (Updatable) This holds the day of the week on which the schedule should be triggered.
     * 
     */
    public Optional<String> dayOfWeek() {
        return Optional.ofNullable(this.dayOfWeek);
    }
    /**
     * @return (Updatable) A list of days of the month to be scheduled. i.e. excute every 2nd,3rd, 10th of the month.
     * 
     */
    public List<Integer> days() {
        return this.days == null ? List.of() : this.days;
    }
    /**
     * @return (Updatable) the frequency of the schedule.
     * 
     */
    public Optional<String> frequency() {
        return Optional.ofNullable(this.frequency);
    }
    /**
     * @return (Updatable) This hold the repeatability aspect of a schedule. i.e. in a monhtly frequency, a task can be scheduled for every month, once in two months, once in tree months etc.
     * 
     */
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    /**
     * @return (Updatable) The type of the object.
     * 
     */
    public String modelType() {
        return this.modelType;
    }
    /**
     * @return (Updatable) A model to hold time in hour:minute:second format.
     * 
     */
    public Optional<WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTime> time() {
        return Optional.ofNullable(this.time);
    }
    /**
     * @return (Updatable) This holds the week of the month in which the schedule should be triggered.
     * 
     */
    public Optional<String> weekOfMonth() {
        return Optional.ofNullable(this.weekOfMonth);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String customExpression;
        private @Nullable String dayOfWeek;
        private @Nullable List<Integer> days;
        private @Nullable String frequency;
        private @Nullable Integer interval;
        private String modelType;
        private @Nullable WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTime time;
        private @Nullable String weekOfMonth;
        public Builder() {}
        public Builder(WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customExpression = defaults.customExpression;
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.days = defaults.days;
    	      this.frequency = defaults.frequency;
    	      this.interval = defaults.interval;
    	      this.modelType = defaults.modelType;
    	      this.time = defaults.time;
    	      this.weekOfMonth = defaults.weekOfMonth;
        }

        @CustomType.Setter
        public Builder customExpression(@Nullable String customExpression) {

            this.customExpression = customExpression;
            return this;
        }
        @CustomType.Setter
        public Builder dayOfWeek(@Nullable String dayOfWeek) {

            this.dayOfWeek = dayOfWeek;
            return this;
        }
        @CustomType.Setter
        public Builder days(@Nullable List<Integer> days) {

            this.days = days;
            return this;
        }
        public Builder days(Integer... days) {
            return days(List.of(days));
        }
        @CustomType.Setter
        public Builder frequency(@Nullable String frequency) {

            this.frequency = frequency;
            return this;
        }
        @CustomType.Setter
        public Builder interval(@Nullable Integer interval) {

            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(String modelType) {
            if (modelType == null) {
              throw new MissingRequiredPropertyException("WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails", "modelType");
            }
            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder time(@Nullable WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTime time) {

            this.time = time;
            return this;
        }
        @CustomType.Setter
        public Builder weekOfMonth(@Nullable String weekOfMonth) {

            this.weekOfMonth = weekOfMonth;
            return this;
        }
        public WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails build() {
            final var _resultValue = new WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails();
            _resultValue.customExpression = customExpression;
            _resultValue.dayOfWeek = dayOfWeek;
            _resultValue.days = days;
            _resultValue.frequency = frequency;
            _resultValue.interval = interval;
            _resultValue.modelType = modelType;
            _resultValue.time = time;
            _resultValue.weekOfMonth = weekOfMonth;
            return _resultValue;
        }
    }
}
