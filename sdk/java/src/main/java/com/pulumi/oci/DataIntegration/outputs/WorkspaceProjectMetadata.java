// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceProjectMetadataAggregator;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceProjectMetadataCountStatistic;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkspaceProjectMetadata {
    /**
     * @return (Updatable) The owning object&#39;s key for this object.
     * 
     */
    private @Nullable String aggregatorKey;
    /**
     * @return A summary type containing information about the object&#39;s aggregator including its type, key, name and description.
     * 
     */
    private @Nullable List<WorkspaceProjectMetadataAggregator> aggregators;
    /**
     * @return A count statistics.
     * 
     */
    private @Nullable List<WorkspaceProjectMetadataCountStatistic> countStatistics;
    /**
     * @return The user that created the object.
     * 
     */
    private @Nullable String createdBy;
    /**
     * @return The user that created the object.
     * 
     */
    private @Nullable String createdByName;
    /**
     * @return The full path to identify this object.
     * 
     */
    private @Nullable String identifierPath;
    /**
     * @return Information property fields.
     * 
     */
    private @Nullable Map<String,Object> infoFields;
    /**
     * @return (Updatable) Specifies whether this object is a favorite or not.
     * 
     */
    private @Nullable Boolean isFavorite;
    /**
     * @return (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
     * 
     */
    private @Nullable List<String> labels;
    /**
     * @return (Updatable) The registry version.
     * 
     */
    private @Nullable Integer registryVersion;
    /**
     * @return The date and time that the object was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time that the object was updated.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The user that updated the object.
     * 
     */
    private @Nullable String updatedBy;
    /**
     * @return The user that updated the object.
     * 
     */
    private @Nullable String updatedByName;

    private WorkspaceProjectMetadata() {}
    /**
     * @return (Updatable) The owning object&#39;s key for this object.
     * 
     */
    public Optional<String> aggregatorKey() {
        return Optional.ofNullable(this.aggregatorKey);
    }
    /**
     * @return A summary type containing information about the object&#39;s aggregator including its type, key, name and description.
     * 
     */
    public List<WorkspaceProjectMetadataAggregator> aggregators() {
        return this.aggregators == null ? List.of() : this.aggregators;
    }
    /**
     * @return A count statistics.
     * 
     */
    public List<WorkspaceProjectMetadataCountStatistic> countStatistics() {
        return this.countStatistics == null ? List.of() : this.countStatistics;
    }
    /**
     * @return The user that created the object.
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return The user that created the object.
     * 
     */
    public Optional<String> createdByName() {
        return Optional.ofNullable(this.createdByName);
    }
    /**
     * @return The full path to identify this object.
     * 
     */
    public Optional<String> identifierPath() {
        return Optional.ofNullable(this.identifierPath);
    }
    /**
     * @return Information property fields.
     * 
     */
    public Map<String,Object> infoFields() {
        return this.infoFields == null ? Map.of() : this.infoFields;
    }
    /**
     * @return (Updatable) Specifies whether this object is a favorite or not.
     * 
     */
    public Optional<Boolean> isFavorite() {
        return Optional.ofNullable(this.isFavorite);
    }
    /**
     * @return (Updatable) Labels are keywords or labels that you can add to data assets, dataflows etc. You can define your own labels and use them to categorize content.
     * 
     */
    public List<String> labels() {
        return this.labels == null ? List.of() : this.labels;
    }
    /**
     * @return (Updatable) The registry version.
     * 
     */
    public Optional<Integer> registryVersion() {
        return Optional.ofNullable(this.registryVersion);
    }
    /**
     * @return The date and time that the object was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time that the object was updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The user that updated the object.
     * 
     */
    public Optional<String> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }
    /**
     * @return The user that updated the object.
     * 
     */
    public Optional<String> updatedByName() {
        return Optional.ofNullable(this.updatedByName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceProjectMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregatorKey;
        private @Nullable List<WorkspaceProjectMetadataAggregator> aggregators;
        private @Nullable List<WorkspaceProjectMetadataCountStatistic> countStatistics;
        private @Nullable String createdBy;
        private @Nullable String createdByName;
        private @Nullable String identifierPath;
        private @Nullable Map<String,Object> infoFields;
        private @Nullable Boolean isFavorite;
        private @Nullable List<String> labels;
        private @Nullable Integer registryVersion;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String updatedBy;
        private @Nullable String updatedByName;
        public Builder() {}
        public Builder(WorkspaceProjectMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregatorKey = defaults.aggregatorKey;
    	      this.aggregators = defaults.aggregators;
    	      this.countStatistics = defaults.countStatistics;
    	      this.createdBy = defaults.createdBy;
    	      this.createdByName = defaults.createdByName;
    	      this.identifierPath = defaults.identifierPath;
    	      this.infoFields = defaults.infoFields;
    	      this.isFavorite = defaults.isFavorite;
    	      this.labels = defaults.labels;
    	      this.registryVersion = defaults.registryVersion;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.updatedBy = defaults.updatedBy;
    	      this.updatedByName = defaults.updatedByName;
        }

        @CustomType.Setter
        public Builder aggregatorKey(@Nullable String aggregatorKey) {
            this.aggregatorKey = aggregatorKey;
            return this;
        }
        @CustomType.Setter
        public Builder aggregators(@Nullable List<WorkspaceProjectMetadataAggregator> aggregators) {
            this.aggregators = aggregators;
            return this;
        }
        public Builder aggregators(WorkspaceProjectMetadataAggregator... aggregators) {
            return aggregators(List.of(aggregators));
        }
        @CustomType.Setter
        public Builder countStatistics(@Nullable List<WorkspaceProjectMetadataCountStatistic> countStatistics) {
            this.countStatistics = countStatistics;
            return this;
        }
        public Builder countStatistics(WorkspaceProjectMetadataCountStatistic... countStatistics) {
            return countStatistics(List.of(countStatistics));
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdByName(@Nullable String createdByName) {
            this.createdByName = createdByName;
            return this;
        }
        @CustomType.Setter
        public Builder identifierPath(@Nullable String identifierPath) {
            this.identifierPath = identifierPath;
            return this;
        }
        @CustomType.Setter
        public Builder infoFields(@Nullable Map<String,Object> infoFields) {
            this.infoFields = infoFields;
            return this;
        }
        @CustomType.Setter
        public Builder isFavorite(@Nullable Boolean isFavorite) {
            this.isFavorite = isFavorite;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable List<String> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        @CustomType.Setter
        public Builder registryVersion(@Nullable Integer registryVersion) {
            this.registryVersion = registryVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(@Nullable String updatedBy) {
            this.updatedBy = updatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder updatedByName(@Nullable String updatedByName) {
            this.updatedByName = updatedByName;
            return this;
        }
        public WorkspaceProjectMetadata build() {
            final var o = new WorkspaceProjectMetadata();
            o.aggregatorKey = aggregatorKey;
            o.aggregators = aggregators;
            o.countStatistics = countStatistics;
            o.createdBy = createdBy;
            o.createdByName = createdByName;
            o.identifierPath = identifierPath;
            o.infoFields = infoFields;
            o.isFavorite = isFavorite;
            o.labels = labels;
            o.registryVersion = registryVersion;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.updatedBy = updatedBy;
            o.updatedByName = updatedByName;
            return o;
        }
    }
}
