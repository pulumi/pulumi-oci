// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRefValue;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRootObjectValue;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue {
    /**
     * @return An integer value of the parameter.
     * 
     */
    private @Nullable Integer intValue;
    /**
     * @return An object value of the parameter.
     * 
     */
    private @Nullable String objectValue;
    /**
     * @return Reference to the parameter by its key.
     * 
     */
    private @Nullable String parameterValue;
    /**
     * @return The root object reference value.
     * 
     */
    private @Nullable WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRefValue refValue;
    /**
     * @return The root object value, used in custom parameters.
     * 
     */
    private @Nullable WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRootObjectValue rootObjectValue;
    /**
     * @return A string value of the parameter.
     * 
     */
    private @Nullable String stringValue;

    private WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue() {}
    /**
     * @return An integer value of the parameter.
     * 
     */
    public Optional<Integer> intValue() {
        return Optional.ofNullable(this.intValue);
    }
    /**
     * @return An object value of the parameter.
     * 
     */
    public Optional<String> objectValue() {
        return Optional.ofNullable(this.objectValue);
    }
    /**
     * @return Reference to the parameter by its key.
     * 
     */
    public Optional<String> parameterValue() {
        return Optional.ofNullable(this.parameterValue);
    }
    /**
     * @return The root object reference value.
     * 
     */
    public Optional<WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRefValue> refValue() {
        return Optional.ofNullable(this.refValue);
    }
    /**
     * @return The root object value, used in custom parameters.
     * 
     */
    public Optional<WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRootObjectValue> rootObjectValue() {
        return Optional.ofNullable(this.rootObjectValue);
    }
    /**
     * @return A string value of the parameter.
     * 
     */
    public Optional<String> stringValue() {
        return Optional.ofNullable(this.stringValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer intValue;
        private @Nullable String objectValue;
        private @Nullable String parameterValue;
        private @Nullable WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRefValue refValue;
        private @Nullable WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRootObjectValue rootObjectValue;
        private @Nullable String stringValue;
        public Builder() {}
        public Builder(WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.intValue = defaults.intValue;
    	      this.objectValue = defaults.objectValue;
    	      this.parameterValue = defaults.parameterValue;
    	      this.refValue = defaults.refValue;
    	      this.rootObjectValue = defaults.rootObjectValue;
    	      this.stringValue = defaults.stringValue;
        }

        @CustomType.Setter
        public Builder intValue(@Nullable Integer intValue) {

            this.intValue = intValue;
            return this;
        }
        @CustomType.Setter
        public Builder objectValue(@Nullable String objectValue) {

            this.objectValue = objectValue;
            return this;
        }
        @CustomType.Setter
        public Builder parameterValue(@Nullable String parameterValue) {

            this.parameterValue = parameterValue;
            return this;
        }
        @CustomType.Setter
        public Builder refValue(@Nullable WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRefValue refValue) {

            this.refValue = refValue;
            return this;
        }
        @CustomType.Setter
        public Builder rootObjectValue(@Nullable WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRootObjectValue rootObjectValue) {

            this.rootObjectValue = rootObjectValue;
            return this;
        }
        @CustomType.Setter
        public Builder stringValue(@Nullable String stringValue) {

            this.stringValue = stringValue;
            return this;
        }
        public WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue build() {
            final var _resultValue = new WorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue();
            _resultValue.intValue = intValue;
            _resultValue.objectValue = objectValue;
            _resultValue.parameterValue = parameterValue;
            _resultValue.refValue = refValue;
            _resultValue.rootObjectValue = rootObjectValue;
            _resultValue.stringValue = stringValue;
            return _resultValue;
        }
    }
}
