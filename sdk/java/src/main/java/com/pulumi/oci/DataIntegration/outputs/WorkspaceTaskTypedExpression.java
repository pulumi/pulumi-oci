// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskTypedExpressionConfigValues;
import com.pulumi.oci.DataIntegration.outputs.WorkspaceTaskTypedExpressionParentRef;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkspaceTaskTypedExpression {
    /**
     * @return (Updatable) Configuration values can be string, objects, or parameters.
     * 
     */
    private @Nullable WorkspaceTaskTypedExpressionConfigValues configValues;
    /**
     * @return (Updatable) Detailed description for the object.
     * 
     */
    private @Nullable String description;
    /**
     * @return (Updatable) The expression string for the object.
     * 
     */
    private @Nullable String expression;
    /**
     * @return (Updatable) The key of the object.
     * 
     */
    private @Nullable String key;
    /**
     * @return (Updatable) The type of the types object.
     * 
     */
    private @Nullable String modelType;
    /**
     * @return (Updatable) The model version of an object.
     * 
     */
    private @Nullable String modelVersion;
    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private @Nullable String name;
    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    private @Nullable Integer objectStatus;
    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    private @Nullable WorkspaceTaskTypedExpressionParentRef parentRef;
    /**
     * @return (Updatable) The object type.
     * 
     */
    private @Nullable String type;

    private WorkspaceTaskTypedExpression() {}
    /**
     * @return (Updatable) Configuration values can be string, objects, or parameters.
     * 
     */
    public Optional<WorkspaceTaskTypedExpressionConfigValues> configValues() {
        return Optional.ofNullable(this.configValues);
    }
    /**
     * @return (Updatable) Detailed description for the object.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return (Updatable) The expression string for the object.
     * 
     */
    public Optional<String> expression() {
        return Optional.ofNullable(this.expression);
    }
    /**
     * @return (Updatable) The key of the object.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return (Updatable) The type of the types object.
     * 
     */
    public Optional<String> modelType() {
        return Optional.ofNullable(this.modelType);
    }
    /**
     * @return (Updatable) The model version of an object.
     * 
     */
    public Optional<String> modelVersion() {
        return Optional.ofNullable(this.modelVersion);
    }
    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Optional<Integer> objectStatus() {
        return Optional.ofNullable(this.objectStatus);
    }
    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    public Optional<WorkspaceTaskTypedExpressionParentRef> parentRef() {
        return Optional.ofNullable(this.parentRef);
    }
    /**
     * @return (Updatable) The object type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceTaskTypedExpression defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WorkspaceTaskTypedExpressionConfigValues configValues;
        private @Nullable String description;
        private @Nullable String expression;
        private @Nullable String key;
        private @Nullable String modelType;
        private @Nullable String modelVersion;
        private @Nullable String name;
        private @Nullable Integer objectStatus;
        private @Nullable WorkspaceTaskTypedExpressionParentRef parentRef;
        private @Nullable String type;
        public Builder() {}
        public Builder(WorkspaceTaskTypedExpression defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configValues = defaults.configValues;
    	      this.description = defaults.description;
    	      this.expression = defaults.expression;
    	      this.key = defaults.key;
    	      this.modelType = defaults.modelType;
    	      this.modelVersion = defaults.modelVersion;
    	      this.name = defaults.name;
    	      this.objectStatus = defaults.objectStatus;
    	      this.parentRef = defaults.parentRef;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder configValues(@Nullable WorkspaceTaskTypedExpressionConfigValues configValues) {

            this.configValues = configValues;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder expression(@Nullable String expression) {

            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder modelType(@Nullable String modelType) {

            this.modelType = modelType;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersion(@Nullable String modelVersion) {

            this.modelVersion = modelVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStatus(@Nullable Integer objectStatus) {

            this.objectStatus = objectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder parentRef(@Nullable WorkspaceTaskTypedExpressionParentRef parentRef) {

            this.parentRef = parentRef;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public WorkspaceTaskTypedExpression build() {
            final var _resultValue = new WorkspaceTaskTypedExpression();
            _resultValue.configValues = configValues;
            _resultValue.description = description;
            _resultValue.expression = expression;
            _resultValue.key = key;
            _resultValue.modelType = modelType;
            _resultValue.modelVersion = modelVersion;
            _resultValue.name = name;
            _resultValue.objectStatus = objectStatus;
            _resultValue.parentRef = parentRef;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
