// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatArgs;
import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatPlainArgs;
import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatsArgs;
import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatsPlainArgs;
import com.pulumi.oci.DataLabellingService.inputs.GetDatasetArgs;
import com.pulumi.oci.DataLabellingService.inputs.GetDatasetPlainArgs;
import com.pulumi.oci.DataLabellingService.inputs.GetDatasetsArgs;
import com.pulumi.oci.DataLabellingService.inputs.GetDatasetsPlainArgs;
import com.pulumi.oci.DataLabellingService.outputs.GetAnnotationFormatResult;
import com.pulumi.oci.DataLabellingService.outputs.GetAnnotationFormatsResult;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetResult;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class DataLabellingServiceFunctions {
    /**
     * This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormat = DataLabellingServiceFunctions.getAnnotationFormat(GetAnnotationFormatArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAnnotationFormatResult> getAnnotationFormat(GetAnnotationFormatArgs args) {
        return getAnnotationFormat(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormat = DataLabellingServiceFunctions.getAnnotationFormat(GetAnnotationFormatArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAnnotationFormatResult> getAnnotationFormatPlain(GetAnnotationFormatPlainArgs args) {
        return getAnnotationFormatPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormat = DataLabellingServiceFunctions.getAnnotationFormat(GetAnnotationFormatArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAnnotationFormatResult> getAnnotationFormat(GetAnnotationFormatArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getAnnotationFormat:getAnnotationFormat", TypeShape.of(GetAnnotationFormatResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormat = DataLabellingServiceFunctions.getAnnotationFormat(GetAnnotationFormatArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAnnotationFormatResult> getAnnotationFormat(GetAnnotationFormatArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getAnnotationFormat:getAnnotationFormat", TypeShape.of(GetAnnotationFormatResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormat = DataLabellingServiceFunctions.getAnnotationFormat(GetAnnotationFormatArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAnnotationFormatResult> getAnnotationFormatPlain(GetAnnotationFormatPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DataLabellingService/getAnnotationFormat:getAnnotationFormat", TypeShape.of(GetAnnotationFormatResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Annotation Formats in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormats = DataLabellingServiceFunctions.getAnnotationFormats(GetAnnotationFormatsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAnnotationFormatsResult> getAnnotationFormats(GetAnnotationFormatsArgs args) {
        return getAnnotationFormats(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Annotation Formats in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormats = DataLabellingServiceFunctions.getAnnotationFormats(GetAnnotationFormatsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAnnotationFormatsResult> getAnnotationFormatsPlain(GetAnnotationFormatsPlainArgs args) {
        return getAnnotationFormatsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Annotation Formats in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormats = DataLabellingServiceFunctions.getAnnotationFormats(GetAnnotationFormatsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAnnotationFormatsResult> getAnnotationFormats(GetAnnotationFormatsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getAnnotationFormats:getAnnotationFormats", TypeShape.of(GetAnnotationFormatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Annotation Formats in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormats = DataLabellingServiceFunctions.getAnnotationFormats(GetAnnotationFormatsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAnnotationFormatsResult> getAnnotationFormats(GetAnnotationFormatsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getAnnotationFormats:getAnnotationFormats", TypeShape.of(GetAnnotationFormatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Annotation Formats in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * These are a static list in a given region.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetAnnotationFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAnnotationFormats = DataLabellingServiceFunctions.getAnnotationFormats(GetAnnotationFormatsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAnnotationFormatsResult> getAnnotationFormatsPlain(GetAnnotationFormatsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DataLabellingService/getAnnotationFormats:getAnnotationFormats", TypeShape.of(GetAnnotationFormatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Gets a Dataset by identifier
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDataset = DataLabellingServiceFunctions.getDataset(GetDatasetArgs.builder()
     *             .datasetId(testDatasetOciDataLabelingServiceDataset.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDatasetResult> getDataset(GetDatasetArgs args) {
        return getDataset(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Gets a Dataset by identifier
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDataset = DataLabellingServiceFunctions.getDataset(GetDatasetArgs.builder()
     *             .datasetId(testDatasetOciDataLabelingServiceDataset.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDatasetResult> getDatasetPlain(GetDatasetPlainArgs args) {
        return getDatasetPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Gets a Dataset by identifier
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDataset = DataLabellingServiceFunctions.getDataset(GetDatasetArgs.builder()
     *             .datasetId(testDatasetOciDataLabelingServiceDataset.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDatasetResult> getDataset(GetDatasetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getDataset:getDataset", TypeShape.of(GetDatasetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Gets a Dataset by identifier
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDataset = DataLabellingServiceFunctions.getDataset(GetDatasetArgs.builder()
     *             .datasetId(testDatasetOciDataLabelingServiceDataset.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDatasetResult> getDataset(GetDatasetArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getDataset:getDataset", TypeShape.of(GetDatasetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Gets a Dataset by identifier
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDataset = DataLabellingServiceFunctions.getDataset(GetDatasetArgs.builder()
     *             .datasetId(testDatasetOciDataLabelingServiceDataset.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDatasetResult> getDatasetPlain(GetDatasetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DataLabellingService/getDataset:getDataset", TypeShape.of(GetDatasetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Datasets in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Returns a list of Datasets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDatasets = DataLabellingServiceFunctions.getDatasets(GetDatasetsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .annotationFormat(datasetAnnotationFormat)
     *             .displayName(datasetDisplayName)
     *             .id(datasetId)
     *             .state(datasetState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDatasetsResult> getDatasets(GetDatasetsArgs args) {
        return getDatasets(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Datasets in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Returns a list of Datasets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDatasets = DataLabellingServiceFunctions.getDatasets(GetDatasetsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .annotationFormat(datasetAnnotationFormat)
     *             .displayName(datasetDisplayName)
     *             .id(datasetId)
     *             .state(datasetState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDatasetsResult> getDatasetsPlain(GetDatasetsPlainArgs args) {
        return getDatasetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Datasets in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Returns a list of Datasets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDatasets = DataLabellingServiceFunctions.getDatasets(GetDatasetsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .annotationFormat(datasetAnnotationFormat)
     *             .displayName(datasetDisplayName)
     *             .id(datasetId)
     *             .state(datasetState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDatasetsResult> getDatasets(GetDatasetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getDatasets:getDatasets", TypeShape.of(GetDatasetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Datasets in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Returns a list of Datasets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDatasets = DataLabellingServiceFunctions.getDatasets(GetDatasetsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .annotationFormat(datasetAnnotationFormat)
     *             .displayName(datasetDisplayName)
     *             .id(datasetId)
     *             .state(datasetState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDatasetsResult> getDatasets(GetDatasetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:DataLabellingService/getDatasets:getDatasets", TypeShape.of(GetDatasetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Datasets in Oracle Cloud Infrastructure Data Labeling Service service.
     * 
     * Returns a list of Datasets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DataLabellingService.DataLabellingServiceFunctions;
     * import com.pulumi.oci.DataLabellingService.inputs.GetDatasetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDatasets = DataLabellingServiceFunctions.getDatasets(GetDatasetsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .annotationFormat(datasetAnnotationFormat)
     *             .displayName(datasetDisplayName)
     *             .id(datasetId)
     *             .state(datasetState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDatasetsResult> getDatasetsPlain(GetDatasetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DataLabellingService/getDatasets:getDatasets", TypeShape.of(GetDatasetsResult.class), args, Utilities.withVersion(options));
    }
}
