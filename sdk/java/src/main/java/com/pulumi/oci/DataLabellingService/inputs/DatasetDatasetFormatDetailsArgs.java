// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataLabellingService.inputs.DatasetDatasetFormatDetailsTextFileTypeMetadataArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetDatasetFormatDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetDatasetFormatDetailsArgs Empty = new DatasetDatasetFormatDetailsArgs();

    /**
     * The format type. DOCUMENT format is for record contents that are PDFs or TIFFs. IMAGE format is for record contents that are JPEGs or PNGs. TEXT format is for record contents that are TXT files.
     * 
     */
    @Import(name="formatType", required=true)
    private Output<String> formatType;

    /**
     * @return The format type. DOCUMENT format is for record contents that are PDFs or TIFFs. IMAGE format is for record contents that are JPEGs or PNGs. TEXT format is for record contents that are TXT files.
     * 
     */
    public Output<String> formatType() {
        return this.formatType;
    }

    /**
     * Metadata for files with text content.
     * 
     */
    @Import(name="textFileTypeMetadata")
    private @Nullable Output<DatasetDatasetFormatDetailsTextFileTypeMetadataArgs> textFileTypeMetadata;

    /**
     * @return Metadata for files with text content.
     * 
     */
    public Optional<Output<DatasetDatasetFormatDetailsTextFileTypeMetadataArgs>> textFileTypeMetadata() {
        return Optional.ofNullable(this.textFileTypeMetadata);
    }

    private DatasetDatasetFormatDetailsArgs() {}

    private DatasetDatasetFormatDetailsArgs(DatasetDatasetFormatDetailsArgs $) {
        this.formatType = $.formatType;
        this.textFileTypeMetadata = $.textFileTypeMetadata;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetDatasetFormatDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetDatasetFormatDetailsArgs $;

        public Builder() {
            $ = new DatasetDatasetFormatDetailsArgs();
        }

        public Builder(DatasetDatasetFormatDetailsArgs defaults) {
            $ = new DatasetDatasetFormatDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param formatType The format type. DOCUMENT format is for record contents that are PDFs or TIFFs. IMAGE format is for record contents that are JPEGs or PNGs. TEXT format is for record contents that are TXT files.
         * 
         * @return builder
         * 
         */
        public Builder formatType(Output<String> formatType) {
            $.formatType = formatType;
            return this;
        }

        /**
         * @param formatType The format type. DOCUMENT format is for record contents that are PDFs or TIFFs. IMAGE format is for record contents that are JPEGs or PNGs. TEXT format is for record contents that are TXT files.
         * 
         * @return builder
         * 
         */
        public Builder formatType(String formatType) {
            return formatType(Output.of(formatType));
        }

        /**
         * @param textFileTypeMetadata Metadata for files with text content.
         * 
         * @return builder
         * 
         */
        public Builder textFileTypeMetadata(@Nullable Output<DatasetDatasetFormatDetailsTextFileTypeMetadataArgs> textFileTypeMetadata) {
            $.textFileTypeMetadata = textFileTypeMetadata;
            return this;
        }

        /**
         * @param textFileTypeMetadata Metadata for files with text content.
         * 
         * @return builder
         * 
         */
        public Builder textFileTypeMetadata(DatasetDatasetFormatDetailsTextFileTypeMetadataArgs textFileTypeMetadata) {
            return textFileTypeMetadata(Output.of(textFileTypeMetadata));
        }

        public DatasetDatasetFormatDetailsArgs build() {
            if ($.formatType == null) {
                throw new MissingRequiredPropertyException("DatasetDatasetFormatDetailsArgs", "formatType");
            }
            return $;
        }
    }

}
