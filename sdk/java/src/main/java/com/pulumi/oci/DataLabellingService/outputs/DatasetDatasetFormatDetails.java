// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataLabellingService.outputs.DatasetDatasetFormatDetailsTextFileTypeMetadata;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatasetDatasetFormatDetails {
    /**
     * @return The format type. DOCUMENT format is for record contents that are PDFs or TIFFs. IMAGE format is for record contents that are JPEGs or PNGs. TEXT format is for record contents that are TXT files.
     * 
     */
    private String formatType;
    /**
     * @return Metadata for files with text content.
     * 
     */
    private @Nullable DatasetDatasetFormatDetailsTextFileTypeMetadata textFileTypeMetadata;

    private DatasetDatasetFormatDetails() {}
    /**
     * @return The format type. DOCUMENT format is for record contents that are PDFs or TIFFs. IMAGE format is for record contents that are JPEGs or PNGs. TEXT format is for record contents that are TXT files.
     * 
     */
    public String formatType() {
        return this.formatType;
    }
    /**
     * @return Metadata for files with text content.
     * 
     */
    public Optional<DatasetDatasetFormatDetailsTextFileTypeMetadata> textFileTypeMetadata() {
        return Optional.ofNullable(this.textFileTypeMetadata);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetDatasetFormatDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String formatType;
        private @Nullable DatasetDatasetFormatDetailsTextFileTypeMetadata textFileTypeMetadata;
        public Builder() {}
        public Builder(DatasetDatasetFormatDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.formatType = defaults.formatType;
    	      this.textFileTypeMetadata = defaults.textFileTypeMetadata;
        }

        @CustomType.Setter
        public Builder formatType(String formatType) {
            if (formatType == null) {
              throw new MissingRequiredPropertyException("DatasetDatasetFormatDetails", "formatType");
            }
            this.formatType = formatType;
            return this;
        }
        @CustomType.Setter
        public Builder textFileTypeMetadata(@Nullable DatasetDatasetFormatDetailsTextFileTypeMetadata textFileTypeMetadata) {

            this.textFileTypeMetadata = textFileTypeMetadata;
            return this;
        }
        public DatasetDatasetFormatDetails build() {
            final var _resultValue = new DatasetDatasetFormatDetails();
            _resultValue.formatType = formatType;
            _resultValue.textFileTypeMetadata = textFileTypeMetadata;
            return _resultValue;
        }
    }
}
