// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatasetDatasetSourceDetails {
    /**
     * @return The object storage bucket that contains the dataset data source.
     * 
     */
    private String bucket;
    /**
     * @return The namespace of the bucket that contains the dataset data source.
     * 
     */
    private String namespace;
    /**
     * @return A common path prefix shared by the objects that make up the dataset. Except for the CSV file type, records are not generated for the objects whose names exactly match with the prefix.
     * 
     */
    private @Nullable String prefix;
    /**
     * @return The source type. OBJECT_STORAGE allows the user to describe where in object storage the dataset is.
     * 
     */
    private String sourceType;

    private DatasetDatasetSourceDetails() {}
    /**
     * @return The object storage bucket that contains the dataset data source.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The namespace of the bucket that contains the dataset data source.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return A common path prefix shared by the objects that make up the dataset. Except for the CSV file type, records are not generated for the objects whose names exactly match with the prefix.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * @return The source type. OBJECT_STORAGE allows the user to describe where in object storage the dataset is.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetDatasetSourceDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private String namespace;
        private @Nullable String prefix;
        private String sourceType;
        public Builder() {}
        public Builder(DatasetDatasetSourceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.namespace = defaults.namespace;
    	      this.prefix = defaults.prefix;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("DatasetDatasetSourceDetails", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("DatasetDatasetSourceDetails", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("DatasetDatasetSourceDetails", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        public DatasetDatasetSourceDetails build() {
            final var _resultValue = new DatasetDatasetSourceDetails();
            _resultValue.bucket = bucket;
            _resultValue.namespace = namespace;
            _resultValue.prefix = prefix;
            _resultValue.sourceType = sourceType;
            return _resultValue;
        }
    }
}
