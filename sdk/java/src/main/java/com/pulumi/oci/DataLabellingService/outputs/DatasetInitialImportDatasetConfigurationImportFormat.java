// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatasetInitialImportDatasetConfigurationImportFormat {
    /**
     * @return An unique name for a label within its dataset.
     * 
     */
    private String name;
    /**
     * @return Version of import format
     * 
     */
    private @Nullable String version;

    private DatasetInitialImportDatasetConfigurationImportFormat() {}
    /**
     * @return An unique name for a label within its dataset.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Version of import format
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetInitialImportDatasetConfigurationImportFormat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private @Nullable String version;
        public Builder() {}
        public Builder(DatasetInitialImportDatasetConfigurationImportFormat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public DatasetInitialImportDatasetConfigurationImportFormat build() {
            final var o = new DatasetInitialImportDatasetConfigurationImportFormat();
            o.name = name;
            o.version = version;
            return o;
        }
    }
}
