// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsDatasetCollectionItemDatasetFormatDetail;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsDatasetCollectionItemDatasetSourceDetail;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsDatasetCollectionItemInitialImportDatasetConfiguration;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsDatasetCollectionItemLabelSet;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatasetsDatasetCollectionItem {
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> additionalProperties;
    /**
     * @return A filter to return only resources that match the entire annotation format given.
     * 
     */
    private @Nullable String annotationFormat;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
     * 
     */
    private @Nullable List<GetDatasetsDatasetCollectionItemDatasetFormatDetail> datasetFormatDetails;
    /**
     * @return This allows the customer to specify the source of the dataset.
     * 
     */
    private @Nullable List<GetDatasetsDatasetCollectionItemDatasetSourceDetail> datasetSourceDetails;
    /**
     * @return The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A user provided description of the dataset
     * 
     */
    private @Nullable String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique Dataset OCID
     * 
     */
    private @Nullable String id;
    /**
     * @return Initial import dataset configuration. Allows user to create dataset from existing dataset files.
     * 
     */
    private @Nullable List<GetDatasetsDatasetCollectionItemInitialImportDatasetConfiguration> initialImportDatasetConfigurations;
    /**
     * @return The initial generate records configuration. It generates records from the dataset&#39;s source.
     * 
     */
    private @Nullable List<GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration> initialRecordGenerationConfigurations;
    /**
     * @return An ordered collection of labels that are unique by name.
     * 
     */
    private @Nullable List<GetDatasetsDatasetCollectionItemLabelSet> labelSets;
    /**
     * @return The labeling instructions for human labelers in rich text format
     * 
     */
    private @Nullable String labelingInstructions;
    /**
     * @return A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
     * 
     */
    private @Nullable String lifecycleSubstate;
    /**
     * @return A filter to return only resources whose lifecycleState matches this query param.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the resource was created, in the timestamp format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the resource was last updated, in the timestamp format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetDatasetsDatasetCollectionItem() {}
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalProperties() {
        return this.additionalProperties == null ? Map.of() : this.additionalProperties;
    }
    /**
     * @return A filter to return only resources that match the entire annotation format given.
     * 
     */
    public Optional<String> annotationFormat() {
        return Optional.ofNullable(this.annotationFormat);
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
     * 
     */
    public List<GetDatasetsDatasetCollectionItemDatasetFormatDetail> datasetFormatDetails() {
        return this.datasetFormatDetails == null ? List.of() : this.datasetFormatDetails;
    }
    /**
     * @return This allows the customer to specify the source of the dataset.
     * 
     */
    public List<GetDatasetsDatasetCollectionItemDatasetSourceDetail> datasetSourceDetails() {
        return this.datasetSourceDetails == null ? List.of() : this.datasetSourceDetails;
    }
    /**
     * @return The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A user provided description of the dataset
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique Dataset OCID
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Initial import dataset configuration. Allows user to create dataset from existing dataset files.
     * 
     */
    public List<GetDatasetsDatasetCollectionItemInitialImportDatasetConfiguration> initialImportDatasetConfigurations() {
        return this.initialImportDatasetConfigurations == null ? List.of() : this.initialImportDatasetConfigurations;
    }
    /**
     * @return The initial generate records configuration. It generates records from the dataset&#39;s source.
     * 
     */
    public List<GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration> initialRecordGenerationConfigurations() {
        return this.initialRecordGenerationConfigurations == null ? List.of() : this.initialRecordGenerationConfigurations;
    }
    /**
     * @return An ordered collection of labels that are unique by name.
     * 
     */
    public List<GetDatasetsDatasetCollectionItemLabelSet> labelSets() {
        return this.labelSets == null ? List.of() : this.labelSets;
    }
    /**
     * @return The labeling instructions for human labelers in rich text format
     * 
     */
    public Optional<String> labelingInstructions() {
        return Optional.ofNullable(this.labelingInstructions);
    }
    /**
     * @return A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
     * 
     */
    public Optional<String> lifecycleSubstate() {
        return Optional.ofNullable(this.lifecycleSubstate);
    }
    /**
     * @return A filter to return only resources whose lifecycleState matches this query param.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the resource was created, in the timestamp format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the resource was last updated, in the timestamp format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetsDatasetCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> additionalProperties;
        private @Nullable String annotationFormat;
        private @Nullable String compartmentId;
        private @Nullable List<GetDatasetsDatasetCollectionItemDatasetFormatDetail> datasetFormatDetails;
        private @Nullable List<GetDatasetsDatasetCollectionItemDatasetSourceDetail> datasetSourceDetails;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetDatasetsDatasetCollectionItemInitialImportDatasetConfiguration> initialImportDatasetConfigurations;
        private @Nullable List<GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration> initialRecordGenerationConfigurations;
        private @Nullable List<GetDatasetsDatasetCollectionItemLabelSet> labelSets;
        private @Nullable String labelingInstructions;
        private @Nullable String lifecycleDetails;
        private @Nullable String lifecycleSubstate;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetDatasetsDatasetCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalProperties = defaults.additionalProperties;
    	      this.annotationFormat = defaults.annotationFormat;
    	      this.compartmentId = defaults.compartmentId;
    	      this.datasetFormatDetails = defaults.datasetFormatDetails;
    	      this.datasetSourceDetails = defaults.datasetSourceDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.initialImportDatasetConfigurations = defaults.initialImportDatasetConfigurations;
    	      this.initialRecordGenerationConfigurations = defaults.initialRecordGenerationConfigurations;
    	      this.labelSets = defaults.labelSets;
    	      this.labelingInstructions = defaults.labelingInstructions;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleSubstate = defaults.lifecycleSubstate;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder additionalProperties(@Nullable Map<String,Object> additionalProperties) {
            this.additionalProperties = additionalProperties;
            return this;
        }
        @CustomType.Setter
        public Builder annotationFormat(@Nullable String annotationFormat) {
            this.annotationFormat = annotationFormat;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder datasetFormatDetails(@Nullable List<GetDatasetsDatasetCollectionItemDatasetFormatDetail> datasetFormatDetails) {
            this.datasetFormatDetails = datasetFormatDetails;
            return this;
        }
        public Builder datasetFormatDetails(GetDatasetsDatasetCollectionItemDatasetFormatDetail... datasetFormatDetails) {
            return datasetFormatDetails(List.of(datasetFormatDetails));
        }
        @CustomType.Setter
        public Builder datasetSourceDetails(@Nullable List<GetDatasetsDatasetCollectionItemDatasetSourceDetail> datasetSourceDetails) {
            this.datasetSourceDetails = datasetSourceDetails;
            return this;
        }
        public Builder datasetSourceDetails(GetDatasetsDatasetCollectionItemDatasetSourceDetail... datasetSourceDetails) {
            return datasetSourceDetails(List.of(datasetSourceDetails));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder initialImportDatasetConfigurations(@Nullable List<GetDatasetsDatasetCollectionItemInitialImportDatasetConfiguration> initialImportDatasetConfigurations) {
            this.initialImportDatasetConfigurations = initialImportDatasetConfigurations;
            return this;
        }
        public Builder initialImportDatasetConfigurations(GetDatasetsDatasetCollectionItemInitialImportDatasetConfiguration... initialImportDatasetConfigurations) {
            return initialImportDatasetConfigurations(List.of(initialImportDatasetConfigurations));
        }
        @CustomType.Setter
        public Builder initialRecordGenerationConfigurations(@Nullable List<GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration> initialRecordGenerationConfigurations) {
            this.initialRecordGenerationConfigurations = initialRecordGenerationConfigurations;
            return this;
        }
        public Builder initialRecordGenerationConfigurations(GetDatasetsDatasetCollectionItemInitialRecordGenerationConfiguration... initialRecordGenerationConfigurations) {
            return initialRecordGenerationConfigurations(List.of(initialRecordGenerationConfigurations));
        }
        @CustomType.Setter
        public Builder labelSets(@Nullable List<GetDatasetsDatasetCollectionItemLabelSet> labelSets) {
            this.labelSets = labelSets;
            return this;
        }
        public Builder labelSets(GetDatasetsDatasetCollectionItemLabelSet... labelSets) {
            return labelSets(List.of(labelSets));
        }
        @CustomType.Setter
        public Builder labelingInstructions(@Nullable String labelingInstructions) {
            this.labelingInstructions = labelingInstructions;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleSubstate(@Nullable String lifecycleSubstate) {
            this.lifecycleSubstate = lifecycleSubstate;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDatasetsDatasetCollectionItem build() {
            final var o = new GetDatasetsDatasetCollectionItem();
            o.additionalProperties = additionalProperties;
            o.annotationFormat = annotationFormat;
            o.compartmentId = compartmentId;
            o.datasetFormatDetails = datasetFormatDetails;
            o.datasetSourceDetails = datasetSourceDetails;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.initialImportDatasetConfigurations = initialImportDatasetConfigurations;
            o.initialRecordGenerationConfigurations = initialRecordGenerationConfigurations;
            o.labelSets = labelSets;
            o.labelingInstructions = labelingInstructions;
            o.lifecycleDetails = lifecycleDetails;
            o.lifecycleSubstate = lifecycleSubstate;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
