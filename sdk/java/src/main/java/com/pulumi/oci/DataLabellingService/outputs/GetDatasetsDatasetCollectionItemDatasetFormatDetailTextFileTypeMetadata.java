// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata {
    /**
     * @return A column delimiter
     * 
     */
    private String columnDelimiter;
    /**
     * @return The index of a selected column. This is a zero-based index.
     * 
     */
    private Integer columnIndex;
    /**
     * @return The name of a selected column.
     * 
     */
    private String columnName;
    /**
     * @return An escape character.
     * 
     */
    private String escapeCharacter;
    /**
     * @return It defines the format type of text files.
     * 
     */
    private String formatType;
    /**
     * @return A line delimiter.
     * 
     */
    private String lineDelimiter;

    private GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata() {}
    /**
     * @return A column delimiter
     * 
     */
    public String columnDelimiter() {
        return this.columnDelimiter;
    }
    /**
     * @return The index of a selected column. This is a zero-based index.
     * 
     */
    public Integer columnIndex() {
        return this.columnIndex;
    }
    /**
     * @return The name of a selected column.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return An escape character.
     * 
     */
    public String escapeCharacter() {
        return this.escapeCharacter;
    }
    /**
     * @return It defines the format type of text files.
     * 
     */
    public String formatType() {
        return this.formatType;
    }
    /**
     * @return A line delimiter.
     * 
     */
    public String lineDelimiter() {
        return this.lineDelimiter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String columnDelimiter;
        private Integer columnIndex;
        private String columnName;
        private String escapeCharacter;
        private String formatType;
        private String lineDelimiter;
        public Builder() {}
        public Builder(GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnDelimiter = defaults.columnDelimiter;
    	      this.columnIndex = defaults.columnIndex;
    	      this.columnName = defaults.columnName;
    	      this.escapeCharacter = defaults.escapeCharacter;
    	      this.formatType = defaults.formatType;
    	      this.lineDelimiter = defaults.lineDelimiter;
        }

        @CustomType.Setter
        public Builder columnDelimiter(String columnDelimiter) {
            if (columnDelimiter == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata", "columnDelimiter");
            }
            this.columnDelimiter = columnDelimiter;
            return this;
        }
        @CustomType.Setter
        public Builder columnIndex(Integer columnIndex) {
            if (columnIndex == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata", "columnIndex");
            }
            this.columnIndex = columnIndex;
            return this;
        }
        @CustomType.Setter
        public Builder columnName(String columnName) {
            if (columnName == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata", "columnName");
            }
            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder escapeCharacter(String escapeCharacter) {
            if (escapeCharacter == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata", "escapeCharacter");
            }
            this.escapeCharacter = escapeCharacter;
            return this;
        }
        @CustomType.Setter
        public Builder formatType(String formatType) {
            if (formatType == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata", "formatType");
            }
            this.formatType = formatType;
            return this;
        }
        @CustomType.Setter
        public Builder lineDelimiter(String lineDelimiter) {
            if (lineDelimiter == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata", "lineDelimiter");
            }
            this.lineDelimiter = lineDelimiter;
            return this;
        }
        public GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata build() {
            final var _resultValue = new GetDatasetsDatasetCollectionItemDatasetFormatDetailTextFileTypeMetadata();
            _resultValue.columnDelimiter = columnDelimiter;
            _resultValue.columnIndex = columnIndex;
            _resultValue.columnName = columnName;
            _resultValue.escapeCharacter = escapeCharacter;
            _resultValue.formatType = formatType;
            _resultValue.lineDelimiter = lineDelimiter;
            return _resultValue;
        }
    }
}
