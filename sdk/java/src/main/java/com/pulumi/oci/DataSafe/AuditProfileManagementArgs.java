// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditProfileManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditProfileManagementArgs Empty = new AuditProfileManagementArgs();

    /**
     * (Updatable) An optional property when incremented triggers Change Retention. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="changeRetentionTrigger")
    private @Nullable Output<Integer> changeRetentionTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Change Retention. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> changeRetentionTrigger() {
        return Optional.ofNullable(this.changeRetentionTrigger);
    }

    /**
     * (Updatable) The OCID of the compartment where you want to create the audit profile.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment where you want to create the audit profile.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description of the audit profile.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the audit profile.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the audit profile. The name does not have to be unique, and it&#39;s updatable.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the audit profile. The name does not have to be unique, and it&#39;s updatable.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Indicates whether audit paid usage settings specified at the target database level override both the global and the target database group level paid usage settings. Enabling paid usage continues the collection of audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. For more information, see [Data Safe Price List](https://www.oracle.com/cloud/price-list/#data-safe).
     * 
     */
    @Import(name="isOverrideGlobalPaidUsage")
    private @Nullable Output<Boolean> isOverrideGlobalPaidUsage;

    /**
     * @return Indicates whether audit paid usage settings specified at the target database level override both the global and the target database group level paid usage settings. Enabling paid usage continues the collection of audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. For more information, see [Data Safe Price List](https://www.oracle.com/cloud/price-list/#data-safe).
     * 
     */
    public Optional<Output<Boolean>> isOverrideGlobalPaidUsage() {
        return Optional.ofNullable(this.isOverrideGlobalPaidUsage);
    }

    /**
     * Indicates whether audit retention settings like online and offline months set at the  target level override both the global settings and the target group level audit retention settings.
     * 
     */
    @Import(name="isOverrideGlobalRetentionSetting")
    private @Nullable Output<Boolean> isOverrideGlobalRetentionSetting;

    /**
     * @return Indicates whether audit retention settings like online and offline months set at the  target level override both the global settings and the target group level audit retention settings.
     * 
     */
    public Optional<Output<Boolean>> isOverrideGlobalRetentionSetting() {
        return Optional.ofNullable(this.isOverrideGlobalRetentionSetting);
    }

    /**
     * (Updatable) Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
     * 
     */
    @Import(name="isPaidUsageEnabled")
    private @Nullable Output<Boolean> isPaidUsageEnabled;

    /**
     * @return (Updatable) Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
     * 
     */
    public Optional<Output<Boolean>> isPaidUsageEnabled() {
        return Optional.ofNullable(this.isPaidUsageEnabled);
    }

    /**
     * Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in the offline archive, please contact the Oracle Support.
     * 
     */
    @Import(name="offlineMonths")
    private @Nullable Output<Integer> offlineMonths;

    /**
     * @return Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in the offline archive, please contact the Oracle Support.
     * 
     */
    public Optional<Output<Integer>> offlineMonths() {
        return Optional.ofNullable(this.offlineMonths);
    }

    /**
     * Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis. Minimum: 1; Maximum: 12 months
     * 
     */
    @Import(name="onlineMonths")
    private @Nullable Output<Integer> onlineMonths;

    /**
     * @return Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis. Minimum: 1; Maximum: 12 months
     * 
     */
    public Optional<Output<Integer>> onlineMonths() {
        return Optional.ofNullable(this.onlineMonths);
    }

    /**
     * The OCID of the target database or target database group for which the audit profile is created.
     * 
     */
    @Import(name="targetId", required=true)
    private Output<String> targetId;

    /**
     * @return The OCID of the target database or target database group for which the audit profile is created.
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }

    /**
     * The resource type that is represented by the audit profile.
     * 
     */
    @Import(name="targetType", required=true)
    private Output<String> targetType;

    /**
     * @return The resource type that is represented by the audit profile.
     * 
     */
    public Output<String> targetType() {
        return this.targetType;
    }

    private AuditProfileManagementArgs() {}

    private AuditProfileManagementArgs(AuditProfileManagementArgs $) {
        this.changeRetentionTrigger = $.changeRetentionTrigger;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isOverrideGlobalPaidUsage = $.isOverrideGlobalPaidUsage;
        this.isOverrideGlobalRetentionSetting = $.isOverrideGlobalRetentionSetting;
        this.isPaidUsageEnabled = $.isPaidUsageEnabled;
        this.offlineMonths = $.offlineMonths;
        this.onlineMonths = $.onlineMonths;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditProfileManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditProfileManagementArgs $;

        public Builder() {
            $ = new AuditProfileManagementArgs();
        }

        public Builder(AuditProfileManagementArgs defaults) {
            $ = new AuditProfileManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param changeRetentionTrigger (Updatable) An optional property when incremented triggers Change Retention. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder changeRetentionTrigger(@Nullable Output<Integer> changeRetentionTrigger) {
            $.changeRetentionTrigger = changeRetentionTrigger;
            return this;
        }

        /**
         * @param changeRetentionTrigger (Updatable) An optional property when incremented triggers Change Retention. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder changeRetentionTrigger(Integer changeRetentionTrigger) {
            return changeRetentionTrigger(Output.of(changeRetentionTrigger));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment where you want to create the audit profile.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment where you want to create the audit profile.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description of the audit profile.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the audit profile.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the audit profile. The name does not have to be unique, and it&#39;s updatable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the audit profile. The name does not have to be unique, and it&#39;s updatable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isOverrideGlobalPaidUsage Indicates whether audit paid usage settings specified at the target database level override both the global and the target database group level paid usage settings. Enabling paid usage continues the collection of audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. For more information, see [Data Safe Price List](https://www.oracle.com/cloud/price-list/#data-safe).
         * 
         * @return builder
         * 
         */
        public Builder isOverrideGlobalPaidUsage(@Nullable Output<Boolean> isOverrideGlobalPaidUsage) {
            $.isOverrideGlobalPaidUsage = isOverrideGlobalPaidUsage;
            return this;
        }

        /**
         * @param isOverrideGlobalPaidUsage Indicates whether audit paid usage settings specified at the target database level override both the global and the target database group level paid usage settings. Enabling paid usage continues the collection of audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. For more information, see [Data Safe Price List](https://www.oracle.com/cloud/price-list/#data-safe).
         * 
         * @return builder
         * 
         */
        public Builder isOverrideGlobalPaidUsage(Boolean isOverrideGlobalPaidUsage) {
            return isOverrideGlobalPaidUsage(Output.of(isOverrideGlobalPaidUsage));
        }

        /**
         * @param isOverrideGlobalRetentionSetting Indicates whether audit retention settings like online and offline months set at the  target level override both the global settings and the target group level audit retention settings.
         * 
         * @return builder
         * 
         */
        public Builder isOverrideGlobalRetentionSetting(@Nullable Output<Boolean> isOverrideGlobalRetentionSetting) {
            $.isOverrideGlobalRetentionSetting = isOverrideGlobalRetentionSetting;
            return this;
        }

        /**
         * @param isOverrideGlobalRetentionSetting Indicates whether audit retention settings like online and offline months set at the  target level override both the global settings and the target group level audit retention settings.
         * 
         * @return builder
         * 
         */
        public Builder isOverrideGlobalRetentionSetting(Boolean isOverrideGlobalRetentionSetting) {
            return isOverrideGlobalRetentionSetting(Output.of(isOverrideGlobalRetentionSetting));
        }

        /**
         * @param isPaidUsageEnabled (Updatable) Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
         * 
         * @return builder
         * 
         */
        public Builder isPaidUsageEnabled(@Nullable Output<Boolean> isPaidUsageEnabled) {
            $.isPaidUsageEnabled = isPaidUsageEnabled;
            return this;
        }

        /**
         * @param isPaidUsageEnabled (Updatable) Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
         * 
         * @return builder
         * 
         */
        public Builder isPaidUsageEnabled(Boolean isPaidUsageEnabled) {
            return isPaidUsageEnabled(Output.of(isPaidUsageEnabled));
        }

        /**
         * @param offlineMonths Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in the offline archive, please contact the Oracle Support.
         * 
         * @return builder
         * 
         */
        public Builder offlineMonths(@Nullable Output<Integer> offlineMonths) {
            $.offlineMonths = offlineMonths;
            return this;
        }

        /**
         * @param offlineMonths Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in the offline archive, please contact the Oracle Support.
         * 
         * @return builder
         * 
         */
        public Builder offlineMonths(Integer offlineMonths) {
            return offlineMonths(Output.of(offlineMonths));
        }

        /**
         * @param onlineMonths Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis. Minimum: 1; Maximum: 12 months
         * 
         * @return builder
         * 
         */
        public Builder onlineMonths(@Nullable Output<Integer> onlineMonths) {
            $.onlineMonths = onlineMonths;
            return this;
        }

        /**
         * @param onlineMonths Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis. Minimum: 1; Maximum: 12 months
         * 
         * @return builder
         * 
         */
        public Builder onlineMonths(Integer onlineMonths) {
            return onlineMonths(Output.of(onlineMonths));
        }

        /**
         * @param targetId The OCID of the target database or target database group for which the audit profile is created.
         * 
         * @return builder
         * 
         */
        public Builder targetId(Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The OCID of the target database or target database group for which the audit profile is created.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param targetType The resource type that is represented by the audit profile.
         * 
         * @return builder
         * 
         */
        public Builder targetType(Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType The resource type that is represented by the audit profile.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public AuditProfileManagementArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("AuditProfileManagementArgs", "compartmentId");
            }
            if ($.targetId == null) {
                throw new MissingRequiredPropertyException("AuditProfileManagementArgs", "targetId");
            }
            if ($.targetType == null) {
                throw new MissingRequiredPropertyException("AuditProfileManagementArgs", "targetType");
            }
            return $;
        }
    }

}
