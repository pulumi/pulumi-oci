// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditTrailManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditTrailManagementArgs Empty = new AuditTrailManagementArgs();

    /**
     * The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="auditCollectionStartTime")
    private @Nullable Output<String> auditCollectionStartTime;

    /**
     * @return The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> auditCollectionStartTime() {
        return Optional.ofNullable(this.auditCollectionStartTime);
    }

    /**
     * (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
     * 
     */
    @Import(name="canUpdateLastArchiveTimeOnTarget")
    private @Nullable Output<Boolean> canUpdateLastArchiveTimeOnTarget;

    /**
     * @return (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
     * 
     */
    public Optional<Output<Boolean>> canUpdateLastArchiveTimeOnTarget() {
        return Optional.ofNullable(this.canUpdateLastArchiveTimeOnTarget);
    }

    /**
     * The OCID of the compartment that contains the target.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment that contains the target.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description of the audit trail.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the audit trail.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
     * 
     */
    @Import(name="isAutoPurgeEnabled")
    private @Nullable Output<Boolean> isAutoPurgeEnabled;

    /**
     * @return (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
     * 
     */
    public Optional<Output<Boolean>> isAutoPurgeEnabled() {
        return Optional.ofNullable(this.isAutoPurgeEnabled);
    }

    /**
     * (Updatable) An optional property when set to true triggers Resume.
     * 
     */
    @Import(name="resumeTrigger")
    private @Nullable Output<Boolean> resumeTrigger;

    /**
     * @return (Updatable) An optional property when set to true triggers Resume.
     * 
     */
    public Optional<Output<Boolean>> resumeTrigger() {
        return Optional.ofNullable(this.resumeTrigger);
    }

    /**
     * (Updatable) An optional property when set to true triggers Start.
     * 
     */
    @Import(name="startTrigger")
    private @Nullable Output<Boolean> startTrigger;

    /**
     * @return (Updatable) An optional property when set to true triggers Start.
     * 
     */
    public Optional<Output<Boolean>> startTrigger() {
        return Optional.ofNullable(this.startTrigger);
    }

    /**
     * (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) An optional property when set to true triggers Stop.
     * 
     */
    @Import(name="stopTrigger")
    private @Nullable Output<Boolean> stopTrigger;

    /**
     * @return (Updatable) An optional property when set to true triggers Stop.
     * 
     */
    public Optional<Output<Boolean>> stopTrigger() {
        return Optional.ofNullable(this.stopTrigger);
    }

    /**
     * The OCID of the target.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The OCID of the target.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
     * 
     */
    @Import(name="trailLocation")
    private @Nullable Output<String> trailLocation;

    /**
     * @return An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
     * 
     */
    public Optional<Output<String>> trailLocation() {
        return Optional.ofNullable(this.trailLocation);
    }

    private AuditTrailManagementArgs() {}

    private AuditTrailManagementArgs(AuditTrailManagementArgs $) {
        this.auditCollectionStartTime = $.auditCollectionStartTime;
        this.canUpdateLastArchiveTimeOnTarget = $.canUpdateLastArchiveTimeOnTarget;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isAutoPurgeEnabled = $.isAutoPurgeEnabled;
        this.resumeTrigger = $.resumeTrigger;
        this.startTrigger = $.startTrigger;
        this.state = $.state;
        this.stopTrigger = $.stopTrigger;
        this.targetId = $.targetId;
        this.trailLocation = $.trailLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditTrailManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditTrailManagementArgs $;

        public Builder() {
            $ = new AuditTrailManagementArgs();
        }

        public Builder(AuditTrailManagementArgs defaults) {
            $ = new AuditTrailManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditCollectionStartTime The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder auditCollectionStartTime(@Nullable Output<String> auditCollectionStartTime) {
            $.auditCollectionStartTime = auditCollectionStartTime;
            return this;
        }

        /**
         * @param auditCollectionStartTime The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder auditCollectionStartTime(String auditCollectionStartTime) {
            return auditCollectionStartTime(Output.of(auditCollectionStartTime));
        }

        /**
         * @param canUpdateLastArchiveTimeOnTarget (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
         * 
         * @return builder
         * 
         */
        public Builder canUpdateLastArchiveTimeOnTarget(@Nullable Output<Boolean> canUpdateLastArchiveTimeOnTarget) {
            $.canUpdateLastArchiveTimeOnTarget = canUpdateLastArchiveTimeOnTarget;
            return this;
        }

        /**
         * @param canUpdateLastArchiveTimeOnTarget (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
         * 
         * @return builder
         * 
         */
        public Builder canUpdateLastArchiveTimeOnTarget(Boolean canUpdateLastArchiveTimeOnTarget) {
            return canUpdateLastArchiveTimeOnTarget(Output.of(canUpdateLastArchiveTimeOnTarget));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the target.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the target.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description of the audit trail.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the audit trail.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAutoPurgeEnabled (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
         * 
         * @return builder
         * 
         */
        public Builder isAutoPurgeEnabled(@Nullable Output<Boolean> isAutoPurgeEnabled) {
            $.isAutoPurgeEnabled = isAutoPurgeEnabled;
            return this;
        }

        /**
         * @param isAutoPurgeEnabled (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
         * 
         * @return builder
         * 
         */
        public Builder isAutoPurgeEnabled(Boolean isAutoPurgeEnabled) {
            return isAutoPurgeEnabled(Output.of(isAutoPurgeEnabled));
        }

        /**
         * @param resumeTrigger (Updatable) An optional property when set to true triggers Resume.
         * 
         * @return builder
         * 
         */
        public Builder resumeTrigger(@Nullable Output<Boolean> resumeTrigger) {
            $.resumeTrigger = resumeTrigger;
            return this;
        }

        /**
         * @param resumeTrigger (Updatable) An optional property when set to true triggers Resume.
         * 
         * @return builder
         * 
         */
        public Builder resumeTrigger(Boolean resumeTrigger) {
            return resumeTrigger(Output.of(resumeTrigger));
        }

        /**
         * @param startTrigger (Updatable) An optional property when set to true triggers Start.
         * 
         * @return builder
         * 
         */
        public Builder startTrigger(@Nullable Output<Boolean> startTrigger) {
            $.startTrigger = startTrigger;
            return this;
        }

        /**
         * @param startTrigger (Updatable) An optional property when set to true triggers Start.
         * 
         * @return builder
         * 
         */
        public Builder startTrigger(Boolean startTrigger) {
            return startTrigger(Output.of(startTrigger));
        }

        /**
         * @param state (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stopTrigger (Updatable) An optional property when set to true triggers Stop.
         * 
         * @return builder
         * 
         */
        public Builder stopTrigger(@Nullable Output<Boolean> stopTrigger) {
            $.stopTrigger = stopTrigger;
            return this;
        }

        /**
         * @param stopTrigger (Updatable) An optional property when set to true triggers Stop.
         * 
         * @return builder
         * 
         */
        public Builder stopTrigger(Boolean stopTrigger) {
            return stopTrigger(Output.of(stopTrigger));
        }

        /**
         * @param targetId The OCID of the target.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The OCID of the target.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param trailLocation An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         * 
         * @return builder
         * 
         */
        public Builder trailLocation(@Nullable Output<String> trailLocation) {
            $.trailLocation = trailLocation;
            return this;
        }

        /**
         * @param trailLocation An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         * 
         * @return builder
         * 
         */
        public Builder trailLocation(String trailLocation) {
            return trailLocation(Output.of(trailLocation));
        }

        public AuditTrailManagementArgs build() {
            return $;
        }
    }

}
