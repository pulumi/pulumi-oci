// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataSafe.CalculateAuditVolumeAvailableArgs;
import com.pulumi.oci.DataSafe.inputs.CalculateAuditVolumeAvailableState;
import com.pulumi.oci.DataSafe.outputs.CalculateAuditVolumeAvailableAvailableAuditVolume;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource provides the Calculate Audit Volume Available resource in Oracle Cloud Infrastructure Data Safe service.
 * 
 * Calculates the volume of audit events available on the target database to be collected. Measurable up to the defined retention period of the audit target resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DataSafe.CalculateAuditVolumeAvailable;
 * import com.pulumi.oci.DataSafe.CalculateAuditVolumeAvailableArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testCalculateAuditVolumeAvailable = new CalculateAuditVolumeAvailable("testCalculateAuditVolumeAvailable", CalculateAuditVolumeAvailableArgs.builder()
 *             .auditProfileId(testAuditProfile.id())
 *             .auditCollectionStartTime(calculateAuditVolumeAvailableAuditCollectionStartTime)
 *             .databaseUniqueName(calculateAuditVolumeAvailableDatabaseUniqueName)
 *             .trailLocations(calculateAuditVolumeAvailableTrailLocations)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * CalculateAuditVolumeAvailable can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:DataSafe/calculateAuditVolumeAvailable:CalculateAuditVolumeAvailable test_calculate_audit_volume_available &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataSafe/calculateAuditVolumeAvailable:CalculateAuditVolumeAvailable")
public class CalculateAuditVolumeAvailable extends com.pulumi.resources.CustomResource {
    /**
     * The date from which the audit trail must start collecting data in UTC, in the format defined by RFC3339. If not specified, this will default to the date based on the retention period.
     * 
     */
    @Export(name="auditCollectionStartTime", refs={String.class}, tree="[0]")
    private Output<String> auditCollectionStartTime;

    /**
     * @return The date from which the audit trail must start collecting data in UTC, in the format defined by RFC3339. If not specified, this will default to the date based on the retention period.
     * 
     */
    public Output<String> auditCollectionStartTime() {
        return this.auditCollectionStartTime;
    }
    /**
     * The OCID of the audit.
     * 
     */
    @Export(name="auditProfileId", refs={String.class}, tree="[0]")
    private Output<String> auditProfileId;

    /**
     * @return The OCID of the audit.
     * 
     */
    public Output<String> auditProfileId() {
        return this.auditProfileId;
    }
    /**
     * List of available audit volumes.
     * 
     */
    @Export(name="availableAuditVolumes", refs={List.class,CalculateAuditVolumeAvailableAvailableAuditVolume.class}, tree="[0,1]")
    private Output<List<CalculateAuditVolumeAvailableAvailableAuditVolume>> availableAuditVolumes;

    /**
     * @return List of available audit volumes.
     * 
     */
    public Output<List<CalculateAuditVolumeAvailableAvailableAuditVolume>> availableAuditVolumes() {
        return this.availableAuditVolumes;
    }
    /**
     * Unique name of the database associated to the peer target database.
     * 
     */
    @Export(name="databaseUniqueName", refs={String.class}, tree="[0]")
    private Output<String> databaseUniqueName;

    /**
     * @return Unique name of the database associated to the peer target database.
     * 
     */
    public Output<String> databaseUniqueName() {
        return this.databaseUniqueName;
    }
    /**
     * The trail locations for which the audit data volume has to be calculated.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="trailLocations", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> trailLocations;

    /**
     * @return The trail locations for which the audit data volume has to be calculated.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<List<String>> trailLocations() {
        return this.trailLocations;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CalculateAuditVolumeAvailable(java.lang.String name) {
        this(name, CalculateAuditVolumeAvailableArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CalculateAuditVolumeAvailable(java.lang.String name, CalculateAuditVolumeAvailableArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CalculateAuditVolumeAvailable(java.lang.String name, CalculateAuditVolumeAvailableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/calculateAuditVolumeAvailable:CalculateAuditVolumeAvailable", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CalculateAuditVolumeAvailable(java.lang.String name, Output<java.lang.String> id, @Nullable CalculateAuditVolumeAvailableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/calculateAuditVolumeAvailable:CalculateAuditVolumeAvailable", name, state, makeResourceOptions(options, id), false);
    }

    private static CalculateAuditVolumeAvailableArgs makeArgs(CalculateAuditVolumeAvailableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CalculateAuditVolumeAvailableArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CalculateAuditVolumeAvailable get(java.lang.String name, Output<java.lang.String> id, @Nullable CalculateAuditVolumeAvailableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CalculateAuditVolumeAvailable(name, id, state, options);
    }
}
