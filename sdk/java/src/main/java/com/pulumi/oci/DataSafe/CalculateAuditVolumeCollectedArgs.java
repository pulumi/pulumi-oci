// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CalculateAuditVolumeCollectedArgs extends com.pulumi.resources.ResourceArgs {

    public static final CalculateAuditVolumeCollectedArgs Empty = new CalculateAuditVolumeCollectedArgs();

    /**
     * The OCID of the audit.
     * 
     */
    @Import(name="auditProfileId", required=true)
    private Output<String> auditProfileId;

    /**
     * @return The OCID of the audit.
     * 
     */
    public Output<String> auditProfileId() {
        return this.auditProfileId;
    }

    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeFromMonth", required=true)
    private Output<String> timeFromMonth;

    /**
     * @return The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
     * 
     */
    public Output<String> timeFromMonth() {
        return this.timeFromMonth;
    }

    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeToMonth")
    private @Nullable Output<String> timeToMonth;

    /**
     * @return The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> timeToMonth() {
        return Optional.ofNullable(this.timeToMonth);
    }

    private CalculateAuditVolumeCollectedArgs() {}

    private CalculateAuditVolumeCollectedArgs(CalculateAuditVolumeCollectedArgs $) {
        this.auditProfileId = $.auditProfileId;
        this.timeFromMonth = $.timeFromMonth;
        this.timeToMonth = $.timeToMonth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CalculateAuditVolumeCollectedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CalculateAuditVolumeCollectedArgs $;

        public Builder() {
            $ = new CalculateAuditVolumeCollectedArgs();
        }

        public Builder(CalculateAuditVolumeCollectedArgs defaults) {
            $ = new CalculateAuditVolumeCollectedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditProfileId The OCID of the audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(Output<String> auditProfileId) {
            $.auditProfileId = auditProfileId;
            return this;
        }

        /**
         * @param auditProfileId The OCID of the audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(String auditProfileId) {
            return auditProfileId(Output.of(auditProfileId));
        }

        /**
         * @param timeFromMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeFromMonth(Output<String> timeFromMonth) {
            $.timeFromMonth = timeFromMonth;
            return this;
        }

        /**
         * @param timeFromMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeFromMonth(String timeFromMonth) {
            return timeFromMonth(Output.of(timeFromMonth));
        }

        /**
         * @param timeToMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeToMonth(@Nullable Output<String> timeToMonth) {
            $.timeToMonth = timeToMonth;
            return this;
        }

        /**
         * @param timeToMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeToMonth(String timeToMonth) {
            return timeToMonth(Output.of(timeToMonth));
        }

        public CalculateAuditVolumeCollectedArgs build() {
            if ($.auditProfileId == null) {
                throw new MissingRequiredPropertyException("CalculateAuditVolumeCollectedArgs", "auditProfileId");
            }
            if ($.timeFromMonth == null) {
                throw new MissingRequiredPropertyException("CalculateAuditVolumeCollectedArgs", "timeFromMonth");
            }
            return $;
        }
    }

}
