// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GenerateOnPremConnectorConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenerateOnPremConnectorConfigurationArgs Empty = new GenerateOnPremConnectorConfigurationArgs();

    /**
     * The OCID of the on-premises connector.
     * 
     */
    @Import(name="onPremConnectorId", required=true)
    private Output<String> onPremConnectorId;

    /**
     * @return The OCID of the on-premises connector.
     * 
     */
    public Output<String> onPremConnectorId() {
        return this.onPremConnectorId;
    }

    /**
     * The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    private GenerateOnPremConnectorConfigurationArgs() {}

    private GenerateOnPremConnectorConfigurationArgs(GenerateOnPremConnectorConfigurationArgs $) {
        this.onPremConnectorId = $.onPremConnectorId;
        this.password = $.password;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenerateOnPremConnectorConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenerateOnPremConnectorConfigurationArgs $;

        public Builder() {
            $ = new GenerateOnPremConnectorConfigurationArgs();
        }

        public Builder(GenerateOnPremConnectorConfigurationArgs defaults) {
            $ = new GenerateOnPremConnectorConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param onPremConnectorId The OCID of the on-premises connector.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorId(Output<String> onPremConnectorId) {
            $.onPremConnectorId = onPremConnectorId;
            return this;
        }

        /**
         * @param onPremConnectorId The OCID of the on-premises connector.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorId(String onPremConnectorId) {
            return onPremConnectorId(Output.of(onPremConnectorId));
        }

        /**
         * @param password The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        public GenerateOnPremConnectorConfigurationArgs build() {
            if ($.onPremConnectorId == null) {
                throw new MissingRequiredPropertyException("GenerateOnPremConnectorConfigurationArgs", "onPremConnectorId");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("GenerateOnPremConnectorConfigurationArgs", "password");
            }
            return $;
        }
    }

}
