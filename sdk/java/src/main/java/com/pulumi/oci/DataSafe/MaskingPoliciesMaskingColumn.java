// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataSafe.MaskingPoliciesMaskingColumnArgs;
import com.pulumi.oci.DataSafe.inputs.MaskingPoliciesMaskingColumnState;
import com.pulumi.oci.DataSafe.outputs.MaskingPoliciesMaskingColumnMaskingFormat;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource provides the Masking Policies Masking Column resource in Oracle Cloud Infrastructure Data Safe service.
 * 
 * Creates a new masking column in the specified masking policy. Use this operation
 * to add parent columns only. It automatically adds the child columns from the
 * associated sensitive data model or target database. If you provide the
 * sensitiveTypeId attribute but not the maskingFormats attribute, it automatically
 * assigns the default masking format associated with the specified sensitive type.
 * Alternatively, if you provide the maskingFormats attribute, the specified masking
 * formats are assigned to the column.
 * 
 * Using the maskingFormats attribute, you can assign one or more masking formats
 * to a column. You need to specify a condition as part of each masking format. It
 * enables you to do &lt;a href=&#34;https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html&#34;&gt;conditional masking&lt;/a&gt;
 * so that you can mask the column data values differently using different
 * masking conditions. A masking format can have one or more format entries. The
 * combined output of all the format entries is used for masking. It provides the
 * flexibility to define a masking format that can generate different parts of a data
 * value separately and then combine them to get the final data value for masking.
 * 
 * You can use the maskingColumnGroup attribute to group the columns that you would
 * like to mask together. It enables you to do &lt;a href=&#34;https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&#34;&gt;group or compound masking&lt;/a&gt; that ensures that the
 * masked data across the columns in a group continue to retain the same logical relationship.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DataSafe.MaskingPoliciesMaskingColumn;
 * import com.pulumi.oci.DataSafe.MaskingPoliciesMaskingColumnArgs;
 * import com.pulumi.oci.DataSafe.inputs.MaskingPoliciesMaskingColumnMaskingFormatArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMaskingPoliciesMaskingColumn = new MaskingPoliciesMaskingColumn(&#34;testMaskingPoliciesMaskingColumn&#34;, MaskingPoliciesMaskingColumnArgs.builder()        
 *             .columnName(var_.masking_policies_masking_column_column_name())
 *             .maskingPolicyId(oci_data_safe_masking_policy.test_masking_policy().id())
 *             .object(var_.masking_policies_masking_column_object())
 *             .schemaName(var_.masking_policies_masking_column_schema_name())
 *             .isMaskingEnabled(var_.masking_policies_masking_column_is_masking_enabled())
 *             .maskingColumnGroup(var_.masking_policies_masking_column_masking_column_group())
 *             .maskingFormats(MaskingPoliciesMaskingColumnMaskingFormatArgs.builder()
 *                 .formatEntries(MaskingPoliciesMaskingColumnMaskingFormatFormatEntryArgs.builder()
 *                     .type(var_.masking_policies_masking_column_masking_formats_format_entries_type())
 *                     .columnName(var_.masking_policies_masking_column_masking_formats_format_entries_column_name())
 *                     .description(var_.masking_policies_masking_column_masking_formats_format_entries_description())
 *                     .endDate(var_.masking_policies_masking_column_masking_formats_format_entries_end_date())
 *                     .endLength(var_.masking_policies_masking_column_masking_formats_format_entries_end_length())
 *                     .endValue(var_.masking_policies_masking_column_masking_formats_format_entries_end_value())
 *                     .fixedNumber(var_.masking_policies_masking_column_masking_formats_format_entries_fixed_number())
 *                     .fixedString(var_.masking_policies_masking_column_masking_formats_format_entries_fixed_string())
 *                     .groupingColumns(var_.masking_policies_masking_column_masking_formats_format_entries_grouping_columns())
 *                     .length(var_.masking_policies_masking_column_masking_formats_format_entries_length())
 *                     .libraryMaskingFormatId(oci_data_safe_library_masking_format.test_library_masking_format().id())
 *                     .postProcessingFunction(var_.masking_policies_masking_column_masking_formats_format_entries_post_processing_function())
 *                     .randomLists(var_.masking_policies_masking_column_masking_formats_format_entries_random_list())
 *                     .regularExpression(var_.masking_policies_masking_column_masking_formats_format_entries_regular_expression())
 *                     .replaceWith(var_.masking_policies_masking_column_masking_formats_format_entries_replace_with())
 *                     .schemaName(var_.masking_policies_masking_column_masking_formats_format_entries_schema_name())
 *                     .sqlExpression(var_.masking_policies_masking_column_masking_formats_format_entries_sql_expression())
 *                     .startDate(var_.masking_policies_masking_column_masking_formats_format_entries_start_date())
 *                     .startLength(var_.masking_policies_masking_column_masking_formats_format_entries_start_length())
 *                     .startPosition(var_.masking_policies_masking_column_masking_formats_format_entries_start_position())
 *                     .startValue(var_.masking_policies_masking_column_masking_formats_format_entries_start_value())
 *                     .tableName(oci_nosql_table.test_table().name())
 *                     .userDefinedFunction(var_.masking_policies_masking_column_masking_formats_format_entries_user_defined_function())
 *                     .build())
 *                 .condition(var_.masking_policies_masking_column_masking_formats_condition())
 *                 .description(var_.masking_policies_masking_column_masking_formats_description())
 *                 .build())
 *             .objectType(var_.masking_policies_masking_column_object_type())
 *             .sensitiveTypeId(oci_data_safe_sensitive_type.test_sensitive_type().id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * MaskingPoliciesMaskingColumns can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn test_masking_policies_masking_column &#34;maskingPolicies/{maskingPolicyId}/maskingColumns/{maskingColumnKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn")
public class MaskingPoliciesMaskingColumn extends com.pulumi.resources.CustomResource {
    /**
     * An array of child columns that are in referential relationship with the masking column.
     * 
     */
    @Export(name="childColumns", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> childColumns;

    /**
     * @return An array of child columns that are in referential relationship with the masking column.
     * 
     */
    public Output<List<String>> childColumns() {
        return this.childColumns;
    }
    /**
     * (Updatable) The name of the substitution column.
     * 
     */
    @Export(name="columnName", refs={String.class}, tree="[0]")
    private Output<String> columnName;

    /**
     * @return (Updatable) The name of the substitution column.
     * 
     */
    public Output<String> columnName() {
        return this.columnName;
    }
    /**
     * The data type of the masking column.
     * 
     */
    @Export(name="dataType", refs={String.class}, tree="[0]")
    private Output<String> dataType;

    /**
     * @return The data type of the masking column.
     * 
     */
    public Output<String> dataType() {
        return this.dataType;
    }
    /**
     * (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don&#39;t want to mask the column.
     * 
     */
    @Export(name="isMaskingEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isMaskingEnabled;

    /**
     * @return (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don&#39;t want to mask the column.
     * 
     */
    public Output<Boolean> isMaskingEnabled() {
        return this.isMaskingEnabled;
    }
    /**
     * The unique key that identifies the masking column. It&#39;s numeric and unique within a masking policy.
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return The unique key that identifies the masking column. It&#39;s numeric and unique within a masking policy.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * Details about the current state of the masking column.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Details about the current state of the masking column.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) The group of the masking column. It&#39;s a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  &lt;a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&gt;Group Masking in the Data Safe documentation.&lt;/a&gt;
     * 
     */
    @Export(name="maskingColumnGroup", refs={String.class}, tree="[0]")
    private Output<String> maskingColumnGroup;

    /**
     * @return (Updatable) The group of the masking column. It&#39;s a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  &lt;a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&gt;Group Masking in the Data Safe documentation.&lt;/a&gt;
     * 
     */
    public Output<String> maskingColumnGroup() {
        return this.maskingColumnGroup;
    }
    /**
     * (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  &lt;a href=&#34;https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html&#34;&gt;conditional masking&lt;/a&gt;  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
     * 
     */
    @Export(name="maskingFormats", refs={List.class,MaskingPoliciesMaskingColumnMaskingFormat.class}, tree="[0,1]")
    private Output<List<MaskingPoliciesMaskingColumnMaskingFormat>> maskingFormats;

    /**
     * @return (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  &lt;a href=&#34;https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html&#34;&gt;conditional masking&lt;/a&gt;  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
     * 
     */
    public Output<List<MaskingPoliciesMaskingColumnMaskingFormat>> maskingFormats() {
        return this.maskingFormats;
    }
    /**
     * The OCID of the masking policy.
     * 
     */
    @Export(name="maskingPolicyId", refs={String.class}, tree="[0]")
    private Output<String> maskingPolicyId;

    /**
     * @return The OCID of the masking policy.
     * 
     */
    public Output<String> maskingPolicyId() {
        return this.maskingPolicyId;
    }
    /**
     * The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
     * 
     */
    @Export(name="object", refs={String.class}, tree="[0]")
    private Output<String> object;

    /**
     * @return The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
     * 
     */
    public Output<String> object() {
        return this.object;
    }
    /**
     * (Updatable) The type of the object that contains the database column.
     * 
     */
    @Export(name="objectType", refs={String.class}, tree="[0]")
    private Output<String> objectType;

    /**
     * @return (Updatable) The type of the object that contains the database column.
     * 
     */
    public Output<String> objectType() {
        return this.objectType;
    }
    /**
     * The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
     * 
     */
    @Export(name="schemaName", refs={String.class}, tree="[0]")
    private Output<String> schemaName;

    /**
     * @return The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
     * 
     */
    public Output<String> schemaName() {
        return this.schemaName;
    }
    /**
     * (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn&#39;t provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="sensitiveTypeId", refs={String.class}, tree="[0]")
    private Output<String> sensitiveTypeId;

    /**
     * @return (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn&#39;t provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> sensitiveTypeId() {
        return this.sensitiveTypeId;
    }
    /**
     * The current state of the masking column.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the masking column.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MaskingPoliciesMaskingColumn(String name) {
        this(name, MaskingPoliciesMaskingColumnArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MaskingPoliciesMaskingColumn(String name, MaskingPoliciesMaskingColumnArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MaskingPoliciesMaskingColumn(String name, MaskingPoliciesMaskingColumnArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn", name, args == null ? MaskingPoliciesMaskingColumnArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MaskingPoliciesMaskingColumn(String name, Output<String> id, @Nullable MaskingPoliciesMaskingColumnState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MaskingPoliciesMaskingColumn get(String name, Output<String> id, @Nullable MaskingPoliciesMaskingColumnState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MaskingPoliciesMaskingColumn(name, id, state, options);
    }
}
