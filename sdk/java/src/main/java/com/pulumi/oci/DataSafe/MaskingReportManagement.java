// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataSafe.MaskingReportManagementArgs;
import com.pulumi.oci.DataSafe.inputs.MaskingReportManagementState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides Masking Report Management resource in Oracle Cloud Infrastructure Data Safe service.
 * 
 * Gets the details of the specified masking report.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DataSafe.MaskingReportManagement;
 * import com.pulumi.oci.DataSafe.MaskingReportManagementArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMaskingReportManagement = new MaskingReportManagement("testMaskingReportManagement", MaskingReportManagementArgs.builder()
 *             .targetId(testTargetDatabase.id())
 *             .maskingPolicyId(testMaskingPolicy.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Import is not supported for this resource.
 * 
 */
@ResourceType(type="oci:DataSafe/maskingReportManagement:MaskingReportManagement")
public class MaskingReportManagement extends com.pulumi.resources.CustomResource {
    /**
     * The OCID of the compartment that contains the masking report.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment that contains the masking report.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * Indicates if the temporary tables created during the masking operation were dropped after masking.
     * 
     */
    @Export(name="isDropTempTablesEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isDropTempTablesEnabled;

    /**
     * @return Indicates if the temporary tables created during the masking operation were dropped after masking.
     * 
     */
    public Output<Boolean> isDropTempTablesEnabled() {
        return this.isDropTempTablesEnabled;
    }
    /**
     * Indicates if redo logging was enabled during the masking operation.
     * 
     */
    @Export(name="isRedoLoggingEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isRedoLoggingEnabled;

    /**
     * @return Indicates if redo logging was enabled during the masking operation.
     * 
     */
    public Output<Boolean> isRedoLoggingEnabled() {
        return this.isRedoLoggingEnabled;
    }
    /**
     * Indicates if statistics gathering was enabled during the masking operation.
     * 
     */
    @Export(name="isRefreshStatsEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isRefreshStatsEnabled;

    /**
     * @return Indicates if statistics gathering was enabled during the masking operation.
     * 
     */
    public Output<Boolean> isRefreshStatsEnabled() {
        return this.isRefreshStatsEnabled;
    }
    /**
     * The OCID of the masking policy.
     * 
     */
    @Export(name="maskingPolicyId", refs={String.class}, tree="[0]")
    private Output<String> maskingPolicyId;

    /**
     * @return The OCID of the masking policy.
     * 
     */
    public Output<String> maskingPolicyId() {
        return this.maskingPolicyId;
    }
    /**
     * The OCID of the masking work request that resulted in this masking report.
     * 
     */
    @Export(name="maskingWorkRequestId", refs={String.class}, tree="[0]")
    private Output<String> maskingWorkRequestId;

    /**
     * @return The OCID of the masking work request that resulted in this masking report.
     * 
     */
    public Output<String> maskingWorkRequestId() {
        return this.maskingWorkRequestId;
    }
    /**
     * Indicates if parallel execution was enabled during the masking operation.
     * 
     */
    @Export(name="parallelDegree", refs={String.class}, tree="[0]")
    private Output<String> parallelDegree;

    /**
     * @return Indicates if parallel execution was enabled during the masking operation.
     * 
     */
    public Output<String> parallelDegree() {
        return this.parallelDegree;
    }
    /**
     * Indicates how invalid objects were recompiled post the masking operation.
     * 
     */
    @Export(name="recompile", refs={String.class}, tree="[0]")
    private Output<String> recompile;

    /**
     * @return Indicates how invalid objects were recompiled post the masking operation.
     * 
     */
    public Output<String> recompile() {
        return this.recompile;
    }
    /**
     * The current state of the masking report.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the masking report.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The OCID of the target database masked.
     * 
     */
    @Export(name="targetId", refs={String.class}, tree="[0]")
    private Output<String> targetId;

    /**
     * @return The OCID of the target database masked.
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }
    /**
     * The date and time the masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time data masking finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    @Export(name="timeMaskingFinished", refs={String.class}, tree="[0]")
    private Output<String> timeMaskingFinished;

    /**
     * @return The date and time data masking finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    public Output<String> timeMaskingFinished() {
        return this.timeMaskingFinished;
    }
    /**
     * The date and time data masking started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    @Export(name="timeMaskingStarted", refs={String.class}, tree="[0]")
    private Output<String> timeMaskingStarted;

    /**
     * @return The date and time data masking started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    public Output<String> timeMaskingStarted() {
        return this.timeMaskingStarted;
    }
    /**
     * The total number of masked columns.
     * 
     */
    @Export(name="totalMaskedColumns", refs={String.class}, tree="[0]")
    private Output<String> totalMaskedColumns;

    /**
     * @return The total number of masked columns.
     * 
     */
    public Output<String> totalMaskedColumns() {
        return this.totalMaskedColumns;
    }
    /**
     * The total number of unique objects (tables and editioning views) that contain the masked columns.
     * 
     */
    @Export(name="totalMaskedObjects", refs={String.class}, tree="[0]")
    private Output<String> totalMaskedObjects;

    /**
     * @return The total number of unique objects (tables and editioning views) that contain the masked columns.
     * 
     */
    public Output<String> totalMaskedObjects() {
        return this.totalMaskedObjects;
    }
    /**
     * The total number of unique schemas that contain the masked columns.
     * 
     */
    @Export(name="totalMaskedSchemas", refs={String.class}, tree="[0]")
    private Output<String> totalMaskedSchemas;

    /**
     * @return The total number of unique schemas that contain the masked columns.
     * 
     */
    public Output<String> totalMaskedSchemas() {
        return this.totalMaskedSchemas;
    }
    /**
     * The total number of unique sensitive types associated with the masked columns.
     * 
     */
    @Export(name="totalMaskedSensitiveTypes", refs={String.class}, tree="[0]")
    private Output<String> totalMaskedSensitiveTypes;

    /**
     * @return The total number of unique sensitive types associated with the masked columns.
     * 
     */
    public Output<String> totalMaskedSensitiveTypes() {
        return this.totalMaskedSensitiveTypes;
    }
    /**
     * The total number of masked values.
     * 
     */
    @Export(name="totalMaskedValues", refs={String.class}, tree="[0]")
    private Output<String> totalMaskedValues;

    /**
     * @return The total number of masked values.
     * 
     */
    public Output<String> totalMaskedValues() {
        return this.totalMaskedValues;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MaskingReportManagement(java.lang.String name) {
        this(name, MaskingReportManagementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MaskingReportManagement(java.lang.String name, @Nullable MaskingReportManagementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MaskingReportManagement(java.lang.String name, @Nullable MaskingReportManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/maskingReportManagement:MaskingReportManagement", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MaskingReportManagement(java.lang.String name, Output<java.lang.String> id, @Nullable MaskingReportManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/maskingReportManagement:MaskingReportManagement", name, state, makeResourceOptions(options, id), false);
    }

    private static MaskingReportManagementArgs makeArgs(@Nullable MaskingReportManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MaskingReportManagementArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MaskingReportManagement get(java.lang.String name, Output<java.lang.String> id, @Nullable MaskingReportManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MaskingReportManagement(name, id, state, options);
    }
}
