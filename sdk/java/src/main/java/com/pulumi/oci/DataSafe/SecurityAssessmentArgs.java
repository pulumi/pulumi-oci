// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityAssessmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityAssessmentArgs Empty = new SecurityAssessmentArgs();

    /**
     * (Updatable) An optional property when incremented triggers Apply Template. Could be set to any integer value.
     * 
     */
    @Import(name="applyTemplateTrigger")
    private @Nullable Output<Integer> applyTemplateTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Apply Template. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> applyTemplateTrigger() {
        return Optional.ofNullable(this.applyTemplateTrigger);
    }

    /**
     * The OCID of the security assessment. The assessment should be of type SAVED.  It will be required while creating the template baseline assessment for individual targets to fetch the detailed information from an existing security assessment.
     * 
     */
    @Import(name="baseSecurityAssessmentId")
    private @Nullable Output<String> baseSecurityAssessmentId;

    /**
     * @return The OCID of the security assessment. The assessment should be of type SAVED.  It will be required while creating the template baseline assessment for individual targets to fetch the detailed information from an existing security assessment.
     * 
     */
    public Optional<Output<String>> baseSecurityAssessmentId() {
        return Optional.ofNullable(this.baseSecurityAssessmentId);
    }

    /**
     * (Updatable) An optional property when incremented triggers Compare To Template Baseline. Could be set to any integer value.
     * 
     */
    @Import(name="compareToTemplateBaselineTrigger")
    private @Nullable Output<Integer> compareToTemplateBaselineTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Compare To Template Baseline. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> compareToTemplateBaselineTrigger() {
        return Optional.ofNullable(this.compareToTemplateBaselineTrigger);
    }

    /**
     * (Updatable) The OCID of the compartment that contains the security assessment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the security assessment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Description of the security assessment.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of the security assessment.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the security assessment.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the security assessment.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Indicates whether the assessment is scheduled to run.
     * 
     */
    @Import(name="isAssessmentScheduled")
    private @Nullable Output<Boolean> isAssessmentScheduled;

    /**
     * @return (Updatable) Indicates whether the assessment is scheduled to run.
     * 
     */
    public Optional<Output<Boolean>> isAssessmentScheduled() {
        return Optional.ofNullable(this.isAssessmentScheduled);
    }

    /**
     * (Updatable) An optional property when incremented triggers Remove Template. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="removeTemplateTrigger")
    private @Nullable Output<Integer> removeTemplateTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Remove Template. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> removeTemplateTrigger() {
        return Optional.ofNullable(this.removeTemplateTrigger);
    }

    /**
     * (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - &lt;version-string&gt;;&lt;version-specific-schedule&gt;
     * 
     * Allowed version strings - &#34;v1&#34; v1&#39;s version specific schedule -&lt;ss&gt; &lt;mm&gt; &lt;hh&gt; &lt;day-of-week&gt; &lt;day-of-month&gt; Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = &lt;ss&gt; (So, the allowed range for &lt;ss&gt; is [0, 59]) 2. minutes = &lt;mm&gt; (So, the allowed range for &lt;mm&gt; is [0, 59]) 3. hours = &lt;hh&gt; (So, the allowed range for &lt;hh&gt; is [0, 23]) &lt;day-of-week&gt; can be either &#39;*&#39; (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is &#39;*&#39;. When not, day of week must equal the given value &lt;day-of-month&gt; can be either &#39;*&#39; (without quotes or a number between 1 and 28) 5. No constraint introduced when it is &#39;*&#39;. When not, day of month must equal the given value
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<String> schedule;

    /**
     * @return (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - &lt;version-string&gt;;&lt;version-specific-schedule&gt;
     * 
     * Allowed version strings - &#34;v1&#34; v1&#39;s version specific schedule -&lt;ss&gt; &lt;mm&gt; &lt;hh&gt; &lt;day-of-week&gt; &lt;day-of-month&gt; Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = &lt;ss&gt; (So, the allowed range for &lt;ss&gt; is [0, 59]) 2. minutes = &lt;mm&gt; (So, the allowed range for &lt;mm&gt; is [0, 59]) 3. hours = &lt;hh&gt; (So, the allowed range for &lt;hh&gt; is [0, 23]) &lt;day-of-week&gt; can be either &#39;*&#39; (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is &#39;*&#39;. When not, day of week must equal the given value &lt;day-of-month&gt; can be either &#39;*&#39; (without quotes or a number between 1 and 28) 5. No constraint introduced when it is &#39;*&#39;. When not, day of month must equal the given value
     * 
     */
    public Optional<Output<String>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    /**
     * The OCID of the target database or target database group on which security assessment is to be run.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The OCID of the target database or target database group on which security assessment is to be run.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * The type of security assessment resource whether it is individual or group resource. For individual target use type TARGET_DATABASE and for group resource use type TARGET_DATABASE_GROUP. If not provided, TARGET_DATABASE would be used as default value.
     * 
     */
    @Import(name="targetType")
    private @Nullable Output<String> targetType;

    /**
     * @return The type of security assessment resource whether it is individual or group resource. For individual target use type TARGET_DATABASE and for group resource use type TARGET_DATABASE_GROUP. If not provided, TARGET_DATABASE would be used as default value.
     * 
     */
    public Optional<Output<String>> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    /**
     * The OCID of the template assessment. It will be required while creating the template baseline assessment.
     * 
     */
    @Import(name="templateAssessmentId")
    private @Nullable Output<String> templateAssessmentId;

    /**
     * @return The OCID of the template assessment. It will be required while creating the template baseline assessment.
     * 
     */
    public Optional<Output<String>> templateAssessmentId() {
        return Optional.ofNullable(this.templateAssessmentId);
    }

    /**
     * The type of the security assessment
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the security assessment
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SecurityAssessmentArgs() {}

    private SecurityAssessmentArgs(SecurityAssessmentArgs $) {
        this.applyTemplateTrigger = $.applyTemplateTrigger;
        this.baseSecurityAssessmentId = $.baseSecurityAssessmentId;
        this.compareToTemplateBaselineTrigger = $.compareToTemplateBaselineTrigger;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isAssessmentScheduled = $.isAssessmentScheduled;
        this.removeTemplateTrigger = $.removeTemplateTrigger;
        this.schedule = $.schedule;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
        this.templateAssessmentId = $.templateAssessmentId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityAssessmentArgs $;

        public Builder() {
            $ = new SecurityAssessmentArgs();
        }

        public Builder(SecurityAssessmentArgs defaults) {
            $ = new SecurityAssessmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applyTemplateTrigger (Updatable) An optional property when incremented triggers Apply Template. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder applyTemplateTrigger(@Nullable Output<Integer> applyTemplateTrigger) {
            $.applyTemplateTrigger = applyTemplateTrigger;
            return this;
        }

        /**
         * @param applyTemplateTrigger (Updatable) An optional property when incremented triggers Apply Template. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder applyTemplateTrigger(Integer applyTemplateTrigger) {
            return applyTemplateTrigger(Output.of(applyTemplateTrigger));
        }

        /**
         * @param baseSecurityAssessmentId The OCID of the security assessment. The assessment should be of type SAVED.  It will be required while creating the template baseline assessment for individual targets to fetch the detailed information from an existing security assessment.
         * 
         * @return builder
         * 
         */
        public Builder baseSecurityAssessmentId(@Nullable Output<String> baseSecurityAssessmentId) {
            $.baseSecurityAssessmentId = baseSecurityAssessmentId;
            return this;
        }

        /**
         * @param baseSecurityAssessmentId The OCID of the security assessment. The assessment should be of type SAVED.  It will be required while creating the template baseline assessment for individual targets to fetch the detailed information from an existing security assessment.
         * 
         * @return builder
         * 
         */
        public Builder baseSecurityAssessmentId(String baseSecurityAssessmentId) {
            return baseSecurityAssessmentId(Output.of(baseSecurityAssessmentId));
        }

        /**
         * @param compareToTemplateBaselineTrigger (Updatable) An optional property when incremented triggers Compare To Template Baseline. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder compareToTemplateBaselineTrigger(@Nullable Output<Integer> compareToTemplateBaselineTrigger) {
            $.compareToTemplateBaselineTrigger = compareToTemplateBaselineTrigger;
            return this;
        }

        /**
         * @param compareToTemplateBaselineTrigger (Updatable) An optional property when incremented triggers Compare To Template Baseline. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder compareToTemplateBaselineTrigger(Integer compareToTemplateBaselineTrigger) {
            return compareToTemplateBaselineTrigger(Output.of(compareToTemplateBaselineTrigger));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Description of the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAssessmentScheduled (Updatable) Indicates whether the assessment is scheduled to run.
         * 
         * @return builder
         * 
         */
        public Builder isAssessmentScheduled(@Nullable Output<Boolean> isAssessmentScheduled) {
            $.isAssessmentScheduled = isAssessmentScheduled;
            return this;
        }

        /**
         * @param isAssessmentScheduled (Updatable) Indicates whether the assessment is scheduled to run.
         * 
         * @return builder
         * 
         */
        public Builder isAssessmentScheduled(Boolean isAssessmentScheduled) {
            return isAssessmentScheduled(Output.of(isAssessmentScheduled));
        }

        /**
         * @param removeTemplateTrigger (Updatable) An optional property when incremented triggers Remove Template. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder removeTemplateTrigger(@Nullable Output<Integer> removeTemplateTrigger) {
            $.removeTemplateTrigger = removeTemplateTrigger;
            return this;
        }

        /**
         * @param removeTemplateTrigger (Updatable) An optional property when incremented triggers Remove Template. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder removeTemplateTrigger(Integer removeTemplateTrigger) {
            return removeTemplateTrigger(Output.of(removeTemplateTrigger));
        }

        /**
         * @param schedule (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - &lt;version-string&gt;;&lt;version-specific-schedule&gt;
         * 
         * Allowed version strings - &#34;v1&#34; v1&#39;s version specific schedule -&lt;ss&gt; &lt;mm&gt; &lt;hh&gt; &lt;day-of-week&gt; &lt;day-of-month&gt; Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = &lt;ss&gt; (So, the allowed range for &lt;ss&gt; is [0, 59]) 2. minutes = &lt;mm&gt; (So, the allowed range for &lt;mm&gt; is [0, 59]) 3. hours = &lt;hh&gt; (So, the allowed range for &lt;hh&gt; is [0, 23]) &lt;day-of-week&gt; can be either &#39;*&#39; (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is &#39;*&#39;. When not, day of week must equal the given value &lt;day-of-month&gt; can be either &#39;*&#39; (without quotes or a number between 1 and 28) 5. No constraint introduced when it is &#39;*&#39;. When not, day of month must equal the given value
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<String> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule (Updatable) To schedule the assessment for running periodically, specify the schedule in this attribute. Create or schedule one assessment per compartment. If not defined, the assessment runs immediately. Format - &lt;version-string&gt;;&lt;version-specific-schedule&gt;
         * 
         * Allowed version strings - &#34;v1&#34; v1&#39;s version specific schedule -&lt;ss&gt; &lt;mm&gt; &lt;hh&gt; &lt;day-of-week&gt; &lt;day-of-month&gt; Each of the above fields potentially introduce constraints. A workrequest is created only when clock time satisfies all the constraints. Constraints introduced: 1. seconds = &lt;ss&gt; (So, the allowed range for &lt;ss&gt; is [0, 59]) 2. minutes = &lt;mm&gt; (So, the allowed range for &lt;mm&gt; is [0, 59]) 3. hours = &lt;hh&gt; (So, the allowed range for &lt;hh&gt; is [0, 23]) &lt;day-of-week&gt; can be either &#39;*&#39; (without quotes or a number between 1(Monday) and 7(Sunday)) 4. No constraint introduced when it is &#39;*&#39;. When not, day of week must equal the given value &lt;day-of-month&gt; can be either &#39;*&#39; (without quotes or a number between 1 and 28) 5. No constraint introduced when it is &#39;*&#39;. When not, day of month must equal the given value
         * 
         * @return builder
         * 
         */
        public Builder schedule(String schedule) {
            return schedule(Output.of(schedule));
        }

        /**
         * @param targetId The OCID of the target database or target database group on which security assessment is to be run.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The OCID of the target database or target database group on which security assessment is to be run.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param targetType The type of security assessment resource whether it is individual or group resource. For individual target use type TARGET_DATABASE and for group resource use type TARGET_DATABASE_GROUP. If not provided, TARGET_DATABASE would be used as default value.
         * 
         * @return builder
         * 
         */
        public Builder targetType(@Nullable Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType The type of security assessment resource whether it is individual or group resource. For individual target use type TARGET_DATABASE and for group resource use type TARGET_DATABASE_GROUP. If not provided, TARGET_DATABASE would be used as default value.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        /**
         * @param templateAssessmentId The OCID of the template assessment. It will be required while creating the template baseline assessment.
         * 
         * @return builder
         * 
         */
        public Builder templateAssessmentId(@Nullable Output<String> templateAssessmentId) {
            $.templateAssessmentId = templateAssessmentId;
            return this;
        }

        /**
         * @param templateAssessmentId The OCID of the template assessment. It will be required while creating the template baseline assessment.
         * 
         * @return builder
         * 
         */
        public Builder templateAssessmentId(String templateAssessmentId) {
            return templateAssessmentId(Output.of(templateAssessmentId));
        }

        /**
         * @param type The type of the security assessment
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the security assessment
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SecurityAssessmentArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("SecurityAssessmentArgs", "compartmentId");
            }
            return $;
        }
    }

}
