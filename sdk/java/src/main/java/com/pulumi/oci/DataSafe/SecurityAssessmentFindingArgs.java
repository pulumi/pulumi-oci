// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.SecurityAssessmentFindingPatchOperationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityAssessmentFindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityAssessmentFindingArgs Empty = new SecurityAssessmentFindingArgs();

    /**
     * (Updatable)
     * 
     */
    @Import(name="patchOperations")
    private @Nullable Output<List<SecurityAssessmentFindingPatchOperationArgs>> patchOperations;

    /**
     * @return (Updatable)
     * 
     */
    public Optional<Output<List<SecurityAssessmentFindingPatchOperationArgs>>> patchOperations() {
        return Optional.ofNullable(this.patchOperations);
    }

    /**
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="securityAssessmentId", required=true)
    private Output<String> securityAssessmentId;

    /**
     * @return ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> securityAssessmentId() {
        return this.securityAssessmentId;
    }

    private SecurityAssessmentFindingArgs() {}

    private SecurityAssessmentFindingArgs(SecurityAssessmentFindingArgs $) {
        this.patchOperations = $.patchOperations;
        this.securityAssessmentId = $.securityAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityAssessmentFindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityAssessmentFindingArgs $;

        public Builder() {
            $ = new SecurityAssessmentFindingArgs();
        }

        public Builder(SecurityAssessmentFindingArgs defaults) {
            $ = new SecurityAssessmentFindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(@Nullable Output<List<SecurityAssessmentFindingPatchOperationArgs>> patchOperations) {
            $.patchOperations = patchOperations;
            return this;
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(List<SecurityAssessmentFindingPatchOperationArgs> patchOperations) {
            return patchOperations(Output.of(patchOperations));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(SecurityAssessmentFindingPatchOperationArgs... patchOperations) {
            return patchOperations(List.of(patchOperations));
        }

        /**
         * @param securityAssessmentId ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder securityAssessmentId(Output<String> securityAssessmentId) {
            $.securityAssessmentId = securityAssessmentId;
            return this;
        }

        /**
         * @param securityAssessmentId ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder securityAssessmentId(String securityAssessmentId) {
            return securityAssessmentId(Output.of(securityAssessmentId));
        }

        public SecurityAssessmentFindingArgs build() {
            if ($.securityAssessmentId == null) {
                throw new MissingRequiredPropertyException("SecurityAssessmentFindingArgs", "securityAssessmentId");
            }
            return $;
        }
    }

}
