// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.SensitiveDataModelReferentialRelationChildArgs;
import com.pulumi.oci.DataSafe.inputs.SensitiveDataModelReferentialRelationParentArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SensitiveDataModelReferentialRelationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SensitiveDataModelReferentialRelationArgs Empty = new SensitiveDataModelReferentialRelationArgs();

    /**
     * columnsInfo object has details of column group with schema details.
     * 
     */
    @Import(name="child", required=true)
    private Output<SensitiveDataModelReferentialRelationChildArgs> child;

    /**
     * @return columnsInfo object has details of column group with schema details.
     * 
     */
    public Output<SensitiveDataModelReferentialRelationChildArgs> child() {
        return this.child;
    }

    /**
     * Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
     * 
     */
    @Import(name="isSensitive")
    private @Nullable Output<Boolean> isSensitive;

    /**
     * @return Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
     * 
     */
    public Optional<Output<Boolean>> isSensitive() {
        return Optional.ofNullable(this.isSensitive);
    }

    /**
     * columnsInfo object has details of column group with schema details.
     * 
     */
    @Import(name="parent", required=true)
    private Output<SensitiveDataModelReferentialRelationParentArgs> parent;

    /**
     * @return columnsInfo object has details of column group with schema details.
     * 
     */
    public Output<SensitiveDataModelReferentialRelationParentArgs> parent() {
        return this.parent;
    }

    /**
     * The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
     * 
     */
    @Import(name="relationType", required=true)
    private Output<String> relationType;

    /**
     * @return The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
     * 
     */
    public Output<String> relationType() {
        return this.relationType;
    }

    /**
     * The OCID of the sensitive data model.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="sensitiveDataModelId", required=true)
    private Output<String> sensitiveDataModelId;

    /**
     * @return The OCID of the sensitive data model.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> sensitiveDataModelId() {
        return this.sensitiveDataModelId;
    }

    private SensitiveDataModelReferentialRelationArgs() {}

    private SensitiveDataModelReferentialRelationArgs(SensitiveDataModelReferentialRelationArgs $) {
        this.child = $.child;
        this.isSensitive = $.isSensitive;
        this.parent = $.parent;
        this.relationType = $.relationType;
        this.sensitiveDataModelId = $.sensitiveDataModelId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SensitiveDataModelReferentialRelationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SensitiveDataModelReferentialRelationArgs $;

        public Builder() {
            $ = new SensitiveDataModelReferentialRelationArgs();
        }

        public Builder(SensitiveDataModelReferentialRelationArgs defaults) {
            $ = new SensitiveDataModelReferentialRelationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param child columnsInfo object has details of column group with schema details.
         * 
         * @return builder
         * 
         */
        public Builder child(Output<SensitiveDataModelReferentialRelationChildArgs> child) {
            $.child = child;
            return this;
        }

        /**
         * @param child columnsInfo object has details of column group with schema details.
         * 
         * @return builder
         * 
         */
        public Builder child(SensitiveDataModelReferentialRelationChildArgs child) {
            return child(Output.of(child));
        }

        /**
         * @param isSensitive Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
         * 
         * @return builder
         * 
         */
        public Builder isSensitive(@Nullable Output<Boolean> isSensitive) {
            $.isSensitive = isSensitive;
            return this;
        }

        /**
         * @param isSensitive Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
         * 
         * @return builder
         * 
         */
        public Builder isSensitive(Boolean isSensitive) {
            return isSensitive(Output.of(isSensitive));
        }

        /**
         * @param parent columnsInfo object has details of column group with schema details.
         * 
         * @return builder
         * 
         */
        public Builder parent(Output<SensitiveDataModelReferentialRelationParentArgs> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent columnsInfo object has details of column group with schema details.
         * 
         * @return builder
         * 
         */
        public Builder parent(SensitiveDataModelReferentialRelationParentArgs parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param relationType The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
         * 
         * @return builder
         * 
         */
        public Builder relationType(Output<String> relationType) {
            $.relationType = relationType;
            return this;
        }

        /**
         * @param relationType The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
         * 
         * @return builder
         * 
         */
        public Builder relationType(String relationType) {
            return relationType(Output.of(relationType));
        }

        /**
         * @param sensitiveDataModelId The OCID of the sensitive data model.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder sensitiveDataModelId(Output<String> sensitiveDataModelId) {
            $.sensitiveDataModelId = sensitiveDataModelId;
            return this;
        }

        /**
         * @param sensitiveDataModelId The OCID of the sensitive data model.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder sensitiveDataModelId(String sensitiveDataModelId) {
            return sensitiveDataModelId(Output.of(sensitiveDataModelId));
        }

        public SensitiveDataModelReferentialRelationArgs build() {
            if ($.child == null) {
                throw new MissingRequiredPropertyException("SensitiveDataModelReferentialRelationArgs", "child");
            }
            if ($.parent == null) {
                throw new MissingRequiredPropertyException("SensitiveDataModelReferentialRelationArgs", "parent");
            }
            if ($.relationType == null) {
                throw new MissingRequiredPropertyException("SensitiveDataModelReferentialRelationArgs", "relationType");
            }
            if ($.sensitiveDataModelId == null) {
                throw new MissingRequiredPropertyException("SensitiveDataModelReferentialRelationArgs", "sensitiveDataModelId");
            }
            return $;
        }
    }

}
