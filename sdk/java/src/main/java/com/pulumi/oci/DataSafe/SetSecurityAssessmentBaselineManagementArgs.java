// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SetSecurityAssessmentBaselineManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final SetSecurityAssessmentBaselineManagementArgs Empty = new SetSecurityAssessmentBaselineManagementArgs();

    /**
     * The compartment OCID of the target.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The compartment OCID of the target.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The target OCID for which SA needs to be set as baseline.
     * 
     */
    @Import(name="targetId", required=true)
    private Output<String> targetId;

    /**
     * @return The target OCID for which SA needs to be set as baseline.
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }

    private SetSecurityAssessmentBaselineManagementArgs() {}

    private SetSecurityAssessmentBaselineManagementArgs(SetSecurityAssessmentBaselineManagementArgs $) {
        this.compartmentId = $.compartmentId;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SetSecurityAssessmentBaselineManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SetSecurityAssessmentBaselineManagementArgs $;

        public Builder() {
            $ = new SetSecurityAssessmentBaselineManagementArgs();
        }

        public Builder(SetSecurityAssessmentBaselineManagementArgs defaults) {
            $ = new SetSecurityAssessmentBaselineManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartment OCID of the target.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment OCID of the target.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param targetId The target OCID for which SA needs to be set as baseline.
         * 
         * @return builder
         * 
         */
        public Builder targetId(Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The target OCID for which SA needs to be set as baseline.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public SetSecurityAssessmentBaselineManagementArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("SetSecurityAssessmentBaselineManagementArgs", "compartmentId");
            }
            if ($.targetId == null) {
                throw new MissingRequiredPropertyException("SetSecurityAssessmentBaselineManagementArgs", "targetId");
            }
            return $;
        }
    }

}
