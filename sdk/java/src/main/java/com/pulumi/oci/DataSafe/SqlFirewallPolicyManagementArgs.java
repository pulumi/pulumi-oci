// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlFirewallPolicyManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlFirewallPolicyManagementArgs Empty = new SqlFirewallPolicyManagementArgs();

    /**
     * (Updatable) List of allowed ip addresses for the SQL Firewall policy.
     * 
     */
    @Import(name="allowedClientIps")
    private @Nullable Output<List<String>> allowedClientIps;

    /**
     * @return (Updatable) List of allowed ip addresses for the SQL Firewall policy.
     * 
     */
    public Optional<Output<List<String>>> allowedClientIps() {
        return Optional.ofNullable(this.allowedClientIps);
    }

    /**
     * (Updatable) List of allowed operating system user names for the SQL Firewall policy.
     * 
     */
    @Import(name="allowedClientOsUsernames")
    private @Nullable Output<List<String>> allowedClientOsUsernames;

    /**
     * @return (Updatable) List of allowed operating system user names for the SQL Firewall policy.
     * 
     */
    public Optional<Output<List<String>>> allowedClientOsUsernames() {
        return Optional.ofNullable(this.allowedClientOsUsernames);
    }

    /**
     * (Updatable) List of allowed client programs for the SQL Firewall policy.
     * 
     */
    @Import(name="allowedClientPrograms")
    private @Nullable Output<List<String>> allowedClientPrograms;

    /**
     * @return (Updatable) List of allowed client programs for the SQL Firewall policy.
     * 
     */
    public Optional<Output<List<String>>> allowedClientPrograms() {
        return Optional.ofNullable(this.allowedClientPrograms);
    }

    /**
     * (Updatable) The OCID of the compartment containing the SQL collection.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment containing the SQL collection.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The database user name.
     * 
     */
    @Import(name="dbUserName")
    private @Nullable Output<String> dbUserName;

    /**
     * @return The database user name.
     * 
     */
    public Optional<Output<String>> dbUserName() {
        return Optional.ofNullable(this.dbUserName);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description of the SQL Firewall policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the SQL Firewall policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the SQL Firewall policy. The name does not have to be unique, and it is changeable.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the SQL Firewall policy. The name does not have to be unique, and it is changeable.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Specifies the SQL Firewall policy enforcement option.
     * 
     */
    @Import(name="enforcementScope")
    private @Nullable Output<String> enforcementScope;

    /**
     * @return (Updatable) Specifies the SQL Firewall policy enforcement option.
     * 
     */
    public Optional<Output<String>> enforcementScope() {
        return Optional.ofNullable(this.enforcementScope);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The OCID of the SQL firewall policy resource.
     * 
     */
    @Import(name="sqlFirewallPolicyId")
    private @Nullable Output<String> sqlFirewallPolicyId;

    /**
     * @return The OCID of the SQL firewall policy resource.
     * 
     */
    public Optional<Output<String>> sqlFirewallPolicyId() {
        return Optional.ofNullable(this.sqlFirewallPolicyId);
    }

    /**
     * The current state of the SQL firewall policy.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the SQL firewall policy.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) Specifies whether the SQL firewall policy is enabled or disabled.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Specifies whether the SQL firewall policy is enabled or disabled.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Unique target identifier.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return Unique target identifier.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * (Updatable) Specifies the SQL firewall action based on detection of SQL firewall violations.
     * 
     */
    @Import(name="violationAction")
    private @Nullable Output<String> violationAction;

    /**
     * @return (Updatable) Specifies the SQL firewall action based on detection of SQL firewall violations.
     * 
     */
    public Optional<Output<String>> violationAction() {
        return Optional.ofNullable(this.violationAction);
    }

    /**
     * (Updatable) Specifies whether a unified audit policy should be enabled for auditing the SQL firewall policy violations.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="violationAudit")
    private @Nullable Output<String> violationAudit;

    /**
     * @return (Updatable) Specifies whether a unified audit policy should be enabled for auditing the SQL firewall policy violations.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> violationAudit() {
        return Optional.ofNullable(this.violationAudit);
    }

    private SqlFirewallPolicyManagementArgs() {}

    private SqlFirewallPolicyManagementArgs(SqlFirewallPolicyManagementArgs $) {
        this.allowedClientIps = $.allowedClientIps;
        this.allowedClientOsUsernames = $.allowedClientOsUsernames;
        this.allowedClientPrograms = $.allowedClientPrograms;
        this.compartmentId = $.compartmentId;
        this.dbUserName = $.dbUserName;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.enforcementScope = $.enforcementScope;
        this.freeformTags = $.freeformTags;
        this.sqlFirewallPolicyId = $.sqlFirewallPolicyId;
        this.state = $.state;
        this.status = $.status;
        this.targetId = $.targetId;
        this.violationAction = $.violationAction;
        this.violationAudit = $.violationAudit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlFirewallPolicyManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlFirewallPolicyManagementArgs $;

        public Builder() {
            $ = new SqlFirewallPolicyManagementArgs();
        }

        public Builder(SqlFirewallPolicyManagementArgs defaults) {
            $ = new SqlFirewallPolicyManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedClientIps (Updatable) List of allowed ip addresses for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientIps(@Nullable Output<List<String>> allowedClientIps) {
            $.allowedClientIps = allowedClientIps;
            return this;
        }

        /**
         * @param allowedClientIps (Updatable) List of allowed ip addresses for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientIps(List<String> allowedClientIps) {
            return allowedClientIps(Output.of(allowedClientIps));
        }

        /**
         * @param allowedClientIps (Updatable) List of allowed ip addresses for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientIps(String... allowedClientIps) {
            return allowedClientIps(List.of(allowedClientIps));
        }

        /**
         * @param allowedClientOsUsernames (Updatable) List of allowed operating system user names for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientOsUsernames(@Nullable Output<List<String>> allowedClientOsUsernames) {
            $.allowedClientOsUsernames = allowedClientOsUsernames;
            return this;
        }

        /**
         * @param allowedClientOsUsernames (Updatable) List of allowed operating system user names for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientOsUsernames(List<String> allowedClientOsUsernames) {
            return allowedClientOsUsernames(Output.of(allowedClientOsUsernames));
        }

        /**
         * @param allowedClientOsUsernames (Updatable) List of allowed operating system user names for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientOsUsernames(String... allowedClientOsUsernames) {
            return allowedClientOsUsernames(List.of(allowedClientOsUsernames));
        }

        /**
         * @param allowedClientPrograms (Updatable) List of allowed client programs for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientPrograms(@Nullable Output<List<String>> allowedClientPrograms) {
            $.allowedClientPrograms = allowedClientPrograms;
            return this;
        }

        /**
         * @param allowedClientPrograms (Updatable) List of allowed client programs for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientPrograms(List<String> allowedClientPrograms) {
            return allowedClientPrograms(Output.of(allowedClientPrograms));
        }

        /**
         * @param allowedClientPrograms (Updatable) List of allowed client programs for the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientPrograms(String... allowedClientPrograms) {
            return allowedClientPrograms(List.of(allowedClientPrograms));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment containing the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment containing the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dbUserName The database user name.
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(@Nullable Output<String> dbUserName) {
            $.dbUserName = dbUserName;
            return this;
        }

        /**
         * @param dbUserName The database user name.
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(String dbUserName) {
            return dbUserName(Output.of(dbUserName));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description of the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the SQL Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the SQL Firewall policy. The name does not have to be unique, and it is changeable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the SQL Firewall policy. The name does not have to be unique, and it is changeable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enforcementScope (Updatable) Specifies the SQL Firewall policy enforcement option.
         * 
         * @return builder
         * 
         */
        public Builder enforcementScope(@Nullable Output<String> enforcementScope) {
            $.enforcementScope = enforcementScope;
            return this;
        }

        /**
         * @param enforcementScope (Updatable) Specifies the SQL Firewall policy enforcement option.
         * 
         * @return builder
         * 
         */
        public Builder enforcementScope(String enforcementScope) {
            return enforcementScope(Output.of(enforcementScope));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param sqlFirewallPolicyId The OCID of the SQL firewall policy resource.
         * 
         * @return builder
         * 
         */
        public Builder sqlFirewallPolicyId(@Nullable Output<String> sqlFirewallPolicyId) {
            $.sqlFirewallPolicyId = sqlFirewallPolicyId;
            return this;
        }

        /**
         * @param sqlFirewallPolicyId The OCID of the SQL firewall policy resource.
         * 
         * @return builder
         * 
         */
        public Builder sqlFirewallPolicyId(String sqlFirewallPolicyId) {
            return sqlFirewallPolicyId(Output.of(sqlFirewallPolicyId));
        }

        /**
         * @param state The current state of the SQL firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the SQL firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status (Updatable) Specifies whether the SQL firewall policy is enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Specifies whether the SQL firewall policy is enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param targetId Unique target identifier.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId Unique target identifier.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param violationAction (Updatable) Specifies the SQL firewall action based on detection of SQL firewall violations.
         * 
         * @return builder
         * 
         */
        public Builder violationAction(@Nullable Output<String> violationAction) {
            $.violationAction = violationAction;
            return this;
        }

        /**
         * @param violationAction (Updatable) Specifies the SQL firewall action based on detection of SQL firewall violations.
         * 
         * @return builder
         * 
         */
        public Builder violationAction(String violationAction) {
            return violationAction(Output.of(violationAction));
        }

        /**
         * @param violationAudit (Updatable) Specifies whether a unified audit policy should be enabled for auditing the SQL firewall policy violations.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder violationAudit(@Nullable Output<String> violationAudit) {
            $.violationAudit = violationAudit;
            return this;
        }

        /**
         * @param violationAudit (Updatable) Specifies whether a unified audit policy should be enabled for auditing the SQL firewall policy violations.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder violationAudit(String violationAudit) {
            return violationAudit(Output.of(violationAudit));
        }

        public SqlFirewallPolicyManagementArgs build() {
            return $;
        }
    }

}
