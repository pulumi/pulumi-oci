// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UnsetUserAssessmentBaselineManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final UnsetUserAssessmentBaselineManagementArgs Empty = new UnsetUserAssessmentBaselineManagementArgs();

    /**
     * The compartment OCID where the assessment resides.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The compartment OCID where the assessment resides.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The OCID of the user assessment.
     * 
     */
    @Import(name="userAssessmentId", required=true)
    private Output<String> userAssessmentId;

    /**
     * @return The OCID of the user assessment.
     * 
     */
    public Output<String> userAssessmentId() {
        return this.userAssessmentId;
    }

    private UnsetUserAssessmentBaselineManagementArgs() {}

    private UnsetUserAssessmentBaselineManagementArgs(UnsetUserAssessmentBaselineManagementArgs $) {
        this.compartmentId = $.compartmentId;
        this.userAssessmentId = $.userAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UnsetUserAssessmentBaselineManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UnsetUserAssessmentBaselineManagementArgs $;

        public Builder() {
            $ = new UnsetUserAssessmentBaselineManagementArgs();
        }

        public Builder(UnsetUserAssessmentBaselineManagementArgs defaults) {
            $ = new UnsetUserAssessmentBaselineManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartment OCID where the assessment resides.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment OCID where the assessment resides.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param userAssessmentId The OCID of the user assessment.
         * 
         * @return builder
         * 
         */
        public Builder userAssessmentId(Output<String> userAssessmentId) {
            $.userAssessmentId = userAssessmentId;
            return this;
        }

        /**
         * @param userAssessmentId The OCID of the user assessment.
         * 
         * @return builder
         * 
         */
        public Builder userAssessmentId(String userAssessmentId) {
            return userAssessmentId(Output.of(userAssessmentId));
        }

        public UnsetUserAssessmentBaselineManagementArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("UnsetUserAssessmentBaselineManagementArgs", "compartmentId");
            }
            if ($.userAssessmentId == null) {
                throw new MissingRequiredPropertyException("UnsetUserAssessmentBaselineManagementArgs", "userAssessmentId");
            }
            return $;
        }
    }

}
