// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertPolicyRuleState extends com.pulumi.resources.ResourceArgs {

    public static final AlertPolicyRuleState Empty = new AlertPolicyRuleState();

    /**
     * The OCID of the alert policy.
     * 
     */
    @Import(name="alertPolicyId")
    private @Nullable Output<String> alertPolicyId;

    /**
     * @return The OCID of the alert policy.
     * 
     */
    public Optional<Output<String>> alertPolicyId() {
        return Optional.ofNullable(this.alertPolicyId);
    }

    /**
     * (Updatable) Describes the alert policy rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Describes the alert policy rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the alert policy rule.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the alert policy rule.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) The conditional expression of the alert policy rule which evaluates to boolean value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="expression")
    private @Nullable Output<String> expression;

    /**
     * @return (Updatable) The conditional expression of the alert policy rule which evaluates to boolean value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    /**
     * The unique key of the alert policy rule.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return The unique key of the alert policy rule.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The current state of the alert policy rule.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the alert policy rule.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Creation date and time of the alert policy rule, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return Creation date and time of the alert policy rule, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    private AlertPolicyRuleState() {}

    private AlertPolicyRuleState(AlertPolicyRuleState $) {
        this.alertPolicyId = $.alertPolicyId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.expression = $.expression;
        this.key = $.key;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPolicyRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPolicyRuleState $;

        public Builder() {
            $ = new AlertPolicyRuleState();
        }

        public Builder(AlertPolicyRuleState defaults) {
            $ = new AlertPolicyRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alertPolicyId The OCID of the alert policy.
         * 
         * @return builder
         * 
         */
        public Builder alertPolicyId(@Nullable Output<String> alertPolicyId) {
            $.alertPolicyId = alertPolicyId;
            return this;
        }

        /**
         * @param alertPolicyId The OCID of the alert policy.
         * 
         * @return builder
         * 
         */
        public Builder alertPolicyId(String alertPolicyId) {
            return alertPolicyId(Output.of(alertPolicyId));
        }

        /**
         * @param description (Updatable) Describes the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Describes the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param expression (Updatable) The conditional expression of the alert policy rule which evaluates to boolean value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression (Updatable) The conditional expression of the alert policy rule which evaluates to boolean value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param key The unique key of the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The unique key of the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param state The current state of the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the alert policy rule.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated Creation date and time of the alert policy rule, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Creation date and time of the alert policy rule, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        public AlertPolicyRuleState build() {
            return $;
        }
    }

}
