// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.AuditPolicyManagementAuditConditionEnableConditionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditPolicyManagementAuditConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditPolicyManagementAuditConditionArgs Empty = new AuditPolicyManagementAuditConditionArgs();

    /**
     * Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    @Import(name="auditPolicyName")
    private @Nullable Output<String> auditPolicyName;

    /**
     * @return Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    public Optional<Output<String>> auditPolicyName() {
        return Optional.ofNullable(this.auditPolicyName);
    }

    /**
     * Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
     * 
     */
    @Import(name="enableConditions")
    private @Nullable Output<List<AuditPolicyManagementAuditConditionEnableConditionArgs>> enableConditions;

    /**
     * @return Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
     * 
     */
    public Optional<Output<List<AuditPolicyManagementAuditConditionEnableConditionArgs>>> enableConditions() {
        return Optional.ofNullable(this.enableConditions);
    }

    /**
     * Indicates whether the Data Safe user activity on the target database will be audited by the policy.
     * 
     */
    @Import(name="isDataSafeServiceAccountAudited")
    private @Nullable Output<Boolean> isDataSafeServiceAccountAudited;

    /**
     * @return Indicates whether the Data Safe user activity on the target database will be audited by the policy.
     * 
     */
    public Optional<Output<Boolean>> isDataSafeServiceAccountAudited() {
        return Optional.ofNullable(this.isDataSafeServiceAccountAudited);
    }

    /**
     * Indicates whether the policy has to be enabled or disabled in the target database. Set this to true if you want the audit policy to be enabled in the target database. If the seeded audit policy is not already created in the database, the provisioning creates and enables them. If this is set to false, the policy will be disabled in the target database.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    /**
     * @return Indicates whether the policy has to be enabled or disabled in the target database. Set this to true if you want the audit policy to be enabled in the target database. If the seeded audit policy is not already created in the database, the provisioning creates and enables them. If this is set to false, the policy will be disabled in the target database.
     * 
     */
    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * Indicates whether the privileged user list is managed by Data Safe.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="isPrivUsersManagedByDataSafe")
    private @Nullable Output<Boolean> isPrivUsersManagedByDataSafe;

    /**
     * @return Indicates whether the privileged user list is managed by Data Safe.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> isPrivUsersManagedByDataSafe() {
        return Optional.ofNullable(this.isPrivUsersManagedByDataSafe);
    }

    private AuditPolicyManagementAuditConditionArgs() {}

    private AuditPolicyManagementAuditConditionArgs(AuditPolicyManagementAuditConditionArgs $) {
        this.auditPolicyName = $.auditPolicyName;
        this.enableConditions = $.enableConditions;
        this.isDataSafeServiceAccountAudited = $.isDataSafeServiceAccountAudited;
        this.isEnabled = $.isEnabled;
        this.isPrivUsersManagedByDataSafe = $.isPrivUsersManagedByDataSafe;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditPolicyManagementAuditConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditPolicyManagementAuditConditionArgs $;

        public Builder() {
            $ = new AuditPolicyManagementAuditConditionArgs();
        }

        public Builder(AuditPolicyManagementAuditConditionArgs defaults) {
            $ = new AuditPolicyManagementAuditConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditPolicyName Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         * 
         * @return builder
         * 
         */
        public Builder auditPolicyName(@Nullable Output<String> auditPolicyName) {
            $.auditPolicyName = auditPolicyName;
            return this;
        }

        /**
         * @param auditPolicyName Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
         * 
         * @return builder
         * 
         */
        public Builder auditPolicyName(String auditPolicyName) {
            return auditPolicyName(Output.of(auditPolicyName));
        }

        /**
         * @param enableConditions Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
         * 
         * @return builder
         * 
         */
        public Builder enableConditions(@Nullable Output<List<AuditPolicyManagementAuditConditionEnableConditionArgs>> enableConditions) {
            $.enableConditions = enableConditions;
            return this;
        }

        /**
         * @param enableConditions Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
         * 
         * @return builder
         * 
         */
        public Builder enableConditions(List<AuditPolicyManagementAuditConditionEnableConditionArgs> enableConditions) {
            return enableConditions(Output.of(enableConditions));
        }

        /**
         * @param enableConditions Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
         * 
         * @return builder
         * 
         */
        public Builder enableConditions(AuditPolicyManagementAuditConditionEnableConditionArgs... enableConditions) {
            return enableConditions(List.of(enableConditions));
        }

        /**
         * @param isDataSafeServiceAccountAudited Indicates whether the Data Safe user activity on the target database will be audited by the policy.
         * 
         * @return builder
         * 
         */
        public Builder isDataSafeServiceAccountAudited(@Nullable Output<Boolean> isDataSafeServiceAccountAudited) {
            $.isDataSafeServiceAccountAudited = isDataSafeServiceAccountAudited;
            return this;
        }

        /**
         * @param isDataSafeServiceAccountAudited Indicates whether the Data Safe user activity on the target database will be audited by the policy.
         * 
         * @return builder
         * 
         */
        public Builder isDataSafeServiceAccountAudited(Boolean isDataSafeServiceAccountAudited) {
            return isDataSafeServiceAccountAudited(Output.of(isDataSafeServiceAccountAudited));
        }

        /**
         * @param isEnabled Indicates whether the policy has to be enabled or disabled in the target database. Set this to true if you want the audit policy to be enabled in the target database. If the seeded audit policy is not already created in the database, the provisioning creates and enables them. If this is set to false, the policy will be disabled in the target database.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Indicates whether the policy has to be enabled or disabled in the target database. Set this to true if you want the audit policy to be enabled in the target database. If the seeded audit policy is not already created in the database, the provisioning creates and enables them. If this is set to false, the policy will be disabled in the target database.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param isPrivUsersManagedByDataSafe Indicates whether the privileged user list is managed by Data Safe.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder isPrivUsersManagedByDataSafe(@Nullable Output<Boolean> isPrivUsersManagedByDataSafe) {
            $.isPrivUsersManagedByDataSafe = isPrivUsersManagedByDataSafe;
            return this;
        }

        /**
         * @param isPrivUsersManagedByDataSafe Indicates whether the privileged user list is managed by Data Safe.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder isPrivUsersManagedByDataSafe(Boolean isPrivUsersManagedByDataSafe) {
            return isPrivUsersManagedByDataSafe(Output.of(isPrivUsersManagedByDataSafe));
        }

        public AuditPolicyManagementAuditConditionArgs build() {
            return $;
        }
    }

}
