// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditTrailManagementState extends com.pulumi.resources.ResourceArgs {

    public static final AuditTrailManagementState Empty = new AuditTrailManagementState();

    /**
     * The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="auditCollectionStartTime")
    private @Nullable Output<String> auditCollectionStartTime;

    /**
     * @return The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> auditCollectionStartTime() {
        return Optional.ofNullable(this.auditCollectionStartTime);
    }

    /**
     * The OCID of the  parent audit.
     * 
     */
    @Import(name="auditProfileId")
    private @Nullable Output<String> auditProfileId;

    /**
     * @return The OCID of the  parent audit.
     * 
     */
    public Optional<Output<String>> auditProfileId() {
        return Optional.ofNullable(this.auditProfileId);
    }

    /**
     * (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
     * 
     */
    @Import(name="canUpdateLastArchiveTimeOnTarget")
    private @Nullable Output<Boolean> canUpdateLastArchiveTimeOnTarget;

    /**
     * @return (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
     * 
     */
    public Optional<Output<Boolean>> canUpdateLastArchiveTimeOnTarget() {
        return Optional.ofNullable(this.canUpdateLastArchiveTimeOnTarget);
    }

    /**
     * The OCID of the compartment that contains the target.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment that contains the target.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description of the audit trail.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the audit trail.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
     * 
     */
    @Import(name="isAutoPurgeEnabled")
    private @Nullable Output<Boolean> isAutoPurgeEnabled;

    /**
     * @return (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
     * 
     */
    public Optional<Output<Boolean>> isAutoPurgeEnabled() {
        return Optional.ofNullable(this.isAutoPurgeEnabled);
    }

    /**
     * Details about the current state of the audit trail in Data Safe.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Details about the current state of the audit trail in Data Safe.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * (Updatable) An optional property when set to true triggers Resume.
     * 
     */
    @Import(name="resumeTrigger")
    private @Nullable Output<Boolean> resumeTrigger;

    /**
     * @return (Updatable) An optional property when set to true triggers Resume.
     * 
     */
    public Optional<Output<Boolean>> resumeTrigger() {
        return Optional.ofNullable(this.resumeTrigger);
    }

    /**
     * (Updatable) An optional property when set to true triggers Start.
     * 
     */
    @Import(name="startTrigger")
    private @Nullable Output<Boolean> startTrigger;

    /**
     * @return (Updatable) An optional property when set to true triggers Start.
     * 
     */
    public Optional<Output<Boolean>> startTrigger() {
        return Optional.ofNullable(this.startTrigger);
    }

    /**
     * (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The current sub-state of the audit trail.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current sub-state of the audit trail.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * (Updatable) An optional property when set to true triggers Stop.
     * 
     */
    @Import(name="stopTrigger")
    private @Nullable Output<Boolean> stopTrigger;

    /**
     * @return (Updatable) An optional property when set to true triggers Stop.
     * 
     */
    public Optional<Output<Boolean>> stopTrigger() {
        return Optional.ofNullable(this.stopTrigger);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The OCID of the target.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The OCID of the target.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * The date and time the audit trail was created, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the audit trail was created, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeLastCollected")
    private @Nullable Output<String> timeLastCollected;

    /**
     * @return The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeLastCollected() {
        return Optional.ofNullable(this.timeLastCollected);
    }

    /**
     * The date and time the audit trail was updated, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the audit trail was updated, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
     * 
     */
    @Import(name="trailLocation")
    private @Nullable Output<String> trailLocation;

    /**
     * @return An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
     * 
     */
    public Optional<Output<String>> trailLocation() {
        return Optional.ofNullable(this.trailLocation);
    }

    /**
     * The OCID of the workrequest for audit trail which collects audit records.
     * 
     */
    @Import(name="workRequestId")
    private @Nullable Output<String> workRequestId;

    /**
     * @return The OCID of the workrequest for audit trail which collects audit records.
     * 
     */
    public Optional<Output<String>> workRequestId() {
        return Optional.ofNullable(this.workRequestId);
    }

    private AuditTrailManagementState() {}

    private AuditTrailManagementState(AuditTrailManagementState $) {
        this.auditCollectionStartTime = $.auditCollectionStartTime;
        this.auditProfileId = $.auditProfileId;
        this.canUpdateLastArchiveTimeOnTarget = $.canUpdateLastArchiveTimeOnTarget;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isAutoPurgeEnabled = $.isAutoPurgeEnabled;
        this.lifecycleDetails = $.lifecycleDetails;
        this.resumeTrigger = $.resumeTrigger;
        this.startTrigger = $.startTrigger;
        this.state = $.state;
        this.status = $.status;
        this.stopTrigger = $.stopTrigger;
        this.systemTags = $.systemTags;
        this.targetId = $.targetId;
        this.timeCreated = $.timeCreated;
        this.timeLastCollected = $.timeLastCollected;
        this.timeUpdated = $.timeUpdated;
        this.trailLocation = $.trailLocation;
        this.workRequestId = $.workRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditTrailManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditTrailManagementState $;

        public Builder() {
            $ = new AuditTrailManagementState();
        }

        public Builder(AuditTrailManagementState defaults) {
            $ = new AuditTrailManagementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditCollectionStartTime The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder auditCollectionStartTime(@Nullable Output<String> auditCollectionStartTime) {
            $.auditCollectionStartTime = auditCollectionStartTime;
            return this;
        }

        /**
         * @param auditCollectionStartTime The date from which the audit trail must start collecting data, in the format defined by RFC3339. It is a required field when start_trigger is set.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder auditCollectionStartTime(String auditCollectionStartTime) {
            return auditCollectionStartTime(Output.of(auditCollectionStartTime));
        }

        /**
         * @param auditProfileId The OCID of the  parent audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(@Nullable Output<String> auditProfileId) {
            $.auditProfileId = auditProfileId;
            return this;
        }

        /**
         * @param auditProfileId The OCID of the  parent audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(String auditProfileId) {
            return auditProfileId(Output.of(auditProfileId));
        }

        /**
         * @param canUpdateLastArchiveTimeOnTarget (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
         * 
         * @return builder
         * 
         */
        public Builder canUpdateLastArchiveTimeOnTarget(@Nullable Output<Boolean> canUpdateLastArchiveTimeOnTarget) {
            $.canUpdateLastArchiveTimeOnTarget = canUpdateLastArchiveTimeOnTarget;
            return this;
        }

        /**
         * @param canUpdateLastArchiveTimeOnTarget (Updatable) Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field is enabled, this field must be true.
         * 
         * @return builder
         * 
         */
        public Builder canUpdateLastArchiveTimeOnTarget(Boolean canUpdateLastArchiveTimeOnTarget) {
            return canUpdateLastArchiveTimeOnTarget(Output.of(canUpdateLastArchiveTimeOnTarget));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the target.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the target.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description of the audit trail.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the audit trail.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the audit trail. The name does not have to be unique, and it&#39;s updatable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAutoPurgeEnabled (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
         * 
         * @return builder
         * 
         */
        public Builder isAutoPurgeEnabled(@Nullable Output<Boolean> isAutoPurgeEnabled) {
            $.isAutoPurgeEnabled = isAutoPurgeEnabled;
            return this;
        }

        /**
         * @param isAutoPurgeEnabled (Updatable) Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
         * 
         * @return builder
         * 
         */
        public Builder isAutoPurgeEnabled(Boolean isAutoPurgeEnabled) {
            return isAutoPurgeEnabled(Output.of(isAutoPurgeEnabled));
        }

        /**
         * @param lifecycleDetails Details about the current state of the audit trail in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Details about the current state of the audit trail in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param resumeTrigger (Updatable) An optional property when set to true triggers Resume.
         * 
         * @return builder
         * 
         */
        public Builder resumeTrigger(@Nullable Output<Boolean> resumeTrigger) {
            $.resumeTrigger = resumeTrigger;
            return this;
        }

        /**
         * @param resumeTrigger (Updatable) An optional property when set to true triggers Resume.
         * 
         * @return builder
         * 
         */
        public Builder resumeTrigger(Boolean resumeTrigger) {
            return resumeTrigger(Output.of(resumeTrigger));
        }

        /**
         * @param startTrigger (Updatable) An optional property when set to true triggers Start.
         * 
         * @return builder
         * 
         */
        public Builder startTrigger(@Nullable Output<Boolean> startTrigger) {
            $.startTrigger = startTrigger;
            return this;
        }

        /**
         * @param startTrigger (Updatable) An optional property when set to true triggers Start.
         * 
         * @return builder
         * 
         */
        public Builder startTrigger(Boolean startTrigger) {
            return startTrigger(Output.of(startTrigger));
        }

        /**
         * @param state (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the Audit Trail Management. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status The current sub-state of the audit trail.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current sub-state of the audit trail.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param stopTrigger (Updatable) An optional property when set to true triggers Stop.
         * 
         * @return builder
         * 
         */
        public Builder stopTrigger(@Nullable Output<Boolean> stopTrigger) {
            $.stopTrigger = stopTrigger;
            return this;
        }

        /**
         * @param stopTrigger (Updatable) An optional property when set to true triggers Stop.
         * 
         * @return builder
         * 
         */
        public Builder stopTrigger(Boolean stopTrigger) {
            return stopTrigger(Output.of(stopTrigger));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param targetId The OCID of the target.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The OCID of the target.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param timeCreated The date and time the audit trail was created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the audit trail was created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeLastCollected The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeLastCollected(@Nullable Output<String> timeLastCollected) {
            $.timeLastCollected = timeLastCollected;
            return this;
        }

        /**
         * @param timeLastCollected The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeLastCollected(String timeLastCollected) {
            return timeLastCollected(Output.of(timeLastCollected));
        }

        /**
         * @param timeUpdated The date and time the audit trail was updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the audit trail was updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param trailLocation An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         * 
         * @return builder
         * 
         */
        public Builder trailLocation(@Nullable Output<String> trailLocation) {
            $.trailLocation = trailLocation;
            return this;
        }

        /**
         * @param trailLocation An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
         * 
         * @return builder
         * 
         */
        public Builder trailLocation(String trailLocation) {
            return trailLocation(Output.of(trailLocation));
        }

        /**
         * @param workRequestId The OCID of the workrequest for audit trail which collects audit records.
         * 
         * @return builder
         * 
         */
        public Builder workRequestId(@Nullable Output<String> workRequestId) {
            $.workRequestId = workRequestId;
            return this;
        }

        /**
         * @param workRequestId The OCID of the workrequest for audit trail which collects audit records.
         * 
         * @return builder
         * 
         */
        public Builder workRequestId(String workRequestId) {
            return workRequestId(Output.of(workRequestId));
        }

        public AuditTrailManagementState build() {
            return $;
        }
    }

}
