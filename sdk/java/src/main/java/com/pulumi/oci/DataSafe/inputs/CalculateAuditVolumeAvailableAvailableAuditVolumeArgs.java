// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CalculateAuditVolumeAvailableAvailableAuditVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final CalculateAuditVolumeAvailableAvailableAuditVolumeArgs Empty = new CalculateAuditVolumeAvailableAvailableAuditVolumeArgs();

    /**
     * The OCID of the audit.
     * 
     */
    @Import(name="auditProfileId")
    private @Nullable Output<String> auditProfileId;

    /**
     * @return The OCID of the audit.
     * 
     */
    public Optional<Output<String>> auditProfileId() {
        return Optional.ofNullable(this.auditProfileId);
    }

    @Import(name="monthInConsideration")
    private @Nullable Output<String> monthInConsideration;

    public Optional<Output<String>> monthInConsideration() {
        return Optional.ofNullable(this.monthInConsideration);
    }

    @Import(name="trailLocation")
    private @Nullable Output<String> trailLocation;

    public Optional<Output<String>> trailLocation() {
        return Optional.ofNullable(this.trailLocation);
    }

    @Import(name="volume")
    private @Nullable Output<String> volume;

    public Optional<Output<String>> volume() {
        return Optional.ofNullable(this.volume);
    }

    private CalculateAuditVolumeAvailableAvailableAuditVolumeArgs() {}

    private CalculateAuditVolumeAvailableAvailableAuditVolumeArgs(CalculateAuditVolumeAvailableAvailableAuditVolumeArgs $) {
        this.auditProfileId = $.auditProfileId;
        this.monthInConsideration = $.monthInConsideration;
        this.trailLocation = $.trailLocation;
        this.volume = $.volume;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CalculateAuditVolumeAvailableAvailableAuditVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CalculateAuditVolumeAvailableAvailableAuditVolumeArgs $;

        public Builder() {
            $ = new CalculateAuditVolumeAvailableAvailableAuditVolumeArgs();
        }

        public Builder(CalculateAuditVolumeAvailableAvailableAuditVolumeArgs defaults) {
            $ = new CalculateAuditVolumeAvailableAvailableAuditVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditProfileId The OCID of the audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(@Nullable Output<String> auditProfileId) {
            $.auditProfileId = auditProfileId;
            return this;
        }

        /**
         * @param auditProfileId The OCID of the audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(String auditProfileId) {
            return auditProfileId(Output.of(auditProfileId));
        }

        public Builder monthInConsideration(@Nullable Output<String> monthInConsideration) {
            $.monthInConsideration = monthInConsideration;
            return this;
        }

        public Builder monthInConsideration(String monthInConsideration) {
            return monthInConsideration(Output.of(monthInConsideration));
        }

        public Builder trailLocation(@Nullable Output<String> trailLocation) {
            $.trailLocation = trailLocation;
            return this;
        }

        public Builder trailLocation(String trailLocation) {
            return trailLocation(Output.of(trailLocation));
        }

        public Builder volume(@Nullable Output<String> volume) {
            $.volume = volume;
            return this;
        }

        public Builder volume(String volume) {
            return volume(Output.of(volume));
        }

        public CalculateAuditVolumeAvailableAvailableAuditVolumeArgs build() {
            return $;
        }
    }

}
