// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.CalculateAuditVolumeCollectedCollectedAuditVolumeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CalculateAuditVolumeCollectedState extends com.pulumi.resources.ResourceArgs {

    public static final CalculateAuditVolumeCollectedState Empty = new CalculateAuditVolumeCollectedState();

    /**
     * The OCID of the audit.
     * 
     */
    @Import(name="auditProfileId")
    private @Nullable Output<String> auditProfileId;

    /**
     * @return The OCID of the audit.
     * 
     */
    public Optional<Output<String>> auditProfileId() {
        return Optional.ofNullable(this.auditProfileId);
    }

    /**
     * List of collected audit volumes.
     * 
     */
    @Import(name="collectedAuditVolumes")
    private @Nullable Output<List<CalculateAuditVolumeCollectedCollectedAuditVolumeArgs>> collectedAuditVolumes;

    /**
     * @return List of collected audit volumes.
     * 
     */
    public Optional<Output<List<CalculateAuditVolumeCollectedCollectedAuditVolumeArgs>>> collectedAuditVolumes() {
        return Optional.ofNullable(this.collectedAuditVolumes);
    }

    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeFromMonth")
    private @Nullable Output<String> timeFromMonth;

    /**
     * @return The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeFromMonth() {
        return Optional.ofNullable(this.timeFromMonth);
    }

    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeToMonth")
    private @Nullable Output<String> timeToMonth;

    /**
     * @return The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> timeToMonth() {
        return Optional.ofNullable(this.timeToMonth);
    }

    private CalculateAuditVolumeCollectedState() {}

    private CalculateAuditVolumeCollectedState(CalculateAuditVolumeCollectedState $) {
        this.auditProfileId = $.auditProfileId;
        this.collectedAuditVolumes = $.collectedAuditVolumes;
        this.timeFromMonth = $.timeFromMonth;
        this.timeToMonth = $.timeToMonth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CalculateAuditVolumeCollectedState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CalculateAuditVolumeCollectedState $;

        public Builder() {
            $ = new CalculateAuditVolumeCollectedState();
        }

        public Builder(CalculateAuditVolumeCollectedState defaults) {
            $ = new CalculateAuditVolumeCollectedState(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditProfileId The OCID of the audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(@Nullable Output<String> auditProfileId) {
            $.auditProfileId = auditProfileId;
            return this;
        }

        /**
         * @param auditProfileId The OCID of the audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(String auditProfileId) {
            return auditProfileId(Output.of(auditProfileId));
        }

        /**
         * @param collectedAuditVolumes List of collected audit volumes.
         * 
         * @return builder
         * 
         */
        public Builder collectedAuditVolumes(@Nullable Output<List<CalculateAuditVolumeCollectedCollectedAuditVolumeArgs>> collectedAuditVolumes) {
            $.collectedAuditVolumes = collectedAuditVolumes;
            return this;
        }

        /**
         * @param collectedAuditVolumes List of collected audit volumes.
         * 
         * @return builder
         * 
         */
        public Builder collectedAuditVolumes(List<CalculateAuditVolumeCollectedCollectedAuditVolumeArgs> collectedAuditVolumes) {
            return collectedAuditVolumes(Output.of(collectedAuditVolumes));
        }

        /**
         * @param collectedAuditVolumes List of collected audit volumes.
         * 
         * @return builder
         * 
         */
        public Builder collectedAuditVolumes(CalculateAuditVolumeCollectedCollectedAuditVolumeArgs... collectedAuditVolumes) {
            return collectedAuditVolumes(List.of(collectedAuditVolumes));
        }

        /**
         * @param timeFromMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeFromMonth(@Nullable Output<String> timeFromMonth) {
            $.timeFromMonth = timeFromMonth;
            return this;
        }

        /**
         * @param timeFromMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeFromMonth(String timeFromMonth) {
            return timeFromMonth(Output.of(timeFromMonth));
        }

        /**
         * @param timeToMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeToMonth(@Nullable Output<String> timeToMonth) {
            $.timeToMonth = timeToMonth;
            return this;
        }

        /**
         * @param timeToMonth The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeToMonth(String timeToMonth) {
            return timeToMonth(Output.of(timeToMonth));
        }

        public CalculateAuditVolumeCollectedState build() {
            return $;
        }
    }

}
