// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.DatabaseSecurityConfigManagementSqlFirewallConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseSecurityConfigManagementState extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseSecurityConfigManagementState Empty = new DatabaseSecurityConfigManagementState();

    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    @Import(name="refreshTrigger")
    private @Nullable Output<Boolean> refreshTrigger;

    public Optional<Output<Boolean>> refreshTrigger() {
        return Optional.ofNullable(this.refreshTrigger);
    }

    @Import(name="sqlFirewallConfig")
    private @Nullable Output<DatabaseSecurityConfigManagementSqlFirewallConfigArgs> sqlFirewallConfig;

    public Optional<Output<DatabaseSecurityConfigManagementSqlFirewallConfigArgs>> sqlFirewallConfig() {
        return Optional.ofNullable(this.sqlFirewallConfig);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    @Import(name="timeLastRefreshed")
    private @Nullable Output<String> timeLastRefreshed;

    public Optional<Output<String>> timeLastRefreshed() {
        return Optional.ofNullable(this.timeLastRefreshed);
    }

    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private DatabaseSecurityConfigManagementState() {}

    private DatabaseSecurityConfigManagementState(DatabaseSecurityConfigManagementState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.refreshTrigger = $.refreshTrigger;
        this.sqlFirewallConfig = $.sqlFirewallConfig;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.targetId = $.targetId;
        this.timeCreated = $.timeCreated;
        this.timeLastRefreshed = $.timeLastRefreshed;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseSecurityConfigManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseSecurityConfigManagementState $;

        public Builder() {
            $ = new DatabaseSecurityConfigManagementState();
        }

        public Builder(DatabaseSecurityConfigManagementState defaults) {
            $ = new DatabaseSecurityConfigManagementState(Objects.requireNonNull(defaults));
        }

        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        public Builder refreshTrigger(@Nullable Output<Boolean> refreshTrigger) {
            $.refreshTrigger = refreshTrigger;
            return this;
        }

        public Builder refreshTrigger(Boolean refreshTrigger) {
            return refreshTrigger(Output.of(refreshTrigger));
        }

        public Builder sqlFirewallConfig(@Nullable Output<DatabaseSecurityConfigManagementSqlFirewallConfigArgs> sqlFirewallConfig) {
            $.sqlFirewallConfig = sqlFirewallConfig;
            return this;
        }

        public Builder sqlFirewallConfig(DatabaseSecurityConfigManagementSqlFirewallConfigArgs sqlFirewallConfig) {
            return sqlFirewallConfig(Output.of(sqlFirewallConfig));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        public Builder timeLastRefreshed(@Nullable Output<String> timeLastRefreshed) {
            $.timeLastRefreshed = timeLastRefreshed;
            return this;
        }

        public Builder timeLastRefreshed(String timeLastRefreshed) {
            return timeLastRefreshed(Output.of(timeLastRefreshed));
        }

        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public DatabaseSecurityConfigManagementState build() {
            return $;
        }
    }

}
