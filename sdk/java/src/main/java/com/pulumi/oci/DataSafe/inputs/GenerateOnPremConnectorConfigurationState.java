// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenerateOnPremConnectorConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final GenerateOnPremConnectorConfigurationState Empty = new GenerateOnPremConnectorConfigurationState();

    /**
     * The OCID of the on-premises connector.
     * 
     */
    @Import(name="onPremConnectorId")
    private @Nullable Output<String> onPremConnectorId;

    /**
     * @return The OCID of the on-premises connector.
     * 
     */
    public Optional<Output<String>> onPremConnectorId() {
        return Optional.ofNullable(this.onPremConnectorId);
    }

    /**
     * The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    private GenerateOnPremConnectorConfigurationState() {}

    private GenerateOnPremConnectorConfigurationState(GenerateOnPremConnectorConfigurationState $) {
        this.onPremConnectorId = $.onPremConnectorId;
        this.password = $.password;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenerateOnPremConnectorConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenerateOnPremConnectorConfigurationState $;

        public Builder() {
            $ = new GenerateOnPremConnectorConfigurationState();
        }

        public Builder(GenerateOnPremConnectorConfigurationState defaults) {
            $ = new GenerateOnPremConnectorConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param onPremConnectorId The OCID of the on-premises connector.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorId(@Nullable Output<String> onPremConnectorId) {
            $.onPremConnectorId = onPremConnectorId;
            return this;
        }

        /**
         * @param onPremConnectorId The OCID of the on-premises connector.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorId(String onPremConnectorId) {
            return onPremConnectorId(Output.of(onPremConnectorId));
        }

        /**
         * @param password The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        public GenerateOnPremConnectorConfigurationState build() {
            return $;
        }
    }

}
