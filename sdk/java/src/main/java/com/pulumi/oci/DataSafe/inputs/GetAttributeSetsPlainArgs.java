// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.GetAttributeSetsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAttributeSetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAttributeSetsPlainArgs Empty = new GetAttributeSetsPlainArgs();

    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    @Import(name="accessLevel")
    private @Nullable String accessLevel;

    /**
     * @return Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }

    /**
     * A filter to return only attribute set resources that matches the specified attribute set OCID query param.
     * 
     */
    @Import(name="attributeSetId")
    private @Nullable String attributeSetId;

    /**
     * @return A filter to return only attribute set resources that matches the specified attribute set OCID query param.
     * 
     */
    public Optional<String> attributeSetId() {
        return Optional.ofNullable(this.attributeSetId);
    }

    /**
     * A filter to return only attribute set resources that matches the specified attribute set type query param.
     * 
     */
    @Import(name="attributeSetType")
    private @Nullable String attributeSetType;

    /**
     * @return A filter to return only attribute set resources that matches the specified attribute set type query param.
     * 
     */
    public Optional<String> attributeSetType() {
        return Optional.ofNullable(this.attributeSetType);
    }

    /**
     * A filter to return only resources that match the specified compartment OCID.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    /**
     * A filter to return only resources that match the specified display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetAttributeSetsFilter> filters;

    public Optional<List<GetAttributeSetsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return attribute set resources that are in use by other associated resources.
     * 
     */
    @Import(name="inUse")
    private @Nullable String inUse;

    /**
     * @return A filter to return attribute set resources that are in use by other associated resources.
     * 
     */
    public Optional<String> inUse() {
        return Optional.ofNullable(this.inUse);
    }

    /**
     * A filter to return user defined or seeded attribute set resources that matches the specified is user defined query param. A true value indicates user defined attribute set.
     * 
     */
    @Import(name="isUserDefined")
    private @Nullable Boolean isUserDefined;

    /**
     * @return A filter to return user defined or seeded attribute set resources that matches the specified is user defined query param. A true value indicates user defined attribute set.
     * 
     */
    public Optional<Boolean> isUserDefined() {
        return Optional.ofNullable(this.isUserDefined);
    }

    /**
     * The current state of an attribute set.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The current state of an attribute set.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAttributeSetsPlainArgs() {}

    private GetAttributeSetsPlainArgs(GetAttributeSetsPlainArgs $) {
        this.accessLevel = $.accessLevel;
        this.attributeSetId = $.attributeSetId;
        this.attributeSetType = $.attributeSetType;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.inUse = $.inUse;
        this.isUserDefined = $.isUserDefined;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAttributeSetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAttributeSetsPlainArgs $;

        public Builder() {
            $ = new GetAttributeSetsPlainArgs();
        }

        public Builder(GetAttributeSetsPlainArgs defaults) {
            $ = new GetAttributeSetsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(@Nullable String accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param attributeSetId A filter to return only attribute set resources that matches the specified attribute set OCID query param.
         * 
         * @return builder
         * 
         */
        public Builder attributeSetId(@Nullable String attributeSetId) {
            $.attributeSetId = attributeSetId;
            return this;
        }

        /**
         * @param attributeSetType A filter to return only attribute set resources that matches the specified attribute set type query param.
         * 
         * @return builder
         * 
         */
        public Builder attributeSetType(@Nullable String attributeSetType) {
            $.attributeSetType = attributeSetType;
            return this;
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the specified display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetAttributeSetsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAttributeSetsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param inUse A filter to return attribute set resources that are in use by other associated resources.
         * 
         * @return builder
         * 
         */
        public Builder inUse(@Nullable String inUse) {
            $.inUse = inUse;
            return this;
        }

        /**
         * @param isUserDefined A filter to return user defined or seeded attribute set resources that matches the specified is user defined query param. A true value indicates user defined attribute set.
         * 
         * @return builder
         * 
         */
        public Builder isUserDefined(@Nullable Boolean isUserDefined) {
            $.isUserDefined = isUserDefined;
            return this;
        }

        /**
         * @param state The current state of an attribute set.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetAttributeSetsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetAttributeSetsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
