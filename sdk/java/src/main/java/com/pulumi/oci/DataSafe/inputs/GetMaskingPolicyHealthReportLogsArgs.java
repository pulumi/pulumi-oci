// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.GetMaskingPolicyHealthReportLogsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMaskingPolicyHealthReportLogsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMaskingPolicyHealthReportLogsArgs Empty = new GetMaskingPolicyHealthReportLogsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetMaskingPolicyHealthReportLogsFilterArgs>> filters;

    public Optional<Output<List<GetMaskingPolicyHealthReportLogsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the masking health report.
     * 
     */
    @Import(name="maskingPolicyHealthReportId", required=true)
    private Output<String> maskingPolicyHealthReportId;

    /**
     * @return The OCID of the masking health report.
     * 
     */
    public Output<String> maskingPolicyHealthReportId() {
        return this.maskingPolicyHealthReportId;
    }

    /**
     * A filter to return only the resources that match the specified log message type.
     * 
     */
    @Import(name="messageType")
    private @Nullable Output<String> messageType;

    /**
     * @return A filter to return only the resources that match the specified log message type.
     * 
     */
    public Optional<Output<String>> messageType() {
        return Optional.ofNullable(this.messageType);
    }

    private GetMaskingPolicyHealthReportLogsArgs() {}

    private GetMaskingPolicyHealthReportLogsArgs(GetMaskingPolicyHealthReportLogsArgs $) {
        this.filters = $.filters;
        this.maskingPolicyHealthReportId = $.maskingPolicyHealthReportId;
        this.messageType = $.messageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMaskingPolicyHealthReportLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMaskingPolicyHealthReportLogsArgs $;

        public Builder() {
            $ = new GetMaskingPolicyHealthReportLogsArgs();
        }

        public Builder(GetMaskingPolicyHealthReportLogsArgs defaults) {
            $ = new GetMaskingPolicyHealthReportLogsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetMaskingPolicyHealthReportLogsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMaskingPolicyHealthReportLogsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMaskingPolicyHealthReportLogsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param maskingPolicyHealthReportId The OCID of the masking health report.
         * 
         * @return builder
         * 
         */
        public Builder maskingPolicyHealthReportId(Output<String> maskingPolicyHealthReportId) {
            $.maskingPolicyHealthReportId = maskingPolicyHealthReportId;
            return this;
        }

        /**
         * @param maskingPolicyHealthReportId The OCID of the masking health report.
         * 
         * @return builder
         * 
         */
        public Builder maskingPolicyHealthReportId(String maskingPolicyHealthReportId) {
            return maskingPolicyHealthReportId(Output.of(maskingPolicyHealthReportId));
        }

        /**
         * @param messageType A filter to return only the resources that match the specified log message type.
         * 
         * @return builder
         * 
         */
        public Builder messageType(@Nullable Output<String> messageType) {
            $.messageType = messageType;
            return this;
        }

        /**
         * @param messageType A filter to return only the resources that match the specified log message type.
         * 
         * @return builder
         * 
         */
        public Builder messageType(String messageType) {
            return messageType(Output.of(messageType));
        }

        public GetMaskingPolicyHealthReportLogsArgs build() {
            if ($.maskingPolicyHealthReportId == null) {
                throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportLogsArgs", "maskingPolicyHealthReportId");
            }
            return $;
        }
    }

}
