// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.GetSdmMaskingPolicyDifferencesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSdmMaskingPolicyDifferencesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSdmMaskingPolicyDifferencesPlainArgs Empty = new GetSdmMaskingPolicyDifferencesPlainArgs();

    /**
     * A filter to return only resources that match the specified compartment OCID.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    /**
     * Valid value is ACCESSIBLE. Default is ACCESSIBLE. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment).
     * 
     */
    @Import(name="differenceAccessLevel")
    private @Nullable String differenceAccessLevel;

    /**
     * @return Valid value is ACCESSIBLE. Default is ACCESSIBLE. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment).
     * 
     */
    public Optional<String> differenceAccessLevel() {
        return Optional.ofNullable(this.differenceAccessLevel);
    }

    /**
     * A filter to return only resources that match the specified display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetSdmMaskingPolicyDifferencesFilter> filters;

    public Optional<List<GetSdmMaskingPolicyDifferencesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only the resources that match the specified masking policy OCID.
     * 
     */
    @Import(name="maskingPolicyId")
    private @Nullable String maskingPolicyId;

    /**
     * @return A filter to return only the resources that match the specified masking policy OCID.
     * 
     */
    public Optional<String> maskingPolicyId() {
        return Optional.ofNullable(this.maskingPolicyId);
    }

    /**
     * A filter to return only the resources that match the specified sensitive data model OCID.
     * 
     */
    @Import(name="sensitiveDataModelId")
    private @Nullable String sensitiveDataModelId;

    /**
     * @return A filter to return only the resources that match the specified sensitive data model OCID.
     * 
     */
    public Optional<String> sensitiveDataModelId() {
        return Optional.ofNullable(this.sensitiveDataModelId);
    }

    /**
     * A filter to return only the resources that match the specified lifecycle states.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only the resources that match the specified lifecycle states.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetSdmMaskingPolicyDifferencesPlainArgs() {}

    private GetSdmMaskingPolicyDifferencesPlainArgs(GetSdmMaskingPolicyDifferencesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.differenceAccessLevel = $.differenceAccessLevel;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.maskingPolicyId = $.maskingPolicyId;
        this.sensitiveDataModelId = $.sensitiveDataModelId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSdmMaskingPolicyDifferencesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSdmMaskingPolicyDifferencesPlainArgs $;

        public Builder() {
            $ = new GetSdmMaskingPolicyDifferencesPlainArgs();
        }

        public Builder(GetSdmMaskingPolicyDifferencesPlainArgs defaults) {
            $ = new GetSdmMaskingPolicyDifferencesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param differenceAccessLevel Valid value is ACCESSIBLE. Default is ACCESSIBLE. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment).
         * 
         * @return builder
         * 
         */
        public Builder differenceAccessLevel(@Nullable String differenceAccessLevel) {
            $.differenceAccessLevel = differenceAccessLevel;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the specified display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetSdmMaskingPolicyDifferencesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSdmMaskingPolicyDifferencesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param maskingPolicyId A filter to return only the resources that match the specified masking policy OCID.
         * 
         * @return builder
         * 
         */
        public Builder maskingPolicyId(@Nullable String maskingPolicyId) {
            $.maskingPolicyId = maskingPolicyId;
            return this;
        }

        /**
         * @param sensitiveDataModelId A filter to return only the resources that match the specified sensitive data model OCID.
         * 
         * @return builder
         * 
         */
        public Builder sensitiveDataModelId(@Nullable String sensitiveDataModelId) {
            $.sensitiveDataModelId = sensitiveDataModelId;
            return this;
        }

        /**
         * @param state A filter to return only the resources that match the specified lifecycle states.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetSdmMaskingPolicyDifferencesPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
