// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityAssessmentTemplateBaselineComparisonArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityAssessmentTemplateBaselineComparisonArgs Empty = new GetSecurityAssessmentTemplateBaselineComparisonArgs();

    /**
     * The category of the finding.
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return The category of the finding.
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * The OCID of the security assessment baseline.
     * 
     */
    @Import(name="comparisonSecurityAssessmentId", required=true)
    private Output<String> comparisonSecurityAssessmentId;

    /**
     * @return The OCID of the security assessment baseline.
     * 
     */
    public Output<String> comparisonSecurityAssessmentId() {
        return this.comparisonSecurityAssessmentId;
    }

    /**
     * The unique key that identifies the finding. It is a string and unique within a security assessment.
     * 
     */
    @Import(name="findingKey")
    private @Nullable Output<String> findingKey;

    /**
     * @return The unique key that identifies the finding. It is a string and unique within a security assessment.
     * 
     */
    public Optional<Output<String>> findingKey() {
        return Optional.ofNullable(this.findingKey);
    }

    /**
     * The OCID of the security assessment.
     * 
     */
    @Import(name="securityAssessmentId", required=true)
    private Output<String> securityAssessmentId;

    /**
     * @return The OCID of the security assessment.
     * 
     */
    public Output<String> securityAssessmentId() {
        return this.securityAssessmentId;
    }

    /**
     * A filter to return only items related to a specific target OCID.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    private GetSecurityAssessmentTemplateBaselineComparisonArgs() {}

    private GetSecurityAssessmentTemplateBaselineComparisonArgs(GetSecurityAssessmentTemplateBaselineComparisonArgs $) {
        this.category = $.category;
        this.comparisonSecurityAssessmentId = $.comparisonSecurityAssessmentId;
        this.findingKey = $.findingKey;
        this.securityAssessmentId = $.securityAssessmentId;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityAssessmentTemplateBaselineComparisonArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityAssessmentTemplateBaselineComparisonArgs $;

        public Builder() {
            $ = new GetSecurityAssessmentTemplateBaselineComparisonArgs();
        }

        public Builder(GetSecurityAssessmentTemplateBaselineComparisonArgs defaults) {
            $ = new GetSecurityAssessmentTemplateBaselineComparisonArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category The category of the finding.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The category of the finding.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param comparisonSecurityAssessmentId The OCID of the security assessment baseline.
         * 
         * @return builder
         * 
         */
        public Builder comparisonSecurityAssessmentId(Output<String> comparisonSecurityAssessmentId) {
            $.comparisonSecurityAssessmentId = comparisonSecurityAssessmentId;
            return this;
        }

        /**
         * @param comparisonSecurityAssessmentId The OCID of the security assessment baseline.
         * 
         * @return builder
         * 
         */
        public Builder comparisonSecurityAssessmentId(String comparisonSecurityAssessmentId) {
            return comparisonSecurityAssessmentId(Output.of(comparisonSecurityAssessmentId));
        }

        /**
         * @param findingKey The unique key that identifies the finding. It is a string and unique within a security assessment.
         * 
         * @return builder
         * 
         */
        public Builder findingKey(@Nullable Output<String> findingKey) {
            $.findingKey = findingKey;
            return this;
        }

        /**
         * @param findingKey The unique key that identifies the finding. It is a string and unique within a security assessment.
         * 
         * @return builder
         * 
         */
        public Builder findingKey(String findingKey) {
            return findingKey(Output.of(findingKey));
        }

        /**
         * @param securityAssessmentId The OCID of the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder securityAssessmentId(Output<String> securityAssessmentId) {
            $.securityAssessmentId = securityAssessmentId;
            return this;
        }

        /**
         * @param securityAssessmentId The OCID of the security assessment.
         * 
         * @return builder
         * 
         */
        public Builder securityAssessmentId(String securityAssessmentId) {
            return securityAssessmentId(Output.of(securityAssessmentId));
        }

        /**
         * @param targetId A filter to return only items related to a specific target OCID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId A filter to return only items related to a specific target OCID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public GetSecurityAssessmentTemplateBaselineComparisonArgs build() {
            if ($.comparisonSecurityAssessmentId == null) {
                throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateBaselineComparisonArgs", "comparisonSecurityAssessmentId");
            }
            if ($.securityAssessmentId == null) {
                throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateBaselineComparisonArgs", "securityAssessmentId");
            }
            return $;
        }
    }

}
