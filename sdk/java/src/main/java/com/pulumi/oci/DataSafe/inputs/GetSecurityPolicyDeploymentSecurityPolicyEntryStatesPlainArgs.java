// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.GetSecurityPolicyDeploymentSecurityPolicyEntryStatesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs Empty = new GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs();

    /**
     * The current state of the security policy deployment.
     * 
     */
    @Import(name="deploymentStatus")
    private @Nullable String deploymentStatus;

    /**
     * @return The current state of the security policy deployment.
     * 
     */
    public Optional<String> deploymentStatus() {
        return Optional.ofNullable(this.deploymentStatus);
    }

    @Import(name="filters")
    private @Nullable List<GetSecurityPolicyDeploymentSecurityPolicyEntryStatesFilter> filters;

    public Optional<List<GetSecurityPolicyDeploymentSecurityPolicyEntryStatesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the security policy deployment resource.
     * 
     */
    @Import(name="securityPolicyDeploymentId", required=true)
    private String securityPolicyDeploymentId;

    /**
     * @return The OCID of the security policy deployment resource.
     * 
     */
    public String securityPolicyDeploymentId() {
        return this.securityPolicyDeploymentId;
    }

    /**
     * An optional filter to return only resources that match the specified security policy entry OCID.
     * 
     */
    @Import(name="securityPolicyEntryId")
    private @Nullable String securityPolicyEntryId;

    /**
     * @return An optional filter to return only resources that match the specified security policy entry OCID.
     * 
     */
    public Optional<String> securityPolicyEntryId() {
        return Optional.ofNullable(this.securityPolicyEntryId);
    }

    /**
     * The type of the security policy deployment.
     * 
     */
    @Import(name="securityPolicyEntryType")
    private @Nullable String securityPolicyEntryType;

    /**
     * @return The type of the security policy deployment.
     * 
     */
    public Optional<String> securityPolicyEntryType() {
        return Optional.ofNullable(this.securityPolicyEntryType);
    }

    /**
     * An optional filter to return only resources that match the specified target id.
     * 
     */
    @Import(name="targetId")
    private @Nullable String targetId;

    /**
     * @return An optional filter to return only resources that match the specified target id.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    private GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs() {}

    private GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs(GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs $) {
        this.deploymentStatus = $.deploymentStatus;
        this.filters = $.filters;
        this.securityPolicyDeploymentId = $.securityPolicyDeploymentId;
        this.securityPolicyEntryId = $.securityPolicyEntryId;
        this.securityPolicyEntryType = $.securityPolicyEntryType;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs $;

        public Builder() {
            $ = new GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs();
        }

        public Builder(GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs defaults) {
            $ = new GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentStatus The current state of the security policy deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentStatus(@Nullable String deploymentStatus) {
            $.deploymentStatus = deploymentStatus;
            return this;
        }

        public Builder filters(@Nullable List<GetSecurityPolicyDeploymentSecurityPolicyEntryStatesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSecurityPolicyDeploymentSecurityPolicyEntryStatesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param securityPolicyDeploymentId The OCID of the security policy deployment resource.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyDeploymentId(String securityPolicyDeploymentId) {
            $.securityPolicyDeploymentId = securityPolicyDeploymentId;
            return this;
        }

        /**
         * @param securityPolicyEntryId An optional filter to return only resources that match the specified security policy entry OCID.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyEntryId(@Nullable String securityPolicyEntryId) {
            $.securityPolicyEntryId = securityPolicyEntryId;
            return this;
        }

        /**
         * @param securityPolicyEntryType The type of the security policy deployment.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyEntryType(@Nullable String securityPolicyEntryType) {
            $.securityPolicyEntryType = securityPolicyEntryType;
            return this;
        }

        /**
         * @param targetId An optional filter to return only resources that match the specified target id.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable String targetId) {
            $.targetId = targetId;
            return this;
        }

        public GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs build() {
            if ($.securityPolicyDeploymentId == null) {
                throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentSecurityPolicyEntryStatesPlainArgs", "securityPolicyDeploymentId");
            }
            return $;
        }
    }

}
