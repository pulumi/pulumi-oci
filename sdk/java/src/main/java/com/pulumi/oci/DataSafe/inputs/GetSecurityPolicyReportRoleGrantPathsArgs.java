// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.GetSecurityPolicyReportRoleGrantPathsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityPolicyReportRoleGrantPathsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityPolicyReportRoleGrantPathsArgs Empty = new GetSecurityPolicyReportRoleGrantPathsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetSecurityPolicyReportRoleGrantPathsFilterArgs>> filters;

    public Optional<Output<List<GetSecurityPolicyReportRoleGrantPathsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only items that match the specified role.
     * 
     */
    @Import(name="grantedRole", required=true)
    private Output<String> grantedRole;

    /**
     * @return A filter to return only items that match the specified role.
     * 
     */
    public Output<String> grantedRole() {
        return this.grantedRole;
    }

    /**
     * A filter to return only items that match the specified grantee.
     * 
     */
    @Import(name="grantee", required=true)
    private Output<String> grantee;

    /**
     * @return A filter to return only items that match the specified grantee.
     * 
     */
    public Output<String> grantee() {
        return this.grantee;
    }

    /**
     * The OCID of the security policy report resource.
     * 
     */
    @Import(name="securityPolicyReportId", required=true)
    private Output<String> securityPolicyReportId;

    /**
     * @return The OCID of the security policy report resource.
     * 
     */
    public Output<String> securityPolicyReportId() {
        return this.securityPolicyReportId;
    }

    private GetSecurityPolicyReportRoleGrantPathsArgs() {}

    private GetSecurityPolicyReportRoleGrantPathsArgs(GetSecurityPolicyReportRoleGrantPathsArgs $) {
        this.filters = $.filters;
        this.grantedRole = $.grantedRole;
        this.grantee = $.grantee;
        this.securityPolicyReportId = $.securityPolicyReportId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityPolicyReportRoleGrantPathsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityPolicyReportRoleGrantPathsArgs $;

        public Builder() {
            $ = new GetSecurityPolicyReportRoleGrantPathsArgs();
        }

        public Builder(GetSecurityPolicyReportRoleGrantPathsArgs defaults) {
            $ = new GetSecurityPolicyReportRoleGrantPathsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetSecurityPolicyReportRoleGrantPathsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSecurityPolicyReportRoleGrantPathsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSecurityPolicyReportRoleGrantPathsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param grantedRole A filter to return only items that match the specified role.
         * 
         * @return builder
         * 
         */
        public Builder grantedRole(Output<String> grantedRole) {
            $.grantedRole = grantedRole;
            return this;
        }

        /**
         * @param grantedRole A filter to return only items that match the specified role.
         * 
         * @return builder
         * 
         */
        public Builder grantedRole(String grantedRole) {
            return grantedRole(Output.of(grantedRole));
        }

        /**
         * @param grantee A filter to return only items that match the specified grantee.
         * 
         * @return builder
         * 
         */
        public Builder grantee(Output<String> grantee) {
            $.grantee = grantee;
            return this;
        }

        /**
         * @param grantee A filter to return only items that match the specified grantee.
         * 
         * @return builder
         * 
         */
        public Builder grantee(String grantee) {
            return grantee(Output.of(grantee));
        }

        /**
         * @param securityPolicyReportId The OCID of the security policy report resource.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyReportId(Output<String> securityPolicyReportId) {
            $.securityPolicyReportId = securityPolicyReportId;
            return this;
        }

        /**
         * @param securityPolicyReportId The OCID of the security policy report resource.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyReportId(String securityPolicyReportId) {
            return securityPolicyReportId(Output.of(securityPolicyReportId));
        }

        public GetSecurityPolicyReportRoleGrantPathsArgs build() {
            if ($.grantedRole == null) {
                throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsArgs", "grantedRole");
            }
            if ($.grantee == null) {
                throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsArgs", "grantee");
            }
            if ($.securityPolicyReportId == null) {
                throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsArgs", "securityPolicyReportId");
            }
            return $;
        }
    }

}
