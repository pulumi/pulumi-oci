// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.GetSecurityPolicyReportRoleGrantPathsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityPolicyReportRoleGrantPathsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityPolicyReportRoleGrantPathsPlainArgs Empty = new GetSecurityPolicyReportRoleGrantPathsPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetSecurityPolicyReportRoleGrantPathsFilter> filters;

    public Optional<List<GetSecurityPolicyReportRoleGrantPathsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only items that match the specified role.
     * 
     */
    @Import(name="grantedRole", required=true)
    private String grantedRole;

    /**
     * @return A filter to return only items that match the specified role.
     * 
     */
    public String grantedRole() {
        return this.grantedRole;
    }

    /**
     * A filter to return only items that match the specified grantee.
     * 
     */
    @Import(name="grantee", required=true)
    private String grantee;

    /**
     * @return A filter to return only items that match the specified grantee.
     * 
     */
    public String grantee() {
        return this.grantee;
    }

    /**
     * The OCID of the security policy report resource.
     * 
     */
    @Import(name="securityPolicyReportId", required=true)
    private String securityPolicyReportId;

    /**
     * @return The OCID of the security policy report resource.
     * 
     */
    public String securityPolicyReportId() {
        return this.securityPolicyReportId;
    }

    private GetSecurityPolicyReportRoleGrantPathsPlainArgs() {}

    private GetSecurityPolicyReportRoleGrantPathsPlainArgs(GetSecurityPolicyReportRoleGrantPathsPlainArgs $) {
        this.filters = $.filters;
        this.grantedRole = $.grantedRole;
        this.grantee = $.grantee;
        this.securityPolicyReportId = $.securityPolicyReportId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityPolicyReportRoleGrantPathsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityPolicyReportRoleGrantPathsPlainArgs $;

        public Builder() {
            $ = new GetSecurityPolicyReportRoleGrantPathsPlainArgs();
        }

        public Builder(GetSecurityPolicyReportRoleGrantPathsPlainArgs defaults) {
            $ = new GetSecurityPolicyReportRoleGrantPathsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetSecurityPolicyReportRoleGrantPathsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSecurityPolicyReportRoleGrantPathsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param grantedRole A filter to return only items that match the specified role.
         * 
         * @return builder
         * 
         */
        public Builder grantedRole(String grantedRole) {
            $.grantedRole = grantedRole;
            return this;
        }

        /**
         * @param grantee A filter to return only items that match the specified grantee.
         * 
         * @return builder
         * 
         */
        public Builder grantee(String grantee) {
            $.grantee = grantee;
            return this;
        }

        /**
         * @param securityPolicyReportId The OCID of the security policy report resource.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyReportId(String securityPolicyReportId) {
            $.securityPolicyReportId = securityPolicyReportId;
            return this;
        }

        public GetSecurityPolicyReportRoleGrantPathsPlainArgs build() {
            if ($.grantedRole == null) {
                throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsPlainArgs", "grantedRole");
            }
            if ($.grantee == null) {
                throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsPlainArgs", "grantee");
            }
            if ($.securityPolicyReportId == null) {
                throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsPlainArgs", "securityPolicyReportId");
            }
            return $;
        }
    }

}
