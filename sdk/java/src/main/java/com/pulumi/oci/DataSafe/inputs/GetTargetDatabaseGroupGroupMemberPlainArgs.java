// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTargetDatabaseGroupGroupMemberPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTargetDatabaseGroupGroupMemberPlainArgs Empty = new GetTargetDatabaseGroupGroupMemberPlainArgs();

    /**
     * The OCID of the specified target database group.
     * 
     */
    @Import(name="targetDatabaseGroupId", required=true)
    private String targetDatabaseGroupId;

    /**
     * @return The OCID of the specified target database group.
     * 
     */
    public String targetDatabaseGroupId() {
        return this.targetDatabaseGroupId;
    }

    /**
     * A filter to return the target database only if it is a member of the target database group.
     * 
     */
    @Import(name="targetDatabaseId")
    private @Nullable String targetDatabaseId;

    /**
     * @return A filter to return the target database only if it is a member of the target database group.
     * 
     */
    public Optional<String> targetDatabaseId() {
        return Optional.ofNullable(this.targetDatabaseId);
    }

    private GetTargetDatabaseGroupGroupMemberPlainArgs() {}

    private GetTargetDatabaseGroupGroupMemberPlainArgs(GetTargetDatabaseGroupGroupMemberPlainArgs $) {
        this.targetDatabaseGroupId = $.targetDatabaseGroupId;
        this.targetDatabaseId = $.targetDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTargetDatabaseGroupGroupMemberPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTargetDatabaseGroupGroupMemberPlainArgs $;

        public Builder() {
            $ = new GetTargetDatabaseGroupGroupMemberPlainArgs();
        }

        public Builder(GetTargetDatabaseGroupGroupMemberPlainArgs defaults) {
            $ = new GetTargetDatabaseGroupGroupMemberPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetDatabaseGroupId The OCID of the specified target database group.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseGroupId(String targetDatabaseGroupId) {
            $.targetDatabaseGroupId = targetDatabaseGroupId;
            return this;
        }

        /**
         * @param targetDatabaseId A filter to return the target database only if it is a member of the target database group.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseId(@Nullable String targetDatabaseId) {
            $.targetDatabaseId = targetDatabaseId;
            return this;
        }

        public GetTargetDatabaseGroupGroupMemberPlainArgs build() {
            if ($.targetDatabaseGroupId == null) {
                throw new MissingRequiredPropertyException("GetTargetDatabaseGroupGroupMemberPlainArgs", "targetDatabaseGroupId");
            }
            return $;
        }
    }

}
