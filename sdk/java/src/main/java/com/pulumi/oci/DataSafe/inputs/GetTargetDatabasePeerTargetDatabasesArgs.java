// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.GetTargetDatabasePeerTargetDatabasesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTargetDatabasePeerTargetDatabasesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTargetDatabasePeerTargetDatabasesArgs Empty = new GetTargetDatabasePeerTargetDatabasesArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetTargetDatabasePeerTargetDatabasesFilterArgs>> filters;

    public Optional<Output<List<GetTargetDatabasePeerTargetDatabasesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the Data Safe target database.
     * 
     */
    @Import(name="targetDatabaseId", required=true)
    private Output<String> targetDatabaseId;

    /**
     * @return The OCID of the Data Safe target database.
     * 
     */
    public Output<String> targetDatabaseId() {
        return this.targetDatabaseId;
    }

    private GetTargetDatabasePeerTargetDatabasesArgs() {}

    private GetTargetDatabasePeerTargetDatabasesArgs(GetTargetDatabasePeerTargetDatabasesArgs $) {
        this.filters = $.filters;
        this.targetDatabaseId = $.targetDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTargetDatabasePeerTargetDatabasesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTargetDatabasePeerTargetDatabasesArgs $;

        public Builder() {
            $ = new GetTargetDatabasePeerTargetDatabasesArgs();
        }

        public Builder(GetTargetDatabasePeerTargetDatabasesArgs defaults) {
            $ = new GetTargetDatabasePeerTargetDatabasesArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetTargetDatabasePeerTargetDatabasesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetTargetDatabasePeerTargetDatabasesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetTargetDatabasePeerTargetDatabasesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param targetDatabaseId The OCID of the Data Safe target database.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseId(Output<String> targetDatabaseId) {
            $.targetDatabaseId = targetDatabaseId;
            return this;
        }

        /**
         * @param targetDatabaseId The OCID of the Data Safe target database.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseId(String targetDatabaseId) {
            return targetDatabaseId(Output.of(targetDatabaseId));
        }

        public GetTargetDatabasePeerTargetDatabasesArgs build() {
            if ($.targetDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetTargetDatabasePeerTargetDatabasesArgs", "targetDatabaseId");
            }
            return $;
        }
    }

}
