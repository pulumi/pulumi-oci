// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.GetUserAssessmentUserAccessAnalyticsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUserAssessmentUserAccessAnalyticsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserAssessmentUserAccessAnalyticsPlainArgs Empty = new GetUserAssessmentUserAccessAnalyticsPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetUserAssessmentUserAccessAnalyticsFilter> filters;

    public Optional<List<GetUserAssessmentUserAccessAnalyticsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the user assessment.
     * 
     */
    @Import(name="userAssessmentId", required=true)
    private String userAssessmentId;

    /**
     * @return The OCID of the user assessment.
     * 
     */
    public String userAssessmentId() {
        return this.userAssessmentId;
    }

    private GetUserAssessmentUserAccessAnalyticsPlainArgs() {}

    private GetUserAssessmentUserAccessAnalyticsPlainArgs(GetUserAssessmentUserAccessAnalyticsPlainArgs $) {
        this.filters = $.filters;
        this.userAssessmentId = $.userAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserAssessmentUserAccessAnalyticsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserAssessmentUserAccessAnalyticsPlainArgs $;

        public Builder() {
            $ = new GetUserAssessmentUserAccessAnalyticsPlainArgs();
        }

        public Builder(GetUserAssessmentUserAccessAnalyticsPlainArgs defaults) {
            $ = new GetUserAssessmentUserAccessAnalyticsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetUserAssessmentUserAccessAnalyticsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetUserAssessmentUserAccessAnalyticsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param userAssessmentId The OCID of the user assessment.
         * 
         * @return builder
         * 
         */
        public Builder userAssessmentId(String userAssessmentId) {
            $.userAssessmentId = userAssessmentId;
            return this;
        }

        public GetUserAssessmentUserAccessAnalyticsPlainArgs build() {
            if ($.userAssessmentId == null) {
                throw new MissingRequiredPropertyException("GetUserAssessmentUserAccessAnalyticsPlainArgs", "userAssessmentId");
            }
            return $;
        }
    }

}
