// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.SecurityAssessmentCheckReferenceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityAssessmentCheckArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityAssessmentCheckArgs Empty = new SecurityAssessmentCheckArgs();

    /**
     * The category to which the check belongs to.
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return The category to which the check belongs to.
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * A unique identifier for the check.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return A unique identifier for the check.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Provides a recommended approach to take to remediate the check reported.
     * 
     */
    @Import(name="oneline")
    private @Nullable Output<String> oneline;

    /**
     * @return Provides a recommended approach to take to remediate the check reported.
     * 
     */
    public Optional<Output<String>> oneline() {
        return Optional.ofNullable(this.oneline);
    }

    /**
     * Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
     * 
     */
    @Import(name="references")
    private @Nullable Output<List<SecurityAssessmentCheckReferenceArgs>> references;

    /**
     * @return Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
     * 
     */
    public Optional<Output<List<SecurityAssessmentCheckReferenceArgs>>> references() {
        return Optional.ofNullable(this.references);
    }

    /**
     * The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
     * 
     */
    @Import(name="remarks")
    private @Nullable Output<String> remarks;

    /**
     * @return The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
     * 
     */
    public Optional<Output<String>> remarks() {
        return Optional.ofNullable(this.remarks);
    }

    /**
     * The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
     * 
     */
    @Import(name="suggestedSeverity")
    private @Nullable Output<String> suggestedSeverity;

    /**
     * @return The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
     * 
     */
    public Optional<Output<String>> suggestedSeverity() {
        return Optional.ofNullable(this.suggestedSeverity);
    }

    /**
     * The short title for the check.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return The short title for the check.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private SecurityAssessmentCheckArgs() {}

    private SecurityAssessmentCheckArgs(SecurityAssessmentCheckArgs $) {
        this.category = $.category;
        this.key = $.key;
        this.oneline = $.oneline;
        this.references = $.references;
        this.remarks = $.remarks;
        this.suggestedSeverity = $.suggestedSeverity;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityAssessmentCheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityAssessmentCheckArgs $;

        public Builder() {
            $ = new SecurityAssessmentCheckArgs();
        }

        public Builder(SecurityAssessmentCheckArgs defaults) {
            $ = new SecurityAssessmentCheckArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category The category to which the check belongs to.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The category to which the check belongs to.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param key A unique identifier for the check.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key A unique identifier for the check.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param oneline Provides a recommended approach to take to remediate the check reported.
         * 
         * @return builder
         * 
         */
        public Builder oneline(@Nullable Output<String> oneline) {
            $.oneline = oneline;
            return this;
        }

        /**
         * @param oneline Provides a recommended approach to take to remediate the check reported.
         * 
         * @return builder
         * 
         */
        public Builder oneline(String oneline) {
            return oneline(Output.of(oneline));
        }

        /**
         * @param references Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
         * 
         * @return builder
         * 
         */
        public Builder references(@Nullable Output<List<SecurityAssessmentCheckReferenceArgs>> references) {
            $.references = references;
            return this;
        }

        /**
         * @param references Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
         * 
         * @return builder
         * 
         */
        public Builder references(List<SecurityAssessmentCheckReferenceArgs> references) {
            return references(Output.of(references));
        }

        /**
         * @param references Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
         * 
         * @return builder
         * 
         */
        public Builder references(SecurityAssessmentCheckReferenceArgs... references) {
            return references(List.of(references));
        }

        /**
         * @param remarks The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         * 
         * @return builder
         * 
         */
        public Builder remarks(@Nullable Output<String> remarks) {
            $.remarks = remarks;
            return this;
        }

        /**
         * @param remarks The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
         * 
         * @return builder
         * 
         */
        public Builder remarks(String remarks) {
            return remarks(Output.of(remarks));
        }

        /**
         * @param suggestedSeverity The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
         * 
         * @return builder
         * 
         */
        public Builder suggestedSeverity(@Nullable Output<String> suggestedSeverity) {
            $.suggestedSeverity = suggestedSeverity;
            return this;
        }

        /**
         * @param suggestedSeverity The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
         * 
         * @return builder
         * 
         */
        public Builder suggestedSeverity(String suggestedSeverity) {
            return suggestedSeverity(Output.of(suggestedSeverity));
        }

        /**
         * @param title The short title for the check.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title The short title for the check.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public SecurityAssessmentCheckArgs build() {
            return $;
        }
    }

}
