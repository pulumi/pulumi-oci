// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class SecurityAssessmentFindingPatchOperationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityAssessmentFindingPatchOperationArgs Empty = new SecurityAssessmentFindingPatchOperationArgs();

    /**
     * (Updatable) The operation can be one of these values: `INSERT`, `MERGE`, `REMOVE`
     * 
     */
    @Import(name="operation", required=true)
    private Output<String> operation;

    /**
     * @return (Updatable) The operation can be one of these values: `INSERT`, `MERGE`, `REMOVE`
     * 
     */
    public Output<String> operation() {
        return this.operation;
    }

    /**
     * (Updatable)
     * 
     */
    @Import(name="selection", required=true)
    private Output<String> selection;

    /**
     * @return (Updatable)
     * 
     */
    public Output<String> selection() {
        return this.selection;
    }

    /**
     * (Updatable)
     * 
     */
    @Import(name="value", required=true)
    private Output<Map<String,String>> value;

    /**
     * @return (Updatable)
     * 
     */
    public Output<Map<String,String>> value() {
        return this.value;
    }

    private SecurityAssessmentFindingPatchOperationArgs() {}

    private SecurityAssessmentFindingPatchOperationArgs(SecurityAssessmentFindingPatchOperationArgs $) {
        this.operation = $.operation;
        this.selection = $.selection;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityAssessmentFindingPatchOperationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityAssessmentFindingPatchOperationArgs $;

        public Builder() {
            $ = new SecurityAssessmentFindingPatchOperationArgs();
        }

        public Builder(SecurityAssessmentFindingPatchOperationArgs defaults) {
            $ = new SecurityAssessmentFindingPatchOperationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param operation (Updatable) The operation can be one of these values: `INSERT`, `MERGE`, `REMOVE`
         * 
         * @return builder
         * 
         */
        public Builder operation(Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation (Updatable) The operation can be one of these values: `INSERT`, `MERGE`, `REMOVE`
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param selection (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder selection(Output<String> selection) {
            $.selection = selection;
            return this;
        }

        /**
         * @param selection (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder selection(String selection) {
            return selection(Output.of(selection));
        }

        /**
         * @param value (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder value(Output<Map<String,String>> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder value(Map<String,String> value) {
            return value(Output.of(value));
        }

        public SecurityAssessmentFindingPatchOperationArgs build() {
            if ($.operation == null) {
                throw new MissingRequiredPropertyException("SecurityAssessmentFindingPatchOperationArgs", "operation");
            }
            if ($.selection == null) {
                throw new MissingRequiredPropertyException("SecurityAssessmentFindingPatchOperationArgs", "selection");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("SecurityAssessmentFindingPatchOperationArgs", "value");
            }
            return $;
        }
    }

}
