// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SensitiveDataModelTablesForDiscoveryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SensitiveDataModelTablesForDiscoveryArgs Empty = new SensitiveDataModelTablesForDiscoveryArgs();

    /**
     * (Updatable) This contains the name of the schema.
     * 
     */
    @Import(name="schemaName", required=true)
    private Output<String> schemaName;

    /**
     * @return (Updatable) This contains the name of the schema.
     * 
     */
    public Output<String> schemaName() {
        return this.schemaName;
    }

    /**
     * (Updatable) This contains an optional list of the table names.
     * 
     */
    @Import(name="tableNames")
    private @Nullable Output<List<String>> tableNames;

    /**
     * @return (Updatable) This contains an optional list of the table names.
     * 
     */
    public Optional<Output<List<String>>> tableNames() {
        return Optional.ofNullable(this.tableNames);
    }

    private SensitiveDataModelTablesForDiscoveryArgs() {}

    private SensitiveDataModelTablesForDiscoveryArgs(SensitiveDataModelTablesForDiscoveryArgs $) {
        this.schemaName = $.schemaName;
        this.tableNames = $.tableNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SensitiveDataModelTablesForDiscoveryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SensitiveDataModelTablesForDiscoveryArgs $;

        public Builder() {
            $ = new SensitiveDataModelTablesForDiscoveryArgs();
        }

        public Builder(SensitiveDataModelTablesForDiscoveryArgs defaults) {
            $ = new SensitiveDataModelTablesForDiscoveryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param schemaName (Updatable) This contains the name of the schema.
         * 
         * @return builder
         * 
         */
        public Builder schemaName(Output<String> schemaName) {
            $.schemaName = schemaName;
            return this;
        }

        /**
         * @param schemaName (Updatable) This contains the name of the schema.
         * 
         * @return builder
         * 
         */
        public Builder schemaName(String schemaName) {
            return schemaName(Output.of(schemaName));
        }

        /**
         * @param tableNames (Updatable) This contains an optional list of the table names.
         * 
         * @return builder
         * 
         */
        public Builder tableNames(@Nullable Output<List<String>> tableNames) {
            $.tableNames = tableNames;
            return this;
        }

        /**
         * @param tableNames (Updatable) This contains an optional list of the table names.
         * 
         * @return builder
         * 
         */
        public Builder tableNames(List<String> tableNames) {
            return tableNames(Output.of(tableNames));
        }

        /**
         * @param tableNames (Updatable) This contains an optional list of the table names.
         * 
         * @return builder
         * 
         */
        public Builder tableNames(String... tableNames) {
            return tableNames(List.of(tableNames));
        }

        public SensitiveDataModelTablesForDiscoveryArgs build() {
            if ($.schemaName == null) {
                throw new MissingRequiredPropertyException("SensitiveDataModelTablesForDiscoveryArgs", "schemaName");
            }
            return $;
        }
    }

}
