// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlCollectionState extends com.pulumi.resources.ResourceArgs {

    public static final SqlCollectionState Empty = new SqlCollectionState();

    /**
     * (Updatable) The OCID of the compartment containing the SQL collection.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment containing the SQL collection.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The database user name.
     * 
     */
    @Import(name="dbUserName")
    private @Nullable Output<String> dbUserName;

    /**
     * @return The database user name.
     * 
     */
    public Optional<Output<String>> dbUserName() {
        return Optional.ofNullable(this.dbUserName);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description of the SQL collection.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the SQL collection.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
     * 
     */
    @Import(name="generateSqlFirewallPolicyTrigger")
    private @Nullable Output<Boolean> generateSqlFirewallPolicyTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
     * 
     */
    public Optional<Output<Boolean>> generateSqlFirewallPolicyTrigger() {
        return Optional.ofNullable(this.generateSqlFirewallPolicyTrigger);
    }

    /**
     * Details about the current state of the SQL collection in Data Safe.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Details about the current state of the SQL collection in Data Safe.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
     * 
     */
    @Import(name="purgeLogsTrigger")
    private @Nullable Output<Boolean> purgeLogsTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
     * 
     */
    public Optional<Output<Boolean>> purgeLogsTrigger() {
        return Optional.ofNullable(this.purgeLogsTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
     * 
     */
    @Import(name="refreshLogInsightsTrigger")
    private @Nullable Output<Boolean> refreshLogInsightsTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
     * 
     */
    public Optional<Output<Boolean>> refreshLogInsightsTrigger() {
        return Optional.ofNullable(this.refreshLogInsightsTrigger);
    }

    /**
     * Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    @Import(name="sqlLevel")
    private @Nullable Output<String> sqlLevel;

    /**
     * @return Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    public Optional<Output<String>> sqlLevel() {
        return Optional.ofNullable(this.sqlLevel);
    }

    /**
     * (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
     * 
     */
    @Import(name="startTrigger")
    private @Nullable Output<Boolean> startTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
     * 
     */
    public Optional<Output<Boolean>> startTrigger() {
        return Optional.ofNullable(this.startTrigger);
    }

    /**
     * The current state of the SQL collection.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the SQL collection.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="stopTrigger")
    private @Nullable Output<Boolean> stopTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> stopTrigger() {
        return Optional.ofNullable(this.stopTrigger);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The OCID of the target corresponding to the security policy deployment.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The OCID of the target corresponding to the security policy deployment.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * The time that the SQL collection was created, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time that the SQL collection was created, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeLastStarted")
    private @Nullable Output<String> timeLastStarted;

    /**
     * @return The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeLastStarted() {
        return Optional.ofNullable(this.timeLastStarted);
    }

    /**
     * The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeLastStopped")
    private @Nullable Output<String> timeLastStopped;

    /**
     * @return The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeLastStopped() {
        return Optional.ofNullable(this.timeLastStopped);
    }

    /**
     * The last date and time the SQL collection was updated, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The last date and time the SQL collection was updated, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private SqlCollectionState() {}

    private SqlCollectionState(SqlCollectionState $) {
        this.compartmentId = $.compartmentId;
        this.dbUserName = $.dbUserName;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.generateSqlFirewallPolicyTrigger = $.generateSqlFirewallPolicyTrigger;
        this.lifecycleDetails = $.lifecycleDetails;
        this.purgeLogsTrigger = $.purgeLogsTrigger;
        this.refreshLogInsightsTrigger = $.refreshLogInsightsTrigger;
        this.sqlLevel = $.sqlLevel;
        this.startTrigger = $.startTrigger;
        this.state = $.state;
        this.status = $.status;
        this.stopTrigger = $.stopTrigger;
        this.systemTags = $.systemTags;
        this.targetId = $.targetId;
        this.timeCreated = $.timeCreated;
        this.timeLastStarted = $.timeLastStarted;
        this.timeLastStopped = $.timeLastStopped;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlCollectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlCollectionState $;

        public Builder() {
            $ = new SqlCollectionState();
        }

        public Builder(SqlCollectionState defaults) {
            $ = new SqlCollectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment containing the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment containing the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dbUserName The database user name.
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(@Nullable Output<String> dbUserName) {
            $.dbUserName = dbUserName;
            return this;
        }

        /**
         * @param dbUserName The database user name.
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(String dbUserName) {
            return dbUserName(Output.of(dbUserName));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description of the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param generateSqlFirewallPolicyTrigger (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateSqlFirewallPolicyTrigger(@Nullable Output<Boolean> generateSqlFirewallPolicyTrigger) {
            $.generateSqlFirewallPolicyTrigger = generateSqlFirewallPolicyTrigger;
            return this;
        }

        /**
         * @param generateSqlFirewallPolicyTrigger (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateSqlFirewallPolicyTrigger(Boolean generateSqlFirewallPolicyTrigger) {
            return generateSqlFirewallPolicyTrigger(Output.of(generateSqlFirewallPolicyTrigger));
        }

        /**
         * @param lifecycleDetails Details about the current state of the SQL collection in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Details about the current state of the SQL collection in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param purgeLogsTrigger (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder purgeLogsTrigger(@Nullable Output<Boolean> purgeLogsTrigger) {
            $.purgeLogsTrigger = purgeLogsTrigger;
            return this;
        }

        /**
         * @param purgeLogsTrigger (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder purgeLogsTrigger(Boolean purgeLogsTrigger) {
            return purgeLogsTrigger(Output.of(purgeLogsTrigger));
        }

        /**
         * @param refreshLogInsightsTrigger (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder refreshLogInsightsTrigger(@Nullable Output<Boolean> refreshLogInsightsTrigger) {
            $.refreshLogInsightsTrigger = refreshLogInsightsTrigger;
            return this;
        }

        /**
         * @param refreshLogInsightsTrigger (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder refreshLogInsightsTrigger(Boolean refreshLogInsightsTrigger) {
            return refreshLogInsightsTrigger(Output.of(refreshLogInsightsTrigger));
        }

        /**
         * @param sqlLevel Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
         * 
         * @return builder
         * 
         */
        public Builder sqlLevel(@Nullable Output<String> sqlLevel) {
            $.sqlLevel = sqlLevel;
            return this;
        }

        /**
         * @param sqlLevel Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
         * 
         * @return builder
         * 
         */
        public Builder sqlLevel(String sqlLevel) {
            return sqlLevel(Output.of(sqlLevel));
        }

        /**
         * @param startTrigger (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder startTrigger(@Nullable Output<Boolean> startTrigger) {
            $.startTrigger = startTrigger;
            return this;
        }

        /**
         * @param startTrigger (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder startTrigger(Boolean startTrigger) {
            return startTrigger(Output.of(startTrigger));
        }

        /**
         * @param state The current state of the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the SQL collection.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param stopTrigger (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder stopTrigger(@Nullable Output<Boolean> stopTrigger) {
            $.stopTrigger = stopTrigger;
            return this;
        }

        /**
         * @param stopTrigger (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder stopTrigger(Boolean stopTrigger) {
            return stopTrigger(Output.of(stopTrigger));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param targetId The OCID of the target corresponding to the security policy deployment.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The OCID of the target corresponding to the security policy deployment.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param timeCreated The time that the SQL collection was created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time that the SQL collection was created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeLastStarted The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeLastStarted(@Nullable Output<String> timeLastStarted) {
            $.timeLastStarted = timeLastStarted;
            return this;
        }

        /**
         * @param timeLastStarted The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeLastStarted(String timeLastStarted) {
            return timeLastStarted(Output.of(timeLastStarted));
        }

        /**
         * @param timeLastStopped The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeLastStopped(@Nullable Output<String> timeLastStopped) {
            $.timeLastStopped = timeLastStopped;
            return this;
        }

        /**
         * @param timeLastStopped The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeLastStopped(String timeLastStopped) {
            return timeLastStopped(Output.of(timeLastStopped));
        }

        /**
         * @param timeUpdated The last date and time the SQL collection was updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The last date and time the SQL collection was updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public SqlCollectionState build() {
            return $;
        }
    }

}
