// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.inputs.TargetDatabaseGroupMatchingCriteriaExcludeArgs;
import com.pulumi.oci.DataSafe.inputs.TargetDatabaseGroupMatchingCriteriaIncludeArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetDatabaseGroupMatchingCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetDatabaseGroupMatchingCriteriaArgs Empty = new TargetDatabaseGroupMatchingCriteriaArgs();

    /**
     * (Updatable) Criteria to exclude certain target databases from the target database group.
     * 
     */
    @Import(name="exclude")
    private @Nullable Output<TargetDatabaseGroupMatchingCriteriaExcludeArgs> exclude;

    /**
     * @return (Updatable) Criteria to exclude certain target databases from the target database group.
     * 
     */
    public Optional<Output<TargetDatabaseGroupMatchingCriteriaExcludeArgs>> exclude() {
        return Optional.ofNullable(this.exclude);
    }

    /**
     * (Updatable) Criteria to determine whether a target database should be included in the target database group. If the database satisfies any of compartments, targetDatabaseIds, freeformTags, or definedTags criteria, it qualifies for inclusion in the target database group
     * 
     */
    @Import(name="include", required=true)
    private Output<TargetDatabaseGroupMatchingCriteriaIncludeArgs> include;

    /**
     * @return (Updatable) Criteria to determine whether a target database should be included in the target database group. If the database satisfies any of compartments, targetDatabaseIds, freeformTags, or definedTags criteria, it qualifies for inclusion in the target database group
     * 
     */
    public Output<TargetDatabaseGroupMatchingCriteriaIncludeArgs> include() {
        return this.include;
    }

    private TargetDatabaseGroupMatchingCriteriaArgs() {}

    private TargetDatabaseGroupMatchingCriteriaArgs(TargetDatabaseGroupMatchingCriteriaArgs $) {
        this.exclude = $.exclude;
        this.include = $.include;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetDatabaseGroupMatchingCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetDatabaseGroupMatchingCriteriaArgs $;

        public Builder() {
            $ = new TargetDatabaseGroupMatchingCriteriaArgs();
        }

        public Builder(TargetDatabaseGroupMatchingCriteriaArgs defaults) {
            $ = new TargetDatabaseGroupMatchingCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exclude (Updatable) Criteria to exclude certain target databases from the target database group.
         * 
         * @return builder
         * 
         */
        public Builder exclude(@Nullable Output<TargetDatabaseGroupMatchingCriteriaExcludeArgs> exclude) {
            $.exclude = exclude;
            return this;
        }

        /**
         * @param exclude (Updatable) Criteria to exclude certain target databases from the target database group.
         * 
         * @return builder
         * 
         */
        public Builder exclude(TargetDatabaseGroupMatchingCriteriaExcludeArgs exclude) {
            return exclude(Output.of(exclude));
        }

        /**
         * @param include (Updatable) Criteria to determine whether a target database should be included in the target database group. If the database satisfies any of compartments, targetDatabaseIds, freeformTags, or definedTags criteria, it qualifies for inclusion in the target database group
         * 
         * @return builder
         * 
         */
        public Builder include(Output<TargetDatabaseGroupMatchingCriteriaIncludeArgs> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include (Updatable) Criteria to determine whether a target database should be included in the target database group. If the database satisfies any of compartments, targetDatabaseIds, freeformTags, or definedTags criteria, it qualifies for inclusion in the target database group
         * 
         * @return builder
         * 
         */
        public Builder include(TargetDatabaseGroupMatchingCriteriaIncludeArgs include) {
            return include(Output.of(include));
        }

        public TargetDatabaseGroupMatchingCriteriaArgs build() {
            if ($.include == null) {
                throw new MissingRequiredPropertyException("TargetDatabaseGroupMatchingCriteriaArgs", "include");
            }
            return $;
        }
    }

}
