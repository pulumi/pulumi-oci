// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TargetDatabaseGroupMatchingCriteriaExcludeArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetDatabaseGroupMatchingCriteriaExcludeArgs Empty = new TargetDatabaseGroupMatchingCriteriaExcludeArgs();

    /**
     * (Updatable) The list of target database OCIDS, that should be excluded from the target database group (even if they match some of the other criteria).
     * 
     */
    @Import(name="targetDatabaseIds", required=true)
    private Output<List<String>> targetDatabaseIds;

    /**
     * @return (Updatable) The list of target database OCIDS, that should be excluded from the target database group (even if they match some of the other criteria).
     * 
     */
    public Output<List<String>> targetDatabaseIds() {
        return this.targetDatabaseIds;
    }

    private TargetDatabaseGroupMatchingCriteriaExcludeArgs() {}

    private TargetDatabaseGroupMatchingCriteriaExcludeArgs(TargetDatabaseGroupMatchingCriteriaExcludeArgs $) {
        this.targetDatabaseIds = $.targetDatabaseIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetDatabaseGroupMatchingCriteriaExcludeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetDatabaseGroupMatchingCriteriaExcludeArgs $;

        public Builder() {
            $ = new TargetDatabaseGroupMatchingCriteriaExcludeArgs();
        }

        public Builder(TargetDatabaseGroupMatchingCriteriaExcludeArgs defaults) {
            $ = new TargetDatabaseGroupMatchingCriteriaExcludeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetDatabaseIds (Updatable) The list of target database OCIDS, that should be excluded from the target database group (even if they match some of the other criteria).
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseIds(Output<List<String>> targetDatabaseIds) {
            $.targetDatabaseIds = targetDatabaseIds;
            return this;
        }

        /**
         * @param targetDatabaseIds (Updatable) The list of target database OCIDS, that should be excluded from the target database group (even if they match some of the other criteria).
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseIds(List<String> targetDatabaseIds) {
            return targetDatabaseIds(Output.of(targetDatabaseIds));
        }

        /**
         * @param targetDatabaseIds (Updatable) The list of target database OCIDS, that should be excluded from the target database group (even if they match some of the other criteria).
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseIds(String... targetDatabaseIds) {
            return targetDatabaseIds(List.of(targetDatabaseIds));
        }

        public TargetDatabaseGroupMatchingCriteriaExcludeArgs build() {
            if ($.targetDatabaseIds == null) {
                throw new MissingRequiredPropertyException("TargetDatabaseGroupMatchingCriteriaExcludeArgs", "targetDatabaseIds");
            }
            return $;
        }
    }

}
