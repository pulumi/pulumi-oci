// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.TargetDatabasePeerTargetDatabaseDatabaseDetailsArgs;
import com.pulumi.oci.DataSafe.inputs.TargetDatabasePeerTargetDatabaseTlsConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetDatabasePeerTargetDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final TargetDatabasePeerTargetDatabaseState Empty = new TargetDatabasePeerTargetDatabaseState();

    /**
     * (Updatable) Details of the database for the registration in Data Safe.
     * 
     */
    @Import(name="databaseDetails")
    private @Nullable Output<TargetDatabasePeerTargetDatabaseDatabaseDetailsArgs> databaseDetails;

    /**
     * @return (Updatable) Details of the database for the registration in Data Safe.
     * 
     */
    public Optional<Output<TargetDatabasePeerTargetDatabaseDatabaseDetailsArgs>> databaseDetails() {
        return Optional.ofNullable(this.databaseDetails);
    }

    /**
     * Unique name of the database associated to the peer target database.
     * 
     */
    @Import(name="databaseUniqueName")
    private @Nullable Output<String> databaseUniqueName;

    /**
     * @return Unique name of the database associated to the peer target database.
     * 
     */
    public Optional<Output<String>> databaseUniqueName() {
        return Optional.ofNullable(this.databaseUniqueName);
    }

    /**
     * The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     * 
     */
    @Import(name="dataguardAssociationId")
    private @Nullable Output<String> dataguardAssociationId;

    /**
     * @return The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     * 
     */
    public Optional<Output<String>> dataguardAssociationId() {
        return Optional.ofNullable(this.dataguardAssociationId);
    }

    /**
     * (Updatable) The description of the peer target database in Data Safe.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the peer target database in Data Safe.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The secondary key assigned for the peer target database in Data Safe.
     * 
     */
    @Import(name="key")
    private @Nullable Output<Integer> key;

    /**
     * @return The secondary key assigned for the peer target database in Data Safe.
     * 
     */
    public Optional<Output<Integer>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Details about the current state of the peer target database in Data Safe.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Details about the current state of the peer target database in Data Safe.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Role of the database associated to the peer target database.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return Role of the database associated to the peer target database.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * The current state of the peer target database in Data Safe.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the peer target database in Data Safe.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The OCID of the Data Safe target database.
     * 
     */
    @Import(name="targetDatabaseId")
    private @Nullable Output<String> targetDatabaseId;

    /**
     * @return The OCID of the Data Safe target database.
     * 
     */
    public Optional<Output<String>> targetDatabaseId() {
        return Optional.ofNullable(this.targetDatabaseId);
    }

    /**
     * The date and time of the peer target database registration in Data Safe.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time of the peer target database registration in Data Safe.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * (Updatable) The details required to establish a TLS enabled connection.
     * 
     */
    @Import(name="tlsConfig")
    private @Nullable Output<TargetDatabasePeerTargetDatabaseTlsConfigArgs> tlsConfig;

    /**
     * @return (Updatable) The details required to establish a TLS enabled connection.
     * 
     */
    public Optional<Output<TargetDatabasePeerTargetDatabaseTlsConfigArgs>> tlsConfig() {
        return Optional.ofNullable(this.tlsConfig);
    }

    private TargetDatabasePeerTargetDatabaseState() {}

    private TargetDatabasePeerTargetDatabaseState(TargetDatabasePeerTargetDatabaseState $) {
        this.databaseDetails = $.databaseDetails;
        this.databaseUniqueName = $.databaseUniqueName;
        this.dataguardAssociationId = $.dataguardAssociationId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.key = $.key;
        this.lifecycleDetails = $.lifecycleDetails;
        this.role = $.role;
        this.state = $.state;
        this.targetDatabaseId = $.targetDatabaseId;
        this.timeCreated = $.timeCreated;
        this.tlsConfig = $.tlsConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetDatabasePeerTargetDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetDatabasePeerTargetDatabaseState $;

        public Builder() {
            $ = new TargetDatabasePeerTargetDatabaseState();
        }

        public Builder(TargetDatabasePeerTargetDatabaseState defaults) {
            $ = new TargetDatabasePeerTargetDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseDetails (Updatable) Details of the database for the registration in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder databaseDetails(@Nullable Output<TargetDatabasePeerTargetDatabaseDatabaseDetailsArgs> databaseDetails) {
            $.databaseDetails = databaseDetails;
            return this;
        }

        /**
         * @param databaseDetails (Updatable) Details of the database for the registration in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder databaseDetails(TargetDatabasePeerTargetDatabaseDatabaseDetailsArgs databaseDetails) {
            return databaseDetails(Output.of(databaseDetails));
        }

        /**
         * @param databaseUniqueName Unique name of the database associated to the peer target database.
         * 
         * @return builder
         * 
         */
        public Builder databaseUniqueName(@Nullable Output<String> databaseUniqueName) {
            $.databaseUniqueName = databaseUniqueName;
            return this;
        }

        /**
         * @param databaseUniqueName Unique name of the database associated to the peer target database.
         * 
         * @return builder
         * 
         */
        public Builder databaseUniqueName(String databaseUniqueName) {
            return databaseUniqueName(Output.of(databaseUniqueName));
        }

        /**
         * @param dataguardAssociationId The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
         * 
         * @return builder
         * 
         */
        public Builder dataguardAssociationId(@Nullable Output<String> dataguardAssociationId) {
            $.dataguardAssociationId = dataguardAssociationId;
            return this;
        }

        /**
         * @param dataguardAssociationId The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
         * 
         * @return builder
         * 
         */
        public Builder dataguardAssociationId(String dataguardAssociationId) {
            return dataguardAssociationId(Output.of(dataguardAssociationId));
        }

        /**
         * @param description (Updatable) The description of the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param key The secondary key assigned for the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<Integer> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The secondary key assigned for the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder key(Integer key) {
            return key(Output.of(key));
        }

        /**
         * @param lifecycleDetails Details about the current state of the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Details about the current state of the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param role Role of the database associated to the peer target database.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Role of the database associated to the peer target database.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param state The current state of the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the peer target database in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param targetDatabaseId The OCID of the Data Safe target database.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseId(@Nullable Output<String> targetDatabaseId) {
            $.targetDatabaseId = targetDatabaseId;
            return this;
        }

        /**
         * @param targetDatabaseId The OCID of the Data Safe target database.
         * 
         * @return builder
         * 
         */
        public Builder targetDatabaseId(String targetDatabaseId) {
            return targetDatabaseId(Output.of(targetDatabaseId));
        }

        /**
         * @param timeCreated The date and time of the peer target database registration in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time of the peer target database registration in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param tlsConfig (Updatable) The details required to establish a TLS enabled connection.
         * 
         * @return builder
         * 
         */
        public Builder tlsConfig(@Nullable Output<TargetDatabasePeerTargetDatabaseTlsConfigArgs> tlsConfig) {
            $.tlsConfig = tlsConfig;
            return this;
        }

        /**
         * @param tlsConfig (Updatable) The details required to establish a TLS enabled connection.
         * 
         * @return builder
         * 
         */
        public Builder tlsConfig(TargetDatabasePeerTargetDatabaseTlsConfigArgs tlsConfig) {
            return tlsConfig(Output.of(tlsConfig));
        }

        public TargetDatabasePeerTargetDatabaseState build() {
            return $;
        }
    }

}
