// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.AuditPolicyManagementAuditConditionEnableCondition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuditPolicyManagementAuditCondition {
    /**
     * @return Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    private @Nullable String auditPolicyName;
    /**
     * @return Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
     * 
     */
    private @Nullable List<AuditPolicyManagementAuditConditionEnableCondition> enableConditions;
    /**
     * @return Indicates whether the Data Safe user activity on the target database will be audited by the policy.
     * 
     */
    private @Nullable Boolean isDataSafeServiceAccountAudited;
    /**
     * @return Indicates whether the policy has to be enabled or disabled in the target database. Set this to true if you want the audit policy to be enabled in the target database. If the seeded audit policy is not already created in the database, the provisioning creates and enables them. If this is set to false, the policy will be disabled in the target database.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return Indicates whether the privileged user list is managed by Data Safe.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable Boolean isPrivUsersManagedByDataSafe;

    private AuditPolicyManagementAuditCondition() {}
    /**
     * @return Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    public Optional<String> auditPolicyName() {
        return Optional.ofNullable(this.auditPolicyName);
    }
    /**
     * @return Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
     * 
     */
    public List<AuditPolicyManagementAuditConditionEnableCondition> enableConditions() {
        return this.enableConditions == null ? List.of() : this.enableConditions;
    }
    /**
     * @return Indicates whether the Data Safe user activity on the target database will be audited by the policy.
     * 
     */
    public Optional<Boolean> isDataSafeServiceAccountAudited() {
        return Optional.ofNullable(this.isDataSafeServiceAccountAudited);
    }
    /**
     * @return Indicates whether the policy has to be enabled or disabled in the target database. Set this to true if you want the audit policy to be enabled in the target database. If the seeded audit policy is not already created in the database, the provisioning creates and enables them. If this is set to false, the policy will be disabled in the target database.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return Indicates whether the privileged user list is managed by Data Safe.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Boolean> isPrivUsersManagedByDataSafe() {
        return Optional.ofNullable(this.isPrivUsersManagedByDataSafe);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuditPolicyManagementAuditCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String auditPolicyName;
        private @Nullable List<AuditPolicyManagementAuditConditionEnableCondition> enableConditions;
        private @Nullable Boolean isDataSafeServiceAccountAudited;
        private @Nullable Boolean isEnabled;
        private @Nullable Boolean isPrivUsersManagedByDataSafe;
        public Builder() {}
        public Builder(AuditPolicyManagementAuditCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditPolicyName = defaults.auditPolicyName;
    	      this.enableConditions = defaults.enableConditions;
    	      this.isDataSafeServiceAccountAudited = defaults.isDataSafeServiceAccountAudited;
    	      this.isEnabled = defaults.isEnabled;
    	      this.isPrivUsersManagedByDataSafe = defaults.isPrivUsersManagedByDataSafe;
        }

        @CustomType.Setter
        public Builder auditPolicyName(@Nullable String auditPolicyName) {

            this.auditPolicyName = auditPolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder enableConditions(@Nullable List<AuditPolicyManagementAuditConditionEnableCondition> enableConditions) {

            this.enableConditions = enableConditions;
            return this;
        }
        public Builder enableConditions(AuditPolicyManagementAuditConditionEnableCondition... enableConditions) {
            return enableConditions(List.of(enableConditions));
        }
        @CustomType.Setter
        public Builder isDataSafeServiceAccountAudited(@Nullable Boolean isDataSafeServiceAccountAudited) {

            this.isDataSafeServiceAccountAudited = isDataSafeServiceAccountAudited;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isPrivUsersManagedByDataSafe(@Nullable Boolean isPrivUsersManagedByDataSafe) {

            this.isPrivUsersManagedByDataSafe = isPrivUsersManagedByDataSafe;
            return this;
        }
        public AuditPolicyManagementAuditCondition build() {
            final var _resultValue = new AuditPolicyManagementAuditCondition();
            _resultValue.auditPolicyName = auditPolicyName;
            _resultValue.enableConditions = enableConditions;
            _resultValue.isDataSafeServiceAccountAudited = isDataSafeServiceAccountAudited;
            _resultValue.isEnabled = isEnabled;
            _resultValue.isPrivUsersManagedByDataSafe = isPrivUsersManagedByDataSafe;
            return _resultValue;
        }
    }
}
