// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAlertsAlertCollectionItem {
    private String alertId;
    /**
     * @return Type of the alert. Indicates the Data Safe feature triggering the alert.
     * 
     */
    private String alertType;
    /**
     * @return A comment for the alert. Entered by the user.
     * 
     */
    private String comment;
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The description of the alert.
     * 
     */
    private String description;
    /**
     * @return The display name of the alert.
     * 
     */
    private String displayName;
    /**
     * @return Map that contains maps of values. Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    private Map<String,Object> featureDetails;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return A filter to return alert by it&#39;s OCID.
     * 
     */
    private String id;
    /**
     * @return The operation (event) that triggered alert.
     * 
     */
    private String operation;
    /**
     * @return The result of the operation (event) that triggered alert.
     * 
     */
    private String operationStatus;
    /**
     * @return Creation date and time of the operation that triggered alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String operationTime;
    /**
     * @return The OCID of the policy that triggered alert.
     * 
     */
    private String policyId;
    /**
     * @return The resource endpoint that triggered the alert.
     * 
     */
    private String resourceName;
    /**
     * @return Severity level of the alert.
     * 
     */
    private String severity;
    /**
     * @return The current state of the alert.
     * 
     */
    private String state;
    /**
     * @return The status of the alert.
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return Array of OCIDs of the target database which are associated with the alert.
     * 
     */
    private List<String> targetIds;
    /**
     * @return Array of names of the target database.
     * 
     */
    private List<String> targetNames;
    /**
     * @return Creation date and time of the alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return Last date and time the alert was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeUpdated;

    private GetAlertsAlertCollectionItem() {}
    public String alertId() {
        return this.alertId;
    }
    /**
     * @return Type of the alert. Indicates the Data Safe feature triggering the alert.
     * 
     */
    public String alertType() {
        return this.alertType;
    }
    /**
     * @return A comment for the alert. Entered by the user.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the alert.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the alert.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Map that contains maps of values. Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    public Map<String,Object> featureDetails() {
        return this.featureDetails;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return A filter to return alert by it&#39;s OCID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The operation (event) that triggered alert.
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return The result of the operation (event) that triggered alert.
     * 
     */
    public String operationStatus() {
        return this.operationStatus;
    }
    /**
     * @return Creation date and time of the operation that triggered alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String operationTime() {
        return this.operationTime;
    }
    /**
     * @return The OCID of the policy that triggered alert.
     * 
     */
    public String policyId() {
        return this.policyId;
    }
    /**
     * @return The resource endpoint that triggered the alert.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return Severity level of the alert.
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return The current state of the alert.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The status of the alert.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Array of OCIDs of the target database which are associated with the alert.
     * 
     */
    public List<String> targetIds() {
        return this.targetIds;
    }
    /**
     * @return Array of names of the target database.
     * 
     */
    public List<String> targetNames() {
        return this.targetNames;
    }
    /**
     * @return Creation date and time of the alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Last date and time the alert was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsAlertCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alertId;
        private String alertType;
        private String comment;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> featureDetails;
        private Map<String,Object> freeformTags;
        private String id;
        private String operation;
        private String operationStatus;
        private String operationTime;
        private String policyId;
        private String resourceName;
        private String severity;
        private String state;
        private String status;
        private Map<String,Object> systemTags;
        private List<String> targetIds;
        private List<String> targetNames;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetAlertsAlertCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertId = defaults.alertId;
    	      this.alertType = defaults.alertType;
    	      this.comment = defaults.comment;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.featureDetails = defaults.featureDetails;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.operation = defaults.operation;
    	      this.operationStatus = defaults.operationStatus;
    	      this.operationTime = defaults.operationTime;
    	      this.policyId = defaults.policyId;
    	      this.resourceName = defaults.resourceName;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.targetIds = defaults.targetIds;
    	      this.targetNames = defaults.targetNames;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder alertId(String alertId) {
            if (alertId == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "alertId");
            }
            this.alertId = alertId;
            return this;
        }
        @CustomType.Setter
        public Builder alertType(String alertType) {
            if (alertType == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "alertType");
            }
            this.alertType = alertType;
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder featureDetails(Map<String,Object> featureDetails) {
            if (featureDetails == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "featureDetails");
            }
            this.featureDetails = featureDetails;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            if (operation == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "operation");
            }
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder operationStatus(String operationStatus) {
            if (operationStatus == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "operationStatus");
            }
            this.operationStatus = operationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder operationTime(String operationTime) {
            if (operationTime == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "operationTime");
            }
            this.operationTime = operationTime;
            return this;
        }
        @CustomType.Setter
        public Builder policyId(String policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(String resourceName) {
            if (resourceName == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "resourceName");
            }
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            if (severity == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "severity");
            }
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetIds(List<String> targetIds) {
            if (targetIds == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "targetIds");
            }
            this.targetIds = targetIds;
            return this;
        }
        public Builder targetIds(String... targetIds) {
            return targetIds(List.of(targetIds));
        }
        @CustomType.Setter
        public Builder targetNames(List<String> targetNames) {
            if (targetNames == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "targetNames");
            }
            this.targetNames = targetNames;
            return this;
        }
        public Builder targetNames(String... targetNames) {
            return targetNames(List.of(targetNames));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetAlertsAlertCollectionItem build() {
            final var _resultValue = new GetAlertsAlertCollectionItem();
            _resultValue.alertId = alertId;
            _resultValue.alertType = alertType;
            _resultValue.comment = comment;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.featureDetails = featureDetails;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.operation = operation;
            _resultValue.operationStatus = operationStatus;
            _resultValue.operationTime = operationTime;
            _resultValue.policyId = policyId;
            _resultValue.resourceName = resourceName;
            _resultValue.severity = severity;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.targetIds = targetIds;
            _resultValue.targetNames = targetNames;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
