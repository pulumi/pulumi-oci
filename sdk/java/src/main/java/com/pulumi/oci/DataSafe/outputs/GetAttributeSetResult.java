// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAttributeSetResult {
    private String attributeSetId;
    /**
     * @return The type of attribute set.
     * 
     */
    private String attributeSetType;
    /**
     * @return The list of values in an attribute set
     * 
     */
    private List<String> attributeSetValues;
    /**
     * @return The OCID of the compartment where the attribute set is stored.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of an attribute set.
     * 
     */
    private String description;
    /**
     * @return The display name of an attribute set. The name does not have to be unique, and is changeable.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of an attribute set.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the attribute set is in use by other resource.
     * 
     */
    private String inUse;
    /**
     * @return A boolean flag indicating to list user defined or seeded attribute sets.
     * 
     */
    private Boolean isUserDefined;
    /**
     * @return The current state of an attribute set.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time an attribute set was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time an attribute set was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeUpdated;

    private GetAttributeSetResult() {}
    public String attributeSetId() {
        return this.attributeSetId;
    }
    /**
     * @return The type of attribute set.
     * 
     */
    public String attributeSetType() {
        return this.attributeSetType;
    }
    /**
     * @return The list of values in an attribute set
     * 
     */
    public List<String> attributeSetValues() {
        return this.attributeSetValues;
    }
    /**
     * @return The OCID of the compartment where the attribute set is stored.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of an attribute set.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of an attribute set. The name does not have to be unique, and is changeable.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of an attribute set.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the attribute set is in use by other resource.
     * 
     */
    public String inUse() {
        return this.inUse;
    }
    /**
     * @return A boolean flag indicating to list user defined or seeded attribute sets.
     * 
     */
    public Boolean isUserDefined() {
        return this.isUserDefined;
    }
    /**
     * @return The current state of an attribute set.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time an attribute set was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time an attribute set was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttributeSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attributeSetId;
        private String attributeSetType;
        private List<String> attributeSetValues;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String inUse;
        private Boolean isUserDefined;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetAttributeSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeSetId = defaults.attributeSetId;
    	      this.attributeSetType = defaults.attributeSetType;
    	      this.attributeSetValues = defaults.attributeSetValues;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.inUse = defaults.inUse;
    	      this.isUserDefined = defaults.isUserDefined;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder attributeSetId(String attributeSetId) {
            if (attributeSetId == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "attributeSetId");
            }
            this.attributeSetId = attributeSetId;
            return this;
        }
        @CustomType.Setter
        public Builder attributeSetType(String attributeSetType) {
            if (attributeSetType == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "attributeSetType");
            }
            this.attributeSetType = attributeSetType;
            return this;
        }
        @CustomType.Setter
        public Builder attributeSetValues(List<String> attributeSetValues) {
            if (attributeSetValues == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "attributeSetValues");
            }
            this.attributeSetValues = attributeSetValues;
            return this;
        }
        public Builder attributeSetValues(String... attributeSetValues) {
            return attributeSetValues(List.of(attributeSetValues));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inUse(String inUse) {
            if (inUse == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "inUse");
            }
            this.inUse = inUse;
            return this;
        }
        @CustomType.Setter
        public Builder isUserDefined(Boolean isUserDefined) {
            if (isUserDefined == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "isUserDefined");
            }
            this.isUserDefined = isUserDefined;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetAttributeSetResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetAttributeSetResult build() {
            final var _resultValue = new GetAttributeSetResult();
            _resultValue.attributeSetId = attributeSetId;
            _resultValue.attributeSetType = attributeSetType;
            _resultValue.attributeSetValues = attributeSetValues;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.inUse = inUse;
            _resultValue.isUserDefined = isUserDefined;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
