// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetAuditEventAnalyticItemDimension;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuditEventAnalyticItem {
    /**
     * @return Total count of aggregated value.
     * 
     */
    private @Nullable String count;
    /**
     * @return Details of aggregation dimensions used for summarizing audit events.
     * 
     */
    private @Nullable List<GetAuditEventAnalyticItemDimension> dimensions;
    /**
     * @return Display Name of aggregation field.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Name of the aggregation.
     * 
     */
    private @Nullable String metricName;
    /**
     * @return An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeEnded;
    /**
     * @return An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeStarted;

    private GetAuditEventAnalyticItem() {}
    /**
     * @return Total count of aggregated value.
     * 
     */
    public Optional<String> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * @return Details of aggregation dimensions used for summarizing audit events.
     * 
     */
    public List<GetAuditEventAnalyticItemDimension> dimensions() {
        return this.dimensions == null ? List.of() : this.dimensions;
    }
    /**
     * @return Display Name of aggregation field.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Name of the aggregation.
     * 
     */
    public Optional<String> metricName() {
        return Optional.ofNullable(this.metricName);
    }
    /**
     * @return An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }
    /**
     * @return An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditEventAnalyticItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String count;
        private @Nullable List<GetAuditEventAnalyticItemDimension> dimensions;
        private @Nullable String displayName;
        private @Nullable String metricName;
        private @Nullable String timeEnded;
        private @Nullable String timeStarted;
        public Builder() {}
        public Builder(GetAuditEventAnalyticItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.dimensions = defaults.dimensions;
    	      this.displayName = defaults.displayName;
    	      this.metricName = defaults.metricName;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder count(@Nullable String count) {
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder dimensions(@Nullable List<GetAuditEventAnalyticItemDimension> dimensions) {
            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(GetAuditEventAnalyticItemDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder metricName(@Nullable String metricName) {
            this.metricName = metricName;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnded(@Nullable String timeEnded) {
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        public GetAuditEventAnalyticItem build() {
            final var o = new GetAuditEventAnalyticItem();
            o.count = count;
            o.dimensions = dimensions;
            o.displayName = displayName;
            o.metricName = metricName;
            o.timeEnded = timeEnded;
            o.timeStarted = timeStarted;
            return o;
        }
    }
}
