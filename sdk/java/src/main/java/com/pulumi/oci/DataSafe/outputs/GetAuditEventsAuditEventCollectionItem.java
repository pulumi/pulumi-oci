// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuditEventsAuditEventCollectionItem {
    /**
     * @return The action taken for this audit event.
     * 
     */
    private @Nullable String actionTaken;
    /**
     * @return The time of the audit event occurrence in the target database.
     * 
     */
    private @Nullable String auditEventTime;
    /**
     * @return The location of the audit. Currently the value is audit table.
     * 
     */
    private @Nullable String auditLocation;
    /**
     * @return Comma-seperated list of audit policies that caused the current audit event.
     * 
     */
    private @Nullable String auditPolicies;
    /**
     * @return The OCID of the audit trail that generated this audit event. To be noted, this field has been deprecated.
     * 
     */
    private @Nullable String auditTrailId;
    /**
     * @return The type of the auditing.
     * 
     */
    private @Nullable String auditType;
    /**
     * @return The name of the host machine from which the session was spawned.
     * 
     */
    private @Nullable String clientHostname;
    /**
     * @return The client identifier in each Oracle session.
     * 
     */
    private @Nullable String clientId;
    /**
     * @return The IP address of the host machine from which the session was spawned.
     * 
     */
    private @Nullable String clientIp;
    /**
     * @return The application from which the audit event was generated. Examples SQL Plus or SQL Developer.
     * 
     */
    private @Nullable String clientProgram;
    /**
     * @return List of bind variables associated with the command text.
     * 
     */
    private @Nullable String commandParam;
    /**
     * @return The SQL associated with the audit event.
     * 
     */
    private @Nullable String commandText;
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The type of the target database that was audited. Allowed values are
     * * DATABASE_CLOUD_SERVICE - Represents Oracle Database Cloud Services.
     * * AUTONOMOUS_DATABASE - Represents Oracle Autonomous Databases.
     * * INSTALLED_DATABASE - Represents databases running on-premises or on compute instances.
     * 
     */
    private @Nullable String databaseType;
    /**
     * @return The name of the database user whose actions were audited.
     * 
     */
    private @Nullable String dbUserName;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Oracle Error code generated by the action. Zero indicates the action was successful.
     * 
     */
    private @Nullable String errorCode;
    /**
     * @return The detailed message on why the Error occurred.
     * 
     */
    private @Nullable String errorMessage;
    /**
     * @return The name of the detail action executed by the user on the target database. i.e ALTER SEQUENCE, CREATE TRIGGER, CREATE INDEX.
     * 
     */
    private @Nullable String eventName;
    /**
     * @return List of all other attributes of the audit event seperated by a colon other than the one returned in audit record.
     * 
     */
    private @Nullable String extendedEventAttributes;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the audit event.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether an alert was raised for this audit event.
     * 
     */
    private @Nullable Boolean isAlerted;
    /**
     * @return The name of the object affected by the action.
     * 
     */
    private @Nullable String object;
    /**
     * @return The schema name of the object affected by the action.
     * 
     */
    private @Nullable String objectOwner;
    /**
     * @return The type of the object in the source database affected by the action. i.e PL/SQL, SYNONYM, PACKAGE BODY.
     * 
     */
    private @Nullable String objectType;
    /**
     * @return The name of the action executed by the user on the target database. i.e ALTER, CREATE, DROP.
     * 
     */
    private @Nullable String operation;
    /**
     * @return Indicates whether the operation was a success or a failure.
     * 
     */
    private @Nullable String operationStatus;
    /**
     * @return The operating system terminal of the user session.
     * 
     */
    private @Nullable String osTerminal;
    /**
     * @return The name of the operating system user for the database session.
     * 
     */
    private @Nullable String osUserName;
    /**
     * @return The class of the target that was audited.
     * 
     */
    private @Nullable String targetClass;
    /**
     * @return The OCID of the target database that was audited.
     * 
     */
    private @Nullable String targetId;
    /**
     * @return The name of the target database that was audited.
     * 
     */
    private @Nullable String targetName;
    /**
     * @return The timestamp when this audit event was collected from the target database by Data Safe.
     * 
     */
    private @Nullable String timeCollected;

    private GetAuditEventsAuditEventCollectionItem() {}
    /**
     * @return The action taken for this audit event.
     * 
     */
    public Optional<String> actionTaken() {
        return Optional.ofNullable(this.actionTaken);
    }
    /**
     * @return The time of the audit event occurrence in the target database.
     * 
     */
    public Optional<String> auditEventTime() {
        return Optional.ofNullable(this.auditEventTime);
    }
    /**
     * @return The location of the audit. Currently the value is audit table.
     * 
     */
    public Optional<String> auditLocation() {
        return Optional.ofNullable(this.auditLocation);
    }
    /**
     * @return Comma-seperated list of audit policies that caused the current audit event.
     * 
     */
    public Optional<String> auditPolicies() {
        return Optional.ofNullable(this.auditPolicies);
    }
    /**
     * @return The OCID of the audit trail that generated this audit event. To be noted, this field has been deprecated.
     * 
     */
    public Optional<String> auditTrailId() {
        return Optional.ofNullable(this.auditTrailId);
    }
    /**
     * @return The type of the auditing.
     * 
     */
    public Optional<String> auditType() {
        return Optional.ofNullable(this.auditType);
    }
    /**
     * @return The name of the host machine from which the session was spawned.
     * 
     */
    public Optional<String> clientHostname() {
        return Optional.ofNullable(this.clientHostname);
    }
    /**
     * @return The client identifier in each Oracle session.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * @return The IP address of the host machine from which the session was spawned.
     * 
     */
    public Optional<String> clientIp() {
        return Optional.ofNullable(this.clientIp);
    }
    /**
     * @return The application from which the audit event was generated. Examples SQL Plus or SQL Developer.
     * 
     */
    public Optional<String> clientProgram() {
        return Optional.ofNullable(this.clientProgram);
    }
    /**
     * @return List of bind variables associated with the command text.
     * 
     */
    public Optional<String> commandParam() {
        return Optional.ofNullable(this.commandParam);
    }
    /**
     * @return The SQL associated with the audit event.
     * 
     */
    public Optional<String> commandText() {
        return Optional.ofNullable(this.commandText);
    }
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The type of the target database that was audited. Allowed values are
     * * DATABASE_CLOUD_SERVICE - Represents Oracle Database Cloud Services.
     * * AUTONOMOUS_DATABASE - Represents Oracle Autonomous Databases.
     * * INSTALLED_DATABASE - Represents databases running on-premises or on compute instances.
     * 
     */
    public Optional<String> databaseType() {
        return Optional.ofNullable(this.databaseType);
    }
    /**
     * @return The name of the database user whose actions were audited.
     * 
     */
    public Optional<String> dbUserName() {
        return Optional.ofNullable(this.dbUserName);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Oracle Error code generated by the action. Zero indicates the action was successful.
     * 
     */
    public Optional<String> errorCode() {
        return Optional.ofNullable(this.errorCode);
    }
    /**
     * @return The detailed message on why the Error occurred.
     * 
     */
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }
    /**
     * @return The name of the detail action executed by the user on the target database. i.e ALTER SEQUENCE, CREATE TRIGGER, CREATE INDEX.
     * 
     */
    public Optional<String> eventName() {
        return Optional.ofNullable(this.eventName);
    }
    /**
     * @return List of all other attributes of the audit event seperated by a colon other than the one returned in audit record.
     * 
     */
    public Optional<String> extendedEventAttributes() {
        return Optional.ofNullable(this.extendedEventAttributes);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the audit event.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether an alert was raised for this audit event.
     * 
     */
    public Optional<Boolean> isAlerted() {
        return Optional.ofNullable(this.isAlerted);
    }
    /**
     * @return The name of the object affected by the action.
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return The schema name of the object affected by the action.
     * 
     */
    public Optional<String> objectOwner() {
        return Optional.ofNullable(this.objectOwner);
    }
    /**
     * @return The type of the object in the source database affected by the action. i.e PL/SQL, SYNONYM, PACKAGE BODY.
     * 
     */
    public Optional<String> objectType() {
        return Optional.ofNullable(this.objectType);
    }
    /**
     * @return The name of the action executed by the user on the target database. i.e ALTER, CREATE, DROP.
     * 
     */
    public Optional<String> operation() {
        return Optional.ofNullable(this.operation);
    }
    /**
     * @return Indicates whether the operation was a success or a failure.
     * 
     */
    public Optional<String> operationStatus() {
        return Optional.ofNullable(this.operationStatus);
    }
    /**
     * @return The operating system terminal of the user session.
     * 
     */
    public Optional<String> osTerminal() {
        return Optional.ofNullable(this.osTerminal);
    }
    /**
     * @return The name of the operating system user for the database session.
     * 
     */
    public Optional<String> osUserName() {
        return Optional.ofNullable(this.osUserName);
    }
    /**
     * @return The class of the target that was audited.
     * 
     */
    public Optional<String> targetClass() {
        return Optional.ofNullable(this.targetClass);
    }
    /**
     * @return The OCID of the target database that was audited.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return The name of the target database that was audited.
     * 
     */
    public Optional<String> targetName() {
        return Optional.ofNullable(this.targetName);
    }
    /**
     * @return The timestamp when this audit event was collected from the target database by Data Safe.
     * 
     */
    public Optional<String> timeCollected() {
        return Optional.ofNullable(this.timeCollected);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditEventsAuditEventCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String actionTaken;
        private @Nullable String auditEventTime;
        private @Nullable String auditLocation;
        private @Nullable String auditPolicies;
        private @Nullable String auditTrailId;
        private @Nullable String auditType;
        private @Nullable String clientHostname;
        private @Nullable String clientId;
        private @Nullable String clientIp;
        private @Nullable String clientProgram;
        private @Nullable String commandParam;
        private @Nullable String commandText;
        private @Nullable String compartmentId;
        private @Nullable String databaseType;
        private @Nullable String dbUserName;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String errorCode;
        private @Nullable String errorMessage;
        private @Nullable String eventName;
        private @Nullable String extendedEventAttributes;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isAlerted;
        private @Nullable String object;
        private @Nullable String objectOwner;
        private @Nullable String objectType;
        private @Nullable String operation;
        private @Nullable String operationStatus;
        private @Nullable String osTerminal;
        private @Nullable String osUserName;
        private @Nullable String targetClass;
        private @Nullable String targetId;
        private @Nullable String targetName;
        private @Nullable String timeCollected;
        public Builder() {}
        public Builder(GetAuditEventsAuditEventCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionTaken = defaults.actionTaken;
    	      this.auditEventTime = defaults.auditEventTime;
    	      this.auditLocation = defaults.auditLocation;
    	      this.auditPolicies = defaults.auditPolicies;
    	      this.auditTrailId = defaults.auditTrailId;
    	      this.auditType = defaults.auditType;
    	      this.clientHostname = defaults.clientHostname;
    	      this.clientId = defaults.clientId;
    	      this.clientIp = defaults.clientIp;
    	      this.clientProgram = defaults.clientProgram;
    	      this.commandParam = defaults.commandParam;
    	      this.commandText = defaults.commandText;
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseType = defaults.databaseType;
    	      this.dbUserName = defaults.dbUserName;
    	      this.definedTags = defaults.definedTags;
    	      this.errorCode = defaults.errorCode;
    	      this.errorMessage = defaults.errorMessage;
    	      this.eventName = defaults.eventName;
    	      this.extendedEventAttributes = defaults.extendedEventAttributes;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAlerted = defaults.isAlerted;
    	      this.object = defaults.object;
    	      this.objectOwner = defaults.objectOwner;
    	      this.objectType = defaults.objectType;
    	      this.operation = defaults.operation;
    	      this.operationStatus = defaults.operationStatus;
    	      this.osTerminal = defaults.osTerminal;
    	      this.osUserName = defaults.osUserName;
    	      this.targetClass = defaults.targetClass;
    	      this.targetId = defaults.targetId;
    	      this.targetName = defaults.targetName;
    	      this.timeCollected = defaults.timeCollected;
        }

        @CustomType.Setter
        public Builder actionTaken(@Nullable String actionTaken) {
            this.actionTaken = actionTaken;
            return this;
        }
        @CustomType.Setter
        public Builder auditEventTime(@Nullable String auditEventTime) {
            this.auditEventTime = auditEventTime;
            return this;
        }
        @CustomType.Setter
        public Builder auditLocation(@Nullable String auditLocation) {
            this.auditLocation = auditLocation;
            return this;
        }
        @CustomType.Setter
        public Builder auditPolicies(@Nullable String auditPolicies) {
            this.auditPolicies = auditPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder auditTrailId(@Nullable String auditTrailId) {
            this.auditTrailId = auditTrailId;
            return this;
        }
        @CustomType.Setter
        public Builder auditType(@Nullable String auditType) {
            this.auditType = auditType;
            return this;
        }
        @CustomType.Setter
        public Builder clientHostname(@Nullable String clientHostname) {
            this.clientHostname = clientHostname;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientIp(@Nullable String clientIp) {
            this.clientIp = clientIp;
            return this;
        }
        @CustomType.Setter
        public Builder clientProgram(@Nullable String clientProgram) {
            this.clientProgram = clientProgram;
            return this;
        }
        @CustomType.Setter
        public Builder commandParam(@Nullable String commandParam) {
            this.commandParam = commandParam;
            return this;
        }
        @CustomType.Setter
        public Builder commandText(@Nullable String commandText) {
            this.commandText = commandText;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseType(@Nullable String databaseType) {
            this.databaseType = databaseType;
            return this;
        }
        @CustomType.Setter
        public Builder dbUserName(@Nullable String dbUserName) {
            this.dbUserName = dbUserName;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder errorCode(@Nullable String errorCode) {
            this.errorCode = errorCode;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(@Nullable String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder eventName(@Nullable String eventName) {
            this.eventName = eventName;
            return this;
        }
        @CustomType.Setter
        public Builder extendedEventAttributes(@Nullable String extendedEventAttributes) {
            this.extendedEventAttributes = extendedEventAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAlerted(@Nullable Boolean isAlerted) {
            this.isAlerted = isAlerted;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder objectOwner(@Nullable String objectOwner) {
            this.objectOwner = objectOwner;
            return this;
        }
        @CustomType.Setter
        public Builder objectType(@Nullable String objectType) {
            this.objectType = objectType;
            return this;
        }
        @CustomType.Setter
        public Builder operation(@Nullable String operation) {
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder operationStatus(@Nullable String operationStatus) {
            this.operationStatus = operationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder osTerminal(@Nullable String osTerminal) {
            this.osTerminal = osTerminal;
            return this;
        }
        @CustomType.Setter
        public Builder osUserName(@Nullable String osUserName) {
            this.osUserName = osUserName;
            return this;
        }
        @CustomType.Setter
        public Builder targetClass(@Nullable String targetClass) {
            this.targetClass = targetClass;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder targetName(@Nullable String targetName) {
            this.targetName = targetName;
            return this;
        }
        @CustomType.Setter
        public Builder timeCollected(@Nullable String timeCollected) {
            this.timeCollected = timeCollected;
            return this;
        }
        public GetAuditEventsAuditEventCollectionItem build() {
            final var o = new GetAuditEventsAuditEventCollectionItem();
            o.actionTaken = actionTaken;
            o.auditEventTime = auditEventTime;
            o.auditLocation = auditLocation;
            o.auditPolicies = auditPolicies;
            o.auditTrailId = auditTrailId;
            o.auditType = auditType;
            o.clientHostname = clientHostname;
            o.clientId = clientId;
            o.clientIp = clientIp;
            o.clientProgram = clientProgram;
            o.commandParam = commandParam;
            o.commandText = commandText;
            o.compartmentId = compartmentId;
            o.databaseType = databaseType;
            o.dbUserName = dbUserName;
            o.definedTags = definedTags;
            o.errorCode = errorCode;
            o.errorMessage = errorMessage;
            o.eventName = eventName;
            o.extendedEventAttributes = extendedEventAttributes;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isAlerted = isAlerted;
            o.object = object;
            o.objectOwner = objectOwner;
            o.objectType = objectType;
            o.operation = operation;
            o.operationStatus = operationStatus;
            o.osTerminal = osTerminal;
            o.osUserName = osUserName;
            o.targetClass = targetClass;
            o.targetId = targetId;
            o.targetName = targetName;
            o.timeCollected = timeCollected;
            return o;
        }
    }
}
