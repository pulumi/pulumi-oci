// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetAuditPoliciesAuditPolicyCollectionItemAuditCondition;
import com.pulumi.oci.DataSafe.outputs.GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAuditPoliciesAuditPolicyCollectionItem {
    /**
     * @return Lists the audit policy provisioning conditions for the target database.
     * 
     */
    private List<GetAuditPoliciesAuditPolicyCollectionItemAuditCondition> auditConditions;
    /**
     * @return An optional filter to return only resources that match the specified id.
     * 
     */
    private String auditPolicyId;
    /**
     * @return Represents all available audit policy specifications relevant for the target database. For more details on available audit polcies, refer to [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827).
     * 
     */
    private List<GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification> auditSpecifications;
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of the audit policy.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the audit policy.
     * 
     */
    private String id;
    /**
     * @return Option provided to users at the target to indicate whether the Data Safe service account has to be excluded while provisioning the audit policies.
     * 
     */
    private Boolean isDataSafeServiceAccountExcluded;
    /**
     * @return Details about the current state of the audit policy in Data Safe.
     * 
     */
    private String lifecycleDetails;
    private Integer provisionTrigger;
    private Integer retrieveFromTargetTrigger;
    /**
     * @return The current state of the audit policy.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    private String targetId;
    /**
     * @return The time the the audit policy was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return Indicates the last provisioning time of audit policies on the target, in the format defined by RFC3339.
     * 
     */
    private String timeLastProvisioned;
    /**
     * @return The time when the audit policies was last retrieved from this target, in the format defined by RFC3339.
     * 
     */
    private String timeLastRetrieved;
    /**
     * @return The last date and time the audit policy was updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetAuditPoliciesAuditPolicyCollectionItem() {}
    /**
     * @return Lists the audit policy provisioning conditions for the target database.
     * 
     */
    public List<GetAuditPoliciesAuditPolicyCollectionItemAuditCondition> auditConditions() {
        return this.auditConditions;
    }
    /**
     * @return An optional filter to return only resources that match the specified id.
     * 
     */
    public String auditPolicyId() {
        return this.auditPolicyId;
    }
    /**
     * @return Represents all available audit policy specifications relevant for the target database. For more details on available audit polcies, refer to [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827).
     * 
     */
    public List<GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification> auditSpecifications() {
        return this.auditSpecifications;
    }
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the audit policy.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the audit policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Option provided to users at the target to indicate whether the Data Safe service account has to be excluded while provisioning the audit policies.
     * 
     */
    public Boolean isDataSafeServiceAccountExcluded() {
        return this.isDataSafeServiceAccountExcluded;
    }
    /**
     * @return Details about the current state of the audit policy in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public Integer provisionTrigger() {
        return this.provisionTrigger;
    }
    public Integer retrieveFromTargetTrigger() {
        return this.retrieveFromTargetTrigger;
    }
    /**
     * @return The current state of the audit policy.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The time the the audit policy was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Indicates the last provisioning time of audit policies on the target, in the format defined by RFC3339.
     * 
     */
    public String timeLastProvisioned() {
        return this.timeLastProvisioned;
    }
    /**
     * @return The time when the audit policies was last retrieved from this target, in the format defined by RFC3339.
     * 
     */
    public String timeLastRetrieved() {
        return this.timeLastRetrieved;
    }
    /**
     * @return The last date and time the audit policy was updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditPoliciesAuditPolicyCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAuditPoliciesAuditPolicyCollectionItemAuditCondition> auditConditions;
        private String auditPolicyId;
        private List<GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification> auditSpecifications;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isDataSafeServiceAccountExcluded;
        private String lifecycleDetails;
        private Integer provisionTrigger;
        private Integer retrieveFromTargetTrigger;
        private String state;
        private Map<String,String> systemTags;
        private String targetId;
        private String timeCreated;
        private String timeLastProvisioned;
        private String timeLastRetrieved;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetAuditPoliciesAuditPolicyCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditConditions = defaults.auditConditions;
    	      this.auditPolicyId = defaults.auditPolicyId;
    	      this.auditSpecifications = defaults.auditSpecifications;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isDataSafeServiceAccountExcluded = defaults.isDataSafeServiceAccountExcluded;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.provisionTrigger = defaults.provisionTrigger;
    	      this.retrieveFromTargetTrigger = defaults.retrieveFromTargetTrigger;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastProvisioned = defaults.timeLastProvisioned;
    	      this.timeLastRetrieved = defaults.timeLastRetrieved;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder auditConditions(List<GetAuditPoliciesAuditPolicyCollectionItemAuditCondition> auditConditions) {
            if (auditConditions == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "auditConditions");
            }
            this.auditConditions = auditConditions;
            return this;
        }
        public Builder auditConditions(GetAuditPoliciesAuditPolicyCollectionItemAuditCondition... auditConditions) {
            return auditConditions(List.of(auditConditions));
        }
        @CustomType.Setter
        public Builder auditPolicyId(String auditPolicyId) {
            if (auditPolicyId == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "auditPolicyId");
            }
            this.auditPolicyId = auditPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder auditSpecifications(List<GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification> auditSpecifications) {
            if (auditSpecifications == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "auditSpecifications");
            }
            this.auditSpecifications = auditSpecifications;
            return this;
        }
        public Builder auditSpecifications(GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification... auditSpecifications) {
            return auditSpecifications(List.of(auditSpecifications));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDataSafeServiceAccountExcluded(Boolean isDataSafeServiceAccountExcluded) {
            if (isDataSafeServiceAccountExcluded == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "isDataSafeServiceAccountExcluded");
            }
            this.isDataSafeServiceAccountExcluded = isDataSafeServiceAccountExcluded;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder provisionTrigger(Integer provisionTrigger) {
            if (provisionTrigger == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "provisionTrigger");
            }
            this.provisionTrigger = provisionTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder retrieveFromTargetTrigger(Integer retrieveFromTargetTrigger) {
            if (retrieveFromTargetTrigger == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "retrieveFromTargetTrigger");
            }
            this.retrieveFromTargetTrigger = retrieveFromTargetTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastProvisioned(String timeLastProvisioned) {
            if (timeLastProvisioned == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "timeLastProvisioned");
            }
            this.timeLastProvisioned = timeLastProvisioned;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastRetrieved(String timeLastRetrieved) {
            if (timeLastRetrieved == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "timeLastRetrieved");
            }
            this.timeLastRetrieved = timeLastRetrieved;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetAuditPoliciesAuditPolicyCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetAuditPoliciesAuditPolicyCollectionItem build() {
            final var _resultValue = new GetAuditPoliciesAuditPolicyCollectionItem();
            _resultValue.auditConditions = auditConditions;
            _resultValue.auditPolicyId = auditPolicyId;
            _resultValue.auditSpecifications = auditSpecifications;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isDataSafeServiceAccountExcluded = isDataSafeServiceAccountExcluded;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.provisionTrigger = provisionTrigger;
            _resultValue.retrieveFromTargetTrigger = retrieveFromTargetTrigger;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.targetId = targetId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastProvisioned = timeLastProvisioned;
            _resultValue.timeLastRetrieved = timeLastRetrieved;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
