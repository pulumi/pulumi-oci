// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollection;
import com.pulumi.oci.DataSafe.outputs.GetAuditProfileAvailableAuditVolumesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuditProfileAvailableAuditVolumesResult {
    /**
     * @return The OCID of the audit profile resource.
     * 
     */
    private String auditProfileId;
    /**
     * @return The list of available_audit_volume_collection.
     * 
     */
    private @Nullable List<GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollection> availableAuditVolumeCollections;
    private @Nullable List<GetAuditProfileAvailableAuditVolumesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String monthInConsiderationGreaterThan;
    private @Nullable String monthInConsiderationLessThan;
    /**
     * @return Audit trail location on the target database from where the audit data is being collected by Data Safe.
     * 
     */
    private @Nullable String trailLocation;
    private String workRequestId;

    private GetAuditProfileAvailableAuditVolumesResult() {}
    /**
     * @return The OCID of the audit profile resource.
     * 
     */
    public String auditProfileId() {
        return this.auditProfileId;
    }
    /**
     * @return The list of available_audit_volume_collection.
     * 
     */
    public List<GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollection> availableAuditVolumeCollections() {
        return this.availableAuditVolumeCollections == null ? List.of() : this.availableAuditVolumeCollections;
    }
    public List<GetAuditProfileAvailableAuditVolumesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> monthInConsiderationGreaterThan() {
        return Optional.ofNullable(this.monthInConsiderationGreaterThan);
    }
    public Optional<String> monthInConsiderationLessThan() {
        return Optional.ofNullable(this.monthInConsiderationLessThan);
    }
    /**
     * @return Audit trail location on the target database from where the audit data is being collected by Data Safe.
     * 
     */
    public Optional<String> trailLocation() {
        return Optional.ofNullable(this.trailLocation);
    }
    public String workRequestId() {
        return this.workRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditProfileAvailableAuditVolumesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String auditProfileId;
        private @Nullable List<GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollection> availableAuditVolumeCollections;
        private @Nullable List<GetAuditProfileAvailableAuditVolumesFilter> filters;
        private @Nullable String id;
        private @Nullable String monthInConsiderationGreaterThan;
        private @Nullable String monthInConsiderationLessThan;
        private @Nullable String trailLocation;
        private String workRequestId;
        public Builder() {}
        public Builder(GetAuditProfileAvailableAuditVolumesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditProfileId = defaults.auditProfileId;
    	      this.availableAuditVolumeCollections = defaults.availableAuditVolumeCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.monthInConsiderationGreaterThan = defaults.monthInConsiderationGreaterThan;
    	      this.monthInConsiderationLessThan = defaults.monthInConsiderationLessThan;
    	      this.trailLocation = defaults.trailLocation;
    	      this.workRequestId = defaults.workRequestId;
        }

        @CustomType.Setter
        public Builder auditProfileId(String auditProfileId) {
            this.auditProfileId = Objects.requireNonNull(auditProfileId);
            return this;
        }
        @CustomType.Setter
        public Builder availableAuditVolumeCollections(@Nullable List<GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollection> availableAuditVolumeCollections) {
            this.availableAuditVolumeCollections = availableAuditVolumeCollections;
            return this;
        }
        public Builder availableAuditVolumeCollections(GetAuditProfileAvailableAuditVolumesAvailableAuditVolumeCollection... availableAuditVolumeCollections) {
            return availableAuditVolumeCollections(List.of(availableAuditVolumeCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAuditProfileAvailableAuditVolumesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAuditProfileAvailableAuditVolumesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder monthInConsiderationGreaterThan(@Nullable String monthInConsiderationGreaterThan) {
            this.monthInConsiderationGreaterThan = monthInConsiderationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder monthInConsiderationLessThan(@Nullable String monthInConsiderationLessThan) {
            this.monthInConsiderationLessThan = monthInConsiderationLessThan;
            return this;
        }
        @CustomType.Setter
        public Builder trailLocation(@Nullable String trailLocation) {
            this.trailLocation = trailLocation;
            return this;
        }
        @CustomType.Setter
        public Builder workRequestId(String workRequestId) {
            this.workRequestId = Objects.requireNonNull(workRequestId);
            return this;
        }
        public GetAuditProfileAvailableAuditVolumesResult build() {
            final var o = new GetAuditProfileAvailableAuditVolumesResult();
            o.auditProfileId = auditProfileId;
            o.availableAuditVolumeCollections = availableAuditVolumeCollections;
            o.filters = filters;
            o.id = id;
            o.monthInConsiderationGreaterThan = monthInConsiderationGreaterThan;
            o.monthInConsiderationLessThan = monthInConsiderationLessThan;
            o.trailLocation = trailLocation;
            o.workRequestId = workRequestId;
            return o;
        }
    }
}
