// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetAuditProfileAuditTrail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuditProfileResult {
    /**
     * @return Indicates number of audit records collected by Data Safe in the current calendar month.  Audit records for the Data Safe service account are excluded and are not counted towards your monthly free limit.
     * 
     */
    private @Nullable String auditCollectedVolume;
    /**
     * @return The OCID of the  parent audit.
     * 
     */
    private String auditProfileId;
    /**
     * @return Indicates the list of available audit trails on the target.
     * 
     */
    private @Nullable List<GetAuditProfileAuditTrail> auditTrails;
    private @Nullable Integer changeRetentionTrigger;
    /**
     * @return The OCID of the compartment that contains the audit.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The description of the audit profile.
     * 
     */
    private @Nullable String description;
    /**
     * @return The display name of the audit profile.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the audit profile.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether audit retention settings like online and offline months is set at the target level overriding the global audit retention settings.
     * 
     */
    private @Nullable Boolean isOverrideGlobalRetentionSetting;
    /**
     * @return Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
     * 
     */
    private @Nullable Boolean isPaidUsageEnabled;
    /**
     * @return Details about the current state of the audit profile in Data Safe.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Indicates the number of months the audit records will be stored offline in the Data Safe audit archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in archive, please contact the Oracle Support.
     * 
     */
    private @Nullable Integer offlineMonths;
    /**
     * @return Indicates the number of months the audit records will be stored online in Oracle Data Safe audit repository for immediate reporting and analysis.  Minimum: 1; Maximum:12 months
     * 
     */
    private @Nullable Integer onlineMonths;
    /**
     * @return The current state of the audit profile.
     * 
     */
    private @Nullable String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The OCID of the Data Safe target for which the audit profile is created.
     * 
     */
    private @Nullable String targetId;
    /**
     * @return The date and time the audit profile was created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the audit profile was updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetAuditProfileResult() {}
    /**
     * @return Indicates number of audit records collected by Data Safe in the current calendar month.  Audit records for the Data Safe service account are excluded and are not counted towards your monthly free limit.
     * 
     */
    public Optional<String> auditCollectedVolume() {
        return Optional.ofNullable(this.auditCollectedVolume);
    }
    /**
     * @return The OCID of the  parent audit.
     * 
     */
    public String auditProfileId() {
        return this.auditProfileId;
    }
    /**
     * @return Indicates the list of available audit trails on the target.
     * 
     */
    public List<GetAuditProfileAuditTrail> auditTrails() {
        return this.auditTrails == null ? List.of() : this.auditTrails;
    }
    public Optional<Integer> changeRetentionTrigger() {
        return Optional.ofNullable(this.changeRetentionTrigger);
    }
    /**
     * @return The OCID of the compartment that contains the audit.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The description of the audit profile.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The display name of the audit profile.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the audit profile.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether audit retention settings like online and offline months is set at the target level overriding the global audit retention settings.
     * 
     */
    public Optional<Boolean> isOverrideGlobalRetentionSetting() {
        return Optional.ofNullable(this.isOverrideGlobalRetentionSetting);
    }
    /**
     * @return Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
     * 
     */
    public Optional<Boolean> isPaidUsageEnabled() {
        return Optional.ofNullable(this.isPaidUsageEnabled);
    }
    /**
     * @return Details about the current state of the audit profile in Data Safe.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Indicates the number of months the audit records will be stored offline in the Data Safe audit archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in archive, please contact the Oracle Support.
     * 
     */
    public Optional<Integer> offlineMonths() {
        return Optional.ofNullable(this.offlineMonths);
    }
    /**
     * @return Indicates the number of months the audit records will be stored online in Oracle Data Safe audit repository for immediate reporting and analysis.  Minimum: 1; Maximum:12 months
     * 
     */
    public Optional<Integer> onlineMonths() {
        return Optional.ofNullable(this.onlineMonths);
    }
    /**
     * @return The current state of the audit profile.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The OCID of the Data Safe target for which the audit profile is created.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return The date and time the audit profile was created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the audit profile was updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String auditCollectedVolume;
        private String auditProfileId;
        private @Nullable List<GetAuditProfileAuditTrail> auditTrails;
        private @Nullable Integer changeRetentionTrigger;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isOverrideGlobalRetentionSetting;
        private @Nullable Boolean isPaidUsageEnabled;
        private @Nullable String lifecycleDetails;
        private @Nullable Integer offlineMonths;
        private @Nullable Integer onlineMonths;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String targetId;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetAuditProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditCollectedVolume = defaults.auditCollectedVolume;
    	      this.auditProfileId = defaults.auditProfileId;
    	      this.auditTrails = defaults.auditTrails;
    	      this.changeRetentionTrigger = defaults.changeRetentionTrigger;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isOverrideGlobalRetentionSetting = defaults.isOverrideGlobalRetentionSetting;
    	      this.isPaidUsageEnabled = defaults.isPaidUsageEnabled;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.offlineMonths = defaults.offlineMonths;
    	      this.onlineMonths = defaults.onlineMonths;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder auditCollectedVolume(@Nullable String auditCollectedVolume) {
            this.auditCollectedVolume = auditCollectedVolume;
            return this;
        }
        @CustomType.Setter
        public Builder auditProfileId(String auditProfileId) {
            this.auditProfileId = Objects.requireNonNull(auditProfileId);
            return this;
        }
        @CustomType.Setter
        public Builder auditTrails(@Nullable List<GetAuditProfileAuditTrail> auditTrails) {
            this.auditTrails = auditTrails;
            return this;
        }
        public Builder auditTrails(GetAuditProfileAuditTrail... auditTrails) {
            return auditTrails(List.of(auditTrails));
        }
        @CustomType.Setter
        public Builder changeRetentionTrigger(@Nullable Integer changeRetentionTrigger) {
            this.changeRetentionTrigger = changeRetentionTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isOverrideGlobalRetentionSetting(@Nullable Boolean isOverrideGlobalRetentionSetting) {
            this.isOverrideGlobalRetentionSetting = isOverrideGlobalRetentionSetting;
            return this;
        }
        @CustomType.Setter
        public Builder isPaidUsageEnabled(@Nullable Boolean isPaidUsageEnabled) {
            this.isPaidUsageEnabled = isPaidUsageEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder offlineMonths(@Nullable Integer offlineMonths) {
            this.offlineMonths = offlineMonths;
            return this;
        }
        @CustomType.Setter
        public Builder onlineMonths(@Nullable Integer onlineMonths) {
            this.onlineMonths = onlineMonths;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetAuditProfileResult build() {
            final var o = new GetAuditProfileResult();
            o.auditCollectedVolume = auditCollectedVolume;
            o.auditProfileId = auditProfileId;
            o.auditTrails = auditTrails;
            o.changeRetentionTrigger = changeRetentionTrigger;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isOverrideGlobalRetentionSetting = isOverrideGlobalRetentionSetting;
            o.isPaidUsageEnabled = isPaidUsageEnabled;
            o.lifecycleDetails = lifecycleDetails;
            o.offlineMonths = offlineMonths;
            o.onlineMonths = onlineMonths;
            o.state = state;
            o.systemTags = systemTags;
            o.targetId = targetId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
