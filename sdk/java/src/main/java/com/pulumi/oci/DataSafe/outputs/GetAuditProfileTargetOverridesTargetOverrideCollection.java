// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetAuditProfileTargetOverridesTargetOverrideCollectionItem;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuditProfileTargetOverridesTargetOverrideCollection {
    /**
     * @return Array of target database override summary.
     * 
     */
    private List<GetAuditProfileTargetOverridesTargetOverrideCollectionItem> items;
    /**
     * @return Number of target databases within the target database group that conform with the audit profile of the target database group.
     * 
     */
    private Integer targetsConformingCount;
    /**
     * @return Number of target databases within the target database group.
     * 
     */
    private Integer targetsCount;
    /**
     * @return Number of target databases within the target database group that override the audit profile of the target database group.
     * 
     */
    private Integer targetsOverridingCount;
    /**
     * @return Number of target databases within the group that override the offline retention setting of the audit profile for the target database group.
     * 
     */
    private Integer targetsOverridingOfflineMonthsCount;
    /**
     * @return Number of target databases within the group that override the online retention setting of the audit profile for the target database group.
     * 
     */
    private Integer targetsOverridingOnlineMonthsCount;
    /**
     * @return Number of target databases within the group that override the paid usage setting of the audit profile for the target database group.
     * 
     */
    private Integer targetsOverridingPaidUsageCount;

    private GetAuditProfileTargetOverridesTargetOverrideCollection() {}
    /**
     * @return Array of target database override summary.
     * 
     */
    public List<GetAuditProfileTargetOverridesTargetOverrideCollectionItem> items() {
        return this.items;
    }
    /**
     * @return Number of target databases within the target database group that conform with the audit profile of the target database group.
     * 
     */
    public Integer targetsConformingCount() {
        return this.targetsConformingCount;
    }
    /**
     * @return Number of target databases within the target database group.
     * 
     */
    public Integer targetsCount() {
        return this.targetsCount;
    }
    /**
     * @return Number of target databases within the target database group that override the audit profile of the target database group.
     * 
     */
    public Integer targetsOverridingCount() {
        return this.targetsOverridingCount;
    }
    /**
     * @return Number of target databases within the group that override the offline retention setting of the audit profile for the target database group.
     * 
     */
    public Integer targetsOverridingOfflineMonthsCount() {
        return this.targetsOverridingOfflineMonthsCount;
    }
    /**
     * @return Number of target databases within the group that override the online retention setting of the audit profile for the target database group.
     * 
     */
    public Integer targetsOverridingOnlineMonthsCount() {
        return this.targetsOverridingOnlineMonthsCount;
    }
    /**
     * @return Number of target databases within the group that override the paid usage setting of the audit profile for the target database group.
     * 
     */
    public Integer targetsOverridingPaidUsageCount() {
        return this.targetsOverridingPaidUsageCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditProfileTargetOverridesTargetOverrideCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAuditProfileTargetOverridesTargetOverrideCollectionItem> items;
        private Integer targetsConformingCount;
        private Integer targetsCount;
        private Integer targetsOverridingCount;
        private Integer targetsOverridingOfflineMonthsCount;
        private Integer targetsOverridingOnlineMonthsCount;
        private Integer targetsOverridingPaidUsageCount;
        public Builder() {}
        public Builder(GetAuditProfileTargetOverridesTargetOverrideCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.items = defaults.items;
    	      this.targetsConformingCount = defaults.targetsConformingCount;
    	      this.targetsCount = defaults.targetsCount;
    	      this.targetsOverridingCount = defaults.targetsOverridingCount;
    	      this.targetsOverridingOfflineMonthsCount = defaults.targetsOverridingOfflineMonthsCount;
    	      this.targetsOverridingOnlineMonthsCount = defaults.targetsOverridingOnlineMonthsCount;
    	      this.targetsOverridingPaidUsageCount = defaults.targetsOverridingPaidUsageCount;
        }

        @CustomType.Setter
        public Builder items(List<GetAuditProfileTargetOverridesTargetOverrideCollectionItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollection", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetAuditProfileTargetOverridesTargetOverrideCollectionItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder targetsConformingCount(Integer targetsConformingCount) {
            if (targetsConformingCount == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollection", "targetsConformingCount");
            }
            this.targetsConformingCount = targetsConformingCount;
            return this;
        }
        @CustomType.Setter
        public Builder targetsCount(Integer targetsCount) {
            if (targetsCount == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollection", "targetsCount");
            }
            this.targetsCount = targetsCount;
            return this;
        }
        @CustomType.Setter
        public Builder targetsOverridingCount(Integer targetsOverridingCount) {
            if (targetsOverridingCount == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollection", "targetsOverridingCount");
            }
            this.targetsOverridingCount = targetsOverridingCount;
            return this;
        }
        @CustomType.Setter
        public Builder targetsOverridingOfflineMonthsCount(Integer targetsOverridingOfflineMonthsCount) {
            if (targetsOverridingOfflineMonthsCount == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollection", "targetsOverridingOfflineMonthsCount");
            }
            this.targetsOverridingOfflineMonthsCount = targetsOverridingOfflineMonthsCount;
            return this;
        }
        @CustomType.Setter
        public Builder targetsOverridingOnlineMonthsCount(Integer targetsOverridingOnlineMonthsCount) {
            if (targetsOverridingOnlineMonthsCount == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollection", "targetsOverridingOnlineMonthsCount");
            }
            this.targetsOverridingOnlineMonthsCount = targetsOverridingOnlineMonthsCount;
            return this;
        }
        @CustomType.Setter
        public Builder targetsOverridingPaidUsageCount(Integer targetsOverridingPaidUsageCount) {
            if (targetsOverridingPaidUsageCount == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollection", "targetsOverridingPaidUsageCount");
            }
            this.targetsOverridingPaidUsageCount = targetsOverridingPaidUsageCount;
            return this;
        }
        public GetAuditProfileTargetOverridesTargetOverrideCollection build() {
            final var _resultValue = new GetAuditProfileTargetOverridesTargetOverrideCollection();
            _resultValue.items = items;
            _resultValue.targetsConformingCount = targetsConformingCount;
            _resultValue.targetsCount = targetsCount;
            _resultValue.targetsOverridingCount = targetsOverridingCount;
            _resultValue.targetsOverridingOfflineMonthsCount = targetsOverridingOfflineMonthsCount;
            _resultValue.targetsOverridingOnlineMonthsCount = targetsOverridingOnlineMonthsCount;
            _resultValue.targetsOverridingPaidUsageCount = targetsOverridingPaidUsageCount;
            return _resultValue;
        }
    }
}
