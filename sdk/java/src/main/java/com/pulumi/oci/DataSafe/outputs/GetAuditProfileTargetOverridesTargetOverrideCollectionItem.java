// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAuditProfileTargetOverridesTargetOverrideCollectionItem {
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
     * 
     */
    private Boolean isPaidUsageEnabled;
    /**
     * @return Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer (up to 168 months) in the offline archive, please contact the Oracle Support.
     * 
     */
    private Integer offlineMonths;
    /**
     * @return The name or the OCID of the resource from which the offline month retention setting is sourced. For example a target database group OCID or global.
     * 
     */
    private String offlineMonthsSource;
    /**
     * @return Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis. Minimum: 1; Maximum: 12 months
     * 
     */
    private Integer onlineMonths;
    /**
     * @return The name or the OCID of the resource from which the online month retention setting is sourced. For example a target database group OCID or global.
     * 
     */
    private String onlineMonthsSource;
    /**
     * @return The name or the OCID of the resource from which the paid usage setting is sourced. For example a target database group OCID or global.
     * 
     */
    private String paidUsageSource;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The OCID of the target database that overrides from the audit profile of the target database group.
     * 
     */
    private String targetDatabaseId;

    private GetAuditProfileTargetOverridesTargetOverrideCollectionItem() {}
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
     * 
     */
    public Boolean isPaidUsageEnabled() {
        return this.isPaidUsageEnabled;
    }
    /**
     * @return Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer (up to 168 months) in the offline archive, please contact the Oracle Support.
     * 
     */
    public Integer offlineMonths() {
        return this.offlineMonths;
    }
    /**
     * @return The name or the OCID of the resource from which the offline month retention setting is sourced. For example a target database group OCID or global.
     * 
     */
    public String offlineMonthsSource() {
        return this.offlineMonthsSource;
    }
    /**
     * @return Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis. Minimum: 1; Maximum: 12 months
     * 
     */
    public Integer onlineMonths() {
        return this.onlineMonths;
    }
    /**
     * @return The name or the OCID of the resource from which the online month retention setting is sourced. For example a target database group OCID or global.
     * 
     */
    public String onlineMonthsSource() {
        return this.onlineMonthsSource;
    }
    /**
     * @return The name or the OCID of the resource from which the paid usage setting is sourced. For example a target database group OCID or global.
     * 
     */
    public String paidUsageSource() {
        return this.paidUsageSource;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The OCID of the target database that overrides from the audit profile of the target database group.
     * 
     */
    public String targetDatabaseId() {
        return this.targetDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditProfileTargetOverridesTargetOverrideCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private Boolean isPaidUsageEnabled;
        private Integer offlineMonths;
        private String offlineMonthsSource;
        private Integer onlineMonths;
        private String onlineMonthsSource;
        private String paidUsageSource;
        private Map<String,String> systemTags;
        private String targetDatabaseId;
        public Builder() {}
        public Builder(GetAuditProfileTargetOverridesTargetOverrideCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.isPaidUsageEnabled = defaults.isPaidUsageEnabled;
    	      this.offlineMonths = defaults.offlineMonths;
    	      this.offlineMonthsSource = defaults.offlineMonthsSource;
    	      this.onlineMonths = defaults.onlineMonths;
    	      this.onlineMonthsSource = defaults.onlineMonthsSource;
    	      this.paidUsageSource = defaults.paidUsageSource;
    	      this.systemTags = defaults.systemTags;
    	      this.targetDatabaseId = defaults.targetDatabaseId;
        }

        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder isPaidUsageEnabled(Boolean isPaidUsageEnabled) {
            if (isPaidUsageEnabled == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "isPaidUsageEnabled");
            }
            this.isPaidUsageEnabled = isPaidUsageEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder offlineMonths(Integer offlineMonths) {
            if (offlineMonths == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "offlineMonths");
            }
            this.offlineMonths = offlineMonths;
            return this;
        }
        @CustomType.Setter
        public Builder offlineMonthsSource(String offlineMonthsSource) {
            if (offlineMonthsSource == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "offlineMonthsSource");
            }
            this.offlineMonthsSource = offlineMonthsSource;
            return this;
        }
        @CustomType.Setter
        public Builder onlineMonths(Integer onlineMonths) {
            if (onlineMonths == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "onlineMonths");
            }
            this.onlineMonths = onlineMonths;
            return this;
        }
        @CustomType.Setter
        public Builder onlineMonthsSource(String onlineMonthsSource) {
            if (onlineMonthsSource == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "onlineMonthsSource");
            }
            this.onlineMonthsSource = onlineMonthsSource;
            return this;
        }
        @CustomType.Setter
        public Builder paidUsageSource(String paidUsageSource) {
            if (paidUsageSource == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "paidUsageSource");
            }
            this.paidUsageSource = paidUsageSource;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetDatabaseId(String targetDatabaseId) {
            if (targetDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetAuditProfileTargetOverridesTargetOverrideCollectionItem", "targetDatabaseId");
            }
            this.targetDatabaseId = targetDatabaseId;
            return this;
        }
        public GetAuditProfileTargetOverridesTargetOverrideCollectionItem build() {
            final var _resultValue = new GetAuditProfileTargetOverridesTargetOverrideCollectionItem();
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.isPaidUsageEnabled = isPaidUsageEnabled;
            _resultValue.offlineMonths = offlineMonths;
            _resultValue.offlineMonthsSource = offlineMonthsSource;
            _resultValue.onlineMonths = onlineMonths;
            _resultValue.onlineMonthsSource = onlineMonthsSource;
            _resultValue.paidUsageSource = paidUsageSource;
            _resultValue.systemTags = systemTags;
            _resultValue.targetDatabaseId = targetDatabaseId;
            return _resultValue;
        }
    }
}
