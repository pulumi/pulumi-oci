// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAuditProfilesAuditProfileCollectionItemAuditTrail {
    /**
     * @return The date from which the audit trail must start collecting data, in the format defined by RFC3339.
     * 
     */
    private String auditCollectionStartTime;
    /**
     * @return A optional filter to return only resources that match the specified id.
     * 
     */
    private String auditProfileId;
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The description of the audit profile.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the audit profile.
     * 
     */
    private String id;
    /**
     * @return Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
     * 
     */
    private Boolean isAutoPurgeEnabled;
    /**
     * @return Details about the current state of the audit profile in Data Safe.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return A optional filter to return only resources that match the specified lifecycle state.
     * 
     */
    private String state;
    /**
     * @return The current sub-state of the audit trail.
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    private String targetId;
    /**
     * @return The date and time the audit profile was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
     * 
     */
    private String timeLastCollected;
    /**
     * @return The date and time the audit profile was updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;
    /**
     * @return An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
     * 
     */
    private String trailLocation;
    /**
     * @return The OCID of the workrequest for audit trail which collects audit records.
     * 
     */
    private String workRequestId;

    private GetAuditProfilesAuditProfileCollectionItemAuditTrail() {}
    /**
     * @return The date from which the audit trail must start collecting data, in the format defined by RFC3339.
     * 
     */
    public String auditCollectionStartTime() {
        return this.auditCollectionStartTime;
    }
    /**
     * @return A optional filter to return only resources that match the specified id.
     * 
     */
    public String auditProfileId() {
        return this.auditProfileId;
    }
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the audit profile.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the audit profile.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database&#39;s audit trail does not become too large.
     * 
     */
    public Boolean isAutoPurgeEnabled() {
        return this.isAutoPurgeEnabled;
    }
    /**
     * @return Details about the current state of the audit profile in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return A optional filter to return only resources that match the specified lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The current sub-state of the audit trail.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The date and time the audit profile was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
     * 
     */
    public String timeLastCollected() {
        return this.timeLastCollected;
    }
    /**
     * @return The date and time the audit profile was updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
     * 
     */
    public String trailLocation() {
        return this.trailLocation;
    }
    /**
     * @return The OCID of the workrequest for audit trail which collects audit records.
     * 
     */
    public String workRequestId() {
        return this.workRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditProfilesAuditProfileCollectionItemAuditTrail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String auditCollectionStartTime;
        private String auditProfileId;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isAutoPurgeEnabled;
        private String lifecycleDetails;
        private String state;
        private String status;
        private Map<String,Object> systemTags;
        private String targetId;
        private String timeCreated;
        private String timeLastCollected;
        private String timeUpdated;
        private String trailLocation;
        private String workRequestId;
        public Builder() {}
        public Builder(GetAuditProfilesAuditProfileCollectionItemAuditTrail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditCollectionStartTime = defaults.auditCollectionStartTime;
    	      this.auditProfileId = defaults.auditProfileId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoPurgeEnabled = defaults.isAutoPurgeEnabled;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastCollected = defaults.timeLastCollected;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.trailLocation = defaults.trailLocation;
    	      this.workRequestId = defaults.workRequestId;
        }

        @CustomType.Setter
        public Builder auditCollectionStartTime(String auditCollectionStartTime) {
            if (auditCollectionStartTime == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "auditCollectionStartTime");
            }
            this.auditCollectionStartTime = auditCollectionStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder auditProfileId(String auditProfileId) {
            if (auditProfileId == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "auditProfileId");
            }
            this.auditProfileId = auditProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoPurgeEnabled(Boolean isAutoPurgeEnabled) {
            if (isAutoPurgeEnabled == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "isAutoPurgeEnabled");
            }
            this.isAutoPurgeEnabled = isAutoPurgeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastCollected(String timeLastCollected) {
            if (timeLastCollected == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "timeLastCollected");
            }
            this.timeLastCollected = timeLastCollected;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder trailLocation(String trailLocation) {
            if (trailLocation == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "trailLocation");
            }
            this.trailLocation = trailLocation;
            return this;
        }
        @CustomType.Setter
        public Builder workRequestId(String workRequestId) {
            if (workRequestId == null) {
              throw new MissingRequiredPropertyException("GetAuditProfilesAuditProfileCollectionItemAuditTrail", "workRequestId");
            }
            this.workRequestId = workRequestId;
            return this;
        }
        public GetAuditProfilesAuditProfileCollectionItemAuditTrail build() {
            final var _resultValue = new GetAuditProfilesAuditProfileCollectionItemAuditTrail();
            _resultValue.auditCollectionStartTime = auditCollectionStartTime;
            _resultValue.auditProfileId = auditProfileId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isAutoPurgeEnabled = isAutoPurgeEnabled;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.targetId = targetId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastCollected = timeLastCollected;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.trailLocation = trailLocation;
            _resultValue.workRequestId = workRequestId;
            return _resultValue;
        }
    }
}
