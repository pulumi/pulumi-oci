// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveType {
    /**
     * @return An array of the library masking formats compatible with the sensitive type.
     * 
     */
    private @Nullable List<GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat> maskingFormats;
    /**
     * @return The OCID of the sensitive type.
     * 
     */
    private @Nullable String sensitiveTypeId;

    private GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveType() {}
    /**
     * @return An array of the library masking formats compatible with the sensitive type.
     * 
     */
    public List<GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat> maskingFormats() {
        return this.maskingFormats == null ? List.of() : this.maskingFormats;
    }
    /**
     * @return The OCID of the sensitive type.
     * 
     */
    public Optional<String> sensitiveTypeId() {
        return Optional.ofNullable(this.sensitiveTypeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat> maskingFormats;
        private @Nullable String sensitiveTypeId;
        public Builder() {}
        public Builder(GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maskingFormats = defaults.maskingFormats;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
        }

        @CustomType.Setter
        public Builder maskingFormats(@Nullable List<GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat> maskingFormats) {
            this.maskingFormats = maskingFormats;
            return this;
        }
        public Builder maskingFormats(GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveTypeMaskingFormat... maskingFormats) {
            return maskingFormats(List.of(maskingFormats));
        }
        @CustomType.Setter
        public Builder sensitiveTypeId(@Nullable String sensitiveTypeId) {
            this.sensitiveTypeId = sensitiveTypeId;
            return this;
        }
        public GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveType build() {
            final var o = new GetCompatibleFormatsForSensitiveTypeFormatsForSensitiveType();
            o.maskingFormats = maskingFormats;
            o.sensitiveTypeId = sensitiveTypeId;
            return o;
        }
    }
}
