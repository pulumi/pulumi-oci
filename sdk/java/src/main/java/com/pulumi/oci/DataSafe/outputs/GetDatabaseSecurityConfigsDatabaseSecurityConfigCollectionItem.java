// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItemSqlFirewallConfig;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItem {
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return An optional filter to return only resources that match the specified OCID of the database security configuration resource.
     * 
     */
    private String databaseSecurityConfigId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The description of the database security config.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the database security config.
     * 
     */
    private String id;
    /**
     * @return Details about the current state of the database security config in Data Safe.
     * 
     */
    private String lifecycleDetails;
    private Integer refreshTrigger;
    /**
     * @return The SQL firewall related configurations.
     * 
     */
    private List<GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItemSqlFirewallConfig> sqlFirewallConfigs;
    /**
     * @return The current state of the database security configuration.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    private String targetId;
    /**
     * @return The time that the database security config was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The last date and time the database security config was refreshed, in the format defined by RFC3339.
     * 
     */
    private String timeLastRefreshed;
    /**
     * @return The date and time the database security configuration was last updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItem() {}
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return An optional filter to return only resources that match the specified OCID of the database security configuration resource.
     * 
     */
    public String databaseSecurityConfigId() {
        return this.databaseSecurityConfigId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the database security config.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the database security config.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details about the current state of the database security config in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public Integer refreshTrigger() {
        return this.refreshTrigger;
    }
    /**
     * @return The SQL firewall related configurations.
     * 
     */
    public List<GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItemSqlFirewallConfig> sqlFirewallConfigs() {
        return this.sqlFirewallConfigs;
    }
    /**
     * @return The current state of the database security configuration.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The time that the database security config was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The last date and time the database security config was refreshed, in the format defined by RFC3339.
     * 
     */
    public String timeLastRefreshed() {
        return this.timeLastRefreshed;
    }
    /**
     * @return The date and time the database security configuration was last updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String databaseSecurityConfigId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private Integer refreshTrigger;
        private List<GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItemSqlFirewallConfig> sqlFirewallConfigs;
        private String state;
        private Map<String,Object> systemTags;
        private String targetId;
        private String timeCreated;
        private String timeLastRefreshed;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseSecurityConfigId = defaults.databaseSecurityConfigId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.refreshTrigger = defaults.refreshTrigger;
    	      this.sqlFirewallConfigs = defaults.sqlFirewallConfigs;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastRefreshed = defaults.timeLastRefreshed;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder databaseSecurityConfigId(String databaseSecurityConfigId) {
            this.databaseSecurityConfigId = Objects.requireNonNull(databaseSecurityConfigId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder refreshTrigger(Integer refreshTrigger) {
            this.refreshTrigger = Objects.requireNonNull(refreshTrigger);
            return this;
        }
        @CustomType.Setter
        public Builder sqlFirewallConfigs(List<GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItemSqlFirewallConfig> sqlFirewallConfigs) {
            this.sqlFirewallConfigs = Objects.requireNonNull(sqlFirewallConfigs);
            return this;
        }
        public Builder sqlFirewallConfigs(GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItemSqlFirewallConfig... sqlFirewallConfigs) {
            return sqlFirewallConfigs(List.of(sqlFirewallConfigs));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            this.targetId = Objects.requireNonNull(targetId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeLastRefreshed(String timeLastRefreshed) {
            this.timeLastRefreshed = Objects.requireNonNull(timeLastRefreshed);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItem build() {
            final var o = new GetDatabaseSecurityConfigsDatabaseSecurityConfigCollectionItem();
            o.compartmentId = compartmentId;
            o.databaseSecurityConfigId = databaseSecurityConfigId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.refreshTrigger = refreshTrigger;
            o.sqlFirewallConfigs = sqlFirewallConfigs;
            o.state = state;
            o.systemTags = systemTags;
            o.targetId = targetId;
            o.timeCreated = timeCreated;
            o.timeLastRefreshed = timeLastRefreshed;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
