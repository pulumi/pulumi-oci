// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetDiscoveryAnalyticItemDimension;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDiscoveryAnalyticItem {
    /**
     * @return The total count for the aggregation metric.
     * 
     */
    private String count;
    /**
     * @return The scope of analytics data.
     * 
     */
    private List<GetDiscoveryAnalyticItemDimension> dimensions;
    /**
     * @return The name of the aggregation metric.
     * 
     */
    private String metricName;

    private GetDiscoveryAnalyticItem() {}
    /**
     * @return The total count for the aggregation metric.
     * 
     */
    public String count() {
        return this.count;
    }
    /**
     * @return The scope of analytics data.
     * 
     */
    public List<GetDiscoveryAnalyticItemDimension> dimensions() {
        return this.dimensions;
    }
    /**
     * @return The name of the aggregation metric.
     * 
     */
    public String metricName() {
        return this.metricName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoveryAnalyticItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String count;
        private List<GetDiscoveryAnalyticItemDimension> dimensions;
        private String metricName;
        public Builder() {}
        public Builder(GetDiscoveryAnalyticItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.dimensions = defaults.dimensions;
    	      this.metricName = defaults.metricName;
        }

        @CustomType.Setter
        public Builder count(String count) {
            if (count == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAnalyticItem", "count");
            }
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder dimensions(List<GetDiscoveryAnalyticItemDimension> dimensions) {
            if (dimensions == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAnalyticItem", "dimensions");
            }
            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(GetDiscoveryAnalyticItemDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder metricName(String metricName) {
            if (metricName == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAnalyticItem", "metricName");
            }
            this.metricName = metricName;
            return this;
        }
        public GetDiscoveryAnalyticItem build() {
            final var _resultValue = new GetDiscoveryAnalyticItem();
            _resultValue.count = count;
            _resultValue.dimensions = dimensions;
            _resultValue.metricName = metricName;
            return _resultValue;
        }
    }
}
