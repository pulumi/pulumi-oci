// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetDiscoveryAnalyticItem;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDiscoveryAnalyticResult {
    private String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable String groupBy;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An array of discovery analytics summary objects.
     * 
     */
    private List<GetDiscoveryAnalyticItem> items;
    /**
     * @return The OCID of the sensitive data model.
     * 
     */
    private @Nullable String sensitiveDataModelId;
    /**
     * @return The OCID of the target database.
     * 
     */
    private @Nullable String targetId;

    private GetDiscoveryAnalyticResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public Optional<String> groupBy() {
        return Optional.ofNullable(this.groupBy);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An array of discovery analytics summary objects.
     * 
     */
    public List<GetDiscoveryAnalyticItem> items() {
        return this.items;
    }
    /**
     * @return The OCID of the sensitive data model.
     * 
     */
    public Optional<String> sensitiveDataModelId() {
        return Optional.ofNullable(this.sensitiveDataModelId);
    }
    /**
     * @return The OCID of the target database.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoveryAnalyticResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String groupBy;
        private String id;
        private List<GetDiscoveryAnalyticItem> items;
        private @Nullable String sensitiveDataModelId;
        private @Nullable String targetId;
        public Builder() {}
        public Builder(GetDiscoveryAnalyticResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.groupBy = defaults.groupBy;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.sensitiveDataModelId = defaults.sensitiveDataModelId;
    	      this.targetId = defaults.targetId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAnalyticResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder groupBy(@Nullable String groupBy) {

            this.groupBy = groupBy;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAnalyticResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetDiscoveryAnalyticItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAnalyticResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetDiscoveryAnalyticItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder sensitiveDataModelId(@Nullable String sensitiveDataModelId) {

            this.sensitiveDataModelId = sensitiveDataModelId;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {

            this.targetId = targetId;
            return this;
        }
        public GetDiscoveryAnalyticResult build() {
            final var _resultValue = new GetDiscoveryAnalyticResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.groupBy = groupBy;
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.sensitiveDataModelId = sensitiveDataModelId;
            _resultValue.targetId = targetId;
            return _resultValue;
        }
    }
}
