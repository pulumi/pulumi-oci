// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDiscoveryJobResult {
    /**
     * @return The OCID of the compartment that contains the discovery job.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    private String discoveryJobId;
    /**
     * @return The type of the discovery job. It defines the job&#39;s scope. NEW identifies new sensitive columns in the target database that are not in the sensitive data model. DELETED identifies columns that are present in the sensitive data model but have been deleted from the target database. MODIFIED identifies columns that are present in the target database as well as the sensitive data model but some of their attributes have been modified. ALL covers all the above three scenarios and reports new, deleted and modified columns.
     * 
     */
    private @Nullable String discoveryType;
    /**
     * @return The display name of the discovery job.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the discovery job.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates if the discovery job should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It&#39;s disabled by default and should be used only if there is a need to identify application-level relationships.
     * 
     */
    private @Nullable Boolean isAppDefinedRelationDiscoveryEnabled;
    /**
     * @return Indicates if all the schemas in the associated target database are used for data discovery. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
     * 
     */
    private @Nullable Boolean isIncludeAllSchemas;
    /**
     * @return Indicates if all the existing sensitive types are used for data discovery. If it&#39;s set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used.
     * 
     */
    private @Nullable Boolean isIncludeAllSensitiveTypes;
    /**
     * @return Indicates if the discovery job should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it&#39;s disabled by default and should be used only if it&#39;s acceptable to store sample data in Data Safe&#39;s repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
     * 
     */
    private @Nullable Boolean isSampleDataCollectionEnabled;
    /**
     * @return The schemas used for data discovery.
     * 
     */
    private @Nullable List<String> schemasForDiscoveries;
    /**
     * @return The OCID of the sensitive data model associated with the discovery job.
     * 
     */
    private @Nullable String sensitiveDataModelId;
    /**
     * @return The OCIDs of the sensitive types used for data discovery.
     * 
     */
    private @Nullable List<String> sensitiveTypeIdsForDiscoveries;
    /**
     * @return The current state of the discovery job.
     * 
     */
    private @Nullable String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The OCID of the target database associated with the discovery job.
     * 
     */
    private @Nullable String targetId;
    /**
     * @return The date and time the discovery job finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)..
     * 
     */
    private @Nullable String timeFinished;
    /**
     * @return The date and time the discovery job started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeStarted;
    /**
     * @return The total number of columns scanned by the discovery job.
     * 
     */
    private @Nullable String totalColumnsScanned;
    /**
     * @return The total number of deleted sensitive columns identified by the discovery job.
     * 
     */
    private @Nullable String totalDeletedSensitiveColumns;
    /**
     * @return The total number of modified sensitive columns identified by the discovery job.
     * 
     */
    private @Nullable String totalModifiedSensitiveColumns;
    /**
     * @return The total number of new sensitive columns identified by the discovery job.
     * 
     */
    private @Nullable String totalNewSensitiveColumns;
    /**
     * @return The total number of objects (tables and editioning views) scanned by the discovery job.
     * 
     */
    private @Nullable String totalObjectsScanned;
    /**
     * @return The total number of schemas scanned by the discovery job.
     * 
     */
    private @Nullable String totalSchemasScanned;

    private GetDiscoveryJobResult() {}
    /**
     * @return The OCID of the compartment that contains the discovery job.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    public String discoveryJobId() {
        return this.discoveryJobId;
    }
    /**
     * @return The type of the discovery job. It defines the job&#39;s scope. NEW identifies new sensitive columns in the target database that are not in the sensitive data model. DELETED identifies columns that are present in the sensitive data model but have been deleted from the target database. MODIFIED identifies columns that are present in the target database as well as the sensitive data model but some of their attributes have been modified. ALL covers all the above three scenarios and reports new, deleted and modified columns.
     * 
     */
    public Optional<String> discoveryType() {
        return Optional.ofNullable(this.discoveryType);
    }
    /**
     * @return The display name of the discovery job.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the discovery job.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates if the discovery job should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It&#39;s disabled by default and should be used only if there is a need to identify application-level relationships.
     * 
     */
    public Optional<Boolean> isAppDefinedRelationDiscoveryEnabled() {
        return Optional.ofNullable(this.isAppDefinedRelationDiscoveryEnabled);
    }
    /**
     * @return Indicates if all the schemas in the associated target database are used for data discovery. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
     * 
     */
    public Optional<Boolean> isIncludeAllSchemas() {
        return Optional.ofNullable(this.isIncludeAllSchemas);
    }
    /**
     * @return Indicates if all the existing sensitive types are used for data discovery. If it&#39;s set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used.
     * 
     */
    public Optional<Boolean> isIncludeAllSensitiveTypes() {
        return Optional.ofNullable(this.isIncludeAllSensitiveTypes);
    }
    /**
     * @return Indicates if the discovery job should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it&#39;s disabled by default and should be used only if it&#39;s acceptable to store sample data in Data Safe&#39;s repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
     * 
     */
    public Optional<Boolean> isSampleDataCollectionEnabled() {
        return Optional.ofNullable(this.isSampleDataCollectionEnabled);
    }
    /**
     * @return The schemas used for data discovery.
     * 
     */
    public List<String> schemasForDiscoveries() {
        return this.schemasForDiscoveries == null ? List.of() : this.schemasForDiscoveries;
    }
    /**
     * @return The OCID of the sensitive data model associated with the discovery job.
     * 
     */
    public Optional<String> sensitiveDataModelId() {
        return Optional.ofNullable(this.sensitiveDataModelId);
    }
    /**
     * @return The OCIDs of the sensitive types used for data discovery.
     * 
     */
    public List<String> sensitiveTypeIdsForDiscoveries() {
        return this.sensitiveTypeIdsForDiscoveries == null ? List.of() : this.sensitiveTypeIdsForDiscoveries;
    }
    /**
     * @return The current state of the discovery job.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The OCID of the target database associated with the discovery job.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return The date and time the discovery job finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)..
     * 
     */
    public Optional<String> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }
    /**
     * @return The date and time the discovery job started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }
    /**
     * @return The total number of columns scanned by the discovery job.
     * 
     */
    public Optional<String> totalColumnsScanned() {
        return Optional.ofNullable(this.totalColumnsScanned);
    }
    /**
     * @return The total number of deleted sensitive columns identified by the discovery job.
     * 
     */
    public Optional<String> totalDeletedSensitiveColumns() {
        return Optional.ofNullable(this.totalDeletedSensitiveColumns);
    }
    /**
     * @return The total number of modified sensitive columns identified by the discovery job.
     * 
     */
    public Optional<String> totalModifiedSensitiveColumns() {
        return Optional.ofNullable(this.totalModifiedSensitiveColumns);
    }
    /**
     * @return The total number of new sensitive columns identified by the discovery job.
     * 
     */
    public Optional<String> totalNewSensitiveColumns() {
        return Optional.ofNullable(this.totalNewSensitiveColumns);
    }
    /**
     * @return The total number of objects (tables and editioning views) scanned by the discovery job.
     * 
     */
    public Optional<String> totalObjectsScanned() {
        return Optional.ofNullable(this.totalObjectsScanned);
    }
    /**
     * @return The total number of schemas scanned by the discovery job.
     * 
     */
    public Optional<String> totalSchemasScanned() {
        return Optional.ofNullable(this.totalSchemasScanned);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoveryJobResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private String discoveryJobId;
        private @Nullable String discoveryType;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isAppDefinedRelationDiscoveryEnabled;
        private @Nullable Boolean isIncludeAllSchemas;
        private @Nullable Boolean isIncludeAllSensitiveTypes;
        private @Nullable Boolean isSampleDataCollectionEnabled;
        private @Nullable List<String> schemasForDiscoveries;
        private @Nullable String sensitiveDataModelId;
        private @Nullable List<String> sensitiveTypeIdsForDiscoveries;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String targetId;
        private @Nullable String timeFinished;
        private @Nullable String timeStarted;
        private @Nullable String totalColumnsScanned;
        private @Nullable String totalDeletedSensitiveColumns;
        private @Nullable String totalModifiedSensitiveColumns;
        private @Nullable String totalNewSensitiveColumns;
        private @Nullable String totalObjectsScanned;
        private @Nullable String totalSchemasScanned;
        public Builder() {}
        public Builder(GetDiscoveryJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.discoveryJobId = defaults.discoveryJobId;
    	      this.discoveryType = defaults.discoveryType;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAppDefinedRelationDiscoveryEnabled = defaults.isAppDefinedRelationDiscoveryEnabled;
    	      this.isIncludeAllSchemas = defaults.isIncludeAllSchemas;
    	      this.isIncludeAllSensitiveTypes = defaults.isIncludeAllSensitiveTypes;
    	      this.isSampleDataCollectionEnabled = defaults.isSampleDataCollectionEnabled;
    	      this.schemasForDiscoveries = defaults.schemasForDiscoveries;
    	      this.sensitiveDataModelId = defaults.sensitiveDataModelId;
    	      this.sensitiveTypeIdsForDiscoveries = defaults.sensitiveTypeIdsForDiscoveries;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
    	      this.totalColumnsScanned = defaults.totalColumnsScanned;
    	      this.totalDeletedSensitiveColumns = defaults.totalDeletedSensitiveColumns;
    	      this.totalModifiedSensitiveColumns = defaults.totalModifiedSensitiveColumns;
    	      this.totalNewSensitiveColumns = defaults.totalNewSensitiveColumns;
    	      this.totalObjectsScanned = defaults.totalObjectsScanned;
    	      this.totalSchemasScanned = defaults.totalSchemasScanned;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder discoveryJobId(String discoveryJobId) {
            this.discoveryJobId = Objects.requireNonNull(discoveryJobId);
            return this;
        }
        @CustomType.Setter
        public Builder discoveryType(@Nullable String discoveryType) {
            this.discoveryType = discoveryType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAppDefinedRelationDiscoveryEnabled(@Nullable Boolean isAppDefinedRelationDiscoveryEnabled) {
            this.isAppDefinedRelationDiscoveryEnabled = isAppDefinedRelationDiscoveryEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isIncludeAllSchemas(@Nullable Boolean isIncludeAllSchemas) {
            this.isIncludeAllSchemas = isIncludeAllSchemas;
            return this;
        }
        @CustomType.Setter
        public Builder isIncludeAllSensitiveTypes(@Nullable Boolean isIncludeAllSensitiveTypes) {
            this.isIncludeAllSensitiveTypes = isIncludeAllSensitiveTypes;
            return this;
        }
        @CustomType.Setter
        public Builder isSampleDataCollectionEnabled(@Nullable Boolean isSampleDataCollectionEnabled) {
            this.isSampleDataCollectionEnabled = isSampleDataCollectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder schemasForDiscoveries(@Nullable List<String> schemasForDiscoveries) {
            this.schemasForDiscoveries = schemasForDiscoveries;
            return this;
        }
        public Builder schemasForDiscoveries(String... schemasForDiscoveries) {
            return schemasForDiscoveries(List.of(schemasForDiscoveries));
        }
        @CustomType.Setter
        public Builder sensitiveDataModelId(@Nullable String sensitiveDataModelId) {
            this.sensitiveDataModelId = sensitiveDataModelId;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveTypeIdsForDiscoveries(@Nullable List<String> sensitiveTypeIdsForDiscoveries) {
            this.sensitiveTypeIdsForDiscoveries = sensitiveTypeIdsForDiscoveries;
            return this;
        }
        public Builder sensitiveTypeIdsForDiscoveries(String... sensitiveTypeIdsForDiscoveries) {
            return sensitiveTypeIdsForDiscoveries(List.of(sensitiveTypeIdsForDiscoveries));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(@Nullable String timeFinished) {
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder totalColumnsScanned(@Nullable String totalColumnsScanned) {
            this.totalColumnsScanned = totalColumnsScanned;
            return this;
        }
        @CustomType.Setter
        public Builder totalDeletedSensitiveColumns(@Nullable String totalDeletedSensitiveColumns) {
            this.totalDeletedSensitiveColumns = totalDeletedSensitiveColumns;
            return this;
        }
        @CustomType.Setter
        public Builder totalModifiedSensitiveColumns(@Nullable String totalModifiedSensitiveColumns) {
            this.totalModifiedSensitiveColumns = totalModifiedSensitiveColumns;
            return this;
        }
        @CustomType.Setter
        public Builder totalNewSensitiveColumns(@Nullable String totalNewSensitiveColumns) {
            this.totalNewSensitiveColumns = totalNewSensitiveColumns;
            return this;
        }
        @CustomType.Setter
        public Builder totalObjectsScanned(@Nullable String totalObjectsScanned) {
            this.totalObjectsScanned = totalObjectsScanned;
            return this;
        }
        @CustomType.Setter
        public Builder totalSchemasScanned(@Nullable String totalSchemasScanned) {
            this.totalSchemasScanned = totalSchemasScanned;
            return this;
        }
        public GetDiscoveryJobResult build() {
            final var o = new GetDiscoveryJobResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.discoveryJobId = discoveryJobId;
            o.discoveryType = discoveryType;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isAppDefinedRelationDiscoveryEnabled = isAppDefinedRelationDiscoveryEnabled;
            o.isIncludeAllSchemas = isIncludeAllSchemas;
            o.isIncludeAllSensitiveTypes = isIncludeAllSensitiveTypes;
            o.isSampleDataCollectionEnabled = isSampleDataCollectionEnabled;
            o.schemasForDiscoveries = schemasForDiscoveries;
            o.sensitiveDataModelId = sensitiveDataModelId;
            o.sensitiveTypeIdsForDiscoveries = sensitiveTypeIdsForDiscoveries;
            o.state = state;
            o.systemTags = systemTags;
            o.targetId = targetId;
            o.timeFinished = timeFinished;
            o.timeStarted = timeStarted;
            o.totalColumnsScanned = totalColumnsScanned;
            o.totalDeletedSensitiveColumns = totalDeletedSensitiveColumns;
            o.totalModifiedSensitiveColumns = totalModifiedSensitiveColumns;
            o.totalNewSensitiveColumns = totalNewSensitiveColumns;
            o.totalObjectsScanned = totalObjectsScanned;
            o.totalSchemasScanned = totalSchemasScanned;
            return o;
        }
    }
}
