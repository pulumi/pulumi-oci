// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem {
    /**
     * @return Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
     * 
     */
    private @Nullable List<String> appDefinedChildColumnKeys;
    /**
     * @return The name of the application. An application is an entity that is identified by a schema and stores sensitive information for that schema. Its value will be same as schemaName, if no value is passed.
     * 
     */
    private @Nullable String appName;
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    private @Nullable String columnName;
    /**
     * @return The data type of the sensitive column.
     * 
     */
    private @Nullable String dataType;
    /**
     * @return Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
     * 
     */
    private @Nullable List<String> dbDefinedChildColumnKeys;
    /**
     * @return The OCID of the discovery job.
     * 
     * @deprecated
     * The &#39;oci_data_safe_discovery_jobs_result&#39; resource has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported. */
    private String discoveryJobId;
    /**
     * @return A filter to return only the resources that match the specified discovery type.
     * 
     * @deprecated
     * The &#39;oci_data_safe_discovery_jobs_result&#39; resource has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported. */
    private @Nullable String discoveryType;
    /**
     * @return The estimated number of data values the column has in the associated database.
     * 
     */
    private @Nullable String estimatedDataValueCount;
    /**
     * @return A filter to return the discovery result resources based on the value of their isResultApplied attribute.
     * 
     */
    private @Nullable Boolean isResultApplied;
    /**
     * @return The unique key that identifies the discovery result.
     * 
     * @deprecated
     * The &#39;oci_data_safe_discovery_jobs_result&#39; resource has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported. */
    private @Nullable String key;
    /**
     * @return The attributes of a sensitive column that have been modified in the target database. It&#39;s populated only in the case of MODIFIED discovery results and shows the new values of the modified attributes.
     * 
     */
    private @Nullable List<GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute> modifiedAttributes;
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    private @Nullable String object;
    /**
     * @return The type of the database object that contains the sensitive column.
     * 
     */
    private @Nullable String objectType;
    /**
     * @return Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
     * 
     */
    private @Nullable List<String> parentColumnKeys;
    /**
     * @return A filter to return only the resources that match the specified planned action.
     * 
     */
    private @Nullable String plannedAction;
    /**
     * @return The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
     * 
     */
    private @Nullable String relationType;
    /**
     * @return Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
     * 
     */
    private @Nullable List<String> sampleDataValues;
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    private @Nullable String schemaName;
    /**
     * @return The unique key that identifies the sensitive column represented by the discovery result.
     * 
     */
    private @Nullable String sensitiveColumnkey;
    /**
     * @return The OCID of the sensitive type associated with the sensitive column.
     * 
     */
    private @Nullable String sensitiveTypeId;

    private GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem() {}
    /**
     * @return Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
     * 
     */
    public List<String> appDefinedChildColumnKeys() {
        return this.appDefinedChildColumnKeys == null ? List.of() : this.appDefinedChildColumnKeys;
    }
    /**
     * @return The name of the application. An application is an entity that is identified by a schema and stores sensitive information for that schema. Its value will be same as schemaName, if no value is passed.
     * 
     */
    public Optional<String> appName() {
        return Optional.ofNullable(this.appName);
    }
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    public Optional<String> columnName() {
        return Optional.ofNullable(this.columnName);
    }
    /**
     * @return The data type of the sensitive column.
     * 
     */
    public Optional<String> dataType() {
        return Optional.ofNullable(this.dataType);
    }
    /**
     * @return Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
     * 
     */
    public List<String> dbDefinedChildColumnKeys() {
        return this.dbDefinedChildColumnKeys == null ? List.of() : this.dbDefinedChildColumnKeys;
    }
    /**
     * @return The OCID of the discovery job.
     * 
     * @deprecated
     * The &#39;oci_data_safe_discovery_jobs_result&#39; resource has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported. */
    public String discoveryJobId() {
        return this.discoveryJobId;
    }
    /**
     * @return A filter to return only the resources that match the specified discovery type.
     * 
     * @deprecated
     * The &#39;oci_data_safe_discovery_jobs_result&#39; resource has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported. */
    public Optional<String> discoveryType() {
        return Optional.ofNullable(this.discoveryType);
    }
    /**
     * @return The estimated number of data values the column has in the associated database.
     * 
     */
    public Optional<String> estimatedDataValueCount() {
        return Optional.ofNullable(this.estimatedDataValueCount);
    }
    /**
     * @return A filter to return the discovery result resources based on the value of their isResultApplied attribute.
     * 
     */
    public Optional<Boolean> isResultApplied() {
        return Optional.ofNullable(this.isResultApplied);
    }
    /**
     * @return The unique key that identifies the discovery result.
     * 
     * @deprecated
     * The &#39;oci_data_safe_discovery_jobs_result&#39; resource has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported. */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return The attributes of a sensitive column that have been modified in the target database. It&#39;s populated only in the case of MODIFIED discovery results and shows the new values of the modified attributes.
     * 
     */
    public List<GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute> modifiedAttributes() {
        return this.modifiedAttributes == null ? List.of() : this.modifiedAttributes;
    }
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return The type of the database object that contains the sensitive column.
     * 
     */
    public Optional<String> objectType() {
        return Optional.ofNullable(this.objectType);
    }
    /**
     * @return Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
     * 
     */
    public List<String> parentColumnKeys() {
        return this.parentColumnKeys == null ? List.of() : this.parentColumnKeys;
    }
    /**
     * @return A filter to return only the resources that match the specified planned action.
     * 
     */
    public Optional<String> plannedAction() {
        return Optional.ofNullable(this.plannedAction);
    }
    /**
     * @return The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
     * 
     */
    public Optional<String> relationType() {
        return Optional.ofNullable(this.relationType);
    }
    /**
     * @return Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
     * 
     */
    public List<String> sampleDataValues() {
        return this.sampleDataValues == null ? List.of() : this.sampleDataValues;
    }
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    public Optional<String> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }
    /**
     * @return The unique key that identifies the sensitive column represented by the discovery result.
     * 
     */
    public Optional<String> sensitiveColumnkey() {
        return Optional.ofNullable(this.sensitiveColumnkey);
    }
    /**
     * @return The OCID of the sensitive type associated with the sensitive column.
     * 
     */
    public Optional<String> sensitiveTypeId() {
        return Optional.ofNullable(this.sensitiveTypeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> appDefinedChildColumnKeys;
        private @Nullable String appName;
        private @Nullable String columnName;
        private @Nullable String dataType;
        private @Nullable List<String> dbDefinedChildColumnKeys;
        private String discoveryJobId;
        private @Nullable String discoveryType;
        private @Nullable String estimatedDataValueCount;
        private @Nullable Boolean isResultApplied;
        private @Nullable String key;
        private @Nullable List<GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute> modifiedAttributes;
        private @Nullable String object;
        private @Nullable String objectType;
        private @Nullable List<String> parentColumnKeys;
        private @Nullable String plannedAction;
        private @Nullable String relationType;
        private @Nullable List<String> sampleDataValues;
        private @Nullable String schemaName;
        private @Nullable String sensitiveColumnkey;
        private @Nullable String sensitiveTypeId;
        public Builder() {}
        public Builder(GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appDefinedChildColumnKeys = defaults.appDefinedChildColumnKeys;
    	      this.appName = defaults.appName;
    	      this.columnName = defaults.columnName;
    	      this.dataType = defaults.dataType;
    	      this.dbDefinedChildColumnKeys = defaults.dbDefinedChildColumnKeys;
    	      this.discoveryJobId = defaults.discoveryJobId;
    	      this.discoveryType = defaults.discoveryType;
    	      this.estimatedDataValueCount = defaults.estimatedDataValueCount;
    	      this.isResultApplied = defaults.isResultApplied;
    	      this.key = defaults.key;
    	      this.modifiedAttributes = defaults.modifiedAttributes;
    	      this.object = defaults.object;
    	      this.objectType = defaults.objectType;
    	      this.parentColumnKeys = defaults.parentColumnKeys;
    	      this.plannedAction = defaults.plannedAction;
    	      this.relationType = defaults.relationType;
    	      this.sampleDataValues = defaults.sampleDataValues;
    	      this.schemaName = defaults.schemaName;
    	      this.sensitiveColumnkey = defaults.sensitiveColumnkey;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
        }

        @CustomType.Setter
        public Builder appDefinedChildColumnKeys(@Nullable List<String> appDefinedChildColumnKeys) {
            this.appDefinedChildColumnKeys = appDefinedChildColumnKeys;
            return this;
        }
        public Builder appDefinedChildColumnKeys(String... appDefinedChildColumnKeys) {
            return appDefinedChildColumnKeys(List.of(appDefinedChildColumnKeys));
        }
        @CustomType.Setter
        public Builder appName(@Nullable String appName) {
            this.appName = appName;
            return this;
        }
        @CustomType.Setter
        public Builder columnName(@Nullable String columnName) {
            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder dataType(@Nullable String dataType) {
            this.dataType = dataType;
            return this;
        }
        @CustomType.Setter
        public Builder dbDefinedChildColumnKeys(@Nullable List<String> dbDefinedChildColumnKeys) {
            this.dbDefinedChildColumnKeys = dbDefinedChildColumnKeys;
            return this;
        }
        public Builder dbDefinedChildColumnKeys(String... dbDefinedChildColumnKeys) {
            return dbDefinedChildColumnKeys(List.of(dbDefinedChildColumnKeys));
        }
        @CustomType.Setter
        public Builder discoveryJobId(String discoveryJobId) {
            this.discoveryJobId = Objects.requireNonNull(discoveryJobId);
            return this;
        }
        @CustomType.Setter
        public Builder discoveryType(@Nullable String discoveryType) {
            this.discoveryType = discoveryType;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedDataValueCount(@Nullable String estimatedDataValueCount) {
            this.estimatedDataValueCount = estimatedDataValueCount;
            return this;
        }
        @CustomType.Setter
        public Builder isResultApplied(@Nullable Boolean isResultApplied) {
            this.isResultApplied = isResultApplied;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedAttributes(@Nullable List<GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute> modifiedAttributes) {
            this.modifiedAttributes = modifiedAttributes;
            return this;
        }
        public Builder modifiedAttributes(GetDiscoveryJobsResultsDiscoveryJobResultCollectionItemModifiedAttribute... modifiedAttributes) {
            return modifiedAttributes(List.of(modifiedAttributes));
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder objectType(@Nullable String objectType) {
            this.objectType = objectType;
            return this;
        }
        @CustomType.Setter
        public Builder parentColumnKeys(@Nullable List<String> parentColumnKeys) {
            this.parentColumnKeys = parentColumnKeys;
            return this;
        }
        public Builder parentColumnKeys(String... parentColumnKeys) {
            return parentColumnKeys(List.of(parentColumnKeys));
        }
        @CustomType.Setter
        public Builder plannedAction(@Nullable String plannedAction) {
            this.plannedAction = plannedAction;
            return this;
        }
        @CustomType.Setter
        public Builder relationType(@Nullable String relationType) {
            this.relationType = relationType;
            return this;
        }
        @CustomType.Setter
        public Builder sampleDataValues(@Nullable List<String> sampleDataValues) {
            this.sampleDataValues = sampleDataValues;
            return this;
        }
        public Builder sampleDataValues(String... sampleDataValues) {
            return sampleDataValues(List.of(sampleDataValues));
        }
        @CustomType.Setter
        public Builder schemaName(@Nullable String schemaName) {
            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveColumnkey(@Nullable String sensitiveColumnkey) {
            this.sensitiveColumnkey = sensitiveColumnkey;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveTypeId(@Nullable String sensitiveTypeId) {
            this.sensitiveTypeId = sensitiveTypeId;
            return this;
        }
        public GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem build() {
            final var o = new GetDiscoveryJobsResultsDiscoveryJobResultCollectionItem();
            o.appDefinedChildColumnKeys = appDefinedChildColumnKeys;
            o.appName = appName;
            o.columnName = columnName;
            o.dataType = dataType;
            o.dbDefinedChildColumnKeys = dbDefinedChildColumnKeys;
            o.discoveryJobId = discoveryJobId;
            o.discoveryType = discoveryType;
            o.estimatedDataValueCount = estimatedDataValueCount;
            o.isResultApplied = isResultApplied;
            o.key = key;
            o.modifiedAttributes = modifiedAttributes;
            o.object = object;
            o.objectType = objectType;
            o.parentColumnKeys = parentColumnKeys;
            o.plannedAction = plannedAction;
            o.relationType = relationType;
            o.sampleDataValues = sampleDataValues;
            o.schemaName = schemaName;
            o.sensitiveColumnkey = sensitiveColumnkey;
            o.sensitiveTypeId = sensitiveTypeId;
            return o;
        }
    }
}
