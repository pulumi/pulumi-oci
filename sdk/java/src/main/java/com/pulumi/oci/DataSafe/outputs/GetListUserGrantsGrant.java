// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetListUserGrantsGrant {
    /**
     * @return A filter to return only items that match the specified user grant depth level.
     * 
     */
    private Integer depthLevel;
    /**
     * @return A filter to return only items that match the specified user grant name.
     * 
     */
    private String grantName;
    /**
     * @return The unique key of a user grant.
     * 
     */
    private String key;
    /**
     * @return A filter to return only items that match the specified user privilege category.
     * 
     */
    private String privilegeCategory;
    /**
     * @return A filter to return only items that match the specified privilege grant type.
     * 
     */
    private String privilegeType;

    private GetListUserGrantsGrant() {}
    /**
     * @return A filter to return only items that match the specified user grant depth level.
     * 
     */
    public Integer depthLevel() {
        return this.depthLevel;
    }
    /**
     * @return A filter to return only items that match the specified user grant name.
     * 
     */
    public String grantName() {
        return this.grantName;
    }
    /**
     * @return The unique key of a user grant.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A filter to return only items that match the specified user privilege category.
     * 
     */
    public String privilegeCategory() {
        return this.privilegeCategory;
    }
    /**
     * @return A filter to return only items that match the specified privilege grant type.
     * 
     */
    public String privilegeType() {
        return this.privilegeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListUserGrantsGrant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer depthLevel;
        private String grantName;
        private String key;
        private String privilegeCategory;
        private String privilegeType;
        public Builder() {}
        public Builder(GetListUserGrantsGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.depthLevel = defaults.depthLevel;
    	      this.grantName = defaults.grantName;
    	      this.key = defaults.key;
    	      this.privilegeCategory = defaults.privilegeCategory;
    	      this.privilegeType = defaults.privilegeType;
        }

        @CustomType.Setter
        public Builder depthLevel(Integer depthLevel) {
            if (depthLevel == null) {
              throw new MissingRequiredPropertyException("GetListUserGrantsGrant", "depthLevel");
            }
            this.depthLevel = depthLevel;
            return this;
        }
        @CustomType.Setter
        public Builder grantName(String grantName) {
            if (grantName == null) {
              throw new MissingRequiredPropertyException("GetListUserGrantsGrant", "grantName");
            }
            this.grantName = grantName;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetListUserGrantsGrant", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder privilegeCategory(String privilegeCategory) {
            if (privilegeCategory == null) {
              throw new MissingRequiredPropertyException("GetListUserGrantsGrant", "privilegeCategory");
            }
            this.privilegeCategory = privilegeCategory;
            return this;
        }
        @CustomType.Setter
        public Builder privilegeType(String privilegeType) {
            if (privilegeType == null) {
              throw new MissingRequiredPropertyException("GetListUserGrantsGrant", "privilegeType");
            }
            this.privilegeType = privilegeType;
            return this;
        }
        public GetListUserGrantsGrant build() {
            final var _resultValue = new GetListUserGrantsGrant();
            _resultValue.depthLevel = depthLevel;
            _resultValue.grantName = grantName;
            _resultValue.key = key;
            _resultValue.privilegeCategory = privilegeCategory;
            _resultValue.privilegeType = privilegeType;
            return _resultValue;
        }
    }
}
