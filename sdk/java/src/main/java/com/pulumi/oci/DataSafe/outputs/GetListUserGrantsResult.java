// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetListUserGrantsFilter;
import com.pulumi.oci.DataSafe.outputs.GetListUserGrantsGrant;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListUserGrantsResult {
    /**
     * @return The grant depth level of the indirect grant. An indirectly granted role/privilege is granted to the user through another role. The depth level indicates how deep a privilege is within the grant hierarchy.
     * 
     */
    private @Nullable Integer depthLevel;
    private @Nullable Integer depthLevelGreaterThanOrEqualTo;
    private @Nullable Integer depthLevelLessThan;
    private @Nullable List<GetListUserGrantsFilter> filters;
    private @Nullable String grantKey;
    /**
     * @return The name of a user grant.
     * 
     */
    private @Nullable String grantName;
    /**
     * @return The list of grants.
     * 
     */
    private List<GetListUserGrantsGrant> grants;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The privilege category.
     * 
     */
    private @Nullable String privilegeCategory;
    /**
     * @return The type of a user grant.
     * 
     */
    private @Nullable String privilegeType;
    private String userAssessmentId;
    private String userKey;

    private GetListUserGrantsResult() {}
    /**
     * @return The grant depth level of the indirect grant. An indirectly granted role/privilege is granted to the user through another role. The depth level indicates how deep a privilege is within the grant hierarchy.
     * 
     */
    public Optional<Integer> depthLevel() {
        return Optional.ofNullable(this.depthLevel);
    }
    public Optional<Integer> depthLevelGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.depthLevelGreaterThanOrEqualTo);
    }
    public Optional<Integer> depthLevelLessThan() {
        return Optional.ofNullable(this.depthLevelLessThan);
    }
    public List<GetListUserGrantsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> grantKey() {
        return Optional.ofNullable(this.grantKey);
    }
    /**
     * @return The name of a user grant.
     * 
     */
    public Optional<String> grantName() {
        return Optional.ofNullable(this.grantName);
    }
    /**
     * @return The list of grants.
     * 
     */
    public List<GetListUserGrantsGrant> grants() {
        return this.grants;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The privilege category.
     * 
     */
    public Optional<String> privilegeCategory() {
        return Optional.ofNullable(this.privilegeCategory);
    }
    /**
     * @return The type of a user grant.
     * 
     */
    public Optional<String> privilegeType() {
        return Optional.ofNullable(this.privilegeType);
    }
    public String userAssessmentId() {
        return this.userAssessmentId;
    }
    public String userKey() {
        return this.userKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListUserGrantsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer depthLevel;
        private @Nullable Integer depthLevelGreaterThanOrEqualTo;
        private @Nullable Integer depthLevelLessThan;
        private @Nullable List<GetListUserGrantsFilter> filters;
        private @Nullable String grantKey;
        private @Nullable String grantName;
        private List<GetListUserGrantsGrant> grants;
        private String id;
        private @Nullable String privilegeCategory;
        private @Nullable String privilegeType;
        private String userAssessmentId;
        private String userKey;
        public Builder() {}
        public Builder(GetListUserGrantsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.depthLevel = defaults.depthLevel;
    	      this.depthLevelGreaterThanOrEqualTo = defaults.depthLevelGreaterThanOrEqualTo;
    	      this.depthLevelLessThan = defaults.depthLevelLessThan;
    	      this.filters = defaults.filters;
    	      this.grantKey = defaults.grantKey;
    	      this.grantName = defaults.grantName;
    	      this.grants = defaults.grants;
    	      this.id = defaults.id;
    	      this.privilegeCategory = defaults.privilegeCategory;
    	      this.privilegeType = defaults.privilegeType;
    	      this.userAssessmentId = defaults.userAssessmentId;
    	      this.userKey = defaults.userKey;
        }

        @CustomType.Setter
        public Builder depthLevel(@Nullable Integer depthLevel) {
            this.depthLevel = depthLevel;
            return this;
        }
        @CustomType.Setter
        public Builder depthLevelGreaterThanOrEqualTo(@Nullable Integer depthLevelGreaterThanOrEqualTo) {
            this.depthLevelGreaterThanOrEqualTo = depthLevelGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder depthLevelLessThan(@Nullable Integer depthLevelLessThan) {
            this.depthLevelLessThan = depthLevelLessThan;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetListUserGrantsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetListUserGrantsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder grantKey(@Nullable String grantKey) {
            this.grantKey = grantKey;
            return this;
        }
        @CustomType.Setter
        public Builder grantName(@Nullable String grantName) {
            this.grantName = grantName;
            return this;
        }
        @CustomType.Setter
        public Builder grants(List<GetListUserGrantsGrant> grants) {
            this.grants = Objects.requireNonNull(grants);
            return this;
        }
        public Builder grants(GetListUserGrantsGrant... grants) {
            return grants(List.of(grants));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder privilegeCategory(@Nullable String privilegeCategory) {
            this.privilegeCategory = privilegeCategory;
            return this;
        }
        @CustomType.Setter
        public Builder privilegeType(@Nullable String privilegeType) {
            this.privilegeType = privilegeType;
            return this;
        }
        @CustomType.Setter
        public Builder userAssessmentId(String userAssessmentId) {
            this.userAssessmentId = Objects.requireNonNull(userAssessmentId);
            return this;
        }
        @CustomType.Setter
        public Builder userKey(String userKey) {
            this.userKey = Objects.requireNonNull(userKey);
            return this;
        }
        public GetListUserGrantsResult build() {
            final var o = new GetListUserGrantsResult();
            o.depthLevel = depthLevel;
            o.depthLevelGreaterThanOrEqualTo = depthLevelGreaterThanOrEqualTo;
            o.depthLevelLessThan = depthLevelLessThan;
            o.filters = filters;
            o.grantKey = grantKey;
            o.grantName = grantName;
            o.grants = grants;
            o.id = id;
            o.privilegeCategory = privilegeCategory;
            o.privilegeType = privilegeType;
            o.userAssessmentId = userAssessmentId;
            o.userKey = userKey;
            return o;
        }
    }
}
