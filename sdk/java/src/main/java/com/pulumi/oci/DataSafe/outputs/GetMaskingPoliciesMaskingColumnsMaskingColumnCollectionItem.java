// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem {
    /**
     * @return An array of child columns that are in referential relationship with the masking column.
     * 
     */
    private @Nullable List<String> childColumns;
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    private String columnName;
    /**
     * @return A filter to return only resources that match the specified data types.
     * 
     */
    private @Nullable String dataType;
    /**
     * @return A filter to return the masking column resources based on the value of their isMaskingEnabled attribute. A value of true returns only those columns for which masking is enabled. A value of false returns only those columns for which masking is disabled. Omitting this parameter returns all the masking columns in a masking policy.
     * 
     */
    private @Nullable Boolean isMaskingEnabled;
    /**
     * @return The unique key that identifies the masking column. It&#39;s numeric and unique within a masking policy.
     * 
     */
    private @Nullable String key;
    /**
     * @return Details about the current state of the masking column.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return A filter to return only the resources that match the specified masking column group.
     * 
     */
    private @Nullable String maskingColumnGroup;
    /**
     * @return An array of masking formats assigned to the masking column.
     * 
     */
    private @Nullable List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat> maskingFormats;
    /**
     * @return The OCID of the masking policy.
     * 
     */
    private String maskingPolicyId;
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    private String object;
    /**
     * @return A filter to return only items related to a specific object type.
     * 
     */
    private @Nullable String objectType;
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    private String schemaName;
    /**
     * @return A filter to return only items related to a specific sensitive type OCID.
     * 
     */
    private @Nullable String sensitiveTypeId;
    /**
     * @return The current state of the masking column.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeUpdated;

    private GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem() {}
    /**
     * @return An array of child columns that are in referential relationship with the masking column.
     * 
     */
    public List<String> childColumns() {
        return this.childColumns == null ? List.of() : this.childColumns;
    }
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return A filter to return only resources that match the specified data types.
     * 
     */
    public Optional<String> dataType() {
        return Optional.ofNullable(this.dataType);
    }
    /**
     * @return A filter to return the masking column resources based on the value of their isMaskingEnabled attribute. A value of true returns only those columns for which masking is enabled. A value of false returns only those columns for which masking is disabled. Omitting this parameter returns all the masking columns in a masking policy.
     * 
     */
    public Optional<Boolean> isMaskingEnabled() {
        return Optional.ofNullable(this.isMaskingEnabled);
    }
    /**
     * @return The unique key that identifies the masking column. It&#39;s numeric and unique within a masking policy.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Details about the current state of the masking column.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return A filter to return only the resources that match the specified masking column group.
     * 
     */
    public Optional<String> maskingColumnGroup() {
        return Optional.ofNullable(this.maskingColumnGroup);
    }
    /**
     * @return An array of masking formats assigned to the masking column.
     * 
     */
    public List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat> maskingFormats() {
        return this.maskingFormats == null ? List.of() : this.maskingFormats;
    }
    /**
     * @return The OCID of the masking policy.
     * 
     */
    public String maskingPolicyId() {
        return this.maskingPolicyId;
    }
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return A filter to return only items related to a specific object type.
     * 
     */
    public Optional<String> objectType() {
        return Optional.ofNullable(this.objectType);
    }
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    public String schemaName() {
        return this.schemaName;
    }
    /**
     * @return A filter to return only items related to a specific sensitive type OCID.
     * 
     */
    public Optional<String> sensitiveTypeId() {
        return Optional.ofNullable(this.sensitiveTypeId);
    }
    /**
     * @return The current state of the masking column.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> childColumns;
        private String columnName;
        private @Nullable String dataType;
        private @Nullable Boolean isMaskingEnabled;
        private @Nullable String key;
        private @Nullable String lifecycleDetails;
        private @Nullable String maskingColumnGroup;
        private @Nullable List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat> maskingFormats;
        private String maskingPolicyId;
        private String object;
        private @Nullable String objectType;
        private String schemaName;
        private @Nullable String sensitiveTypeId;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childColumns = defaults.childColumns;
    	      this.columnName = defaults.columnName;
    	      this.dataType = defaults.dataType;
    	      this.isMaskingEnabled = defaults.isMaskingEnabled;
    	      this.key = defaults.key;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maskingColumnGroup = defaults.maskingColumnGroup;
    	      this.maskingFormats = defaults.maskingFormats;
    	      this.maskingPolicyId = defaults.maskingPolicyId;
    	      this.object = defaults.object;
    	      this.objectType = defaults.objectType;
    	      this.schemaName = defaults.schemaName;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder childColumns(@Nullable List<String> childColumns) {
            this.childColumns = childColumns;
            return this;
        }
        public Builder childColumns(String... childColumns) {
            return childColumns(List.of(childColumns));
        }
        @CustomType.Setter
        public Builder columnName(String columnName) {
            this.columnName = Objects.requireNonNull(columnName);
            return this;
        }
        @CustomType.Setter
        public Builder dataType(@Nullable String dataType) {
            this.dataType = dataType;
            return this;
        }
        @CustomType.Setter
        public Builder isMaskingEnabled(@Nullable Boolean isMaskingEnabled) {
            this.isMaskingEnabled = isMaskingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maskingColumnGroup(@Nullable String maskingColumnGroup) {
            this.maskingColumnGroup = maskingColumnGroup;
            return this;
        }
        @CustomType.Setter
        public Builder maskingFormats(@Nullable List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat> maskingFormats) {
            this.maskingFormats = maskingFormats;
            return this;
        }
        public Builder maskingFormats(GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItemMaskingFormat... maskingFormats) {
            return maskingFormats(List.of(maskingFormats));
        }
        @CustomType.Setter
        public Builder maskingPolicyId(String maskingPolicyId) {
            this.maskingPolicyId = Objects.requireNonNull(maskingPolicyId);
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        @CustomType.Setter
        public Builder objectType(@Nullable String objectType) {
            this.objectType = objectType;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(String schemaName) {
            this.schemaName = Objects.requireNonNull(schemaName);
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveTypeId(@Nullable String sensitiveTypeId) {
            this.sensitiveTypeId = sensitiveTypeId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem build() {
            final var o = new GetMaskingPoliciesMaskingColumnsMaskingColumnCollectionItem();
            o.childColumns = childColumns;
            o.columnName = columnName;
            o.dataType = dataType;
            o.isMaskingEnabled = isMaskingEnabled;
            o.key = key;
            o.lifecycleDetails = lifecycleDetails;
            o.maskingColumnGroup = maskingColumnGroup;
            o.maskingFormats = maskingFormats;
            o.maskingPolicyId = maskingPolicyId;
            o.object = object;
            o.objectType = objectType;
            o.schemaName = schemaName;
            o.sensitiveTypeId = sensitiveTypeId;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
