// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPolicyHealthReportLogsFilter;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMaskingPolicyHealthReportLogsResult {
    private @Nullable List<GetMaskingPolicyHealthReportLogsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String maskingPolicyHealthReportId;
    /**
     * @return The list of masking_policy_health_report_log_collection.
     * 
     */
    private List<GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection> maskingPolicyHealthReportLogCollections;
    /**
     * @return The log entry type.
     * 
     */
    private @Nullable String messageType;

    private GetMaskingPolicyHealthReportLogsResult() {}
    public List<GetMaskingPolicyHealthReportLogsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String maskingPolicyHealthReportId() {
        return this.maskingPolicyHealthReportId;
    }
    /**
     * @return The list of masking_policy_health_report_log_collection.
     * 
     */
    public List<GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection> maskingPolicyHealthReportLogCollections() {
        return this.maskingPolicyHealthReportLogCollections;
    }
    /**
     * @return The log entry type.
     * 
     */
    public Optional<String> messageType() {
        return Optional.ofNullable(this.messageType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingPolicyHealthReportLogsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetMaskingPolicyHealthReportLogsFilter> filters;
        private String id;
        private String maskingPolicyHealthReportId;
        private List<GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection> maskingPolicyHealthReportLogCollections;
        private @Nullable String messageType;
        public Builder() {}
        public Builder(GetMaskingPolicyHealthReportLogsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.maskingPolicyHealthReportId = defaults.maskingPolicyHealthReportId;
    	      this.maskingPolicyHealthReportLogCollections = defaults.maskingPolicyHealthReportLogCollections;
    	      this.messageType = defaults.messageType;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetMaskingPolicyHealthReportLogsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetMaskingPolicyHealthReportLogsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportLogsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maskingPolicyHealthReportId(String maskingPolicyHealthReportId) {
            if (maskingPolicyHealthReportId == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportLogsResult", "maskingPolicyHealthReportId");
            }
            this.maskingPolicyHealthReportId = maskingPolicyHealthReportId;
            return this;
        }
        @CustomType.Setter
        public Builder maskingPolicyHealthReportLogCollections(List<GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection> maskingPolicyHealthReportLogCollections) {
            if (maskingPolicyHealthReportLogCollections == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportLogsResult", "maskingPolicyHealthReportLogCollections");
            }
            this.maskingPolicyHealthReportLogCollections = maskingPolicyHealthReportLogCollections;
            return this;
        }
        public Builder maskingPolicyHealthReportLogCollections(GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection... maskingPolicyHealthReportLogCollections) {
            return maskingPolicyHealthReportLogCollections(List.of(maskingPolicyHealthReportLogCollections));
        }
        @CustomType.Setter
        public Builder messageType(@Nullable String messageType) {

            this.messageType = messageType;
            return this;
        }
        public GetMaskingPolicyHealthReportLogsResult build() {
            final var _resultValue = new GetMaskingPolicyHealthReportLogsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.maskingPolicyHealthReportId = maskingPolicyHealthReportId;
            _resultValue.maskingPolicyHealthReportLogCollections = maskingPolicyHealthReportLogCollections;
            _resultValue.messageType = messageType;
            return _resultValue;
        }
    }
}
