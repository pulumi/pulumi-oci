// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMaskingPolicyHealthReportResult {
    /**
     * @return The OCID of the compartment that contains the health report.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The description of the masking health report.
     * 
     */
    private String description;
    /**
     * @return The display name of the health report.
     * 
     */
    private String displayName;
    /**
     * @return The count of errors in the masking health report.
     * 
     */
    private String errorCount;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String maskingPolicyHealthReportId;
    /**
     * @return The OCID of the masking policy.
     * 
     */
    private String maskingPolicyId;
    /**
     * @return The current state of the health report.
     * 
     */
    private String state;
    /**
     * @return The OCID of the target database for which this report was created.
     * 
     */
    private String targetId;
    /**
     * @return The date and time the report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the report was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    private String timeUpdated;
    /**
     * @return The count of warnings in the masking health report.
     * 
     */
    private String warningCount;

    private GetMaskingPolicyHealthReportResult() {}
    /**
     * @return The OCID of the compartment that contains the health report.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the masking health report.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the health report.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The count of errors in the masking health report.
     * 
     */
    public String errorCount() {
        return this.errorCount;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String maskingPolicyHealthReportId() {
        return this.maskingPolicyHealthReportId;
    }
    /**
     * @return The OCID of the masking policy.
     * 
     */
    public String maskingPolicyId() {
        return this.maskingPolicyId;
    }
    /**
     * @return The current state of the health report.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The OCID of the target database for which this report was created.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The date and time the report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the report was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The count of warnings in the masking health report.
     * 
     */
    public String warningCount() {
        return this.warningCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingPolicyHealthReportResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private String errorCount;
        private Map<String,String> freeformTags;
        private String id;
        private String maskingPolicyHealthReportId;
        private String maskingPolicyId;
        private String state;
        private String targetId;
        private String timeCreated;
        private String timeUpdated;
        private String warningCount;
        public Builder() {}
        public Builder(GetMaskingPolicyHealthReportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.errorCount = defaults.errorCount;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.maskingPolicyHealthReportId = defaults.maskingPolicyHealthReportId;
    	      this.maskingPolicyId = defaults.maskingPolicyId;
    	      this.state = defaults.state;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.warningCount = defaults.warningCount;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder errorCount(String errorCount) {
            if (errorCount == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "errorCount");
            }
            this.errorCount = errorCount;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maskingPolicyHealthReportId(String maskingPolicyHealthReportId) {
            if (maskingPolicyHealthReportId == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "maskingPolicyHealthReportId");
            }
            this.maskingPolicyHealthReportId = maskingPolicyHealthReportId;
            return this;
        }
        @CustomType.Setter
        public Builder maskingPolicyId(String maskingPolicyId) {
            if (maskingPolicyId == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "maskingPolicyId");
            }
            this.maskingPolicyId = maskingPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder warningCount(String warningCount) {
            if (warningCount == null) {
              throw new MissingRequiredPropertyException("GetMaskingPolicyHealthReportResult", "warningCount");
            }
            this.warningCount = warningCount;
            return this;
        }
        public GetMaskingPolicyHealthReportResult build() {
            final var _resultValue = new GetMaskingPolicyHealthReportResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.errorCount = errorCount;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.maskingPolicyHealthReportId = maskingPolicyHealthReportId;
            _resultValue.maskingPolicyId = maskingPolicyId;
            _resultValue.state = state;
            _resultValue.targetId = targetId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.warningCount = warningCount;
            return _resultValue;
        }
    }
}
