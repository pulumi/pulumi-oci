// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetMaskingReportMaskingErrorsFilter;
import com.pulumi.oci.DataSafe.outputs.GetMaskingReportMaskingErrorsMaskingErrorCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMaskingReportMaskingErrorsResult {
    private @Nullable List<GetMaskingReportMaskingErrorsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of masking_error_collection.
     * 
     */
    private List<GetMaskingReportMaskingErrorsMaskingErrorCollection> maskingErrorCollections;
    private String maskingReportId;
    /**
     * @return The stepName of the masking error.
     * 
     */
    private @Nullable String stepName;

    private GetMaskingReportMaskingErrorsResult() {}
    public List<GetMaskingReportMaskingErrorsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of masking_error_collection.
     * 
     */
    public List<GetMaskingReportMaskingErrorsMaskingErrorCollection> maskingErrorCollections() {
        return this.maskingErrorCollections;
    }
    public String maskingReportId() {
        return this.maskingReportId;
    }
    /**
     * @return The stepName of the masking error.
     * 
     */
    public Optional<String> stepName() {
        return Optional.ofNullable(this.stepName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingReportMaskingErrorsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetMaskingReportMaskingErrorsFilter> filters;
        private String id;
        private List<GetMaskingReportMaskingErrorsMaskingErrorCollection> maskingErrorCollections;
        private String maskingReportId;
        private @Nullable String stepName;
        public Builder() {}
        public Builder(GetMaskingReportMaskingErrorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.maskingErrorCollections = defaults.maskingErrorCollections;
    	      this.maskingReportId = defaults.maskingReportId;
    	      this.stepName = defaults.stepName;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetMaskingReportMaskingErrorsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetMaskingReportMaskingErrorsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMaskingReportMaskingErrorsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maskingErrorCollections(List<GetMaskingReportMaskingErrorsMaskingErrorCollection> maskingErrorCollections) {
            if (maskingErrorCollections == null) {
              throw new MissingRequiredPropertyException("GetMaskingReportMaskingErrorsResult", "maskingErrorCollections");
            }
            this.maskingErrorCollections = maskingErrorCollections;
            return this;
        }
        public Builder maskingErrorCollections(GetMaskingReportMaskingErrorsMaskingErrorCollection... maskingErrorCollections) {
            return maskingErrorCollections(List.of(maskingErrorCollections));
        }
        @CustomType.Setter
        public Builder maskingReportId(String maskingReportId) {
            if (maskingReportId == null) {
              throw new MissingRequiredPropertyException("GetMaskingReportMaskingErrorsResult", "maskingReportId");
            }
            this.maskingReportId = maskingReportId;
            return this;
        }
        @CustomType.Setter
        public Builder stepName(@Nullable String stepName) {

            this.stepName = stepName;
            return this;
        }
        public GetMaskingReportMaskingErrorsResult build() {
            final var _resultValue = new GetMaskingReportMaskingErrorsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.maskingErrorCollections = maskingErrorCollections;
            _resultValue.maskingReportId = maskingReportId;
            _resultValue.stepName = stepName;
            return _resultValue;
        }
    }
}
