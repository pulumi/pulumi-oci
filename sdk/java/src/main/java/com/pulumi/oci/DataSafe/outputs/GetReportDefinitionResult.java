// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionColumnFilter;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionColumnInfo;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionColumnSorting;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionSummary;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReportDefinitionResult {
    /**
     * @return Specifies the name of the category that this report belongs to.
     * 
     */
    private @Nullable String category;
    /**
     * @return An array of columnFilter objects. A columnFilter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
     * 
     */
    private @Nullable List<GetReportDefinitionColumnFilter> columnFilters;
    /**
     * @return An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
     * 
     */
    private @Nullable List<GetReportDefinitionColumnInfo> columnInfos;
    /**
     * @return An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
     * 
     */
    private @Nullable List<GetReportDefinitionColumnSorting> columnSortings;
    /**
     * @return The OCID of the compartment containing the report definition.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The list of the data protection regulations/standards used in the report that will help demonstrate compliance.
     * 
     */
    private @Nullable List<String> complianceStandards;
    /**
     * @return Specifies the name of a resource that provides data for the report. For example alerts, events.
     * 
     */
    private @Nullable String dataSource;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A description of the report definition.
     * 
     */
    private @Nullable String description;
    /**
     * @return Name of the report definition.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Specifies the order in which the summary must be displayed.
     * 
     */
    private @Nullable Integer displayOrder;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the report definition.
     * 
     */
    private @Nullable String id;
    /**
     * @return Signifies whether the definition is seeded or user defined. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    private @Nullable Boolean isSeeded;
    /**
     * @return The OCID of the parent report definition. In the case of seeded report definition, this is same as definition OCID.
     * 
     */
    private @Nullable String parentId;
    /**
     * @return The time span for the records in the report to be scheduled. &lt;period-value&gt;&lt;period&gt; Allowed period strings - &#34;H&#34;,&#34;D&#34;,&#34;M&#34;,&#34;Y&#34; Each of the above fields potentially introduce constraints. A workRequest is created only when period-value satisfies all the constraints. Constraints introduced: 1. period = H (The allowed range for period-value is [1, 23]) 2. period = D (The allowed range for period-value is [1, 30]) 3. period = M (The allowed range for period-value is [1, 11]) 4. period = Y (The minimum period-value is 1)
     * 
     */
    private @Nullable String recordTimeSpan;
    private String reportDefinitionId;
    /**
     * @return The schedule to generate the report periodically in the specified format: &lt;version-string&gt;;&lt;version-specific-schedule&gt;
     * 
     */
    private @Nullable String schedule;
    /**
     * @return The OCID of the compartment in which the scheduled resource should be created.
     * 
     */
    private @Nullable String scheduledReportCompartmentId;
    /**
     * @return Specifies the format of the report ( either XLS or PDF )
     * 
     */
    private @Nullable String scheduledReportMimeType;
    /**
     * @return The name of the report to be scheduled.
     * 
     */
    private @Nullable String scheduledReportName;
    /**
     * @return Specifies the limit on the number of rows in the report.
     * 
     */
    private @Nullable Integer scheduledReportRowLimit;
    /**
     * @return Additional scim filters used to get the specific summary.
     * 
     */
    private @Nullable String scimFilter;
    /**
     * @return The current state of the report.
     * 
     */
    private @Nullable String state;
    /**
     * @return An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
     * 
     */
    private @Nullable List<GetReportDefinitionSummary> summaries;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return Specifies the data and time the report definition was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the report definition was update.
     * 
     */
    private @Nullable String timeUpdated;

    private GetReportDefinitionResult() {}
    /**
     * @return Specifies the name of the category that this report belongs to.
     * 
     */
    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }
    /**
     * @return An array of columnFilter objects. A columnFilter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
     * 
     */
    public List<GetReportDefinitionColumnFilter> columnFilters() {
        return this.columnFilters == null ? List.of() : this.columnFilters;
    }
    /**
     * @return An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
     * 
     */
    public List<GetReportDefinitionColumnInfo> columnInfos() {
        return this.columnInfos == null ? List.of() : this.columnInfos;
    }
    /**
     * @return An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
     * 
     */
    public List<GetReportDefinitionColumnSorting> columnSortings() {
        return this.columnSortings == null ? List.of() : this.columnSortings;
    }
    /**
     * @return The OCID of the compartment containing the report definition.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The list of the data protection regulations/standards used in the report that will help demonstrate compliance.
     * 
     */
    public List<String> complianceStandards() {
        return this.complianceStandards == null ? List.of() : this.complianceStandards;
    }
    /**
     * @return Specifies the name of a resource that provides data for the report. For example alerts, events.
     * 
     */
    public Optional<String> dataSource() {
        return Optional.ofNullable(this.dataSource);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A description of the report definition.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Name of the report definition.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Specifies the order in which the summary must be displayed.
     * 
     */
    public Optional<Integer> displayOrder() {
        return Optional.ofNullable(this.displayOrder);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the report definition.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Signifies whether the definition is seeded or user defined. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    public Optional<Boolean> isSeeded() {
        return Optional.ofNullable(this.isSeeded);
    }
    /**
     * @return The OCID of the parent report definition. In the case of seeded report definition, this is same as definition OCID.
     * 
     */
    public Optional<String> parentId() {
        return Optional.ofNullable(this.parentId);
    }
    /**
     * @return The time span for the records in the report to be scheduled. &lt;period-value&gt;&lt;period&gt; Allowed period strings - &#34;H&#34;,&#34;D&#34;,&#34;M&#34;,&#34;Y&#34; Each of the above fields potentially introduce constraints. A workRequest is created only when period-value satisfies all the constraints. Constraints introduced: 1. period = H (The allowed range for period-value is [1, 23]) 2. period = D (The allowed range for period-value is [1, 30]) 3. period = M (The allowed range for period-value is [1, 11]) 4. period = Y (The minimum period-value is 1)
     * 
     */
    public Optional<String> recordTimeSpan() {
        return Optional.ofNullable(this.recordTimeSpan);
    }
    public String reportDefinitionId() {
        return this.reportDefinitionId;
    }
    /**
     * @return The schedule to generate the report periodically in the specified format: &lt;version-string&gt;;&lt;version-specific-schedule&gt;
     * 
     */
    public Optional<String> schedule() {
        return Optional.ofNullable(this.schedule);
    }
    /**
     * @return The OCID of the compartment in which the scheduled resource should be created.
     * 
     */
    public Optional<String> scheduledReportCompartmentId() {
        return Optional.ofNullable(this.scheduledReportCompartmentId);
    }
    /**
     * @return Specifies the format of the report ( either XLS or PDF )
     * 
     */
    public Optional<String> scheduledReportMimeType() {
        return Optional.ofNullable(this.scheduledReportMimeType);
    }
    /**
     * @return The name of the report to be scheduled.
     * 
     */
    public Optional<String> scheduledReportName() {
        return Optional.ofNullable(this.scheduledReportName);
    }
    /**
     * @return Specifies the limit on the number of rows in the report.
     * 
     */
    public Optional<Integer> scheduledReportRowLimit() {
        return Optional.ofNullable(this.scheduledReportRowLimit);
    }
    /**
     * @return Additional scim filters used to get the specific summary.
     * 
     */
    public Optional<String> scimFilter() {
        return Optional.ofNullable(this.scimFilter);
    }
    /**
     * @return The current state of the report.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
     * 
     */
    public List<GetReportDefinitionSummary> summaries() {
        return this.summaries == null ? List.of() : this.summaries;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return Specifies the data and time the report definition was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the report definition was update.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReportDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String category;
        private @Nullable List<GetReportDefinitionColumnFilter> columnFilters;
        private @Nullable List<GetReportDefinitionColumnInfo> columnInfos;
        private @Nullable List<GetReportDefinitionColumnSorting> columnSortings;
        private @Nullable String compartmentId;
        private @Nullable List<String> complianceStandards;
        private @Nullable String dataSource;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Integer displayOrder;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isSeeded;
        private @Nullable String parentId;
        private @Nullable String recordTimeSpan;
        private String reportDefinitionId;
        private @Nullable String schedule;
        private @Nullable String scheduledReportCompartmentId;
        private @Nullable String scheduledReportMimeType;
        private @Nullable String scheduledReportName;
        private @Nullable Integer scheduledReportRowLimit;
        private @Nullable String scimFilter;
        private @Nullable String state;
        private @Nullable List<GetReportDefinitionSummary> summaries;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetReportDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.columnFilters = defaults.columnFilters;
    	      this.columnInfos = defaults.columnInfos;
    	      this.columnSortings = defaults.columnSortings;
    	      this.compartmentId = defaults.compartmentId;
    	      this.complianceStandards = defaults.complianceStandards;
    	      this.dataSource = defaults.dataSource;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.displayOrder = defaults.displayOrder;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isSeeded = defaults.isSeeded;
    	      this.parentId = defaults.parentId;
    	      this.recordTimeSpan = defaults.recordTimeSpan;
    	      this.reportDefinitionId = defaults.reportDefinitionId;
    	      this.schedule = defaults.schedule;
    	      this.scheduledReportCompartmentId = defaults.scheduledReportCompartmentId;
    	      this.scheduledReportMimeType = defaults.scheduledReportMimeType;
    	      this.scheduledReportName = defaults.scheduledReportName;
    	      this.scheduledReportRowLimit = defaults.scheduledReportRowLimit;
    	      this.scimFilter = defaults.scimFilter;
    	      this.state = defaults.state;
    	      this.summaries = defaults.summaries;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder category(@Nullable String category) {
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder columnFilters(@Nullable List<GetReportDefinitionColumnFilter> columnFilters) {
            this.columnFilters = columnFilters;
            return this;
        }
        public Builder columnFilters(GetReportDefinitionColumnFilter... columnFilters) {
            return columnFilters(List.of(columnFilters));
        }
        @CustomType.Setter
        public Builder columnInfos(@Nullable List<GetReportDefinitionColumnInfo> columnInfos) {
            this.columnInfos = columnInfos;
            return this;
        }
        public Builder columnInfos(GetReportDefinitionColumnInfo... columnInfos) {
            return columnInfos(List.of(columnInfos));
        }
        @CustomType.Setter
        public Builder columnSortings(@Nullable List<GetReportDefinitionColumnSorting> columnSortings) {
            this.columnSortings = columnSortings;
            return this;
        }
        public Builder columnSortings(GetReportDefinitionColumnSorting... columnSortings) {
            return columnSortings(List.of(columnSortings));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder complianceStandards(@Nullable List<String> complianceStandards) {
            this.complianceStandards = complianceStandards;
            return this;
        }
        public Builder complianceStandards(String... complianceStandards) {
            return complianceStandards(List.of(complianceStandards));
        }
        @CustomType.Setter
        public Builder dataSource(@Nullable String dataSource) {
            this.dataSource = dataSource;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder displayOrder(@Nullable Integer displayOrder) {
            this.displayOrder = displayOrder;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSeeded(@Nullable Boolean isSeeded) {
            this.isSeeded = isSeeded;
            return this;
        }
        @CustomType.Setter
        public Builder parentId(@Nullable String parentId) {
            this.parentId = parentId;
            return this;
        }
        @CustomType.Setter
        public Builder recordTimeSpan(@Nullable String recordTimeSpan) {
            this.recordTimeSpan = recordTimeSpan;
            return this;
        }
        @CustomType.Setter
        public Builder reportDefinitionId(String reportDefinitionId) {
            this.reportDefinitionId = Objects.requireNonNull(reportDefinitionId);
            return this;
        }
        @CustomType.Setter
        public Builder schedule(@Nullable String schedule) {
            this.schedule = schedule;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledReportCompartmentId(@Nullable String scheduledReportCompartmentId) {
            this.scheduledReportCompartmentId = scheduledReportCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledReportMimeType(@Nullable String scheduledReportMimeType) {
            this.scheduledReportMimeType = scheduledReportMimeType;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledReportName(@Nullable String scheduledReportName) {
            this.scheduledReportName = scheduledReportName;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledReportRowLimit(@Nullable Integer scheduledReportRowLimit) {
            this.scheduledReportRowLimit = scheduledReportRowLimit;
            return this;
        }
        @CustomType.Setter
        public Builder scimFilter(@Nullable String scimFilter) {
            this.scimFilter = scimFilter;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder summaries(@Nullable List<GetReportDefinitionSummary> summaries) {
            this.summaries = summaries;
            return this;
        }
        public Builder summaries(GetReportDefinitionSummary... summaries) {
            return summaries(List.of(summaries));
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetReportDefinitionResult build() {
            final var o = new GetReportDefinitionResult();
            o.category = category;
            o.columnFilters = columnFilters;
            o.columnInfos = columnInfos;
            o.columnSortings = columnSortings;
            o.compartmentId = compartmentId;
            o.complianceStandards = complianceStandards;
            o.dataSource = dataSource;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.displayOrder = displayOrder;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isSeeded = isSeeded;
            o.parentId = parentId;
            o.recordTimeSpan = recordTimeSpan;
            o.reportDefinitionId = reportDefinitionId;
            o.schedule = schedule;
            o.scheduledReportCompartmentId = scheduledReportCompartmentId;
            o.scheduledReportMimeType = scheduledReportMimeType;
            o.scheduledReportName = scheduledReportName;
            o.scheduledReportRowLimit = scheduledReportRowLimit;
            o.scimFilter = scimFilter;
            o.state = state;
            o.summaries = summaries;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
