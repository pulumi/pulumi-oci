// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReportDefinitionsReportDefinitionCollectionItemColumnInfo {
    /**
     * @return Specifies the data type of the column.
     * 
     */
    private @Nullable String dataType;
    /**
     * @return The name of the report definition to query.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Specifies the order in which the summary must be displayed.
     * 
     */
    private @Nullable Integer displayOrder;
    /**
     * @return Name of the column that must be sorted.
     * 
     */
    private @Nullable String fieldName;
    /**
     * @return Indicates if the summary is hidden. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    private @Nullable Boolean isHidden;

    private GetReportDefinitionsReportDefinitionCollectionItemColumnInfo() {}
    /**
     * @return Specifies the data type of the column.
     * 
     */
    public Optional<String> dataType() {
        return Optional.ofNullable(this.dataType);
    }
    /**
     * @return The name of the report definition to query.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Specifies the order in which the summary must be displayed.
     * 
     */
    public Optional<Integer> displayOrder() {
        return Optional.ofNullable(this.displayOrder);
    }
    /**
     * @return Name of the column that must be sorted.
     * 
     */
    public Optional<String> fieldName() {
        return Optional.ofNullable(this.fieldName);
    }
    /**
     * @return Indicates if the summary is hidden. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    public Optional<Boolean> isHidden() {
        return Optional.ofNullable(this.isHidden);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReportDefinitionsReportDefinitionCollectionItemColumnInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dataType;
        private @Nullable String displayName;
        private @Nullable Integer displayOrder;
        private @Nullable String fieldName;
        private @Nullable Boolean isHidden;
        public Builder() {}
        public Builder(GetReportDefinitionsReportDefinitionCollectionItemColumnInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataType = defaults.dataType;
    	      this.displayName = defaults.displayName;
    	      this.displayOrder = defaults.displayOrder;
    	      this.fieldName = defaults.fieldName;
    	      this.isHidden = defaults.isHidden;
        }

        @CustomType.Setter
        public Builder dataType(@Nullable String dataType) {
            this.dataType = dataType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder displayOrder(@Nullable Integer displayOrder) {
            this.displayOrder = displayOrder;
            return this;
        }
        @CustomType.Setter
        public Builder fieldName(@Nullable String fieldName) {
            this.fieldName = fieldName;
            return this;
        }
        @CustomType.Setter
        public Builder isHidden(@Nullable Boolean isHidden) {
            this.isHidden = isHidden;
            return this;
        }
        public GetReportDefinitionsReportDefinitionCollectionItemColumnInfo build() {
            final var o = new GetReportDefinitionsReportDefinitionCollectionItemColumnInfo();
            o.dataType = dataType;
            o.displayName = displayName;
            o.displayOrder = displayOrder;
            o.fieldName = fieldName;
            o.isHidden = isHidden;
            return o;
        }
    }
}
