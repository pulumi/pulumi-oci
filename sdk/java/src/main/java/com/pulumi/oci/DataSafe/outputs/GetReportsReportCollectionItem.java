// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetReportsReportCollectionItem {
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return Specifies the name of a resource that provides data for the report. For example  alerts, events.
     * 
     */
    private String dataSource;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Specifies a description of the report.
     * 
     */
    private String description;
    /**
     * @return The name of the report definition to query.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the report.
     * 
     */
    private String id;
    /**
     * @return Details about the current state of the report in Data Safe.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return An optional filter to return only resources that match the specified mime type.
     * 
     */
    private String mimeType;
    /**
     * @return The ID of the report definition to filter the list of reports
     * 
     */
    private String reportDefinitionId;
    private String reportId;
    /**
     * @return An optional filter to return only resources that match the specified lifecycle state.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Specifies the time at which the report was created.
     * 
     */
    private String timeCreated;
    /**
     * @return Specifies the date and time the report was generated.
     * 
     */
    private String timeGenerated;
    /**
     * @return The date and time of the report update in Data Safe.
     * 
     */
    private String timeUpdated;
    /**
     * @return An optional filter to return only resources that match the specified type.
     * 
     */
    private String type;

    private GetReportsReportCollectionItem() {}
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Specifies the name of a resource that provides data for the report. For example  alerts, events.
     * 
     */
    public String dataSource() {
        return this.dataSource;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Specifies a description of the report.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The name of the report definition to query.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the report.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details about the current state of the report in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return An optional filter to return only resources that match the specified mime type.
     * 
     */
    public String mimeType() {
        return this.mimeType;
    }
    /**
     * @return The ID of the report definition to filter the list of reports
     * 
     */
    public String reportDefinitionId() {
        return this.reportDefinitionId;
    }
    public String reportId() {
        return this.reportId;
    }
    /**
     * @return An optional filter to return only resources that match the specified lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Specifies the time at which the report was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Specifies the date and time the report was generated.
     * 
     */
    public String timeGenerated() {
        return this.timeGenerated;
    }
    /**
     * @return The date and time of the report update in Data Safe.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return An optional filter to return only resources that match the specified type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReportsReportCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String dataSource;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String mimeType;
        private String reportDefinitionId;
        private String reportId;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeGenerated;
        private String timeUpdated;
        private String type;
        public Builder() {}
        public Builder(GetReportsReportCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataSource = defaults.dataSource;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.mimeType = defaults.mimeType;
    	      this.reportDefinitionId = defaults.reportDefinitionId;
    	      this.reportId = defaults.reportId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeGenerated = defaults.timeGenerated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dataSource(String dataSource) {
            if (dataSource == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "dataSource");
            }
            this.dataSource = dataSource;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder mimeType(String mimeType) {
            if (mimeType == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "mimeType");
            }
            this.mimeType = mimeType;
            return this;
        }
        @CustomType.Setter
        public Builder reportDefinitionId(String reportDefinitionId) {
            if (reportDefinitionId == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "reportDefinitionId");
            }
            this.reportDefinitionId = reportDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder reportId(String reportId) {
            if (reportId == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "reportId");
            }
            this.reportId = reportId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeGenerated(String timeGenerated) {
            if (timeGenerated == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "timeGenerated");
            }
            this.timeGenerated = timeGenerated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetReportsReportCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetReportsReportCollectionItem build() {
            final var _resultValue = new GetReportsReportCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.dataSource = dataSource;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.mimeType = mimeType;
            _resultValue.reportDefinitionId = reportDefinitionId;
            _resultValue.reportId = reportId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeGenerated = timeGenerated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
