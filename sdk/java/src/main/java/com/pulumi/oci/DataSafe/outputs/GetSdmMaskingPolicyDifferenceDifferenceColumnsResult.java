// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetSdmMaskingPolicyDifferenceDifferenceColumnsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSdmMaskingPolicyDifferenceDifferenceColumnsResult {
    /**
     * @return The name of the difference column.
     * 
     */
    private @Nullable List<String> columnNames;
    /**
     * @return The type of the SDM masking policy difference column. It can be one of the following three types: NEW: A new sensitive column in the sensitive data model that is not in the masking policy. DELETED: A column that is present in the masking policy but has been deleted from the sensitive data model. MODIFIED: A column that is present in the masking policy as well as the sensitive data model but some of its attributes have been modified.
     * 
     */
    private @Nullable String differenceType;
    private @Nullable List<GetSdmMaskingPolicyDifferenceDifferenceColumnsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The database object that contains the difference column.
     * 
     */
    private @Nullable List<String> objects;
    /**
     * @return Specifies how to process the difference column. It&#39;s set to SYNC by default. Use the PatchSdmMaskingPolicyDifferenceColumns operation to update this attribute. You can choose one of the following options: SYNC: To sync the difference column and update the masking policy to reflect the changes. NO_SYNC: To not sync the difference column so that it doesn&#39;t change the masking policy. After specifying the planned action, you can use the ApplySdmMaskingPolicyDifference operation to automatically process the difference columns.
     * 
     */
    private @Nullable String plannedAction;
    /**
     * @return The database schema that contains the difference column.
     * 
     */
    private @Nullable List<String> schemaNames;
    /**
     * @return The list of sdm_masking_policy_difference_column_collection.
     * 
     */
    private List<GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollection> sdmMaskingPolicyDifferenceColumnCollections;
    private String sdmMaskingPolicyDifferenceId;
    /**
     * @return Indicates if the difference column has been processed. Use GetDifferenceColumn operation to  track whether the difference column has already been processed and applied to the masking policy.
     * 
     */
    private @Nullable String syncStatus;

    private GetSdmMaskingPolicyDifferenceDifferenceColumnsResult() {}
    /**
     * @return The name of the difference column.
     * 
     */
    public List<String> columnNames() {
        return this.columnNames == null ? List.of() : this.columnNames;
    }
    /**
     * @return The type of the SDM masking policy difference column. It can be one of the following three types: NEW: A new sensitive column in the sensitive data model that is not in the masking policy. DELETED: A column that is present in the masking policy but has been deleted from the sensitive data model. MODIFIED: A column that is present in the masking policy as well as the sensitive data model but some of its attributes have been modified.
     * 
     */
    public Optional<String> differenceType() {
        return Optional.ofNullable(this.differenceType);
    }
    public List<GetSdmMaskingPolicyDifferenceDifferenceColumnsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The database object that contains the difference column.
     * 
     */
    public List<String> objects() {
        return this.objects == null ? List.of() : this.objects;
    }
    /**
     * @return Specifies how to process the difference column. It&#39;s set to SYNC by default. Use the PatchSdmMaskingPolicyDifferenceColumns operation to update this attribute. You can choose one of the following options: SYNC: To sync the difference column and update the masking policy to reflect the changes. NO_SYNC: To not sync the difference column so that it doesn&#39;t change the masking policy. After specifying the planned action, you can use the ApplySdmMaskingPolicyDifference operation to automatically process the difference columns.
     * 
     */
    public Optional<String> plannedAction() {
        return Optional.ofNullable(this.plannedAction);
    }
    /**
     * @return The database schema that contains the difference column.
     * 
     */
    public List<String> schemaNames() {
        return this.schemaNames == null ? List.of() : this.schemaNames;
    }
    /**
     * @return The list of sdm_masking_policy_difference_column_collection.
     * 
     */
    public List<GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollection> sdmMaskingPolicyDifferenceColumnCollections() {
        return this.sdmMaskingPolicyDifferenceColumnCollections;
    }
    public String sdmMaskingPolicyDifferenceId() {
        return this.sdmMaskingPolicyDifferenceId;
    }
    /**
     * @return Indicates if the difference column has been processed. Use GetDifferenceColumn operation to  track whether the difference column has already been processed and applied to the masking policy.
     * 
     */
    public Optional<String> syncStatus() {
        return Optional.ofNullable(this.syncStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSdmMaskingPolicyDifferenceDifferenceColumnsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> columnNames;
        private @Nullable String differenceType;
        private @Nullable List<GetSdmMaskingPolicyDifferenceDifferenceColumnsFilter> filters;
        private String id;
        private @Nullable List<String> objects;
        private @Nullable String plannedAction;
        private @Nullable List<String> schemaNames;
        private List<GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollection> sdmMaskingPolicyDifferenceColumnCollections;
        private String sdmMaskingPolicyDifferenceId;
        private @Nullable String syncStatus;
        public Builder() {}
        public Builder(GetSdmMaskingPolicyDifferenceDifferenceColumnsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnNames = defaults.columnNames;
    	      this.differenceType = defaults.differenceType;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.objects = defaults.objects;
    	      this.plannedAction = defaults.plannedAction;
    	      this.schemaNames = defaults.schemaNames;
    	      this.sdmMaskingPolicyDifferenceColumnCollections = defaults.sdmMaskingPolicyDifferenceColumnCollections;
    	      this.sdmMaskingPolicyDifferenceId = defaults.sdmMaskingPolicyDifferenceId;
    	      this.syncStatus = defaults.syncStatus;
        }

        @CustomType.Setter
        public Builder columnNames(@Nullable List<String> columnNames) {
            this.columnNames = columnNames;
            return this;
        }
        public Builder columnNames(String... columnNames) {
            return columnNames(List.of(columnNames));
        }
        @CustomType.Setter
        public Builder differenceType(@Nullable String differenceType) {
            this.differenceType = differenceType;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSdmMaskingPolicyDifferenceDifferenceColumnsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSdmMaskingPolicyDifferenceDifferenceColumnsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder objects(@Nullable List<String> objects) {
            this.objects = objects;
            return this;
        }
        public Builder objects(String... objects) {
            return objects(List.of(objects));
        }
        @CustomType.Setter
        public Builder plannedAction(@Nullable String plannedAction) {
            this.plannedAction = plannedAction;
            return this;
        }
        @CustomType.Setter
        public Builder schemaNames(@Nullable List<String> schemaNames) {
            this.schemaNames = schemaNames;
            return this;
        }
        public Builder schemaNames(String... schemaNames) {
            return schemaNames(List.of(schemaNames));
        }
        @CustomType.Setter
        public Builder sdmMaskingPolicyDifferenceColumnCollections(List<GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollection> sdmMaskingPolicyDifferenceColumnCollections) {
            this.sdmMaskingPolicyDifferenceColumnCollections = Objects.requireNonNull(sdmMaskingPolicyDifferenceColumnCollections);
            return this;
        }
        public Builder sdmMaskingPolicyDifferenceColumnCollections(GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollection... sdmMaskingPolicyDifferenceColumnCollections) {
            return sdmMaskingPolicyDifferenceColumnCollections(List.of(sdmMaskingPolicyDifferenceColumnCollections));
        }
        @CustomType.Setter
        public Builder sdmMaskingPolicyDifferenceId(String sdmMaskingPolicyDifferenceId) {
            this.sdmMaskingPolicyDifferenceId = Objects.requireNonNull(sdmMaskingPolicyDifferenceId);
            return this;
        }
        @CustomType.Setter
        public Builder syncStatus(@Nullable String syncStatus) {
            this.syncStatus = syncStatus;
            return this;
        }
        public GetSdmMaskingPolicyDifferenceDifferenceColumnsResult build() {
            final var _resultValue = new GetSdmMaskingPolicyDifferenceDifferenceColumnsResult();
            _resultValue.columnNames = columnNames;
            _resultValue.differenceType = differenceType;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.objects = objects;
            _resultValue.plannedAction = plannedAction;
            _resultValue.schemaNames = schemaNames;
            _resultValue.sdmMaskingPolicyDifferenceColumnCollections = sdmMaskingPolicyDifferenceColumnCollections;
            _resultValue.sdmMaskingPolicyDifferenceId = sdmMaskingPolicyDifferenceId;
            _resultValue.syncStatus = syncStatus;
            return _resultValue;
        }
    }
}
