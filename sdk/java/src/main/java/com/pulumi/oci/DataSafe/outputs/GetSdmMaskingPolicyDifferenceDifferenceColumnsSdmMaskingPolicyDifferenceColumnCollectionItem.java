// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem {
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    private String columnName;
    /**
     * @return A filter to return only the SDM masking policy difference columns that match the specified difference type
     * 
     */
    private String differenceType;
    /**
     * @return The unique key that identifies the SDM masking policy difference column.
     * 
     */
    private String key;
    /**
     * @return The unique key that identifies the masking column represented by the SDM masking policy difference column.
     * 
     */
    private String maskingColumnkey;
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    private String object;
    /**
     * @return A filter to return only the SDM masking policy difference columns that match the specified planned action.
     * 
     */
    private String plannedAction;
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    private String schemaName;
    /**
     * @return The unique key that identifies the sensitive column represented by the SDM masking policy difference column.
     * 
     */
    private String sensitiveColumnkey;
    /**
     * @return The OCID of the sensitive type associated with the difference column.
     * 
     */
    private String sensitiveTypeId;
    /**
     * @return A filter to return the SDM masking policy difference columns based on the value of their syncStatus attribute.
     * 
     */
    private String syncStatus;
    /**
     * @return The date and time the SDM masking policy difference column was last synced, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeLastSynced;

    private GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem() {}
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return A filter to return only the SDM masking policy difference columns that match the specified difference type
     * 
     */
    public String differenceType() {
        return this.differenceType;
    }
    /**
     * @return The unique key that identifies the SDM masking policy difference column.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The unique key that identifies the masking column represented by the SDM masking policy difference column.
     * 
     */
    public String maskingColumnkey() {
        return this.maskingColumnkey;
    }
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return A filter to return only the SDM masking policy difference columns that match the specified planned action.
     * 
     */
    public String plannedAction() {
        return this.plannedAction;
    }
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    public String schemaName() {
        return this.schemaName;
    }
    /**
     * @return The unique key that identifies the sensitive column represented by the SDM masking policy difference column.
     * 
     */
    public String sensitiveColumnkey() {
        return this.sensitiveColumnkey;
    }
    /**
     * @return The OCID of the sensitive type associated with the difference column.
     * 
     */
    public String sensitiveTypeId() {
        return this.sensitiveTypeId;
    }
    /**
     * @return A filter to return the SDM masking policy difference columns based on the value of their syncStatus attribute.
     * 
     */
    public String syncStatus() {
        return this.syncStatus;
    }
    /**
     * @return The date and time the SDM masking policy difference column was last synced, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeLastSynced() {
        return this.timeLastSynced;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String columnName;
        private String differenceType;
        private String key;
        private String maskingColumnkey;
        private String object;
        private String plannedAction;
        private String schemaName;
        private String sensitiveColumnkey;
        private String sensitiveTypeId;
        private String syncStatus;
        private String timeLastSynced;
        public Builder() {}
        public Builder(GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.differenceType = defaults.differenceType;
    	      this.key = defaults.key;
    	      this.maskingColumnkey = defaults.maskingColumnkey;
    	      this.object = defaults.object;
    	      this.plannedAction = defaults.plannedAction;
    	      this.schemaName = defaults.schemaName;
    	      this.sensitiveColumnkey = defaults.sensitiveColumnkey;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
    	      this.syncStatus = defaults.syncStatus;
    	      this.timeLastSynced = defaults.timeLastSynced;
        }

        @CustomType.Setter
        public Builder columnName(String columnName) {
            if (columnName == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "columnName");
            }
            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder differenceType(String differenceType) {
            if (differenceType == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "differenceType");
            }
            this.differenceType = differenceType;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder maskingColumnkey(String maskingColumnkey) {
            if (maskingColumnkey == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "maskingColumnkey");
            }
            this.maskingColumnkey = maskingColumnkey;
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            if (object == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "object");
            }
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder plannedAction(String plannedAction) {
            if (plannedAction == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "plannedAction");
            }
            this.plannedAction = plannedAction;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(String schemaName) {
            if (schemaName == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "schemaName");
            }
            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveColumnkey(String sensitiveColumnkey) {
            if (sensitiveColumnkey == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "sensitiveColumnkey");
            }
            this.sensitiveColumnkey = sensitiveColumnkey;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveTypeId(String sensitiveTypeId) {
            if (sensitiveTypeId == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "sensitiveTypeId");
            }
            this.sensitiveTypeId = sensitiveTypeId;
            return this;
        }
        @CustomType.Setter
        public Builder syncStatus(String syncStatus) {
            if (syncStatus == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "syncStatus");
            }
            this.syncStatus = syncStatus;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSynced(String timeLastSynced) {
            if (timeLastSynced == null) {
              throw new MissingRequiredPropertyException("GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem", "timeLastSynced");
            }
            this.timeLastSynced = timeLastSynced;
            return this;
        }
        public GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem build() {
            final var _resultValue = new GetSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollectionItem();
            _resultValue.columnName = columnName;
            _resultValue.differenceType = differenceType;
            _resultValue.key = key;
            _resultValue.maskingColumnkey = maskingColumnkey;
            _resultValue.object = object;
            _resultValue.plannedAction = plannedAction;
            _resultValue.schemaName = schemaName;
            _resultValue.sensitiveColumnkey = sensitiveColumnkey;
            _resultValue.sensitiveTypeId = sensitiveTypeId;
            _resultValue.syncStatus = syncStatus;
            _resultValue.timeLastSynced = timeLastSynced;
            return _resultValue;
        }
    }
}
