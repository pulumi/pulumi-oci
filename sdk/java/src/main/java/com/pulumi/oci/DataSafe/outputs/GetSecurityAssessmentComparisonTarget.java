// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetAuditing;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetAuthorizationControl;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetDataEncryption;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetDbConfiguration;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetFineGrainedAccessControl;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetPrivilegesAndRole;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetUserAccount;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityAssessmentComparisonTarget {
    /**
     * @return A comparison between findings belonging to Auditing category.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetAuditing> auditings;
    /**
     * @return A comparison between findings belonging to Authorization Control category.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetAuthorizationControl> authorizationControls;
    /**
     * @return The OCID of the target that is used as a baseline in this comparison.
     * 
     */
    private @Nullable String baselineTargetId;
    /**
     * @return The OCID of the target to be compared against the baseline target.
     * 
     */
    private @Nullable String currentTargetId;
    /**
     * @return Comparison between findings belonging to Data Encryption category.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetDataEncryption> dataEncryptions;
    /**
     * @return Comparison between findings belonging to Database Configuration category.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetDbConfiguration> dbConfigurations;
    /**
     * @return Comparison between findings belonging to Fine-Grained Access Control category.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetFineGrainedAccessControl> fineGrainedAccessControls;
    /**
     * @return Comparison between findings belonging to Privileges and Roles category.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetPrivilegesAndRole> privilegesAndRoles;
    /**
     * @return Comparison between findings belonging to User Accounts category.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetUserAccount> userAccounts;

    private GetSecurityAssessmentComparisonTarget() {}
    /**
     * @return A comparison between findings belonging to Auditing category.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetAuditing> auditings() {
        return this.auditings == null ? List.of() : this.auditings;
    }
    /**
     * @return A comparison between findings belonging to Authorization Control category.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetAuthorizationControl> authorizationControls() {
        return this.authorizationControls == null ? List.of() : this.authorizationControls;
    }
    /**
     * @return The OCID of the target that is used as a baseline in this comparison.
     * 
     */
    public Optional<String> baselineTargetId() {
        return Optional.ofNullable(this.baselineTargetId);
    }
    /**
     * @return The OCID of the target to be compared against the baseline target.
     * 
     */
    public Optional<String> currentTargetId() {
        return Optional.ofNullable(this.currentTargetId);
    }
    /**
     * @return Comparison between findings belonging to Data Encryption category.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetDataEncryption> dataEncryptions() {
        return this.dataEncryptions == null ? List.of() : this.dataEncryptions;
    }
    /**
     * @return Comparison between findings belonging to Database Configuration category.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetDbConfiguration> dbConfigurations() {
        return this.dbConfigurations == null ? List.of() : this.dbConfigurations;
    }
    /**
     * @return Comparison between findings belonging to Fine-Grained Access Control category.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetFineGrainedAccessControl> fineGrainedAccessControls() {
        return this.fineGrainedAccessControls == null ? List.of() : this.fineGrainedAccessControls;
    }
    /**
     * @return Comparison between findings belonging to Privileges and Roles category.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetPrivilegesAndRole> privilegesAndRoles() {
        return this.privilegesAndRoles == null ? List.of() : this.privilegesAndRoles;
    }
    /**
     * @return Comparison between findings belonging to User Accounts category.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetUserAccount> userAccounts() {
        return this.userAccounts == null ? List.of() : this.userAccounts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAssessmentComparisonTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSecurityAssessmentComparisonTargetAuditing> auditings;
        private @Nullable List<GetSecurityAssessmentComparisonTargetAuthorizationControl> authorizationControls;
        private @Nullable String baselineTargetId;
        private @Nullable String currentTargetId;
        private @Nullable List<GetSecurityAssessmentComparisonTargetDataEncryption> dataEncryptions;
        private @Nullable List<GetSecurityAssessmentComparisonTargetDbConfiguration> dbConfigurations;
        private @Nullable List<GetSecurityAssessmentComparisonTargetFineGrainedAccessControl> fineGrainedAccessControls;
        private @Nullable List<GetSecurityAssessmentComparisonTargetPrivilegesAndRole> privilegesAndRoles;
        private @Nullable List<GetSecurityAssessmentComparisonTargetUserAccount> userAccounts;
        public Builder() {}
        public Builder(GetSecurityAssessmentComparisonTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditings = defaults.auditings;
    	      this.authorizationControls = defaults.authorizationControls;
    	      this.baselineTargetId = defaults.baselineTargetId;
    	      this.currentTargetId = defaults.currentTargetId;
    	      this.dataEncryptions = defaults.dataEncryptions;
    	      this.dbConfigurations = defaults.dbConfigurations;
    	      this.fineGrainedAccessControls = defaults.fineGrainedAccessControls;
    	      this.privilegesAndRoles = defaults.privilegesAndRoles;
    	      this.userAccounts = defaults.userAccounts;
        }

        @CustomType.Setter
        public Builder auditings(@Nullable List<GetSecurityAssessmentComparisonTargetAuditing> auditings) {
            this.auditings = auditings;
            return this;
        }
        public Builder auditings(GetSecurityAssessmentComparisonTargetAuditing... auditings) {
            return auditings(List.of(auditings));
        }
        @CustomType.Setter
        public Builder authorizationControls(@Nullable List<GetSecurityAssessmentComparisonTargetAuthorizationControl> authorizationControls) {
            this.authorizationControls = authorizationControls;
            return this;
        }
        public Builder authorizationControls(GetSecurityAssessmentComparisonTargetAuthorizationControl... authorizationControls) {
            return authorizationControls(List.of(authorizationControls));
        }
        @CustomType.Setter
        public Builder baselineTargetId(@Nullable String baselineTargetId) {
            this.baselineTargetId = baselineTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder currentTargetId(@Nullable String currentTargetId) {
            this.currentTargetId = currentTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder dataEncryptions(@Nullable List<GetSecurityAssessmentComparisonTargetDataEncryption> dataEncryptions) {
            this.dataEncryptions = dataEncryptions;
            return this;
        }
        public Builder dataEncryptions(GetSecurityAssessmentComparisonTargetDataEncryption... dataEncryptions) {
            return dataEncryptions(List.of(dataEncryptions));
        }
        @CustomType.Setter
        public Builder dbConfigurations(@Nullable List<GetSecurityAssessmentComparisonTargetDbConfiguration> dbConfigurations) {
            this.dbConfigurations = dbConfigurations;
            return this;
        }
        public Builder dbConfigurations(GetSecurityAssessmentComparisonTargetDbConfiguration... dbConfigurations) {
            return dbConfigurations(List.of(dbConfigurations));
        }
        @CustomType.Setter
        public Builder fineGrainedAccessControls(@Nullable List<GetSecurityAssessmentComparisonTargetFineGrainedAccessControl> fineGrainedAccessControls) {
            this.fineGrainedAccessControls = fineGrainedAccessControls;
            return this;
        }
        public Builder fineGrainedAccessControls(GetSecurityAssessmentComparisonTargetFineGrainedAccessControl... fineGrainedAccessControls) {
            return fineGrainedAccessControls(List.of(fineGrainedAccessControls));
        }
        @CustomType.Setter
        public Builder privilegesAndRoles(@Nullable List<GetSecurityAssessmentComparisonTargetPrivilegesAndRole> privilegesAndRoles) {
            this.privilegesAndRoles = privilegesAndRoles;
            return this;
        }
        public Builder privilegesAndRoles(GetSecurityAssessmentComparisonTargetPrivilegesAndRole... privilegesAndRoles) {
            return privilegesAndRoles(List.of(privilegesAndRoles));
        }
        @CustomType.Setter
        public Builder userAccounts(@Nullable List<GetSecurityAssessmentComparisonTargetUserAccount> userAccounts) {
            this.userAccounts = userAccounts;
            return this;
        }
        public Builder userAccounts(GetSecurityAssessmentComparisonTargetUserAccount... userAccounts) {
            return userAccounts(List.of(userAccounts));
        }
        public GetSecurityAssessmentComparisonTarget build() {
            final var o = new GetSecurityAssessmentComparisonTarget();
            o.auditings = auditings;
            o.authorizationControls = authorizationControls;
            o.baselineTargetId = baselineTargetId;
            o.currentTargetId = currentTargetId;
            o.dataEncryptions = dataEncryptions;
            o.dbConfigurations = dbConfigurations;
            o.fineGrainedAccessControls = fineGrainedAccessControls;
            o.privilegesAndRoles = privilegesAndRoles;
            o.userAccounts = userAccounts;
            return o;
        }
    }
}
