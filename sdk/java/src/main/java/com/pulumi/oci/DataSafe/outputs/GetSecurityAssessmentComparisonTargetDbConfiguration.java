// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetDbConfigurationBaseline;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentComparisonTargetDbConfigurationCurrent;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityAssessmentComparisonTargetDbConfiguration {
    /**
     * @return This array identifies the items that are present in the current assessment, but are missing from the baseline.
     * 
     */
    private @Nullable List<String> addedItems;
    /**
     * @return The particular finding reported by the security assessment.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetDbConfigurationBaseline> baselines;
    /**
     * @return The particular finding reported by the security assessment.
     * 
     */
    private @Nullable List<GetSecurityAssessmentComparisonTargetDbConfigurationCurrent> currents;
    /**
     * @return This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
     * 
     */
    private @Nullable List<String> modifiedItems;
    /**
     * @return This array identifies the items that are present in the baseline, but are missing from the current assessment.
     * 
     */
    private @Nullable List<String> removedItems;
    /**
     * @return The severity of this diff.
     * 
     */
    private @Nullable String severity;

    private GetSecurityAssessmentComparisonTargetDbConfiguration() {}
    /**
     * @return This array identifies the items that are present in the current assessment, but are missing from the baseline.
     * 
     */
    public List<String> addedItems() {
        return this.addedItems == null ? List.of() : this.addedItems;
    }
    /**
     * @return The particular finding reported by the security assessment.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetDbConfigurationBaseline> baselines() {
        return this.baselines == null ? List.of() : this.baselines;
    }
    /**
     * @return The particular finding reported by the security assessment.
     * 
     */
    public List<GetSecurityAssessmentComparisonTargetDbConfigurationCurrent> currents() {
        return this.currents == null ? List.of() : this.currents;
    }
    /**
     * @return This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
     * 
     */
    public List<String> modifiedItems() {
        return this.modifiedItems == null ? List.of() : this.modifiedItems;
    }
    /**
     * @return This array identifies the items that are present in the baseline, but are missing from the current assessment.
     * 
     */
    public List<String> removedItems() {
        return this.removedItems == null ? List.of() : this.removedItems;
    }
    /**
     * @return The severity of this diff.
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAssessmentComparisonTargetDbConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> addedItems;
        private @Nullable List<GetSecurityAssessmentComparisonTargetDbConfigurationBaseline> baselines;
        private @Nullable List<GetSecurityAssessmentComparisonTargetDbConfigurationCurrent> currents;
        private @Nullable List<String> modifiedItems;
        private @Nullable List<String> removedItems;
        private @Nullable String severity;
        public Builder() {}
        public Builder(GetSecurityAssessmentComparisonTargetDbConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addedItems = defaults.addedItems;
    	      this.baselines = defaults.baselines;
    	      this.currents = defaults.currents;
    	      this.modifiedItems = defaults.modifiedItems;
    	      this.removedItems = defaults.removedItems;
    	      this.severity = defaults.severity;
        }

        @CustomType.Setter
        public Builder addedItems(@Nullable List<String> addedItems) {
            this.addedItems = addedItems;
            return this;
        }
        public Builder addedItems(String... addedItems) {
            return addedItems(List.of(addedItems));
        }
        @CustomType.Setter
        public Builder baselines(@Nullable List<GetSecurityAssessmentComparisonTargetDbConfigurationBaseline> baselines) {
            this.baselines = baselines;
            return this;
        }
        public Builder baselines(GetSecurityAssessmentComparisonTargetDbConfigurationBaseline... baselines) {
            return baselines(List.of(baselines));
        }
        @CustomType.Setter
        public Builder currents(@Nullable List<GetSecurityAssessmentComparisonTargetDbConfigurationCurrent> currents) {
            this.currents = currents;
            return this;
        }
        public Builder currents(GetSecurityAssessmentComparisonTargetDbConfigurationCurrent... currents) {
            return currents(List.of(currents));
        }
        @CustomType.Setter
        public Builder modifiedItems(@Nullable List<String> modifiedItems) {
            this.modifiedItems = modifiedItems;
            return this;
        }
        public Builder modifiedItems(String... modifiedItems) {
            return modifiedItems(List.of(modifiedItems));
        }
        @CustomType.Setter
        public Builder removedItems(@Nullable List<String> removedItems) {
            this.removedItems = removedItems;
            return this;
        }
        public Builder removedItems(String... removedItems) {
            return removedItems(List.of(removedItems));
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        public GetSecurityAssessmentComparisonTargetDbConfiguration build() {
            final var o = new GetSecurityAssessmentComparisonTargetDbConfiguration();
            o.addedItems = addedItems;
            o.baselines = baselines;
            o.currents = currents;
            o.modifiedItems = modifiedItems;
            o.removedItems = removedItems;
            o.severity = severity;
            return o;
        }
    }
}
