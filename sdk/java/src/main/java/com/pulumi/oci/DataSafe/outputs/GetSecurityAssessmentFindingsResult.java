// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentFindingsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentFindingsFinding;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityAssessmentFindingsResult {
    private @Nullable String accessLevel;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable List<GetSecurityAssessmentFindingsFilter> filters;
    private @Nullable String findingKey;
    /**
     * @return The list of findings.
     * 
     */
    private @Nullable List<GetSecurityAssessmentFindingsFinding> findings;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
     * 
     */
    private @Nullable String references;
    private String securityAssessmentId;
    /**
     * @return The severity of the finding.
     * 
     */
    private @Nullable String severity;

    private GetSecurityAssessmentFindingsResult() {}
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public List<GetSecurityAssessmentFindingsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> findingKey() {
        return Optional.ofNullable(this.findingKey);
    }
    /**
     * @return The list of findings.
     * 
     */
    public List<GetSecurityAssessmentFindingsFinding> findings() {
        return this.findings == null ? List.of() : this.findings;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
     * 
     */
    public Optional<String> references() {
        return Optional.ofNullable(this.references);
    }
    public String securityAssessmentId() {
        return this.securityAssessmentId;
    }
    /**
     * @return The severity of the finding.
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAssessmentFindingsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessLevel;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<GetSecurityAssessmentFindingsFilter> filters;
        private @Nullable String findingKey;
        private @Nullable List<GetSecurityAssessmentFindingsFinding> findings;
        private @Nullable String id;
        private @Nullable String references;
        private String securityAssessmentId;
        private @Nullable String severity;
        public Builder() {}
        public Builder(GetSecurityAssessmentFindingsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.findingKey = defaults.findingKey;
    	      this.findings = defaults.findings;
    	      this.id = defaults.id;
    	      this.references = defaults.references;
    	      this.securityAssessmentId = defaults.securityAssessmentId;
    	      this.severity = defaults.severity;
        }

        @CustomType.Setter
        public Builder accessLevel(@Nullable String accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSecurityAssessmentFindingsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSecurityAssessmentFindingsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder findingKey(@Nullable String findingKey) {
            this.findingKey = findingKey;
            return this;
        }
        @CustomType.Setter
        public Builder findings(@Nullable List<GetSecurityAssessmentFindingsFinding> findings) {
            this.findings = findings;
            return this;
        }
        public Builder findings(GetSecurityAssessmentFindingsFinding... findings) {
            return findings(List.of(findings));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder references(@Nullable String references) {
            this.references = references;
            return this;
        }
        @CustomType.Setter
        public Builder securityAssessmentId(String securityAssessmentId) {
            this.securityAssessmentId = Objects.requireNonNull(securityAssessmentId);
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        public GetSecurityAssessmentFindingsResult build() {
            final var o = new GetSecurityAssessmentFindingsResult();
            o.accessLevel = accessLevel;
            o.compartmentIdInSubtree = compartmentIdInSubtree;
            o.filters = filters;
            o.findingKey = findingKey;
            o.findings = findings;
            o.id = id;
            o.references = references;
            o.securityAssessmentId = securityAssessmentId;
            o.severity = severity;
            return o;
        }
    }
}
