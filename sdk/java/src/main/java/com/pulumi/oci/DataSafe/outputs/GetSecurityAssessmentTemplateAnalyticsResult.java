// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentTemplateAnalyticsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityAssessmentTemplateAnalyticsResult {
    private @Nullable String accessLevel;
    private String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable List<GetSecurityAssessmentTemplateAnalyticsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Indicates whether or not the comparison between the latest assessment and the template baseline assessment is done. If the value is false, it means the comparison is not done yet.
     * 
     */
    private @Nullable Boolean isCompared;
    /**
     * @return Indicates whether or not the latest assessment is compliant with the template baseline assessment. If the value is false, it means there is drift in the comparison report and the totalChecksFailed field will have a non-zero value.
     * 
     */
    private @Nullable Boolean isCompliant;
    /**
     * @return Indicates whether or not the template security assessment is applied to a target group.  If the value is false, it means the template security assessment is applied to a individual target.
     * 
     */
    private @Nullable Boolean isGroup;
    /**
     * @return The OCID of the target database group that the group assessment is created for.  This field will be in the response if the template was applied on a target group.
     * 
     */
    private @Nullable String targetDatabaseGroupId;
    /**
     * @return The OCID of the target database. This field will be in the response if the template was applied on an individual target.
     * 
     */
    private @Nullable String targetId;
    /**
     * @return The list of template_analytics_collection.
     * 
     */
    private List<GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection> templateAnalyticsCollections;
    /**
     * @return The OCID of the security assessment of type TEMPLATE.
     * 
     */
    private @Nullable String templateAssessmentId;
    /**
     * @return The OCID of the security assessment of type TEMPLATE_BASELINE.
     * 
     */
    private @Nullable String templateBaselineAssessmentId;

    private GetSecurityAssessmentTemplateAnalyticsResult() {}
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public List<GetSecurityAssessmentTemplateAnalyticsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether or not the comparison between the latest assessment and the template baseline assessment is done. If the value is false, it means the comparison is not done yet.
     * 
     */
    public Optional<Boolean> isCompared() {
        return Optional.ofNullable(this.isCompared);
    }
    /**
     * @return Indicates whether or not the latest assessment is compliant with the template baseline assessment. If the value is false, it means there is drift in the comparison report and the totalChecksFailed field will have a non-zero value.
     * 
     */
    public Optional<Boolean> isCompliant() {
        return Optional.ofNullable(this.isCompliant);
    }
    /**
     * @return Indicates whether or not the template security assessment is applied to a target group.  If the value is false, it means the template security assessment is applied to a individual target.
     * 
     */
    public Optional<Boolean> isGroup() {
        return Optional.ofNullable(this.isGroup);
    }
    /**
     * @return The OCID of the target database group that the group assessment is created for.  This field will be in the response if the template was applied on a target group.
     * 
     */
    public Optional<String> targetDatabaseGroupId() {
        return Optional.ofNullable(this.targetDatabaseGroupId);
    }
    /**
     * @return The OCID of the target database. This field will be in the response if the template was applied on an individual target.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return The list of template_analytics_collection.
     * 
     */
    public List<GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection> templateAnalyticsCollections() {
        return this.templateAnalyticsCollections;
    }
    /**
     * @return The OCID of the security assessment of type TEMPLATE.
     * 
     */
    public Optional<String> templateAssessmentId() {
        return Optional.ofNullable(this.templateAssessmentId);
    }
    /**
     * @return The OCID of the security assessment of type TEMPLATE_BASELINE.
     * 
     */
    public Optional<String> templateBaselineAssessmentId() {
        return Optional.ofNullable(this.templateBaselineAssessmentId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAssessmentTemplateAnalyticsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<GetSecurityAssessmentTemplateAnalyticsFilter> filters;
        private String id;
        private @Nullable Boolean isCompared;
        private @Nullable Boolean isCompliant;
        private @Nullable Boolean isGroup;
        private @Nullable String targetDatabaseGroupId;
        private @Nullable String targetId;
        private List<GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection> templateAnalyticsCollections;
        private @Nullable String templateAssessmentId;
        private @Nullable String templateBaselineAssessmentId;
        public Builder() {}
        public Builder(GetSecurityAssessmentTemplateAnalyticsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isCompared = defaults.isCompared;
    	      this.isCompliant = defaults.isCompliant;
    	      this.isGroup = defaults.isGroup;
    	      this.targetDatabaseGroupId = defaults.targetDatabaseGroupId;
    	      this.targetId = defaults.targetId;
    	      this.templateAnalyticsCollections = defaults.templateAnalyticsCollections;
    	      this.templateAssessmentId = defaults.templateAssessmentId;
    	      this.templateBaselineAssessmentId = defaults.templateBaselineAssessmentId;
        }

        @CustomType.Setter
        public Builder accessLevel(@Nullable String accessLevel) {

            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateAnalyticsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSecurityAssessmentTemplateAnalyticsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSecurityAssessmentTemplateAnalyticsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateAnalyticsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCompared(@Nullable Boolean isCompared) {

            this.isCompared = isCompared;
            return this;
        }
        @CustomType.Setter
        public Builder isCompliant(@Nullable Boolean isCompliant) {

            this.isCompliant = isCompliant;
            return this;
        }
        @CustomType.Setter
        public Builder isGroup(@Nullable Boolean isGroup) {

            this.isGroup = isGroup;
            return this;
        }
        @CustomType.Setter
        public Builder targetDatabaseGroupId(@Nullable String targetDatabaseGroupId) {

            this.targetDatabaseGroupId = targetDatabaseGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {

            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder templateAnalyticsCollections(List<GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection> templateAnalyticsCollections) {
            if (templateAnalyticsCollections == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateAnalyticsResult", "templateAnalyticsCollections");
            }
            this.templateAnalyticsCollections = templateAnalyticsCollections;
            return this;
        }
        public Builder templateAnalyticsCollections(GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection... templateAnalyticsCollections) {
            return templateAnalyticsCollections(List.of(templateAnalyticsCollections));
        }
        @CustomType.Setter
        public Builder templateAssessmentId(@Nullable String templateAssessmentId) {

            this.templateAssessmentId = templateAssessmentId;
            return this;
        }
        @CustomType.Setter
        public Builder templateBaselineAssessmentId(@Nullable String templateBaselineAssessmentId) {

            this.templateBaselineAssessmentId = templateBaselineAssessmentId;
            return this;
        }
        public GetSecurityAssessmentTemplateAnalyticsResult build() {
            final var _resultValue = new GetSecurityAssessmentTemplateAnalyticsResult();
            _resultValue.accessLevel = accessLevel;
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isCompared = isCompared;
            _resultValue.isCompliant = isCompliant;
            _resultValue.isGroup = isGroup;
            _resultValue.targetDatabaseGroupId = targetDatabaseGroupId;
            _resultValue.targetId = targetId;
            _resultValue.templateAnalyticsCollections = templateAnalyticsCollections;
            _resultValue.templateAssessmentId = templateAssessmentId;
            _resultValue.templateBaselineAssessmentId = templateBaselineAssessmentId;
            return _resultValue;
        }
    }
}
