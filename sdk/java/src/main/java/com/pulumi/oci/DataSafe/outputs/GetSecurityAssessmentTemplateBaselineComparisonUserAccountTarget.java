// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget {
    /**
     * @return A unique identifier for the finding. This is common for the finding across targets.
     * 
     */
    private String key;
    /**
     * @return The severity of this diff.
     * 
     */
    private String severity;
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    private String targetId;
    /**
     * @return The short title for the finding.
     * 
     */
    private String title;

    private GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget() {}
    /**
     * @return A unique identifier for the finding. This is common for the finding across targets.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The severity of this diff.
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The short title for the finding.
     * 
     */
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String key;
        private String severity;
        private String targetId;
        private String title;
        public Builder() {}
        public Builder(GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.severity = defaults.severity;
    	      this.targetId = defaults.targetId;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            if (severity == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget", "severity");
            }
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            if (title == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget", "title");
            }
            this.title = title;
            return this;
        }
        public GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget build() {
            final var _resultValue = new GetSecurityAssessmentTemplateBaselineComparisonUserAccountTarget();
            _resultValue.key = key;
            _resultValue.severity = severity;
            _resultValue.targetId = targetId;
            _resultValue.title = title;
            return _resultValue;
        }
    }
}
