// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSecurityAssessmentsSecurityAssessment;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityAssessmentsResult {
    private @Nullable String accessLevel;
    /**
     * @return The OCID of the compartment that contains the security assessment.
     * 
     */
    private String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The display name of the security assessment.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetSecurityAssessmentsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Indicates whether or not the security assessment is set as a baseline. This is applicable only for saved security assessments.
     * 
     */
    private @Nullable Boolean isBaseline;
    private @Nullable Boolean isScheduleAssessment;
    private @Nullable String scheduleAssessmentId;
    /**
     * @return The list of security_assessments.
     * 
     */
    private List<GetSecurityAssessmentsSecurityAssessment> securityAssessments;
    /**
     * @return The current state of the security assessment.
     * 
     */
    private @Nullable String state;
    /**
     * @return The OCID of the target database group that the group assessment is created for.
     * 
     */
    private @Nullable String targetDatabaseGroupId;
    private @Nullable String targetId;
    /**
     * @return Indicates whether the security assessment is for a target database or a target database group.
     * 
     */
    private @Nullable String targetType;
    /**
     * @return The ocid of a security assessment which is of type TEMPLATE, this will be null or empty when type is TEMPLATE.
     * 
     */
    private @Nullable String templateAssessmentId;
    private @Nullable String timeCreatedGreaterThanOrEqualTo;
    private @Nullable String timeCreatedLessThan;
    /**
     * @return Indicates whether the security assessment was created by system or by a user.
     * 
     */
    private @Nullable String triggeredBy;
    /**
     * @return The type of the security assessment. Possible values are:
     * 
     */
    private @Nullable String type;

    private GetSecurityAssessmentsResult() {}
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return The OCID of the compartment that contains the security assessment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The display name of the security assessment.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetSecurityAssessmentsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether or not the security assessment is set as a baseline. This is applicable only for saved security assessments.
     * 
     */
    public Optional<Boolean> isBaseline() {
        return Optional.ofNullable(this.isBaseline);
    }
    public Optional<Boolean> isScheduleAssessment() {
        return Optional.ofNullable(this.isScheduleAssessment);
    }
    public Optional<String> scheduleAssessmentId() {
        return Optional.ofNullable(this.scheduleAssessmentId);
    }
    /**
     * @return The list of security_assessments.
     * 
     */
    public List<GetSecurityAssessmentsSecurityAssessment> securityAssessments() {
        return this.securityAssessments;
    }
    /**
     * @return The current state of the security assessment.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID of the target database group that the group assessment is created for.
     * 
     */
    public Optional<String> targetDatabaseGroupId() {
        return Optional.ofNullable(this.targetDatabaseGroupId);
    }
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return Indicates whether the security assessment is for a target database or a target database group.
     * 
     */
    public Optional<String> targetType() {
        return Optional.ofNullable(this.targetType);
    }
    /**
     * @return The ocid of a security assessment which is of type TEMPLATE, this will be null or empty when type is TEMPLATE.
     * 
     */
    public Optional<String> templateAssessmentId() {
        return Optional.ofNullable(this.templateAssessmentId);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }
    /**
     * @return Indicates whether the security assessment was created by system or by a user.
     * 
     */
    public Optional<String> triggeredBy() {
        return Optional.ofNullable(this.triggeredBy);
    }
    /**
     * @return The type of the security assessment. Possible values are:
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAssessmentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetSecurityAssessmentsFilter> filters;
        private String id;
        private @Nullable Boolean isBaseline;
        private @Nullable Boolean isScheduleAssessment;
        private @Nullable String scheduleAssessmentId;
        private List<GetSecurityAssessmentsSecurityAssessment> securityAssessments;
        private @Nullable String state;
        private @Nullable String targetDatabaseGroupId;
        private @Nullable String targetId;
        private @Nullable String targetType;
        private @Nullable String templateAssessmentId;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        private @Nullable String triggeredBy;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetSecurityAssessmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isBaseline = defaults.isBaseline;
    	      this.isScheduleAssessment = defaults.isScheduleAssessment;
    	      this.scheduleAssessmentId = defaults.scheduleAssessmentId;
    	      this.securityAssessments = defaults.securityAssessments;
    	      this.state = defaults.state;
    	      this.targetDatabaseGroupId = defaults.targetDatabaseGroupId;
    	      this.targetId = defaults.targetId;
    	      this.targetType = defaults.targetType;
    	      this.templateAssessmentId = defaults.templateAssessmentId;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
    	      this.triggeredBy = defaults.triggeredBy;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessLevel(@Nullable String accessLevel) {

            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSecurityAssessmentsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSecurityAssessmentsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isBaseline(@Nullable Boolean isBaseline) {

            this.isBaseline = isBaseline;
            return this;
        }
        @CustomType.Setter
        public Builder isScheduleAssessment(@Nullable Boolean isScheduleAssessment) {

            this.isScheduleAssessment = isScheduleAssessment;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleAssessmentId(@Nullable String scheduleAssessmentId) {

            this.scheduleAssessmentId = scheduleAssessmentId;
            return this;
        }
        @CustomType.Setter
        public Builder securityAssessments(List<GetSecurityAssessmentsSecurityAssessment> securityAssessments) {
            if (securityAssessments == null) {
              throw new MissingRequiredPropertyException("GetSecurityAssessmentsResult", "securityAssessments");
            }
            this.securityAssessments = securityAssessments;
            return this;
        }
        public Builder securityAssessments(GetSecurityAssessmentsSecurityAssessment... securityAssessments) {
            return securityAssessments(List.of(securityAssessments));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetDatabaseGroupId(@Nullable String targetDatabaseGroupId) {

            this.targetDatabaseGroupId = targetDatabaseGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {

            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder targetType(@Nullable String targetType) {

            this.targetType = targetType;
            return this;
        }
        @CustomType.Setter
        public Builder templateAssessmentId(@Nullable String templateAssessmentId) {

            this.templateAssessmentId = templateAssessmentId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {

            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {

            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        @CustomType.Setter
        public Builder triggeredBy(@Nullable String triggeredBy) {

            this.triggeredBy = triggeredBy;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public GetSecurityAssessmentsResult build() {
            final var _resultValue = new GetSecurityAssessmentsResult();
            _resultValue.accessLevel = accessLevel;
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isBaseline = isBaseline;
            _resultValue.isScheduleAssessment = isScheduleAssessment;
            _resultValue.scheduleAssessmentId = scheduleAssessmentId;
            _resultValue.securityAssessments = securityAssessments;
            _resultValue.state = state;
            _resultValue.targetDatabaseGroupId = targetDatabaseGroupId;
            _resultValue.targetId = targetId;
            _resultValue.targetType = targetType;
            _resultValue.templateAssessmentId = templateAssessmentId;
            _resultValue.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            _resultValue.timeCreatedLessThan = timeCreatedLessThan;
            _resultValue.triggeredBy = triggeredBy;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
