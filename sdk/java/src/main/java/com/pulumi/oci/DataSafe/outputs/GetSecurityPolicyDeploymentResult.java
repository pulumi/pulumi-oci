// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSecurityPolicyDeploymentResult {
    /**
     * @return The OCID of the compartment containing the security policy deployment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    private Integer deployTrigger;
    /**
     * @return The description of the security policy deployment.
     * 
     */
    private String description;
    /**
     * @return The display name of the security policy deployment.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the security policy deployment.
     * 
     */
    private String id;
    /**
     * @return Details about the current state of the security policy deployment in Data Safe.
     * 
     */
    private String lifecycleDetails;
    private Integer refreshTrigger;
    private String securityPolicyDeploymentId;
    /**
     * @return The OCID of the security policy corresponding to the security policy deployment.
     * 
     */
    private String securityPolicyId;
    /**
     * @return The current state of the security policy deployment.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The OCID of the target/target group where the security policy is deployed.
     * 
     */
    private String targetId;
    /**
     * @return Indicates whether the security policy deployment is for a target database or a target database group.
     * 
     */
    private String targetType;
    /**
     * @return The time that the security policy deployment was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The last date and time the security policy was deployed, in the format defined by RFC3339.
     * 
     */
    private String timeDeployed;
    /**
     * @return The last date and time the security policy deployment was updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetSecurityPolicyDeploymentResult() {}
    /**
     * @return The OCID of the compartment containing the security policy deployment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    public Integer deployTrigger() {
        return this.deployTrigger;
    }
    /**
     * @return The description of the security policy deployment.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the security policy deployment.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the security policy deployment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details about the current state of the security policy deployment in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public Integer refreshTrigger() {
        return this.refreshTrigger;
    }
    public String securityPolicyDeploymentId() {
        return this.securityPolicyDeploymentId;
    }
    /**
     * @return The OCID of the security policy corresponding to the security policy deployment.
     * 
     */
    public String securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * @return The current state of the security policy deployment.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The OCID of the target/target group where the security policy is deployed.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return Indicates whether the security policy deployment is for a target database or a target database group.
     * 
     */
    public String targetType() {
        return this.targetType;
    }
    /**
     * @return The time that the security policy deployment was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The last date and time the security policy was deployed, in the format defined by RFC3339.
     * 
     */
    public String timeDeployed() {
        return this.timeDeployed;
    }
    /**
     * @return The last date and time the security policy deployment was updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityPolicyDeploymentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private Integer deployTrigger;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private Integer refreshTrigger;
        private String securityPolicyDeploymentId;
        private String securityPolicyId;
        private String state;
        private Map<String,String> systemTags;
        private String targetId;
        private String targetType;
        private String timeCreated;
        private String timeDeployed;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetSecurityPolicyDeploymentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deployTrigger = defaults.deployTrigger;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.refreshTrigger = defaults.refreshTrigger;
    	      this.securityPolicyDeploymentId = defaults.securityPolicyDeploymentId;
    	      this.securityPolicyId = defaults.securityPolicyId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.targetType = defaults.targetType;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDeployed = defaults.timeDeployed;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deployTrigger(Integer deployTrigger) {
            if (deployTrigger == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "deployTrigger");
            }
            this.deployTrigger = deployTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder refreshTrigger(Integer refreshTrigger) {
            if (refreshTrigger == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "refreshTrigger");
            }
            this.refreshTrigger = refreshTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyDeploymentId(String securityPolicyDeploymentId) {
            if (securityPolicyDeploymentId == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "securityPolicyDeploymentId");
            }
            this.securityPolicyDeploymentId = securityPolicyDeploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyId(String securityPolicyId) {
            if (securityPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "securityPolicyId");
            }
            this.securityPolicyId = securityPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder targetType(String targetType) {
            if (targetType == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "targetType");
            }
            this.targetType = targetType;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeDeployed(String timeDeployed) {
            if (timeDeployed == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "timeDeployed");
            }
            this.timeDeployed = timeDeployed;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyDeploymentResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetSecurityPolicyDeploymentResult build() {
            final var _resultValue = new GetSecurityPolicyDeploymentResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.deployTrigger = deployTrigger;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.refreshTrigger = refreshTrigger;
            _resultValue.securityPolicyDeploymentId = securityPolicyDeploymentId;
            _resultValue.securityPolicyId = securityPolicyId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.targetId = targetId;
            _resultValue.targetType = targetType;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeDeployed = timeDeployed;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
