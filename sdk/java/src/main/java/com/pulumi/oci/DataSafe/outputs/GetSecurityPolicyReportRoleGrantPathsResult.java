// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetSecurityPolicyReportRoleGrantPathsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityPolicyReportRoleGrantPathsResult {
    private @Nullable List<GetSecurityPolicyReportRoleGrantPathsFilter> filters;
    /**
     * @return The name of the role.
     * 
     */
    private String grantedRole;
    /**
     * @return Grantee is the user who can access the table.
     * 
     */
    private String grantee;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of role_grant_path_collection.
     * 
     */
    private List<GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollection> roleGrantPathCollections;
    private String securityPolicyReportId;

    private GetSecurityPolicyReportRoleGrantPathsResult() {}
    public List<GetSecurityPolicyReportRoleGrantPathsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The name of the role.
     * 
     */
    public String grantedRole() {
        return this.grantedRole;
    }
    /**
     * @return Grantee is the user who can access the table.
     * 
     */
    public String grantee() {
        return this.grantee;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of role_grant_path_collection.
     * 
     */
    public List<GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollection> roleGrantPathCollections() {
        return this.roleGrantPathCollections;
    }
    public String securityPolicyReportId() {
        return this.securityPolicyReportId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityPolicyReportRoleGrantPathsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSecurityPolicyReportRoleGrantPathsFilter> filters;
        private String grantedRole;
        private String grantee;
        private String id;
        private List<GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollection> roleGrantPathCollections;
        private String securityPolicyReportId;
        public Builder() {}
        public Builder(GetSecurityPolicyReportRoleGrantPathsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.grantedRole = defaults.grantedRole;
    	      this.grantee = defaults.grantee;
    	      this.id = defaults.id;
    	      this.roleGrantPathCollections = defaults.roleGrantPathCollections;
    	      this.securityPolicyReportId = defaults.securityPolicyReportId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetSecurityPolicyReportRoleGrantPathsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSecurityPolicyReportRoleGrantPathsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder grantedRole(String grantedRole) {
            if (grantedRole == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsResult", "grantedRole");
            }
            this.grantedRole = grantedRole;
            return this;
        }
        @CustomType.Setter
        public Builder grantee(String grantee) {
            if (grantee == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsResult", "grantee");
            }
            this.grantee = grantee;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder roleGrantPathCollections(List<GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollection> roleGrantPathCollections) {
            if (roleGrantPathCollections == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsResult", "roleGrantPathCollections");
            }
            this.roleGrantPathCollections = roleGrantPathCollections;
            return this;
        }
        public Builder roleGrantPathCollections(GetSecurityPolicyReportRoleGrantPathsRoleGrantPathCollection... roleGrantPathCollections) {
            return roleGrantPathCollections(List.of(roleGrantPathCollections));
        }
        @CustomType.Setter
        public Builder securityPolicyReportId(String securityPolicyReportId) {
            if (securityPolicyReportId == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyReportRoleGrantPathsResult", "securityPolicyReportId");
            }
            this.securityPolicyReportId = securityPolicyReportId;
            return this;
        }
        public GetSecurityPolicyReportRoleGrantPathsResult build() {
            final var _resultValue = new GetSecurityPolicyReportRoleGrantPathsResult();
            _resultValue.filters = filters;
            _resultValue.grantedRole = grantedRole;
            _resultValue.grantee = grantee;
            _resultValue.id = id;
            _resultValue.roleGrantPathCollections = roleGrantPathCollections;
            _resultValue.securityPolicyReportId = securityPolicyReportId;
            return _resultValue;
        }
    }
}
