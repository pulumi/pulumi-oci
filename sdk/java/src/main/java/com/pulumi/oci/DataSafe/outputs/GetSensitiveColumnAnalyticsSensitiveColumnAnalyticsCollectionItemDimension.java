// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension {
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    private String columnName;
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    private String object;
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    private String schemaName;
    /**
     * @return A filter to return only the resources that match the specified sensitive data model OCID.
     * 
     */
    private String sensitiveDataModelId;
    /**
     * @return A filter to return only the sensitive columns that are associated with one of the sensitive types identified by the specified OCIDs.
     * 
     */
    private String sensitiveTypeId;
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    private String targetId;

    private GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension() {}
    /**
     * @return A filter to return only a specific column based on column name.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return A filter to return only items related to a specific object name.
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    public String schemaName() {
        return this.schemaName;
    }
    /**
     * @return A filter to return only the resources that match the specified sensitive data model OCID.
     * 
     */
    public String sensitiveDataModelId() {
        return this.sensitiveDataModelId;
    }
    /**
     * @return A filter to return only the sensitive columns that are associated with one of the sensitive types identified by the specified OCIDs.
     * 
     */
    public String sensitiveTypeId() {
        return this.sensitiveTypeId;
    }
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public String targetId() {
        return this.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String columnName;
        private String object;
        private String schemaName;
        private String sensitiveDataModelId;
        private String sensitiveTypeId;
        private String targetId;
        public Builder() {}
        public Builder(GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.object = defaults.object;
    	      this.schemaName = defaults.schemaName;
    	      this.sensitiveDataModelId = defaults.sensitiveDataModelId;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
    	      this.targetId = defaults.targetId;
        }

        @CustomType.Setter
        public Builder columnName(String columnName) {
            if (columnName == null) {
              throw new MissingRequiredPropertyException("GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension", "columnName");
            }
            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            if (object == null) {
              throw new MissingRequiredPropertyException("GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension", "object");
            }
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(String schemaName) {
            if (schemaName == null) {
              throw new MissingRequiredPropertyException("GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension", "schemaName");
            }
            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveDataModelId(String sensitiveDataModelId) {
            if (sensitiveDataModelId == null) {
              throw new MissingRequiredPropertyException("GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension", "sensitiveDataModelId");
            }
            this.sensitiveDataModelId = sensitiveDataModelId;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveTypeId(String sensitiveTypeId) {
            if (sensitiveTypeId == null) {
              throw new MissingRequiredPropertyException("GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension", "sensitiveTypeId");
            }
            this.sensitiveTypeId = sensitiveTypeId;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        public GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension build() {
            final var _resultValue = new GetSensitiveColumnAnalyticsSensitiveColumnAnalyticsCollectionItemDimension();
            _resultValue.columnName = columnName;
            _resultValue.object = object;
            _resultValue.schemaName = schemaName;
            _resultValue.sensitiveDataModelId = sensitiveDataModelId;
            _resultValue.sensitiveTypeId = sensitiveTypeId;
            _resultValue.targetId = targetId;
            return _resultValue;
        }
    }
}
