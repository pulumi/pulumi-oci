// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetSensitiveDataModelSensitiveSchemasFilter;
import com.pulumi.oci.DataSafe.outputs.GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSensitiveDataModelSensitiveSchemasResult {
    private @Nullable List<GetSensitiveDataModelSensitiveSchemasFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The database schema that contains the sensitive column.
     * 
     */
    private @Nullable List<String> schemaNames;
    private String sensitiveDataModelId;
    /**
     * @return The list of sensitive_schema_collection.
     * 
     */
    private List<GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollection> sensitiveSchemaCollections;

    private GetSensitiveDataModelSensitiveSchemasResult() {}
    public List<GetSensitiveDataModelSensitiveSchemasFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The database schema that contains the sensitive column.
     * 
     */
    public List<String> schemaNames() {
        return this.schemaNames == null ? List.of() : this.schemaNames;
    }
    public String sensitiveDataModelId() {
        return this.sensitiveDataModelId;
    }
    /**
     * @return The list of sensitive_schema_collection.
     * 
     */
    public List<GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollection> sensitiveSchemaCollections() {
        return this.sensitiveSchemaCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensitiveDataModelSensitiveSchemasResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSensitiveDataModelSensitiveSchemasFilter> filters;
        private String id;
        private @Nullable List<String> schemaNames;
        private String sensitiveDataModelId;
        private List<GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollection> sensitiveSchemaCollections;
        public Builder() {}
        public Builder(GetSensitiveDataModelSensitiveSchemasResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.schemaNames = defaults.schemaNames;
    	      this.sensitiveDataModelId = defaults.sensitiveDataModelId;
    	      this.sensitiveSchemaCollections = defaults.sensitiveSchemaCollections;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetSensitiveDataModelSensitiveSchemasFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSensitiveDataModelSensitiveSchemasFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataModelSensitiveSchemasResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder schemaNames(@Nullable List<String> schemaNames) {

            this.schemaNames = schemaNames;
            return this;
        }
        public Builder schemaNames(String... schemaNames) {
            return schemaNames(List.of(schemaNames));
        }
        @CustomType.Setter
        public Builder sensitiveDataModelId(String sensitiveDataModelId) {
            if (sensitiveDataModelId == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataModelSensitiveSchemasResult", "sensitiveDataModelId");
            }
            this.sensitiveDataModelId = sensitiveDataModelId;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveSchemaCollections(List<GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollection> sensitiveSchemaCollections) {
            if (sensitiveSchemaCollections == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataModelSensitiveSchemasResult", "sensitiveSchemaCollections");
            }
            this.sensitiveSchemaCollections = sensitiveSchemaCollections;
            return this;
        }
        public Builder sensitiveSchemaCollections(GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollection... sensitiveSchemaCollections) {
            return sensitiveSchemaCollections(List.of(sensitiveSchemaCollections));
        }
        public GetSensitiveDataModelSensitiveSchemasResult build() {
            final var _resultValue = new GetSensitiveDataModelSensitiveSchemasResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.schemaNames = schemaNames;
            _resultValue.sensitiveDataModelId = sensitiveDataModelId;
            _resultValue.sensitiveSchemaCollections = sensitiveSchemaCollections;
            return _resultValue;
        }
    }
}
