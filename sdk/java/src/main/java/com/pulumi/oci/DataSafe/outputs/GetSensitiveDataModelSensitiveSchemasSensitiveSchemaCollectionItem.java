// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollectionItem {
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    private String schemaName;

    private GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollectionItem() {}
    /**
     * @return A filter to return only items related to specific schema name.
     * 
     */
    public String schemaName() {
        return this.schemaName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String schemaName;
        public Builder() {}
        public Builder(GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.schemaName = defaults.schemaName;
        }

        @CustomType.Setter
        public Builder schemaName(String schemaName) {
            if (schemaName == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollectionItem", "schemaName");
            }
            this.schemaName = schemaName;
            return this;
        }
        public GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollectionItem build() {
            final var _resultValue = new GetSensitiveDataModelSensitiveSchemasSensitiveSchemaCollectionItem();
            _resultValue.schemaName = schemaName;
            return _resultValue;
        }
    }
}
