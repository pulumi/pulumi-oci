// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSensitiveDataModelsSensitiveDataModelCollectionItem {
    /**
     * @return The application suite name identifying a collection of applications. The default value is GENERIC. It&#39;s useful only if maintaining a sensitive data model for a suite of applications.
     * 
     */
    private String appSuiteName;
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The description of the sensitive data model.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the sensitive data model.
     * 
     */
    private String id;
    /**
     * @return Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It&#39;s disabled by default and should be used only if there is a need to identify application-level relationships.
     * 
     */
    private Boolean isAppDefinedRelationDiscoveryEnabled;
    /**
     * @return Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it&#39;s set to true, the schemasForDiscovery attribute is ignored and all schemas are used for data discovery.
     * 
     */
    private Boolean isIncludeAllSchemas;
    /**
     * @return Indicates if all the existing sensitive types should be used by data discovery jobs.If it&#39;s set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
     * 
     */
    private Boolean isIncludeAllSensitiveTypes;
    /**
     * @return Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it&#39;s disabled by default and should be used only if it&#39;s acceptable to store sample data in Data Safe&#39;s repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
     * 
     */
    private Boolean isSampleDataCollectionEnabled;
    /**
     * @return The schemas to be scanned by data discovery jobs.
     * 
     */
    private List<String> schemasForDiscoveries;
    /**
     * @return The OCIDs of the sensitive types to be used by data discovery jobs.
     * 
     */
    private List<String> sensitiveTypeIdsForDiscoveries;
    /**
     * @return A filter to return only the resources that match the specified lifecycle state.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    private String targetId;
    /**
     * @return The date and time the sensitive data model was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the sensitive data model was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeUpdated;

    private GetSensitiveDataModelsSensitiveDataModelCollectionItem() {}
    /**
     * @return The application suite name identifying a collection of applications. The default value is GENERIC. It&#39;s useful only if maintaining a sensitive data model for a suite of applications.
     * 
     */
    public String appSuiteName() {
        return this.appSuiteName;
    }
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the sensitive data model.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the sensitive data model.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It&#39;s disabled by default and should be used only if there is a need to identify application-level relationships.
     * 
     */
    public Boolean isAppDefinedRelationDiscoveryEnabled() {
        return this.isAppDefinedRelationDiscoveryEnabled;
    }
    /**
     * @return Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it&#39;s set to true, the schemasForDiscovery attribute is ignored and all schemas are used for data discovery.
     * 
     */
    public Boolean isIncludeAllSchemas() {
        return this.isIncludeAllSchemas;
    }
    /**
     * @return Indicates if all the existing sensitive types should be used by data discovery jobs.If it&#39;s set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
     * 
     */
    public Boolean isIncludeAllSensitiveTypes() {
        return this.isIncludeAllSensitiveTypes;
    }
    /**
     * @return Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it&#39;s disabled by default and should be used only if it&#39;s acceptable to store sample data in Data Safe&#39;s repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
     * 
     */
    public Boolean isSampleDataCollectionEnabled() {
        return this.isSampleDataCollectionEnabled;
    }
    /**
     * @return The schemas to be scanned by data discovery jobs.
     * 
     */
    public List<String> schemasForDiscoveries() {
        return this.schemasForDiscoveries;
    }
    /**
     * @return The OCIDs of the sensitive types to be used by data discovery jobs.
     * 
     */
    public List<String> sensitiveTypeIdsForDiscoveries() {
        return this.sensitiveTypeIdsForDiscoveries;
    }
    /**
     * @return A filter to return only the resources that match the specified lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The date and time the sensitive data model was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the sensitive data model was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensitiveDataModelsSensitiveDataModelCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appSuiteName;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isAppDefinedRelationDiscoveryEnabled;
        private Boolean isIncludeAllSchemas;
        private Boolean isIncludeAllSensitiveTypes;
        private Boolean isSampleDataCollectionEnabled;
        private List<String> schemasForDiscoveries;
        private List<String> sensitiveTypeIdsForDiscoveries;
        private String state;
        private Map<String,Object> systemTags;
        private String targetId;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetSensitiveDataModelsSensitiveDataModelCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appSuiteName = defaults.appSuiteName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAppDefinedRelationDiscoveryEnabled = defaults.isAppDefinedRelationDiscoveryEnabled;
    	      this.isIncludeAllSchemas = defaults.isIncludeAllSchemas;
    	      this.isIncludeAllSensitiveTypes = defaults.isIncludeAllSensitiveTypes;
    	      this.isSampleDataCollectionEnabled = defaults.isSampleDataCollectionEnabled;
    	      this.schemasForDiscoveries = defaults.schemasForDiscoveries;
    	      this.sensitiveTypeIdsForDiscoveries = defaults.sensitiveTypeIdsForDiscoveries;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder appSuiteName(String appSuiteName) {
            this.appSuiteName = Objects.requireNonNull(appSuiteName);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAppDefinedRelationDiscoveryEnabled(Boolean isAppDefinedRelationDiscoveryEnabled) {
            this.isAppDefinedRelationDiscoveryEnabled = Objects.requireNonNull(isAppDefinedRelationDiscoveryEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isIncludeAllSchemas(Boolean isIncludeAllSchemas) {
            this.isIncludeAllSchemas = Objects.requireNonNull(isIncludeAllSchemas);
            return this;
        }
        @CustomType.Setter
        public Builder isIncludeAllSensitiveTypes(Boolean isIncludeAllSensitiveTypes) {
            this.isIncludeAllSensitiveTypes = Objects.requireNonNull(isIncludeAllSensitiveTypes);
            return this;
        }
        @CustomType.Setter
        public Builder isSampleDataCollectionEnabled(Boolean isSampleDataCollectionEnabled) {
            this.isSampleDataCollectionEnabled = Objects.requireNonNull(isSampleDataCollectionEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder schemasForDiscoveries(List<String> schemasForDiscoveries) {
            this.schemasForDiscoveries = Objects.requireNonNull(schemasForDiscoveries);
            return this;
        }
        public Builder schemasForDiscoveries(String... schemasForDiscoveries) {
            return schemasForDiscoveries(List.of(schemasForDiscoveries));
        }
        @CustomType.Setter
        public Builder sensitiveTypeIdsForDiscoveries(List<String> sensitiveTypeIdsForDiscoveries) {
            this.sensitiveTypeIdsForDiscoveries = Objects.requireNonNull(sensitiveTypeIdsForDiscoveries);
            return this;
        }
        public Builder sensitiveTypeIdsForDiscoveries(String... sensitiveTypeIdsForDiscoveries) {
            return sensitiveTypeIdsForDiscoveries(List.of(sensitiveTypeIdsForDiscoveries));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            this.targetId = Objects.requireNonNull(targetId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetSensitiveDataModelsSensitiveDataModelCollectionItem build() {
            final var o = new GetSensitiveDataModelsSensitiveDataModelCollectionItem();
            o.appSuiteName = appSuiteName;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isAppDefinedRelationDiscoveryEnabled = isAppDefinedRelationDiscoveryEnabled;
            o.isIncludeAllSchemas = isIncludeAllSchemas;
            o.isIncludeAllSensitiveTypes = isIncludeAllSensitiveTypes;
            o.isSampleDataCollectionEnabled = isSampleDataCollectionEnabled;
            o.schemasForDiscoveries = schemasForDiscoveries;
            o.sensitiveTypeIdsForDiscoveries = sensitiveTypeIdsForDiscoveries;
            o.state = state;
            o.systemTags = systemTags;
            o.targetId = targetId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
