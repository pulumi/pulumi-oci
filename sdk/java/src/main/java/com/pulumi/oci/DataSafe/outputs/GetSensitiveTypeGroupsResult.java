// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetSensitiveTypeGroupsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSensitiveTypeGroupsSensitiveTypeGroupCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSensitiveTypeGroupsResult {
    private @Nullable String accessLevel;
    /**
     * @return The OCID of the compartment that contains the sensitive type group.
     * 
     */
    private String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The display name of the sensitive type group.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetSensitiveTypeGroupsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of sensitive_type_group_collection.
     * 
     */
    private List<GetSensitiveTypeGroupsSensitiveTypeGroupCollection> sensitiveTypeGroupCollections;
    private @Nullable String sensitiveTypeGroupId;
    /**
     * @return The current state of the sensitive type group.
     * 
     */
    private @Nullable String state;
    private @Nullable String timeCreatedGreaterThanOrEqualTo;
    private @Nullable String timeCreatedLessThan;

    private GetSensitiveTypeGroupsResult() {}
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return The OCID of the compartment that contains the sensitive type group.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The display name of the sensitive type group.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetSensitiveTypeGroupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of sensitive_type_group_collection.
     * 
     */
    public List<GetSensitiveTypeGroupsSensitiveTypeGroupCollection> sensitiveTypeGroupCollections() {
        return this.sensitiveTypeGroupCollections;
    }
    public Optional<String> sensitiveTypeGroupId() {
        return Optional.ofNullable(this.sensitiveTypeGroupId);
    }
    /**
     * @return The current state of the sensitive type group.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensitiveTypeGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetSensitiveTypeGroupsFilter> filters;
        private String id;
        private List<GetSensitiveTypeGroupsSensitiveTypeGroupCollection> sensitiveTypeGroupCollections;
        private @Nullable String sensitiveTypeGroupId;
        private @Nullable String state;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        public Builder() {}
        public Builder(GetSensitiveTypeGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.sensitiveTypeGroupCollections = defaults.sensitiveTypeGroupCollections;
    	      this.sensitiveTypeGroupId = defaults.sensitiveTypeGroupId;
    	      this.state = defaults.state;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
        }

        @CustomType.Setter
        public Builder accessLevel(@Nullable String accessLevel) {

            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSensitiveTypeGroupsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSensitiveTypeGroupsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSensitiveTypeGroupsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSensitiveTypeGroupsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder sensitiveTypeGroupCollections(List<GetSensitiveTypeGroupsSensitiveTypeGroupCollection> sensitiveTypeGroupCollections) {
            if (sensitiveTypeGroupCollections == null) {
              throw new MissingRequiredPropertyException("GetSensitiveTypeGroupsResult", "sensitiveTypeGroupCollections");
            }
            this.sensitiveTypeGroupCollections = sensitiveTypeGroupCollections;
            return this;
        }
        public Builder sensitiveTypeGroupCollections(GetSensitiveTypeGroupsSensitiveTypeGroupCollection... sensitiveTypeGroupCollections) {
            return sensitiveTypeGroupCollections(List.of(sensitiveTypeGroupCollections));
        }
        @CustomType.Setter
        public Builder sensitiveTypeGroupId(@Nullable String sensitiveTypeGroupId) {

            this.sensitiveTypeGroupId = sensitiveTypeGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {

            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {

            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        public GetSensitiveTypeGroupsResult build() {
            final var _resultValue = new GetSensitiveTypeGroupsResult();
            _resultValue.accessLevel = accessLevel;
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.sensitiveTypeGroupCollections = sensitiveTypeGroupCollections;
            _resultValue.sensitiveTypeGroupId = sensitiveTypeGroupId;
            _resultValue.state = state;
            _resultValue.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            _resultValue.timeCreatedLessThan = timeCreatedLessThan;
            return _resultValue;
        }
    }
}
