// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetSqlCollectionAnalyticsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSqlCollectionAnalyticsSqlCollectionAnalyticsCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSqlCollectionAnalyticsResult {
    private @Nullable String accessLevel;
    private String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable List<GetSqlCollectionAnalyticsFilter> filters;
    private @Nullable List<String> groupBies;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of sql_collection_analytics_collection.
     * 
     */
    private List<GetSqlCollectionAnalyticsSqlCollectionAnalyticsCollection> sqlCollectionAnalyticsCollections;
    /**
     * @return The current state of the SQL collection.
     * 
     */
    private @Nullable String state;
    /**
     * @return The OCID of the target corresponding to the security policy deployment.
     * 
     */
    private @Nullable String targetId;
    private @Nullable String timeEnded;
    private @Nullable String timeStarted;

    private GetSqlCollectionAnalyticsResult() {}
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public List<GetSqlCollectionAnalyticsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public List<String> groupBies() {
        return this.groupBies == null ? List.of() : this.groupBies;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of sql_collection_analytics_collection.
     * 
     */
    public List<GetSqlCollectionAnalyticsSqlCollectionAnalyticsCollection> sqlCollectionAnalyticsCollections() {
        return this.sqlCollectionAnalyticsCollections;
    }
    /**
     * @return The current state of the SQL collection.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID of the target corresponding to the security policy deployment.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    public Optional<String> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlCollectionAnalyticsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<GetSqlCollectionAnalyticsFilter> filters;
        private @Nullable List<String> groupBies;
        private String id;
        private List<GetSqlCollectionAnalyticsSqlCollectionAnalyticsCollection> sqlCollectionAnalyticsCollections;
        private @Nullable String state;
        private @Nullable String targetId;
        private @Nullable String timeEnded;
        private @Nullable String timeStarted;
        public Builder() {}
        public Builder(GetSqlCollectionAnalyticsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.groupBies = defaults.groupBies;
    	      this.id = defaults.id;
    	      this.sqlCollectionAnalyticsCollections = defaults.sqlCollectionAnalyticsCollections;
    	      this.state = defaults.state;
    	      this.targetId = defaults.targetId;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder accessLevel(@Nullable String accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSqlCollectionAnalyticsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSqlCollectionAnalyticsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder groupBies(@Nullable List<String> groupBies) {
            this.groupBies = groupBies;
            return this;
        }
        public Builder groupBies(String... groupBies) {
            return groupBies(List.of(groupBies));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder sqlCollectionAnalyticsCollections(List<GetSqlCollectionAnalyticsSqlCollectionAnalyticsCollection> sqlCollectionAnalyticsCollections) {
            this.sqlCollectionAnalyticsCollections = Objects.requireNonNull(sqlCollectionAnalyticsCollections);
            return this;
        }
        public Builder sqlCollectionAnalyticsCollections(GetSqlCollectionAnalyticsSqlCollectionAnalyticsCollection... sqlCollectionAnalyticsCollections) {
            return sqlCollectionAnalyticsCollections(List.of(sqlCollectionAnalyticsCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnded(@Nullable String timeEnded) {
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        public GetSqlCollectionAnalyticsResult build() {
            final var o = new GetSqlCollectionAnalyticsResult();
            o.accessLevel = accessLevel;
            o.compartmentId = compartmentId;
            o.compartmentIdInSubtree = compartmentIdInSubtree;
            o.filters = filters;
            o.groupBies = groupBies;
            o.id = id;
            o.sqlCollectionAnalyticsCollections = sqlCollectionAnalyticsCollections;
            o.state = state;
            o.targetId = targetId;
            o.timeEnded = timeEnded;
            o.timeStarted = timeStarted;
            return o;
        }
    }
}
