// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetSqlCollectionLogInsightsFilter;
import com.pulumi.oci.DataSafe.outputs.GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSqlCollectionLogInsightsResult {
    private @Nullable List<GetSqlCollectionLogInsightsFilter> filters;
    private @Nullable String groupBy;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String sqlCollectionId;
    /**
     * @return The list of sql_collection_log_insights_collection.
     * 
     */
    private @Nullable List<GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection> sqlCollectionLogInsightsCollections;
    /**
     * @return The time at which the aggregation ended.
     * 
     */
    private String timeEnded;
    /**
     * @return The time at which the aggregation started.
     * 
     */
    private String timeStarted;

    private GetSqlCollectionLogInsightsResult() {}
    public List<GetSqlCollectionLogInsightsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> groupBy() {
        return Optional.ofNullable(this.groupBy);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String sqlCollectionId() {
        return this.sqlCollectionId;
    }
    /**
     * @return The list of sql_collection_log_insights_collection.
     * 
     */
    public List<GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection> sqlCollectionLogInsightsCollections() {
        return this.sqlCollectionLogInsightsCollections == null ? List.of() : this.sqlCollectionLogInsightsCollections;
    }
    /**
     * @return The time at which the aggregation ended.
     * 
     */
    public String timeEnded() {
        return this.timeEnded;
    }
    /**
     * @return The time at which the aggregation started.
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlCollectionLogInsightsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSqlCollectionLogInsightsFilter> filters;
        private @Nullable String groupBy;
        private @Nullable String id;
        private String sqlCollectionId;
        private @Nullable List<GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection> sqlCollectionLogInsightsCollections;
        private String timeEnded;
        private String timeStarted;
        public Builder() {}
        public Builder(GetSqlCollectionLogInsightsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.groupBy = defaults.groupBy;
    	      this.id = defaults.id;
    	      this.sqlCollectionId = defaults.sqlCollectionId;
    	      this.sqlCollectionLogInsightsCollections = defaults.sqlCollectionLogInsightsCollections;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetSqlCollectionLogInsightsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSqlCollectionLogInsightsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder groupBy(@Nullable String groupBy) {
            this.groupBy = groupBy;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder sqlCollectionId(String sqlCollectionId) {
            this.sqlCollectionId = Objects.requireNonNull(sqlCollectionId);
            return this;
        }
        @CustomType.Setter
        public Builder sqlCollectionLogInsightsCollections(@Nullable List<GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection> sqlCollectionLogInsightsCollections) {
            this.sqlCollectionLogInsightsCollections = sqlCollectionLogInsightsCollections;
            return this;
        }
        public Builder sqlCollectionLogInsightsCollections(GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection... sqlCollectionLogInsightsCollections) {
            return sqlCollectionLogInsightsCollections(List.of(sqlCollectionLogInsightsCollections));
        }
        @CustomType.Setter
        public Builder timeEnded(String timeEnded) {
            this.timeEnded = Objects.requireNonNull(timeEnded);
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            this.timeStarted = Objects.requireNonNull(timeStarted);
            return this;
        }
        public GetSqlCollectionLogInsightsResult build() {
            final var o = new GetSqlCollectionLogInsightsResult();
            o.filters = filters;
            o.groupBy = groupBy;
            o.id = id;
            o.sqlCollectionId = sqlCollectionId;
            o.sqlCollectionLogInsightsCollections = sqlCollectionLogInsightsCollections;
            o.timeEnded = timeEnded;
            o.timeStarted = timeStarted;
            return o;
        }
    }
}
