// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSqlCollectionResult {
    /**
     * @return The OCID of the compartment containing the SQL collection.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The database user name.
     * 
     */
    private @Nullable String dbUserName;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The description of the SQL collection.
     * 
     */
    private @Nullable String description;
    /**
     * @return The display name of the SQL collection.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    private @Nullable Boolean generateSqlFirewallPolicyTrigger;
    /**
     * @return The OCID of the SQL collection.
     * 
     */
    private @Nullable String id;
    /**
     * @return Details about the current state of the SQL collection in Data Safe.
     * 
     */
    private @Nullable String lifecycleDetails;
    private @Nullable Boolean purgeLogsTrigger;
    private @Nullable Boolean refreshLogInsightsTrigger;
    private String sqlCollectionId;
    /**
     * @return Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    private @Nullable String sqlLevel;
    private @Nullable Boolean startTrigger;
    /**
     * @return The current state of the SQL collection.
     * 
     */
    private @Nullable String state;
    /**
     * @return Specifies if the status of the SqlCollection. Enabled indicates that the collecting is in progress.
     * 
     */
    private @Nullable String status;
    private @Nullable Boolean stopTrigger;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The OCID of the target corresponding to the security policy deployment.
     * 
     */
    private @Nullable String targetId;
    /**
     * @return The time that the SQL collection was created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeLastStarted;
    /**
     * @return The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeLastStopped;
    /**
     * @return The last date and time the SQL collection was updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetSqlCollectionResult() {}
    /**
     * @return The OCID of the compartment containing the SQL collection.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The database user name.
     * 
     */
    public Optional<String> dbUserName() {
        return Optional.ofNullable(this.dbUserName);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The description of the SQL collection.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The display name of the SQL collection.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    public Optional<Boolean> generateSqlFirewallPolicyTrigger() {
        return Optional.ofNullable(this.generateSqlFirewallPolicyTrigger);
    }
    /**
     * @return The OCID of the SQL collection.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Details about the current state of the SQL collection in Data Safe.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public Optional<Boolean> purgeLogsTrigger() {
        return Optional.ofNullable(this.purgeLogsTrigger);
    }
    public Optional<Boolean> refreshLogInsightsTrigger() {
        return Optional.ofNullable(this.refreshLogInsightsTrigger);
    }
    public String sqlCollectionId() {
        return this.sqlCollectionId;
    }
    /**
     * @return Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    public Optional<String> sqlLevel() {
        return Optional.ofNullable(this.sqlLevel);
    }
    public Optional<Boolean> startTrigger() {
        return Optional.ofNullable(this.startTrigger);
    }
    /**
     * @return The current state of the SQL collection.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Specifies if the status of the SqlCollection. Enabled indicates that the collecting is in progress.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<Boolean> stopTrigger() {
        return Optional.ofNullable(this.stopTrigger);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The OCID of the target corresponding to the security policy deployment.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return The time that the SQL collection was created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeLastStarted() {
        return Optional.ofNullable(this.timeLastStarted);
    }
    /**
     * @return The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeLastStopped() {
        return Optional.ofNullable(this.timeLastStopped);
    }
    /**
     * @return The last date and time the SQL collection was updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlCollectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String dbUserName;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable Boolean generateSqlFirewallPolicyTrigger;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable Boolean purgeLogsTrigger;
        private @Nullable Boolean refreshLogInsightsTrigger;
        private String sqlCollectionId;
        private @Nullable String sqlLevel;
        private @Nullable Boolean startTrigger;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable Boolean stopTrigger;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String targetId;
        private @Nullable String timeCreated;
        private @Nullable String timeLastStarted;
        private @Nullable String timeLastStopped;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetSqlCollectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbUserName = defaults.dbUserName;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.generateSqlFirewallPolicyTrigger = defaults.generateSqlFirewallPolicyTrigger;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.purgeLogsTrigger = defaults.purgeLogsTrigger;
    	      this.refreshLogInsightsTrigger = defaults.refreshLogInsightsTrigger;
    	      this.sqlCollectionId = defaults.sqlCollectionId;
    	      this.sqlLevel = defaults.sqlLevel;
    	      this.startTrigger = defaults.startTrigger;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.stopTrigger = defaults.stopTrigger;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastStarted = defaults.timeLastStarted;
    	      this.timeLastStopped = defaults.timeLastStopped;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbUserName(@Nullable String dbUserName) {
            this.dbUserName = dbUserName;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder generateSqlFirewallPolicyTrigger(@Nullable Boolean generateSqlFirewallPolicyTrigger) {
            this.generateSqlFirewallPolicyTrigger = generateSqlFirewallPolicyTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder purgeLogsTrigger(@Nullable Boolean purgeLogsTrigger) {
            this.purgeLogsTrigger = purgeLogsTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder refreshLogInsightsTrigger(@Nullable Boolean refreshLogInsightsTrigger) {
            this.refreshLogInsightsTrigger = refreshLogInsightsTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder sqlCollectionId(String sqlCollectionId) {
            this.sqlCollectionId = Objects.requireNonNull(sqlCollectionId);
            return this;
        }
        @CustomType.Setter
        public Builder sqlLevel(@Nullable String sqlLevel) {
            this.sqlLevel = sqlLevel;
            return this;
        }
        @CustomType.Setter
        public Builder startTrigger(@Nullable Boolean startTrigger) {
            this.startTrigger = startTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder stopTrigger(@Nullable Boolean stopTrigger) {
            this.stopTrigger = stopTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastStarted(@Nullable String timeLastStarted) {
            this.timeLastStarted = timeLastStarted;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastStopped(@Nullable String timeLastStopped) {
            this.timeLastStopped = timeLastStopped;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetSqlCollectionResult build() {
            final var o = new GetSqlCollectionResult();
            o.compartmentId = compartmentId;
            o.dbUserName = dbUserName;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.generateSqlFirewallPolicyTrigger = generateSqlFirewallPolicyTrigger;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.purgeLogsTrigger = purgeLogsTrigger;
            o.refreshLogInsightsTrigger = refreshLogInsightsTrigger;
            o.sqlCollectionId = sqlCollectionId;
            o.sqlLevel = sqlLevel;
            o.startTrigger = startTrigger;
            o.state = state;
            o.status = status;
            o.stopTrigger = stopTrigger;
            o.systemTags = systemTags;
            o.targetId = targetId;
            o.timeCreated = timeCreated;
            o.timeLastStarted = timeLastStarted;
            o.timeLastStopped = timeLastStopped;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
