// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension {
    /**
     * @return The database user name.
     * 
     */
    private String dbUserName;
    /**
     * @return The OCID of the SQL Firewall policy corresponding to the SQL Firewall allowed SQL.
     * 
     */
    private String sqlFirewallPolicyId;
    /**
     * @return Specifies the level of SQL included for this SQL Firewall policy. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    private String sqlLevel;
    /**
     * @return The current state of the SQL Firewall allowed SQL.
     * 
     */
    private String state;

    private GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension() {}
    /**
     * @return The database user name.
     * 
     */
    public String dbUserName() {
        return this.dbUserName;
    }
    /**
     * @return The OCID of the SQL Firewall policy corresponding to the SQL Firewall allowed SQL.
     * 
     */
    public String sqlFirewallPolicyId() {
        return this.sqlFirewallPolicyId;
    }
    /**
     * @return Specifies the level of SQL included for this SQL Firewall policy. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    public String sqlLevel() {
        return this.sqlLevel;
    }
    /**
     * @return The current state of the SQL Firewall allowed SQL.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dbUserName;
        private String sqlFirewallPolicyId;
        private String sqlLevel;
        private String state;
        public Builder() {}
        public Builder(GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbUserName = defaults.dbUserName;
    	      this.sqlFirewallPolicyId = defaults.sqlFirewallPolicyId;
    	      this.sqlLevel = defaults.sqlLevel;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder dbUserName(String dbUserName) {
            if (dbUserName == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension", "dbUserName");
            }
            this.dbUserName = dbUserName;
            return this;
        }
        @CustomType.Setter
        public Builder sqlFirewallPolicyId(String sqlFirewallPolicyId) {
            if (sqlFirewallPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension", "sqlFirewallPolicyId");
            }
            this.sqlFirewallPolicyId = sqlFirewallPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlLevel(String sqlLevel) {
            if (sqlLevel == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension", "sqlLevel");
            }
            this.sqlLevel = sqlLevel;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension", "state");
            }
            this.state = state;
            return this;
        }
        public GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension build() {
            final var _resultValue = new GetSqlFirewallAllowedSqlAnalyticsSqlFirewallAllowedSqlAnalyticsCollectionItemDimension();
            _resultValue.dbUserName = dbUserName;
            _resultValue.sqlFirewallPolicyId = sqlFirewallPolicyId;
            _resultValue.sqlLevel = sqlLevel;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
