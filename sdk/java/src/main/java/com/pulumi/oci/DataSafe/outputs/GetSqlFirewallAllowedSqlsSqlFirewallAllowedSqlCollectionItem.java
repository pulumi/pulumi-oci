// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSqlFirewallAllowedSqlsSqlFirewallAllowedSqlCollectionItem {
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name of the user that SQL was executed as.
     * 
     */
    private @Nullable String currentUser;
    /**
     * @return The database user name.
     * 
     */
    private @Nullable String dbUserName;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The description of the SQL firewall allowed SQL.
     * 
     */
    private @Nullable String description;
    /**
     * @return The display name of the SQL firewall allowed SQL.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the SQL firewall allowed SQL.
     * 
     */
    private @Nullable String id;
    /**
     * @return The objects accessed by the SQL.
     * 
     */
    private @Nullable List<String> sqlAccessedObjects;
    /**
     * @return The OCID of the SQL firewall policy corresponding to the SQL firewall allowed SQL.
     * 
     */
    private @Nullable String sqlFirewallPolicyId;
    /**
     * @return Specifies the level of SQL included for this SQL firewall policy. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    private @Nullable String sqlLevel;
    /**
     * @return The SQL text of the SQL firewall allowed SQL.
     * 
     */
    private @Nullable String sqlText;
    /**
     * @return The current state of the SQL firewall allowed SQL.
     * 
     */
    private @Nullable String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the the SQL firewall allowed SQL was collected from the target database, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCollected;
    /**
     * @return The last date and time the SQL firewall allowed SQL was updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Version of the associated SQL firewall policy. This identifies whether the allowed SQLs were added in the same batch or not.
     * 
     */
    private @Nullable Double version;

    private GetSqlFirewallAllowedSqlsSqlFirewallAllowedSqlCollectionItem() {}
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name of the user that SQL was executed as.
     * 
     */
    public Optional<String> currentUser() {
        return Optional.ofNullable(this.currentUser);
    }
    /**
     * @return The database user name.
     * 
     */
    public Optional<String> dbUserName() {
        return Optional.ofNullable(this.dbUserName);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The description of the SQL firewall allowed SQL.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The display name of the SQL firewall allowed SQL.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the SQL firewall allowed SQL.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The objects accessed by the SQL.
     * 
     */
    public List<String> sqlAccessedObjects() {
        return this.sqlAccessedObjects == null ? List.of() : this.sqlAccessedObjects;
    }
    /**
     * @return The OCID of the SQL firewall policy corresponding to the SQL firewall allowed SQL.
     * 
     */
    public Optional<String> sqlFirewallPolicyId() {
        return Optional.ofNullable(this.sqlFirewallPolicyId);
    }
    /**
     * @return Specifies the level of SQL included for this SQL firewall policy. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    public Optional<String> sqlLevel() {
        return Optional.ofNullable(this.sqlLevel);
    }
    /**
     * @return The SQL text of the SQL firewall allowed SQL.
     * 
     */
    public Optional<String> sqlText() {
        return Optional.ofNullable(this.sqlText);
    }
    /**
     * @return The current state of the SQL firewall allowed SQL.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the the SQL firewall allowed SQL was collected from the target database, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCollected() {
        return Optional.ofNullable(this.timeCollected);
    }
    /**
     * @return The last date and time the SQL firewall allowed SQL was updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Version of the associated SQL firewall policy. This identifies whether the allowed SQLs were added in the same batch or not.
     * 
     */
    public Optional<Double> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlFirewallAllowedSqlsSqlFirewallAllowedSqlCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String currentUser;
        private @Nullable String dbUserName;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<String> sqlAccessedObjects;
        private @Nullable String sqlFirewallPolicyId;
        private @Nullable String sqlLevel;
        private @Nullable String sqlText;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCollected;
        private @Nullable String timeUpdated;
        private @Nullable Double version;
        public Builder() {}
        public Builder(GetSqlFirewallAllowedSqlsSqlFirewallAllowedSqlCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.currentUser = defaults.currentUser;
    	      this.dbUserName = defaults.dbUserName;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.sqlAccessedObjects = defaults.sqlAccessedObjects;
    	      this.sqlFirewallPolicyId = defaults.sqlFirewallPolicyId;
    	      this.sqlLevel = defaults.sqlLevel;
    	      this.sqlText = defaults.sqlText;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCollected = defaults.timeCollected;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder currentUser(@Nullable String currentUser) {
            this.currentUser = currentUser;
            return this;
        }
        @CustomType.Setter
        public Builder dbUserName(@Nullable String dbUserName) {
            this.dbUserName = dbUserName;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder sqlAccessedObjects(@Nullable List<String> sqlAccessedObjects) {
            this.sqlAccessedObjects = sqlAccessedObjects;
            return this;
        }
        public Builder sqlAccessedObjects(String... sqlAccessedObjects) {
            return sqlAccessedObjects(List.of(sqlAccessedObjects));
        }
        @CustomType.Setter
        public Builder sqlFirewallPolicyId(@Nullable String sqlFirewallPolicyId) {
            this.sqlFirewallPolicyId = sqlFirewallPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlLevel(@Nullable String sqlLevel) {
            this.sqlLevel = sqlLevel;
            return this;
        }
        @CustomType.Setter
        public Builder sqlText(@Nullable String sqlText) {
            this.sqlText = sqlText;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCollected(@Nullable String timeCollected) {
            this.timeCollected = timeCollected;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Double version) {
            this.version = version;
            return this;
        }
        public GetSqlFirewallAllowedSqlsSqlFirewallAllowedSqlCollectionItem build() {
            final var o = new GetSqlFirewallAllowedSqlsSqlFirewallAllowedSqlCollectionItem();
            o.compartmentId = compartmentId;
            o.currentUser = currentUser;
            o.dbUserName = dbUserName;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.sqlAccessedObjects = sqlAccessedObjects;
            o.sqlFirewallPolicyId = sqlFirewallPolicyId;
            o.sqlLevel = sqlLevel;
            o.sqlText = sqlText;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCollected = timeCollected;
            o.timeUpdated = timeUpdated;
            o.version = version;
            return o;
        }
    }
}
