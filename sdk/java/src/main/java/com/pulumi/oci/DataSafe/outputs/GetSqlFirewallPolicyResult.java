// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSqlFirewallPolicyResult {
    /**
     * @return The list of allowed ip addresses for the SQL Firewall policy.
     * 
     */
    private List<String> allowedClientIps;
    /**
     * @return The list of allowed operating system user names for the SQL Firewall policy.
     * 
     */
    private List<String> allowedClientOsUsernames;
    /**
     * @return The list of allowed client programs for the SQL Firewall policy.
     * 
     */
    private List<String> allowedClientPrograms;
    /**
     * @return The OCID of the compartment containing the SQL Firewall policy.
     * 
     */
    private String compartmentId;
    /**
     * @return The database user name.
     * 
     */
    private String dbUserName;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The description of the SQL Firewall policy.
     * 
     */
    private String description;
    /**
     * @return The display name of the SQL Firewall policy.
     * 
     */
    private String displayName;
    /**
     * @return Specifies the SQL Firewall policy enforcement option.
     * 
     */
    private String enforcementScope;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the SQL Firewall policy.
     * 
     */
    private String id;
    /**
     * @return Details about the current state of the SQL Firewall policy in Data Safe.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The OCID of the security policy corresponding to the SQL Firewall policy.
     * 
     */
    private String securityPolicyId;
    private String sqlFirewallPolicyId;
    /**
     * @return Specifies the level of SQL included for this SQL Firewall policy. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    private String sqlLevel;
    /**
     * @return The current state of the SQL Firewall policy.
     * 
     */
    private String state;
    /**
     * @return Specifies whether the SQL Firewall policy is enabled or disabled.
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time that the SQL Firewall policy was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the SQL Firewall policy was last updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;
    /**
     * @return Specifies the mode in which the SQL Firewall policy is enabled.
     * 
     */
    private String violationAction;
    /**
     * @return Specifies whether a unified audit policy should be enabled for auditing the SQL Firewall policy violations.
     * 
     */
    private String violationAudit;

    private GetSqlFirewallPolicyResult() {}
    /**
     * @return The list of allowed ip addresses for the SQL Firewall policy.
     * 
     */
    public List<String> allowedClientIps() {
        return this.allowedClientIps;
    }
    /**
     * @return The list of allowed operating system user names for the SQL Firewall policy.
     * 
     */
    public List<String> allowedClientOsUsernames() {
        return this.allowedClientOsUsernames;
    }
    /**
     * @return The list of allowed client programs for the SQL Firewall policy.
     * 
     */
    public List<String> allowedClientPrograms() {
        return this.allowedClientPrograms;
    }
    /**
     * @return The OCID of the compartment containing the SQL Firewall policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The database user name.
     * 
     */
    public String dbUserName() {
        return this.dbUserName;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the SQL Firewall policy.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the SQL Firewall policy.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Specifies the SQL Firewall policy enforcement option.
     * 
     */
    public String enforcementScope() {
        return this.enforcementScope;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the SQL Firewall policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details about the current state of the SQL Firewall policy in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the security policy corresponding to the SQL Firewall policy.
     * 
     */
    public String securityPolicyId() {
        return this.securityPolicyId;
    }
    public String sqlFirewallPolicyId() {
        return this.sqlFirewallPolicyId;
    }
    /**
     * @return Specifies the level of SQL included for this SQL Firewall policy. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     * 
     */
    public String sqlLevel() {
        return this.sqlLevel;
    }
    /**
     * @return The current state of the SQL Firewall policy.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Specifies whether the SQL Firewall policy is enabled or disabled.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time that the SQL Firewall policy was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the SQL Firewall policy was last updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Specifies the mode in which the SQL Firewall policy is enabled.
     * 
     */
    public String violationAction() {
        return this.violationAction;
    }
    /**
     * @return Specifies whether a unified audit policy should be enabled for auditing the SQL Firewall policy violations.
     * 
     */
    public String violationAudit() {
        return this.violationAudit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlFirewallPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedClientIps;
        private List<String> allowedClientOsUsernames;
        private List<String> allowedClientPrograms;
        private String compartmentId;
        private String dbUserName;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private String enforcementScope;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String securityPolicyId;
        private String sqlFirewallPolicyId;
        private String sqlLevel;
        private String state;
        private String status;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String violationAction;
        private String violationAudit;
        public Builder() {}
        public Builder(GetSqlFirewallPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedClientIps = defaults.allowedClientIps;
    	      this.allowedClientOsUsernames = defaults.allowedClientOsUsernames;
    	      this.allowedClientPrograms = defaults.allowedClientPrograms;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbUserName = defaults.dbUserName;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.enforcementScope = defaults.enforcementScope;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.securityPolicyId = defaults.securityPolicyId;
    	      this.sqlFirewallPolicyId = defaults.sqlFirewallPolicyId;
    	      this.sqlLevel = defaults.sqlLevel;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.violationAction = defaults.violationAction;
    	      this.violationAudit = defaults.violationAudit;
        }

        @CustomType.Setter
        public Builder allowedClientIps(List<String> allowedClientIps) {
            if (allowedClientIps == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "allowedClientIps");
            }
            this.allowedClientIps = allowedClientIps;
            return this;
        }
        public Builder allowedClientIps(String... allowedClientIps) {
            return allowedClientIps(List.of(allowedClientIps));
        }
        @CustomType.Setter
        public Builder allowedClientOsUsernames(List<String> allowedClientOsUsernames) {
            if (allowedClientOsUsernames == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "allowedClientOsUsernames");
            }
            this.allowedClientOsUsernames = allowedClientOsUsernames;
            return this;
        }
        public Builder allowedClientOsUsernames(String... allowedClientOsUsernames) {
            return allowedClientOsUsernames(List.of(allowedClientOsUsernames));
        }
        @CustomType.Setter
        public Builder allowedClientPrograms(List<String> allowedClientPrograms) {
            if (allowedClientPrograms == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "allowedClientPrograms");
            }
            this.allowedClientPrograms = allowedClientPrograms;
            return this;
        }
        public Builder allowedClientPrograms(String... allowedClientPrograms) {
            return allowedClientPrograms(List.of(allowedClientPrograms));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbUserName(String dbUserName) {
            if (dbUserName == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "dbUserName");
            }
            this.dbUserName = dbUserName;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder enforcementScope(String enforcementScope) {
            if (enforcementScope == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "enforcementScope");
            }
            this.enforcementScope = enforcementScope;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyId(String securityPolicyId) {
            if (securityPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "securityPolicyId");
            }
            this.securityPolicyId = securityPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlFirewallPolicyId(String sqlFirewallPolicyId) {
            if (sqlFirewallPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "sqlFirewallPolicyId");
            }
            this.sqlFirewallPolicyId = sqlFirewallPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlLevel(String sqlLevel) {
            if (sqlLevel == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "sqlLevel");
            }
            this.sqlLevel = sqlLevel;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder violationAction(String violationAction) {
            if (violationAction == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "violationAction");
            }
            this.violationAction = violationAction;
            return this;
        }
        @CustomType.Setter
        public Builder violationAudit(String violationAudit) {
            if (violationAudit == null) {
              throw new MissingRequiredPropertyException("GetSqlFirewallPolicyResult", "violationAudit");
            }
            this.violationAudit = violationAudit;
            return this;
        }
        public GetSqlFirewallPolicyResult build() {
            final var _resultValue = new GetSqlFirewallPolicyResult();
            _resultValue.allowedClientIps = allowedClientIps;
            _resultValue.allowedClientOsUsernames = allowedClientOsUsernames;
            _resultValue.allowedClientPrograms = allowedClientPrograms;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbUserName = dbUserName;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.enforcementScope = enforcementScope;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.securityPolicyId = securityPolicyId;
            _resultValue.sqlFirewallPolicyId = sqlFirewallPolicyId;
            _resultValue.sqlLevel = sqlLevel;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.violationAction = violationAction;
            _resultValue.violationAudit = violationAudit;
            return _resultValue;
        }
    }
}
