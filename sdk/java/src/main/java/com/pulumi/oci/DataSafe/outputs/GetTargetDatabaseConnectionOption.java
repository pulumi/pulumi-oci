// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTargetDatabaseConnectionOption {
    /**
     * @return The connection type used to connect to the database. Allowed values:
     * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
     * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
     * 
     */
    private @Nullable String connectionType;
    /**
     * @return The OCID of the Data Safe private endpoint.
     * 
     */
    private @Nullable String datasafePrivateEndpointId;
    /**
     * @return The OCID of the on-premises connector.
     * 
     */
    private @Nullable String onPremConnectorId;

    private GetTargetDatabaseConnectionOption() {}
    /**
     * @return The connection type used to connect to the database. Allowed values:
     * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
     * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
     * 
     */
    public Optional<String> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }
    /**
     * @return The OCID of the Data Safe private endpoint.
     * 
     */
    public Optional<String> datasafePrivateEndpointId() {
        return Optional.ofNullable(this.datasafePrivateEndpointId);
    }
    /**
     * @return The OCID of the on-premises connector.
     * 
     */
    public Optional<String> onPremConnectorId() {
        return Optional.ofNullable(this.onPremConnectorId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabaseConnectionOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String connectionType;
        private @Nullable String datasafePrivateEndpointId;
        private @Nullable String onPremConnectorId;
        public Builder() {}
        public Builder(GetTargetDatabaseConnectionOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionType = defaults.connectionType;
    	      this.datasafePrivateEndpointId = defaults.datasafePrivateEndpointId;
    	      this.onPremConnectorId = defaults.onPremConnectorId;
        }

        @CustomType.Setter
        public Builder connectionType(@Nullable String connectionType) {
            this.connectionType = connectionType;
            return this;
        }
        @CustomType.Setter
        public Builder datasafePrivateEndpointId(@Nullable String datasafePrivateEndpointId) {
            this.datasafePrivateEndpointId = datasafePrivateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder onPremConnectorId(@Nullable String onPremConnectorId) {
            this.onPremConnectorId = onPremConnectorId;
            return this;
        }
        public GetTargetDatabaseConnectionOption build() {
            final var o = new GetTargetDatabaseConnectionOption();
            o.connectionType = connectionType;
            o.datasafePrivateEndpointId = datasafePrivateEndpointId;
            o.onPremConnectorId = onPremConnectorId;
            return o;
        }
    }
}
