// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabaseGroupMatchingCriteriaExclude;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabaseGroupMatchingCriteriaInclude;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTargetDatabaseGroupMatchingCriteria {
    /**
     * @return Criteria to exclude certain target databases from the target database group.
     * 
     */
    private List<GetTargetDatabaseGroupMatchingCriteriaExclude> excludes;
    /**
     * @return Criteria to determine whether a target database should be included in the target database group. If the database satisfies any of compartments, targetDatabaseIds, freeformTags, or definedTags criteria, it qualifies for inclusion in the target database group
     * 
     */
    private List<GetTargetDatabaseGroupMatchingCriteriaInclude> includes;

    private GetTargetDatabaseGroupMatchingCriteria() {}
    /**
     * @return Criteria to exclude certain target databases from the target database group.
     * 
     */
    public List<GetTargetDatabaseGroupMatchingCriteriaExclude> excludes() {
        return this.excludes;
    }
    /**
     * @return Criteria to determine whether a target database should be included in the target database group. If the database satisfies any of compartments, targetDatabaseIds, freeformTags, or definedTags criteria, it qualifies for inclusion in the target database group
     * 
     */
    public List<GetTargetDatabaseGroupMatchingCriteriaInclude> includes() {
        return this.includes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabaseGroupMatchingCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTargetDatabaseGroupMatchingCriteriaExclude> excludes;
        private List<GetTargetDatabaseGroupMatchingCriteriaInclude> includes;
        public Builder() {}
        public Builder(GetTargetDatabaseGroupMatchingCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludes = defaults.excludes;
    	      this.includes = defaults.includes;
        }

        @CustomType.Setter
        public Builder excludes(List<GetTargetDatabaseGroupMatchingCriteriaExclude> excludes) {
            if (excludes == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabaseGroupMatchingCriteria", "excludes");
            }
            this.excludes = excludes;
            return this;
        }
        public Builder excludes(GetTargetDatabaseGroupMatchingCriteriaExclude... excludes) {
            return excludes(List.of(excludes));
        }
        @CustomType.Setter
        public Builder includes(List<GetTargetDatabaseGroupMatchingCriteriaInclude> includes) {
            if (includes == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabaseGroupMatchingCriteria", "includes");
            }
            this.includes = includes;
            return this;
        }
        public Builder includes(GetTargetDatabaseGroupMatchingCriteriaInclude... includes) {
            return includes(List.of(includes));
        }
        public GetTargetDatabaseGroupMatchingCriteria build() {
            final var _resultValue = new GetTargetDatabaseGroupMatchingCriteria();
            _resultValue.excludes = excludes;
            _resultValue.includes = includes;
            return _resultValue;
        }
    }
}
