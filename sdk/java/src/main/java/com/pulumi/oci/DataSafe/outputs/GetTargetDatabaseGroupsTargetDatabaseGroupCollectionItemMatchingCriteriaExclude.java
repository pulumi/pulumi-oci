// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaExclude {
    /**
     * @return The list of target database OCIDs to be included in the target database group.
     * 
     */
    private List<String> targetDatabaseIds;

    private GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaExclude() {}
    /**
     * @return The list of target database OCIDs to be included in the target database group.
     * 
     */
    public List<String> targetDatabaseIds() {
        return this.targetDatabaseIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaExclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> targetDatabaseIds;
        public Builder() {}
        public Builder(GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaExclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetDatabaseIds = defaults.targetDatabaseIds;
        }

        @CustomType.Setter
        public Builder targetDatabaseIds(List<String> targetDatabaseIds) {
            if (targetDatabaseIds == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaExclude", "targetDatabaseIds");
            }
            this.targetDatabaseIds = targetDatabaseIds;
            return this;
        }
        public Builder targetDatabaseIds(String... targetDatabaseIds) {
            return targetDatabaseIds(List.of(targetDatabaseIds));
        }
        public GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaExclude build() {
            final var _resultValue = new GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaExclude();
            _resultValue.targetDatabaseIds = targetDatabaseIds;
            return _resultValue;
        }
    }
}
