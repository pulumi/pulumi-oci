// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaIncludeCompartment;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude {
    /**
     * @return List of compartment objects, each containing the OCID of the compartment and a boolean value that indicates whether the target databases in the compartments and sub-compartments should also be included in the target database group.
     * 
     */
    private List<GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaIncludeCompartment> compartments;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The list of target database OCIDs to be included in the target database group.
     * 
     */
    private List<String> targetDatabaseIds;

    private GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude() {}
    /**
     * @return List of compartment objects, each containing the OCID of the compartment and a boolean value that indicates whether the target databases in the compartments and sub-compartments should also be included in the target database group.
     * 
     */
    public List<GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaIncludeCompartment> compartments() {
        return this.compartments;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The list of target database OCIDs to be included in the target database group.
     * 
     */
    public List<String> targetDatabaseIds() {
        return this.targetDatabaseIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaIncludeCompartment> compartments;
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private List<String> targetDatabaseIds;
        public Builder() {}
        public Builder(GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartments = defaults.compartments;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.targetDatabaseIds = defaults.targetDatabaseIds;
        }

        @CustomType.Setter
        public Builder compartments(List<GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaIncludeCompartment> compartments) {
            if (compartments == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude", "compartments");
            }
            this.compartments = compartments;
            return this;
        }
        public Builder compartments(GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaIncludeCompartment... compartments) {
            return compartments(List.of(compartments));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetDatabaseIds(List<String> targetDatabaseIds) {
            if (targetDatabaseIds == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude", "targetDatabaseIds");
            }
            this.targetDatabaseIds = targetDatabaseIds;
            return this;
        }
        public Builder targetDatabaseIds(String... targetDatabaseIds) {
            return targetDatabaseIds(List.of(targetDatabaseIds));
        }
        public GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude build() {
            final var _resultValue = new GetTargetDatabaseGroupsTargetDatabaseGroupCollectionItemMatchingCriteriaInclude();
            _resultValue.compartments = compartments;
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.targetDatabaseIds = targetDatabaseIds;
            return _resultValue;
        }
    }
}
