// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabasePeerTargetDatabasesFilter;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetTargetDatabasePeerTargetDatabasesResult {
    private @Nullable List<GetTargetDatabasePeerTargetDatabasesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of peer_target_database_collection.
     * 
     */
    private List<GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection> peerTargetDatabaseCollections;
    private String targetDatabaseId;

    private GetTargetDatabasePeerTargetDatabasesResult() {}
    public List<GetTargetDatabasePeerTargetDatabasesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of peer_target_database_collection.
     * 
     */
    public List<GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection> peerTargetDatabaseCollections() {
        return this.peerTargetDatabaseCollections;
    }
    public String targetDatabaseId() {
        return this.targetDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabasePeerTargetDatabasesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetTargetDatabasePeerTargetDatabasesFilter> filters;
        private String id;
        private List<GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection> peerTargetDatabaseCollections;
        private String targetDatabaseId;
        public Builder() {}
        public Builder(GetTargetDatabasePeerTargetDatabasesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.peerTargetDatabaseCollections = defaults.peerTargetDatabaseCollections;
    	      this.targetDatabaseId = defaults.targetDatabaseId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetTargetDatabasePeerTargetDatabasesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetTargetDatabasePeerTargetDatabasesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasePeerTargetDatabasesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder peerTargetDatabaseCollections(List<GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection> peerTargetDatabaseCollections) {
            if (peerTargetDatabaseCollections == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasePeerTargetDatabasesResult", "peerTargetDatabaseCollections");
            }
            this.peerTargetDatabaseCollections = peerTargetDatabaseCollections;
            return this;
        }
        public Builder peerTargetDatabaseCollections(GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection... peerTargetDatabaseCollections) {
            return peerTargetDatabaseCollections(List.of(peerTargetDatabaseCollections));
        }
        @CustomType.Setter
        public Builder targetDatabaseId(String targetDatabaseId) {
            if (targetDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasePeerTargetDatabasesResult", "targetDatabaseId");
            }
            this.targetDatabaseId = targetDatabaseId;
            return this;
        }
        public GetTargetDatabasePeerTargetDatabasesResult build() {
            final var _resultValue = new GetTargetDatabasePeerTargetDatabasesResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.peerTargetDatabaseCollections = peerTargetDatabaseCollections;
            _resultValue.targetDatabaseId = targetDatabaseId;
            return _resultValue;
        }
    }
}
