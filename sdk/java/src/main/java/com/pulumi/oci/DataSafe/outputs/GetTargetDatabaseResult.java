// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabaseConnectionOption;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabaseCredential;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabaseDatabaseDetail;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabaseTlsConfig;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetTargetDatabaseResult {
    /**
     * @return The OCIDs of associated resources like Database, Data Safe private endpoint etc.
     * 
     */
    private List<String> associatedResourceIds;
    /**
     * @return The OCID of the compartment which contains the Data Safe target database.
     * 
     */
    private String compartmentId;
    /**
     * @return Types of connection supported by Data Safe.
     * 
     */
    private List<GetTargetDatabaseConnectionOption> connectionOptions;
    /**
     * @return The database credentials required for Data Safe to connect to the database.
     * 
     */
    private List<GetTargetDatabaseCredential> credentials;
    /**
     * @return Details of the database for the registration in Data Safe. To choose applicable database type and infrastructure type refer to  https://confluence.oci.oraclecorp.com/display/DATASAFE/Target+V2+Design
     * 
     */
    private List<GetTargetDatabaseDatabaseDetail> databaseDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The description of the target database in Data Safe.
     * 
     */
    private String description;
    /**
     * @return The display name of the target database in Data Safe.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the Data Safe target database.
     * 
     */
    private String id;
    /**
     * @return Details about the current state of the target database in Data Safe.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The current state of the target database in Data Safe.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    private String targetDatabaseId;
    /**
     * @return The date and time the database was registered in Data Safe and created as a target database in Data Safe.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time of the target database update in Data Safe.
     * 
     */
    private String timeUpdated;
    /**
     * @return The details required to establish a TLS enabled connection.
     * 
     */
    private List<GetTargetDatabaseTlsConfig> tlsConfigs;

    private GetTargetDatabaseResult() {}
    /**
     * @return The OCIDs of associated resources like Database, Data Safe private endpoint etc.
     * 
     */
    public List<String> associatedResourceIds() {
        return this.associatedResourceIds;
    }
    /**
     * @return The OCID of the compartment which contains the Data Safe target database.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Types of connection supported by Data Safe.
     * 
     */
    public List<GetTargetDatabaseConnectionOption> connectionOptions() {
        return this.connectionOptions;
    }
    /**
     * @return The database credentials required for Data Safe to connect to the database.
     * 
     */
    public List<GetTargetDatabaseCredential> credentials() {
        return this.credentials;
    }
    /**
     * @return Details of the database for the registration in Data Safe. To choose applicable database type and infrastructure type refer to  https://confluence.oci.oraclecorp.com/display/DATASAFE/Target+V2+Design
     * 
     */
    public List<GetTargetDatabaseDatabaseDetail> databaseDetails() {
        return this.databaseDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the target database in Data Safe.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the target database in Data Safe.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the Data Safe target database.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details about the current state of the target database in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The current state of the target database in Data Safe.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    public String targetDatabaseId() {
        return this.targetDatabaseId;
    }
    /**
     * @return The date and time the database was registered in Data Safe and created as a target database in Data Safe.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time of the target database update in Data Safe.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The details required to establish a TLS enabled connection.
     * 
     */
    public List<GetTargetDatabaseTlsConfig> tlsConfigs() {
        return this.tlsConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> associatedResourceIds;
        private String compartmentId;
        private List<GetTargetDatabaseConnectionOption> connectionOptions;
        private List<GetTargetDatabaseCredential> credentials;
        private List<GetTargetDatabaseDatabaseDetail> databaseDetails;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String state;
        private Map<String,Object> systemTags;
        private String targetDatabaseId;
        private String timeCreated;
        private String timeUpdated;
        private List<GetTargetDatabaseTlsConfig> tlsConfigs;
        public Builder() {}
        public Builder(GetTargetDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedResourceIds = defaults.associatedResourceIds;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionOptions = defaults.connectionOptions;
    	      this.credentials = defaults.credentials;
    	      this.databaseDetails = defaults.databaseDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetDatabaseId = defaults.targetDatabaseId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.tlsConfigs = defaults.tlsConfigs;
        }

        @CustomType.Setter
        public Builder associatedResourceIds(List<String> associatedResourceIds) {
            this.associatedResourceIds = Objects.requireNonNull(associatedResourceIds);
            return this;
        }
        public Builder associatedResourceIds(String... associatedResourceIds) {
            return associatedResourceIds(List.of(associatedResourceIds));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectionOptions(List<GetTargetDatabaseConnectionOption> connectionOptions) {
            this.connectionOptions = Objects.requireNonNull(connectionOptions);
            return this;
        }
        public Builder connectionOptions(GetTargetDatabaseConnectionOption... connectionOptions) {
            return connectionOptions(List.of(connectionOptions));
        }
        @CustomType.Setter
        public Builder credentials(List<GetTargetDatabaseCredential> credentials) {
            this.credentials = Objects.requireNonNull(credentials);
            return this;
        }
        public Builder credentials(GetTargetDatabaseCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder databaseDetails(List<GetTargetDatabaseDatabaseDetail> databaseDetails) {
            this.databaseDetails = Objects.requireNonNull(databaseDetails);
            return this;
        }
        public Builder databaseDetails(GetTargetDatabaseDatabaseDetail... databaseDetails) {
            return databaseDetails(List.of(databaseDetails));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder targetDatabaseId(String targetDatabaseId) {
            this.targetDatabaseId = Objects.requireNonNull(targetDatabaseId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder tlsConfigs(List<GetTargetDatabaseTlsConfig> tlsConfigs) {
            this.tlsConfigs = Objects.requireNonNull(tlsConfigs);
            return this;
        }
        public Builder tlsConfigs(GetTargetDatabaseTlsConfig... tlsConfigs) {
            return tlsConfigs(List.of(tlsConfigs));
        }
        public GetTargetDatabaseResult build() {
            final var o = new GetTargetDatabaseResult();
            o.associatedResourceIds = associatedResourceIds;
            o.compartmentId = compartmentId;
            o.connectionOptions = connectionOptions;
            o.credentials = credentials;
            o.databaseDetails = databaseDetails;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.state = state;
            o.systemTags = systemTags;
            o.targetDatabaseId = targetDatabaseId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.tlsConfigs = tlsConfigs;
            return o;
        }
    }
}
