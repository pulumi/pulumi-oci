// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailDatabaseDetail;
import com.pulumi.oci.DataSafe.outputs.GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailTlsConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail {
    /**
     * @return Details of the database for the registration in Data Safe.
     * 
     */
    private List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailDatabaseDetail> databaseDetails;
    /**
     * @return The OCID of the Data Guard Association resource in which the database associated to the peer target database is considered as peer database to the primary database.
     * 
     */
    private String dataguardAssociationId;
    /**
     * @return The description of the peer target database in Data Safe.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    private String displayName;
    /**
     * @return The details required to establish a TLS enabled connection.
     * 
     */
    private List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailTlsConfig> tlsConfigs;

    private GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail() {}
    /**
     * @return Details of the database for the registration in Data Safe.
     * 
     */
    public List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailDatabaseDetail> databaseDetails() {
        return this.databaseDetails;
    }
    /**
     * @return The OCID of the Data Guard Association resource in which the database associated to the peer target database is considered as peer database to the primary database.
     * 
     */
    public String dataguardAssociationId() {
        return this.dataguardAssociationId;
    }
    /**
     * @return The description of the peer target database in Data Safe.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The details required to establish a TLS enabled connection.
     * 
     */
    public List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailTlsConfig> tlsConfigs() {
        return this.tlsConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailDatabaseDetail> databaseDetails;
        private String dataguardAssociationId;
        private String description;
        private String displayName;
        private List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailTlsConfig> tlsConfigs;
        public Builder() {}
        public Builder(GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseDetails = defaults.databaseDetails;
    	      this.dataguardAssociationId = defaults.dataguardAssociationId;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.tlsConfigs = defaults.tlsConfigs;
        }

        @CustomType.Setter
        public Builder databaseDetails(List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailDatabaseDetail> databaseDetails) {
            if (databaseDetails == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail", "databaseDetails");
            }
            this.databaseDetails = databaseDetails;
            return this;
        }
        public Builder databaseDetails(GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailDatabaseDetail... databaseDetails) {
            return databaseDetails(List.of(databaseDetails));
        }
        @CustomType.Setter
        public Builder dataguardAssociationId(String dataguardAssociationId) {
            if (dataguardAssociationId == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail", "dataguardAssociationId");
            }
            this.dataguardAssociationId = dataguardAssociationId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder tlsConfigs(List<GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailTlsConfig> tlsConfigs) {
            if (tlsConfigs == null) {
              throw new MissingRequiredPropertyException("GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail", "tlsConfigs");
            }
            this.tlsConfigs = tlsConfigs;
            return this;
        }
        public Builder tlsConfigs(GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetailTlsConfig... tlsConfigs) {
            return tlsConfigs(List.of(tlsConfigs));
        }
        public GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail build() {
            final var _resultValue = new GetTargetDatabasesTargetDatabasePeerTargetDatabaseDetail();
            _resultValue.databaseDetails = databaseDetails;
            _resultValue.dataguardAssociationId = dataguardAssociationId;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.tlsConfigs = tlsConfigs;
            return _resultValue;
        }
    }
}
