// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetUnifiedAuditPoliciesFilter;
import com.pulumi.oci.DataSafe.outputs.GetUnifiedAuditPoliciesUnifiedAuditPolicyCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUnifiedAuditPoliciesResult {
    private @Nullable String accessLevel;
    /**
     * @return The OCID of the compartment containing the unified audit policy.
     * 
     */
    private String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The display name of the unified audit policy.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetUnifiedAuditPoliciesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the unified audit policy is seeded or not.
     * 
     */
    private @Nullable Boolean isSeeded;
    /**
     * @return The OCID of the security policy corresponding to the unified audit policy.
     * 
     */
    private @Nullable String securityPolicyId;
    /**
     * @return The current state of the unified audit policy.
     * 
     */
    private @Nullable String state;
    private @Nullable String timeCreatedGreaterThanOrEqualTo;
    private @Nullable String timeCreatedLessThan;
    /**
     * @return The list of unified_audit_policy_collection.
     * 
     */
    private List<GetUnifiedAuditPoliciesUnifiedAuditPolicyCollection> unifiedAuditPolicyCollections;
    /**
     * @return The OCID of the associated unified audit policy definition.
     * 
     */
    private @Nullable String unifiedAuditPolicyDefinitionId;
    private @Nullable String unifiedAuditPolicyId;

    private GetUnifiedAuditPoliciesResult() {}
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return The OCID of the compartment containing the unified audit policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The display name of the unified audit policy.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetUnifiedAuditPoliciesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the unified audit policy is seeded or not.
     * 
     */
    public Optional<Boolean> isSeeded() {
        return Optional.ofNullable(this.isSeeded);
    }
    /**
     * @return The OCID of the security policy corresponding to the unified audit policy.
     * 
     */
    public Optional<String> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }
    /**
     * @return The current state of the unified audit policy.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }
    /**
     * @return The list of unified_audit_policy_collection.
     * 
     */
    public List<GetUnifiedAuditPoliciesUnifiedAuditPolicyCollection> unifiedAuditPolicyCollections() {
        return this.unifiedAuditPolicyCollections;
    }
    /**
     * @return The OCID of the associated unified audit policy definition.
     * 
     */
    public Optional<String> unifiedAuditPolicyDefinitionId() {
        return Optional.ofNullable(this.unifiedAuditPolicyDefinitionId);
    }
    public Optional<String> unifiedAuditPolicyId() {
        return Optional.ofNullable(this.unifiedAuditPolicyId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUnifiedAuditPoliciesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetUnifiedAuditPoliciesFilter> filters;
        private String id;
        private @Nullable Boolean isSeeded;
        private @Nullable String securityPolicyId;
        private @Nullable String state;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        private List<GetUnifiedAuditPoliciesUnifiedAuditPolicyCollection> unifiedAuditPolicyCollections;
        private @Nullable String unifiedAuditPolicyDefinitionId;
        private @Nullable String unifiedAuditPolicyId;
        public Builder() {}
        public Builder(GetUnifiedAuditPoliciesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isSeeded = defaults.isSeeded;
    	      this.securityPolicyId = defaults.securityPolicyId;
    	      this.state = defaults.state;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
    	      this.unifiedAuditPolicyCollections = defaults.unifiedAuditPolicyCollections;
    	      this.unifiedAuditPolicyDefinitionId = defaults.unifiedAuditPolicyDefinitionId;
    	      this.unifiedAuditPolicyId = defaults.unifiedAuditPolicyId;
        }

        @CustomType.Setter
        public Builder accessLevel(@Nullable String accessLevel) {

            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPoliciesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetUnifiedAuditPoliciesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetUnifiedAuditPoliciesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPoliciesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSeeded(@Nullable Boolean isSeeded) {

            this.isSeeded = isSeeded;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyId(@Nullable String securityPolicyId) {

            this.securityPolicyId = securityPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {

            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {

            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyCollections(List<GetUnifiedAuditPoliciesUnifiedAuditPolicyCollection> unifiedAuditPolicyCollections) {
            if (unifiedAuditPolicyCollections == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPoliciesResult", "unifiedAuditPolicyCollections");
            }
            this.unifiedAuditPolicyCollections = unifiedAuditPolicyCollections;
            return this;
        }
        public Builder unifiedAuditPolicyCollections(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollection... unifiedAuditPolicyCollections) {
            return unifiedAuditPolicyCollections(List.of(unifiedAuditPolicyCollections));
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyDefinitionId(@Nullable String unifiedAuditPolicyDefinitionId) {

            this.unifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyId(@Nullable String unifiedAuditPolicyId) {

            this.unifiedAuditPolicyId = unifiedAuditPolicyId;
            return this;
        }
        public GetUnifiedAuditPoliciesResult build() {
            final var _resultValue = new GetUnifiedAuditPoliciesResult();
            _resultValue.accessLevel = accessLevel;
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isSeeded = isSeeded;
            _resultValue.securityPolicyId = securityPolicyId;
            _resultValue.state = state;
            _resultValue.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            _resultValue.timeCreatedLessThan = timeCreatedLessThan;
            _resultValue.unifiedAuditPolicyCollections = unifiedAuditPolicyCollections;
            _resultValue.unifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            _resultValue.unifiedAuditPolicyId = unifiedAuditPolicyId;
            return _resultValue;
        }
    }
}
