// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetUnifiedAuditPolicyDefinitionsFilter;
import com.pulumi.oci.DataSafe.outputs.GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUnifiedAuditPolicyDefinitionsResult {
    private @Nullable String accessLevel;
    /**
     * @return The OCID of the compartment containing the unified audit policy definition.
     * 
     */
    private String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The display name of the unified audit policy definition.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetUnifiedAuditPolicyDefinitionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Signifies whether the unified audit policy definition is seeded or not.
     * 
     */
    private @Nullable Boolean isSeeded;
    /**
     * @return The current state of the unified audit policy definition.
     * 
     */
    private @Nullable String state;
    private @Nullable String unifiedAuditPolicyCategory;
    /**
     * @return The list of unified_audit_policy_definition_collection.
     * 
     */
    private List<GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection> unifiedAuditPolicyDefinitionCollections;
    private @Nullable String unifiedAuditPolicyDefinitionId;
    private @Nullable String unifiedAuditPolicyName;

    private GetUnifiedAuditPolicyDefinitionsResult() {}
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return The OCID of the compartment containing the unified audit policy definition.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The display name of the unified audit policy definition.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetUnifiedAuditPolicyDefinitionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Signifies whether the unified audit policy definition is seeded or not.
     * 
     */
    public Optional<Boolean> isSeeded() {
        return Optional.ofNullable(this.isSeeded);
    }
    /**
     * @return The current state of the unified audit policy definition.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> unifiedAuditPolicyCategory() {
        return Optional.ofNullable(this.unifiedAuditPolicyCategory);
    }
    /**
     * @return The list of unified_audit_policy_definition_collection.
     * 
     */
    public List<GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection> unifiedAuditPolicyDefinitionCollections() {
        return this.unifiedAuditPolicyDefinitionCollections;
    }
    public Optional<String> unifiedAuditPolicyDefinitionId() {
        return Optional.ofNullable(this.unifiedAuditPolicyDefinitionId);
    }
    public Optional<String> unifiedAuditPolicyName() {
        return Optional.ofNullable(this.unifiedAuditPolicyName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUnifiedAuditPolicyDefinitionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetUnifiedAuditPolicyDefinitionsFilter> filters;
        private String id;
        private @Nullable Boolean isSeeded;
        private @Nullable String state;
        private @Nullable String unifiedAuditPolicyCategory;
        private List<GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection> unifiedAuditPolicyDefinitionCollections;
        private @Nullable String unifiedAuditPolicyDefinitionId;
        private @Nullable String unifiedAuditPolicyName;
        public Builder() {}
        public Builder(GetUnifiedAuditPolicyDefinitionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isSeeded = defaults.isSeeded;
    	      this.state = defaults.state;
    	      this.unifiedAuditPolicyCategory = defaults.unifiedAuditPolicyCategory;
    	      this.unifiedAuditPolicyDefinitionCollections = defaults.unifiedAuditPolicyDefinitionCollections;
    	      this.unifiedAuditPolicyDefinitionId = defaults.unifiedAuditPolicyDefinitionId;
    	      this.unifiedAuditPolicyName = defaults.unifiedAuditPolicyName;
        }

        @CustomType.Setter
        public Builder accessLevel(@Nullable String accessLevel) {

            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyDefinitionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetUnifiedAuditPolicyDefinitionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetUnifiedAuditPolicyDefinitionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyDefinitionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSeeded(@Nullable Boolean isSeeded) {

            this.isSeeded = isSeeded;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyCategory(@Nullable String unifiedAuditPolicyCategory) {

            this.unifiedAuditPolicyCategory = unifiedAuditPolicyCategory;
            return this;
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyDefinitionCollections(List<GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection> unifiedAuditPolicyDefinitionCollections) {
            if (unifiedAuditPolicyDefinitionCollections == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyDefinitionsResult", "unifiedAuditPolicyDefinitionCollections");
            }
            this.unifiedAuditPolicyDefinitionCollections = unifiedAuditPolicyDefinitionCollections;
            return this;
        }
        public Builder unifiedAuditPolicyDefinitionCollections(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection... unifiedAuditPolicyDefinitionCollections) {
            return unifiedAuditPolicyDefinitionCollections(List.of(unifiedAuditPolicyDefinitionCollections));
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyDefinitionId(@Nullable String unifiedAuditPolicyDefinitionId) {

            this.unifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyName(@Nullable String unifiedAuditPolicyName) {

            this.unifiedAuditPolicyName = unifiedAuditPolicyName;
            return this;
        }
        public GetUnifiedAuditPolicyDefinitionsResult build() {
            final var _resultValue = new GetUnifiedAuditPolicyDefinitionsResult();
            _resultValue.accessLevel = accessLevel;
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isSeeded = isSeeded;
            _resultValue.state = state;
            _resultValue.unifiedAuditPolicyCategory = unifiedAuditPolicyCategory;
            _resultValue.unifiedAuditPolicyDefinitionCollections = unifiedAuditPolicyDefinitionCollections;
            _resultValue.unifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            _resultValue.unifiedAuditPolicyName = unifiedAuditPolicyName;
            return _resultValue;
        }
    }
}
