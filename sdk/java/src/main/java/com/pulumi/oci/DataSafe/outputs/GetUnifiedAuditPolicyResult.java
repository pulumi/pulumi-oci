// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetUnifiedAuditPolicyCondition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetUnifiedAuditPolicyResult {
    /**
     * @return The OCID of the compartment containing the unified audit policy.
     * 
     */
    private String compartmentId;
    /**
     * @return Lists the audit policy provisioning conditions.
     * 
     */
    private List<GetUnifiedAuditPolicyCondition> conditions;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The description of the unified audit policy.
     * 
     */
    private String description;
    /**
     * @return The display name of the unified audit policy.
     * 
     */
    private String displayName;
    /**
     * @return Indicates on whom the audit policy is enabled.
     * 
     */
    private String enabledEntities;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the unified audit policy.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the unified audit policy is seeded or not.
     * 
     */
    private Boolean isSeeded;
    /**
     * @return The details of the current state of the unified audit policy in Data Safe.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The OCID of the security policy corresponding to the unified audit policy.
     * 
     */
    private String securityPolicyId;
    /**
     * @return The current state of the unified audit policy.
     * 
     */
    private String state;
    /**
     * @return Indicates whether the policy has been enabled or disabled.
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the the unified audit policy was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The last date and time the unified audit policy was updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;
    /**
     * @return The OCID of the associated unified audit policy definition.
     * 
     */
    private String unifiedAuditPolicyDefinitionId;
    private String unifiedAuditPolicyId;

    private GetUnifiedAuditPolicyResult() {}
    /**
     * @return The OCID of the compartment containing the unified audit policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Lists the audit policy provisioning conditions.
     * 
     */
    public List<GetUnifiedAuditPolicyCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the unified audit policy.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the unified audit policy.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Indicates on whom the audit policy is enabled.
     * 
     */
    public String enabledEntities() {
        return this.enabledEntities;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the unified audit policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the unified audit policy is seeded or not.
     * 
     */
    public Boolean isSeeded() {
        return this.isSeeded;
    }
    /**
     * @return The details of the current state of the unified audit policy in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the security policy corresponding to the unified audit policy.
     * 
     */
    public String securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * @return The current state of the unified audit policy.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Indicates whether the policy has been enabled or disabled.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the unified audit policy was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The last date and time the unified audit policy was updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The OCID of the associated unified audit policy definition.
     * 
     */
    public String unifiedAuditPolicyDefinitionId() {
        return this.unifiedAuditPolicyDefinitionId;
    }
    public String unifiedAuditPolicyId() {
        return this.unifiedAuditPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUnifiedAuditPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetUnifiedAuditPolicyCondition> conditions;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private String enabledEntities;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isSeeded;
        private String lifecycleDetails;
        private String securityPolicyId;
        private String state;
        private String status;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String unifiedAuditPolicyDefinitionId;
        private String unifiedAuditPolicyId;
        public Builder() {}
        public Builder(GetUnifiedAuditPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.conditions = defaults.conditions;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.enabledEntities = defaults.enabledEntities;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isSeeded = defaults.isSeeded;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.securityPolicyId = defaults.securityPolicyId;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.unifiedAuditPolicyDefinitionId = defaults.unifiedAuditPolicyDefinitionId;
    	      this.unifiedAuditPolicyId = defaults.unifiedAuditPolicyId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetUnifiedAuditPolicyCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetUnifiedAuditPolicyCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder enabledEntities(String enabledEntities) {
            if (enabledEntities == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "enabledEntities");
            }
            this.enabledEntities = enabledEntities;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSeeded(Boolean isSeeded) {
            if (isSeeded == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "isSeeded");
            }
            this.isSeeded = isSeeded;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyId(String securityPolicyId) {
            if (securityPolicyId == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "securityPolicyId");
            }
            this.securityPolicyId = securityPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyDefinitionId(String unifiedAuditPolicyDefinitionId) {
            if (unifiedAuditPolicyDefinitionId == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "unifiedAuditPolicyDefinitionId");
            }
            this.unifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder unifiedAuditPolicyId(String unifiedAuditPolicyId) {
            if (unifiedAuditPolicyId == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAuditPolicyResult", "unifiedAuditPolicyId");
            }
            this.unifiedAuditPolicyId = unifiedAuditPolicyId;
            return this;
        }
        public GetUnifiedAuditPolicyResult build() {
            final var _resultValue = new GetUnifiedAuditPolicyResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.conditions = conditions;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.enabledEntities = enabledEntities;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isSeeded = isSeeded;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.securityPolicyId = securityPolicyId;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.unifiedAuditPolicyDefinitionId = unifiedAuditPolicyDefinitionId;
            _resultValue.unifiedAuditPolicyId = unifiedAuditPolicyId;
            return _resultValue;
        }
    }
}
