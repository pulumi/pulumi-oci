// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserAssessmentIgnoredTarget {
    private String lifecycleState;
    private String targetId;
    /**
     * @return The OCID of the user assessment.
     * 
     */
    private String userAssessmentId;

    private GetUserAssessmentIgnoredTarget() {}
    public String lifecycleState() {
        return this.lifecycleState;
    }
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The OCID of the user assessment.
     * 
     */
    public String userAssessmentId() {
        return this.userAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAssessmentIgnoredTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String lifecycleState;
        private String targetId;
        private String userAssessmentId;
        public Builder() {}
        public Builder(GetUserAssessmentIgnoredTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lifecycleState = defaults.lifecycleState;
    	      this.targetId = defaults.targetId;
    	      this.userAssessmentId = defaults.userAssessmentId;
        }

        @CustomType.Setter
        public Builder lifecycleState(String lifecycleState) {
            if (lifecycleState == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentIgnoredTarget", "lifecycleState");
            }
            this.lifecycleState = lifecycleState;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentIgnoredTarget", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder userAssessmentId(String userAssessmentId) {
            if (userAssessmentId == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentIgnoredTarget", "userAssessmentId");
            }
            this.userAssessmentId = userAssessmentId;
            return this;
        }
        public GetUserAssessmentIgnoredTarget build() {
            final var _resultValue = new GetUserAssessmentIgnoredTarget();
            _resultValue.lifecycleState = lifecycleState;
            _resultValue.targetId = targetId;
            _resultValue.userAssessmentId = userAssessmentId;
            return _resultValue;
        }
    }
}
