// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetUserAssessmentUserAccessAnalyticsFilter;
import com.pulumi.oci.DataSafe.outputs.GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetUserAssessmentUserAccessAnalyticsResult {
    private @Nullable List<GetUserAssessmentUserAccessAnalyticsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of user_access_analytics_collection.
     * 
     */
    private List<GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection> userAccessAnalyticsCollections;
    private String userAssessmentId;

    private GetUserAssessmentUserAccessAnalyticsResult() {}
    public List<GetUserAssessmentUserAccessAnalyticsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of user_access_analytics_collection.
     * 
     */
    public List<GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection> userAccessAnalyticsCollections() {
        return this.userAccessAnalyticsCollections;
    }
    public String userAssessmentId() {
        return this.userAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAssessmentUserAccessAnalyticsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetUserAssessmentUserAccessAnalyticsFilter> filters;
        private String id;
        private List<GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection> userAccessAnalyticsCollections;
        private String userAssessmentId;
        public Builder() {}
        public Builder(GetUserAssessmentUserAccessAnalyticsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.userAccessAnalyticsCollections = defaults.userAccessAnalyticsCollections;
    	      this.userAssessmentId = defaults.userAssessmentId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetUserAssessmentUserAccessAnalyticsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetUserAssessmentUserAccessAnalyticsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentUserAccessAnalyticsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder userAccessAnalyticsCollections(List<GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection> userAccessAnalyticsCollections) {
            if (userAccessAnalyticsCollections == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentUserAccessAnalyticsResult", "userAccessAnalyticsCollections");
            }
            this.userAccessAnalyticsCollections = userAccessAnalyticsCollections;
            return this;
        }
        public Builder userAccessAnalyticsCollections(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection... userAccessAnalyticsCollections) {
            return userAccessAnalyticsCollections(List.of(userAccessAnalyticsCollections));
        }
        @CustomType.Setter
        public Builder userAssessmentId(String userAssessmentId) {
            if (userAssessmentId == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentUserAccessAnalyticsResult", "userAssessmentId");
            }
            this.userAssessmentId = userAssessmentId;
            return this;
        }
        public GetUserAssessmentUserAccessAnalyticsResult build() {
            final var _resultValue = new GetUserAssessmentUserAccessAnalyticsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.userAccessAnalyticsCollections = userAccessAnalyticsCollections;
            _resultValue.userAssessmentId = userAssessmentId;
            return _resultValue;
        }
    }
}
