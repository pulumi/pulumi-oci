// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.GetUserAssessmentsUserAssessmentIgnoredTarget;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetUserAssessmentsUserAssessment {
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The description of the user assessment.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the user assessment.
     * 
     */
    private String id;
    /**
     * @return List containing maps as values. Example: `{&#34;Operations&#34;: [ {&#34;CostCenter&#34;: &#34;42&#34;} ] }`
     * 
     */
    private List<String> ignoredAssessmentIds;
    /**
     * @return List containing maps as values. Example: `{&#34;Operations&#34;: [ {&#34;CostCenter&#34;: &#34;42&#34;} ] }`
     * 
     */
    private List<GetUserAssessmentsUserAssessmentIgnoredTarget> ignoredTargets;
    /**
     * @return Indicates whether the assessment is scheduled to run.
     * 
     */
    private Boolean isAssessmentScheduled;
    /**
     * @return A filter to return only user assessments that are set as baseline.
     * 
     */
    private Boolean isBaseline;
    /**
     * @return Indicates if the user assessment deviates from the baseline.
     * 
     */
    private Boolean isDeviatedFromBaseline;
    /**
     * @return The OCID of the last user assessment baseline against which the latest assessment was compared.
     * 
     */
    private String lastComparedBaselineId;
    /**
     * @return Details about the current state of the user assessment.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Schedule of the assessment that runs periodically in this specified format: &lt;version-string&gt;;&lt;version-specific-schedule&gt;
     * 
     */
    private String schedule;
    /**
     * @return The OCID of the user assessment that is responsible for creating this scheduled save assessment.
     * 
     */
    private String scheduleAssessmentId;
    /**
     * @return The current state of the user assessment.
     * 
     */
    private String state;
    /**
     * @return Map that contains maps of values. Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    private String statistics;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    private String targetId;
    /**
     * @return Array of database target OCIDs.
     * 
     */
    private List<String> targetIds;
    /**
     * @return The date and time the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the user assessment was last executed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeLastAssessed;
    /**
     * @return The date and time the user assessment was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeUpdated;
    /**
     * @return A filter to return user assessments that were created by either the system or by a user only.
     * 
     */
    private String triggeredBy;
    /**
     * @return A filter to return only items that match the specified assessment type.
     * 
     */
    private String type;

    private GetUserAssessmentsUserAssessment() {}
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the user assessment.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the user assessment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List containing maps as values. Example: `{&#34;Operations&#34;: [ {&#34;CostCenter&#34;: &#34;42&#34;} ] }`
     * 
     */
    public List<String> ignoredAssessmentIds() {
        return this.ignoredAssessmentIds;
    }
    /**
     * @return List containing maps as values. Example: `{&#34;Operations&#34;: [ {&#34;CostCenter&#34;: &#34;42&#34;} ] }`
     * 
     */
    public List<GetUserAssessmentsUserAssessmentIgnoredTarget> ignoredTargets() {
        return this.ignoredTargets;
    }
    /**
     * @return Indicates whether the assessment is scheduled to run.
     * 
     */
    public Boolean isAssessmentScheduled() {
        return this.isAssessmentScheduled;
    }
    /**
     * @return A filter to return only user assessments that are set as baseline.
     * 
     */
    public Boolean isBaseline() {
        return this.isBaseline;
    }
    /**
     * @return Indicates if the user assessment deviates from the baseline.
     * 
     */
    public Boolean isDeviatedFromBaseline() {
        return this.isDeviatedFromBaseline;
    }
    /**
     * @return The OCID of the last user assessment baseline against which the latest assessment was compared.
     * 
     */
    public String lastComparedBaselineId() {
        return this.lastComparedBaselineId;
    }
    /**
     * @return Details about the current state of the user assessment.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Schedule of the assessment that runs periodically in this specified format: &lt;version-string&gt;;&lt;version-specific-schedule&gt;
     * 
     */
    public String schedule() {
        return this.schedule;
    }
    /**
     * @return The OCID of the user assessment that is responsible for creating this scheduled save assessment.
     * 
     */
    public String scheduleAssessmentId() {
        return this.scheduleAssessmentId;
    }
    /**
     * @return The current state of the user assessment.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Map that contains maps of values. Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    public String statistics() {
        return this.statistics;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return Array of database target OCIDs.
     * 
     */
    public List<String> targetIds() {
        return this.targetIds;
    }
    /**
     * @return The date and time the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the user assessment was last executed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeLastAssessed() {
        return this.timeLastAssessed;
    }
    /**
     * @return The date and time the user assessment was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return A filter to return user assessments that were created by either the system or by a user only.
     * 
     */
    public String triggeredBy() {
        return this.triggeredBy;
    }
    /**
     * @return A filter to return only items that match the specified assessment type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAssessmentsUserAssessment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<String> ignoredAssessmentIds;
        private List<GetUserAssessmentsUserAssessmentIgnoredTarget> ignoredTargets;
        private Boolean isAssessmentScheduled;
        private Boolean isBaseline;
        private Boolean isDeviatedFromBaseline;
        private String lastComparedBaselineId;
        private String lifecycleDetails;
        private String schedule;
        private String scheduleAssessmentId;
        private String state;
        private String statistics;
        private Map<String,Object> systemTags;
        private String targetId;
        private List<String> targetIds;
        private String timeCreated;
        private String timeLastAssessed;
        private String timeUpdated;
        private String triggeredBy;
        private String type;
        public Builder() {}
        public Builder(GetUserAssessmentsUserAssessment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.ignoredAssessmentIds = defaults.ignoredAssessmentIds;
    	      this.ignoredTargets = defaults.ignoredTargets;
    	      this.isAssessmentScheduled = defaults.isAssessmentScheduled;
    	      this.isBaseline = defaults.isBaseline;
    	      this.isDeviatedFromBaseline = defaults.isDeviatedFromBaseline;
    	      this.lastComparedBaselineId = defaults.lastComparedBaselineId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.schedule = defaults.schedule;
    	      this.scheduleAssessmentId = defaults.scheduleAssessmentId;
    	      this.state = defaults.state;
    	      this.statistics = defaults.statistics;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.targetIds = defaults.targetIds;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastAssessed = defaults.timeLastAssessed;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.triggeredBy = defaults.triggeredBy;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ignoredAssessmentIds(List<String> ignoredAssessmentIds) {
            if (ignoredAssessmentIds == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "ignoredAssessmentIds");
            }
            this.ignoredAssessmentIds = ignoredAssessmentIds;
            return this;
        }
        public Builder ignoredAssessmentIds(String... ignoredAssessmentIds) {
            return ignoredAssessmentIds(List.of(ignoredAssessmentIds));
        }
        @CustomType.Setter
        public Builder ignoredTargets(List<GetUserAssessmentsUserAssessmentIgnoredTarget> ignoredTargets) {
            if (ignoredTargets == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "ignoredTargets");
            }
            this.ignoredTargets = ignoredTargets;
            return this;
        }
        public Builder ignoredTargets(GetUserAssessmentsUserAssessmentIgnoredTarget... ignoredTargets) {
            return ignoredTargets(List.of(ignoredTargets));
        }
        @CustomType.Setter
        public Builder isAssessmentScheduled(Boolean isAssessmentScheduled) {
            if (isAssessmentScheduled == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "isAssessmentScheduled");
            }
            this.isAssessmentScheduled = isAssessmentScheduled;
            return this;
        }
        @CustomType.Setter
        public Builder isBaseline(Boolean isBaseline) {
            if (isBaseline == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "isBaseline");
            }
            this.isBaseline = isBaseline;
            return this;
        }
        @CustomType.Setter
        public Builder isDeviatedFromBaseline(Boolean isDeviatedFromBaseline) {
            if (isDeviatedFromBaseline == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "isDeviatedFromBaseline");
            }
            this.isDeviatedFromBaseline = isDeviatedFromBaseline;
            return this;
        }
        @CustomType.Setter
        public Builder lastComparedBaselineId(String lastComparedBaselineId) {
            if (lastComparedBaselineId == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "lastComparedBaselineId");
            }
            this.lastComparedBaselineId = lastComparedBaselineId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder schedule(String schedule) {
            if (schedule == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "schedule");
            }
            this.schedule = schedule;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleAssessmentId(String scheduleAssessmentId) {
            if (scheduleAssessmentId == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "scheduleAssessmentId");
            }
            this.scheduleAssessmentId = scheduleAssessmentId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder statistics(String statistics) {
            if (statistics == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "statistics");
            }
            this.statistics = statistics;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder targetIds(List<String> targetIds) {
            if (targetIds == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "targetIds");
            }
            this.targetIds = targetIds;
            return this;
        }
        public Builder targetIds(String... targetIds) {
            return targetIds(List.of(targetIds));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastAssessed(String timeLastAssessed) {
            if (timeLastAssessed == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "timeLastAssessed");
            }
            this.timeLastAssessed = timeLastAssessed;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder triggeredBy(String triggeredBy) {
            if (triggeredBy == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "triggeredBy");
            }
            this.triggeredBy = triggeredBy;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetUserAssessmentsUserAssessment", "type");
            }
            this.type = type;
            return this;
        }
        public GetUserAssessmentsUserAssessment build() {
            final var _resultValue = new GetUserAssessmentsUserAssessment();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.ignoredAssessmentIds = ignoredAssessmentIds;
            _resultValue.ignoredTargets = ignoredTargets;
            _resultValue.isAssessmentScheduled = isAssessmentScheduled;
            _resultValue.isBaseline = isBaseline;
            _resultValue.isDeviatedFromBaseline = isDeviatedFromBaseline;
            _resultValue.lastComparedBaselineId = lastComparedBaselineId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.schedule = schedule;
            _resultValue.scheduleAssessmentId = scheduleAssessmentId;
            _resultValue.state = state;
            _resultValue.statistics = statistics;
            _resultValue.systemTags = systemTags;
            _resultValue.targetId = targetId;
            _resultValue.targetIds = targetIds;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastAssessed = timeLastAssessed;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.triggeredBy = triggeredBy;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
