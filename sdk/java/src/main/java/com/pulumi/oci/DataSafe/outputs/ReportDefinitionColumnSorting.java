// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ReportDefinitionColumnSorting {
    /**
     * @return (Updatable) Name of the column that must be sorted.
     * 
     */
    private String fieldName;
    /**
     * @return (Updatable) Indicates if the column must be sorted in ascending order. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    private Boolean isAscending;
    /**
     * @return (Updatable) Indicates the order at which column must be sorted.
     * 
     */
    private Integer sortingOrder;

    private ReportDefinitionColumnSorting() {}
    /**
     * @return (Updatable) Name of the column that must be sorted.
     * 
     */
    public String fieldName() {
        return this.fieldName;
    }
    /**
     * @return (Updatable) Indicates if the column must be sorted in ascending order. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    public Boolean isAscending() {
        return this.isAscending;
    }
    /**
     * @return (Updatable) Indicates the order at which column must be sorted.
     * 
     */
    public Integer sortingOrder() {
        return this.sortingOrder;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReportDefinitionColumnSorting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fieldName;
        private Boolean isAscending;
        private Integer sortingOrder;
        public Builder() {}
        public Builder(ReportDefinitionColumnSorting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldName = defaults.fieldName;
    	      this.isAscending = defaults.isAscending;
    	      this.sortingOrder = defaults.sortingOrder;
        }

        @CustomType.Setter
        public Builder fieldName(String fieldName) {
            this.fieldName = Objects.requireNonNull(fieldName);
            return this;
        }
        @CustomType.Setter
        public Builder isAscending(Boolean isAscending) {
            this.isAscending = Objects.requireNonNull(isAscending);
            return this;
        }
        @CustomType.Setter
        public Builder sortingOrder(Integer sortingOrder) {
            this.sortingOrder = Objects.requireNonNull(sortingOrder);
            return this;
        }
        public ReportDefinitionColumnSorting build() {
            final var _resultValue = new ReportDefinitionColumnSorting();
            _resultValue.fieldName = fieldName;
            _resultValue.isAscending = isAscending;
            _resultValue.sortingOrder = sortingOrder;
            return _resultValue;
        }
    }
}
