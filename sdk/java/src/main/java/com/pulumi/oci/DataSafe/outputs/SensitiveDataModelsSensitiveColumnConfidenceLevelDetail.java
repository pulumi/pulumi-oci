// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SensitiveDataModelsSensitiveColumnConfidenceLevelDetail {
    private @Nullable Boolean doesColumnLeadToPiiInNonTables;
    private @Nullable Boolean doesColumnLeadToPiiInSameRelatedTables;
    private @Nullable Boolean hasCommentPatternMatched;
    private @Nullable Boolean hasDataPatternMatched;
    private @Nullable Boolean hasNamePatternMatched;
    private @Nullable Boolean isSensitiveTypeFromSameContextFoundInSameOrRelatedTables;

    private SensitiveDataModelsSensitiveColumnConfidenceLevelDetail() {}
    public Optional<Boolean> doesColumnLeadToPiiInNonTables() {
        return Optional.ofNullable(this.doesColumnLeadToPiiInNonTables);
    }
    public Optional<Boolean> doesColumnLeadToPiiInSameRelatedTables() {
        return Optional.ofNullable(this.doesColumnLeadToPiiInSameRelatedTables);
    }
    public Optional<Boolean> hasCommentPatternMatched() {
        return Optional.ofNullable(this.hasCommentPatternMatched);
    }
    public Optional<Boolean> hasDataPatternMatched() {
        return Optional.ofNullable(this.hasDataPatternMatched);
    }
    public Optional<Boolean> hasNamePatternMatched() {
        return Optional.ofNullable(this.hasNamePatternMatched);
    }
    public Optional<Boolean> isSensitiveTypeFromSameContextFoundInSameOrRelatedTables() {
        return Optional.ofNullable(this.isSensitiveTypeFromSameContextFoundInSameOrRelatedTables);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SensitiveDataModelsSensitiveColumnConfidenceLevelDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean doesColumnLeadToPiiInNonTables;
        private @Nullable Boolean doesColumnLeadToPiiInSameRelatedTables;
        private @Nullable Boolean hasCommentPatternMatched;
        private @Nullable Boolean hasDataPatternMatched;
        private @Nullable Boolean hasNamePatternMatched;
        private @Nullable Boolean isSensitiveTypeFromSameContextFoundInSameOrRelatedTables;
        public Builder() {}
        public Builder(SensitiveDataModelsSensitiveColumnConfidenceLevelDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doesColumnLeadToPiiInNonTables = defaults.doesColumnLeadToPiiInNonTables;
    	      this.doesColumnLeadToPiiInSameRelatedTables = defaults.doesColumnLeadToPiiInSameRelatedTables;
    	      this.hasCommentPatternMatched = defaults.hasCommentPatternMatched;
    	      this.hasDataPatternMatched = defaults.hasDataPatternMatched;
    	      this.hasNamePatternMatched = defaults.hasNamePatternMatched;
    	      this.isSensitiveTypeFromSameContextFoundInSameOrRelatedTables = defaults.isSensitiveTypeFromSameContextFoundInSameOrRelatedTables;
        }

        @CustomType.Setter
        public Builder doesColumnLeadToPiiInNonTables(@Nullable Boolean doesColumnLeadToPiiInNonTables) {

            this.doesColumnLeadToPiiInNonTables = doesColumnLeadToPiiInNonTables;
            return this;
        }
        @CustomType.Setter
        public Builder doesColumnLeadToPiiInSameRelatedTables(@Nullable Boolean doesColumnLeadToPiiInSameRelatedTables) {

            this.doesColumnLeadToPiiInSameRelatedTables = doesColumnLeadToPiiInSameRelatedTables;
            return this;
        }
        @CustomType.Setter
        public Builder hasCommentPatternMatched(@Nullable Boolean hasCommentPatternMatched) {

            this.hasCommentPatternMatched = hasCommentPatternMatched;
            return this;
        }
        @CustomType.Setter
        public Builder hasDataPatternMatched(@Nullable Boolean hasDataPatternMatched) {

            this.hasDataPatternMatched = hasDataPatternMatched;
            return this;
        }
        @CustomType.Setter
        public Builder hasNamePatternMatched(@Nullable Boolean hasNamePatternMatched) {

            this.hasNamePatternMatched = hasNamePatternMatched;
            return this;
        }
        @CustomType.Setter
        public Builder isSensitiveTypeFromSameContextFoundInSameOrRelatedTables(@Nullable Boolean isSensitiveTypeFromSameContextFoundInSameOrRelatedTables) {

            this.isSensitiveTypeFromSameContextFoundInSameOrRelatedTables = isSensitiveTypeFromSameContextFoundInSameOrRelatedTables;
            return this;
        }
        public SensitiveDataModelsSensitiveColumnConfidenceLevelDetail build() {
            final var _resultValue = new SensitiveDataModelsSensitiveColumnConfidenceLevelDetail();
            _resultValue.doesColumnLeadToPiiInNonTables = doesColumnLeadToPiiInNonTables;
            _resultValue.doesColumnLeadToPiiInSameRelatedTables = doesColumnLeadToPiiInSameRelatedTables;
            _resultValue.hasCommentPatternMatched = hasCommentPatternMatched;
            _resultValue.hasDataPatternMatched = hasDataPatternMatched;
            _resultValue.hasNamePatternMatched = hasNamePatternMatched;
            _resultValue.isSensitiveTypeFromSameContextFoundInSameOrRelatedTables = isSensitiveTypeFromSameContextFoundInSameOrRelatedTables;
            return _resultValue;
        }
    }
}
