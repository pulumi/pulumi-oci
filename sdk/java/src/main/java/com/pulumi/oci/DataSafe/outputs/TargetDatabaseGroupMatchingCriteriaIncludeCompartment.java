// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetDatabaseGroupMatchingCriteriaIncludeCompartment {
    /**
     * @return (Updatable) The OCID of the compartment for including target databases to the target database group. All target databases in the compartment will be members of the target database group.
     * 
     */
    private String id;
    /**
     * @return (Updatable) This indicates whether the target databases of sub-compartments should also be included in the target database group. By default, this parameter is set to false.
     * 
     */
    private @Nullable Boolean isIncludeSubtree;

    private TargetDatabaseGroupMatchingCriteriaIncludeCompartment() {}
    /**
     * @return (Updatable) The OCID of the compartment for including target databases to the target database group. All target databases in the compartment will be members of the target database group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Updatable) This indicates whether the target databases of sub-compartments should also be included in the target database group. By default, this parameter is set to false.
     * 
     */
    public Optional<Boolean> isIncludeSubtree() {
        return Optional.ofNullable(this.isIncludeSubtree);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetDatabaseGroupMatchingCriteriaIncludeCompartment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable Boolean isIncludeSubtree;
        public Builder() {}
        public Builder(TargetDatabaseGroupMatchingCriteriaIncludeCompartment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.isIncludeSubtree = defaults.isIncludeSubtree;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("TargetDatabaseGroupMatchingCriteriaIncludeCompartment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isIncludeSubtree(@Nullable Boolean isIncludeSubtree) {

            this.isIncludeSubtree = isIncludeSubtree;
            return this;
        }
        public TargetDatabaseGroupMatchingCriteriaIncludeCompartment build() {
            final var _resultValue = new TargetDatabaseGroupMatchingCriteriaIncludeCompartment();
            _resultValue.id = id;
            _resultValue.isIncludeSubtree = isIncludeSubtree;
            return _resultValue;
        }
    }
}
