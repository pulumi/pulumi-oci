// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.TargetDatabasePeerTargetDatabaseDatabaseDetail;
import com.pulumi.oci.DataSafe.outputs.TargetDatabasePeerTargetDatabaseTlsConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetDatabasePeerTargetDatabase {
    /**
     * @return Details of the database for the registration in Data Safe.
     * 
     */
    private @Nullable List<TargetDatabasePeerTargetDatabaseDatabaseDetail> databaseDetails;
    /**
     * @return Unique name of the database associated to the peer target database.
     * 
     */
    private @Nullable String databaseUniqueName;
    /**
     * @return The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     * 
     */
    private @Nullable String dataguardAssociationId;
    /**
     * @return The description of the peer target database in Data Safe.
     * 
     */
    private @Nullable String description;
    /**
     * @return The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The secondary key assigned for the peer target database in Data Safe.
     * 
     */
    private @Nullable Integer key;
    /**
     * @return Details about the current state of the peer target database in Data Safe.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Role of the database associated to the peer target database.
     * 
     */
    private @Nullable String role;
    /**
     * @return The current state of the target database in Data Safe.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the database was registered in Data Safe and created as a target database in Data Safe.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return (Updatable) The details required to establish a TLS enabled connection.
     * 
     */
    private @Nullable List<TargetDatabasePeerTargetDatabaseTlsConfig> tlsConfigs;

    private TargetDatabasePeerTargetDatabase() {}
    /**
     * @return Details of the database for the registration in Data Safe.
     * 
     */
    public List<TargetDatabasePeerTargetDatabaseDatabaseDetail> databaseDetails() {
        return this.databaseDetails == null ? List.of() : this.databaseDetails;
    }
    /**
     * @return Unique name of the database associated to the peer target database.
     * 
     */
    public Optional<String> databaseUniqueName() {
        return Optional.ofNullable(this.databaseUniqueName);
    }
    /**
     * @return The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     * 
     */
    public Optional<String> dataguardAssociationId() {
        return Optional.ofNullable(this.dataguardAssociationId);
    }
    /**
     * @return The description of the peer target database in Data Safe.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The secondary key assigned for the peer target database in Data Safe.
     * 
     */
    public Optional<Integer> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Details about the current state of the peer target database in Data Safe.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Role of the database associated to the peer target database.
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }
    /**
     * @return The current state of the target database in Data Safe.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the database was registered in Data Safe and created as a target database in Data Safe.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return (Updatable) The details required to establish a TLS enabled connection.
     * 
     */
    public List<TargetDatabasePeerTargetDatabaseTlsConfig> tlsConfigs() {
        return this.tlsConfigs == null ? List.of() : this.tlsConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetDatabasePeerTargetDatabase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<TargetDatabasePeerTargetDatabaseDatabaseDetail> databaseDetails;
        private @Nullable String databaseUniqueName;
        private @Nullable String dataguardAssociationId;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Integer key;
        private @Nullable String lifecycleDetails;
        private @Nullable String role;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable List<TargetDatabasePeerTargetDatabaseTlsConfig> tlsConfigs;
        public Builder() {}
        public Builder(TargetDatabasePeerTargetDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseDetails = defaults.databaseDetails;
    	      this.databaseUniqueName = defaults.databaseUniqueName;
    	      this.dataguardAssociationId = defaults.dataguardAssociationId;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.key = defaults.key;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.role = defaults.role;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.tlsConfigs = defaults.tlsConfigs;
        }

        @CustomType.Setter
        public Builder databaseDetails(@Nullable List<TargetDatabasePeerTargetDatabaseDatabaseDetail> databaseDetails) {

            this.databaseDetails = databaseDetails;
            return this;
        }
        public Builder databaseDetails(TargetDatabasePeerTargetDatabaseDatabaseDetail... databaseDetails) {
            return databaseDetails(List.of(databaseDetails));
        }
        @CustomType.Setter
        public Builder databaseUniqueName(@Nullable String databaseUniqueName) {

            this.databaseUniqueName = databaseUniqueName;
            return this;
        }
        @CustomType.Setter
        public Builder dataguardAssociationId(@Nullable String dataguardAssociationId) {

            this.dataguardAssociationId = dataguardAssociationId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable Integer key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {

            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder role(@Nullable String role) {

            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {

            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder tlsConfigs(@Nullable List<TargetDatabasePeerTargetDatabaseTlsConfig> tlsConfigs) {

            this.tlsConfigs = tlsConfigs;
            return this;
        }
        public Builder tlsConfigs(TargetDatabasePeerTargetDatabaseTlsConfig... tlsConfigs) {
            return tlsConfigs(List.of(tlsConfigs));
        }
        public TargetDatabasePeerTargetDatabase build() {
            final var _resultValue = new TargetDatabasePeerTargetDatabase();
            _resultValue.databaseDetails = databaseDetails;
            _resultValue.databaseUniqueName = databaseUniqueName;
            _resultValue.dataguardAssociationId = dataguardAssociationId;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.key = key;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.role = role;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.tlsConfigs = tlsConfigs;
            return _resultValue;
        }
    }
}
