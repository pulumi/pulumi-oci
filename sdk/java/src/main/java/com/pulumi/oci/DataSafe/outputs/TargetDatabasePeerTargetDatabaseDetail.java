// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataSafe.outputs.TargetDatabasePeerTargetDatabaseDetailDatabaseDetails;
import com.pulumi.oci.DataSafe.outputs.TargetDatabasePeerTargetDatabaseDetailTlsConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetDatabasePeerTargetDatabaseDetail {
    /**
     * @return Details of the database for the registration in Data Safe.
     * 
     */
    private TargetDatabasePeerTargetDatabaseDetailDatabaseDetails databaseDetails;
    /**
     * @return The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     * 
     */
    private @Nullable String dataguardAssociationId;
    /**
     * @return The description of the peer target database in Data Safe.
     * 
     */
    private @Nullable String description;
    /**
     * @return The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (Updatable) The details required to establish a TLS enabled connection.
     * 
     */
    private @Nullable TargetDatabasePeerTargetDatabaseDetailTlsConfig tlsConfig;

    private TargetDatabasePeerTargetDatabaseDetail() {}
    /**
     * @return Details of the database for the registration in Data Safe.
     * 
     */
    public TargetDatabasePeerTargetDatabaseDetailDatabaseDetails databaseDetails() {
        return this.databaseDetails;
    }
    /**
     * @return The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     * 
     */
    public Optional<String> dataguardAssociationId() {
        return Optional.ofNullable(this.dataguardAssociationId);
    }
    /**
     * @return The description of the peer target database in Data Safe.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (Updatable) The details required to establish a TLS enabled connection.
     * 
     */
    public Optional<TargetDatabasePeerTargetDatabaseDetailTlsConfig> tlsConfig() {
        return Optional.ofNullable(this.tlsConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetDatabasePeerTargetDatabaseDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private TargetDatabasePeerTargetDatabaseDetailDatabaseDetails databaseDetails;
        private @Nullable String dataguardAssociationId;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable TargetDatabasePeerTargetDatabaseDetailTlsConfig tlsConfig;
        public Builder() {}
        public Builder(TargetDatabasePeerTargetDatabaseDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseDetails = defaults.databaseDetails;
    	      this.dataguardAssociationId = defaults.dataguardAssociationId;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.tlsConfig = defaults.tlsConfig;
        }

        @CustomType.Setter
        public Builder databaseDetails(TargetDatabasePeerTargetDatabaseDetailDatabaseDetails databaseDetails) {
            if (databaseDetails == null) {
              throw new MissingRequiredPropertyException("TargetDatabasePeerTargetDatabaseDetail", "databaseDetails");
            }
            this.databaseDetails = databaseDetails;
            return this;
        }
        @CustomType.Setter
        public Builder dataguardAssociationId(@Nullable String dataguardAssociationId) {

            this.dataguardAssociationId = dataguardAssociationId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder tlsConfig(@Nullable TargetDatabasePeerTargetDatabaseDetailTlsConfig tlsConfig) {

            this.tlsConfig = tlsConfig;
            return this;
        }
        public TargetDatabasePeerTargetDatabaseDetail build() {
            final var _resultValue = new TargetDatabasePeerTargetDatabaseDetail();
            _resultValue.databaseDetails = databaseDetails;
            _resultValue.dataguardAssociationId = dataguardAssociationId;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.tlsConfig = tlsConfig;
            return _resultValue;
        }
    }
}
