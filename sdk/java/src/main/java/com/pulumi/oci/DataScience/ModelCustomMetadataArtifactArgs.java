// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelCustomMetadataArtifactArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelCustomMetadataArtifactArgs Empty = new ModelCustomMetadataArtifactArgs();

    /**
     * (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
     * 
     */
    @Import(name="contentDisposition")
    private @Nullable Output<String> contentDisposition;

    /**
     * @return (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
     * 
     */
    public Optional<Output<String>> contentDisposition() {
        return Optional.ofNullable(this.contentDisposition);
    }

    /**
     * (Updatable) The content length of the body.
     * 
     */
    @Import(name="contentLength", required=true)
    private Output<String> contentLength;

    /**
     * @return (Updatable) The content length of the body.
     * 
     */
    public Output<String> contentLength() {
        return this.contentLength;
    }

    /**
     * The name of the model metadatum in the metadata.
     * 
     */
    @Import(name="metadatumKeyName", required=true)
    private Output<String> metadatumKeyName;

    /**
     * @return The name of the model metadatum in the metadata.
     * 
     */
    public Output<String> metadatumKeyName() {
        return this.metadatumKeyName;
    }

    /**
     * (Updatable) The model custom metadata artifact to upload.
     * 
     */
    @Import(name="modelCustomMetadatumArtifact", required=true)
    private Output<String> modelCustomMetadatumArtifact;

    /**
     * @return (Updatable) The model custom metadata artifact to upload.
     * 
     */
    public Output<String> modelCustomMetadatumArtifact() {
        return this.modelCustomMetadatumArtifact;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="modelId", required=true)
    private Output<String> modelId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> modelId() {
        return this.modelId;
    }

    private ModelCustomMetadataArtifactArgs() {}

    private ModelCustomMetadataArtifactArgs(ModelCustomMetadataArtifactArgs $) {
        this.contentDisposition = $.contentDisposition;
        this.contentLength = $.contentLength;
        this.metadatumKeyName = $.metadatumKeyName;
        this.modelCustomMetadatumArtifact = $.modelCustomMetadatumArtifact;
        this.modelId = $.modelId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelCustomMetadataArtifactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelCustomMetadataArtifactArgs $;

        public Builder() {
            $ = new ModelCustomMetadataArtifactArgs();
        }

        public Builder(ModelCustomMetadataArtifactArgs defaults) {
            $ = new ModelCustomMetadataArtifactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentDisposition (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder contentDisposition(@Nullable Output<String> contentDisposition) {
            $.contentDisposition = contentDisposition;
            return this;
        }

        /**
         * @param contentDisposition (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder contentDisposition(String contentDisposition) {
            return contentDisposition(Output.of(contentDisposition));
        }

        /**
         * @param contentLength (Updatable) The content length of the body.
         * 
         * @return builder
         * 
         */
        public Builder contentLength(Output<String> contentLength) {
            $.contentLength = contentLength;
            return this;
        }

        /**
         * @param contentLength (Updatable) The content length of the body.
         * 
         * @return builder
         * 
         */
        public Builder contentLength(String contentLength) {
            return contentLength(Output.of(contentLength));
        }

        /**
         * @param metadatumKeyName The name of the model metadatum in the metadata.
         * 
         * @return builder
         * 
         */
        public Builder metadatumKeyName(Output<String> metadatumKeyName) {
            $.metadatumKeyName = metadatumKeyName;
            return this;
        }

        /**
         * @param metadatumKeyName The name of the model metadatum in the metadata.
         * 
         * @return builder
         * 
         */
        public Builder metadatumKeyName(String metadatumKeyName) {
            return metadatumKeyName(Output.of(metadatumKeyName));
        }

        /**
         * @param modelCustomMetadatumArtifact (Updatable) The model custom metadata artifact to upload.
         * 
         * @return builder
         * 
         */
        public Builder modelCustomMetadatumArtifact(Output<String> modelCustomMetadatumArtifact) {
            $.modelCustomMetadatumArtifact = modelCustomMetadatumArtifact;
            return this;
        }

        /**
         * @param modelCustomMetadatumArtifact (Updatable) The model custom metadata artifact to upload.
         * 
         * @return builder
         * 
         */
        public Builder modelCustomMetadatumArtifact(String modelCustomMetadatumArtifact) {
            return modelCustomMetadatumArtifact(Output.of(modelCustomMetadatumArtifact));
        }

        /**
         * @param modelId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder modelId(Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        /**
         * @param modelId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        public ModelCustomMetadataArtifactArgs build() {
            if ($.contentLength == null) {
                throw new MissingRequiredPropertyException("ModelCustomMetadataArtifactArgs", "contentLength");
            }
            if ($.metadatumKeyName == null) {
                throw new MissingRequiredPropertyException("ModelCustomMetadataArtifactArgs", "metadatumKeyName");
            }
            if ($.modelCustomMetadatumArtifact == null) {
                throw new MissingRequiredPropertyException("ModelCustomMetadataArtifactArgs", "modelCustomMetadatumArtifact");
            }
            if ($.modelId == null) {
                throw new MissingRequiredPropertyException("ModelCustomMetadataArtifactArgs", "modelId");
            }
            return $;
        }
    }

}
