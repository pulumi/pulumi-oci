// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.inputs.JobJobNodeConfigurationDetailsJobNetworkConfigurationArgs;
import com.pulumi.oci.DataScience.inputs.JobJobNodeConfigurationDetailsJobNodeGroupConfigurationDetailsListArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobJobNodeConfigurationDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobJobNodeConfigurationDetailsArgs Empty = new JobJobNodeConfigurationDetailsArgs();

    /**
     * The job network configuration details
     * 
     */
    @Import(name="jobNetworkConfiguration")
    private @Nullable Output<JobJobNodeConfigurationDetailsJobNetworkConfigurationArgs> jobNetworkConfiguration;

    /**
     * @return The job network configuration details
     * 
     */
    public Optional<Output<JobJobNodeConfigurationDetailsJobNetworkConfigurationArgs>> jobNetworkConfiguration() {
        return Optional.ofNullable(this.jobNetworkConfiguration);
    }

    /**
     * List of JobNodeGroupConfigurationDetails
     * 
     */
    @Import(name="jobNodeGroupConfigurationDetailsLists")
    private @Nullable Output<List<JobJobNodeConfigurationDetailsJobNodeGroupConfigurationDetailsListArgs>> jobNodeGroupConfigurationDetailsLists;

    /**
     * @return List of JobNodeGroupConfigurationDetails
     * 
     */
    public Optional<Output<List<JobJobNodeConfigurationDetailsJobNodeGroupConfigurationDetailsListArgs>>> jobNodeGroupConfigurationDetailsLists() {
        return Optional.ofNullable(this.jobNodeGroupConfigurationDetailsLists);
    }

    /**
     * The node type used for job run.
     * 
     */
    @Import(name="jobNodeType", required=true)
    private Output<String> jobNodeType;

    /**
     * @return The node type used for job run.
     * 
     */
    public Output<String> jobNodeType() {
        return this.jobNodeType;
    }

    /**
     * A time bound for the execution of the job run. Timer starts when the job run is in progress.
     * 
     */
    @Import(name="maximumRuntimeInMinutes")
    private @Nullable Output<String> maximumRuntimeInMinutes;

    /**
     * @return A time bound for the execution of the job run. Timer starts when the job run is in progress.
     * 
     */
    public Optional<Output<String>> maximumRuntimeInMinutes() {
        return Optional.ofNullable(this.maximumRuntimeInMinutes);
    }

    /**
     * The execution order of node groups
     * 
     */
    @Import(name="startupOrder")
    private @Nullable Output<String> startupOrder;

    /**
     * @return The execution order of node groups
     * 
     */
    public Optional<Output<String>> startupOrder() {
        return Optional.ofNullable(this.startupOrder);
    }

    private JobJobNodeConfigurationDetailsArgs() {}

    private JobJobNodeConfigurationDetailsArgs(JobJobNodeConfigurationDetailsArgs $) {
        this.jobNetworkConfiguration = $.jobNetworkConfiguration;
        this.jobNodeGroupConfigurationDetailsLists = $.jobNodeGroupConfigurationDetailsLists;
        this.jobNodeType = $.jobNodeType;
        this.maximumRuntimeInMinutes = $.maximumRuntimeInMinutes;
        this.startupOrder = $.startupOrder;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobJobNodeConfigurationDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobJobNodeConfigurationDetailsArgs $;

        public Builder() {
            $ = new JobJobNodeConfigurationDetailsArgs();
        }

        public Builder(JobJobNodeConfigurationDetailsArgs defaults) {
            $ = new JobJobNodeConfigurationDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobNetworkConfiguration The job network configuration details
         * 
         * @return builder
         * 
         */
        public Builder jobNetworkConfiguration(@Nullable Output<JobJobNodeConfigurationDetailsJobNetworkConfigurationArgs> jobNetworkConfiguration) {
            $.jobNetworkConfiguration = jobNetworkConfiguration;
            return this;
        }

        /**
         * @param jobNetworkConfiguration The job network configuration details
         * 
         * @return builder
         * 
         */
        public Builder jobNetworkConfiguration(JobJobNodeConfigurationDetailsJobNetworkConfigurationArgs jobNetworkConfiguration) {
            return jobNetworkConfiguration(Output.of(jobNetworkConfiguration));
        }

        /**
         * @param jobNodeGroupConfigurationDetailsLists List of JobNodeGroupConfigurationDetails
         * 
         * @return builder
         * 
         */
        public Builder jobNodeGroupConfigurationDetailsLists(@Nullable Output<List<JobJobNodeConfigurationDetailsJobNodeGroupConfigurationDetailsListArgs>> jobNodeGroupConfigurationDetailsLists) {
            $.jobNodeGroupConfigurationDetailsLists = jobNodeGroupConfigurationDetailsLists;
            return this;
        }

        /**
         * @param jobNodeGroupConfigurationDetailsLists List of JobNodeGroupConfigurationDetails
         * 
         * @return builder
         * 
         */
        public Builder jobNodeGroupConfigurationDetailsLists(List<JobJobNodeConfigurationDetailsJobNodeGroupConfigurationDetailsListArgs> jobNodeGroupConfigurationDetailsLists) {
            return jobNodeGroupConfigurationDetailsLists(Output.of(jobNodeGroupConfigurationDetailsLists));
        }

        /**
         * @param jobNodeGroupConfigurationDetailsLists List of JobNodeGroupConfigurationDetails
         * 
         * @return builder
         * 
         */
        public Builder jobNodeGroupConfigurationDetailsLists(JobJobNodeConfigurationDetailsJobNodeGroupConfigurationDetailsListArgs... jobNodeGroupConfigurationDetailsLists) {
            return jobNodeGroupConfigurationDetailsLists(List.of(jobNodeGroupConfigurationDetailsLists));
        }

        /**
         * @param jobNodeType The node type used for job run.
         * 
         * @return builder
         * 
         */
        public Builder jobNodeType(Output<String> jobNodeType) {
            $.jobNodeType = jobNodeType;
            return this;
        }

        /**
         * @param jobNodeType The node type used for job run.
         * 
         * @return builder
         * 
         */
        public Builder jobNodeType(String jobNodeType) {
            return jobNodeType(Output.of(jobNodeType));
        }

        /**
         * @param maximumRuntimeInMinutes A time bound for the execution of the job run. Timer starts when the job run is in progress.
         * 
         * @return builder
         * 
         */
        public Builder maximumRuntimeInMinutes(@Nullable Output<String> maximumRuntimeInMinutes) {
            $.maximumRuntimeInMinutes = maximumRuntimeInMinutes;
            return this;
        }

        /**
         * @param maximumRuntimeInMinutes A time bound for the execution of the job run. Timer starts when the job run is in progress.
         * 
         * @return builder
         * 
         */
        public Builder maximumRuntimeInMinutes(String maximumRuntimeInMinutes) {
            return maximumRuntimeInMinutes(Output.of(maximumRuntimeInMinutes));
        }

        /**
         * @param startupOrder The execution order of node groups
         * 
         * @return builder
         * 
         */
        public Builder startupOrder(@Nullable Output<String> startupOrder) {
            $.startupOrder = startupOrder;
            return this;
        }

        /**
         * @param startupOrder The execution order of node groups
         * 
         * @return builder
         * 
         */
        public Builder startupOrder(String startupOrder) {
            return startupOrder(Output.of(startupOrder));
        }

        public JobJobNodeConfigurationDetailsArgs build() {
            if ($.jobNodeType == null) {
                throw new MissingRequiredPropertyException("JobJobNodeConfigurationDetailsArgs", "jobNodeType");
            }
            return $;
        }
    }

}
