// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.inputs.JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobConfigurationDetailsArgs;
import com.pulumi.oci.DataScience.inputs.JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetailsArgs;
import com.pulumi.oci.DataScience.inputs.JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetailsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs Empty = new JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs();

    /**
     * The job configuration details
     * 
     */
    @Import(name="jobConfigurationDetails")
    private @Nullable Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobConfigurationDetailsArgs> jobConfigurationDetails;

    /**
     * @return The job configuration details
     * 
     */
    public Optional<Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobConfigurationDetailsArgs>> jobConfigurationDetails() {
        return Optional.ofNullable(this.jobConfigurationDetails);
    }

    /**
     * Environment configuration to capture job runtime dependencies.
     * 
     */
    @Import(name="jobEnvironmentConfigurationDetails")
    private @Nullable Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetailsArgs> jobEnvironmentConfigurationDetails;

    /**
     * @return Environment configuration to capture job runtime dependencies.
     * 
     */
    public Optional<Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetailsArgs>> jobEnvironmentConfigurationDetails() {
        return Optional.ofNullable(this.jobEnvironmentConfigurationDetails);
    }

    /**
     * The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    @Import(name="jobInfrastructureConfigurationDetails")
    private @Nullable Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetailsArgs> jobInfrastructureConfigurationDetails;

    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    public Optional<Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetailsArgs>> jobInfrastructureConfigurationDetails() {
        return Optional.ofNullable(this.jobInfrastructureConfigurationDetails);
    }

    /**
     * The minimum threshold of successful replicas for node group to be successful. All replicas need to succeed if this is not specified.
     * 
     */
    @Import(name="minimumSuccessReplicas")
    private @Nullable Output<Integer> minimumSuccessReplicas;

    /**
     * @return The minimum threshold of successful replicas for node group to be successful. All replicas need to succeed if this is not specified.
     * 
     */
    public Optional<Output<Integer>> minimumSuccessReplicas() {
        return Optional.ofNullable(this.minimumSuccessReplicas);
    }

    /**
     * node group name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return node group name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The number of nodes.
     * 
     */
    @Import(name="replicas")
    private @Nullable Output<Integer> replicas;

    /**
     * @return The number of nodes.
     * 
     */
    public Optional<Output<Integer>> replicas() {
        return Optional.ofNullable(this.replicas);
    }

    private JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs() {}

    private JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs(JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs $) {
        this.jobConfigurationDetails = $.jobConfigurationDetails;
        this.jobEnvironmentConfigurationDetails = $.jobEnvironmentConfigurationDetails;
        this.jobInfrastructureConfigurationDetails = $.jobInfrastructureConfigurationDetails;
        this.minimumSuccessReplicas = $.minimumSuccessReplicas;
        this.name = $.name;
        this.replicas = $.replicas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs $;

        public Builder() {
            $ = new JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs();
        }

        public Builder(JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs defaults) {
            $ = new JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobConfigurationDetails The job configuration details
         * 
         * @return builder
         * 
         */
        public Builder jobConfigurationDetails(@Nullable Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobConfigurationDetailsArgs> jobConfigurationDetails) {
            $.jobConfigurationDetails = jobConfigurationDetails;
            return this;
        }

        /**
         * @param jobConfigurationDetails The job configuration details
         * 
         * @return builder
         * 
         */
        public Builder jobConfigurationDetails(JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobConfigurationDetailsArgs jobConfigurationDetails) {
            return jobConfigurationDetails(Output.of(jobConfigurationDetails));
        }

        /**
         * @param jobEnvironmentConfigurationDetails Environment configuration to capture job runtime dependencies.
         * 
         * @return builder
         * 
         */
        public Builder jobEnvironmentConfigurationDetails(@Nullable Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetailsArgs> jobEnvironmentConfigurationDetails) {
            $.jobEnvironmentConfigurationDetails = jobEnvironmentConfigurationDetails;
            return this;
        }

        /**
         * @param jobEnvironmentConfigurationDetails Environment configuration to capture job runtime dependencies.
         * 
         * @return builder
         * 
         */
        public Builder jobEnvironmentConfigurationDetails(JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetailsArgs jobEnvironmentConfigurationDetails) {
            return jobEnvironmentConfigurationDetails(Output.of(jobEnvironmentConfigurationDetails));
        }

        /**
         * @param jobInfrastructureConfigurationDetails The job infrastructure configuration details (shape, block storage, etc.)
         * 
         * @return builder
         * 
         */
        public Builder jobInfrastructureConfigurationDetails(@Nullable Output<JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetailsArgs> jobInfrastructureConfigurationDetails) {
            $.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            return this;
        }

        /**
         * @param jobInfrastructureConfigurationDetails The job infrastructure configuration details (shape, block storage, etc.)
         * 
         * @return builder
         * 
         */
        public Builder jobInfrastructureConfigurationDetails(JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetailsArgs jobInfrastructureConfigurationDetails) {
            return jobInfrastructureConfigurationDetails(Output.of(jobInfrastructureConfigurationDetails));
        }

        /**
         * @param minimumSuccessReplicas The minimum threshold of successful replicas for node group to be successful. All replicas need to succeed if this is not specified.
         * 
         * @return builder
         * 
         */
        public Builder minimumSuccessReplicas(@Nullable Output<Integer> minimumSuccessReplicas) {
            $.minimumSuccessReplicas = minimumSuccessReplicas;
            return this;
        }

        /**
         * @param minimumSuccessReplicas The minimum threshold of successful replicas for node group to be successful. All replicas need to succeed if this is not specified.
         * 
         * @return builder
         * 
         */
        public Builder minimumSuccessReplicas(Integer minimumSuccessReplicas) {
            return minimumSuccessReplicas(Output.of(minimumSuccessReplicas));
        }

        /**
         * @param name node group name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name node group name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param replicas The number of nodes.
         * 
         * @return builder
         * 
         */
        public Builder replicas(@Nullable Output<Integer> replicas) {
            $.replicas = replicas;
            return this;
        }

        /**
         * @param replicas The number of nodes.
         * 
         * @return builder
         * 
         */
        public Builder replicas(Integer replicas) {
            return replicas(Output.of(replicas));
        }

        public JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("JobRunJobNodeConfigurationOverrideDetailsJobNodeGroupConfigurationDetailsListArgs", "name");
            }
            return $;
        }
    }

}
