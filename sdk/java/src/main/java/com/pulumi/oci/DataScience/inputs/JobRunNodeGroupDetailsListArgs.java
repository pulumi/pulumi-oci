// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobRunNodeGroupDetailsListArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobRunNodeGroupDetailsListArgs Empty = new JobRunNodeGroupDetailsListArgs();

    /**
     * The state details of the node group.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return The state details of the node group.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * node group name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return node group name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The state of the job run.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the job run.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private JobRunNodeGroupDetailsListArgs() {}

    private JobRunNodeGroupDetailsListArgs(JobRunNodeGroupDetailsListArgs $) {
        this.lifecycleDetails = $.lifecycleDetails;
        this.name = $.name;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobRunNodeGroupDetailsListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobRunNodeGroupDetailsListArgs $;

        public Builder() {
            $ = new JobRunNodeGroupDetailsListArgs();
        }

        public Builder(JobRunNodeGroupDetailsListArgs defaults) {
            $ = new JobRunNodeGroupDetailsListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lifecycleDetails The state details of the node group.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails The state details of the node group.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param name node group name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name node group name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param state The state of the job run.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the job run.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public JobRunNodeGroupDetailsListArgs build() {
            return $;
        }
    }

}
