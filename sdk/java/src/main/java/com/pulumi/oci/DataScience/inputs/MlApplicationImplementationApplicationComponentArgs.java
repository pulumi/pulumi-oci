// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MlApplicationImplementationApplicationComponentArgs extends com.pulumi.resources.ResourceArgs {

    public static final MlApplicationImplementationApplicationComponentArgs Empty = new MlApplicationImplementationApplicationComponentArgs();

    /**
     * OCID of Data Flow Application
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return OCID of Data Flow Application
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * Name of application component
     * 
     */
    @Import(name="componentName")
    private @Nullable Output<String> componentName;

    /**
     * @return Name of application component
     * 
     */
    public Optional<Output<String>> componentName() {
        return Optional.ofNullable(this.componentName);
    }

    /**
     * The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * OCID of Data Science Job
     * 
     */
    @Import(name="jobId")
    private @Nullable Output<String> jobId;

    /**
     * @return OCID of Data Science Job
     * 
     */
    public Optional<Output<String>> jobId() {
        return Optional.ofNullable(this.jobId);
    }

    /**
     * OCID of Data Science Model
     * 
     */
    @Import(name="modelId")
    private @Nullable Output<String> modelId;

    /**
     * @return OCID of Data Science Model
     * 
     */
    public Optional<Output<String>> modelId() {
        return Optional.ofNullable(this.modelId);
    }

    /**
     * ML Application Implementation name which is unique for given ML Application.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return ML Application Implementation name which is unique for given ML Application.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * OCID of Data Science Pipeline
     * 
     */
    @Import(name="pipelineId")
    private @Nullable Output<String> pipelineId;

    /**
     * @return OCID of Data Science Pipeline
     * 
     */
    public Optional<Output<String>> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }

    /**
     * Type of the resource
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return Type of the resource
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * type of the argument
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return type of the argument
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private MlApplicationImplementationApplicationComponentArgs() {}

    private MlApplicationImplementationApplicationComponentArgs(MlApplicationImplementationApplicationComponentArgs $) {
        this.applicationId = $.applicationId;
        this.componentName = $.componentName;
        this.id = $.id;
        this.jobId = $.jobId;
        this.modelId = $.modelId;
        this.name = $.name;
        this.pipelineId = $.pipelineId;
        this.resourceType = $.resourceType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MlApplicationImplementationApplicationComponentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MlApplicationImplementationApplicationComponentArgs $;

        public Builder() {
            $ = new MlApplicationImplementationApplicationComponentArgs();
        }

        public Builder(MlApplicationImplementationApplicationComponentArgs defaults) {
            $ = new MlApplicationImplementationApplicationComponentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId OCID of Data Flow Application
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId OCID of Data Flow Application
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param componentName Name of application component
         * 
         * @return builder
         * 
         */
        public Builder componentName(@Nullable Output<String> componentName) {
            $.componentName = componentName;
            return this;
        }

        /**
         * @param componentName Name of application component
         * 
         * @return builder
         * 
         */
        public Builder componentName(String componentName) {
            return componentName(Output.of(componentName));
        }

        /**
         * @param id The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param jobId OCID of Data Science Job
         * 
         * @return builder
         * 
         */
        public Builder jobId(@Nullable Output<String> jobId) {
            $.jobId = jobId;
            return this;
        }

        /**
         * @param jobId OCID of Data Science Job
         * 
         * @return builder
         * 
         */
        public Builder jobId(String jobId) {
            return jobId(Output.of(jobId));
        }

        /**
         * @param modelId OCID of Data Science Model
         * 
         * @return builder
         * 
         */
        public Builder modelId(@Nullable Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        /**
         * @param modelId OCID of Data Science Model
         * 
         * @return builder
         * 
         */
        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        /**
         * @param name ML Application Implementation name which is unique for given ML Application.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name ML Application Implementation name which is unique for given ML Application.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pipelineId OCID of Data Science Pipeline
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(@Nullable Output<String> pipelineId) {
            $.pipelineId = pipelineId;
            return this;
        }

        /**
         * @param pipelineId OCID of Data Science Pipeline
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(String pipelineId) {
            return pipelineId(Output.of(pipelineId));
        }

        /**
         * @param resourceType Type of the resource
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Type of the resource
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param type type of the argument
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type type of the argument
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public MlApplicationImplementationApplicationComponentArgs build() {
            return $;
        }
    }

}
