// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs extends com.pulumi.resources.ResourceArgs {

    public static final MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs Empty = new MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs();

    /**
     * short description of the argument
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return short description of the argument
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * argument is mandatory or not
     * 
     */
    @Import(name="isMandatory")
    private @Nullable Output<Boolean> isMandatory;

    /**
     * @return argument is mandatory or not
     * 
     */
    public Optional<Output<Boolean>> isMandatory() {
        return Optional.ofNullable(this.isMandatory);
    }

    /**
     * ML Application Implementation name which is unique for given ML Application.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return ML Application Implementation name which is unique for given ML Application.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * type of the argument
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return type of the argument
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Argument value
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Argument value
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs() {}

    private MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs(MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs $) {
        this.description = $.description;
        this.isMandatory = $.isMandatory;
        this.name = $.name;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs $;

        public Builder() {
            $ = new MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs();
        }

        public Builder(MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs defaults) {
            $ = new MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description short description of the argument
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description short description of the argument
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param isMandatory argument is mandatory or not
         * 
         * @return builder
         * 
         */
        public Builder isMandatory(@Nullable Output<Boolean> isMandatory) {
            $.isMandatory = isMandatory;
            return this;
        }

        /**
         * @param isMandatory argument is mandatory or not
         * 
         * @return builder
         * 
         */
        public Builder isMandatory(Boolean isMandatory) {
            return isMandatory(Output.of(isMandatory));
        }

        /**
         * @param name ML Application Implementation name which is unique for given ML Application.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name ML Application Implementation name which is unique for given ML Application.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type type of the argument
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type type of the argument
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value Argument value
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Argument value
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public MlApplicationImplementationMlApplicationPackageArgumentArgumentArgs build() {
            return $;
        }
    }

}
