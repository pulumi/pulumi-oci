// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelArtifactExportState extends com.pulumi.resources.ResourceArgs {

    public static final ModelArtifactExportState Empty = new ModelArtifactExportState();

    @Import(name="artifactSourceType")
    private @Nullable Output<String> artifactSourceType;

    public Optional<Output<String>> artifactSourceType() {
        return Optional.ofNullable(this.artifactSourceType);
    }

    @Import(name="modelId")
    private @Nullable Output<String> modelId;

    public Optional<Output<String>> modelId() {
        return Optional.ofNullable(this.modelId);
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="sourceBucket")
    private @Nullable Output<String> sourceBucket;

    public Optional<Output<String>> sourceBucket() {
        return Optional.ofNullable(this.sourceBucket);
    }

    @Import(name="sourceObjectName")
    private @Nullable Output<String> sourceObjectName;

    public Optional<Output<String>> sourceObjectName() {
        return Optional.ofNullable(this.sourceObjectName);
    }

    @Import(name="sourceRegion")
    private @Nullable Output<String> sourceRegion;

    public Optional<Output<String>> sourceRegion() {
        return Optional.ofNullable(this.sourceRegion);
    }

    private ModelArtifactExportState() {}

    private ModelArtifactExportState(ModelArtifactExportState $) {
        this.artifactSourceType = $.artifactSourceType;
        this.modelId = $.modelId;
        this.namespace = $.namespace;
        this.sourceBucket = $.sourceBucket;
        this.sourceObjectName = $.sourceObjectName;
        this.sourceRegion = $.sourceRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelArtifactExportState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelArtifactExportState $;

        public Builder() {
            $ = new ModelArtifactExportState();
        }

        public Builder(ModelArtifactExportState defaults) {
            $ = new ModelArtifactExportState(Objects.requireNonNull(defaults));
        }

        public Builder artifactSourceType(@Nullable Output<String> artifactSourceType) {
            $.artifactSourceType = artifactSourceType;
            return this;
        }

        public Builder artifactSourceType(String artifactSourceType) {
            return artifactSourceType(Output.of(artifactSourceType));
        }

        public Builder modelId(@Nullable Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder sourceBucket(@Nullable Output<String> sourceBucket) {
            $.sourceBucket = sourceBucket;
            return this;
        }

        public Builder sourceBucket(String sourceBucket) {
            return sourceBucket(Output.of(sourceBucket));
        }

        public Builder sourceObjectName(@Nullable Output<String> sourceObjectName) {
            $.sourceObjectName = sourceObjectName;
            return this;
        }

        public Builder sourceObjectName(String sourceObjectName) {
            return sourceObjectName(Output.of(sourceObjectName));
        }

        public Builder sourceRegion(@Nullable Output<String> sourceRegion) {
            $.sourceRegion = sourceRegion;
            return this;
        }

        public Builder sourceRegion(String sourceRegion) {
            return sourceRegion(Output.of(sourceRegion));
        }

        public ModelArtifactExportState build() {
            return $;
        }
    }

}
