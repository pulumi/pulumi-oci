// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelArtifactImportState extends com.pulumi.resources.ResourceArgs {

    public static final ModelArtifactImportState Empty = new ModelArtifactImportState();

    @Import(name="artifactSourceType")
    private @Nullable Output<String> artifactSourceType;

    public Optional<Output<String>> artifactSourceType() {
        return Optional.ofNullable(this.artifactSourceType);
    }

    @Import(name="destinationBucket")
    private @Nullable Output<String> destinationBucket;

    public Optional<Output<String>> destinationBucket() {
        return Optional.ofNullable(this.destinationBucket);
    }

    @Import(name="destinationObjectName")
    private @Nullable Output<String> destinationObjectName;

    public Optional<Output<String>> destinationObjectName() {
        return Optional.ofNullable(this.destinationObjectName);
    }

    @Import(name="destinationRegion")
    private @Nullable Output<String> destinationRegion;

    public Optional<Output<String>> destinationRegion() {
        return Optional.ofNullable(this.destinationRegion);
    }

    @Import(name="modelId")
    private @Nullable Output<String> modelId;

    public Optional<Output<String>> modelId() {
        return Optional.ofNullable(this.modelId);
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private ModelArtifactImportState() {}

    private ModelArtifactImportState(ModelArtifactImportState $) {
        this.artifactSourceType = $.artifactSourceType;
        this.destinationBucket = $.destinationBucket;
        this.destinationObjectName = $.destinationObjectName;
        this.destinationRegion = $.destinationRegion;
        this.modelId = $.modelId;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelArtifactImportState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelArtifactImportState $;

        public Builder() {
            $ = new ModelArtifactImportState();
        }

        public Builder(ModelArtifactImportState defaults) {
            $ = new ModelArtifactImportState(Objects.requireNonNull(defaults));
        }

        public Builder artifactSourceType(@Nullable Output<String> artifactSourceType) {
            $.artifactSourceType = artifactSourceType;
            return this;
        }

        public Builder artifactSourceType(String artifactSourceType) {
            return artifactSourceType(Output.of(artifactSourceType));
        }

        public Builder destinationBucket(@Nullable Output<String> destinationBucket) {
            $.destinationBucket = destinationBucket;
            return this;
        }

        public Builder destinationBucket(String destinationBucket) {
            return destinationBucket(Output.of(destinationBucket));
        }

        public Builder destinationObjectName(@Nullable Output<String> destinationObjectName) {
            $.destinationObjectName = destinationObjectName;
            return this;
        }

        public Builder destinationObjectName(String destinationObjectName) {
            return destinationObjectName(Output.of(destinationObjectName));
        }

        public Builder destinationRegion(@Nullable Output<String> destinationRegion) {
            $.destinationRegion = destinationRegion;
            return this;
        }

        public Builder destinationRegion(String destinationRegion) {
            return destinationRegion(Output.of(destinationRegion));
        }

        public Builder modelId(@Nullable Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public ModelArtifactImportState build() {
            return $;
        }
    }

}
