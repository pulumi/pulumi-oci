// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelBackupSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelBackupSettingArgs Empty = new ModelBackupSettingArgs();

    /**
     * (Updatable) Oracle Cloud Infrastructure backup region for the model.
     * 
     */
    @Import(name="backupRegion", required=true)
    private Output<String> backupRegion;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure backup region for the model.
     * 
     */
    public Output<String> backupRegion() {
        return this.backupRegion;
    }

    /**
     * (Updatable) Customer notification on backup success/failure events.
     * 
     */
    @Import(name="customerNotificationType")
    private @Nullable Output<String> customerNotificationType;

    /**
     * @return (Updatable) Customer notification on backup success/failure events.
     * 
     */
    public Optional<Output<String>> customerNotificationType() {
        return Optional.ofNullable(this.customerNotificationType);
    }

    /**
     * (Updatable) Boolean flag representing whether backup needs to be enabled/disabled for the model.
     * 
     */
    @Import(name="isBackupEnabled", required=true)
    private Output<Boolean> isBackupEnabled;

    /**
     * @return (Updatable) Boolean flag representing whether backup needs to be enabled/disabled for the model.
     * 
     */
    public Output<Boolean> isBackupEnabled() {
        return this.isBackupEnabled;
    }

    private ModelBackupSettingArgs() {}

    private ModelBackupSettingArgs(ModelBackupSettingArgs $) {
        this.backupRegion = $.backupRegion;
        this.customerNotificationType = $.customerNotificationType;
        this.isBackupEnabled = $.isBackupEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelBackupSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelBackupSettingArgs $;

        public Builder() {
            $ = new ModelBackupSettingArgs();
        }

        public Builder(ModelBackupSettingArgs defaults) {
            $ = new ModelBackupSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRegion (Updatable) Oracle Cloud Infrastructure backup region for the model.
         * 
         * @return builder
         * 
         */
        public Builder backupRegion(Output<String> backupRegion) {
            $.backupRegion = backupRegion;
            return this;
        }

        /**
         * @param backupRegion (Updatable) Oracle Cloud Infrastructure backup region for the model.
         * 
         * @return builder
         * 
         */
        public Builder backupRegion(String backupRegion) {
            return backupRegion(Output.of(backupRegion));
        }

        /**
         * @param customerNotificationType (Updatable) Customer notification on backup success/failure events.
         * 
         * @return builder
         * 
         */
        public Builder customerNotificationType(@Nullable Output<String> customerNotificationType) {
            $.customerNotificationType = customerNotificationType;
            return this;
        }

        /**
         * @param customerNotificationType (Updatable) Customer notification on backup success/failure events.
         * 
         * @return builder
         * 
         */
        public Builder customerNotificationType(String customerNotificationType) {
            return customerNotificationType(Output.of(customerNotificationType));
        }

        /**
         * @param isBackupEnabled (Updatable) Boolean flag representing whether backup needs to be enabled/disabled for the model.
         * 
         * @return builder
         * 
         */
        public Builder isBackupEnabled(Output<Boolean> isBackupEnabled) {
            $.isBackupEnabled = isBackupEnabled;
            return this;
        }

        /**
         * @param isBackupEnabled (Updatable) Boolean flag representing whether backup needs to be enabled/disabled for the model.
         * 
         * @return builder
         * 
         */
        public Builder isBackupEnabled(Boolean isBackupEnabled) {
            return isBackupEnabled(Output.of(isBackupEnabled));
        }

        public ModelBackupSettingArgs build() {
            if ($.backupRegion == null) {
                throw new MissingRequiredPropertyException("ModelBackupSettingArgs", "backupRegion");
            }
            if ($.isBackupEnabled == null) {
                throw new MissingRequiredPropertyException("ModelBackupSettingArgs", "isBackupEnabled");
            }
            return $;
        }
    }

}
