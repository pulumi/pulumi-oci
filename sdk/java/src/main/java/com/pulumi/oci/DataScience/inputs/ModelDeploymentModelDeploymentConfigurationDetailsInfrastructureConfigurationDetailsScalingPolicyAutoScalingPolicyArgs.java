// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.inputs.ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyRuleArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs Empty = new ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs();

    /**
     * The type of autoscaling policy.
     * 
     */
    @Import(name="autoScalingPolicyType", required=true)
    private Output<String> autoScalingPolicyType;

    /**
     * @return The type of autoscaling policy.
     * 
     */
    public Output<String> autoScalingPolicyType() {
        return this.autoScalingPolicyType;
    }

    /**
     * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the model deployment immediately after autoscaling is enabled. Note that anytime this value is updated, the number of instances will be reset to this value. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     * 
     */
    @Import(name="initialInstanceCount", required=true)
    private Output<Integer> initialInstanceCount;

    /**
     * @return For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the model deployment immediately after autoscaling is enabled. Note that anytime this value is updated, the number of instances will be reset to this value. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
     * 
     */
    public Output<Integer> initialInstanceCount() {
        return this.initialInstanceCount;
    }

    /**
     * For a threshold-based autoscaling policy, this value is the maximum number of instances the model deployment is allowed to increase to (scale out).
     * 
     */
    @Import(name="maximumInstanceCount", required=true)
    private Output<Integer> maximumInstanceCount;

    /**
     * @return For a threshold-based autoscaling policy, this value is the maximum number of instances the model deployment is allowed to increase to (scale out).
     * 
     */
    public Output<Integer> maximumInstanceCount() {
        return this.maximumInstanceCount;
    }

    /**
     * For a threshold-based autoscaling policy, this value is the minimum number of instances the model deployment is allowed to decrease to (scale in).
     * 
     */
    @Import(name="minimumInstanceCount", required=true)
    private Output<Integer> minimumInstanceCount;

    /**
     * @return For a threshold-based autoscaling policy, this value is the minimum number of instances the model deployment is allowed to decrease to (scale in).
     * 
     */
    public Output<Integer> minimumInstanceCount() {
        return this.minimumInstanceCount;
    }

    /**
     * The list of autoscaling policy rules.
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyRuleArgs>> rules;

    /**
     * @return The list of autoscaling policy rules.
     * 
     */
    public Output<List<ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyRuleArgs>> rules() {
        return this.rules;
    }

    private ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs() {}

    private ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs(ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs $) {
        this.autoScalingPolicyType = $.autoScalingPolicyType;
        this.initialInstanceCount = $.initialInstanceCount;
        this.maximumInstanceCount = $.maximumInstanceCount;
        this.minimumInstanceCount = $.minimumInstanceCount;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs $;

        public Builder() {
            $ = new ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs();
        }

        public Builder(ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs defaults) {
            $ = new ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoScalingPolicyType The type of autoscaling policy.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingPolicyType(Output<String> autoScalingPolicyType) {
            $.autoScalingPolicyType = autoScalingPolicyType;
            return this;
        }

        /**
         * @param autoScalingPolicyType The type of autoscaling policy.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingPolicyType(String autoScalingPolicyType) {
            return autoScalingPolicyType(Output.of(autoScalingPolicyType));
        }

        /**
         * @param initialInstanceCount For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the model deployment immediately after autoscaling is enabled. Note that anytime this value is updated, the number of instances will be reset to this value. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
         * 
         * @return builder
         * 
         */
        public Builder initialInstanceCount(Output<Integer> initialInstanceCount) {
            $.initialInstanceCount = initialInstanceCount;
            return this;
        }

        /**
         * @param initialInstanceCount For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the model deployment immediately after autoscaling is enabled. Note that anytime this value is updated, the number of instances will be reset to this value. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from this initial number to a number that is based on the limits that you set.
         * 
         * @return builder
         * 
         */
        public Builder initialInstanceCount(Integer initialInstanceCount) {
            return initialInstanceCount(Output.of(initialInstanceCount));
        }

        /**
         * @param maximumInstanceCount For a threshold-based autoscaling policy, this value is the maximum number of instances the model deployment is allowed to increase to (scale out).
         * 
         * @return builder
         * 
         */
        public Builder maximumInstanceCount(Output<Integer> maximumInstanceCount) {
            $.maximumInstanceCount = maximumInstanceCount;
            return this;
        }

        /**
         * @param maximumInstanceCount For a threshold-based autoscaling policy, this value is the maximum number of instances the model deployment is allowed to increase to (scale out).
         * 
         * @return builder
         * 
         */
        public Builder maximumInstanceCount(Integer maximumInstanceCount) {
            return maximumInstanceCount(Output.of(maximumInstanceCount));
        }

        /**
         * @param minimumInstanceCount For a threshold-based autoscaling policy, this value is the minimum number of instances the model deployment is allowed to decrease to (scale in).
         * 
         * @return builder
         * 
         */
        public Builder minimumInstanceCount(Output<Integer> minimumInstanceCount) {
            $.minimumInstanceCount = minimumInstanceCount;
            return this;
        }

        /**
         * @param minimumInstanceCount For a threshold-based autoscaling policy, this value is the minimum number of instances the model deployment is allowed to decrease to (scale in).
         * 
         * @return builder
         * 
         */
        public Builder minimumInstanceCount(Integer minimumInstanceCount) {
            return minimumInstanceCount(Output.of(minimumInstanceCount));
        }

        /**
         * @param rules The list of autoscaling policy rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<List<ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules The list of autoscaling policy rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules The list of autoscaling policy rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs build() {
            if ($.autoScalingPolicyType == null) {
                throw new MissingRequiredPropertyException("ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs", "autoScalingPolicyType");
            }
            if ($.initialInstanceCount == null) {
                throw new MissingRequiredPropertyException("ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs", "initialInstanceCount");
            }
            if ($.maximumInstanceCount == null) {
                throw new MissingRequiredPropertyException("ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs", "maximumInstanceCount");
            }
            if ($.minimumInstanceCount == null) {
                throw new MissingRequiredPropertyException("ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs", "minimumInstanceCount");
            }
            if ($.rules == null) {
                throw new MissingRequiredPropertyException("ModelDeploymentModelDeploymentConfigurationDetailsInfrastructureConfigurationDetailsScalingPolicyAutoScalingPolicyArgs", "rules");
            }
            return $;
        }
    }

}
