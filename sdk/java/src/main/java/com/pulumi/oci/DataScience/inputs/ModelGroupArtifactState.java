// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelGroupArtifactState extends com.pulumi.resources.ResourceArgs {

    public static final ModelGroupArtifactState Empty = new ModelGroupArtifactState();

    /**
     * This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
     * 
     */
    @Import(name="contentDisposition")
    private @Nullable Output<String> contentDisposition;

    /**
     * @return This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
     * 
     */
    public Optional<Output<String>> contentDisposition() {
        return Optional.ofNullable(this.contentDisposition);
    }

    /**
     * The content length of the body.
     * 
     */
    @Import(name="contentLength")
    private @Nullable Output<String> contentLength;

    /**
     * @return The content length of the body.
     * 
     */
    public Optional<Output<String>> contentLength() {
        return Optional.ofNullable(this.contentLength);
    }

    /**
     * The model group artifact to upload.
     * 
     */
    @Import(name="modelGroupArtifact")
    private @Nullable Output<String> modelGroupArtifact;

    /**
     * @return The model group artifact to upload.
     * 
     */
    public Optional<Output<String>> modelGroupArtifact() {
        return Optional.ofNullable(this.modelGroupArtifact);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="modelGroupId")
    private @Nullable Output<String> modelGroupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> modelGroupId() {
        return Optional.ofNullable(this.modelGroupId);
    }

    private ModelGroupArtifactState() {}

    private ModelGroupArtifactState(ModelGroupArtifactState $) {
        this.contentDisposition = $.contentDisposition;
        this.contentLength = $.contentLength;
        this.modelGroupArtifact = $.modelGroupArtifact;
        this.modelGroupId = $.modelGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelGroupArtifactState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelGroupArtifactState $;

        public Builder() {
            $ = new ModelGroupArtifactState();
        }

        public Builder(ModelGroupArtifactState defaults) {
            $ = new ModelGroupArtifactState(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentDisposition This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder contentDisposition(@Nullable Output<String> contentDisposition) {
            $.contentDisposition = contentDisposition;
            return this;
        }

        /**
         * @param contentDisposition This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{&#34;Content-Disposition&#34;: &#34;attachment&#34; &#34;filename&#34;=&#34;model.tar.gz&#34; &#34;Content-Length&#34;: &#34;2347&#34; &#34;Content-Type&#34;: &#34;application/gzip&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder contentDisposition(String contentDisposition) {
            return contentDisposition(Output.of(contentDisposition));
        }

        /**
         * @param contentLength The content length of the body.
         * 
         * @return builder
         * 
         */
        public Builder contentLength(@Nullable Output<String> contentLength) {
            $.contentLength = contentLength;
            return this;
        }

        /**
         * @param contentLength The content length of the body.
         * 
         * @return builder
         * 
         */
        public Builder contentLength(String contentLength) {
            return contentLength(Output.of(contentLength));
        }

        /**
         * @param modelGroupArtifact The model group artifact to upload.
         * 
         * @return builder
         * 
         */
        public Builder modelGroupArtifact(@Nullable Output<String> modelGroupArtifact) {
            $.modelGroupArtifact = modelGroupArtifact;
            return this;
        }

        /**
         * @param modelGroupArtifact The model group artifact to upload.
         * 
         * @return builder
         * 
         */
        public Builder modelGroupArtifact(String modelGroupArtifact) {
            return modelGroupArtifact(Output.of(modelGroupArtifact));
        }

        /**
         * @param modelGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder modelGroupId(@Nullable Output<String> modelGroupId) {
            $.modelGroupId = modelGroupId;
            return this;
        }

        /**
         * @param modelGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder modelGroupId(String modelGroupId) {
            return modelGroupId(Output.of(modelGroupId));
        }

        public ModelGroupArtifactState build() {
            return $;
        }
    }

}
