// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.inputs.ModelGroupModelGroupCloneSourceDetailsModifyModelGroupDetailsArgs;
import com.pulumi.oci.DataScience.inputs.ModelGroupModelGroupCloneSourceDetailsPatchModelGroupMemberModelDetailsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelGroupModelGroupCloneSourceDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelGroupModelGroupCloneSourceDetailsArgs Empty = new ModelGroupModelGroupCloneSourceDetailsArgs();

    /**
     * Source resource for model group clone operation.
     * 
     */
    @Import(name="modelGroupCloneSourceType", required=true)
    private Output<String> modelGroupCloneSourceType;

    /**
     * @return Source resource for model group clone operation.
     * 
     */
    public Output<String> modelGroupCloneSourceType() {
        return this.modelGroupCloneSourceType;
    }

    /**
     * Overwrites the properties of the source modelGroup.
     * 
     */
    @Import(name="modifyModelGroupDetails")
    private @Nullable Output<ModelGroupModelGroupCloneSourceDetailsModifyModelGroupDetailsArgs> modifyModelGroupDetails;

    /**
     * @return Overwrites the properties of the source modelGroup.
     * 
     */
    public Optional<Output<ModelGroupModelGroupCloneSourceDetailsModifyModelGroupDetailsArgs>> modifyModelGroupDetails() {
        return Optional.ofNullable(this.modifyModelGroupDetails);
    }

    /**
     * Specifies the list of new models to be added and list of models from source model group to be removed for cloning.
     * 
     */
    @Import(name="patchModelGroupMemberModelDetails")
    private @Nullable Output<ModelGroupModelGroupCloneSourceDetailsPatchModelGroupMemberModelDetailsArgs> patchModelGroupMemberModelDetails;

    /**
     * @return Specifies the list of new models to be added and list of models from source model group to be removed for cloning.
     * 
     */
    public Optional<Output<ModelGroupModelGroupCloneSourceDetailsPatchModelGroupMemberModelDetailsArgs>> patchModelGroupMemberModelDetails() {
        return Optional.ofNullable(this.patchModelGroupMemberModelDetails);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model group version history.
     * 
     */
    @Import(name="sourceId", required=true)
    private Output<String> sourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model group version history.
     * 
     */
    public Output<String> sourceId() {
        return this.sourceId;
    }

    private ModelGroupModelGroupCloneSourceDetailsArgs() {}

    private ModelGroupModelGroupCloneSourceDetailsArgs(ModelGroupModelGroupCloneSourceDetailsArgs $) {
        this.modelGroupCloneSourceType = $.modelGroupCloneSourceType;
        this.modifyModelGroupDetails = $.modifyModelGroupDetails;
        this.patchModelGroupMemberModelDetails = $.patchModelGroupMemberModelDetails;
        this.sourceId = $.sourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelGroupModelGroupCloneSourceDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelGroupModelGroupCloneSourceDetailsArgs $;

        public Builder() {
            $ = new ModelGroupModelGroupCloneSourceDetailsArgs();
        }

        public Builder(ModelGroupModelGroupCloneSourceDetailsArgs defaults) {
            $ = new ModelGroupModelGroupCloneSourceDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param modelGroupCloneSourceType Source resource for model group clone operation.
         * 
         * @return builder
         * 
         */
        public Builder modelGroupCloneSourceType(Output<String> modelGroupCloneSourceType) {
            $.modelGroupCloneSourceType = modelGroupCloneSourceType;
            return this;
        }

        /**
         * @param modelGroupCloneSourceType Source resource for model group clone operation.
         * 
         * @return builder
         * 
         */
        public Builder modelGroupCloneSourceType(String modelGroupCloneSourceType) {
            return modelGroupCloneSourceType(Output.of(modelGroupCloneSourceType));
        }

        /**
         * @param modifyModelGroupDetails Overwrites the properties of the source modelGroup.
         * 
         * @return builder
         * 
         */
        public Builder modifyModelGroupDetails(@Nullable Output<ModelGroupModelGroupCloneSourceDetailsModifyModelGroupDetailsArgs> modifyModelGroupDetails) {
            $.modifyModelGroupDetails = modifyModelGroupDetails;
            return this;
        }

        /**
         * @param modifyModelGroupDetails Overwrites the properties of the source modelGroup.
         * 
         * @return builder
         * 
         */
        public Builder modifyModelGroupDetails(ModelGroupModelGroupCloneSourceDetailsModifyModelGroupDetailsArgs modifyModelGroupDetails) {
            return modifyModelGroupDetails(Output.of(modifyModelGroupDetails));
        }

        /**
         * @param patchModelGroupMemberModelDetails Specifies the list of new models to be added and list of models from source model group to be removed for cloning.
         * 
         * @return builder
         * 
         */
        public Builder patchModelGroupMemberModelDetails(@Nullable Output<ModelGroupModelGroupCloneSourceDetailsPatchModelGroupMemberModelDetailsArgs> patchModelGroupMemberModelDetails) {
            $.patchModelGroupMemberModelDetails = patchModelGroupMemberModelDetails;
            return this;
        }

        /**
         * @param patchModelGroupMemberModelDetails Specifies the list of new models to be added and list of models from source model group to be removed for cloning.
         * 
         * @return builder
         * 
         */
        public Builder patchModelGroupMemberModelDetails(ModelGroupModelGroupCloneSourceDetailsPatchModelGroupMemberModelDetailsArgs patchModelGroupMemberModelDetails) {
            return patchModelGroupMemberModelDetails(Output.of(patchModelGroupMemberModelDetails));
        }

        /**
         * @param sourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model group version history.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        /**
         * @param sourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model group version history.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        public ModelGroupModelGroupCloneSourceDetailsArgs build() {
            if ($.modelGroupCloneSourceType == null) {
                throw new MissingRequiredPropertyException("ModelGroupModelGroupCloneSourceDetailsArgs", "modelGroupCloneSourceType");
            }
            if ($.sourceId == null) {
                throw new MissingRequiredPropertyException("ModelGroupModelGroupCloneSourceDetailsArgs", "sourceId");
            }
            return $;
        }
    }

}
