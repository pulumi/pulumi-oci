// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelRetentionOperationDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelRetentionOperationDetailArgs Empty = new ModelRetentionOperationDetailArgs();

    /**
     * The archival status of model.
     * 
     */
    @Import(name="archiveState")
    private @Nullable Output<String> archiveState;

    /**
     * @return The archival status of model.
     * 
     */
    public Optional<Output<String>> archiveState() {
        return Optional.ofNullable(this.archiveState);
    }

    /**
     * The archival state details of the model.
     * 
     */
    @Import(name="archiveStateDetails")
    private @Nullable Output<String> archiveStateDetails;

    /**
     * @return The archival state details of the model.
     * 
     */
    public Optional<Output<String>> archiveStateDetails() {
        return Optional.ofNullable(this.archiveStateDetails);
    }

    /**
     * The deletion status of the archived model.
     * 
     */
    @Import(name="deleteState")
    private @Nullable Output<String> deleteState;

    /**
     * @return The deletion status of the archived model.
     * 
     */
    public Optional<Output<String>> deleteState() {
        return Optional.ofNullable(this.deleteState);
    }

    /**
     * The deletion status details of the archived model.
     * 
     */
    @Import(name="deleteStateDetails")
    private @Nullable Output<String> deleteStateDetails;

    /**
     * @return The deletion status details of the archived model.
     * 
     */
    public Optional<Output<String>> deleteStateDetails() {
        return Optional.ofNullable(this.deleteStateDetails);
    }

    /**
     * The estimated archival time of the model based on the provided retention setting.
     * 
     */
    @Import(name="timeArchivalScheduled")
    private @Nullable Output<String> timeArchivalScheduled;

    /**
     * @return The estimated archival time of the model based on the provided retention setting.
     * 
     */
    public Optional<Output<String>> timeArchivalScheduled() {
        return Optional.ofNullable(this.timeArchivalScheduled);
    }

    /**
     * The estimated deletion time of the model based on the provided retention setting.
     * 
     */
    @Import(name="timeDeletionScheduled")
    private @Nullable Output<String> timeDeletionScheduled;

    /**
     * @return The estimated deletion time of the model based on the provided retention setting.
     * 
     */
    public Optional<Output<String>> timeDeletionScheduled() {
        return Optional.ofNullable(this.timeDeletionScheduled);
    }

    private ModelRetentionOperationDetailArgs() {}

    private ModelRetentionOperationDetailArgs(ModelRetentionOperationDetailArgs $) {
        this.archiveState = $.archiveState;
        this.archiveStateDetails = $.archiveStateDetails;
        this.deleteState = $.deleteState;
        this.deleteStateDetails = $.deleteStateDetails;
        this.timeArchivalScheduled = $.timeArchivalScheduled;
        this.timeDeletionScheduled = $.timeDeletionScheduled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelRetentionOperationDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelRetentionOperationDetailArgs $;

        public Builder() {
            $ = new ModelRetentionOperationDetailArgs();
        }

        public Builder(ModelRetentionOperationDetailArgs defaults) {
            $ = new ModelRetentionOperationDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param archiveState The archival status of model.
         * 
         * @return builder
         * 
         */
        public Builder archiveState(@Nullable Output<String> archiveState) {
            $.archiveState = archiveState;
            return this;
        }

        /**
         * @param archiveState The archival status of model.
         * 
         * @return builder
         * 
         */
        public Builder archiveState(String archiveState) {
            return archiveState(Output.of(archiveState));
        }

        /**
         * @param archiveStateDetails The archival state details of the model.
         * 
         * @return builder
         * 
         */
        public Builder archiveStateDetails(@Nullable Output<String> archiveStateDetails) {
            $.archiveStateDetails = archiveStateDetails;
            return this;
        }

        /**
         * @param archiveStateDetails The archival state details of the model.
         * 
         * @return builder
         * 
         */
        public Builder archiveStateDetails(String archiveStateDetails) {
            return archiveStateDetails(Output.of(archiveStateDetails));
        }

        /**
         * @param deleteState The deletion status of the archived model.
         * 
         * @return builder
         * 
         */
        public Builder deleteState(@Nullable Output<String> deleteState) {
            $.deleteState = deleteState;
            return this;
        }

        /**
         * @param deleteState The deletion status of the archived model.
         * 
         * @return builder
         * 
         */
        public Builder deleteState(String deleteState) {
            return deleteState(Output.of(deleteState));
        }

        /**
         * @param deleteStateDetails The deletion status details of the archived model.
         * 
         * @return builder
         * 
         */
        public Builder deleteStateDetails(@Nullable Output<String> deleteStateDetails) {
            $.deleteStateDetails = deleteStateDetails;
            return this;
        }

        /**
         * @param deleteStateDetails The deletion status details of the archived model.
         * 
         * @return builder
         * 
         */
        public Builder deleteStateDetails(String deleteStateDetails) {
            return deleteStateDetails(Output.of(deleteStateDetails));
        }

        /**
         * @param timeArchivalScheduled The estimated archival time of the model based on the provided retention setting.
         * 
         * @return builder
         * 
         */
        public Builder timeArchivalScheduled(@Nullable Output<String> timeArchivalScheduled) {
            $.timeArchivalScheduled = timeArchivalScheduled;
            return this;
        }

        /**
         * @param timeArchivalScheduled The estimated archival time of the model based on the provided retention setting.
         * 
         * @return builder
         * 
         */
        public Builder timeArchivalScheduled(String timeArchivalScheduled) {
            return timeArchivalScheduled(Output.of(timeArchivalScheduled));
        }

        /**
         * @param timeDeletionScheduled The estimated deletion time of the model based on the provided retention setting.
         * 
         * @return builder
         * 
         */
        public Builder timeDeletionScheduled(@Nullable Output<String> timeDeletionScheduled) {
            $.timeDeletionScheduled = timeDeletionScheduled;
            return this;
        }

        /**
         * @param timeDeletionScheduled The estimated deletion time of the model based on the provided retention setting.
         * 
         * @return builder
         * 
         */
        public Builder timeDeletionScheduled(String timeDeletionScheduled) {
            return timeDeletionScheduled(Output.of(timeDeletionScheduled));
        }

        public ModelRetentionOperationDetailArgs build() {
            return $;
        }
    }

}
