// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataScience.inputs.NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollectionArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs Empty = new NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs();

    /**
     * (Updatable) A collection of Git repository configurations.
     * 
     */
    @Import(name="notebookSessionGitRepoConfigCollections")
    private @Nullable Output<List<NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollectionArgs>> notebookSessionGitRepoConfigCollections;

    /**
     * @return (Updatable) A collection of Git repository configurations.
     * 
     */
    public Optional<Output<List<NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollectionArgs>>> notebookSessionGitRepoConfigCollections() {
        return Optional.ofNullable(this.notebookSessionGitRepoConfigCollections);
    }

    private NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs() {}

    private NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs(NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs $) {
        this.notebookSessionGitRepoConfigCollections = $.notebookSessionGitRepoConfigCollections;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs $;

        public Builder() {
            $ = new NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs();
        }

        public Builder(NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs defaults) {
            $ = new NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notebookSessionGitRepoConfigCollections (Updatable) A collection of Git repository configurations.
         * 
         * @return builder
         * 
         */
        public Builder notebookSessionGitRepoConfigCollections(@Nullable Output<List<NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollectionArgs>> notebookSessionGitRepoConfigCollections) {
            $.notebookSessionGitRepoConfigCollections = notebookSessionGitRepoConfigCollections;
            return this;
        }

        /**
         * @param notebookSessionGitRepoConfigCollections (Updatable) A collection of Git repository configurations.
         * 
         * @return builder
         * 
         */
        public Builder notebookSessionGitRepoConfigCollections(List<NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollectionArgs> notebookSessionGitRepoConfigCollections) {
            return notebookSessionGitRepoConfigCollections(Output.of(notebookSessionGitRepoConfigCollections));
        }

        /**
         * @param notebookSessionGitRepoConfigCollections (Updatable) A collection of Git repository configurations.
         * 
         * @return builder
         * 
         */
        public Builder notebookSessionGitRepoConfigCollections(NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollectionArgs... notebookSessionGitRepoConfigCollections) {
            return notebookSessionGitRepoConfigCollections(List.of(notebookSessionGitRepoConfigCollections));
        }

        public NotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsArgs build() {
            return $;
        }
    }

}
