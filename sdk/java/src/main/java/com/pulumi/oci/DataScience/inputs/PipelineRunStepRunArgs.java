// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineRunStepRunArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineRunStepRunArgs Empty = new PipelineRunStepRunArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dataflow run triggered for this step run.
     * 
     */
    @Import(name="dataflowRunId")
    private @Nullable Output<String> dataflowRunId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dataflow run triggered for this step run.
     * 
     */
    public Optional<Output<String>> dataflowRunId() {
        return Optional.ofNullable(this.dataflowRunId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run triggered for this step run.
     * 
     */
    @Import(name="jobRunId")
    private @Nullable Output<String> jobRunId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run triggered for this step run.
     * 
     */
    public Optional<Output<String>> jobRunId() {
        return Optional.ofNullable(this.jobRunId);
    }

    /**
     * Details of the state of the step run.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Details of the state of the step run.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The state of the step run.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the step run.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The name of the step.
     * 
     */
    @Import(name="stepName")
    private @Nullable Output<String> stepName;

    /**
     * @return The name of the step.
     * 
     */
    public Optional<Output<String>> stepName() {
        return Optional.ofNullable(this.stepName);
    }

    /**
     * The type of step.
     * 
     */
    @Import(name="stepType")
    private @Nullable Output<String> stepType;

    /**
     * @return The type of step.
     * 
     */
    public Optional<Output<String>> stepType() {
        return Optional.ofNullable(this.stepType);
    }

    /**
     * The date and time the pipeline run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeFinished")
    private @Nullable Output<String> timeFinished;

    /**
     * @return The date and time the pipeline run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }

    /**
     * The date and time the pipeline run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeStarted")
    private @Nullable Output<String> timeStarted;

    /**
     * @return The date and time the pipeline run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    private PipelineRunStepRunArgs() {}

    private PipelineRunStepRunArgs(PipelineRunStepRunArgs $) {
        this.dataflowRunId = $.dataflowRunId;
        this.jobRunId = $.jobRunId;
        this.lifecycleDetails = $.lifecycleDetails;
        this.state = $.state;
        this.stepName = $.stepName;
        this.stepType = $.stepType;
        this.timeFinished = $.timeFinished;
        this.timeStarted = $.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineRunStepRunArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineRunStepRunArgs $;

        public Builder() {
            $ = new PipelineRunStepRunArgs();
        }

        public Builder(PipelineRunStepRunArgs defaults) {
            $ = new PipelineRunStepRunArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataflowRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dataflow run triggered for this step run.
         * 
         * @return builder
         * 
         */
        public Builder dataflowRunId(@Nullable Output<String> dataflowRunId) {
            $.dataflowRunId = dataflowRunId;
            return this;
        }

        /**
         * @param dataflowRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dataflow run triggered for this step run.
         * 
         * @return builder
         * 
         */
        public Builder dataflowRunId(String dataflowRunId) {
            return dataflowRunId(Output.of(dataflowRunId));
        }

        /**
         * @param jobRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run triggered for this step run.
         * 
         * @return builder
         * 
         */
        public Builder jobRunId(@Nullable Output<String> jobRunId) {
            $.jobRunId = jobRunId;
            return this;
        }

        /**
         * @param jobRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run triggered for this step run.
         * 
         * @return builder
         * 
         */
        public Builder jobRunId(String jobRunId) {
            return jobRunId(Output.of(jobRunId));
        }

        /**
         * @param lifecycleDetails Details of the state of the step run.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Details of the state of the step run.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param state The state of the step run.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the step run.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stepName The name of the step.
         * 
         * @return builder
         * 
         */
        public Builder stepName(@Nullable Output<String> stepName) {
            $.stepName = stepName;
            return this;
        }

        /**
         * @param stepName The name of the step.
         * 
         * @return builder
         * 
         */
        public Builder stepName(String stepName) {
            return stepName(Output.of(stepName));
        }

        /**
         * @param stepType The type of step.
         * 
         * @return builder
         * 
         */
        public Builder stepType(@Nullable Output<String> stepType) {
            $.stepType = stepType;
            return this;
        }

        /**
         * @param stepType The type of step.
         * 
         * @return builder
         * 
         */
        public Builder stepType(String stepType) {
            return stepType(Output.of(stepType));
        }

        /**
         * @param timeFinished The date and time the pipeline run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(@Nullable Output<String> timeFinished) {
            $.timeFinished = timeFinished;
            return this;
        }

        /**
         * @param timeFinished The date and time the pipeline run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(String timeFinished) {
            return timeFinished(Output.of(timeFinished));
        }

        /**
         * @param timeStarted The date and time the pipeline run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(@Nullable Output<String> timeStarted) {
            $.timeStarted = timeStarted;
            return this;
        }

        /**
         * @param timeStarted The date and time the pipeline run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(String timeStarted) {
            return timeStarted(Output.of(timeStarted));
        }

        public PipelineRunStepRunArgs build() {
            return $;
        }
    }

}
