// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataScience.inputs.PipelineStepDetailStepConfigurationDetailsArgs;
import com.pulumi.oci.DataScience.inputs.PipelineStepDetailStepInfrastructureConfigurationDetailsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineStepDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineStepDetailArgs Empty = new PipelineStepDetailArgs();

    /**
     * The list of step names this current step depends on for execution.
     * 
     */
    @Import(name="dependsOns")
    private @Nullable Output<List<String>> dependsOns;

    /**
     * @return The list of step names this current step depends on for execution.
     * 
     */
    public Optional<Output<List<String>>> dependsOns() {
        return Optional.ofNullable(this.dependsOns);
    }

    /**
     * (Updatable) A short description of the step.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) A short description of the step.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A flag to indicate whether the artifact has been uploaded for this step or not.
     * 
     */
    @Import(name="isArtifactUploaded")
    private @Nullable Output<Boolean> isArtifactUploaded;

    /**
     * @return A flag to indicate whether the artifact has been uploaded for this step or not.
     * 
     */
    public Optional<Output<Boolean>> isArtifactUploaded() {
        return Optional.ofNullable(this.isArtifactUploaded);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job to be used as a step.
     * 
     */
    @Import(name="jobId")
    private @Nullable Output<String> jobId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job to be used as a step.
     * 
     */
    public Optional<Output<String>> jobId() {
        return Optional.ofNullable(this.jobId);
    }

    /**
     * (Updatable) The configuration details of a step.
     * 
     */
    @Import(name="stepConfigurationDetails")
    private @Nullable Output<PipelineStepDetailStepConfigurationDetailsArgs> stepConfigurationDetails;

    /**
     * @return (Updatable) The configuration details of a step.
     * 
     */
    public Optional<Output<PipelineStepDetailStepConfigurationDetailsArgs>> stepConfigurationDetails() {
        return Optional.ofNullable(this.stepConfigurationDetails);
    }

    /**
     * The infrastructure configuration details of a pipeline or a step.
     * 
     */
    @Import(name="stepInfrastructureConfigurationDetails")
    private @Nullable Output<PipelineStepDetailStepInfrastructureConfigurationDetailsArgs> stepInfrastructureConfigurationDetails;

    /**
     * @return The infrastructure configuration details of a pipeline or a step.
     * 
     */
    public Optional<Output<PipelineStepDetailStepInfrastructureConfigurationDetailsArgs>> stepInfrastructureConfigurationDetails() {
        return Optional.ofNullable(this.stepInfrastructureConfigurationDetails);
    }

    /**
     * (Updatable) The name of the step. It must be unique within the pipeline. This is used to create the pipeline DAG.
     * 
     */
    @Import(name="stepName", required=true)
    private Output<String> stepName;

    /**
     * @return (Updatable) The name of the step. It must be unique within the pipeline. This is used to create the pipeline DAG.
     * 
     */
    public Output<String> stepName() {
        return this.stepName;
    }

    /**
     * (Updatable) The type of step.
     * 
     */
    @Import(name="stepType", required=true)
    private Output<String> stepType;

    /**
     * @return (Updatable) The type of step.
     * 
     */
    public Output<String> stepType() {
        return this.stepType;
    }

    private PipelineStepDetailArgs() {}

    private PipelineStepDetailArgs(PipelineStepDetailArgs $) {
        this.dependsOns = $.dependsOns;
        this.description = $.description;
        this.isArtifactUploaded = $.isArtifactUploaded;
        this.jobId = $.jobId;
        this.stepConfigurationDetails = $.stepConfigurationDetails;
        this.stepInfrastructureConfigurationDetails = $.stepInfrastructureConfigurationDetails;
        this.stepName = $.stepName;
        this.stepType = $.stepType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineStepDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineStepDetailArgs $;

        public Builder() {
            $ = new PipelineStepDetailArgs();
        }

        public Builder(PipelineStepDetailArgs defaults) {
            $ = new PipelineStepDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dependsOns The list of step names this current step depends on for execution.
         * 
         * @return builder
         * 
         */
        public Builder dependsOns(@Nullable Output<List<String>> dependsOns) {
            $.dependsOns = dependsOns;
            return this;
        }

        /**
         * @param dependsOns The list of step names this current step depends on for execution.
         * 
         * @return builder
         * 
         */
        public Builder dependsOns(List<String> dependsOns) {
            return dependsOns(Output.of(dependsOns));
        }

        /**
         * @param dependsOns The list of step names this current step depends on for execution.
         * 
         * @return builder
         * 
         */
        public Builder dependsOns(String... dependsOns) {
            return dependsOns(List.of(dependsOns));
        }

        /**
         * @param description (Updatable) A short description of the step.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) A short description of the step.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param isArtifactUploaded A flag to indicate whether the artifact has been uploaded for this step or not.
         * 
         * @return builder
         * 
         */
        public Builder isArtifactUploaded(@Nullable Output<Boolean> isArtifactUploaded) {
            $.isArtifactUploaded = isArtifactUploaded;
            return this;
        }

        /**
         * @param isArtifactUploaded A flag to indicate whether the artifact has been uploaded for this step or not.
         * 
         * @return builder
         * 
         */
        public Builder isArtifactUploaded(Boolean isArtifactUploaded) {
            return isArtifactUploaded(Output.of(isArtifactUploaded));
        }

        /**
         * @param jobId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job to be used as a step.
         * 
         * @return builder
         * 
         */
        public Builder jobId(@Nullable Output<String> jobId) {
            $.jobId = jobId;
            return this;
        }

        /**
         * @param jobId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job to be used as a step.
         * 
         * @return builder
         * 
         */
        public Builder jobId(String jobId) {
            return jobId(Output.of(jobId));
        }

        /**
         * @param stepConfigurationDetails (Updatable) The configuration details of a step.
         * 
         * @return builder
         * 
         */
        public Builder stepConfigurationDetails(@Nullable Output<PipelineStepDetailStepConfigurationDetailsArgs> stepConfigurationDetails) {
            $.stepConfigurationDetails = stepConfigurationDetails;
            return this;
        }

        /**
         * @param stepConfigurationDetails (Updatable) The configuration details of a step.
         * 
         * @return builder
         * 
         */
        public Builder stepConfigurationDetails(PipelineStepDetailStepConfigurationDetailsArgs stepConfigurationDetails) {
            return stepConfigurationDetails(Output.of(stepConfigurationDetails));
        }

        /**
         * @param stepInfrastructureConfigurationDetails The infrastructure configuration details of a pipeline or a step.
         * 
         * @return builder
         * 
         */
        public Builder stepInfrastructureConfigurationDetails(@Nullable Output<PipelineStepDetailStepInfrastructureConfigurationDetailsArgs> stepInfrastructureConfigurationDetails) {
            $.stepInfrastructureConfigurationDetails = stepInfrastructureConfigurationDetails;
            return this;
        }

        /**
         * @param stepInfrastructureConfigurationDetails The infrastructure configuration details of a pipeline or a step.
         * 
         * @return builder
         * 
         */
        public Builder stepInfrastructureConfigurationDetails(PipelineStepDetailStepInfrastructureConfigurationDetailsArgs stepInfrastructureConfigurationDetails) {
            return stepInfrastructureConfigurationDetails(Output.of(stepInfrastructureConfigurationDetails));
        }

        /**
         * @param stepName (Updatable) The name of the step. It must be unique within the pipeline. This is used to create the pipeline DAG.
         * 
         * @return builder
         * 
         */
        public Builder stepName(Output<String> stepName) {
            $.stepName = stepName;
            return this;
        }

        /**
         * @param stepName (Updatable) The name of the step. It must be unique within the pipeline. This is used to create the pipeline DAG.
         * 
         * @return builder
         * 
         */
        public Builder stepName(String stepName) {
            return stepName(Output.of(stepName));
        }

        /**
         * @param stepType (Updatable) The type of step.
         * 
         * @return builder
         * 
         */
        public Builder stepType(Output<String> stepType) {
            $.stepType = stepType;
            return this;
        }

        /**
         * @param stepType (Updatable) The type of step.
         * 
         * @return builder
         * 
         */
        public Builder stepType(String stepType) {
            return stepType(Output.of(stepType));
        }

        public PipelineStepDetailArgs build() {
            $.stepName = Objects.requireNonNull($.stepName, "expected parameter 'stepName' to be non-null");
            $.stepType = Objects.requireNonNull($.stepType, "expected parameter 'stepType' to be non-null");
            return $;
        }
    }

}
