// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataScience.inputs.PipelineStepDetailStepDataflowConfigurationDetailsDriverShapeConfigDetailsArgs;
import com.pulumi.oci.DataScience.inputs.PipelineStepDetailStepDataflowConfigurationDetailsExecutorShapeConfigDetailsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineStepDetailStepDataflowConfigurationDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineStepDetailStepDataflowConfigurationDetailsArgs Empty = new PipelineStepDetailStepDataflowConfigurationDetailsArgs();

    /**
     * (Updatable) The Spark configuration passed to the running process.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<Map<String,String>> configuration;

    /**
     * @return (Updatable) The Spark configuration passed to the running process.
     * 
     */
    public Optional<Output<Map<String,String>>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * (Updatable) The VM shape for the driver.
     * 
     */
    @Import(name="driverShape")
    private @Nullable Output<String> driverShape;

    /**
     * @return (Updatable) The VM shape for the driver.
     * 
     */
    public Optional<Output<String>> driverShape() {
        return Optional.ofNullable(this.driverShape);
    }

    /**
     * (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
     * 
     */
    @Import(name="driverShapeConfigDetails")
    private @Nullable Output<PipelineStepDetailStepDataflowConfigurationDetailsDriverShapeConfigDetailsArgs> driverShapeConfigDetails;

    /**
     * @return (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
     * 
     */
    public Optional<Output<PipelineStepDetailStepDataflowConfigurationDetailsDriverShapeConfigDetailsArgs>> driverShapeConfigDetails() {
        return Optional.ofNullable(this.driverShapeConfigDetails);
    }

    /**
     * (Updatable) The VM shape for the executors.
     * 
     */
    @Import(name="executorShape")
    private @Nullable Output<String> executorShape;

    /**
     * @return (Updatable) The VM shape for the executors.
     * 
     */
    public Optional<Output<String>> executorShape() {
        return Optional.ofNullable(this.executorShape);
    }

    /**
     * (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
     * 
     */
    @Import(name="executorShapeConfigDetails")
    private @Nullable Output<PipelineStepDetailStepDataflowConfigurationDetailsExecutorShapeConfigDetailsArgs> executorShapeConfigDetails;

    /**
     * @return (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
     * 
     */
    public Optional<Output<PipelineStepDetailStepDataflowConfigurationDetailsExecutorShapeConfigDetailsArgs>> executorShapeConfigDetails() {
        return Optional.ofNullable(this.executorShapeConfigDetails);
    }

    /**
     * (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded.
     * 
     */
    @Import(name="logsBucketUri")
    private @Nullable Output<String> logsBucketUri;

    /**
     * @return (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded.
     * 
     */
    public Optional<Output<String>> logsBucketUri() {
        return Optional.ofNullable(this.logsBucketUri);
    }

    /**
     * (Updatable) The number of executor VMs requested.
     * 
     */
    @Import(name="numExecutors")
    private @Nullable Output<Integer> numExecutors;

    /**
     * @return (Updatable) The number of executor VMs requested.
     * 
     */
    public Optional<Output<Integer>> numExecutors() {
        return Optional.ofNullable(this.numExecutors);
    }

    /**
     * (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs.
     * 
     */
    @Import(name="warehouseBucketUri")
    private @Nullable Output<String> warehouseBucketUri;

    /**
     * @return (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs.
     * 
     */
    public Optional<Output<String>> warehouseBucketUri() {
        return Optional.ofNullable(this.warehouseBucketUri);
    }

    private PipelineStepDetailStepDataflowConfigurationDetailsArgs() {}

    private PipelineStepDetailStepDataflowConfigurationDetailsArgs(PipelineStepDetailStepDataflowConfigurationDetailsArgs $) {
        this.configuration = $.configuration;
        this.driverShape = $.driverShape;
        this.driverShapeConfigDetails = $.driverShapeConfigDetails;
        this.executorShape = $.executorShape;
        this.executorShapeConfigDetails = $.executorShapeConfigDetails;
        this.logsBucketUri = $.logsBucketUri;
        this.numExecutors = $.numExecutors;
        this.warehouseBucketUri = $.warehouseBucketUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineStepDetailStepDataflowConfigurationDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineStepDetailStepDataflowConfigurationDetailsArgs $;

        public Builder() {
            $ = new PipelineStepDetailStepDataflowConfigurationDetailsArgs();
        }

        public Builder(PipelineStepDetailStepDataflowConfigurationDetailsArgs defaults) {
            $ = new PipelineStepDetailStepDataflowConfigurationDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration (Updatable) The Spark configuration passed to the running process.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<Map<String,String>> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration (Updatable) The Spark configuration passed to the running process.
         * 
         * @return builder
         * 
         */
        public Builder configuration(Map<String,String> configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param driverShape (Updatable) The VM shape for the driver.
         * 
         * @return builder
         * 
         */
        public Builder driverShape(@Nullable Output<String> driverShape) {
            $.driverShape = driverShape;
            return this;
        }

        /**
         * @param driverShape (Updatable) The VM shape for the driver.
         * 
         * @return builder
         * 
         */
        public Builder driverShape(String driverShape) {
            return driverShape(Output.of(driverShape));
        }

        /**
         * @param driverShapeConfigDetails (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
         * 
         * @return builder
         * 
         */
        public Builder driverShapeConfigDetails(@Nullable Output<PipelineStepDetailStepDataflowConfigurationDetailsDriverShapeConfigDetailsArgs> driverShapeConfigDetails) {
            $.driverShapeConfigDetails = driverShapeConfigDetails;
            return this;
        }

        /**
         * @param driverShapeConfigDetails (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
         * 
         * @return builder
         * 
         */
        public Builder driverShapeConfigDetails(PipelineStepDetailStepDataflowConfigurationDetailsDriverShapeConfigDetailsArgs driverShapeConfigDetails) {
            return driverShapeConfigDetails(Output.of(driverShapeConfigDetails));
        }

        /**
         * @param executorShape (Updatable) The VM shape for the executors.
         * 
         * @return builder
         * 
         */
        public Builder executorShape(@Nullable Output<String> executorShape) {
            $.executorShape = executorShape;
            return this;
        }

        /**
         * @param executorShape (Updatable) The VM shape for the executors.
         * 
         * @return builder
         * 
         */
        public Builder executorShape(String executorShape) {
            return executorShape(Output.of(executorShape));
        }

        /**
         * @param executorShapeConfigDetails (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
         * 
         * @return builder
         * 
         */
        public Builder executorShapeConfigDetails(@Nullable Output<PipelineStepDetailStepDataflowConfigurationDetailsExecutorShapeConfigDetailsArgs> executorShapeConfigDetails) {
            $.executorShapeConfigDetails = executorShapeConfigDetails;
            return this;
        }

        /**
         * @param executorShapeConfigDetails (Updatable) Details for the pipeline step run shape configuration. Specify only when a flex shape is selected.
         * 
         * @return builder
         * 
         */
        public Builder executorShapeConfigDetails(PipelineStepDetailStepDataflowConfigurationDetailsExecutorShapeConfigDetailsArgs executorShapeConfigDetails) {
            return executorShapeConfigDetails(Output.of(executorShapeConfigDetails));
        }

        /**
         * @param logsBucketUri (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded.
         * 
         * @return builder
         * 
         */
        public Builder logsBucketUri(@Nullable Output<String> logsBucketUri) {
            $.logsBucketUri = logsBucketUri;
            return this;
        }

        /**
         * @param logsBucketUri (Updatable) An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded.
         * 
         * @return builder
         * 
         */
        public Builder logsBucketUri(String logsBucketUri) {
            return logsBucketUri(Output.of(logsBucketUri));
        }

        /**
         * @param numExecutors (Updatable) The number of executor VMs requested.
         * 
         * @return builder
         * 
         */
        public Builder numExecutors(@Nullable Output<Integer> numExecutors) {
            $.numExecutors = numExecutors;
            return this;
        }

        /**
         * @param numExecutors (Updatable) The number of executor VMs requested.
         * 
         * @return builder
         * 
         */
        public Builder numExecutors(Integer numExecutors) {
            return numExecutors(Output.of(numExecutors));
        }

        /**
         * @param warehouseBucketUri (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs.
         * 
         * @return builder
         * 
         */
        public Builder warehouseBucketUri(@Nullable Output<String> warehouseBucketUri) {
            $.warehouseBucketUri = warehouseBucketUri;
            return this;
        }

        /**
         * @param warehouseBucketUri (Updatable) An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs.
         * 
         * @return builder
         * 
         */
        public Builder warehouseBucketUri(String warehouseBucketUri) {
            return warehouseBucketUri(Output.of(warehouseBucketUri));
        }

        public PipelineStepDetailStepDataflowConfigurationDetailsArgs build() {
            return $;
        }
    }

}
