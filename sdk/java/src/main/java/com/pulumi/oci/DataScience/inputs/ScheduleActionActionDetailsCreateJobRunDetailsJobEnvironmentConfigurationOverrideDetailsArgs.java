// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs Empty = new ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs();

    /**
     * (Updatable) The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
     * 
     */
    @Import(name="cmds")
    private @Nullable Output<List<String>> cmds;

    /**
     * @return (Updatable) The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
     * 
     */
    public Optional<Output<List<String>>> cmds() {
        return Optional.ofNullable(this.cmds);
    }

    /**
     * (Updatable) The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
     * 
     */
    @Import(name="entrypoints")
    private @Nullable Output<List<String>> entrypoints;

    /**
     * @return (Updatable) The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
     * 
     */
    public Optional<Output<List<String>>> entrypoints() {
        return Optional.ofNullable(this.entrypoints);
    }

    /**
     * (Updatable) The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format. Acceptable format: `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;` `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;{@literal @}digest`
     * 
     */
    @Import(name="image", required=true)
    private Output<String> image;

    /**
     * @return (Updatable) The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format. Acceptable format: `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;` `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;{@literal @}digest`
     * 
     */
    public Output<String> image() {
        return this.image;
    }

    /**
     * (Updatable) The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
     * 
     */
    @Import(name="imageDigest")
    private @Nullable Output<String> imageDigest;

    /**
     * @return (Updatable) The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
     * 
     */
    public Optional<Output<String>> imageDigest() {
        return Optional.ofNullable(this.imageDigest);
    }

    /**
     * (Updatable) OCID of the container image signature
     * 
     */
    @Import(name="imageSignatureId")
    private @Nullable Output<String> imageSignatureId;

    /**
     * @return (Updatable) OCID of the container image signature
     * 
     */
    public Optional<Output<String>> imageSignatureId() {
        return Optional.ofNullable(this.imageSignatureId);
    }

    /**
     * (Updatable) The environment configuration type used for job runtime.
     * 
     */
    @Import(name="jobEnvironmentType", required=true)
    private Output<String> jobEnvironmentType;

    /**
     * @return (Updatable) The environment configuration type used for job runtime.
     * 
     */
    public Output<String> jobEnvironmentType() {
        return this.jobEnvironmentType;
    }

    private ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs() {}

    private ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs(ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs $) {
        this.cmds = $.cmds;
        this.entrypoints = $.entrypoints;
        this.image = $.image;
        this.imageDigest = $.imageDigest;
        this.imageSignatureId = $.imageSignatureId;
        this.jobEnvironmentType = $.jobEnvironmentType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs $;

        public Builder() {
            $ = new ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs();
        }

        public Builder(ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs defaults) {
            $ = new ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cmds (Updatable) The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
         * 
         * @return builder
         * 
         */
        public Builder cmds(@Nullable Output<List<String>> cmds) {
            $.cmds = cmds;
            return this;
        }

        /**
         * @param cmds (Updatable) The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
         * 
         * @return builder
         * 
         */
        public Builder cmds(List<String> cmds) {
            return cmds(Output.of(cmds));
        }

        /**
         * @param cmds (Updatable) The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
         * 
         * @return builder
         * 
         */
        public Builder cmds(String... cmds) {
            return cmds(List.of(cmds));
        }

        /**
         * @param entrypoints (Updatable) The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
         * 
         * @return builder
         * 
         */
        public Builder entrypoints(@Nullable Output<List<String>> entrypoints) {
            $.entrypoints = entrypoints;
            return this;
        }

        /**
         * @param entrypoints (Updatable) The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
         * 
         * @return builder
         * 
         */
        public Builder entrypoints(List<String> entrypoints) {
            return entrypoints(Output.of(entrypoints));
        }

        /**
         * @param entrypoints (Updatable) The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
         * 
         * @return builder
         * 
         */
        public Builder entrypoints(String... entrypoints) {
            return entrypoints(List.of(entrypoints));
        }

        /**
         * @param image (Updatable) The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format. Acceptable format: `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;` `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;{@literal @}digest`
         * 
         * @return builder
         * 
         */
        public Builder image(Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image (Updatable) The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format. Acceptable format: `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;` `&lt;region&gt;.ocir.io/&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;{@literal @}digest`
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param imageDigest (Updatable) The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
         * 
         * @return builder
         * 
         */
        public Builder imageDigest(@Nullable Output<String> imageDigest) {
            $.imageDigest = imageDigest;
            return this;
        }

        /**
         * @param imageDigest (Updatable) The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
         * 
         * @return builder
         * 
         */
        public Builder imageDigest(String imageDigest) {
            return imageDigest(Output.of(imageDigest));
        }

        /**
         * @param imageSignatureId (Updatable) OCID of the container image signature
         * 
         * @return builder
         * 
         */
        public Builder imageSignatureId(@Nullable Output<String> imageSignatureId) {
            $.imageSignatureId = imageSignatureId;
            return this;
        }

        /**
         * @param imageSignatureId (Updatable) OCID of the container image signature
         * 
         * @return builder
         * 
         */
        public Builder imageSignatureId(String imageSignatureId) {
            return imageSignatureId(Output.of(imageSignatureId));
        }

        /**
         * @param jobEnvironmentType (Updatable) The environment configuration type used for job runtime.
         * 
         * @return builder
         * 
         */
        public Builder jobEnvironmentType(Output<String> jobEnvironmentType) {
            $.jobEnvironmentType = jobEnvironmentType;
            return this;
        }

        /**
         * @param jobEnvironmentType (Updatable) The environment configuration type used for job runtime.
         * 
         * @return builder
         * 
         */
        public Builder jobEnvironmentType(String jobEnvironmentType) {
            return jobEnvironmentType(Output.of(jobEnvironmentType));
        }

        public ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs build() {
            if ($.image == null) {
                throw new MissingRequiredPropertyException("ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs", "image");
            }
            if ($.jobEnvironmentType == null) {
                throw new MissingRequiredPropertyException("ScheduleActionActionDetailsCreateJobRunDetailsJobEnvironmentConfigurationOverrideDetailsArgs", "jobEnvironmentType");
            }
            return $;
        }
    }

}
