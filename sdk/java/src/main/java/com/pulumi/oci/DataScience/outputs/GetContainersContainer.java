// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetContainersContainerTagConfigurationList;
import com.pulumi.oci.DataScience.outputs.GetContainersContainerWorkloadConfigurationDetailsList;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetContainersContainer {
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the container name.
     * 
     */
    private String containerName;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of the container.
     * 
     */
    private String description;
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
     * 
     */
    private String displayName;
    /**
     * @return The family name of the container.
     * 
     */
    private String familyName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return if true, this returns latest version of container.
     * 
     */
    private Boolean isLatest;
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private String state;
    /**
     * @return Container Tag.
     * 
     */
    private String tag;
    /**
     * @return An array of defined metadata details for the model.
     * 
     */
    private List<GetContainersContainerTagConfigurationList> tagConfigurationLists;
    /**
     * @return The list of target workload. This Container can be used with given data science resources.
     * 
     */
    private List<String> targetWorkloads;
    /**
     * @return The list of usages of this container. This Container can be used for given use-cases.
     * 
     */
    private List<String> usages;
    /**
     * @return workload configuration of the container.
     * 
     */
    private List<GetContainersContainerWorkloadConfigurationDetailsList> workloadConfigurationDetailsLists;

    private GetContainersContainer() {}
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the container name.
     * 
     */
    public String containerName() {
        return this.containerName;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the container.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by its user-friendly name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The family name of the container.
     * 
     */
    public String familyName() {
        return this.familyName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return if true, this returns latest version of container.
     * 
     */
    public Boolean isLatest() {
        return this.isLatest;
    }
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Container Tag.
     * 
     */
    public String tag() {
        return this.tag;
    }
    /**
     * @return An array of defined metadata details for the model.
     * 
     */
    public List<GetContainersContainerTagConfigurationList> tagConfigurationLists() {
        return this.tagConfigurationLists;
    }
    /**
     * @return The list of target workload. This Container can be used with given data science resources.
     * 
     */
    public List<String> targetWorkloads() {
        return this.targetWorkloads;
    }
    /**
     * @return The list of usages of this container. This Container can be used for given use-cases.
     * 
     */
    public List<String> usages() {
        return this.usages;
    }
    /**
     * @return workload configuration of the container.
     * 
     */
    public List<GetContainersContainerWorkloadConfigurationDetailsList> workloadConfigurationDetailsLists() {
        return this.workloadConfigurationDetailsLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainersContainer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String containerName;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private String familyName;
        private Map<String,String> freeformTags;
        private Boolean isLatest;
        private String state;
        private String tag;
        private List<GetContainersContainerTagConfigurationList> tagConfigurationLists;
        private List<String> targetWorkloads;
        private List<String> usages;
        private List<GetContainersContainerWorkloadConfigurationDetailsList> workloadConfigurationDetailsLists;
        public Builder() {}
        public Builder(GetContainersContainer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerName = defaults.containerName;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.familyName = defaults.familyName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.isLatest = defaults.isLatest;
    	      this.state = defaults.state;
    	      this.tag = defaults.tag;
    	      this.tagConfigurationLists = defaults.tagConfigurationLists;
    	      this.targetWorkloads = defaults.targetWorkloads;
    	      this.usages = defaults.usages;
    	      this.workloadConfigurationDetailsLists = defaults.workloadConfigurationDetailsLists;
        }

        @CustomType.Setter
        public Builder containerName(String containerName) {
            if (containerName == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "containerName");
            }
            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder familyName(String familyName) {
            if (familyName == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "familyName");
            }
            this.familyName = familyName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder isLatest(Boolean isLatest) {
            if (isLatest == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "isLatest");
            }
            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "tag");
            }
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder tagConfigurationLists(List<GetContainersContainerTagConfigurationList> tagConfigurationLists) {
            if (tagConfigurationLists == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "tagConfigurationLists");
            }
            this.tagConfigurationLists = tagConfigurationLists;
            return this;
        }
        public Builder tagConfigurationLists(GetContainersContainerTagConfigurationList... tagConfigurationLists) {
            return tagConfigurationLists(List.of(tagConfigurationLists));
        }
        @CustomType.Setter
        public Builder targetWorkloads(List<String> targetWorkloads) {
            if (targetWorkloads == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "targetWorkloads");
            }
            this.targetWorkloads = targetWorkloads;
            return this;
        }
        public Builder targetWorkloads(String... targetWorkloads) {
            return targetWorkloads(List.of(targetWorkloads));
        }
        @CustomType.Setter
        public Builder usages(List<String> usages) {
            if (usages == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "usages");
            }
            this.usages = usages;
            return this;
        }
        public Builder usages(String... usages) {
            return usages(List.of(usages));
        }
        @CustomType.Setter
        public Builder workloadConfigurationDetailsLists(List<GetContainersContainerWorkloadConfigurationDetailsList> workloadConfigurationDetailsLists) {
            if (workloadConfigurationDetailsLists == null) {
              throw new MissingRequiredPropertyException("GetContainersContainer", "workloadConfigurationDetailsLists");
            }
            this.workloadConfigurationDetailsLists = workloadConfigurationDetailsLists;
            return this;
        }
        public Builder workloadConfigurationDetailsLists(GetContainersContainerWorkloadConfigurationDetailsList... workloadConfigurationDetailsLists) {
            return workloadConfigurationDetailsLists(List.of(workloadConfigurationDetailsLists));
        }
        public GetContainersContainer build() {
            final var _resultValue = new GetContainersContainer();
            _resultValue.containerName = containerName;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.familyName = familyName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.isLatest = isLatest;
            _resultValue.state = state;
            _resultValue.tag = tag;
            _resultValue.tagConfigurationLists = tagConfigurationLists;
            _resultValue.targetWorkloads = targetWorkloads;
            _resultValue.usages = usages;
            _resultValue.workloadConfigurationDetailsLists = workloadConfigurationDetailsLists;
            return _resultValue;
        }
    }
}
