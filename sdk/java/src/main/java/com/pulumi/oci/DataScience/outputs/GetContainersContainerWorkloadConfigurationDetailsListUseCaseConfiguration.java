// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration {
    /**
     * @return The additional configurations
     * 
     */
    private Map<String,String> additionalConfigurations;
    /**
     * @return The job-run use-case.
     * 
     */
    private String useCaseType;

    private GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration() {}
    /**
     * @return The additional configurations
     * 
     */
    public Map<String,String> additionalConfigurations() {
        return this.additionalConfigurations;
    }
    /**
     * @return The job-run use-case.
     * 
     */
    public String useCaseType() {
        return this.useCaseType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> additionalConfigurations;
        private String useCaseType;
        public Builder() {}
        public Builder(GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalConfigurations = defaults.additionalConfigurations;
    	      this.useCaseType = defaults.useCaseType;
        }

        @CustomType.Setter
        public Builder additionalConfigurations(Map<String,String> additionalConfigurations) {
            if (additionalConfigurations == null) {
              throw new MissingRequiredPropertyException("GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration", "additionalConfigurations");
            }
            this.additionalConfigurations = additionalConfigurations;
            return this;
        }
        @CustomType.Setter
        public Builder useCaseType(String useCaseType) {
            if (useCaseType == null) {
              throw new MissingRequiredPropertyException("GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration", "useCaseType");
            }
            this.useCaseType = useCaseType;
            return this;
        }
        public GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration build() {
            final var _resultValue = new GetContainersContainerWorkloadConfigurationDetailsListUseCaseConfiguration();
            _resultValue.additionalConfigurations = additionalConfigurations;
            _resultValue.useCaseType = useCaseType;
            return _resultValue;
        }
    }
}
