// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetail;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList {
    /**
     * @return The job configuration details
     * 
     */
    private List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetail> jobConfigurationDetails;
    /**
     * @return Environment configuration to capture job runtime dependencies.
     * 
     */
    private List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails;
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    private List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
    /**
     * @return The minimum threshold of successful replicas for node group to be successful. All replicas need to succeed if this is not specified.
     * 
     */
    private Integer minimumSuccessReplicas;
    /**
     * @return node group name.
     * 
     */
    private String name;
    /**
     * @return The number of nodes.
     * 
     */
    private Integer replicas;

    private GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList() {}
    /**
     * @return The job configuration details
     * 
     */
    public List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetail> jobConfigurationDetails() {
        return this.jobConfigurationDetails;
    }
    /**
     * @return Environment configuration to capture job runtime dependencies.
     * 
     */
    public List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails() {
        return this.jobEnvironmentConfigurationDetails;
    }
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    public List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails() {
        return this.jobInfrastructureConfigurationDetails;
    }
    /**
     * @return The minimum threshold of successful replicas for node group to be successful. All replicas need to succeed if this is not specified.
     * 
     */
    public Integer minimumSuccessReplicas() {
        return this.minimumSuccessReplicas;
    }
    /**
     * @return node group name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of nodes.
     * 
     */
    public Integer replicas() {
        return this.replicas;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetail> jobConfigurationDetails;
        private List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails;
        private List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
        private Integer minimumSuccessReplicas;
        private String name;
        private Integer replicas;
        public Builder() {}
        public Builder(GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobConfigurationDetails = defaults.jobConfigurationDetails;
    	      this.jobEnvironmentConfigurationDetails = defaults.jobEnvironmentConfigurationDetails;
    	      this.jobInfrastructureConfigurationDetails = defaults.jobInfrastructureConfigurationDetails;
    	      this.minimumSuccessReplicas = defaults.minimumSuccessReplicas;
    	      this.name = defaults.name;
    	      this.replicas = defaults.replicas;
        }

        @CustomType.Setter
        public Builder jobConfigurationDetails(List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetail> jobConfigurationDetails) {
            if (jobConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList", "jobConfigurationDetails");
            }
            this.jobConfigurationDetails = jobConfigurationDetails;
            return this;
        }
        public Builder jobConfigurationDetails(GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetail... jobConfigurationDetails) {
            return jobConfigurationDetails(List.of(jobConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobEnvironmentConfigurationDetails(List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails) {
            if (jobEnvironmentConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList", "jobEnvironmentConfigurationDetails");
            }
            this.jobEnvironmentConfigurationDetails = jobEnvironmentConfigurationDetails;
            return this;
        }
        public Builder jobEnvironmentConfigurationDetails(GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobEnvironmentConfigurationDetail... jobEnvironmentConfigurationDetails) {
            return jobEnvironmentConfigurationDetails(List.of(jobEnvironmentConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobInfrastructureConfigurationDetails(List<GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails) {
            if (jobInfrastructureConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList", "jobInfrastructureConfigurationDetails");
            }
            this.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            return this;
        }
        public Builder jobInfrastructureConfigurationDetails(GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobInfrastructureConfigurationDetail... jobInfrastructureConfigurationDetails) {
            return jobInfrastructureConfigurationDetails(List.of(jobInfrastructureConfigurationDetails));
        }
        @CustomType.Setter
        public Builder minimumSuccessReplicas(Integer minimumSuccessReplicas) {
            if (minimumSuccessReplicas == null) {
              throw new MissingRequiredPropertyException("GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList", "minimumSuccessReplicas");
            }
            this.minimumSuccessReplicas = minimumSuccessReplicas;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder replicas(Integer replicas) {
            if (replicas == null) {
              throw new MissingRequiredPropertyException("GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList", "replicas");
            }
            this.replicas = replicas;
            return this;
        }
        public GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList build() {
            final var _resultValue = new GetJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsList();
            _resultValue.jobConfigurationDetails = jobConfigurationDetails;
            _resultValue.jobEnvironmentConfigurationDetails = jobEnvironmentConfigurationDetails;
            _resultValue.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            _resultValue.minimumSuccessReplicas = minimumSuccessReplicas;
            _resultValue.name = name;
            _resultValue.replicas = replicas;
            return _resultValue;
        }
    }
}
