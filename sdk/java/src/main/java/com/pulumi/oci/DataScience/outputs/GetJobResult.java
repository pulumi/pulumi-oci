// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetJobJobConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobJobEnvironmentConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobJobInfrastructureConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobJobLogConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobJobNodeConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobJobStorageMountConfigurationDetailsList;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetJobResult {
    private String artifactContentDisposition;
    private String artifactContentLength;
    private String artifactContentMd5;
    private String artifactLastModified;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job.
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the project.
     * 
     */
    private String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    private Boolean deleteRelatedJobRuns;
    /**
     * @return A short description of the job.
     * 
     */
    private String description;
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    private String displayName;
    private Boolean emptyArtifact;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
     * 
     */
    private String id;
    private String jobArtifact;
    /**
     * @return The job configuration details
     * 
     */
    private List<GetJobJobConfigurationDetail> jobConfigurationDetails;
    /**
     * @return Environment configuration to capture job runtime dependencies.
     * 
     */
    private List<GetJobJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails;
    private String jobId;
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    private List<GetJobJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
    /**
     * @return Logging configuration for resource.
     * 
     */
    private List<GetJobJobLogConfigurationDetail> jobLogConfigurationDetails;
    /**
     * @return The job node configuration details
     * 
     */
    private List<GetJobJobNodeConfigurationDetail> jobNodeConfigurationDetails;
    /**
     * @return Collection of JobStorageMountConfigurationDetails.
     * 
     */
    private List<GetJobJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists;
    /**
     * @return The state of the job.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
     * 
     */
    private String projectId;
    /**
     * @return The state of the job.
     * 
     */
    private String state;
    /**
     * @return The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2020-08-06T21:10:29.41Z
     * 
     */
    private String timeCreated;

    private GetJobResult() {}
    public String artifactContentDisposition() {
        return this.artifactContentDisposition;
    }
    public String artifactContentLength() {
        return this.artifactContentLength;
    }
    public String artifactContentMd5() {
        return this.artifactContentMd5;
    }
    public String artifactLastModified() {
        return this.artifactLastModified;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the project.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    public Boolean deleteRelatedJobRuns() {
        return this.deleteRelatedJobRuns;
    }
    /**
     * @return A short description of the job.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public Boolean emptyArtifact() {
        return this.emptyArtifact;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
     * 
     */
    public String id() {
        return this.id;
    }
    public String jobArtifact() {
        return this.jobArtifact;
    }
    /**
     * @return The job configuration details
     * 
     */
    public List<GetJobJobConfigurationDetail> jobConfigurationDetails() {
        return this.jobConfigurationDetails;
    }
    /**
     * @return Environment configuration to capture job runtime dependencies.
     * 
     */
    public List<GetJobJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails() {
        return this.jobEnvironmentConfigurationDetails;
    }
    public String jobId() {
        return this.jobId;
    }
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    public List<GetJobJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails() {
        return this.jobInfrastructureConfigurationDetails;
    }
    /**
     * @return Logging configuration for resource.
     * 
     */
    public List<GetJobJobLogConfigurationDetail> jobLogConfigurationDetails() {
        return this.jobLogConfigurationDetails;
    }
    /**
     * @return The job node configuration details
     * 
     */
    public List<GetJobJobNodeConfigurationDetail> jobNodeConfigurationDetails() {
        return this.jobNodeConfigurationDetails;
    }
    /**
     * @return Collection of JobStorageMountConfigurationDetails.
     * 
     */
    public List<GetJobJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists() {
        return this.jobStorageMountConfigurationDetailsLists;
    }
    /**
     * @return The state of the job.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The state of the job.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the resource was created in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: 2020-08-06T21:10:29.41Z
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String artifactContentDisposition;
        private String artifactContentLength;
        private String artifactContentMd5;
        private String artifactLastModified;
        private String compartmentId;
        private String createdBy;
        private Map<String,String> definedTags;
        private Boolean deleteRelatedJobRuns;
        private String description;
        private String displayName;
        private Boolean emptyArtifact;
        private Map<String,String> freeformTags;
        private String id;
        private String jobArtifact;
        private List<GetJobJobConfigurationDetail> jobConfigurationDetails;
        private List<GetJobJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails;
        private String jobId;
        private List<GetJobJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
        private List<GetJobJobLogConfigurationDetail> jobLogConfigurationDetails;
        private List<GetJobJobNodeConfigurationDetail> jobNodeConfigurationDetails;
        private List<GetJobJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists;
        private String lifecycleDetails;
        private String projectId;
        private String state;
        private String timeCreated;
        public Builder() {}
        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactContentDisposition = defaults.artifactContentDisposition;
    	      this.artifactContentLength = defaults.artifactContentLength;
    	      this.artifactContentMd5 = defaults.artifactContentMd5;
    	      this.artifactLastModified = defaults.artifactLastModified;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.deleteRelatedJobRuns = defaults.deleteRelatedJobRuns;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.emptyArtifact = defaults.emptyArtifact;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.jobArtifact = defaults.jobArtifact;
    	      this.jobConfigurationDetails = defaults.jobConfigurationDetails;
    	      this.jobEnvironmentConfigurationDetails = defaults.jobEnvironmentConfigurationDetails;
    	      this.jobId = defaults.jobId;
    	      this.jobInfrastructureConfigurationDetails = defaults.jobInfrastructureConfigurationDetails;
    	      this.jobLogConfigurationDetails = defaults.jobLogConfigurationDetails;
    	      this.jobNodeConfigurationDetails = defaults.jobNodeConfigurationDetails;
    	      this.jobStorageMountConfigurationDetailsLists = defaults.jobStorageMountConfigurationDetailsLists;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder artifactContentDisposition(String artifactContentDisposition) {
            if (artifactContentDisposition == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "artifactContentDisposition");
            }
            this.artifactContentDisposition = artifactContentDisposition;
            return this;
        }
        @CustomType.Setter
        public Builder artifactContentLength(String artifactContentLength) {
            if (artifactContentLength == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "artifactContentLength");
            }
            this.artifactContentLength = artifactContentLength;
            return this;
        }
        @CustomType.Setter
        public Builder artifactContentMd5(String artifactContentMd5) {
            if (artifactContentMd5 == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "artifactContentMd5");
            }
            this.artifactContentMd5 = artifactContentMd5;
            return this;
        }
        @CustomType.Setter
        public Builder artifactLastModified(String artifactLastModified) {
            if (artifactLastModified == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "artifactLastModified");
            }
            this.artifactLastModified = artifactLastModified;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deleteRelatedJobRuns(Boolean deleteRelatedJobRuns) {
            if (deleteRelatedJobRuns == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "deleteRelatedJobRuns");
            }
            this.deleteRelatedJobRuns = deleteRelatedJobRuns;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder emptyArtifact(Boolean emptyArtifact) {
            if (emptyArtifact == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "emptyArtifact");
            }
            this.emptyArtifact = emptyArtifact;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jobArtifact(String jobArtifact) {
            if (jobArtifact == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobArtifact");
            }
            this.jobArtifact = jobArtifact;
            return this;
        }
        @CustomType.Setter
        public Builder jobConfigurationDetails(List<GetJobJobConfigurationDetail> jobConfigurationDetails) {
            if (jobConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobConfigurationDetails");
            }
            this.jobConfigurationDetails = jobConfigurationDetails;
            return this;
        }
        public Builder jobConfigurationDetails(GetJobJobConfigurationDetail... jobConfigurationDetails) {
            return jobConfigurationDetails(List.of(jobConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobEnvironmentConfigurationDetails(List<GetJobJobEnvironmentConfigurationDetail> jobEnvironmentConfigurationDetails) {
            if (jobEnvironmentConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobEnvironmentConfigurationDetails");
            }
            this.jobEnvironmentConfigurationDetails = jobEnvironmentConfigurationDetails;
            return this;
        }
        public Builder jobEnvironmentConfigurationDetails(GetJobJobEnvironmentConfigurationDetail... jobEnvironmentConfigurationDetails) {
            return jobEnvironmentConfigurationDetails(List.of(jobEnvironmentConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobId(String jobId) {
            if (jobId == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobId");
            }
            this.jobId = jobId;
            return this;
        }
        @CustomType.Setter
        public Builder jobInfrastructureConfigurationDetails(List<GetJobJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails) {
            if (jobInfrastructureConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobInfrastructureConfigurationDetails");
            }
            this.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            return this;
        }
        public Builder jobInfrastructureConfigurationDetails(GetJobJobInfrastructureConfigurationDetail... jobInfrastructureConfigurationDetails) {
            return jobInfrastructureConfigurationDetails(List.of(jobInfrastructureConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobLogConfigurationDetails(List<GetJobJobLogConfigurationDetail> jobLogConfigurationDetails) {
            if (jobLogConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobLogConfigurationDetails");
            }
            this.jobLogConfigurationDetails = jobLogConfigurationDetails;
            return this;
        }
        public Builder jobLogConfigurationDetails(GetJobJobLogConfigurationDetail... jobLogConfigurationDetails) {
            return jobLogConfigurationDetails(List.of(jobLogConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobNodeConfigurationDetails(List<GetJobJobNodeConfigurationDetail> jobNodeConfigurationDetails) {
            if (jobNodeConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobNodeConfigurationDetails");
            }
            this.jobNodeConfigurationDetails = jobNodeConfigurationDetails;
            return this;
        }
        public Builder jobNodeConfigurationDetails(GetJobJobNodeConfigurationDetail... jobNodeConfigurationDetails) {
            return jobNodeConfigurationDetails(List.of(jobNodeConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobStorageMountConfigurationDetailsLists(List<GetJobJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists) {
            if (jobStorageMountConfigurationDetailsLists == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "jobStorageMountConfigurationDetailsLists");
            }
            this.jobStorageMountConfigurationDetailsLists = jobStorageMountConfigurationDetailsLists;
            return this;
        }
        public Builder jobStorageMountConfigurationDetailsLists(GetJobJobStorageMountConfigurationDetailsList... jobStorageMountConfigurationDetailsLists) {
            return jobStorageMountConfigurationDetailsLists(List.of(jobStorageMountConfigurationDetailsLists));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetJobResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetJobResult build() {
            final var _resultValue = new GetJobResult();
            _resultValue.artifactContentDisposition = artifactContentDisposition;
            _resultValue.artifactContentLength = artifactContentLength;
            _resultValue.artifactContentMd5 = artifactContentMd5;
            _resultValue.artifactLastModified = artifactLastModified;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createdBy = createdBy;
            _resultValue.definedTags = definedTags;
            _resultValue.deleteRelatedJobRuns = deleteRelatedJobRuns;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.emptyArtifact = emptyArtifact;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.jobArtifact = jobArtifact;
            _resultValue.jobConfigurationDetails = jobConfigurationDetails;
            _resultValue.jobEnvironmentConfigurationDetails = jobEnvironmentConfigurationDetails;
            _resultValue.jobId = jobId;
            _resultValue.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            _resultValue.jobLogConfigurationDetails = jobLogConfigurationDetails;
            _resultValue.jobNodeConfigurationDetails = jobNodeConfigurationDetails;
            _resultValue.jobStorageMountConfigurationDetailsLists = jobStorageMountConfigurationDetailsLists;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.projectId = projectId;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
