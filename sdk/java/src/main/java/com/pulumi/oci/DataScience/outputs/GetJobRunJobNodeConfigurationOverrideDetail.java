// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobNodeConfigurationOverrideDetailJobNetworkConfiguration;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobNodeConfigurationOverrideDetailJobNodeGroupConfigurationDetailsList;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobRunJobNodeConfigurationOverrideDetail {
    /**
     * @return The job network configuration details
     * 
     */
    private List<GetJobRunJobNodeConfigurationOverrideDetailJobNetworkConfiguration> jobNetworkConfigurations;
    /**
     * @return List of JobNodeGroupConfigurationDetails
     * 
     */
    private List<GetJobRunJobNodeConfigurationOverrideDetailJobNodeGroupConfigurationDetailsList> jobNodeGroupConfigurationDetailsLists;
    /**
     * @return The node type used for job run.
     * 
     */
    private String jobNodeType;
    /**
     * @return A time bound for the execution of the job run. Timer starts when the job run is in progress.
     * 
     */
    private String maximumRuntimeInMinutes;
    /**
     * @return The execution order of node groups
     * 
     */
    private String startupOrder;

    private GetJobRunJobNodeConfigurationOverrideDetail() {}
    /**
     * @return The job network configuration details
     * 
     */
    public List<GetJobRunJobNodeConfigurationOverrideDetailJobNetworkConfiguration> jobNetworkConfigurations() {
        return this.jobNetworkConfigurations;
    }
    /**
     * @return List of JobNodeGroupConfigurationDetails
     * 
     */
    public List<GetJobRunJobNodeConfigurationOverrideDetailJobNodeGroupConfigurationDetailsList> jobNodeGroupConfigurationDetailsLists() {
        return this.jobNodeGroupConfigurationDetailsLists;
    }
    /**
     * @return The node type used for job run.
     * 
     */
    public String jobNodeType() {
        return this.jobNodeType;
    }
    /**
     * @return A time bound for the execution of the job run. Timer starts when the job run is in progress.
     * 
     */
    public String maximumRuntimeInMinutes() {
        return this.maximumRuntimeInMinutes;
    }
    /**
     * @return The execution order of node groups
     * 
     */
    public String startupOrder() {
        return this.startupOrder;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobRunJobNodeConfigurationOverrideDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetJobRunJobNodeConfigurationOverrideDetailJobNetworkConfiguration> jobNetworkConfigurations;
        private List<GetJobRunJobNodeConfigurationOverrideDetailJobNodeGroupConfigurationDetailsList> jobNodeGroupConfigurationDetailsLists;
        private String jobNodeType;
        private String maximumRuntimeInMinutes;
        private String startupOrder;
        public Builder() {}
        public Builder(GetJobRunJobNodeConfigurationOverrideDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobNetworkConfigurations = defaults.jobNetworkConfigurations;
    	      this.jobNodeGroupConfigurationDetailsLists = defaults.jobNodeGroupConfigurationDetailsLists;
    	      this.jobNodeType = defaults.jobNodeType;
    	      this.maximumRuntimeInMinutes = defaults.maximumRuntimeInMinutes;
    	      this.startupOrder = defaults.startupOrder;
        }

        @CustomType.Setter
        public Builder jobNetworkConfigurations(List<GetJobRunJobNodeConfigurationOverrideDetailJobNetworkConfiguration> jobNetworkConfigurations) {
            if (jobNetworkConfigurations == null) {
              throw new MissingRequiredPropertyException("GetJobRunJobNodeConfigurationOverrideDetail", "jobNetworkConfigurations");
            }
            this.jobNetworkConfigurations = jobNetworkConfigurations;
            return this;
        }
        public Builder jobNetworkConfigurations(GetJobRunJobNodeConfigurationOverrideDetailJobNetworkConfiguration... jobNetworkConfigurations) {
            return jobNetworkConfigurations(List.of(jobNetworkConfigurations));
        }
        @CustomType.Setter
        public Builder jobNodeGroupConfigurationDetailsLists(List<GetJobRunJobNodeConfigurationOverrideDetailJobNodeGroupConfigurationDetailsList> jobNodeGroupConfigurationDetailsLists) {
            if (jobNodeGroupConfigurationDetailsLists == null) {
              throw new MissingRequiredPropertyException("GetJobRunJobNodeConfigurationOverrideDetail", "jobNodeGroupConfigurationDetailsLists");
            }
            this.jobNodeGroupConfigurationDetailsLists = jobNodeGroupConfigurationDetailsLists;
            return this;
        }
        public Builder jobNodeGroupConfigurationDetailsLists(GetJobRunJobNodeConfigurationOverrideDetailJobNodeGroupConfigurationDetailsList... jobNodeGroupConfigurationDetailsLists) {
            return jobNodeGroupConfigurationDetailsLists(List.of(jobNodeGroupConfigurationDetailsLists));
        }
        @CustomType.Setter
        public Builder jobNodeType(String jobNodeType) {
            if (jobNodeType == null) {
              throw new MissingRequiredPropertyException("GetJobRunJobNodeConfigurationOverrideDetail", "jobNodeType");
            }
            this.jobNodeType = jobNodeType;
            return this;
        }
        @CustomType.Setter
        public Builder maximumRuntimeInMinutes(String maximumRuntimeInMinutes) {
            if (maximumRuntimeInMinutes == null) {
              throw new MissingRequiredPropertyException("GetJobRunJobNodeConfigurationOverrideDetail", "maximumRuntimeInMinutes");
            }
            this.maximumRuntimeInMinutes = maximumRuntimeInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder startupOrder(String startupOrder) {
            if (startupOrder == null) {
              throw new MissingRequiredPropertyException("GetJobRunJobNodeConfigurationOverrideDetail", "startupOrder");
            }
            this.startupOrder = startupOrder;
            return this;
        }
        public GetJobRunJobNodeConfigurationOverrideDetail build() {
            final var _resultValue = new GetJobRunJobNodeConfigurationOverrideDetail();
            _resultValue.jobNetworkConfigurations = jobNetworkConfigurations;
            _resultValue.jobNodeGroupConfigurationDetailsLists = jobNodeGroupConfigurationDetailsLists;
            _resultValue.jobNodeType = jobNodeType;
            _resultValue.maximumRuntimeInMinutes = maximumRuntimeInMinutes;
            _resultValue.startupOrder = startupOrder;
            return _resultValue;
        }
    }
}
