// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobConfigurationOverrideDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobEnvironmentConfigurationOverrideDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobInfrastructureConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobInfrastructureConfigurationOverrideDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobLogConfigurationOverrideDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobNodeConfigurationOverrideDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobStorageMountConfigurationDetailsList;
import com.pulumi.oci.DataScience.outputs.GetJobRunLogDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunNodeGroupDetailsList;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetJobRunResult {
    private Boolean asynchronous;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job run.
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the job run.
     * 
     */
    private String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
     * 
     */
    private String id;
    /**
     * @return The job configuration details
     * 
     */
    private List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails;
    /**
     * @return Environment configuration to capture job runtime dependencies.
     * 
     */
    private List<GetJobRunJobEnvironmentConfigurationOverrideDetail> jobEnvironmentConfigurationOverrideDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
     * 
     */
    private String jobId;
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    private List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    private List<GetJobRunJobInfrastructureConfigurationOverrideDetail> jobInfrastructureConfigurationOverrideDetails;
    /**
     * @return Logging configuration for resource.
     * 
     */
    private List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails;
    /**
     * @return The job node configuration details
     * 
     */
    private List<GetJobRunJobNodeConfigurationOverrideDetail> jobNodeConfigurationOverrideDetails;
    private String jobRunId;
    /**
     * @return Collection of JobStorageMountConfigurationDetails.
     * 
     */
    private List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists;
    /**
     * @return The state details of the node group.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Customer logging details for job run.
     * 
     */
    private List<GetJobRunLogDetail> logDetails;
    /**
     * @return Collection of NodeGroupDetails
     * 
     */
    private List<GetJobRunNodeGroupDetailsList> nodeGroupDetailsLists;
    private String opcParentRptUrl;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job run with.
     * 
     */
    private String projectId;
    /**
     * @return The state of the job run.
     * 
     */
    private String state;
    /**
     * @return The date and time the job run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeAccepted;
    /**
     * @return The date and time the job run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeFinished;
    /**
     * @return The date and time the job run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeStarted;

    private GetJobRunResult() {}
    public Boolean asynchronous() {
        return this.asynchronous;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job run.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the job run.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The job configuration details
     * 
     */
    public List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails() {
        return this.jobConfigurationOverrideDetails;
    }
    /**
     * @return Environment configuration to capture job runtime dependencies.
     * 
     */
    public List<GetJobRunJobEnvironmentConfigurationOverrideDetail> jobEnvironmentConfigurationOverrideDetails() {
        return this.jobEnvironmentConfigurationOverrideDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
     * 
     */
    public String jobId() {
        return this.jobId;
    }
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    public List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails() {
        return this.jobInfrastructureConfigurationDetails;
    }
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    public List<GetJobRunJobInfrastructureConfigurationOverrideDetail> jobInfrastructureConfigurationOverrideDetails() {
        return this.jobInfrastructureConfigurationOverrideDetails;
    }
    /**
     * @return Logging configuration for resource.
     * 
     */
    public List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails() {
        return this.jobLogConfigurationOverrideDetails;
    }
    /**
     * @return The job node configuration details
     * 
     */
    public List<GetJobRunJobNodeConfigurationOverrideDetail> jobNodeConfigurationOverrideDetails() {
        return this.jobNodeConfigurationOverrideDetails;
    }
    public String jobRunId() {
        return this.jobRunId;
    }
    /**
     * @return Collection of JobStorageMountConfigurationDetails.
     * 
     */
    public List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists() {
        return this.jobStorageMountConfigurationDetailsLists;
    }
    /**
     * @return The state details of the node group.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Customer logging details for job run.
     * 
     */
    public List<GetJobRunLogDetail> logDetails() {
        return this.logDetails;
    }
    /**
     * @return Collection of NodeGroupDetails
     * 
     */
    public List<GetJobRunNodeGroupDetailsList> nodeGroupDetailsLists() {
        return this.nodeGroupDetailsLists;
    }
    public String opcParentRptUrl() {
        return this.opcParentRptUrl;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job run with.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The state of the job run.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the job run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeAccepted() {
        return this.timeAccepted;
    }
    /**
     * @return The date and time the job run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return The date and time the job run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobRunResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean asynchronous;
        private String compartmentId;
        private String createdBy;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails;
        private List<GetJobRunJobEnvironmentConfigurationOverrideDetail> jobEnvironmentConfigurationOverrideDetails;
        private String jobId;
        private List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
        private List<GetJobRunJobInfrastructureConfigurationOverrideDetail> jobInfrastructureConfigurationOverrideDetails;
        private List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails;
        private List<GetJobRunJobNodeConfigurationOverrideDetail> jobNodeConfigurationOverrideDetails;
        private String jobRunId;
        private List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists;
        private String lifecycleDetails;
        private List<GetJobRunLogDetail> logDetails;
        private List<GetJobRunNodeGroupDetailsList> nodeGroupDetailsLists;
        private String opcParentRptUrl;
        private String projectId;
        private String state;
        private String timeAccepted;
        private String timeFinished;
        private String timeStarted;
        public Builder() {}
        public Builder(GetJobRunResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asynchronous = defaults.asynchronous;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.jobConfigurationOverrideDetails = defaults.jobConfigurationOverrideDetails;
    	      this.jobEnvironmentConfigurationOverrideDetails = defaults.jobEnvironmentConfigurationOverrideDetails;
    	      this.jobId = defaults.jobId;
    	      this.jobInfrastructureConfigurationDetails = defaults.jobInfrastructureConfigurationDetails;
    	      this.jobInfrastructureConfigurationOverrideDetails = defaults.jobInfrastructureConfigurationOverrideDetails;
    	      this.jobLogConfigurationOverrideDetails = defaults.jobLogConfigurationOverrideDetails;
    	      this.jobNodeConfigurationOverrideDetails = defaults.jobNodeConfigurationOverrideDetails;
    	      this.jobRunId = defaults.jobRunId;
    	      this.jobStorageMountConfigurationDetailsLists = defaults.jobStorageMountConfigurationDetailsLists;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.logDetails = defaults.logDetails;
    	      this.nodeGroupDetailsLists = defaults.nodeGroupDetailsLists;
    	      this.opcParentRptUrl = defaults.opcParentRptUrl;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder asynchronous(Boolean asynchronous) {
            if (asynchronous == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "asynchronous");
            }
            this.asynchronous = asynchronous;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jobConfigurationOverrideDetails(List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails) {
            if (jobConfigurationOverrideDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobConfigurationOverrideDetails");
            }
            this.jobConfigurationOverrideDetails = jobConfigurationOverrideDetails;
            return this;
        }
        public Builder jobConfigurationOverrideDetails(GetJobRunJobConfigurationOverrideDetail... jobConfigurationOverrideDetails) {
            return jobConfigurationOverrideDetails(List.of(jobConfigurationOverrideDetails));
        }
        @CustomType.Setter
        public Builder jobEnvironmentConfigurationOverrideDetails(List<GetJobRunJobEnvironmentConfigurationOverrideDetail> jobEnvironmentConfigurationOverrideDetails) {
            if (jobEnvironmentConfigurationOverrideDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobEnvironmentConfigurationOverrideDetails");
            }
            this.jobEnvironmentConfigurationOverrideDetails = jobEnvironmentConfigurationOverrideDetails;
            return this;
        }
        public Builder jobEnvironmentConfigurationOverrideDetails(GetJobRunJobEnvironmentConfigurationOverrideDetail... jobEnvironmentConfigurationOverrideDetails) {
            return jobEnvironmentConfigurationOverrideDetails(List.of(jobEnvironmentConfigurationOverrideDetails));
        }
        @CustomType.Setter
        public Builder jobId(String jobId) {
            if (jobId == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobId");
            }
            this.jobId = jobId;
            return this;
        }
        @CustomType.Setter
        public Builder jobInfrastructureConfigurationDetails(List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails) {
            if (jobInfrastructureConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobInfrastructureConfigurationDetails");
            }
            this.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            return this;
        }
        public Builder jobInfrastructureConfigurationDetails(GetJobRunJobInfrastructureConfigurationDetail... jobInfrastructureConfigurationDetails) {
            return jobInfrastructureConfigurationDetails(List.of(jobInfrastructureConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobInfrastructureConfigurationOverrideDetails(List<GetJobRunJobInfrastructureConfigurationOverrideDetail> jobInfrastructureConfigurationOverrideDetails) {
            if (jobInfrastructureConfigurationOverrideDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobInfrastructureConfigurationOverrideDetails");
            }
            this.jobInfrastructureConfigurationOverrideDetails = jobInfrastructureConfigurationOverrideDetails;
            return this;
        }
        public Builder jobInfrastructureConfigurationOverrideDetails(GetJobRunJobInfrastructureConfigurationOverrideDetail... jobInfrastructureConfigurationOverrideDetails) {
            return jobInfrastructureConfigurationOverrideDetails(List.of(jobInfrastructureConfigurationOverrideDetails));
        }
        @CustomType.Setter
        public Builder jobLogConfigurationOverrideDetails(List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails) {
            if (jobLogConfigurationOverrideDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobLogConfigurationOverrideDetails");
            }
            this.jobLogConfigurationOverrideDetails = jobLogConfigurationOverrideDetails;
            return this;
        }
        public Builder jobLogConfigurationOverrideDetails(GetJobRunJobLogConfigurationOverrideDetail... jobLogConfigurationOverrideDetails) {
            return jobLogConfigurationOverrideDetails(List.of(jobLogConfigurationOverrideDetails));
        }
        @CustomType.Setter
        public Builder jobNodeConfigurationOverrideDetails(List<GetJobRunJobNodeConfigurationOverrideDetail> jobNodeConfigurationOverrideDetails) {
            if (jobNodeConfigurationOverrideDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobNodeConfigurationOverrideDetails");
            }
            this.jobNodeConfigurationOverrideDetails = jobNodeConfigurationOverrideDetails;
            return this;
        }
        public Builder jobNodeConfigurationOverrideDetails(GetJobRunJobNodeConfigurationOverrideDetail... jobNodeConfigurationOverrideDetails) {
            return jobNodeConfigurationOverrideDetails(List.of(jobNodeConfigurationOverrideDetails));
        }
        @CustomType.Setter
        public Builder jobRunId(String jobRunId) {
            if (jobRunId == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobRunId");
            }
            this.jobRunId = jobRunId;
            return this;
        }
        @CustomType.Setter
        public Builder jobStorageMountConfigurationDetailsLists(List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists) {
            if (jobStorageMountConfigurationDetailsLists == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "jobStorageMountConfigurationDetailsLists");
            }
            this.jobStorageMountConfigurationDetailsLists = jobStorageMountConfigurationDetailsLists;
            return this;
        }
        public Builder jobStorageMountConfigurationDetailsLists(GetJobRunJobStorageMountConfigurationDetailsList... jobStorageMountConfigurationDetailsLists) {
            return jobStorageMountConfigurationDetailsLists(List.of(jobStorageMountConfigurationDetailsLists));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder logDetails(List<GetJobRunLogDetail> logDetails) {
            if (logDetails == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "logDetails");
            }
            this.logDetails = logDetails;
            return this;
        }
        public Builder logDetails(GetJobRunLogDetail... logDetails) {
            return logDetails(List.of(logDetails));
        }
        @CustomType.Setter
        public Builder nodeGroupDetailsLists(List<GetJobRunNodeGroupDetailsList> nodeGroupDetailsLists) {
            if (nodeGroupDetailsLists == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "nodeGroupDetailsLists");
            }
            this.nodeGroupDetailsLists = nodeGroupDetailsLists;
            return this;
        }
        public Builder nodeGroupDetailsLists(GetJobRunNodeGroupDetailsList... nodeGroupDetailsLists) {
            return nodeGroupDetailsLists(List.of(nodeGroupDetailsLists));
        }
        @CustomType.Setter
        public Builder opcParentRptUrl(String opcParentRptUrl) {
            if (opcParentRptUrl == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "opcParentRptUrl");
            }
            this.opcParentRptUrl = opcParentRptUrl;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(String timeAccepted) {
            if (timeAccepted == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "timeAccepted");
            }
            this.timeAccepted = timeAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            if (timeFinished == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "timeFinished");
            }
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            if (timeStarted == null) {
              throw new MissingRequiredPropertyException("GetJobRunResult", "timeStarted");
            }
            this.timeStarted = timeStarted;
            return this;
        }
        public GetJobRunResult build() {
            final var _resultValue = new GetJobRunResult();
            _resultValue.asynchronous = asynchronous;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createdBy = createdBy;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.jobConfigurationOverrideDetails = jobConfigurationOverrideDetails;
            _resultValue.jobEnvironmentConfigurationOverrideDetails = jobEnvironmentConfigurationOverrideDetails;
            _resultValue.jobId = jobId;
            _resultValue.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            _resultValue.jobInfrastructureConfigurationOverrideDetails = jobInfrastructureConfigurationOverrideDetails;
            _resultValue.jobLogConfigurationOverrideDetails = jobLogConfigurationOverrideDetails;
            _resultValue.jobNodeConfigurationOverrideDetails = jobNodeConfigurationOverrideDetails;
            _resultValue.jobRunId = jobRunId;
            _resultValue.jobStorageMountConfigurationDetailsLists = jobStorageMountConfigurationDetailsLists;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.logDetails = logDetails;
            _resultValue.nodeGroupDetailsLists = nodeGroupDetailsLists;
            _resultValue.opcParentRptUrl = opcParentRptUrl;
            _resultValue.projectId = projectId;
            _resultValue.state = state;
            _resultValue.timeAccepted = timeAccepted;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            return _resultValue;
        }
    }
}
