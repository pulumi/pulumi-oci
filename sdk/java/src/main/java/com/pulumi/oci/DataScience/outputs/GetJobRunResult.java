// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobConfigurationOverrideDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobInfrastructureConfigurationDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobLogConfigurationOverrideDetail;
import com.pulumi.oci.DataScience.outputs.GetJobRunJobStorageMountConfigurationDetailsList;
import com.pulumi.oci.DataScience.outputs.GetJobRunLogDetail;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetJobRunResult {
    private Boolean asynchronous;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job.
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the job run.
     * 
     */
    private String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
     * 
     */
    private String id;
    /**
     * @return The job configuration details
     * 
     */
    private List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
     * 
     */
    private String jobId;
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    private List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
    /**
     * @return Logging configuration for resource.
     * 
     */
    private List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails;
    private String jobRunId;
    /**
     * @return Collection of JobStorageMountConfigurationDetails.
     * 
     */
    private List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists;
    /**
     * @return Details of the state of the job run.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Customer logging details for job run.
     * 
     */
    private List<GetJobRunLogDetail> logDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
     * 
     */
    private String projectId;
    /**
     * @return The state of the job run.
     * 
     */
    private String state;
    /**
     * @return The date and time the job run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeAccepted;
    /**
     * @return The date and time the job run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeFinished;
    /**
     * @return The date and time the job run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeStarted;

    private GetJobRunResult() {}
    public Boolean asynchronous() {
        return this.asynchronous;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the job run.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The job configuration details
     * 
     */
    public List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails() {
        return this.jobConfigurationOverrideDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job run.
     * 
     */
    public String jobId() {
        return this.jobId;
    }
    /**
     * @return The job infrastructure configuration details (shape, block storage, etc.)
     * 
     */
    public List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails() {
        return this.jobInfrastructureConfigurationDetails;
    }
    /**
     * @return Logging configuration for resource.
     * 
     */
    public List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails() {
        return this.jobLogConfigurationOverrideDetails;
    }
    public String jobRunId() {
        return this.jobRunId;
    }
    /**
     * @return Collection of JobStorageMountConfigurationDetails.
     * 
     */
    public List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists() {
        return this.jobStorageMountConfigurationDetailsLists;
    }
    /**
     * @return Details of the state of the job run.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Customer logging details for job run.
     * 
     */
    public List<GetJobRunLogDetail> logDetails() {
        return this.logDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The state of the job run.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the job run was accepted in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeAccepted() {
        return this.timeAccepted;
    }
    /**
     * @return The date and time the job run request was finished in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return The date and time the job run request was started in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobRunResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean asynchronous;
        private String compartmentId;
        private String createdBy;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails;
        private String jobId;
        private List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails;
        private List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails;
        private String jobRunId;
        private List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists;
        private String lifecycleDetails;
        private List<GetJobRunLogDetail> logDetails;
        private String projectId;
        private String state;
        private String timeAccepted;
        private String timeFinished;
        private String timeStarted;
        public Builder() {}
        public Builder(GetJobRunResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asynchronous = defaults.asynchronous;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.jobConfigurationOverrideDetails = defaults.jobConfigurationOverrideDetails;
    	      this.jobId = defaults.jobId;
    	      this.jobInfrastructureConfigurationDetails = defaults.jobInfrastructureConfigurationDetails;
    	      this.jobLogConfigurationOverrideDetails = defaults.jobLogConfigurationOverrideDetails;
    	      this.jobRunId = defaults.jobRunId;
    	      this.jobStorageMountConfigurationDetailsLists = defaults.jobStorageMountConfigurationDetailsLists;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.logDetails = defaults.logDetails;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder asynchronous(Boolean asynchronous) {
            this.asynchronous = Objects.requireNonNull(asynchronous);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder jobConfigurationOverrideDetails(List<GetJobRunJobConfigurationOverrideDetail> jobConfigurationOverrideDetails) {
            this.jobConfigurationOverrideDetails = Objects.requireNonNull(jobConfigurationOverrideDetails);
            return this;
        }
        public Builder jobConfigurationOverrideDetails(GetJobRunJobConfigurationOverrideDetail... jobConfigurationOverrideDetails) {
            return jobConfigurationOverrideDetails(List.of(jobConfigurationOverrideDetails));
        }
        @CustomType.Setter
        public Builder jobId(String jobId) {
            this.jobId = Objects.requireNonNull(jobId);
            return this;
        }
        @CustomType.Setter
        public Builder jobInfrastructureConfigurationDetails(List<GetJobRunJobInfrastructureConfigurationDetail> jobInfrastructureConfigurationDetails) {
            this.jobInfrastructureConfigurationDetails = Objects.requireNonNull(jobInfrastructureConfigurationDetails);
            return this;
        }
        public Builder jobInfrastructureConfigurationDetails(GetJobRunJobInfrastructureConfigurationDetail... jobInfrastructureConfigurationDetails) {
            return jobInfrastructureConfigurationDetails(List.of(jobInfrastructureConfigurationDetails));
        }
        @CustomType.Setter
        public Builder jobLogConfigurationOverrideDetails(List<GetJobRunJobLogConfigurationOverrideDetail> jobLogConfigurationOverrideDetails) {
            this.jobLogConfigurationOverrideDetails = Objects.requireNonNull(jobLogConfigurationOverrideDetails);
            return this;
        }
        public Builder jobLogConfigurationOverrideDetails(GetJobRunJobLogConfigurationOverrideDetail... jobLogConfigurationOverrideDetails) {
            return jobLogConfigurationOverrideDetails(List.of(jobLogConfigurationOverrideDetails));
        }
        @CustomType.Setter
        public Builder jobRunId(String jobRunId) {
            this.jobRunId = Objects.requireNonNull(jobRunId);
            return this;
        }
        @CustomType.Setter
        public Builder jobStorageMountConfigurationDetailsLists(List<GetJobRunJobStorageMountConfigurationDetailsList> jobStorageMountConfigurationDetailsLists) {
            this.jobStorageMountConfigurationDetailsLists = Objects.requireNonNull(jobStorageMountConfigurationDetailsLists);
            return this;
        }
        public Builder jobStorageMountConfigurationDetailsLists(GetJobRunJobStorageMountConfigurationDetailsList... jobStorageMountConfigurationDetailsLists) {
            return jobStorageMountConfigurationDetailsLists(List.of(jobStorageMountConfigurationDetailsLists));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder logDetails(List<GetJobRunLogDetail> logDetails) {
            this.logDetails = Objects.requireNonNull(logDetails);
            return this;
        }
        public Builder logDetails(GetJobRunLogDetail... logDetails) {
            return logDetails(List.of(logDetails));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(String timeAccepted) {
            this.timeAccepted = Objects.requireNonNull(timeAccepted);
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            this.timeFinished = Objects.requireNonNull(timeFinished);
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            this.timeStarted = Objects.requireNonNull(timeStarted);
            return this;
        }
        public GetJobRunResult build() {
            final var _resultValue = new GetJobRunResult();
            _resultValue.asynchronous = asynchronous;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createdBy = createdBy;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.jobConfigurationOverrideDetails = jobConfigurationOverrideDetails;
            _resultValue.jobId = jobId;
            _resultValue.jobInfrastructureConfigurationDetails = jobInfrastructureConfigurationDetails;
            _resultValue.jobLogConfigurationOverrideDetails = jobLogConfigurationOverrideDetails;
            _resultValue.jobRunId = jobRunId;
            _resultValue.jobStorageMountConfigurationDetailsLists = jobStorageMountConfigurationDetailsLists;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.logDetails = logDetails;
            _resultValue.projectId = projectId;
            _resultValue.state = state;
            _resultValue.timeAccepted = timeAccepted;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            return _resultValue;
        }
    }
}
