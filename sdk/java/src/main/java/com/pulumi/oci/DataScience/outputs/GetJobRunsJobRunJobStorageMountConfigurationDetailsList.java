// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetJobRunsJobRunJobStorageMountConfigurationDetailsList {
    /**
     * @return The object storage bucket
     * 
     */
    private String bucket;
    /**
     * @return The local directory name to be mounted
     * 
     */
    private String destinationDirectoryName;
    /**
     * @return The local path of the mounted directory, excluding directory name.
     * 
     */
    private String destinationPath;
    /**
     * @return OCID of the export
     * 
     */
    private String exportId;
    /**
     * @return OCID of the mount target
     * 
     */
    private String mountTargetId;
    /**
     * @return The object storage namespace
     * 
     */
    private String namespace;
    /**
     * @return Prefix in the bucket to mount
     * 
     */
    private String prefix;
    /**
     * @return The type of storage.
     * 
     */
    private String storageType;

    private GetJobRunsJobRunJobStorageMountConfigurationDetailsList() {}
    /**
     * @return The object storage bucket
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The local directory name to be mounted
     * 
     */
    public String destinationDirectoryName() {
        return this.destinationDirectoryName;
    }
    /**
     * @return The local path of the mounted directory, excluding directory name.
     * 
     */
    public String destinationPath() {
        return this.destinationPath;
    }
    /**
     * @return OCID of the export
     * 
     */
    public String exportId() {
        return this.exportId;
    }
    /**
     * @return OCID of the mount target
     * 
     */
    public String mountTargetId() {
        return this.mountTargetId;
    }
    /**
     * @return The object storage namespace
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Prefix in the bucket to mount
     * 
     */
    public String prefix() {
        return this.prefix;
    }
    /**
     * @return The type of storage.
     * 
     */
    public String storageType() {
        return this.storageType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobRunsJobRunJobStorageMountConfigurationDetailsList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private String destinationDirectoryName;
        private String destinationPath;
        private String exportId;
        private String mountTargetId;
        private String namespace;
        private String prefix;
        private String storageType;
        public Builder() {}
        public Builder(GetJobRunsJobRunJobStorageMountConfigurationDetailsList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.destinationDirectoryName = defaults.destinationDirectoryName;
    	      this.destinationPath = defaults.destinationPath;
    	      this.exportId = defaults.exportId;
    	      this.mountTargetId = defaults.mountTargetId;
    	      this.namespace = defaults.namespace;
    	      this.prefix = defaults.prefix;
    	      this.storageType = defaults.storageType;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDirectoryName(String destinationDirectoryName) {
            if (destinationDirectoryName == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "destinationDirectoryName");
            }
            this.destinationDirectoryName = destinationDirectoryName;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPath(String destinationPath) {
            if (destinationPath == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "destinationPath");
            }
            this.destinationPath = destinationPath;
            return this;
        }
        @CustomType.Setter
        public Builder exportId(String exportId) {
            if (exportId == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "exportId");
            }
            this.exportId = exportId;
            return this;
        }
        @CustomType.Setter
        public Builder mountTargetId(String mountTargetId) {
            if (mountTargetId == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "mountTargetId");
            }
            this.mountTargetId = mountTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(String prefix) {
            if (prefix == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "prefix");
            }
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder storageType(String storageType) {
            if (storageType == null) {
              throw new MissingRequiredPropertyException("GetJobRunsJobRunJobStorageMountConfigurationDetailsList", "storageType");
            }
            this.storageType = storageType;
            return this;
        }
        public GetJobRunsJobRunJobStorageMountConfigurationDetailsList build() {
            final var _resultValue = new GetJobRunsJobRunJobStorageMountConfigurationDetailsList();
            _resultValue.bucket = bucket;
            _resultValue.destinationDirectoryName = destinationDirectoryName;
            _resultValue.destinationPath = destinationPath;
            _resultValue.exportId = exportId;
            _resultValue.mountTargetId = mountTargetId;
            _resultValue.namespace = namespace;
            _resultValue.prefix = prefix;
            _resultValue.storageType = storageType;
            return _resultValue;
        }
    }
}
