// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobsJobJobInfrastructureConfigurationDetail {
    /**
     * @return The size of the block storage volume to attach to the instance running the job
     * 
     */
    private Integer blockStorageSizeInGbs;
    /**
     * @return The infrastructure type used for job run.
     * 
     */
    private String jobInfrastructureType;
    /**
     * @return Details for the job run shape configuration. Specify only when a flex shape is selected.
     * 
     */
    private List<GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail> jobShapeConfigDetails;
    /**
     * @return The shape used to launch the job run instances.
     * 
     */
    private String shapeName;
    /**
     * @return The subnet to create a secondary vnic in to attach to the instance running the job
     * 
     */
    private String subnetId;

    private GetJobsJobJobInfrastructureConfigurationDetail() {}
    /**
     * @return The size of the block storage volume to attach to the instance running the job
     * 
     */
    public Integer blockStorageSizeInGbs() {
        return this.blockStorageSizeInGbs;
    }
    /**
     * @return The infrastructure type used for job run.
     * 
     */
    public String jobInfrastructureType() {
        return this.jobInfrastructureType;
    }
    /**
     * @return Details for the job run shape configuration. Specify only when a flex shape is selected.
     * 
     */
    public List<GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail> jobShapeConfigDetails() {
        return this.jobShapeConfigDetails;
    }
    /**
     * @return The shape used to launch the job run instances.
     * 
     */
    public String shapeName() {
        return this.shapeName;
    }
    /**
     * @return The subnet to create a secondary vnic in to attach to the instance running the job
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobsJobJobInfrastructureConfigurationDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer blockStorageSizeInGbs;
        private String jobInfrastructureType;
        private List<GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail> jobShapeConfigDetails;
        private String shapeName;
        private String subnetId;
        public Builder() {}
        public Builder(GetJobsJobJobInfrastructureConfigurationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockStorageSizeInGbs = defaults.blockStorageSizeInGbs;
    	      this.jobInfrastructureType = defaults.jobInfrastructureType;
    	      this.jobShapeConfigDetails = defaults.jobShapeConfigDetails;
    	      this.shapeName = defaults.shapeName;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder blockStorageSizeInGbs(Integer blockStorageSizeInGbs) {
            if (blockStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobInfrastructureConfigurationDetail", "blockStorageSizeInGbs");
            }
            this.blockStorageSizeInGbs = blockStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder jobInfrastructureType(String jobInfrastructureType) {
            if (jobInfrastructureType == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobInfrastructureConfigurationDetail", "jobInfrastructureType");
            }
            this.jobInfrastructureType = jobInfrastructureType;
            return this;
        }
        @CustomType.Setter
        public Builder jobShapeConfigDetails(List<GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail> jobShapeConfigDetails) {
            if (jobShapeConfigDetails == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobInfrastructureConfigurationDetail", "jobShapeConfigDetails");
            }
            this.jobShapeConfigDetails = jobShapeConfigDetails;
            return this;
        }
        public Builder jobShapeConfigDetails(GetJobsJobJobInfrastructureConfigurationDetailJobShapeConfigDetail... jobShapeConfigDetails) {
            return jobShapeConfigDetails(List.of(jobShapeConfigDetails));
        }
        @CustomType.Setter
        public Builder shapeName(String shapeName) {
            if (shapeName == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobInfrastructureConfigurationDetail", "shapeName");
            }
            this.shapeName = shapeName;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobInfrastructureConfigurationDetail", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public GetJobsJobJobInfrastructureConfigurationDetail build() {
            final var _resultValue = new GetJobsJobJobInfrastructureConfigurationDetail();
            _resultValue.blockStorageSizeInGbs = blockStorageSizeInGbs;
            _resultValue.jobInfrastructureType = jobInfrastructureType;
            _resultValue.jobShapeConfigDetails = jobShapeConfigDetails;
            _resultValue.shapeName = shapeName;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
