// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail {
    /**
     * @return The commands to run in the target job run to perform the startup probe
     * 
     */
    private List<String> commands;
    /**
     * @return How many times the job will try before giving up when a probe fails.
     * 
     */
    private Integer failureThreshold;
    /**
     * @return Number of seconds after the job run has started before a startup probe is initiated.
     * 
     */
    private Integer initialDelayInSeconds;
    /**
     * @return The probe check type to perform the startup probe and specifies the type of health check for a job.
     * 
     */
    private String jobProbeCheckType;
    /**
     * @return Number of seconds how often the job run should perform a startup probe
     * 
     */
    private Integer periodInSeconds;

    private GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail() {}
    /**
     * @return The commands to run in the target job run to perform the startup probe
     * 
     */
    public List<String> commands() {
        return this.commands;
    }
    /**
     * @return How many times the job will try before giving up when a probe fails.
     * 
     */
    public Integer failureThreshold() {
        return this.failureThreshold;
    }
    /**
     * @return Number of seconds after the job run has started before a startup probe is initiated.
     * 
     */
    public Integer initialDelayInSeconds() {
        return this.initialDelayInSeconds;
    }
    /**
     * @return The probe check type to perform the startup probe and specifies the type of health check for a job.
     * 
     */
    public String jobProbeCheckType() {
        return this.jobProbeCheckType;
    }
    /**
     * @return Number of seconds how often the job run should perform a startup probe
     * 
     */
    public Integer periodInSeconds() {
        return this.periodInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> commands;
        private Integer failureThreshold;
        private Integer initialDelayInSeconds;
        private String jobProbeCheckType;
        private Integer periodInSeconds;
        public Builder() {}
        public Builder(GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.initialDelayInSeconds = defaults.initialDelayInSeconds;
    	      this.jobProbeCheckType = defaults.jobProbeCheckType;
    	      this.periodInSeconds = defaults.periodInSeconds;
        }

        @CustomType.Setter
        public Builder commands(List<String> commands) {
            if (commands == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail", "commands");
            }
            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder failureThreshold(Integer failureThreshold) {
            if (failureThreshold == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail", "failureThreshold");
            }
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder initialDelayInSeconds(Integer initialDelayInSeconds) {
            if (initialDelayInSeconds == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail", "initialDelayInSeconds");
            }
            this.initialDelayInSeconds = initialDelayInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder jobProbeCheckType(String jobProbeCheckType) {
            if (jobProbeCheckType == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail", "jobProbeCheckType");
            }
            this.jobProbeCheckType = jobProbeCheckType;
            return this;
        }
        @CustomType.Setter
        public Builder periodInSeconds(Integer periodInSeconds) {
            if (periodInSeconds == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail", "periodInSeconds");
            }
            this.periodInSeconds = periodInSeconds;
            return this;
        }
        public GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail build() {
            final var _resultValue = new GetJobsJobJobNodeConfigurationDetailJobNodeGroupConfigurationDetailsListJobConfigurationDetailStartupProbeDetail();
            _resultValue.commands = commands;
            _resultValue.failureThreshold = failureThreshold;
            _resultValue.initialDelayInSeconds = initialDelayInSeconds;
            _resultValue.jobProbeCheckType = jobProbeCheckType;
            _resultValue.periodInSeconds = periodInSeconds;
            return _resultValue;
        }
    }
}
