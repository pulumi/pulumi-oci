// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMlApplicationImplementationApplicationComponent {
    /**
     * @return OCID of Data Flow Application
     * 
     */
    private String applicationId;
    /**
     * @return Name of application component
     * 
     */
    private String componentName;
    /**
     * @return The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
     * 
     */
    private String id;
    /**
     * @return OCID of Data Science Job
     * 
     */
    private String jobId;
    /**
     * @return OCID of Data Science Model
     * 
     */
    private String modelId;
    /**
     * @return ML Application Implementation name which is unique for given ML Application.
     * 
     */
    private String name;
    /**
     * @return OCID of Data Science Pipeline
     * 
     */
    private String pipelineId;
    /**
     * @return Type of the resource
     * 
     */
    private String resourceType;
    /**
     * @return type of the argument
     * 
     */
    private String type;

    private GetMlApplicationImplementationApplicationComponent() {}
    /**
     * @return OCID of Data Flow Application
     * 
     */
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return Name of application component
     * 
     */
    public String componentName() {
        return this.componentName;
    }
    /**
     * @return The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return OCID of Data Science Job
     * 
     */
    public String jobId() {
        return this.jobId;
    }
    /**
     * @return OCID of Data Science Model
     * 
     */
    public String modelId() {
        return this.modelId;
    }
    /**
     * @return ML Application Implementation name which is unique for given ML Application.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return OCID of Data Science Pipeline
     * 
     */
    public String pipelineId() {
        return this.pipelineId;
    }
    /**
     * @return Type of the resource
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return type of the argument
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMlApplicationImplementationApplicationComponent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationId;
        private String componentName;
        private String id;
        private String jobId;
        private String modelId;
        private String name;
        private String pipelineId;
        private String resourceType;
        private String type;
        public Builder() {}
        public Builder(GetMlApplicationImplementationApplicationComponent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.componentName = defaults.componentName;
    	      this.id = defaults.id;
    	      this.jobId = defaults.jobId;
    	      this.modelId = defaults.modelId;
    	      this.name = defaults.name;
    	      this.pipelineId = defaults.pipelineId;
    	      this.resourceType = defaults.resourceType;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder componentName(String componentName) {
            if (componentName == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "componentName");
            }
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jobId(String jobId) {
            if (jobId == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "jobId");
            }
            this.jobId = jobId;
            return this;
        }
        @CustomType.Setter
        public Builder modelId(String modelId) {
            if (modelId == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "modelId");
            }
            this.modelId = modelId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineId(String pipelineId) {
            if (pipelineId == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "pipelineId");
            }
            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationApplicationComponent", "type");
            }
            this.type = type;
            return this;
        }
        public GetMlApplicationImplementationApplicationComponent build() {
            final var _resultValue = new GetMlApplicationImplementationApplicationComponent();
            _resultValue.applicationId = applicationId;
            _resultValue.componentName = componentName;
            _resultValue.id = id;
            _resultValue.jobId = jobId;
            _resultValue.modelId = modelId;
            _resultValue.name = name;
            _resultValue.pipelineId = pipelineId;
            _resultValue.resourceType = resourceType;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
