// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetMlApplicationImplementationMlApplicationPackageArgumentArgument;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMlApplicationImplementationMlApplicationPackageArgument {
    /**
     * @return Array of the ML Application package arguments
     * 
     */
    private List<GetMlApplicationImplementationMlApplicationPackageArgumentArgument> arguments;

    private GetMlApplicationImplementationMlApplicationPackageArgument() {}
    /**
     * @return Array of the ML Application package arguments
     * 
     */
    public List<GetMlApplicationImplementationMlApplicationPackageArgumentArgument> arguments() {
        return this.arguments;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMlApplicationImplementationMlApplicationPackageArgument defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMlApplicationImplementationMlApplicationPackageArgumentArgument> arguments;
        public Builder() {}
        public Builder(GetMlApplicationImplementationMlApplicationPackageArgument defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
        }

        @CustomType.Setter
        public Builder arguments(List<GetMlApplicationImplementationMlApplicationPackageArgumentArgument> arguments) {
            if (arguments == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationMlApplicationPackageArgument", "arguments");
            }
            this.arguments = arguments;
            return this;
        }
        public Builder arguments(GetMlApplicationImplementationMlApplicationPackageArgumentArgument... arguments) {
            return arguments(List.of(arguments));
        }
        public GetMlApplicationImplementationMlApplicationPackageArgument build() {
            final var _resultValue = new GetMlApplicationImplementationMlApplicationPackageArgument();
            _resultValue.arguments = arguments;
            return _resultValue;
        }
    }
}
