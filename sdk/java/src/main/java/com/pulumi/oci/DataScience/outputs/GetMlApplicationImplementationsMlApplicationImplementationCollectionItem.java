// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetMlApplicationImplementationsMlApplicationImplementationCollectionItemApplicationComponent;
import com.pulumi.oci.DataScience.outputs.GetMlApplicationImplementationsMlApplicationImplementationCollectionItemConfigurationSchema;
import com.pulumi.oci.DataScience.outputs.GetMlApplicationImplementationsMlApplicationImplementationCollectionItemLogging;
import com.pulumi.oci.DataScience.outputs.GetMlApplicationImplementationsMlApplicationImplementationCollectionItemMlApplicationPackageArgument;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMlApplicationImplementationsMlApplicationImplementationCollectionItem {
    /**
     * @return List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
     * 
     */
    private List<String> allowedMigrationDestinations;
    /**
     * @return List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
     * 
     */
    private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemApplicationComponent> applicationComponents;
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
     * 
     */
    private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemConfigurationSchema> configurationSchemas;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return short description of the argument
     * 
     */
    private String description;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Configuration of Logging for ML Application Implementation.
     * 
     */
    private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemLogging> loggings;
    /**
     * @return unique MlApplication identifier
     * 
     */
    private String mlApplicationId;
    /**
     * @return The name of ML Application (based on mlApplicationId)
     * 
     */
    private String mlApplicationName;
    /**
     * @return Specifies the ML application package as a map of key-value pairs. Valid keys include &#39;source_type&#39;, &#39;path&#39;, and &#39;uri&#39;. Use &#39;file://&#39; for local paths or &#39;https://&#39; for object storage URIs.
     * 
     */
    private Map<String,String> mlApplicationPackage;
    /**
     * @return List of ML Application package arguments provided during ML Application package upload.
     * 
     */
    private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemMlApplicationPackageArgument> mlApplicationPackageArguments;
    /**
     * @return A filter to return only resources that match the entire name given.
     * 
     */
    private String name;
    private Map<String,String> opcMlAppPackageArgs;
    /**
     * @return The version of ML Application Package (e.g. &#34;1.2&#34; or &#34;2.0.4&#34;) defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
     * 
     */
    private String packageVersion;
    /**
     * @return A filter to return only resources with lifecycleState matching the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
     * 
     */
    private String timeCreated;
    /**
     * @return Time of last MlApplicationImplementation update in the format defined by RFC 3339.
     * 
     */
    private String timeUpdated;

    private GetMlApplicationImplementationsMlApplicationImplementationCollectionItem() {}
    /**
     * @return List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
     * 
     */
    public List<String> allowedMigrationDestinations() {
        return this.allowedMigrationDestinations;
    }
    /**
     * @return List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
     * 
     */
    public List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemApplicationComponent> applicationComponents() {
        return this.applicationComponents;
    }
    /**
     * @return &lt;b&gt;Filter&lt;/b&gt; results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
     * 
     */
    public List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemConfigurationSchema> configurationSchemas() {
        return this.configurationSchemas;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return short description of the argument
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Configuration of Logging for ML Application Implementation.
     * 
     */
    public List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemLogging> loggings() {
        return this.loggings;
    }
    /**
     * @return unique MlApplication identifier
     * 
     */
    public String mlApplicationId() {
        return this.mlApplicationId;
    }
    /**
     * @return The name of ML Application (based on mlApplicationId)
     * 
     */
    public String mlApplicationName() {
        return this.mlApplicationName;
    }
    /**
     * @return Specifies the ML application package as a map of key-value pairs. Valid keys include &#39;source_type&#39;, &#39;path&#39;, and &#39;uri&#39;. Use &#39;file://&#39; for local paths or &#39;https://&#39; for object storage URIs.
     * 
     */
    public Map<String,String> mlApplicationPackage() {
        return this.mlApplicationPackage;
    }
    /**
     * @return List of ML Application package arguments provided during ML Application package upload.
     * 
     */
    public List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemMlApplicationPackageArgument> mlApplicationPackageArguments() {
        return this.mlApplicationPackageArguments;
    }
    /**
     * @return A filter to return only resources that match the entire name given.
     * 
     */
    public String name() {
        return this.name;
    }
    public Map<String,String> opcMlAppPackageArgs() {
        return this.opcMlAppPackageArgs;
    }
    /**
     * @return The version of ML Application Package (e.g. &#34;1.2&#34; or &#34;2.0.4&#34;) defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
     * 
     */
    public String packageVersion() {
        return this.packageVersion;
    }
    /**
     * @return A filter to return only resources with lifecycleState matching the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Time of last MlApplicationImplementation update in the format defined by RFC 3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMlApplicationImplementationsMlApplicationImplementationCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedMigrationDestinations;
        private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemApplicationComponent> applicationComponents;
        private String compartmentId;
        private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemConfigurationSchema> configurationSchemas;
        private Map<String,String> definedTags;
        private String description;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemLogging> loggings;
        private String mlApplicationId;
        private String mlApplicationName;
        private Map<String,String> mlApplicationPackage;
        private List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemMlApplicationPackageArgument> mlApplicationPackageArguments;
        private String name;
        private Map<String,String> opcMlAppPackageArgs;
        private String packageVersion;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetMlApplicationImplementationsMlApplicationImplementationCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedMigrationDestinations = defaults.allowedMigrationDestinations;
    	      this.applicationComponents = defaults.applicationComponents;
    	      this.compartmentId = defaults.compartmentId;
    	      this.configurationSchemas = defaults.configurationSchemas;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.loggings = defaults.loggings;
    	      this.mlApplicationId = defaults.mlApplicationId;
    	      this.mlApplicationName = defaults.mlApplicationName;
    	      this.mlApplicationPackage = defaults.mlApplicationPackage;
    	      this.mlApplicationPackageArguments = defaults.mlApplicationPackageArguments;
    	      this.name = defaults.name;
    	      this.opcMlAppPackageArgs = defaults.opcMlAppPackageArgs;
    	      this.packageVersion = defaults.packageVersion;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder allowedMigrationDestinations(List<String> allowedMigrationDestinations) {
            if (allowedMigrationDestinations == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "allowedMigrationDestinations");
            }
            this.allowedMigrationDestinations = allowedMigrationDestinations;
            return this;
        }
        public Builder allowedMigrationDestinations(String... allowedMigrationDestinations) {
            return allowedMigrationDestinations(List.of(allowedMigrationDestinations));
        }
        @CustomType.Setter
        public Builder applicationComponents(List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemApplicationComponent> applicationComponents) {
            if (applicationComponents == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "applicationComponents");
            }
            this.applicationComponents = applicationComponents;
            return this;
        }
        public Builder applicationComponents(GetMlApplicationImplementationsMlApplicationImplementationCollectionItemApplicationComponent... applicationComponents) {
            return applicationComponents(List.of(applicationComponents));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder configurationSchemas(List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemConfigurationSchema> configurationSchemas) {
            if (configurationSchemas == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "configurationSchemas");
            }
            this.configurationSchemas = configurationSchemas;
            return this;
        }
        public Builder configurationSchemas(GetMlApplicationImplementationsMlApplicationImplementationCollectionItemConfigurationSchema... configurationSchemas) {
            return configurationSchemas(List.of(configurationSchemas));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder loggings(List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemLogging> loggings) {
            if (loggings == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "loggings");
            }
            this.loggings = loggings;
            return this;
        }
        public Builder loggings(GetMlApplicationImplementationsMlApplicationImplementationCollectionItemLogging... loggings) {
            return loggings(List.of(loggings));
        }
        @CustomType.Setter
        public Builder mlApplicationId(String mlApplicationId) {
            if (mlApplicationId == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "mlApplicationId");
            }
            this.mlApplicationId = mlApplicationId;
            return this;
        }
        @CustomType.Setter
        public Builder mlApplicationName(String mlApplicationName) {
            if (mlApplicationName == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "mlApplicationName");
            }
            this.mlApplicationName = mlApplicationName;
            return this;
        }
        @CustomType.Setter
        public Builder mlApplicationPackage(Map<String,String> mlApplicationPackage) {
            if (mlApplicationPackage == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "mlApplicationPackage");
            }
            this.mlApplicationPackage = mlApplicationPackage;
            return this;
        }
        @CustomType.Setter
        public Builder mlApplicationPackageArguments(List<GetMlApplicationImplementationsMlApplicationImplementationCollectionItemMlApplicationPackageArgument> mlApplicationPackageArguments) {
            if (mlApplicationPackageArguments == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "mlApplicationPackageArguments");
            }
            this.mlApplicationPackageArguments = mlApplicationPackageArguments;
            return this;
        }
        public Builder mlApplicationPackageArguments(GetMlApplicationImplementationsMlApplicationImplementationCollectionItemMlApplicationPackageArgument... mlApplicationPackageArguments) {
            return mlApplicationPackageArguments(List.of(mlApplicationPackageArguments));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder opcMlAppPackageArgs(Map<String,String> opcMlAppPackageArgs) {
            if (opcMlAppPackageArgs == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "opcMlAppPackageArgs");
            }
            this.opcMlAppPackageArgs = opcMlAppPackageArgs;
            return this;
        }
        @CustomType.Setter
        public Builder packageVersion(String packageVersion) {
            if (packageVersion == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "packageVersion");
            }
            this.packageVersion = packageVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetMlApplicationImplementationsMlApplicationImplementationCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetMlApplicationImplementationsMlApplicationImplementationCollectionItem build() {
            final var _resultValue = new GetMlApplicationImplementationsMlApplicationImplementationCollectionItem();
            _resultValue.allowedMigrationDestinations = allowedMigrationDestinations;
            _resultValue.applicationComponents = applicationComponents;
            _resultValue.compartmentId = compartmentId;
            _resultValue.configurationSchemas = configurationSchemas;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.loggings = loggings;
            _resultValue.mlApplicationId = mlApplicationId;
            _resultValue.mlApplicationName = mlApplicationName;
            _resultValue.mlApplicationPackage = mlApplicationPackage;
            _resultValue.mlApplicationPackageArguments = mlApplicationPackageArguments;
            _resultValue.name = name;
            _resultValue.opcMlAppPackageArgs = opcMlAppPackageArgs;
            _resultValue.packageVersion = packageVersion;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
