// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelDefinedMetadataList {
    /**
     * @return Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values &#34;Performance,Training Profile,Training and Validation Datasets,Training Environment,Reports,Readme,other&#34;.
     * 
     */
    private String category;
    /**
     * @return A short description of the model.
     * 
     */
    private String description;
    /**
     * @return Is there any artifact present for the metadata.
     * 
     */
    private Boolean hasArtifact;
    /**
     * @return Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
     * * useCaseType
     * * libraryName
     * * libraryVersion
     * * estimatorClass
     * * hyperParameters
     * * testArtifactresults
     * * fineTuningConfiguration
     * * deploymentConfiguration
     * * readme
     * * license
     * * evaluationConfiguration
     * 
     */
    private String key;
    /**
     * @return list of keywords for searching
     * 
     */
    private List<String> keywords;
    /**
     * @return Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
     * 
     */
    private String value;

    private GetModelDefinedMetadataList() {}
    /**
     * @return Category of model metadata which should be null for defined metadata.For custom metadata is should be one of the following values &#34;Performance,Training Profile,Training and Validation Datasets,Training Environment,Reports,Readme,other&#34;.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return A short description of the model.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Is there any artifact present for the metadata.
     * 
     */
    public Boolean hasArtifact() {
        return this.hasArtifact;
    }
    /**
     * @return Key of the model Metadata. The key can either be user defined or Oracle Cloud Infrastructure defined. List of Oracle Cloud Infrastructure defined keys:
     * * useCaseType
     * * libraryName
     * * libraryVersion
     * * estimatorClass
     * * hyperParameters
     * * testArtifactresults
     * * fineTuningConfiguration
     * * deploymentConfiguration
     * * readme
     * * license
     * * evaluationConfiguration
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return list of keywords for searching
     * 
     */
    public List<String> keywords() {
        return this.keywords;
    }
    /**
     * @return Allowed values for useCaseType: binary_classification, regression, multinomial_classification, clustering, recommender, dimensionality_reduction/representation, time_series_forecasting, anomaly_detection, topic_modeling, ner, sentiment_analysis, image_classification, object_localization, other
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelDefinedMetadataList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String category;
        private String description;
        private Boolean hasArtifact;
        private String key;
        private List<String> keywords;
        private String value;
        public Builder() {}
        public Builder(GetModelDefinedMetadataList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.description = defaults.description;
    	      this.hasArtifact = defaults.hasArtifact;
    	      this.key = defaults.key;
    	      this.keywords = defaults.keywords;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder category(String category) {
            if (category == null) {
              throw new MissingRequiredPropertyException("GetModelDefinedMetadataList", "category");
            }
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetModelDefinedMetadataList", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder hasArtifact(Boolean hasArtifact) {
            if (hasArtifact == null) {
              throw new MissingRequiredPropertyException("GetModelDefinedMetadataList", "hasArtifact");
            }
            this.hasArtifact = hasArtifact;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetModelDefinedMetadataList", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder keywords(List<String> keywords) {
            if (keywords == null) {
              throw new MissingRequiredPropertyException("GetModelDefinedMetadataList", "keywords");
            }
            this.keywords = keywords;
            return this;
        }
        public Builder keywords(String... keywords) {
            return keywords(List.of(keywords));
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetModelDefinedMetadataList", "value");
            }
            this.value = value;
            return this;
        }
        public GetModelDefinedMetadataList build() {
            final var _resultValue = new GetModelDefinedMetadataList();
            _resultValue.category = category;
            _resultValue.description = description;
            _resultValue.hasArtifact = hasArtifact;
            _resultValue.key = key;
            _resultValue.keywords = keywords;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
