// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailInstanceConfiguration;
import com.pulumi.oci.DataScience.outputs.GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailScalingPolicy;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail {
    /**
     * @return The minimum network bandwidth for the model deployment.
     * 
     */
    private Integer bandwidthMbps;
    /**
     * @return The type of the model deployment infrastructure.
     * 
     */
    private String infrastructureType;
    /**
     * @return The model deployment instance configuration.
     * 
     */
    private List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailInstanceConfiguration> instanceConfigurations;
    /**
     * @return The maximum network bandwidth for the model deployment.
     * 
     */
    private Integer maximumBandwidthMbps;
    /**
     * @return The scaling policy to apply to each model of the deployment.
     * 
     */
    private List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailScalingPolicy> scalingPolicies;

    private GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail() {}
    /**
     * @return The minimum network bandwidth for the model deployment.
     * 
     */
    public Integer bandwidthMbps() {
        return this.bandwidthMbps;
    }
    /**
     * @return The type of the model deployment infrastructure.
     * 
     */
    public String infrastructureType() {
        return this.infrastructureType;
    }
    /**
     * @return The model deployment instance configuration.
     * 
     */
    public List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailInstanceConfiguration> instanceConfigurations() {
        return this.instanceConfigurations;
    }
    /**
     * @return The maximum network bandwidth for the model deployment.
     * 
     */
    public Integer maximumBandwidthMbps() {
        return this.maximumBandwidthMbps;
    }
    /**
     * @return The scaling policy to apply to each model of the deployment.
     * 
     */
    public List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailScalingPolicy> scalingPolicies() {
        return this.scalingPolicies;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidthMbps;
        private String infrastructureType;
        private List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailInstanceConfiguration> instanceConfigurations;
        private Integer maximumBandwidthMbps;
        private List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailScalingPolicy> scalingPolicies;
        public Builder() {}
        public Builder(GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthMbps = defaults.bandwidthMbps;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.instanceConfigurations = defaults.instanceConfigurations;
    	      this.maximumBandwidthMbps = defaults.maximumBandwidthMbps;
    	      this.scalingPolicies = defaults.scalingPolicies;
        }

        @CustomType.Setter
        public Builder bandwidthMbps(Integer bandwidthMbps) {
            if (bandwidthMbps == null) {
              throw new MissingRequiredPropertyException("GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail", "bandwidthMbps");
            }
            this.bandwidthMbps = bandwidthMbps;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureType(String infrastructureType) {
            if (infrastructureType == null) {
              throw new MissingRequiredPropertyException("GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail", "infrastructureType");
            }
            this.infrastructureType = infrastructureType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceConfigurations(List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailInstanceConfiguration> instanceConfigurations) {
            if (instanceConfigurations == null) {
              throw new MissingRequiredPropertyException("GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail", "instanceConfigurations");
            }
            this.instanceConfigurations = instanceConfigurations;
            return this;
        }
        public Builder instanceConfigurations(GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailInstanceConfiguration... instanceConfigurations) {
            return instanceConfigurations(List.of(instanceConfigurations));
        }
        @CustomType.Setter
        public Builder maximumBandwidthMbps(Integer maximumBandwidthMbps) {
            if (maximumBandwidthMbps == null) {
              throw new MissingRequiredPropertyException("GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail", "maximumBandwidthMbps");
            }
            this.maximumBandwidthMbps = maximumBandwidthMbps;
            return this;
        }
        @CustomType.Setter
        public Builder scalingPolicies(List<GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailScalingPolicy> scalingPolicies) {
            if (scalingPolicies == null) {
              throw new MissingRequiredPropertyException("GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail", "scalingPolicies");
            }
            this.scalingPolicies = scalingPolicies;
            return this;
        }
        public Builder scalingPolicies(GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetailScalingPolicy... scalingPolicies) {
            return scalingPolicies(List.of(scalingPolicies));
        }
        public GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail build() {
            final var _resultValue = new GetModelDeploymentModelDeploymentConfigurationDetailInfrastructureConfigurationDetail();
            _resultValue.bandwidthMbps = bandwidthMbps;
            _resultValue.infrastructureType = infrastructureType;
            _resultValue.instanceConfigurations = instanceConfigurations;
            _resultValue.maximumBandwidthMbps = maximumBandwidthMbps;
            _resultValue.scalingPolicies = scalingPolicies;
            return _resultValue;
        }
    }
}
