// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetModelGroupsModelGroupModelGroupDetailCustomMetadataList;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelGroupsModelGroupModelGroupDetail {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model in the group that represents the base model for stacked deployment.
     * 
     */
    private String baseModelId;
    /**
     * @return An array of custom metadata details for the model group.
     * 
     */
    private List<GetModelGroupsModelGroupModelGroupDetailCustomMetadataList> customMetadataLists;
    /**
     * @return The type of the model group.
     * 
     */
    private String type;

    private GetModelGroupsModelGroupModelGroupDetail() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model in the group that represents the base model for stacked deployment.
     * 
     */
    public String baseModelId() {
        return this.baseModelId;
    }
    /**
     * @return An array of custom metadata details for the model group.
     * 
     */
    public List<GetModelGroupsModelGroupModelGroupDetailCustomMetadataList> customMetadataLists() {
        return this.customMetadataLists;
    }
    /**
     * @return The type of the model group.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelGroupsModelGroupModelGroupDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String baseModelId;
        private List<GetModelGroupsModelGroupModelGroupDetailCustomMetadataList> customMetadataLists;
        private String type;
        public Builder() {}
        public Builder(GetModelGroupsModelGroupModelGroupDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseModelId = defaults.baseModelId;
    	      this.customMetadataLists = defaults.customMetadataLists;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder baseModelId(String baseModelId) {
            if (baseModelId == null) {
              throw new MissingRequiredPropertyException("GetModelGroupsModelGroupModelGroupDetail", "baseModelId");
            }
            this.baseModelId = baseModelId;
            return this;
        }
        @CustomType.Setter
        public Builder customMetadataLists(List<GetModelGroupsModelGroupModelGroupDetailCustomMetadataList> customMetadataLists) {
            if (customMetadataLists == null) {
              throw new MissingRequiredPropertyException("GetModelGroupsModelGroupModelGroupDetail", "customMetadataLists");
            }
            this.customMetadataLists = customMetadataLists;
            return this;
        }
        public Builder customMetadataLists(GetModelGroupsModelGroupModelGroupDetailCustomMetadataList... customMetadataLists) {
            return customMetadataLists(List.of(customMetadataLists));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetModelGroupsModelGroupModelGroupDetail", "type");
            }
            this.type = type;
            return this;
        }
        public GetModelGroupsModelGroupModelGroupDetail build() {
            final var _resultValue = new GetModelGroupsModelGroupModelGroupDetail();
            _resultValue.baseModelId = baseModelId;
            _resultValue.customMetadataLists = customMetadataLists;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
