// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetModelProvenanceResult {
    /**
     * @return For model reproducibility purposes. Branch of the git repository associated with model training.
     * 
     */
    private @Nullable String gitBranch;
    /**
     * @return For model reproducibility purposes. Commit ID of the git repository associated with model training.
     * 
     */
    private @Nullable String gitCommit;
    private @Nullable String id;
    private String modelId;
    /**
     * @return For model reproducibility purposes. URL of the git repository associated with model training.
     * 
     */
    private @Nullable String repositoryUrl;
    /**
     * @return For model reproducibility purposes. Path to model artifacts.
     * 
     */
    private @Nullable String scriptDir;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
     * 
     */
    private @Nullable String trainingId;
    /**
     * @return For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
     * 
     */
    private @Nullable String trainingScript;

    private GetModelProvenanceResult() {}
    /**
     * @return For model reproducibility purposes. Branch of the git repository associated with model training.
     * 
     */
    public Optional<String> gitBranch() {
        return Optional.ofNullable(this.gitBranch);
    }
    /**
     * @return For model reproducibility purposes. Commit ID of the git repository associated with model training.
     * 
     */
    public Optional<String> gitCommit() {
        return Optional.ofNullable(this.gitCommit);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String modelId() {
        return this.modelId;
    }
    /**
     * @return For model reproducibility purposes. URL of the git repository associated with model training.
     * 
     */
    public Optional<String> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    /**
     * @return For model reproducibility purposes. Path to model artifacts.
     * 
     */
    public Optional<String> scriptDir() {
        return Optional.ofNullable(this.scriptDir);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
     * 
     */
    public Optional<String> trainingId() {
        return Optional.ofNullable(this.trainingId);
    }
    /**
     * @return For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
     * 
     */
    public Optional<String> trainingScript() {
        return Optional.ofNullable(this.trainingScript);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelProvenanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String gitBranch;
        private @Nullable String gitCommit;
        private @Nullable String id;
        private String modelId;
        private @Nullable String repositoryUrl;
        private @Nullable String scriptDir;
        private @Nullable String trainingId;
        private @Nullable String trainingScript;
        public Builder() {}
        public Builder(GetModelProvenanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gitBranch = defaults.gitBranch;
    	      this.gitCommit = defaults.gitCommit;
    	      this.id = defaults.id;
    	      this.modelId = defaults.modelId;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.scriptDir = defaults.scriptDir;
    	      this.trainingId = defaults.trainingId;
    	      this.trainingScript = defaults.trainingScript;
        }

        @CustomType.Setter
        public Builder gitBranch(@Nullable String gitBranch) {
            this.gitBranch = gitBranch;
            return this;
        }
        @CustomType.Setter
        public Builder gitCommit(@Nullable String gitCommit) {
            this.gitCommit = gitCommit;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modelId(String modelId) {
            this.modelId = Objects.requireNonNull(modelId);
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(@Nullable String repositoryUrl) {
            this.repositoryUrl = repositoryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder scriptDir(@Nullable String scriptDir) {
            this.scriptDir = scriptDir;
            return this;
        }
        @CustomType.Setter
        public Builder trainingId(@Nullable String trainingId) {
            this.trainingId = trainingId;
            return this;
        }
        @CustomType.Setter
        public Builder trainingScript(@Nullable String trainingScript) {
            this.trainingScript = trainingScript;
            return this;
        }
        public GetModelProvenanceResult build() {
            final var o = new GetModelProvenanceResult();
            o.gitBranch = gitBranch;
            o.gitCommit = gitCommit;
            o.id = id;
            o.modelId = modelId;
            o.repositoryUrl = repositoryUrl;
            o.scriptDir = scriptDir;
            o.trainingId = trainingId;
            o.trainingScript = trainingScript;
            return o;
        }
    }
}
