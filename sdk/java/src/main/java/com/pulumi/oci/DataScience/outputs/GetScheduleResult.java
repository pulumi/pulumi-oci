// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DataScience.outputs.GetScheduleAction;
import com.pulumi.oci.DataScience.outputs.GetScheduleLogDetail;
import com.pulumi.oci.DataScience.outputs.GetScheduleTrigger;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetScheduleResult {
    /**
     * @return The schedule action
     * 
     */
    private List<GetScheduleAction> actions;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the schedule.
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the schedule.
     * 
     */
    private String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A short description of the schedule.
     * 
     */
    private String description;
    /**
     * @return A user-friendly display name for the resource. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
     * 
     */
    private String id;
    /**
     * @return Details about the action performed by the last schedule execution. Example: `Invoked ML Application trigger.`
     * 
     */
    private String lastScheduleRunDetails;
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Custom logging details for schedule execution.
     * 
     */
    private List<GetScheduleLogDetail> logDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the schedule.
     * 
     */
    private String projectId;
    private String scheduleId;
    /**
     * @return The current state of the schedule.           Example: `ACTIVE`
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the schedule was created. Format is defined by RFC3339.           Example: `2022-08-05T01:02:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The last schedule execution time. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
     * 
     */
    private String timeLastScheduleRun;
    /**
     * @return The next scheduled execution time for the schedule. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
     * 
     */
    private String timeNextScheduledRun;
    /**
     * @return The date and time the schedule was updated. Format is defined by RFC3339.           Example: `2022-09-05T01:02:29.600Z`
     * 
     */
    private String timeUpdated;
    /**
     * @return The trigger of the schedule can be UNIX cron or iCal expression or simple interval
     * 
     */
    private List<GetScheduleTrigger> triggers;

    private GetScheduleResult() {}
    /**
     * @return The schedule action
     * 
     */
    public List<GetScheduleAction> actions() {
        return this.actions;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the schedule.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the schedule.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A short description of the schedule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly display name for the resource. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details about the action performed by the last schedule execution. Example: `Invoked ML Application trigger.`
     * 
     */
    public String lastScheduleRunDetails() {
        return this.lastScheduleRunDetails;
    }
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Custom logging details for schedule execution.
     * 
     */
    public List<GetScheduleLogDetail> logDetails() {
        return this.logDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the schedule.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    public String scheduleId() {
        return this.scheduleId;
    }
    /**
     * @return The current state of the schedule.           Example: `ACTIVE`
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the schedule was created. Format is defined by RFC3339.           Example: `2022-08-05T01:02:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The last schedule execution time. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
     * 
     */
    public String timeLastScheduleRun() {
        return this.timeLastScheduleRun;
    }
    /**
     * @return The next scheduled execution time for the schedule. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
     * 
     */
    public String timeNextScheduledRun() {
        return this.timeNextScheduledRun;
    }
    /**
     * @return The date and time the schedule was updated. Format is defined by RFC3339.           Example: `2022-09-05T01:02:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The trigger of the schedule can be UNIX cron or iCal expression or simple interval
     * 
     */
    public List<GetScheduleTrigger> triggers() {
        return this.triggers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetScheduleAction> actions;
        private String compartmentId;
        private String createdBy;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lastScheduleRunDetails;
        private String lifecycleDetails;
        private List<GetScheduleLogDetail> logDetails;
        private String projectId;
        private String scheduleId;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeLastScheduleRun;
        private String timeNextScheduledRun;
        private String timeUpdated;
        private List<GetScheduleTrigger> triggers;
        public Builder() {}
        public Builder(GetScheduleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastScheduleRunDetails = defaults.lastScheduleRunDetails;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.logDetails = defaults.logDetails;
    	      this.projectId = defaults.projectId;
    	      this.scheduleId = defaults.scheduleId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastScheduleRun = defaults.timeLastScheduleRun;
    	      this.timeNextScheduledRun = defaults.timeNextScheduledRun;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.triggers = defaults.triggers;
        }

        @CustomType.Setter
        public Builder actions(List<GetScheduleAction> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(GetScheduleAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastScheduleRunDetails(String lastScheduleRunDetails) {
            if (lastScheduleRunDetails == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "lastScheduleRunDetails");
            }
            this.lastScheduleRunDetails = lastScheduleRunDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder logDetails(List<GetScheduleLogDetail> logDetails) {
            if (logDetails == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "logDetails");
            }
            this.logDetails = logDetails;
            return this;
        }
        public Builder logDetails(GetScheduleLogDetail... logDetails) {
            return logDetails(List.of(logDetails));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleId(String scheduleId) {
            if (scheduleId == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "scheduleId");
            }
            this.scheduleId = scheduleId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastScheduleRun(String timeLastScheduleRun) {
            if (timeLastScheduleRun == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "timeLastScheduleRun");
            }
            this.timeLastScheduleRun = timeLastScheduleRun;
            return this;
        }
        @CustomType.Setter
        public Builder timeNextScheduledRun(String timeNextScheduledRun) {
            if (timeNextScheduledRun == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "timeNextScheduledRun");
            }
            this.timeNextScheduledRun = timeNextScheduledRun;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder triggers(List<GetScheduleTrigger> triggers) {
            if (triggers == null) {
              throw new MissingRequiredPropertyException("GetScheduleResult", "triggers");
            }
            this.triggers = triggers;
            return this;
        }
        public Builder triggers(GetScheduleTrigger... triggers) {
            return triggers(List.of(triggers));
        }
        public GetScheduleResult build() {
            final var _resultValue = new GetScheduleResult();
            _resultValue.actions = actions;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createdBy = createdBy;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lastScheduleRunDetails = lastScheduleRunDetails;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.logDetails = logDetails;
            _resultValue.projectId = projectId;
            _resultValue.scheduleId = scheduleId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastScheduleRun = timeLastScheduleRun;
            _resultValue.timeNextScheduledRun = timeNextScheduledRun;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.triggers = triggers;
            return _resultValue;
        }
    }
}
