// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobRunJobStorageMountConfigurationDetailsList {
    /**
     * @return The object storage bucket
     * 
     */
    private @Nullable String bucket;
    /**
     * @return The local directory name to be mounted
     * 
     */
    private @Nullable String destinationDirectoryName;
    /**
     * @return The local path of the mounted directory, excluding directory name.
     * 
     */
    private @Nullable String destinationPath;
    /**
     * @return OCID of the export
     * 
     */
    private @Nullable String exportId;
    /**
     * @return OCID of the mount target
     * 
     */
    private @Nullable String mountTargetId;
    /**
     * @return The object storage namespace
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Prefix in the bucket to mount
     * 
     */
    private @Nullable String prefix;
    /**
     * @return The type of storage.
     * 
     */
    private @Nullable String storageType;

    private JobRunJobStorageMountConfigurationDetailsList() {}
    /**
     * @return The object storage bucket
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return The local directory name to be mounted
     * 
     */
    public Optional<String> destinationDirectoryName() {
        return Optional.ofNullable(this.destinationDirectoryName);
    }
    /**
     * @return The local path of the mounted directory, excluding directory name.
     * 
     */
    public Optional<String> destinationPath() {
        return Optional.ofNullable(this.destinationPath);
    }
    /**
     * @return OCID of the export
     * 
     */
    public Optional<String> exportId() {
        return Optional.ofNullable(this.exportId);
    }
    /**
     * @return OCID of the mount target
     * 
     */
    public Optional<String> mountTargetId() {
        return Optional.ofNullable(this.mountTargetId);
    }
    /**
     * @return The object storage namespace
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Prefix in the bucket to mount
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * @return The type of storage.
     * 
     */
    public Optional<String> storageType() {
        return Optional.ofNullable(this.storageType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobRunJobStorageMountConfigurationDetailsList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String destinationDirectoryName;
        private @Nullable String destinationPath;
        private @Nullable String exportId;
        private @Nullable String mountTargetId;
        private @Nullable String namespace;
        private @Nullable String prefix;
        private @Nullable String storageType;
        public Builder() {}
        public Builder(JobRunJobStorageMountConfigurationDetailsList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.destinationDirectoryName = defaults.destinationDirectoryName;
    	      this.destinationPath = defaults.destinationPath;
    	      this.exportId = defaults.exportId;
    	      this.mountTargetId = defaults.mountTargetId;
    	      this.namespace = defaults.namespace;
    	      this.prefix = defaults.prefix;
    	      this.storageType = defaults.storageType;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {

            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDirectoryName(@Nullable String destinationDirectoryName) {

            this.destinationDirectoryName = destinationDirectoryName;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPath(@Nullable String destinationPath) {

            this.destinationPath = destinationPath;
            return this;
        }
        @CustomType.Setter
        public Builder exportId(@Nullable String exportId) {

            this.exportId = exportId;
            return this;
        }
        @CustomType.Setter
        public Builder mountTargetId(@Nullable String mountTargetId) {

            this.mountTargetId = mountTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder storageType(@Nullable String storageType) {

            this.storageType = storageType;
            return this;
        }
        public JobRunJobStorageMountConfigurationDetailsList build() {
            final var _resultValue = new JobRunJobStorageMountConfigurationDetailsList();
            _resultValue.bucket = bucket;
            _resultValue.destinationDirectoryName = destinationDirectoryName;
            _resultValue.destinationPath = destinationPath;
            _resultValue.exportId = exportId;
            _resultValue.mountTargetId = mountTargetId;
            _resultValue.namespace = namespace;
            _resultValue.prefix = prefix;
            _resultValue.storageType = storageType;
            return _resultValue;
        }
    }
}
