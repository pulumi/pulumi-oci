// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails {
    /**
     * @return (Updatable) The baseline OCPU utilization for a subcore burstable VM instance. If this attribute is left bank, it will default to `BASELINE_1_1`. The following values are supported: BASELINE_1_8 - baseline usage is 1/8 of an OCPU. BASELINE_1_2 - baseline usage is 1/2 of an OCPU. BASELINE_1_1 - baseline usage is an entire OCPU. This represents a non-burstable instance.
     * 
     */
    private @Nullable String cpuBaseline;
    /**
     * @return (Updatable) The total amount of memory available to the notebook session instance, in gigabytes.
     * 
     */
    private @Nullable Double memoryInGbs;
    /**
     * @return (Updatable) The total number of OCPUs available to the notebook session instance.
     * 
     */
    private @Nullable Double ocpus;

    private NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails() {}
    /**
     * @return (Updatable) The baseline OCPU utilization for a subcore burstable VM instance. If this attribute is left bank, it will default to `BASELINE_1_1`. The following values are supported: BASELINE_1_8 - baseline usage is 1/8 of an OCPU. BASELINE_1_2 - baseline usage is 1/2 of an OCPU. BASELINE_1_1 - baseline usage is an entire OCPU. This represents a non-burstable instance.
     * 
     */
    public Optional<String> cpuBaseline() {
        return Optional.ofNullable(this.cpuBaseline);
    }
    /**
     * @return (Updatable) The total amount of memory available to the notebook session instance, in gigabytes.
     * 
     */
    public Optional<Double> memoryInGbs() {
        return Optional.ofNullable(this.memoryInGbs);
    }
    /**
     * @return (Updatable) The total number of OCPUs available to the notebook session instance.
     * 
     */
    public Optional<Double> ocpus() {
        return Optional.ofNullable(this.ocpus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cpuBaseline;
        private @Nullable Double memoryInGbs;
        private @Nullable Double ocpus;
        public Builder() {}
        public Builder(NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuBaseline = defaults.cpuBaseline;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.ocpus = defaults.ocpus;
        }

        @CustomType.Setter
        public Builder cpuBaseline(@Nullable String cpuBaseline) {

            this.cpuBaseline = cpuBaseline;
            return this;
        }
        @CustomType.Setter
        public Builder memoryInGbs(@Nullable Double memoryInGbs) {

            this.memoryInGbs = memoryInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder ocpus(@Nullable Double ocpus) {

            this.ocpus = ocpus;
            return this;
        }
        public NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails build() {
            final var _resultValue = new NotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails();
            _resultValue.cpuBaseline = cpuBaseline;
            _resultValue.memoryInGbs = memoryInGbs;
            _resultValue.ocpus = ocpus;
            return _resultValue;
        }
    }
}
