// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineRunStepOverrideDetailStepContainerConfigurationDetails {
    /**
     * @return The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
     * 
     */
    private @Nullable List<String> cmds;
    /**
     * @return The type of container.
     * 
     */
    private String containerType;
    /**
     * @return The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
     * 
     */
    private @Nullable List<String> entrypoints;
    /**
     * @return The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format.
     * 
     */
    private String image;
    /**
     * @return The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
     * 
     */
    private @Nullable String imageDigest;
    /**
     * @return OCID of the container image signature
     * 
     */
    private @Nullable String imageSignatureId;

    private PipelineRunStepOverrideDetailStepContainerConfigurationDetails() {}
    /**
     * @return The container image run [CMD](https://docs.docker.com/engine/reference/builder/#cmd) as a list of strings. Use `CMD` as arguments to the `ENTRYPOINT` or the only command to run in the absence of an `ENTRYPOINT`. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes.
     * 
     */
    public List<String> cmds() {
        return this.cmds == null ? List.of() : this.cmds;
    }
    /**
     * @return The type of container.
     * 
     */
    public String containerType() {
        return this.containerType;
    }
    /**
     * @return The container image run [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint) as a list of strings. Accept the `CMD` as extra arguments. The combined size of `CMD` and `ENTRYPOINT` must be less than 2048 bytes. More information on how `CMD` and `ENTRYPOINT` interact are [here](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).
     * 
     */
    public List<String> entrypoints() {
        return this.entrypoints == null ? List.of() : this.entrypoints;
    }
    /**
     * @return The full path to the Oracle Container Repository (OCIR) registry, image, and tag in a canonical format.
     * 
     */
    public String image() {
        return this.image;
    }
    /**
     * @return The digest of the container image. For example, `sha256:881303a6b2738834d795a32b4a98eb0e5e3d1cad590a712d1e04f9b2fa90a030`
     * 
     */
    public Optional<String> imageDigest() {
        return Optional.ofNullable(this.imageDigest);
    }
    /**
     * @return OCID of the container image signature
     * 
     */
    public Optional<String> imageSignatureId() {
        return Optional.ofNullable(this.imageSignatureId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineRunStepOverrideDetailStepContainerConfigurationDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> cmds;
        private String containerType;
        private @Nullable List<String> entrypoints;
        private String image;
        private @Nullable String imageDigest;
        private @Nullable String imageSignatureId;
        public Builder() {}
        public Builder(PipelineRunStepOverrideDetailStepContainerConfigurationDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cmds = defaults.cmds;
    	      this.containerType = defaults.containerType;
    	      this.entrypoints = defaults.entrypoints;
    	      this.image = defaults.image;
    	      this.imageDigest = defaults.imageDigest;
    	      this.imageSignatureId = defaults.imageSignatureId;
        }

        @CustomType.Setter
        public Builder cmds(@Nullable List<String> cmds) {

            this.cmds = cmds;
            return this;
        }
        public Builder cmds(String... cmds) {
            return cmds(List.of(cmds));
        }
        @CustomType.Setter
        public Builder containerType(String containerType) {
            if (containerType == null) {
              throw new MissingRequiredPropertyException("PipelineRunStepOverrideDetailStepContainerConfigurationDetails", "containerType");
            }
            this.containerType = containerType;
            return this;
        }
        @CustomType.Setter
        public Builder entrypoints(@Nullable List<String> entrypoints) {

            this.entrypoints = entrypoints;
            return this;
        }
        public Builder entrypoints(String... entrypoints) {
            return entrypoints(List.of(entrypoints));
        }
        @CustomType.Setter
        public Builder image(String image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("PipelineRunStepOverrideDetailStepContainerConfigurationDetails", "image");
            }
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder imageDigest(@Nullable String imageDigest) {

            this.imageDigest = imageDigest;
            return this;
        }
        @CustomType.Setter
        public Builder imageSignatureId(@Nullable String imageSignatureId) {

            this.imageSignatureId = imageSignatureId;
            return this;
        }
        public PipelineRunStepOverrideDetailStepContainerConfigurationDetails build() {
            final var _resultValue = new PipelineRunStepOverrideDetailStepContainerConfigurationDetails();
            _resultValue.cmds = cmds;
            _resultValue.containerType = containerType;
            _resultValue.entrypoints = entrypoints;
            _resultValue.image = image;
            _resultValue.imageDigest = imageDigest;
            _resultValue.imageSignatureId = imageSignatureId;
            return _resultValue;
        }
    }
}
