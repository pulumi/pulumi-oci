// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousContainerDatabaseDataguardRoleChangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousContainerDatabaseDataguardRoleChangeArgs Empty = new AutonomousContainerDatabaseDataguardRoleChangeArgs();

    @Import(name="autonomousContainerDatabaseDataguardAssociationId", required=true)
    private Output<String> autonomousContainerDatabaseDataguardAssociationId;

    public Output<String> autonomousContainerDatabaseDataguardAssociationId() {
        return this.autonomousContainerDatabaseDataguardAssociationId;
    }

    @Import(name="autonomousContainerDatabaseId", required=true)
    private Output<String> autonomousContainerDatabaseId;

    public Output<String> autonomousContainerDatabaseId() {
        return this.autonomousContainerDatabaseId;
    }

    @Import(name="connectionStringsType")
    private @Nullable Output<String> connectionStringsType;

    public Optional<Output<String>> connectionStringsType() {
        return Optional.ofNullable(this.connectionStringsType);
    }

    @Import(name="role", required=true)
    private Output<String> role;

    public Output<String> role() {
        return this.role;
    }

    private AutonomousContainerDatabaseDataguardRoleChangeArgs() {}

    private AutonomousContainerDatabaseDataguardRoleChangeArgs(AutonomousContainerDatabaseDataguardRoleChangeArgs $) {
        this.autonomousContainerDatabaseDataguardAssociationId = $.autonomousContainerDatabaseDataguardAssociationId;
        this.autonomousContainerDatabaseId = $.autonomousContainerDatabaseId;
        this.connectionStringsType = $.connectionStringsType;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousContainerDatabaseDataguardRoleChangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousContainerDatabaseDataguardRoleChangeArgs $;

        public Builder() {
            $ = new AutonomousContainerDatabaseDataguardRoleChangeArgs();
        }

        public Builder(AutonomousContainerDatabaseDataguardRoleChangeArgs defaults) {
            $ = new AutonomousContainerDatabaseDataguardRoleChangeArgs(Objects.requireNonNull(defaults));
        }

        public Builder autonomousContainerDatabaseDataguardAssociationId(Output<String> autonomousContainerDatabaseDataguardAssociationId) {
            $.autonomousContainerDatabaseDataguardAssociationId = autonomousContainerDatabaseDataguardAssociationId;
            return this;
        }

        public Builder autonomousContainerDatabaseDataguardAssociationId(String autonomousContainerDatabaseDataguardAssociationId) {
            return autonomousContainerDatabaseDataguardAssociationId(Output.of(autonomousContainerDatabaseDataguardAssociationId));
        }

        public Builder autonomousContainerDatabaseId(Output<String> autonomousContainerDatabaseId) {
            $.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }

        public Builder autonomousContainerDatabaseId(String autonomousContainerDatabaseId) {
            return autonomousContainerDatabaseId(Output.of(autonomousContainerDatabaseId));
        }

        public Builder connectionStringsType(@Nullable Output<String> connectionStringsType) {
            $.connectionStringsType = connectionStringsType;
            return this;
        }

        public Builder connectionStringsType(String connectionStringsType) {
            return connectionStringsType(Output.of(connectionStringsType));
        }

        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public AutonomousContainerDatabaseDataguardRoleChangeArgs build() {
            if ($.autonomousContainerDatabaseDataguardAssociationId == null) {
                throw new MissingRequiredPropertyException("AutonomousContainerDatabaseDataguardRoleChangeArgs", "autonomousContainerDatabaseDataguardAssociationId");
            }
            if ($.autonomousContainerDatabaseId == null) {
                throw new MissingRequiredPropertyException("AutonomousContainerDatabaseDataguardRoleChangeArgs", "autonomousContainerDatabaseId");
            }
            if ($.role == null) {
                throw new MissingRequiredPropertyException("AutonomousContainerDatabaseDataguardRoleChangeArgs", "role");
            }
            return $;
        }
    }

}
