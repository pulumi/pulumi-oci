// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseSaasAdminUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseSaasAdminUserArgs Empty = new AutonomousDatabaseSaasAdminUserArgs();

    /**
     * The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
     * 
     */
    @Import(name="accessType")
    private @Nullable Output<String> accessType;

    /**
     * @return The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
     * 
     */
    public Optional<Output<String>> accessType() {
        return Optional.ofNullable(this.accessType);
    }

    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="autonomousDatabaseId", required=true)
    private Output<String> autonomousDatabaseId;

    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> autonomousDatabaseId() {
        return this.autonomousDatabaseId;
    }

    /**
     * How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<Integer> duration;

    /**
     * @return How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
     * 
     */
    public Optional<Output<Integer>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if &#34;secret_id&#34; is not present.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if &#34;secret_id&#34; is not present.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if &#34;password&#34; is not present.
     * 
     */
    @Import(name="secretId")
    private @Nullable Output<String> secretId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if &#34;password&#34; is not present.
     * 
     */
    public Optional<Output<String>> secretId() {
        return Optional.ofNullable(this.secretId);
    }

    /**
     * The version of the vault secret. If no version is specified, the latest version will be used.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="secretVersionNumber")
    private @Nullable Output<Integer> secretVersionNumber;

    /**
     * @return The version of the vault secret. If no version is specified, the latest version will be used.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> secretVersionNumber() {
        return Optional.ofNullable(this.secretVersionNumber);
    }

    @Import(name="timeSaasAdminUserEnabled")
    private @Nullable Output<String> timeSaasAdminUserEnabled;

    public Optional<Output<String>> timeSaasAdminUserEnabled() {
        return Optional.ofNullable(this.timeSaasAdminUserEnabled);
    }

    private AutonomousDatabaseSaasAdminUserArgs() {}

    private AutonomousDatabaseSaasAdminUserArgs(AutonomousDatabaseSaasAdminUserArgs $) {
        this.accessType = $.accessType;
        this.autonomousDatabaseId = $.autonomousDatabaseId;
        this.duration = $.duration;
        this.password = $.password;
        this.secretId = $.secretId;
        this.secretVersionNumber = $.secretVersionNumber;
        this.timeSaasAdminUserEnabled = $.timeSaasAdminUserEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseSaasAdminUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseSaasAdminUserArgs $;

        public Builder() {
            $ = new AutonomousDatabaseSaasAdminUserArgs();
        }

        public Builder(AutonomousDatabaseSaasAdminUserArgs defaults) {
            $ = new AutonomousDatabaseSaasAdminUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessType The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
         * 
         * @return builder
         * 
         */
        public Builder accessType(@Nullable Output<String> accessType) {
            $.accessType = accessType;
            return this;
        }

        /**
         * @param accessType The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
         * 
         * @return builder
         * 
         */
        public Builder accessType(String accessType) {
            return accessType(Output.of(accessType));
        }

        /**
         * @param autonomousDatabaseId The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(Output<String> autonomousDatabaseId) {
            $.autonomousDatabaseId = autonomousDatabaseId;
            return this;
        }

        /**
         * @param autonomousDatabaseId The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(String autonomousDatabaseId) {
            return autonomousDatabaseId(Output.of(autonomousDatabaseId));
        }

        /**
         * @param duration How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param password A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if &#34;secret_id&#34; is not present.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if &#34;secret_id&#34; is not present.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param secretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if &#34;password&#34; is not present.
         * 
         * @return builder
         * 
         */
        public Builder secretId(@Nullable Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        /**
         * @param secretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if &#34;password&#34; is not present.
         * 
         * @return builder
         * 
         */
        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        /**
         * @param secretVersionNumber The version of the vault secret. If no version is specified, the latest version will be used.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder secretVersionNumber(@Nullable Output<Integer> secretVersionNumber) {
            $.secretVersionNumber = secretVersionNumber;
            return this;
        }

        /**
         * @param secretVersionNumber The version of the vault secret. If no version is specified, the latest version will be used.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder secretVersionNumber(Integer secretVersionNumber) {
            return secretVersionNumber(Output.of(secretVersionNumber));
        }

        public Builder timeSaasAdminUserEnabled(@Nullable Output<String> timeSaasAdminUserEnabled) {
            $.timeSaasAdminUserEnabled = timeSaasAdminUserEnabled;
            return this;
        }

        public Builder timeSaasAdminUserEnabled(String timeSaasAdminUserEnabled) {
            return timeSaasAdminUserEnabled(Output.of(timeSaasAdminUserEnabled));
        }

        public AutonomousDatabaseSaasAdminUserArgs build() {
            if ($.autonomousDatabaseId == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseSaasAdminUserArgs", "autonomousDatabaseId");
            }
            return $;
        }
    }

}
