// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupArgs Empty = new BackupArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    @Import(name="databaseId", required=true)
    private Output<String> databaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }

    /**
     * The user-friendly name for the backup. The name does not have to be unique.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The user-friendly name for the backup. The name does not have to be unique.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="retentionPeriodInDays")
    private @Nullable Output<Integer> retentionPeriodInDays;

    public Optional<Output<Integer>> retentionPeriodInDays() {
        return Optional.ofNullable(this.retentionPeriodInDays);
    }

    @Import(name="retentionPeriodInYears")
    private @Nullable Output<Integer> retentionPeriodInYears;

    public Optional<Output<Integer>> retentionPeriodInYears() {
        return Optional.ofNullable(this.retentionPeriodInYears);
    }

    private BackupArgs() {}

    private BackupArgs(BackupArgs $) {
        this.databaseId = $.databaseId;
        this.displayName = $.displayName;
        this.retentionPeriodInDays = $.retentionPeriodInDays;
        this.retentionPeriodInYears = $.retentionPeriodInYears;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupArgs $;

        public Builder() {
            $ = new BackupArgs();
        }

        public Builder(BackupArgs defaults) {
            $ = new BackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param displayName The user-friendly name for the backup. The name does not have to be unique.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the backup. The name does not have to be unique.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder retentionPeriodInDays(@Nullable Output<Integer> retentionPeriodInDays) {
            $.retentionPeriodInDays = retentionPeriodInDays;
            return this;
        }

        public Builder retentionPeriodInDays(Integer retentionPeriodInDays) {
            return retentionPeriodInDays(Output.of(retentionPeriodInDays));
        }

        public Builder retentionPeriodInYears(@Nullable Output<Integer> retentionPeriodInYears) {
            $.retentionPeriodInYears = retentionPeriodInYears;
            return this;
        }

        public Builder retentionPeriodInYears(Integer retentionPeriodInYears) {
            return retentionPeriodInYears(Output.of(retentionPeriodInYears));
        }

        public BackupArgs build() {
            if ($.databaseId == null) {
                throw new MissingRequiredPropertyException("BackupArgs", "databaseId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("BackupArgs", "displayName");
            }
            return $;
        }
    }

}
