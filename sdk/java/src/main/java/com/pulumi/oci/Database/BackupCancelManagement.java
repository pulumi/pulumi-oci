// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Database.BackupCancelManagementArgs;
import com.pulumi.oci.Database.inputs.BackupCancelManagementState;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Backup Cancel Management resource in Oracle Cloud Infrastructure Database service.
 * 
 * Cancel automatic full/incremental create backup workrequests specified by the backup Id. This cannot be used on manual backups.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Database.BackupCancelManagement;
 * import com.pulumi.oci.Database.BackupCancelManagementArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testBackupCancelManagement = new BackupCancelManagement("testBackupCancelManagement", BackupCancelManagementArgs.builder()
 *             .backupId(testBackup.id())
 *             .cancelBackupTrigger(1)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Import is not supported for this resource.
 * 
 */
@ResourceType(type="oci:Database/backupCancelManagement:BackupCancelManagement")
public class BackupCancelManagement extends com.pulumi.resources.CustomResource {
    /**
     * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="backupId", refs={String.class}, tree="[0]")
    private Output<String> backupId;

    /**
     * @return The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> backupId() {
        return this.backupId;
    }
    /**
     * When changed to a different integer, re-triggers cancel backup on the backup specified by the backupId
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="cancelBackupTrigger", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cancelBackupTrigger;

    /**
     * @return When changed to a different integer, re-triggers cancel backup on the backup specified by the backupId
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Optional<Integer>> cancelBackupTrigger() {
        return Codegen.optional(this.cancelBackupTrigger);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackupCancelManagement(java.lang.String name) {
        this(name, BackupCancelManagementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackupCancelManagement(java.lang.String name, BackupCancelManagementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackupCancelManagement(java.lang.String name, BackupCancelManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/backupCancelManagement:BackupCancelManagement", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BackupCancelManagement(java.lang.String name, Output<java.lang.String> id, @Nullable BackupCancelManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/backupCancelManagement:BackupCancelManagement", name, state, makeResourceOptions(options, id), false);
    }

    private static BackupCancelManagementArgs makeArgs(BackupCancelManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BackupCancelManagementArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackupCancelManagement get(java.lang.String name, Output<java.lang.String> id, @Nullable BackupCancelManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackupCancelManagement(name, id, state, options);
    }
}
