// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupCancelManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupCancelManagementArgs Empty = new BackupCancelManagementArgs();

    /**
     * The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="backupId", required=true)
    private Output<String> backupId;

    /**
     * @return The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> backupId() {
        return this.backupId;
    }

    /**
     * When changed to a different integer, re-triggers cancel backup on the backup specified by the backup_id
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="cancelBackupTrigger")
    private @Nullable Output<Integer> cancelBackupTrigger;

    /**
     * @return When changed to a different integer, re-triggers cancel backup on the backup specified by the backup_id
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> cancelBackupTrigger() {
        return Optional.ofNullable(this.cancelBackupTrigger);
    }

    private BackupCancelManagementArgs() {}

    private BackupCancelManagementArgs(BackupCancelManagementArgs $) {
        this.backupId = $.backupId;
        this.cancelBackupTrigger = $.cancelBackupTrigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupCancelManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupCancelManagementArgs $;

        public Builder() {
            $ = new BackupCancelManagementArgs();
        }

        public Builder(BackupCancelManagementArgs defaults) {
            $ = new BackupCancelManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupId The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder backupId(Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        /**
         * @param backupId The backup [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        /**
         * @param cancelBackupTrigger When changed to a different integer, re-triggers cancel backup on the backup specified by the backup_id
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder cancelBackupTrigger(@Nullable Output<Integer> cancelBackupTrigger) {
            $.cancelBackupTrigger = cancelBackupTrigger;
            return this;
        }

        /**
         * @param cancelBackupTrigger When changed to a different integer, re-triggers cancel backup on the backup specified by the backup_id
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder cancelBackupTrigger(Integer cancelBackupTrigger) {
            return cancelBackupTrigger(Output.of(cancelBackupTrigger));
        }

        public BackupCancelManagementArgs build() {
            if ($.backupId == null) {
                throw new MissingRequiredPropertyException("BackupCancelManagementArgs", "backupId");
            }
            return $;
        }
    }

}
