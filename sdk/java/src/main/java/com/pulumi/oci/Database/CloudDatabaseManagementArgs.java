// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.inputs.CloudDatabaseManagementCredentialdetailsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudDatabaseManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudDatabaseManagementArgs Empty = new CloudDatabaseManagementArgs();

    @Import(name="credentialdetails", required=true)
    private Output<CloudDatabaseManagementCredentialdetailsArgs> credentialdetails;

    public Output<CloudDatabaseManagementCredentialdetailsArgs> credentialdetails() {
        return this.credentialdetails;
    }

    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="databaseId", required=true)
    private Output<String> databaseId;

    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }

    /**
     * (Updatable) Use this flag to enable/disable database management
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="enableManagement", required=true)
    private Output<Boolean> enableManagement;

    /**
     * @return (Updatable) Use this flag to enable/disable database management
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Boolean> enableManagement() {
        return this.enableManagement;
    }

    /**
     * (Updatable) Specifies database management type
     * enum:
     * - `BASIC`
     * - `ADVANCED`
     * 
     */
    @Import(name="managementType", required=true)
    private Output<String> managementType;

    /**
     * @return (Updatable) Specifies database management type
     * enum:
     * - `BASIC`
     * - `ADVANCED`
     * 
     */
    public Output<String> managementType() {
        return this.managementType;
    }

    /**
     * The port used to connect to the database.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port used to connect to the database.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     * 
     */
    @Import(name="privateEndPointId", required=true)
    private Output<String> privateEndPointId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     * 
     */
    public Output<String> privateEndPointId() {
        return this.privateEndPointId;
    }

    /**
     * Protocol used by the database connection.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Protocol used by the database connection.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * The role of the user that will be connecting to the database.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The role of the user that will be connecting to the database.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * The name of the Oracle Database service that will be used to connect to the database.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the Oracle Database service that will be used to connect to the database.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    @Import(name="sslSecretId")
    private @Nullable Output<String> sslSecretId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Optional<Output<String>> sslSecretId() {
        return Optional.ofNullable(this.sslSecretId);
    }

    private CloudDatabaseManagementArgs() {}

    private CloudDatabaseManagementArgs(CloudDatabaseManagementArgs $) {
        this.credentialdetails = $.credentialdetails;
        this.databaseId = $.databaseId;
        this.enableManagement = $.enableManagement;
        this.managementType = $.managementType;
        this.port = $.port;
        this.privateEndPointId = $.privateEndPointId;
        this.protocol = $.protocol;
        this.role = $.role;
        this.serviceName = $.serviceName;
        this.sslSecretId = $.sslSecretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudDatabaseManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudDatabaseManagementArgs $;

        public Builder() {
            $ = new CloudDatabaseManagementArgs();
        }

        public Builder(CloudDatabaseManagementArgs defaults) {
            $ = new CloudDatabaseManagementArgs(Objects.requireNonNull(defaults));
        }

        public Builder credentialdetails(Output<CloudDatabaseManagementCredentialdetailsArgs> credentialdetails) {
            $.credentialdetails = credentialdetails;
            return this;
        }

        public Builder credentialdetails(CloudDatabaseManagementCredentialdetailsArgs credentialdetails) {
            return credentialdetails(Output.of(credentialdetails));
        }

        /**
         * @param databaseId The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder databaseId(Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param enableManagement (Updatable) Use this flag to enable/disable database management
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableManagement(Output<Boolean> enableManagement) {
            $.enableManagement = enableManagement;
            return this;
        }

        /**
         * @param enableManagement (Updatable) Use this flag to enable/disable database management
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableManagement(Boolean enableManagement) {
            return enableManagement(Output.of(enableManagement));
        }

        /**
         * @param managementType (Updatable) Specifies database management type
         * enum:
         * - `BASIC`
         * - `ADVANCED`
         * 
         * @return builder
         * 
         */
        public Builder managementType(Output<String> managementType) {
            $.managementType = managementType;
            return this;
        }

        /**
         * @param managementType (Updatable) Specifies database management type
         * enum:
         * - `BASIC`
         * - `ADVANCED`
         * 
         * @return builder
         * 
         */
        public Builder managementType(String managementType) {
            return managementType(Output.of(managementType));
        }

        /**
         * @param port The port used to connect to the database.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port used to connect to the database.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param privateEndPointId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder privateEndPointId(Output<String> privateEndPointId) {
            $.privateEndPointId = privateEndPointId;
            return this;
        }

        /**
         * @param privateEndPointId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder privateEndPointId(String privateEndPointId) {
            return privateEndPointId(Output.of(privateEndPointId));
        }

        /**
         * @param protocol Protocol used by the database connection.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Protocol used by the database connection.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param role The role of the user that will be connecting to the database.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role of the user that will be connecting to the database.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param serviceName The name of the Oracle Database service that will be used to connect to the database.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the Oracle Database service that will be used to connect to the database.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param sslSecretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder sslSecretId(@Nullable Output<String> sslSecretId) {
            $.sslSecretId = sslSecretId;
            return this;
        }

        /**
         * @param sslSecretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder sslSecretId(String sslSecretId) {
            return sslSecretId(Output.of(sslSecretId));
        }

        public CloudDatabaseManagementArgs build() {
            if ($.credentialdetails == null) {
                throw new MissingRequiredPropertyException("CloudDatabaseManagementArgs", "credentialdetails");
            }
            if ($.databaseId == null) {
                throw new MissingRequiredPropertyException("CloudDatabaseManagementArgs", "databaseId");
            }
            if ($.enableManagement == null) {
                throw new MissingRequiredPropertyException("CloudDatabaseManagementArgs", "enableManagement");
            }
            if ($.managementType == null) {
                throw new MissingRequiredPropertyException("CloudDatabaseManagementArgs", "managementType");
            }
            if ($.privateEndPointId == null) {
                throw new MissingRequiredPropertyException("CloudDatabaseManagementArgs", "privateEndPointId");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("CloudDatabaseManagementArgs", "serviceName");
            }
            return $;
        }
    }

}
