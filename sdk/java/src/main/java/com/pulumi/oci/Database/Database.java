// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Database.DatabaseArgs;
import com.pulumi.oci.Database.inputs.DatabaseState;
import com.pulumi.oci.Database.outputs.DatabaseConnectionString;
import com.pulumi.oci.Database.outputs.DatabaseDatabase;
import com.pulumi.oci.Database.outputs.DatabaseDatabaseManagementConfig;
import com.pulumi.oci.Database.outputs.DatabaseDbBackupConfig;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Database resource in Oracle Cloud Infrastructure Database service.
 * 
 * Creates a new database in the specified Database Home. If the database version is provided, it must match the version of the Database Home. Applies only to Exadata systems.
 * 
 * **Important:** When `auto_backup_enabled` is not present in the configuration or set to true, the `auto_backup_window` and `auto_full_backup_window` will be ignored
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Database.Database;
 * import com.pulumi.oci.Database.DatabaseArgs;
 * import com.pulumi.oci.Database.inputs.DatabaseDatabaseArgs;
 * import com.pulumi.oci.Database.inputs.DatabaseDatabaseDbBackupConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testDatabase = new Database("testDatabase", DatabaseArgs.builder()        
 *             .database(DatabaseDatabaseArgs.builder()
 *                 .adminPassword(databaseDatabaseAdminPassword)
 *                 .dbName(databaseDatabaseDbName)
 *                 .backupId(testBackup.id())
 *                 .backupTdePassword(databaseDatabaseBackupTdePassword)
 *                 .characterSet(databaseDatabaseCharacterSet)
 *                 .databaseSoftwareImageId(testDatabaseSoftwareImage.id())
 *                 .dbBackupConfig(DatabaseDatabaseDbBackupConfigArgs.builder()
 *                     .autoBackupEnabled(databaseDatabaseDbBackupConfigAutoBackupEnabled)
 *                     .autoBackupWindow(databaseDatabaseDbBackupConfigAutoBackupWindow)
 *                     .autoFullBackupDay(databaseDatabaseDbBackupConfigAutoFullBackupDay)
 *                     .autoFullBackupWindow(databaseDatabaseDbBackupConfigAutoFullBackupWindow)
 *                     .backupDeletionPolicy(databaseDatabaseDbBackupConfigBackupDeletionPolicy)
 *                     .backupDestinationDetails(DatabaseDatabaseDbBackupConfigBackupDestinationDetailArgs.builder()
 *                         .dbrsPolicyId(testPolicy.id())
 *                         .id(databaseDatabaseDbBackupConfigBackupDestinationDetailsId)
 *                         .type(databaseDatabaseDbBackupConfigBackupDestinationDetailsType)
 *                         .build())
 *                     .recoveryWindowInDays(databaseDatabaseDbBackupConfigRecoveryWindowInDays)
 *                     .runImmediateFullBackup(databaseDatabaseDbBackupConfigRunImmediateFullBackup)
 *                     .build())
 *                 .dbUniqueName(databaseDatabaseDbUniqueName)
 *                 .dbWorkload(databaseDatabaseDbWorkload)
 *                 .definedTags(databaseDatabaseDefinedTags)
 *                 .freeformTags(databaseDatabaseFreeformTags)
 *                 .kmsKeyId(testKey.id())
 *                 .kmsKeyVersionId(testKeyVersion.id())
 *                 .ncharacterSet(databaseDatabaseNcharacterSet)
 *                 .pdbName(databaseDatabasePdbName)
 *                 .pluggableDatabases(databaseDatabasePluggableDatabases)
 *                 .sidPrefix(databaseDatabaseSidPrefix)
 *                 .tdeWalletPassword(databaseDatabaseTdeWalletPassword)
 *                 .vaultId(testVault.id())
 *                 .build())
 *             .dbHomeId(testDbHome.id())
 *             .source(databaseSource)
 *             .dbVersion(databaseDbVersion)
 *             .kmsKeyId(testKey.id())
 *             .kmsKeyVersionId(testKeyVersion.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Databases can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Database/database:Database test_database &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Database/database:Database")
public class Database extends com.pulumi.resources.CustomResource {
    /**
     * The character set for the database.  The default is AL32UTF8. Allowed values are:
     * 
     * AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
     * 
     */
    @Export(name="characterSet", refs={String.class}, tree="[0]")
    private Output<String> characterSet;

    /**
     * @return The character set for the database.  The default is AL32UTF8. Allowed values are:
     * 
     * AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
     * 
     */
    public Output<String> characterSet() {
        return this.characterSet;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The Connection strings used to connect to the Oracle Database.
     * 
     */
    @Export(name="connectionStrings", refs={List.class,DatabaseConnectionString.class}, tree="[0,1]")
    private Output<List<DatabaseConnectionString>> connectionStrings;

    /**
     * @return The Connection strings used to connect to the Oracle Database.
     * 
     */
    public Output<List<DatabaseConnectionString>> connectionStrings() {
        return this.connectionStrings;
    }
    /**
     * (Updatable) Details for creating a database.
     * 
     * **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
     * 
     */
    @Export(name="database", refs={DatabaseDatabase.class}, tree="[0]")
    private Output<DatabaseDatabase> database;

    /**
     * @return (Updatable) Details for creating a database.
     * 
     * **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
     * 
     */
    public Output<DatabaseDatabase> database() {
        return this.database;
    }
    /**
     * The configuration of the Database Management service.
     * 
     */
    @Export(name="databaseManagementConfigs", refs={List.class,DatabaseDatabaseManagementConfig.class}, tree="[0,1]")
    private Output<List<DatabaseDatabaseManagementConfig>> databaseManagementConfigs;

    /**
     * @return The configuration of the Database Management service.
     * 
     */
    public Output<List<DatabaseDatabaseManagementConfig>> databaseManagementConfigs() {
        return this.databaseManagementConfigs;
    }
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    @Export(name="databaseSoftwareImageId", refs={String.class}, tree="[0]")
    private Output<String> databaseSoftwareImageId;

    /**
     * @return The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Output<String> databaseSoftwareImageId() {
        return this.databaseSoftwareImageId;
    }
    /**
     * (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you&#39;re not authorized, talk to an administrator. If you&#39;re an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     * 
     */
    @Export(name="dbBackupConfigs", refs={List.class,DatabaseDbBackupConfig.class}, tree="[0,1]")
    private Output<List<DatabaseDbBackupConfig>> dbBackupConfigs;

    /**
     * @return (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you&#39;re not authorized, talk to an administrator. If you&#39;re an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     * 
     */
    public Output<List<DatabaseDbBackupConfig>> dbBackupConfigs() {
        return this.dbBackupConfigs;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     * 
     */
    @Export(name="dbHomeId", refs={String.class}, tree="[0]")
    private Output<String> dbHomeId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     * 
     */
    public Output<String> dbHomeId() {
        return this.dbHomeId;
    }
    /**
     * The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
     * 
     */
    @Export(name="dbName", refs={String.class}, tree="[0]")
    private Output<String> dbName;

    /**
     * @return The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
     * 
     */
    public Output<String> dbName() {
        return this.dbName;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    @Export(name="dbSystemId", refs={String.class}, tree="[0]")
    private Output<String> dbSystemId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public Output<String> dbSystemId() {
        return this.dbSystemId;
    }
    /**
     * The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
     * 
     */
    @Export(name="dbUniqueName", refs={String.class}, tree="[0]")
    private Output<String> dbUniqueName;

    /**
     * @return The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
     * 
     */
    public Output<String> dbUniqueName() {
        return this.dbUniqueName;
    }
    /**
     * A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    @Export(name="dbVersion", refs={String.class}, tree="[0]")
    private Output<String> dbVersion;

    /**
     * @return A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    public Output<String> dbVersion() {
        return this.dbVersion;
    }
    /**
     * **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud{@literal @}Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
     * 
     * The database workload type.
     * 
     */
    @Export(name="dbWorkload", refs={String.class}, tree="[0]")
    private Output<String> dbWorkload;

    /**
     * @return **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud{@literal @}Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
     * 
     * The database workload type.
     * 
     */
    public Output<String> dbWorkload() {
        return this.dbWorkload;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * True if the database is a container database.
     * 
     */
    @Export(name="isCdb", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isCdb;

    /**
     * @return True if the database is a container database.
     * 
     */
    public Output<Boolean> isCdb() {
        return this.isCdb;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    @Export(name="keyStoreId", refs={String.class}, tree="[0]")
    private Output<String> keyStoreId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    public Output<String> keyStoreId() {
        return this.keyStoreId;
    }
    /**
     * The wallet name for Oracle Key Vault.
     * 
     */
    @Export(name="keyStoreWalletName", refs={String.class}, tree="[0]")
    private Output<String> keyStoreWalletName;

    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    public Output<String> keyStoreWalletName() {
        return this.keyStoreWalletName;
    }
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyId;

    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public Output<String> kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
     * 
     */
    @Export(name="kmsKeyMigration", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> kmsKeyMigration;

    /**
     * @return The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
     * 
     */
    public Output<Optional<Boolean>> kmsKeyMigration() {
        return Codegen.optional(this.kmsKeyMigration);
    }
    /**
     * The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
     * 
     */
    @Export(name="kmsKeyRotation", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> kmsKeyRotation;

    /**
     * @return The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
     * 
     */
    public Output<Optional<Integer>> kmsKeyRotation() {
        return Codegen.optional(this.kmsKeyRotation);
    }
    /**
     * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
     * 
     */
    @Export(name="kmsKeyVersionId", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyVersionId;

    /**
     * @return The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
     * 
     */
    public Output<String> kmsKeyVersionId() {
        return this.kmsKeyVersionId;
    }
    /**
     * The duration when the latest database backup created.
     * 
     */
    @Export(name="lastBackupDurationInSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> lastBackupDurationInSeconds;

    /**
     * @return The duration when the latest database backup created.
     * 
     */
    public Output<Integer> lastBackupDurationInSeconds() {
        return this.lastBackupDurationInSeconds;
    }
    /**
     * The date and time when the latest database backup was created.
     * 
     */
    @Export(name="lastBackupTimestamp", refs={String.class}, tree="[0]")
    private Output<String> lastBackupTimestamp;

    /**
     * @return The date and time when the latest database backup was created.
     * 
     */
    public Output<String> lastBackupTimestamp() {
        return this.lastBackupTimestamp;
    }
    /**
     * The date and time when the latest database backup failed.
     * 
     */
    @Export(name="lastFailedBackupTimestamp", refs={String.class}, tree="[0]")
    private Output<String> lastFailedBackupTimestamp;

    /**
     * @return The date and time when the latest database backup failed.
     * 
     */
    public Output<String> lastFailedBackupTimestamp() {
        return this.lastFailedBackupTimestamp;
    }
    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    @Export(name="ncharacterSet", refs={String.class}, tree="[0]")
    private Output<String> ncharacterSet;

    /**
     * @return The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    public Output<String> ncharacterSet() {
        return this.ncharacterSet;
    }
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     * 
     */
    @Export(name="pdbName", refs={String.class}, tree="[0]")
    private Output<String> pdbName;

    /**
     * @return The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     * 
     */
    public Output<String> pdbName() {
        return this.pdbName;
    }
    /**
     * Specifies a prefix for the `Oracle SID` of the database to be created.
     * 
     */
    @Export(name="sidPrefix", refs={String.class}, tree="[0]")
    private Output<String> sidPrefix;

    /**
     * @return Specifies a prefix for the `Oracle SID` of the database to be created.
     * 
     */
    public Output<String> sidPrefix() {
        return this.sidPrefix;
    }
    /**
     * The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="source", refs={String.class}, tree="[0]")
    private Output<String> source;

    /**
     * @return The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> source() {
        return this.source;
    }
    /**
     * Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     * 
     */
    @Export(name="sourceDatabasePointInTimeRecoveryTimestamp", refs={String.class}, tree="[0]")
    private Output<String> sourceDatabasePointInTimeRecoveryTimestamp;

    /**
     * @return Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     * 
     */
    public Output<String> sourceDatabasePointInTimeRecoveryTimestamp() {
        return this.sourceDatabasePointInTimeRecoveryTimestamp;
    }
    /**
     * The current state of the database.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the database.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the database was created.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the database was created.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output<String> vaultId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    @Export(name="vmClusterId", refs={String.class}, tree="[0]")
    private Output<String> vmClusterId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    public Output<String> vmClusterId() {
        return this.vmClusterId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Database(String name) {
        this(name, DatabaseArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Database(String name, DatabaseArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Database(String name, DatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/database:Database", name, args == null ? DatabaseArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Database(String name, Output<String> id, @Nullable DatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/database:Database", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Database get(String name, Output<String> id, @Nullable DatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Database(name, id, state, options);
    }
}
