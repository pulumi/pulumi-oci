// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExecutionWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExecutionWindowArgs Empty = new ExecutionWindowArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
     * 
     */
    @Import(name="executionResourceId", required=true)
    private Output<String> executionResourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
     * 
     */
    public Output<String> executionResourceId() {
        return this.executionResourceId;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Indicates if duration the user plans to allocate for scheduling window is strictly enforced. The default value is `FALSE`.
     * 
     */
    @Import(name="isEnforcedDuration")
    private @Nullable Output<Boolean> isEnforcedDuration;

    /**
     * @return (Updatable) Indicates if duration the user plans to allocate for scheduling window is strictly enforced. The default value is `FALSE`.
     * 
     */
    public Optional<Output<Boolean>> isEnforcedDuration() {
        return Optional.ofNullable(this.isEnforcedDuration);
    }

    /**
     * (Updatable) The scheduled start date and time of the execution window.
     * 
     */
    @Import(name="timeScheduled", required=true)
    private Output<String> timeScheduled;

    /**
     * @return (Updatable) The scheduled start date and time of the execution window.
     * 
     */
    public Output<String> timeScheduled() {
        return this.timeScheduled;
    }

    /**
     * (Updatable) Duration window allows user to set a duration they plan to allocate for Scheduling window. The duration is in minutes.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="windowDurationInMins", required=true)
    private Output<Integer> windowDurationInMins;

    /**
     * @return (Updatable) Duration window allows user to set a duration they plan to allocate for Scheduling window. The duration is in minutes.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Integer> windowDurationInMins() {
        return this.windowDurationInMins;
    }

    private ExecutionWindowArgs() {}

    private ExecutionWindowArgs(ExecutionWindowArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.executionResourceId = $.executionResourceId;
        this.freeformTags = $.freeformTags;
        this.isEnforcedDuration = $.isEnforcedDuration;
        this.timeScheduled = $.timeScheduled;
        this.windowDurationInMins = $.windowDurationInMins;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExecutionWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExecutionWindowArgs $;

        public Builder() {
            $ = new ExecutionWindowArgs();
        }

        public Builder(ExecutionWindowArgs defaults) {
            $ = new ExecutionWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param executionResourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
         * 
         * @return builder
         * 
         */
        public Builder executionResourceId(Output<String> executionResourceId) {
            $.executionResourceId = executionResourceId;
            return this;
        }

        /**
         * @param executionResourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
         * 
         * @return builder
         * 
         */
        public Builder executionResourceId(String executionResourceId) {
            return executionResourceId(Output.of(executionResourceId));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isEnforcedDuration (Updatable) Indicates if duration the user plans to allocate for scheduling window is strictly enforced. The default value is `FALSE`.
         * 
         * @return builder
         * 
         */
        public Builder isEnforcedDuration(@Nullable Output<Boolean> isEnforcedDuration) {
            $.isEnforcedDuration = isEnforcedDuration;
            return this;
        }

        /**
         * @param isEnforcedDuration (Updatable) Indicates if duration the user plans to allocate for scheduling window is strictly enforced. The default value is `FALSE`.
         * 
         * @return builder
         * 
         */
        public Builder isEnforcedDuration(Boolean isEnforcedDuration) {
            return isEnforcedDuration(Output.of(isEnforcedDuration));
        }

        /**
         * @param timeScheduled (Updatable) The scheduled start date and time of the execution window.
         * 
         * @return builder
         * 
         */
        public Builder timeScheduled(Output<String> timeScheduled) {
            $.timeScheduled = timeScheduled;
            return this;
        }

        /**
         * @param timeScheduled (Updatable) The scheduled start date and time of the execution window.
         * 
         * @return builder
         * 
         */
        public Builder timeScheduled(String timeScheduled) {
            return timeScheduled(Output.of(timeScheduled));
        }

        /**
         * @param windowDurationInMins (Updatable) Duration window allows user to set a duration they plan to allocate for Scheduling window. The duration is in minutes.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder windowDurationInMins(Output<Integer> windowDurationInMins) {
            $.windowDurationInMins = windowDurationInMins;
            return this;
        }

        /**
         * @param windowDurationInMins (Updatable) Duration window allows user to set a duration they plan to allocate for Scheduling window. The duration is in minutes.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder windowDurationInMins(Integer windowDurationInMins) {
            return windowDurationInMins(Output.of(windowDurationInMins));
        }

        public ExecutionWindowArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ExecutionWindowArgs", "compartmentId");
            }
            if ($.executionResourceId == null) {
                throw new MissingRequiredPropertyException("ExecutionWindowArgs", "executionResourceId");
            }
            if ($.timeScheduled == null) {
                throw new MissingRequiredPropertyException("ExecutionWindowArgs", "timeScheduled");
            }
            if ($.windowDurationInMins == null) {
                throw new MissingRequiredPropertyException("ExecutionWindowArgs", "windowDurationInMins");
            }
            return $;
        }
    }

}
