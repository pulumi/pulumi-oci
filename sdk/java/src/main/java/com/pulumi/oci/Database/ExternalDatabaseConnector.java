// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Database.ExternalDatabaseConnectorArgs;
import com.pulumi.oci.Database.inputs.ExternalDatabaseConnectorState;
import com.pulumi.oci.Database.outputs.ExternalDatabaseConnectorConnectionCredentials;
import com.pulumi.oci.Database.outputs.ExternalDatabaseConnectorConnectionString;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the External Database Connector resource in Oracle Cloud Infrastructure Database service.
 * 
 * Creates a new external database connector.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Database.ExternalDatabaseConnector;
 * import com.pulumi.oci.Database.ExternalDatabaseConnectorArgs;
 * import com.pulumi.oci.Database.inputs.ExternalDatabaseConnectorConnectionCredentialsArgs;
 * import com.pulumi.oci.Database.inputs.ExternalDatabaseConnectorConnectionStringArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testExternalDatabaseConnector = new ExternalDatabaseConnector("testExternalDatabaseConnector", ExternalDatabaseConnectorArgs.builder()
 *             .connectionCredentials(ExternalDatabaseConnectorConnectionCredentialsArgs.builder()
 *                 .credentialName(externalDatabaseConnectorConnectionCredentialsCredentialName)
 *                 .credentialType(externalDatabaseConnectorConnectionCredentialsCredentialType)
 *                 .password(externalDatabaseConnectorConnectionCredentialsPassword)
 *                 .role(externalDatabaseConnectorConnectionCredentialsRole)
 *                 .sslSecretId(testSecret.id())
 *                 .username(externalDatabaseConnectorConnectionCredentialsUsername)
 *                 .build())
 *             .connectionString(ExternalDatabaseConnectorConnectionStringArgs.builder()
 *                 .hostname(externalDatabaseConnectorConnectionStringHostname)
 *                 .port(externalDatabaseConnectorConnectionStringPort)
 *                 .protocol(externalDatabaseConnectorConnectionStringProtocol)
 *                 .service(externalDatabaseConnectorConnectionStringService)
 *                 .build())
 *             .connectorAgentId(testConnectorAgent.id())
 *             .displayName(externalDatabaseConnectorDisplayName)
 *             .externalDatabaseId(testDatabase.id())
 *             .connectorType(externalDatabaseConnectorConnectorType)
 *             .definedTags(externalDatabaseConnectorDefinedTags)
 *             .freeformTags(Map.of("Department", "Finance"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ExternalDatabaseConnectors can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Database/externalDatabaseConnector:ExternalDatabaseConnector test_external_database_connector &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Database/externalDatabaseConnector:ExternalDatabaseConnector")
public class ExternalDatabaseConnector extends com.pulumi.resources.CustomResource {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
     * 
     */
    @Export(name="connectionCredentials", refs={ExternalDatabaseConnectorConnectionCredentials.class}, tree="[0]")
    private Output<ExternalDatabaseConnectorConnectionCredentials> connectionCredentials;

    /**
     * @return (Updatable) Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
     * 
     */
    public Output<ExternalDatabaseConnectorConnectionCredentials> connectionCredentials() {
        return this.connectionCredentials;
    }
    /**
     * The status of connectivity to the external database.
     * 
     */
    @Export(name="connectionStatus", refs={String.class}, tree="[0]")
    private Output<String> connectionStatus;

    /**
     * @return The status of connectivity to the external database.
     * 
     */
    public Output<String> connectionStatus() {
        return this.connectionStatus;
    }
    /**
     * (Updatable) The Oracle Database connection string.
     * 
     */
    @Export(name="connectionString", refs={ExternalDatabaseConnectorConnectionString.class}, tree="[0]")
    private Output<ExternalDatabaseConnectorConnectionString> connectionString;

    /**
     * @return (Updatable) The Oracle Database connection string.
     * 
     */
    public Output<ExternalDatabaseConnectorConnectionString> connectionString() {
        return this.connectionString;
    }
    /**
     * The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    @Export(name="connectorAgentId", refs={String.class}, tree="[0]")
    private Output<String> connectorAgentId;

    /**
     * @return The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    public Output<String> connectorAgentId() {
        return this.connectorAgentId;
    }
    /**
     * (Updatable) The type of connector used by the external database resource.
     * 
     */
    @Export(name="connectorType", refs={String.class}, tree="[0]")
    private Output<String> connectorType;

    /**
     * @return (Updatable) The type of connector used by the external database resource.
     * 
     */
    public Output<String> connectorType() {
        return this.connectorType;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
     * 
     */
    @Export(name="externalDatabaseId", refs={String.class}, tree="[0]")
    private Output<String> externalDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
     * 
     */
    public Output<String> externalDatabaseId() {
        return this.externalDatabaseId;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * The current lifecycle state of the external database connector resource.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current lifecycle state of the external database connector resource.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the `connectionStatus` of this external connector was last updated.
     * 
     */
    @Export(name="timeConnectionStatusLastUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeConnectionStatusLastUpdated;

    /**
     * @return The date and time the `connectionStatus` of this external connector was last updated.
     * 
     */
    public Output<String> timeConnectionStatusLastUpdated() {
        return this.timeConnectionStatusLastUpdated;
    }
    /**
     * The date and time the external connector was created.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the external connector was created.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalDatabaseConnector(java.lang.String name) {
        this(name, ExternalDatabaseConnectorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalDatabaseConnector(java.lang.String name, ExternalDatabaseConnectorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalDatabaseConnector(java.lang.String name, ExternalDatabaseConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/externalDatabaseConnector:ExternalDatabaseConnector", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExternalDatabaseConnector(java.lang.String name, Output<java.lang.String> id, @Nullable ExternalDatabaseConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/externalDatabaseConnector:ExternalDatabaseConnector", name, state, makeResourceOptions(options, id), false);
    }

    private static ExternalDatabaseConnectorArgs makeArgs(ExternalDatabaseConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExternalDatabaseConnectorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalDatabaseConnector get(java.lang.String name, Output<java.lang.String> id, @Nullable ExternalDatabaseConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalDatabaseConnector(name, id, state, options);
    }
}
