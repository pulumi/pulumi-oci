// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Database.ExternalNonContainerDatabaseManagementArgs;
import com.pulumi.oci.Database.inputs.ExternalNonContainerDatabaseManagementState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the External Non Container Database Management resource in Oracle Cloud Infrastructure Database service.
 * 
 * Enable Database Management Service for the external non-container database.
 * For more information about the Database Management Service, see
 * [Database Management Service](https://docs.cloud.oracle.com/iaas/Content/ExternalDatabase/Concepts/databasemanagementservice.htm).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Database.ExternalNonContainerDatabaseManagement;
 * import com.pulumi.oci.Database.ExternalNonContainerDatabaseManagementArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testExternalNonContainerDatabaseManagement = new ExternalNonContainerDatabaseManagement("testExternalNonContainerDatabaseManagement", ExternalNonContainerDatabaseManagementArgs.builder()        
 *             .externalDatabaseConnectorId(testExternalDatabaseConnector.id())
 *             .externalNonContainerDatabaseId(testExternalNonContainerDatabase.id())
 *             .licenseMode(externalNonContainerDatabaseManagementLicenseModel)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Import is not supported for this resource.
 * 
 */
@ResourceType(type="oci:Database/externalNonContainerDatabaseManagement:ExternalNonContainerDatabaseManagement")
public class ExternalNonContainerDatabaseManagement extends com.pulumi.resources.CustomResource {
    @Export(name="enableManagement", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableManagement;

    public Output<Boolean> enableManagement() {
        return this.enableManagement;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    @Export(name="externalDatabaseConnectorId", refs={String.class}, tree="[0]")
    private Output<String> externalDatabaseConnectorId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    public Output<String> externalDatabaseConnectorId() {
        return this.externalDatabaseConnectorId;
    }
    /**
     * The external non-container database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="externalNonContainerDatabaseId", refs={String.class}, tree="[0]")
    private Output<String> externalNonContainerDatabaseId;

    /**
     * @return The external non-container database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> externalNonContainerDatabaseId() {
        return this.externalNonContainerDatabaseId;
    }
    /**
     * The Oracle license model that applies to the external database. Required only for enabling database management.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="licenseModel", refs={String.class}, tree="[0]")
    private Output<String> licenseModel;

    /**
     * @return The Oracle license model that applies to the external database. Required only for enabling database management.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> licenseModel() {
        return this.licenseModel;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalNonContainerDatabaseManagement(String name) {
        this(name, ExternalNonContainerDatabaseManagementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalNonContainerDatabaseManagement(String name, ExternalNonContainerDatabaseManagementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalNonContainerDatabaseManagement(String name, ExternalNonContainerDatabaseManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/externalNonContainerDatabaseManagement:ExternalNonContainerDatabaseManagement", name, args == null ? ExternalNonContainerDatabaseManagementArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExternalNonContainerDatabaseManagement(String name, Output<String> id, @Nullable ExternalNonContainerDatabaseManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/externalNonContainerDatabaseManagement:ExternalNonContainerDatabaseManagement", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalNonContainerDatabaseManagement get(String name, Output<String> id, @Nullable ExternalNonContainerDatabaseManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalNonContainerDatabaseManagement(name, id, state, options);
    }
}
