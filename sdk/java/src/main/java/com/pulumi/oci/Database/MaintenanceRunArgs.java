// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MaintenanceRunArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceRunArgs Empty = new MaintenanceRunArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Maintenance Run.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Maintenance Run.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
     * 
     */
    @Import(name="isDstFileUpdateEnabled")
    private @Nullable Output<Boolean> isDstFileUpdateEnabled;

    /**
     * @return Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
     * 
     */
    public Optional<Output<Boolean>> isDstFileUpdateEnabled() {
        return Optional.ofNullable(this.isDstFileUpdateEnabled);
    }

    /**
     * Patch type, either &#34;QUARTERLY&#34; or &#34;TIMEZONE&#34;.
     * 
     */
    @Import(name="patchType", required=true)
    private Output<String> patchType;

    /**
     * @return Patch type, either &#34;QUARTERLY&#34; or &#34;TIMEZONE&#34;.
     * 
     */
    public Output<String> patchType() {
        return this.patchType;
    }

    /**
     * (Updatable) Cloud Exadata infrastructure node patching method, either &#34;ROLLING&#34; or &#34;NONROLLING&#34;. Default value is ROLLING.
     * 
     * *IMPORTANT*: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
     * 
     */
    @Import(name="patchingMode")
    private @Nullable Output<String> patchingMode;

    /**
     * @return (Updatable) Cloud Exadata infrastructure node patching method, either &#34;ROLLING&#34; or &#34;NONROLLING&#34;. Default value is ROLLING.
     * 
     * *IMPORTANT*: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
     * 
     */
    public Optional<Output<String>> patchingMode() {
        return Optional.ofNullable(this.patchingMode);
    }

    /**
     * The ID of the target resource for which the maintenance run should be created.
     * 
     */
    @Import(name="targetResourceId", required=true)
    private Output<String> targetResourceId;

    /**
     * @return The ID of the target resource for which the maintenance run should be created.
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }

    /**
     * (Updatable) The date and time that update should be scheduled.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeScheduled", required=true)
    private Output<String> timeScheduled;

    /**
     * @return (Updatable) The date and time that update should be scheduled.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> timeScheduled() {
        return this.timeScheduled;
    }

    private MaintenanceRunArgs() {}

    private MaintenanceRunArgs(MaintenanceRunArgs $) {
        this.compartmentId = $.compartmentId;
        this.isDstFileUpdateEnabled = $.isDstFileUpdateEnabled;
        this.patchType = $.patchType;
        this.patchingMode = $.patchingMode;
        this.targetResourceId = $.targetResourceId;
        this.timeScheduled = $.timeScheduled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceRunArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceRunArgs $;

        public Builder() {
            $ = new MaintenanceRunArgs();
        }

        public Builder(MaintenanceRunArgs defaults) {
            $ = new MaintenanceRunArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Maintenance Run.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Maintenance Run.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param isDstFileUpdateEnabled Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
         * 
         * @return builder
         * 
         */
        public Builder isDstFileUpdateEnabled(@Nullable Output<Boolean> isDstFileUpdateEnabled) {
            $.isDstFileUpdateEnabled = isDstFileUpdateEnabled;
            return this;
        }

        /**
         * @param isDstFileUpdateEnabled Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
         * 
         * @return builder
         * 
         */
        public Builder isDstFileUpdateEnabled(Boolean isDstFileUpdateEnabled) {
            return isDstFileUpdateEnabled(Output.of(isDstFileUpdateEnabled));
        }

        /**
         * @param patchType Patch type, either &#34;QUARTERLY&#34; or &#34;TIMEZONE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder patchType(Output<String> patchType) {
            $.patchType = patchType;
            return this;
        }

        /**
         * @param patchType Patch type, either &#34;QUARTERLY&#34; or &#34;TIMEZONE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder patchType(String patchType) {
            return patchType(Output.of(patchType));
        }

        /**
         * @param patchingMode (Updatable) Cloud Exadata infrastructure node patching method, either &#34;ROLLING&#34; or &#34;NONROLLING&#34;. Default value is ROLLING.
         * 
         * *IMPORTANT*: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
         * 
         * @return builder
         * 
         */
        public Builder patchingMode(@Nullable Output<String> patchingMode) {
            $.patchingMode = patchingMode;
            return this;
        }

        /**
         * @param patchingMode (Updatable) Cloud Exadata infrastructure node patching method, either &#34;ROLLING&#34; or &#34;NONROLLING&#34;. Default value is ROLLING.
         * 
         * *IMPORTANT*: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
         * 
         * @return builder
         * 
         */
        public Builder patchingMode(String patchingMode) {
            return patchingMode(Output.of(patchingMode));
        }

        /**
         * @param targetResourceId The ID of the target resource for which the maintenance run should be created.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(Output<String> targetResourceId) {
            $.targetResourceId = targetResourceId;
            return this;
        }

        /**
         * @param targetResourceId The ID of the target resource for which the maintenance run should be created.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(String targetResourceId) {
            return targetResourceId(Output.of(targetResourceId));
        }

        /**
         * @param timeScheduled (Updatable) The date and time that update should be scheduled.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeScheduled(Output<String> timeScheduled) {
            $.timeScheduled = timeScheduled;
            return this;
        }

        /**
         * @param timeScheduled (Updatable) The date and time that update should be scheduled.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeScheduled(String timeScheduled) {
            return timeScheduled(Output.of(timeScheduled));
        }

        public MaintenanceRunArgs build() {
            if ($.patchType == null) {
                throw new MissingRequiredPropertyException("MaintenanceRunArgs", "patchType");
            }
            if ($.targetResourceId == null) {
                throw new MissingRequiredPropertyException("MaintenanceRunArgs", "targetResourceId");
            }
            if ($.timeScheduled == null) {
                throw new MissingRequiredPropertyException("MaintenanceRunArgs", "timeScheduled");
            }
            return $;
        }
    }

}
