// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Database.PluggableDatabaseManagementsManagementArgs;
import com.pulumi.oci.Database.inputs.PluggableDatabaseManagementsManagementState;
import com.pulumi.oci.Database.outputs.PluggableDatabaseManagementsManagementConnectionString;
import com.pulumi.oci.Database.outputs.PluggableDatabaseManagementsManagementCredentialDetails;
import com.pulumi.oci.Database.outputs.PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfig;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Pluggable Database Pluggabledatabasemanagements Management resource in Oracle Cloud Infrastructure Database service.
 * 
 * Enables the Database Management service for an Oracle Pluggable Database located in Oracle Cloud Infrastructure. This service allows the pluggable database to access tools including Metrics and Performance hub. Database Management is enabled at the pluggable database (PDB) level.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Database.PluggableDatabaseManagementsManagement;
 * import com.pulumi.oci.Database.PluggableDatabaseManagementsManagementArgs;
 * import com.pulumi.oci.Database.inputs.PluggableDatabaseManagementsManagementCredentialDetailsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testPluggableDatabasePluggabledatabasemanagementsManagement = new PluggableDatabaseManagementsManagement(&#34;testPluggableDatabasePluggabledatabasemanagementsManagement&#34;, PluggableDatabaseManagementsManagementArgs.builder()        
 *             .pluggableDatabaseId(oci_database_pluggable_database.test_pluggable_database().id())
 *             .enablePluggabledatabasemanagement(var_.enable_pluggabledatabasemanagement())
 *             .credentialDetails(PluggableDatabaseManagementsManagementCredentialDetailsArgs.builder()
 *                 .passwordSecretId(oci_vault_secret.test_secret().id())
 *                 .userName(oci_identity_user.test_user().name())
 *                 .build())
 *             .privateEndPointId(oci_database_private_end_point.test_private_end_point().id())
 *             .serviceName(oci_core_service.test_service().name())
 *             .port(var_.pluggable_database_pluggabledatabasemanagements_management_port())
 *             .protocol(var_.pluggable_database_pluggabledatabasemanagements_management_protocol())
 *             .role(var_.pluggable_database_pluggabledatabasemanagements_management_role())
 *             .sslSecretId(oci_vault_secret.test_secret().id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="oci:Database/pluggableDatabaseManagementsManagement:PluggableDatabaseManagementsManagement")
public class PluggableDatabaseManagementsManagement extends com.pulumi.resources.CustomResource {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * Connection strings to connect to an Oracle Pluggable Database.
     * 
     */
    @Export(name="connectionStrings", refs={List.class,PluggableDatabaseManagementsManagementConnectionString.class}, tree="[0,1]")
    private Output<List<PluggableDatabaseManagementsManagementConnectionString>> connectionStrings;

    /**
     * @return Connection strings to connect to an Oracle Pluggable Database.
     * 
     */
    public Output<List<PluggableDatabaseManagementsManagementConnectionString>> connectionStrings() {
        return this.connectionStrings;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
     * 
     */
    @Export(name="containerDatabaseId", refs={String.class}, tree="[0]")
    private Output<String> containerDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
     * 
     */
    public Output<String> containerDatabaseId() {
        return this.containerDatabaseId;
    }
    /**
     * Data for the credential used to connect to the database.
     * 
     */
    @Export(name="credentialDetails", refs={PluggableDatabaseManagementsManagementCredentialDetails.class}, tree="[0]")
    private Output<PluggableDatabaseManagementsManagementCredentialDetails> credentialDetails;

    /**
     * @return Data for the credential used to connect to the database.
     * 
     */
    public Output<PluggableDatabaseManagementsManagementCredentialDetails> credentialDetails() {
        return this.credentialDetails;
    }
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="enablePluggabledatabasemanagement", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enablePluggabledatabasemanagement;

    /**
     * @return (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Boolean> enablePluggabledatabasemanagement() {
        return this.enablePluggabledatabasemanagement;
    }
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
     * 
     */
    @Export(name="isRestricted", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isRestricted;

    /**
     * @return The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
     * 
     */
    public Output<Boolean> isRestricted() {
        return this.isRestricted;
    }
    /**
     * Detailed message for the lifecycle state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     * 
     */
    @Export(name="openMode", refs={String.class}, tree="[0]")
    private Output<String> openMode;

    /**
     * @return The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     * 
     */
    public Output<String> openMode() {
        return this.openMode;
    }
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     * 
     */
    @Export(name="pdbName", refs={String.class}, tree="[0]")
    private Output<String> pdbName;

    /**
     * @return The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     * 
     */
    public Output<String> pdbName() {
        return this.pdbName;
    }
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="pluggableDatabaseId", refs={String.class}, tree="[0]")
    private Output<String> pluggableDatabaseId;

    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> pluggableDatabaseId() {
        return this.pluggableDatabaseId;
    }
    /**
     * The configuration of the Pluggable Database Management service.
     * 
     */
    @Export(name="pluggableDatabaseManagementConfigs", refs={List.class,PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfig.class}, tree="[0,1]")
    private Output<List<PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfig>> pluggableDatabaseManagementConfigs;

    /**
     * @return The configuration of the Pluggable Database Management service.
     * 
     */
    public Output<List<PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfig>> pluggableDatabaseManagementConfigs() {
        return this.pluggableDatabaseManagementConfigs;
    }
    /**
     * The port used to connect to the pluggable database.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return The port used to connect to the pluggable database.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     * 
     */
    @Export(name="privateEndPointId", refs={String.class}, tree="[0]")
    private Output<String> privateEndPointId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     * 
     */
    public Output<String> privateEndPointId() {
        return this.privateEndPointId;
    }
    /**
     * Protocol used by the database connection.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return Protocol used by the database connection.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * The role of the user that will be connecting to the pluggable database.
     * 
     */
    @Export(name="role", refs={String.class}, tree="[0]")
    private Output<String> role;

    /**
     * @return The role of the user that will be connecting to the pluggable database.
     * 
     */
    public Output<String> role() {
        return this.role;
    }
    /**
     * The name of the Oracle Database service that will be used to connect to the database.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The name of the Oracle Database service that will be used to connect to the database.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    @Export(name="sslSecretId", refs={String.class}, tree="[0]")
    private Output<String> sslSecretId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Output<String> sslSecretId() {
        return this.sslSecretId;
    }
    /**
     * The current state of the pluggable database.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the pluggable database.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the pluggable database was created.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the pluggable database was created.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PluggableDatabaseManagementsManagement(String name) {
        this(name, PluggableDatabaseManagementsManagementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PluggableDatabaseManagementsManagement(String name, PluggableDatabaseManagementsManagementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PluggableDatabaseManagementsManagement(String name, PluggableDatabaseManagementsManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/pluggableDatabaseManagementsManagement:PluggableDatabaseManagementsManagement", name, args == null ? PluggableDatabaseManagementsManagementArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PluggableDatabaseManagementsManagement(String name, Output<String> id, @Nullable PluggableDatabaseManagementsManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Database/pluggableDatabaseManagementsManagement:PluggableDatabaseManagementsManagement", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PluggableDatabaseManagementsManagement get(String name, Output<String> id, @Nullable PluggableDatabaseManagementsManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PluggableDatabaseManagementsManagement(name, id, state, options);
    }
}
