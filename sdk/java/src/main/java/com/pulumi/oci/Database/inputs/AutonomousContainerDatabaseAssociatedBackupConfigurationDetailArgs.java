// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs Empty = new AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs();

    /**
     * The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
     * 
     */
    @Import(name="backupDestinationAttachHistories")
    private @Nullable Output<List<String>> backupDestinationAttachHistories;

    /**
     * @return The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
     * 
     */
    public Optional<Output<List<String>>> backupDestinationAttachHistories() {
        return Optional.ofNullable(this.backupDestinationAttachHistories);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    @Import(name="dbrsPolicyId")
    private @Nullable Output<String> dbrsPolicyId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    public Optional<Output<String>> dbrsPolicyId() {
        return Optional.ofNullable(this.dbrsPolicyId);
    }

    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Proxy URL to connect to object store.
     * 
     */
    @Import(name="internetProxy")
    private @Nullable Output<String> internetProxy;

    /**
     * @return Proxy URL to connect to object store.
     * 
     */
    public Optional<Output<String>> internetProxy() {
        return Optional.ofNullable(this.internetProxy);
    }

    /**
     * Number of days between the current and earliest point of recoverability covered by automatic backups.
     * 
     */
    @Import(name="recoveryWindowInDays")
    private @Nullable Output<Integer> recoveryWindowInDays;

    /**
     * @return Number of days between the current and earliest point of recoverability covered by automatic backups.
     * 
     */
    public Optional<Output<Integer>> recoveryWindowInDays() {
        return Optional.ofNullable(this.recoveryWindowInDays);
    }

    /**
     * The total space utilized (in GBs) by this Autonomous Container Database on this backup destination, rounded to the nearest integer.
     * 
     */
    @Import(name="spaceUtilizedInGbs")
    private @Nullable Output<Integer> spaceUtilizedInGbs;

    /**
     * @return The total space utilized (in GBs) by this Autonomous Container Database on this backup destination, rounded to the nearest integer.
     * 
     */
    public Optional<Output<Integer>> spaceUtilizedInGbs() {
        return Optional.ofNullable(this.spaceUtilizedInGbs);
    }

    /**
     * The latest timestamp when the backup destination details, such as &#39;spaceUtilized,&#39; are updated.
     * 
     */
    @Import(name="timeAtWhichStorageDetailsAreUpdated")
    private @Nullable Output<String> timeAtWhichStorageDetailsAreUpdated;

    /**
     * @return The latest timestamp when the backup destination details, such as &#39;spaceUtilized,&#39; are updated.
     * 
     */
    public Optional<Output<String>> timeAtWhichStorageDetailsAreUpdated() {
        return Optional.ofNullable(this.timeAtWhichStorageDetailsAreUpdated);
    }

    /**
     * Type of the database backup destination.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the database backup destination.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    @Import(name="vpcPassword")
    private @Nullable Output<String> vpcPassword;

    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    public Optional<Output<String>> vpcPassword() {
        return Optional.ofNullable(this.vpcPassword);
    }

    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    @Import(name="vpcUser")
    private @Nullable Output<String> vpcUser;

    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    public Optional<Output<String>> vpcUser() {
        return Optional.ofNullable(this.vpcUser);
    }

    private AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs() {}

    private AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs(AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs $) {
        this.backupDestinationAttachHistories = $.backupDestinationAttachHistories;
        this.dbrsPolicyId = $.dbrsPolicyId;
        this.id = $.id;
        this.internetProxy = $.internetProxy;
        this.recoveryWindowInDays = $.recoveryWindowInDays;
        this.spaceUtilizedInGbs = $.spaceUtilizedInGbs;
        this.timeAtWhichStorageDetailsAreUpdated = $.timeAtWhichStorageDetailsAreUpdated;
        this.type = $.type;
        this.vpcPassword = $.vpcPassword;
        this.vpcUser = $.vpcUser;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs $;

        public Builder() {
            $ = new AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs();
        }

        public Builder(AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs defaults) {
            $ = new AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupDestinationAttachHistories The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
         * 
         * @return builder
         * 
         */
        public Builder backupDestinationAttachHistories(@Nullable Output<List<String>> backupDestinationAttachHistories) {
            $.backupDestinationAttachHistories = backupDestinationAttachHistories;
            return this;
        }

        /**
         * @param backupDestinationAttachHistories The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
         * 
         * @return builder
         * 
         */
        public Builder backupDestinationAttachHistories(List<String> backupDestinationAttachHistories) {
            return backupDestinationAttachHistories(Output.of(backupDestinationAttachHistories));
        }

        /**
         * @param backupDestinationAttachHistories The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
         * 
         * @return builder
         * 
         */
        public Builder backupDestinationAttachHistories(String... backupDestinationAttachHistories) {
            return backupDestinationAttachHistories(List.of(backupDestinationAttachHistories));
        }

        /**
         * @param dbrsPolicyId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
         * 
         * @return builder
         * 
         */
        public Builder dbrsPolicyId(@Nullable Output<String> dbrsPolicyId) {
            $.dbrsPolicyId = dbrsPolicyId;
            return this;
        }

        /**
         * @param dbrsPolicyId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
         * 
         * @return builder
         * 
         */
        public Builder dbrsPolicyId(String dbrsPolicyId) {
            return dbrsPolicyId(Output.of(dbrsPolicyId));
        }

        /**
         * @param id The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param internetProxy Proxy URL to connect to object store.
         * 
         * @return builder
         * 
         */
        public Builder internetProxy(@Nullable Output<String> internetProxy) {
            $.internetProxy = internetProxy;
            return this;
        }

        /**
         * @param internetProxy Proxy URL to connect to object store.
         * 
         * @return builder
         * 
         */
        public Builder internetProxy(String internetProxy) {
            return internetProxy(Output.of(internetProxy));
        }

        /**
         * @param recoveryWindowInDays Number of days between the current and earliest point of recoverability covered by automatic backups.
         * 
         * @return builder
         * 
         */
        public Builder recoveryWindowInDays(@Nullable Output<Integer> recoveryWindowInDays) {
            $.recoveryWindowInDays = recoveryWindowInDays;
            return this;
        }

        /**
         * @param recoveryWindowInDays Number of days between the current and earliest point of recoverability covered by automatic backups.
         * 
         * @return builder
         * 
         */
        public Builder recoveryWindowInDays(Integer recoveryWindowInDays) {
            return recoveryWindowInDays(Output.of(recoveryWindowInDays));
        }

        /**
         * @param spaceUtilizedInGbs The total space utilized (in GBs) by this Autonomous Container Database on this backup destination, rounded to the nearest integer.
         * 
         * @return builder
         * 
         */
        public Builder spaceUtilizedInGbs(@Nullable Output<Integer> spaceUtilizedInGbs) {
            $.spaceUtilizedInGbs = spaceUtilizedInGbs;
            return this;
        }

        /**
         * @param spaceUtilizedInGbs The total space utilized (in GBs) by this Autonomous Container Database on this backup destination, rounded to the nearest integer.
         * 
         * @return builder
         * 
         */
        public Builder spaceUtilizedInGbs(Integer spaceUtilizedInGbs) {
            return spaceUtilizedInGbs(Output.of(spaceUtilizedInGbs));
        }

        /**
         * @param timeAtWhichStorageDetailsAreUpdated The latest timestamp when the backup destination details, such as &#39;spaceUtilized,&#39; are updated.
         * 
         * @return builder
         * 
         */
        public Builder timeAtWhichStorageDetailsAreUpdated(@Nullable Output<String> timeAtWhichStorageDetailsAreUpdated) {
            $.timeAtWhichStorageDetailsAreUpdated = timeAtWhichStorageDetailsAreUpdated;
            return this;
        }

        /**
         * @param timeAtWhichStorageDetailsAreUpdated The latest timestamp when the backup destination details, such as &#39;spaceUtilized,&#39; are updated.
         * 
         * @return builder
         * 
         */
        public Builder timeAtWhichStorageDetailsAreUpdated(String timeAtWhichStorageDetailsAreUpdated) {
            return timeAtWhichStorageDetailsAreUpdated(Output.of(timeAtWhichStorageDetailsAreUpdated));
        }

        /**
         * @param type Type of the database backup destination.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the database backup destination.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vpcPassword For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcPassword(@Nullable Output<String> vpcPassword) {
            $.vpcPassword = vpcPassword;
            return this;
        }

        /**
         * @param vpcPassword For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcPassword(String vpcPassword) {
            return vpcPassword(Output.of(vpcPassword));
        }

        /**
         * @param vpcUser For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcUser(@Nullable Output<String> vpcUser) {
            $.vpcUser = vpcUser;
            return this;
        }

        /**
         * @param vpcUser For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcUser(String vpcUser) {
            return vpcUser(Output.of(vpcUser));
        }

        public AutonomousContainerDatabaseAssociatedBackupConfigurationDetailArgs build() {
            return $;
        }
    }

}
