// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseEncryptionKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseEncryptionKeyArgs Empty = new AutonomousDatabaseEncryptionKeyArgs();

    /**
     * (Updatable) AWS ARN role
     * 
     */
    @Import(name="arnRole")
    private @Nullable Output<String> arnRole;

    /**
     * @return (Updatable) AWS ARN role
     * 
     */
    public Optional<Output<String>> arnRole() {
        return Optional.ofNullable(this.arnRole);
    }

    /**
     * (Updatable) The provider for the Autonomous Database encryption key.
     * 
     */
    @Import(name="autonomousDatabaseProvider")
    private @Nullable Output<String> autonomousDatabaseProvider;

    /**
     * @return (Updatable) The provider for the Autonomous Database encryption key.
     * 
     */
    public Optional<Output<String>> autonomousDatabaseProvider() {
        return Optional.ofNullable(this.autonomousDatabaseProvider);
    }

    /**
     * (Updatable) OKV certificate directory name
     * 
     */
    @Import(name="certificateDirectoryName")
    private @Nullable Output<String> certificateDirectoryName;

    /**
     * @return (Updatable) OKV certificate directory name
     * 
     */
    public Optional<Output<String>> certificateDirectoryName() {
        return Optional.ofNullable(this.certificateDirectoryName);
    }

    /**
     * (Updatable) OKV certificate id
     * 
     */
    @Import(name="certificateId")
    private @Nullable Output<String> certificateId;

    /**
     * @return (Updatable) OKV certificate id
     * 
     */
    public Optional<Output<String>> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    /**
     * (Updatable) OKV wallet directory name
     * 
     */
    @Import(name="directoryName")
    private @Nullable Output<String> directoryName;

    /**
     * @return (Updatable) OKV wallet directory name
     * 
     */
    public Optional<Output<String>> directoryName() {
        return Optional.ofNullable(this.directoryName);
    }

    /**
     * (Updatable) AWS external ID
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return (Updatable) AWS external ID
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * (Updatable) AWS key ARN
     * 
     */
    @Import(name="keyArn")
    private @Nullable Output<String> keyArn;

    /**
     * @return (Updatable) AWS key ARN
     * 
     */
    public Optional<Output<String>> keyArn() {
        return Optional.ofNullable(this.keyArn);
    }

    /**
     * (Updatable) Azure key name
     * 
     */
    @Import(name="keyName")
    private @Nullable Output<String> keyName;

    /**
     * @return (Updatable) Azure key name
     * 
     */
    public Optional<Output<String>> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    /**
     * (Updatable) The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return (Updatable) The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * (Updatable) UUID of OKV KMS Key
     * 
     */
    @Import(name="okvKmsKey")
    private @Nullable Output<String> okvKmsKey;

    /**
     * @return (Updatable) UUID of OKV KMS Key
     * 
     */
    public Optional<Output<String>> okvKmsKey() {
        return Optional.ofNullable(this.okvKmsKey);
    }

    /**
     * (Updatable) URI of OKV server
     * 
     */
    @Import(name="okvUri")
    private @Nullable Output<String> okvUri;

    /**
     * @return (Updatable) URI of OKV server
     * 
     */
    public Optional<Output<String>> okvUri() {
        return Optional.ofNullable(this.okvUri);
    }

    /**
     * (Updatable) AWS key service endpoint URI
     * 
     */
    @Import(name="serviceEndpointUri")
    private @Nullable Output<String> serviceEndpointUri;

    /**
     * @return (Updatable) AWS key service endpoint URI
     * 
     */
    public Optional<Output<String>> serviceEndpointUri() {
        return Optional.ofNullable(this.serviceEndpointUri);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
     * 
     */
    @Import(name="vaultId")
    private @Nullable Output<String> vaultId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
     * 
     */
    public Optional<Output<String>> vaultId() {
        return Optional.ofNullable(this.vaultId);
    }

    /**
     * (Updatable) Azure vault URI
     * 
     */
    @Import(name="vaultUri")
    private @Nullable Output<String> vaultUri;

    /**
     * @return (Updatable) Azure vault URI
     * 
     */
    public Optional<Output<String>> vaultUri() {
        return Optional.ofNullable(this.vaultUri);
    }

    private AutonomousDatabaseEncryptionKeyArgs() {}

    private AutonomousDatabaseEncryptionKeyArgs(AutonomousDatabaseEncryptionKeyArgs $) {
        this.arnRole = $.arnRole;
        this.autonomousDatabaseProvider = $.autonomousDatabaseProvider;
        this.certificateDirectoryName = $.certificateDirectoryName;
        this.certificateId = $.certificateId;
        this.directoryName = $.directoryName;
        this.externalId = $.externalId;
        this.keyArn = $.keyArn;
        this.keyName = $.keyName;
        this.kmsKeyId = $.kmsKeyId;
        this.okvKmsKey = $.okvKmsKey;
        this.okvUri = $.okvUri;
        this.serviceEndpointUri = $.serviceEndpointUri;
        this.vaultId = $.vaultId;
        this.vaultUri = $.vaultUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseEncryptionKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseEncryptionKeyArgs $;

        public Builder() {
            $ = new AutonomousDatabaseEncryptionKeyArgs();
        }

        public Builder(AutonomousDatabaseEncryptionKeyArgs defaults) {
            $ = new AutonomousDatabaseEncryptionKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arnRole (Updatable) AWS ARN role
         * 
         * @return builder
         * 
         */
        public Builder arnRole(@Nullable Output<String> arnRole) {
            $.arnRole = arnRole;
            return this;
        }

        /**
         * @param arnRole (Updatable) AWS ARN role
         * 
         * @return builder
         * 
         */
        public Builder arnRole(String arnRole) {
            return arnRole(Output.of(arnRole));
        }

        /**
         * @param autonomousDatabaseProvider (Updatable) The provider for the Autonomous Database encryption key.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseProvider(@Nullable Output<String> autonomousDatabaseProvider) {
            $.autonomousDatabaseProvider = autonomousDatabaseProvider;
            return this;
        }

        /**
         * @param autonomousDatabaseProvider (Updatable) The provider for the Autonomous Database encryption key.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseProvider(String autonomousDatabaseProvider) {
            return autonomousDatabaseProvider(Output.of(autonomousDatabaseProvider));
        }

        /**
         * @param certificateDirectoryName (Updatable) OKV certificate directory name
         * 
         * @return builder
         * 
         */
        public Builder certificateDirectoryName(@Nullable Output<String> certificateDirectoryName) {
            $.certificateDirectoryName = certificateDirectoryName;
            return this;
        }

        /**
         * @param certificateDirectoryName (Updatable) OKV certificate directory name
         * 
         * @return builder
         * 
         */
        public Builder certificateDirectoryName(String certificateDirectoryName) {
            return certificateDirectoryName(Output.of(certificateDirectoryName));
        }

        /**
         * @param certificateId (Updatable) OKV certificate id
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId (Updatable) OKV certificate id
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        /**
         * @param directoryName (Updatable) OKV wallet directory name
         * 
         * @return builder
         * 
         */
        public Builder directoryName(@Nullable Output<String> directoryName) {
            $.directoryName = directoryName;
            return this;
        }

        /**
         * @param directoryName (Updatable) OKV wallet directory name
         * 
         * @return builder
         * 
         */
        public Builder directoryName(String directoryName) {
            return directoryName(Output.of(directoryName));
        }

        /**
         * @param externalId (Updatable) AWS external ID
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId (Updatable) AWS external ID
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param keyArn (Updatable) AWS key ARN
         * 
         * @return builder
         * 
         */
        public Builder keyArn(@Nullable Output<String> keyArn) {
            $.keyArn = keyArn;
            return this;
        }

        /**
         * @param keyArn (Updatable) AWS key ARN
         * 
         * @return builder
         * 
         */
        public Builder keyArn(String keyArn) {
            return keyArn(Output.of(keyArn));
        }

        /**
         * @param keyName (Updatable) Azure key name
         * 
         * @return builder
         * 
         */
        public Builder keyName(@Nullable Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName (Updatable) Azure key name
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId (Updatable) The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param okvKmsKey (Updatable) UUID of OKV KMS Key
         * 
         * @return builder
         * 
         */
        public Builder okvKmsKey(@Nullable Output<String> okvKmsKey) {
            $.okvKmsKey = okvKmsKey;
            return this;
        }

        /**
         * @param okvKmsKey (Updatable) UUID of OKV KMS Key
         * 
         * @return builder
         * 
         */
        public Builder okvKmsKey(String okvKmsKey) {
            return okvKmsKey(Output.of(okvKmsKey));
        }

        /**
         * @param okvUri (Updatable) URI of OKV server
         * 
         * @return builder
         * 
         */
        public Builder okvUri(@Nullable Output<String> okvUri) {
            $.okvUri = okvUri;
            return this;
        }

        /**
         * @param okvUri (Updatable) URI of OKV server
         * 
         * @return builder
         * 
         */
        public Builder okvUri(String okvUri) {
            return okvUri(Output.of(okvUri));
        }

        /**
         * @param serviceEndpointUri (Updatable) AWS key service endpoint URI
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpointUri(@Nullable Output<String> serviceEndpointUri) {
            $.serviceEndpointUri = serviceEndpointUri;
            return this;
        }

        /**
         * @param serviceEndpointUri (Updatable) AWS key service endpoint URI
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpointUri(String serviceEndpointUri) {
            return serviceEndpointUri(Output.of(serviceEndpointUri));
        }

        /**
         * @param vaultId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(@Nullable Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        /**
         * @param vaultUri (Updatable) Azure vault URI
         * 
         * @return builder
         * 
         */
        public Builder vaultUri(@Nullable Output<String> vaultUri) {
            $.vaultUri = vaultUri;
            return this;
        }

        /**
         * @param vaultUri (Updatable) Azure vault URI
         * 
         * @return builder
         * 
         */
        public Builder vaultUri(String vaultUri) {
            return vaultUri(Output.of(vaultUri));
        }

        public AutonomousDatabaseEncryptionKeyArgs build() {
            return $;
        }
    }

}
