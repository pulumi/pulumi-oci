// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseLocalStandbyDbArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseLocalStandbyDbArgs Empty = new AutonomousDatabaseLocalStandbyDbArgs();

    /**
     * The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
     * 
     */
    @Import(name="lagTimeInSeconds")
    private @Nullable Output<Integer> lagTimeInSeconds;

    /**
     * @return The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
     * 
     */
    public Optional<Output<Integer>> lagTimeInSeconds() {
        return Optional.ofNullable(this.lagTimeInSeconds);
    }

    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The current state of the Autonomous Database.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Autonomous Database.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
     * 
     */
    @Import(name="timeDataGuardRoleChanged")
    private @Nullable Output<String> timeDataGuardRoleChanged;

    /**
     * @return The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
     * 
     */
    public Optional<Output<String>> timeDataGuardRoleChanged() {
        return Optional.ofNullable(this.timeDataGuardRoleChanged);
    }

    /**
     * The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
     * 
     */
    @Import(name="timeDisasterRecoveryRoleChanged")
    private @Nullable Output<String> timeDisasterRecoveryRoleChanged;

    /**
     * @return The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
     * 
     */
    public Optional<Output<String>> timeDisasterRecoveryRoleChanged() {
        return Optional.ofNullable(this.timeDisasterRecoveryRoleChanged);
    }

    private AutonomousDatabaseLocalStandbyDbArgs() {}

    private AutonomousDatabaseLocalStandbyDbArgs(AutonomousDatabaseLocalStandbyDbArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.lagTimeInSeconds = $.lagTimeInSeconds;
        this.lifecycleDetails = $.lifecycleDetails;
        this.state = $.state;
        this.timeDataGuardRoleChanged = $.timeDataGuardRoleChanged;
        this.timeDisasterRecoveryRoleChanged = $.timeDisasterRecoveryRoleChanged;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseLocalStandbyDbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseLocalStandbyDbArgs $;

        public Builder() {
            $ = new AutonomousDatabaseLocalStandbyDbArgs();
        }

        public Builder(AutonomousDatabaseLocalStandbyDbArgs defaults) {
            $ = new AutonomousDatabaseLocalStandbyDbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param lagTimeInSeconds The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         * 
         * @return builder
         * 
         */
        public Builder lagTimeInSeconds(@Nullable Output<Integer> lagTimeInSeconds) {
            $.lagTimeInSeconds = lagTimeInSeconds;
            return this;
        }

        /**
         * @param lagTimeInSeconds The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
         * 
         * @return builder
         * 
         */
        public Builder lagTimeInSeconds(Integer lagTimeInSeconds) {
            return lagTimeInSeconds(Output.of(lagTimeInSeconds));
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param state The current state of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeDataGuardRoleChanged The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         * 
         * @return builder
         * 
         */
        public Builder timeDataGuardRoleChanged(@Nullable Output<String> timeDataGuardRoleChanged) {
            $.timeDataGuardRoleChanged = timeDataGuardRoleChanged;
            return this;
        }

        /**
         * @param timeDataGuardRoleChanged The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         * 
         * @return builder
         * 
         */
        public Builder timeDataGuardRoleChanged(String timeDataGuardRoleChanged) {
            return timeDataGuardRoleChanged(Output.of(timeDataGuardRoleChanged));
        }

        /**
         * @param timeDisasterRecoveryRoleChanged The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder timeDisasterRecoveryRoleChanged(@Nullable Output<String> timeDisasterRecoveryRoleChanged) {
            $.timeDisasterRecoveryRoleChanged = timeDisasterRecoveryRoleChanged;
            return this;
        }

        /**
         * @param timeDisasterRecoveryRoleChanged The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder timeDisasterRecoveryRoleChanged(String timeDisasterRecoveryRoleChanged) {
            return timeDisasterRecoveryRoleChanged(Output.of(timeDisasterRecoveryRoleChanged));
        }

        public AutonomousDatabaseLocalStandbyDbArgs build() {
            return $;
        }
    }

}
