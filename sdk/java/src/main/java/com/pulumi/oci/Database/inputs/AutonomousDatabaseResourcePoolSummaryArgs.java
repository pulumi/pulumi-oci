// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseResourcePoolSummaryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseResourcePoolSummaryArgs Empty = new AutonomousDatabaseResourcePoolSummaryArgs();

    /**
     * Available capacity left for new elastic pool members provision
     * 
     */
    @Import(name="availableComputeCapacity")
    private @Nullable Output<Integer> availableComputeCapacity;

    /**
     * @return Available capacity left for new elastic pool members provision
     * 
     */
    public Optional<Output<Integer>> availableComputeCapacity() {
        return Optional.ofNullable(this.availableComputeCapacity);
    }

    /**
     * (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
     * 
     */
    @Import(name="isDisabled")
    private @Nullable Output<Boolean> isDisabled;

    /**
     * @return (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
     * 
     */
    public Optional<Output<Boolean>> isDisabled() {
        return Optional.ofNullable(this.isDisabled);
    }

    /**
     * (Updatable) Resource pool size.
     * 
     */
    @Import(name="poolSize")
    private @Nullable Output<Integer> poolSize;

    /**
     * @return (Updatable) Resource pool size.
     * 
     */
    public Optional<Output<Integer>> poolSize() {
        return Optional.ofNullable(this.poolSize);
    }

    /**
     * Resource Pool total capacity, it&#39;s currently 4x of pool size
     * 
     */
    @Import(name="totalComputeCapacity")
    private @Nullable Output<Integer> totalComputeCapacity;

    /**
     * @return Resource Pool total capacity, it&#39;s currently 4x of pool size
     * 
     */
    public Optional<Output<Integer>> totalComputeCapacity() {
        return Optional.ofNullable(this.totalComputeCapacity);
    }

    private AutonomousDatabaseResourcePoolSummaryArgs() {}

    private AutonomousDatabaseResourcePoolSummaryArgs(AutonomousDatabaseResourcePoolSummaryArgs $) {
        this.availableComputeCapacity = $.availableComputeCapacity;
        this.isDisabled = $.isDisabled;
        this.poolSize = $.poolSize;
        this.totalComputeCapacity = $.totalComputeCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseResourcePoolSummaryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseResourcePoolSummaryArgs $;

        public Builder() {
            $ = new AutonomousDatabaseResourcePoolSummaryArgs();
        }

        public Builder(AutonomousDatabaseResourcePoolSummaryArgs defaults) {
            $ = new AutonomousDatabaseResourcePoolSummaryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availableComputeCapacity Available capacity left for new elastic pool members provision
         * 
         * @return builder
         * 
         */
        public Builder availableComputeCapacity(@Nullable Output<Integer> availableComputeCapacity) {
            $.availableComputeCapacity = availableComputeCapacity;
            return this;
        }

        /**
         * @param availableComputeCapacity Available capacity left for new elastic pool members provision
         * 
         * @return builder
         * 
         */
        public Builder availableComputeCapacity(Integer availableComputeCapacity) {
            return availableComputeCapacity(Output.of(availableComputeCapacity));
        }

        /**
         * @param isDisabled (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder isDisabled(@Nullable Output<Boolean> isDisabled) {
            $.isDisabled = isDisabled;
            return this;
        }

        /**
         * @param isDisabled (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder isDisabled(Boolean isDisabled) {
            return isDisabled(Output.of(isDisabled));
        }

        /**
         * @param poolSize (Updatable) Resource pool size.
         * 
         * @return builder
         * 
         */
        public Builder poolSize(@Nullable Output<Integer> poolSize) {
            $.poolSize = poolSize;
            return this;
        }

        /**
         * @param poolSize (Updatable) Resource pool size.
         * 
         * @return builder
         * 
         */
        public Builder poolSize(Integer poolSize) {
            return poolSize(Output.of(poolSize));
        }

        /**
         * @param totalComputeCapacity Resource Pool total capacity, it&#39;s currently 4x of pool size
         * 
         * @return builder
         * 
         */
        public Builder totalComputeCapacity(@Nullable Output<Integer> totalComputeCapacity) {
            $.totalComputeCapacity = totalComputeCapacity;
            return this;
        }

        /**
         * @param totalComputeCapacity Resource Pool total capacity, it&#39;s currently 4x of pool size
         * 
         * @return builder
         * 
         */
        public Builder totalComputeCapacity(Integer totalComputeCapacity) {
            return totalComputeCapacity(Output.of(totalComputeCapacity));
        }

        public AutonomousDatabaseResourcePoolSummaryArgs build() {
            return $;
        }
    }

}
