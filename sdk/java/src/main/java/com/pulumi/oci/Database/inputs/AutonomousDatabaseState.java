// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseApexDetailArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseBackupConfigArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseConnectionStringArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseConnectionUrlArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseCustomerContactArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseDbToolsDetailArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseEncryptionKeyArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseEncryptionKeyHistoryEntryArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseKeyHistoryEntryArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseLocalStandbyDbArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseLongTermBackupScheduleArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabasePublicConnectionUrlArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseRemoteDisasterRecoveryConfigurationArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseResourcePoolSummaryArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseScheduledOperationArgs;
import com.pulumi.oci.Database.inputs.AutonomousDatabaseStandbyDbArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseState Empty = new AutonomousDatabaseState();

    /**
     * The current amount of storage in use for user and system data, in terabytes (TB).
     * 
     */
    @Import(name="actualUsedDataStorageSizeInTbs")
    private @Nullable Output<Double> actualUsedDataStorageSizeInTbs;

    /**
     * @return The current amount of storage in use for user and system data, in terabytes (TB).
     * 
     */
    public Optional<Output<Double>> actualUsedDataStorageSizeInTbs() {
        return Optional.ofNullable(this.actualUsedDataStorageSizeInTbs);
    }

    /**
     * (Updatable) The password must be between 12 and 30 characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. The password is mandatory if source value is &#34;BACKUP_FROM_ID&#34;, &#34;BACKUP_FROM_TIMESTAMP&#34;, &#34;DATABASE&#34; or &#34;NONE&#34;.
     * 
     */
    @Import(name="adminPassword")
    private @Nullable Output<String> adminPassword;

    /**
     * @return (Updatable) The password must be between 12 and 30 characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. The password is mandatory if source value is &#34;BACKUP_FROM_ID&#34;, &#34;BACKUP_FROM_TIMESTAMP&#34;, &#34;DATABASE&#34; or &#34;NONE&#34;.
     * 
     */
    public Optional<Output<String>> adminPassword() {
        return Optional.ofNullable(this.adminPassword);
    }

    /**
     * The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
     * 
     */
    @Import(name="allocatedStorageSizeInTbs")
    private @Nullable Output<Double> allocatedStorageSizeInTbs;

    /**
     * @return The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
     * 
     */
    public Optional<Output<Double>> allocatedStorageSizeInTbs() {
        return Optional.ofNullable(this.allocatedStorageSizeInTbs);
    }

    /**
     * Information about Oracle APEX Application Development.
     * 
     */
    @Import(name="apexDetails")
    private @Nullable Output<List<AutonomousDatabaseApexDetailArgs>> apexDetails;

    /**
     * @return Information about Oracle APEX Application Development.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseApexDetailArgs>>> apexDetails() {
        return Optional.ofNullable(this.apexDetails);
    }

    /**
     * (Updatable) This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It&#39;s value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It&#39;s value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
     * 
     */
    @Import(name="arePrimaryWhitelistedIpsUsed")
    private @Nullable Output<Boolean> arePrimaryWhitelistedIpsUsed;

    /**
     * @return (Updatable) This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It&#39;s value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It&#39;s value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
     * 
     */
    public Optional<Output<Boolean>> arePrimaryWhitelistedIpsUsed() {
        return Optional.ofNullable(this.arePrimaryWhitelistedIpsUsed);
    }

    /**
     * (Updatable) The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the `timeOfAutoRefreshStart` parameter.
     * 
     */
    @Import(name="autoRefreshFrequencyInSeconds")
    private @Nullable Output<Integer> autoRefreshFrequencyInSeconds;

    /**
     * @return (Updatable) The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the `timeOfAutoRefreshStart` parameter.
     * 
     */
    public Optional<Output<Integer>> autoRefreshFrequencyInSeconds() {
        return Optional.ofNullable(this.autoRefreshFrequencyInSeconds);
    }

    /**
     * (Updatable) The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
     * 
     */
    @Import(name="autoRefreshPointLagInSeconds")
    private @Nullable Output<Integer> autoRefreshPointLagInSeconds;

    /**
     * @return (Updatable) The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
     * 
     */
    public Optional<Output<Integer>> autoRefreshPointLagInSeconds() {
        return Optional.ofNullable(this.autoRefreshPointLagInSeconds);
    }

    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="autonomousContainerDatabaseId")
    private @Nullable Output<String> autonomousContainerDatabaseId;

    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<Output<String>> autonomousContainerDatabaseId() {
        return Optional.ofNullable(this.autonomousContainerDatabaseId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database Backup that you will clone to create a new Autonomous Database.
     * 
     */
    @Import(name="autonomousDatabaseBackupId")
    private @Nullable Output<String> autonomousDatabaseBackupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database Backup that you will clone to create a new Autonomous Database.
     * 
     */
    public Optional<Output<String>> autonomousDatabaseBackupId() {
        return Optional.ofNullable(this.autonomousDatabaseBackupId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that you will clone to create a new Autonomous Database.
     * 
     */
    @Import(name="autonomousDatabaseId")
    private @Nullable Output<String> autonomousDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that you will clone to create a new Autonomous Database.
     * 
     */
    public Optional<Output<String>> autonomousDatabaseId() {
        return Optional.ofNullable(this.autonomousDatabaseId);
    }

    /**
     * The maintenance schedule type of the Autonomous Database Serverless instances. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
     * 
     */
    @Import(name="autonomousMaintenanceScheduleType")
    private @Nullable Output<String> autonomousMaintenanceScheduleType;

    /**
     * @return The maintenance schedule type of the Autonomous Database Serverless instances. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
     * 
     */
    public Optional<Output<String>> autonomousMaintenanceScheduleType() {
        return Optional.ofNullable(this.autonomousMaintenanceScheduleType);
    }

    /**
     * The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
     * 
     */
    @Import(name="availableUpgradeVersions")
    private @Nullable Output<List<String>> availableUpgradeVersions;

    /**
     * @return List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
     * 
     */
    public Optional<Output<List<String>>> availableUpgradeVersions() {
        return Optional.ofNullable(this.availableUpgradeVersions);
    }

    /**
     * Autonomous Database configuration details for storing [manual backups](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/backup-restore.html#GUID-9035DFB8-4702-4CEB-8281-C2A303820809) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
     * 
     */
    @Import(name="backupConfigs")
    private @Nullable Output<List<AutonomousDatabaseBackupConfigArgs>> backupConfigs;

    /**
     * @return Autonomous Database configuration details for storing [manual backups](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/backup-restore.html#GUID-9035DFB8-4702-4CEB-8281-C2A303820809) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseBackupConfigArgs>>> backupConfigs() {
        return Optional.ofNullable(this.backupConfigs);
    }

    /**
     * (Updatable) Retention period, in days, for backups.
     * 
     */
    @Import(name="backupRetentionPeriodInDays")
    private @Nullable Output<Integer> backupRetentionPeriodInDays;

    /**
     * @return (Updatable) Retention period, in days, for backups.
     * 
     */
    public Optional<Output<Integer>> backupRetentionPeriodInDays() {
        return Optional.ofNullable(this.backupRetentionPeriodInDays);
    }

    @Import(name="byolComputeCountLimit")
    private @Nullable Output<Double> byolComputeCountLimit;

    public Optional<Output<Double>> byolComputeCountLimit() {
        return Optional.ofNullable(this.byolComputeCountLimit);
    }

    /**
     * The character set for the autonomous database.  The default is AL32UTF8. Allowed values for an Autonomous Database on Serverless infrastructure as returned by [List Autonomous Database Character Sets](https://www.terraform.io/autonomousDatabaseCharacterSets)
     * 
     * For an Autonomous Database on dedicated infrastructure, the allowed values are:
     * 
     * AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
     * 
     */
    @Import(name="characterSet")
    private @Nullable Output<String> characterSet;

    /**
     * @return The character set for the autonomous database.  The default is AL32UTF8. Allowed values for an Autonomous Database on Serverless infrastructure as returned by [List Autonomous Database Character Sets](https://www.terraform.io/autonomousDatabaseCharacterSets)
     * 
     * For an Autonomous Database on dedicated infrastructure, the allowed values are:
     * 
     * AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
     * 
     */
    public Optional<Output<String>> characterSet() {
        return Optional.ofNullable(this.characterSet);
    }

    /**
     * The Autonomous Database clone type. This parameter is not used to create a refreshable clone type, and for refreshable clones one must use the (source=CLONE_TO_REFRESHABLE) parameter.
     * * `FULL` - This option creates a new database that includes all source database data.
     * * `METADATA` - This option creates a new database that includes the source database schema and select metadata, but not the source database data.
     * 
     */
    @Import(name="cloneType")
    private @Nullable Output<String> cloneType;

    /**
     * @return The Autonomous Database clone type. This parameter is not used to create a refreshable clone type, and for refreshable clones one must use the (source=CLONE_TO_REFRESHABLE) parameter.
     * * `FULL` - This option creates a new database that includes all source database data.
     * * `METADATA` - This option creates a new database that includes the source database schema and select metadata, but not the source database data.
     * 
     */
    public Optional<Output<String>> cloneType() {
        return Optional.ofNullable(this.cloneType);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Autonomous Serverless Database.
     * 
     */
    @Import(name="clusterPlacementGroupId")
    private @Nullable Output<String> clusterPlacementGroupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Autonomous Serverless Database.
     * 
     */
    public Optional<Output<String>> clusterPlacementGroupId() {
        return Optional.ofNullable(this.clusterPlacementGroupId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Autonomous Database.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Autonomous Database.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the &#39;ECPU&#39; compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
     * 
     */
    @Import(name="computeCount")
    private @Nullable Output<Double> computeCount;

    /**
     * @return (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the &#39;ECPU&#39; compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
     * 
     */
    public Optional<Output<Double>> computeCount() {
        return Optional.ofNullable(this.computeCount);
    }

    /**
     * (Updatable) The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
     * 
     */
    @Import(name="computeModel")
    private @Nullable Output<String> computeModel;

    /**
     * @return (Updatable) The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
     * 
     */
    public Optional<Output<String>> computeModel() {
        return Optional.ofNullable(this.computeModel);
    }

    /**
     * The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
     * 
     */
    @Import(name="connectionStrings")
    private @Nullable Output<List<AutonomousDatabaseConnectionStringArgs>> connectionStrings;

    /**
     * @return The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseConnectionStringArgs>>> connectionStrings() {
        return Optional.ofNullable(this.connectionStrings);
    }

    /**
     * The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).  Example: `{&#34;sqlDevWebUrl&#34;: &#34;https://&lt;hostname&gt;/ords...&#34;, &#34;apexUrl&#34;, &#34;https://&lt;hostname&gt;/ords...&#34;}`
     * 
     */
    @Import(name="connectionUrls")
    private @Nullable Output<List<AutonomousDatabaseConnectionUrlArgs>> connectionUrls;

    /**
     * @return The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).  Example: `{&#34;sqlDevWebUrl&#34;: &#34;https://&lt;hostname&gt;/ords...&#34;, &#34;apexUrl&#34;, &#34;https://&lt;hostname&gt;/ords...&#34;}`
     * 
     */
    public Optional<Output<List<AutonomousDatabaseConnectionUrlArgs>>> connectionUrls() {
        return Optional.ofNullable(this.connectionUrls);
    }

    /**
     * (Updatable) The number of CPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * **Note:** This parameter cannot be used with the `ocpuCount` parameter. This input is ignored for Always Free resources.
     * * The data type must be an *integer*.
     * * The minimum number of cores for all types of autonomous database is *1*
     * * The maximum number of cores is as follows:
     * * Autonomous Database Serverless instances: The maximum number of cores is *128*.
     * * Autonomous Databases on dedicated Exadata infrastructure: The maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
     * 
     */
    @Import(name="cpuCoreCount")
    private @Nullable Output<Integer> cpuCoreCount;

    /**
     * @return (Updatable) The number of CPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * **Note:** This parameter cannot be used with the `ocpuCount` parameter. This input is ignored for Always Free resources.
     * * The data type must be an *integer*.
     * * The minimum number of cores for all types of autonomous database is *1*
     * * The maximum number of cores is as follows:
     * * Autonomous Database Serverless instances: The maximum number of cores is *128*.
     * * Autonomous Databases on dedicated Exadata infrastructure: The maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
     * 
     */
    public Optional<Output<Integer>> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }

    /**
     * (Updatable) Customer Contacts.
     * 
     */
    @Import(name="customerContacts")
    private @Nullable Output<List<AutonomousDatabaseCustomerContactArgs>> customerContacts;

    /**
     * @return (Updatable) Customer Contacts.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseCustomerContactArgs>>> customerContacts() {
        return Optional.ofNullable(this.customerContacts);
    }

    /**
     * (Updatable) Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
     * 
     */
    @Import(name="dataSafeStatus")
    private @Nullable Output<String> dataSafeStatus;

    /**
     * @return (Updatable) Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
     * 
     */
    public Optional<Output<String>> dataSafeStatus() {
        return Optional.ofNullable(this.dataSafeStatus);
    }

    /**
     * (Updatable) The size, in gigabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. The maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * 
     * **Notes**
     * * This parameter is only supported for dedicated Exadata infrastructure.
     * * This parameter cannot be used with the `dataStorageSizeInTBs` parameter.
     * 
     */
    @Import(name="dataStorageSizeInGb")
    private @Nullable Output<Integer> dataStorageSizeInGb;

    /**
     * @return (Updatable) The size, in gigabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. The maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * 
     * **Notes**
     * * This parameter is only supported for dedicated Exadata infrastructure.
     * * This parameter cannot be used with the `dataStorageSizeInTBs` parameter.
     * 
     */
    public Optional<Output<Integer>> dataStorageSizeInGb() {
        return Optional.ofNullable(this.dataStorageSizeInGb);
    }

    /**
     * (Updatable) The size, in terabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. For Autonomous Databases on dedicated Exadata infrastructure, the maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.  A full Exadata service is allocated when the Autonomous Database size is set to the upper limit (384 TB).
     * 
     * **Note:** This parameter cannot be used with the `dataStorageSizeInGBs` parameter. This input is ignored for Always Free resources.
     * 
     */
    @Import(name="dataStorageSizeInTbs")
    private @Nullable Output<Integer> dataStorageSizeInTbs;

    /**
     * @return (Updatable) The size, in terabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. For Autonomous Databases on dedicated Exadata infrastructure, the maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.  A full Exadata service is allocated when the Autonomous Database size is set to the upper limit (384 TB).
     * 
     * **Note:** This parameter cannot be used with the `dataStorageSizeInGBs` parameter. This input is ignored for Always Free resources.
     * 
     */
    public Optional<Output<Integer>> dataStorageSizeInTbs() {
        return Optional.ofNullable(this.dataStorageSizeInTbs);
    }

    /**
     * (Updatable) The Oracle Database Edition that applies to the Autonomous databases. It can be set to `ENTERPRISE_EDITION` or `STANDARD_EDITION`.
     * 
     */
    @Import(name="databaseEdition")
    private @Nullable Output<String> databaseEdition;

    /**
     * @return (Updatable) The Oracle Database Edition that applies to the Autonomous databases. It can be set to `ENTERPRISE_EDITION` or `STANDARD_EDITION`.
     * 
     */
    public Optional<Output<String>> databaseEdition() {
        return Optional.ofNullable(this.databaseEdition);
    }

    /**
     * Status of Database Management for this Autonomous Database.
     * 
     */
    @Import(name="databaseManagementStatus")
    private @Nullable Output<String> databaseManagementStatus;

    /**
     * @return Status of Database Management for this Autonomous Database.
     * 
     */
    public Optional<Output<String>> databaseManagementStatus() {
        return Optional.ofNullable(this.databaseManagementStatus);
    }

    /**
     * **Deprecated** (Optional) The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Database Serverless instances, Data Guard associations have designated primary (`PRIMARY_DG_REGION`) and standby (`REMOTE_STANDBY_DG_REGION`) regions, and these region types do not change when the database changes roles. The standby regions in Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Data Guard association, and cannot be performed when the database using the &#34;primary&#34; role is operating in a remote Data Guard standby region.
     * 
     */
    @Import(name="dataguardRegionType")
    private @Nullable Output<String> dataguardRegionType;

    /**
     * @return **Deprecated** (Optional) The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Database Serverless instances, Data Guard associations have designated primary (`PRIMARY_DG_REGION`) and standby (`REMOTE_STANDBY_DG_REGION`) regions, and these region types do not change when the database changes roles. The standby regions in Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Data Guard association, and cannot be performed when the database using the &#34;primary&#34; role is operating in a remote Data Guard standby region.
     * 
     */
    public Optional<Output<String>> dataguardRegionType() {
        return Optional.ofNullable(this.dataguardRegionType);
    }

    /**
     * The database name. The name must begin with an alphabetic character and can contain a maximum of 14 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy. It is required in all cases except when creating a cross-region Autonomous Data Guard standby instance or a cross-region disaster recovery standby instance.
     * 
     */
    @Import(name="dbName")
    private @Nullable Output<String> dbName;

    /**
     * @return The database name. The name must begin with an alphabetic character and can contain a maximum of 14 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy. It is required in all cases except when creating a cross-region Autonomous Data Guard standby instance or a cross-region disaster recovery standby instance.
     * 
     */
    public Optional<Output<String>> dbName() {
        return Optional.ofNullable(this.dbName);
    }

    /**
     * (Updatable) The list of database tools details.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    @Import(name="dbToolsDetails")
    private @Nullable Output<List<AutonomousDatabaseDbToolsDetailArgs>> dbToolsDetails;

    /**
     * @return (Updatable) The list of database tools details.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseDbToolsDetailArgs>>> dbToolsDetails() {
        return Optional.ofNullable(this.dbToolsDetails);
    }

    /**
     * (Updatable) A valid Oracle Database version for Autonomous Database.`db_workload` AJD and APEX are only supported for `db_version` `19c` and above.
     * 
     */
    @Import(name="dbVersion")
    private @Nullable Output<String> dbVersion;

    /**
     * @return (Updatable) A valid Oracle Database version for Autonomous Database.`db_workload` AJD and APEX are only supported for `db_version` `19c` and above.
     * 
     */
    public Optional<Output<String>> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }

    /**
     * (Updatable) The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. *Note: `db_workload` can only be updated from AJD to OLTP or from a free OLTP to AJD.
     * 
     */
    @Import(name="dbWorkload")
    private @Nullable Output<String> dbWorkload;

    /**
     * @return (Updatable) The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. *Note: `db_workload` can only be updated from AJD to OLTP or from a free OLTP to AJD.
     * 
     */
    public Optional<Output<String>> dbWorkload() {
        return Optional.ofNullable(this.dbWorkload);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * **Deprecated** The disaster recovery (DR) region type of the Autonomous Database. For Serverless Autonomous Databases, DR associations have designated primary (`PRIMARY`) and standby (`REMOTE`) regions. These region types do not change when the database changes roles. The standby region in DR associations can be the same region as the primary region, or they can be in a remote regions. Some database administration operations may be available only in the primary region of the DR association, and cannot be performed when the database using the primary role is operating in a remote region.
     * 
     */
    @Import(name="disasterRecoveryRegionType")
    private @Nullable Output<String> disasterRecoveryRegionType;

    /**
     * @return **Deprecated** The disaster recovery (DR) region type of the Autonomous Database. For Serverless Autonomous Databases, DR associations have designated primary (`PRIMARY`) and standby (`REMOTE`) regions. These region types do not change when the database changes roles. The standby region in DR associations can be the same region as the primary region, or they can be in a remote regions. Some database administration operations may be available only in the primary region of the DR association, and cannot be performed when the database using the primary role is operating in a remote region.
     * 
     */
    public Optional<Output<String>> disasterRecoveryRegionType() {
        return Optional.ofNullable(this.disasterRecoveryRegionType);
    }

    /**
     * Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
     * 
     */
    @Import(name="disasterRecoveryType")
    private @Nullable Output<String> disasterRecoveryType;

    /**
     * @return Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
     * 
     */
    public Optional<Output<String>> disasterRecoveryType() {
        return Optional.ofNullable(this.disasterRecoveryType);
    }

    /**
     * (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Details of the Autonomous Database encryption key.
     * 
     */
    @Import(name="encryptionKey")
    private @Nullable Output<AutonomousDatabaseEncryptionKeyArgs> encryptionKey;

    /**
     * @return (Updatable) Details of the Autonomous Database encryption key.
     * 
     */
    public Optional<Output<AutonomousDatabaseEncryptionKeyArgs>> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }

    /**
     * Key History Entry.
     * 
     */
    @Import(name="encryptionKeyHistoryEntries")
    private @Nullable Output<List<AutonomousDatabaseEncryptionKeyHistoryEntryArgs>> encryptionKeyHistoryEntries;

    /**
     * @return Key History Entry.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseEncryptionKeyHistoryEntryArgs>>> encryptionKeyHistoryEntries() {
        return Optional.ofNullable(this.encryptionKeyHistoryEntries);
    }

    /**
     * Indicates the number of seconds of data loss for a Data Guard failover.
     * 
     */
    @Import(name="failedDataRecoveryInSeconds")
    private @Nullable Output<Integer> failedDataRecoveryInSeconds;

    /**
     * @return Indicates the number of seconds of data loss for a Data Guard failover.
     * 
     */
    public Optional<Output<Integer>> failedDataRecoveryInSeconds() {
        return Optional.ofNullable(this.failedDataRecoveryInSeconds);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The area assigned to In-Memory tables in Autonomous Database.
     * 
     */
    @Import(name="inMemoryAreaInGbs")
    private @Nullable Output<Integer> inMemoryAreaInGbs;

    /**
     * @return The area assigned to In-Memory tables in Autonomous Database.
     * 
     */
    public Optional<Output<Integer>> inMemoryAreaInGbs() {
        return Optional.ofNullable(this.inMemoryAreaInGbs);
    }

    /**
     * (Updatable) The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform.
     * 
     */
    @Import(name="inMemoryPercentage")
    private @Nullable Output<Integer> inMemoryPercentage;

    /**
     * @return (Updatable) The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform.
     * 
     */
    public Optional<Output<Integer>> inMemoryPercentage() {
        return Optional.ofNullable(this.inMemoryPercentage);
    }

    /**
     * The infrastructure type this resource belongs to.
     * 
     */
    @Import(name="infrastructureType")
    private @Nullable Output<String> infrastructureType;

    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    public Optional<Output<String>> infrastructureType() {
        return Optional.ofNullable(this.infrastructureType);
    }

    /**
     * (Updatable) Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
     * 
     * This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform. For Autonomous Database Serverless instances, `whitelistedIps` is used.
     * 
     */
    @Import(name="isAccessControlEnabled")
    private @Nullable Output<Boolean> isAccessControlEnabled;

    /**
     * @return (Updatable) Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
     * 
     * This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform. For Autonomous Database Serverless instances, `whitelistedIps` is used.
     * 
     */
    public Optional<Output<Boolean>> isAccessControlEnabled() {
        return Optional.ofNullable(this.isAccessControlEnabled);
    }

    /**
     * (Updatable) Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `TRUE`.
     * 
     */
    @Import(name="isAutoScalingEnabled")
    private @Nullable Output<Boolean> isAutoScalingEnabled;

    /**
     * @return (Updatable) Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `TRUE`.
     * 
     */
    public Optional<Output<Boolean>> isAutoScalingEnabled() {
        return Optional.ofNullable(this.isAutoScalingEnabled);
    }

    /**
     * (Updatable) Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `FALSE`.
     * 
     */
    @Import(name="isAutoScalingForStorageEnabled")
    private @Nullable Output<Boolean> isAutoScalingForStorageEnabled;

    /**
     * @return (Updatable) Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `FALSE`.
     * 
     */
    public Optional<Output<Boolean>> isAutoScalingForStorageEnabled() {
        return Optional.ofNullable(this.isAutoScalingForStorageEnabled);
    }

    /**
     * (Updatable) True if the Autonomous Database is backup retention locked.
     * 
     */
    @Import(name="isBackupRetentionLocked")
    private @Nullable Output<Boolean> isBackupRetentionLocked;

    /**
     * @return (Updatable) True if the Autonomous Database is backup retention locked.
     * 
     */
    public Optional<Output<Boolean>> isBackupRetentionLocked() {
        return Optional.ofNullable(this.isBackupRetentionLocked);
    }

    /**
     * (Updatable) **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    @Import(name="isDataGuardEnabled")
    private @Nullable Output<Boolean> isDataGuardEnabled;

    /**
     * @return (Updatable) **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Optional<Output<Boolean>> isDataGuardEnabled() {
        return Optional.ofNullable(this.isDataGuardEnabled);
    }

    /**
     * True if the database is on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).
     * 
     */
    @Import(name="isDedicated")
    private @Nullable Output<Boolean> isDedicated;

    /**
     * @return True if the database is on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).
     * 
     */
    public Optional<Output<Boolean>> isDedicated() {
        return Optional.ofNullable(this.isDedicated);
    }

    /**
     * (Updatable) Autonomous Database for Developers are free Autonomous Databases that developers can use to build and test new applications.With Autonomous these database instancess instances, you can try new Autonomous Database features for free and apply them to ongoing or new development projects. Developer database comes with limited resources and is, therefore, not suitable for large-scale testing and production deployments. When you need more compute or storage resources, you can transition to a paid database licensing by cloning your developer database into a regular Autonomous Database. See [Autonomous Database documentation](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/eddjo/index.html) for more details.
     * 
     */
    @Import(name="isDevTier")
    private @Nullable Output<Boolean> isDevTier;

    /**
     * @return (Updatable) Autonomous Database for Developers are free Autonomous Databases that developers can use to build and test new applications.With Autonomous these database instancess instances, you can try new Autonomous Database features for free and apply them to ongoing or new development projects. Developer database comes with limited resources and is, therefore, not suitable for large-scale testing and production deployments. When you need more compute or storage resources, you can transition to a paid database licensing by cloning your developer database into a regular Autonomous Database. See [Autonomous Database documentation](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/eddjo/index.html) for more details.
     * 
     */
    public Optional<Output<Boolean>> isDevTier() {
        return Optional.ofNullable(this.isDevTier);
    }

    /**
     * If true, this will disconnect the Autonomous Database from its peer and the Autonomous Database can work permanently as a standalone database. To disconnect a cross region standby, please also provide the OCID of the standby database in the `peerDbId` parameter.
     * 
     */
    @Import(name="isDisconnectPeer")
    private @Nullable Output<Boolean> isDisconnectPeer;

    /**
     * @return If true, this will disconnect the Autonomous Database from its peer and the Autonomous Database can work permanently as a standalone database. To disconnect a cross region standby, please also provide the OCID of the standby database in the `peerDbId` parameter.
     * 
     */
    public Optional<Output<Boolean>> isDisconnectPeer() {
        return Optional.ofNullable(this.isDisconnectPeer);
    }

    /**
     * (Updatable) Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled. When `db_workload` is `AJD` or `APEX` it cannot be `true`.
     * 
     */
    @Import(name="isFreeTier")
    private @Nullable Output<Boolean> isFreeTier;

    /**
     * @return (Updatable) Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled. When `db_workload` is `AJD` or `APEX` it cannot be `true`.
     * 
     */
    public Optional<Output<Boolean>> isFreeTier() {
        return Optional.ofNullable(this.isFreeTier);
    }

    /**
     * (Updatable) Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. It takes boolean values. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    @Import(name="isLocalDataGuardEnabled")
    private @Nullable Output<Boolean> isLocalDataGuardEnabled;

    /**
     * @return (Updatable) Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. It takes boolean values. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Optional<Output<Boolean>> isLocalDataGuardEnabled() {
        return Optional.ofNullable(this.isLocalDataGuardEnabled);
    }

    /**
     * (Updatable) Indicates whether the Autonomous Database requires mTLS connections.
     * 
     */
    @Import(name="isMtlsConnectionRequired")
    private @Nullable Output<Boolean> isMtlsConnectionRequired;

    /**
     * @return (Updatable) Indicates whether the Autonomous Database requires mTLS connections.
     * 
     */
    public Optional<Output<Boolean>> isMtlsConnectionRequired() {
        return Optional.ofNullable(this.isMtlsConnectionRequired);
    }

    /**
     * Indicates if the Autonomous Database version is a preview version.
     * 
     */
    @Import(name="isPreview")
    private @Nullable Output<Boolean> isPreview;

    /**
     * @return Indicates if the Autonomous Database version is a preview version.
     * 
     */
    public Optional<Output<Boolean>> isPreview() {
        return Optional.ofNullable(this.isPreview);
    }

    /**
     * If set to `TRUE`, indicates that an Autonomous Database preview version is being provisioned, and that the preview version&#39;s terms of service have been accepted. Note that preview version software is only available for databases on [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
     * 
     */
    @Import(name="isPreviewVersionWithServiceTermsAccepted")
    private @Nullable Output<Boolean> isPreviewVersionWithServiceTermsAccepted;

    /**
     * @return If set to `TRUE`, indicates that an Autonomous Database preview version is being provisioned, and that the preview version&#39;s terms of service have been accepted. Note that preview version software is only available for databases on [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
     * 
     */
    public Optional<Output<Boolean>> isPreviewVersionWithServiceTermsAccepted() {
        return Optional.ofNullable(this.isPreviewVersionWithServiceTermsAccepted);
    }

    /**
     * Indicates if the refreshable clone can be reconnected to its source database.
     * 
     */
    @Import(name="isReconnectCloneEnabled")
    private @Nullable Output<Boolean> isReconnectCloneEnabled;

    /**
     * @return Indicates if the refreshable clone can be reconnected to its source database.
     * 
     */
    public Optional<Output<Boolean>> isReconnectCloneEnabled() {
        return Optional.ofNullable(this.isReconnectCloneEnabled);
    }

    /**
     * (Updatable) True for creating a refreshable clone and False for detaching the clone from source Autonomous Database. Detaching is one time operation and clone becomes a regular Autonomous Database.
     * 
     */
    @Import(name="isRefreshableClone")
    private @Nullable Output<Boolean> isRefreshableClone;

    /**
     * @return (Updatable) True for creating a refreshable clone and False for detaching the clone from source Autonomous Database. Detaching is one time operation and clone becomes a regular Autonomous Database.
     * 
     */
    public Optional<Output<Boolean>> isRefreshableClone() {
        return Optional.ofNullable(this.isRefreshableClone);
    }

    /**
     * Indicates whether the Autonomous Database has Cross Region Data Guard enabled. It takes boolean values. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    @Import(name="isRemoteDataGuardEnabled")
    private @Nullable Output<Boolean> isRemoteDataGuardEnabled;

    /**
     * @return Indicates whether the Autonomous Database has Cross Region Data Guard enabled. It takes boolean values. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Optional<Output<Boolean>> isRemoteDataGuardEnabled() {
        return Optional.ofNullable(this.isRemoteDataGuardEnabled);
    }

    /**
     * If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
     * 
     */
    @Import(name="isReplicateAutomaticBackups")
    private @Nullable Output<Boolean> isReplicateAutomaticBackups;

    /**
     * @return If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
     * 
     */
    public Optional<Output<Boolean>> isReplicateAutomaticBackups() {
        return Optional.ofNullable(this.isReplicateAutomaticBackups);
    }

    /**
     * (Updatable) An optional property when enabled triggers the Shrinking of Autonomous Database once. To trigger Shrinking of ADB once again, this flag needs to be disabled and re-enabled again. It should not be passed during create database operation. It is only applicable on Serverless databases i.e. where `is_dedicated` is false.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     * @deprecated
     * The &#39;is_shrink_only&#39; field has been deprecated. Please use &#39;shrink_adb_trigger&#39; instead.
     * 
     */
    @Deprecated /* The 'is_shrink_only' field has been deprecated. Please use 'shrink_adb_trigger' instead. */
    @Import(name="isShrinkOnly")
    private @Nullable Output<Boolean> isShrinkOnly;

    /**
     * @return (Updatable) An optional property when enabled triggers the Shrinking of Autonomous Database once. To trigger Shrinking of ADB once again, this flag needs to be disabled and re-enabled again. It should not be passed during create database operation. It is only applicable on Serverless databases i.e. where `is_dedicated` is false.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     * @deprecated
     * The &#39;is_shrink_only&#39; field has been deprecated. Please use &#39;shrink_adb_trigger&#39; instead.
     * 
     */
    @Deprecated /* The 'is_shrink_only' field has been deprecated. Please use 'shrink_adb_trigger' instead. */
    public Optional<Output<Boolean>> isShrinkOnly() {
        return Optional.ofNullable(this.isShrinkOnly);
    }

    /**
     * Key History Entry.
     * 
     */
    @Import(name="keyHistoryEntries")
    private @Nullable Output<List<AutonomousDatabaseKeyHistoryEntryArgs>> keyHistoryEntries;

    /**
     * @return Key History Entry.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseKeyHistoryEntryArgs>>> keyHistoryEntries() {
        return Optional.ofNullable(this.keyHistoryEntries);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault. This is used in Autonomous Databases on Serverless instances and dedicated Exadata infrastructure.
     * 
     */
    @Import(name="keyStoreId")
    private @Nullable Output<String> keyStoreId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault. This is used in Autonomous Databases on Serverless instances and dedicated Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> keyStoreId() {
        return Optional.ofNullable(this.keyStoreId);
    }

    /**
     * The wallet name for Oracle Key Vault.
     * 
     */
    @Import(name="keyStoreWalletName")
    private @Nullable Output<String> keyStoreWalletName;

    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    public Optional<Output<String>> keyStoreWalletName() {
        return Optional.ofNullable(this.keyStoreWalletName);
    }

    /**
     * The OCID of the key version that is used in rotate key operations.
     * 
     */
    @Import(name="keyVersionId")
    private @Nullable Output<String> keyVersionId;

    /**
     * @return The OCID of the key version that is used in rotate key operations.
     * 
     */
    public Optional<Output<String>> keyVersionId() {
        return Optional.ofNullable(this.keyVersionId);
    }

    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * KMS key lifecycle details.
     * 
     */
    @Import(name="kmsKeyLifecycleDetails")
    private @Nullable Output<String> kmsKeyLifecycleDetails;

    /**
     * @return KMS key lifecycle details.
     * 
     */
    public Optional<Output<String>> kmsKeyLifecycleDetails() {
        return Optional.ofNullable(this.kmsKeyLifecycleDetails);
    }

    /**
     * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     * 
     */
    @Import(name="kmsKeyVersionId")
    private @Nullable Output<String> kmsKeyVersionId;

    /**
     * @return The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     * 
     */
    public Optional<Output<String>> kmsKeyVersionId() {
        return Optional.ofNullable(this.kmsKeyVersionId);
    }

    /**
     * (Updatable) The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`. It is a required field when `db_workload` is AJD and needs to be set to `LICENSE_INCLUDED` as AJD does not support default `license_model` value `BRING_YOUR_OWN_LICENSE`.
     * 
     */
    @Import(name="licenseModel")
    private @Nullable Output<String> licenseModel;

    /**
     * @return (Updatable) The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`. It is a required field when `db_workload` is AJD and needs to be set to `LICENSE_INCLUDED` as AJD does not support default `license_model` value `BRING_YOUR_OWN_LICENSE`.
     * 
     */
    public Optional<Output<String>> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }

    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
     * 
     */
    @Import(name="localAdgAutoFailoverMaxDataLossLimit")
    private @Nullable Output<Integer> localAdgAutoFailoverMaxDataLossLimit;

    /**
     * @return Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
     * 
     */
    public Optional<Output<Integer>> localAdgAutoFailoverMaxDataLossLimit() {
        return Optional.ofNullable(this.localAdgAutoFailoverMaxDataLossLimit);
    }

    /**
     * Indicates the local disaster recovery (DR) type of the Serverless Autonomous Database. Autonomous Data Guard (`ADG`) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based (`BACKUP_BASED`) DR type provides lower cost DR with a slower RTO during failover or switchover.
     * 
     */
    @Import(name="localDisasterRecoveryType")
    private @Nullable Output<String> localDisasterRecoveryType;

    /**
     * @return Indicates the local disaster recovery (DR) type of the Serverless Autonomous Database. Autonomous Data Guard (`ADG`) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based (`BACKUP_BASED`) DR type provides lower cost DR with a slower RTO during failover or switchover.
     * 
     */
    public Optional<Output<String>> localDisasterRecoveryType() {
        return Optional.ofNullable(this.localDisasterRecoveryType);
    }

    /**
     * Autonomous Data Guard local (same region) standby database details.
     * 
     */
    @Import(name="localStandbyDbs")
    private @Nullable Output<List<AutonomousDatabaseLocalStandbyDbArgs>> localStandbyDbs;

    /**
     * @return Autonomous Data Guard local (same region) standby database details.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseLocalStandbyDbArgs>>> localStandbyDbs() {
        return Optional.ofNullable(this.localStandbyDbs);
    }

    /**
     * Details for the long-term backup schedule.
     * 
     */
    @Import(name="longTermBackupSchedules")
    private @Nullable Output<List<AutonomousDatabaseLongTermBackupScheduleArgs>> longTermBackupSchedules;

    /**
     * @return Details for the long-term backup schedule.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseLongTermBackupScheduleArgs>>> longTermBackupSchedules() {
        return Optional.ofNullable(this.longTermBackupSchedules);
    }

    /**
     * (Updatable) **Deprecated.** The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
     * 
     */
    @Import(name="maxCpuCoreCount")
    private @Nullable Output<Integer> maxCpuCoreCount;

    /**
     * @return (Updatable) **Deprecated.** The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
     * 
     */
    public Optional<Output<Integer>> maxCpuCoreCount() {
        return Optional.ofNullable(this.maxCpuCoreCount);
    }

    /**
     * The amount of memory (in GBs) enabled per OCPU or ECPU. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details. This parameter is not used for Autonomous database Serverless.
     * 
     */
    @Import(name="memoryPerOracleComputeUnitInGbs")
    private @Nullable Output<Integer> memoryPerOracleComputeUnitInGbs;

    /**
     * @return The amount of memory (in GBs) enabled per OCPU or ECPU. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details. This parameter is not used for Autonomous database Serverless.
     * 
     */
    public Optional<Output<Integer>> memoryPerOracleComputeUnitInGbs() {
        return Optional.ofNullable(this.memoryPerOracleComputeUnitInGbs);
    }

    /**
     * The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    @Import(name="ncharacterSet")
    private @Nullable Output<String> ncharacterSet;

    /**
     * @return The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    public Optional<Output<String>> ncharacterSet() {
        return Optional.ofNullable(this.ncharacterSet);
    }

    /**
     * Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
     * 
     */
    @Import(name="netServicesArchitecture")
    private @Nullable Output<String> netServicesArchitecture;

    /**
     * @return Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
     * 
     */
    public Optional<Output<String>> netServicesArchitecture() {
        return Optional.ofNullable(this.netServicesArchitecture);
    }

    /**
     * The date and time when the next long-term backup would be created.
     * 
     */
    @Import(name="nextLongTermBackupTimeStamp")
    private @Nullable Output<String> nextLongTermBackupTimeStamp;

    /**
     * @return The date and time when the next long-term backup would be created.
     * 
     */
    public Optional<Output<String>> nextLongTermBackupTimeStamp() {
        return Optional.ofNullable(this.nextLongTermBackupTimeStamp);
    }

    /**
     * (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    @Import(name="nsgIds")
    private @Nullable Output<List<String>> nsgIds;

    /**
     * @return (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    public Optional<Output<List<String>>> nsgIds() {
        return Optional.ofNullable(this.nsgIds);
    }

    /**
     * (Updatable) The number of OCPU cores to be made available to the database.
     * 
     * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
     *   The following points apply:
     * * For Autonomous Databases on dedicated Exadata infrastructure, to provision less than 1 core, enter a fractional value in an increment of 0.1. For example, you can provision 0.3 or 0.4 cores, but not 0.35 cores. (Note that fractional OCPU values are not supported for Autonomous Databasese on shared Exadata infrastructure.)
     * * To provision 1 or more cores, you must enter an integer between 1 and the maximum number of cores available for the infrastructure shape. For example, you can provision 2 cores or 3 cores, but not 2.5 cores. This applies to Autonomous Databases on both shared and dedicated Exadata infrastructure.
     * 
     * For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * 
     * **Note:** This parameter cannot be used with the `cpuCoreCount` parameter.
     * 
     */
    @Import(name="ocpuCount")
    private @Nullable Output<Double> ocpuCount;

    /**
     * @return (Updatable) The number of OCPU cores to be made available to the database.
     * 
     * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
     *   The following points apply:
     * * For Autonomous Databases on dedicated Exadata infrastructure, to provision less than 1 core, enter a fractional value in an increment of 0.1. For example, you can provision 0.3 or 0.4 cores, but not 0.35 cores. (Note that fractional OCPU values are not supported for Autonomous Databasese on shared Exadata infrastructure.)
     * * To provision 1 or more cores, you must enter an integer between 1 and the maximum number of cores available for the infrastructure shape. For example, you can provision 2 cores or 3 cores, but not 2.5 cores. This applies to Autonomous Databases on both shared and dedicated Exadata infrastructure.
     * 
     * For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * 
     * **Note:** This parameter cannot be used with the `cpuCoreCount` parameter.
     * 
     */
    public Optional<Output<Double>> ocpuCount() {
        return Optional.ofNullable(this.ocpuCount);
    }

    /**
     * Indicates the Autonomous Database mode. The database can be opened in `READ_ONLY` or `READ_WRITE` mode.
     * 
     */
    @Import(name="openMode")
    private @Nullable Output<String> openMode;

    /**
     * @return Indicates the Autonomous Database mode. The database can be opened in `READ_ONLY` or `READ_WRITE` mode.
     * 
     */
    public Optional<Output<String>> openMode() {
        return Optional.ofNullable(this.openMode);
    }

    /**
     * (Updatable) Status of Operations Insights for this Autonomous Database. Values supported are `ENABLED` and `NOT_ENABLED`
     * 
     */
    @Import(name="operationsInsightsStatus")
    private @Nullable Output<String> operationsInsightsStatus;

    /**
     * @return (Updatable) Status of Operations Insights for this Autonomous Database. Values supported are `ENABLED` and `NOT_ENABLED`
     * 
     */
    public Optional<Output<String>> operationsInsightsStatus() {
        return Optional.ofNullable(this.operationsInsightsStatus);
    }

    /**
     * The database [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Disaster Recovery peer (source Primary) database, which is located in a different (remote) region from the current peer database.
     * 
     */
    @Import(name="peerDbId")
    private @Nullable Output<String> peerDbId;

    /**
     * @return The database [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Disaster Recovery peer (source Primary) database, which is located in a different (remote) region from the current peer database.
     * 
     */
    public Optional<Output<String>> peerDbId() {
        return Optional.ofNullable(this.peerDbId);
    }

    /**
     * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
     * 
     */
    @Import(name="peerDbIds")
    private @Nullable Output<List<String>> peerDbIds;

    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
     * 
     */
    public Optional<Output<List<String>>> peerDbIds() {
        return Optional.ofNullable(this.peerDbIds);
    }

    /**
     * The Autonomous Database permission level. Restricted mode allows access only by admin users.
     * 
     */
    @Import(name="permissionLevel")
    private @Nullable Output<String> permissionLevel;

    /**
     * @return The Autonomous Database permission level. Restricted mode allows access only by admin users.
     * 
     */
    public Optional<Output<String>> permissionLevel() {
        return Optional.ofNullable(this.permissionLevel);
    }

    /**
     * The private endpoint for the resource. This parameter is not used in Autonomous Databases using Serverless infrastructure and Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    @Import(name="privateEndpoint")
    private @Nullable Output<String> privateEndpoint;

    /**
     * @return The private endpoint for the resource. This parameter is not used in Autonomous Databases using Serverless infrastructure and Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Optional<Output<String>> privateEndpoint() {
        return Optional.ofNullable(this.privateEndpoint);
    }

    /**
     * The private endpoint Ip address for the resource.
     * 
     */
    @Import(name="privateEndpointIp")
    private @Nullable Output<String> privateEndpointIp;

    /**
     * @return The private endpoint Ip address for the resource.
     * 
     */
    public Optional<Output<String>> privateEndpointIp() {
        return Optional.ofNullable(this.privateEndpointIp);
    }

    /**
     * (Updatable) (Optional) (Updatable) The resource&#39;s private endpoint label.
     * * Setting the endpoint label to a non-empty string creates a private endpoint database.
     * * Resetting the endpoint label to an empty string, after the creation of the private endpoint database, changes the private endpoint database to a public endpoint database.
     * * Setting the endpoint label to a non-empty string value, updates to a new private endpoint database, when the database is disabled and re-enabled.
     * 
     */
    @Import(name="privateEndpointLabel")
    private @Nullable Output<String> privateEndpointLabel;

    /**
     * @return (Updatable) (Optional) (Updatable) The resource&#39;s private endpoint label.
     * * Setting the endpoint label to a non-empty string creates a private endpoint database.
     * * Resetting the endpoint label to an empty string, after the creation of the private endpoint database, changes the private endpoint database to a public endpoint database.
     * * Setting the endpoint label to a non-empty string value, updates to a new private endpoint database, when the database is disabled and re-enabled.
     * 
     */
    public Optional<Output<String>> privateEndpointLabel() {
        return Optional.ofNullable(this.privateEndpointLabel);
    }

    /**
     * An array of CPU values that an Autonomous Database can be scaled to.
     * 
     */
    @Import(name="provisionableCpuses")
    private @Nullable Output<List<Double>> provisionableCpuses;

    /**
     * @return An array of CPU values that an Autonomous Database can be scaled to.
     * 
     */
    public Optional<Output<List<Double>>> provisionableCpuses() {
        return Optional.ofNullable(this.provisionableCpuses);
    }

    /**
     * The Public URLs of Private Endpoint database for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
     * 
     */
    @Import(name="publicConnectionUrls")
    private @Nullable Output<List<AutonomousDatabasePublicConnectionUrlArgs>> publicConnectionUrls;

    /**
     * @return The Public URLs of Private Endpoint database for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
     * 
     */
    public Optional<Output<List<AutonomousDatabasePublicConnectionUrlArgs>>> publicConnectionUrls() {
        return Optional.ofNullable(this.publicConnectionUrls);
    }

    /**
     * The public endpoint for the private endpoint enabled resource.
     * 
     */
    @Import(name="publicEndpoint")
    private @Nullable Output<String> publicEndpoint;

    /**
     * @return The public endpoint for the private endpoint enabled resource.
     * 
     */
    public Optional<Output<String>> publicEndpoint() {
        return Optional.ofNullable(this.publicEndpoint);
    }

    /**
     * (Updatable) The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
     * 
     */
    @Import(name="refreshableMode")
    private @Nullable Output<String> refreshableMode;

    /**
     * @return (Updatable) The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
     * 
     */
    public Optional<Output<String>> refreshableMode() {
        return Optional.ofNullable(this.refreshableMode);
    }

    /**
     * The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
     * 
     */
    @Import(name="refreshableStatus")
    private @Nullable Output<String> refreshableStatus;

    /**
     * @return The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
     * 
     */
    public Optional<Output<String>> refreshableStatus() {
        return Optional.ofNullable(this.refreshableStatus);
    }

    /**
     * Configurations of a Disaster Recovery.
     * 
     */
    @Import(name="remoteDisasterRecoveryConfigurations")
    private @Nullable Output<List<AutonomousDatabaseRemoteDisasterRecoveryConfigurationArgs>> remoteDisasterRecoveryConfigurations;

    /**
     * @return Configurations of a Disaster Recovery.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseRemoteDisasterRecoveryConfigurationArgs>>> remoteDisasterRecoveryConfigurations() {
        return Optional.ofNullable(this.remoteDisasterRecoveryConfigurations);
    }

    /**
     * Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
     * 
     */
    @Import(name="remoteDisasterRecoveryType")
    private @Nullable Output<String> remoteDisasterRecoveryType;

    /**
     * @return Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
     * 
     */
    public Optional<Output<String>> remoteDisasterRecoveryType() {
        return Optional.ofNullable(this.remoteDisasterRecoveryType);
    }

    /**
     * (Updatable) The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="resourcePoolLeaderId")
    private @Nullable Output<String> resourcePoolLeaderId;

    /**
     * @return (Updatable) The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<Output<String>> resourcePoolLeaderId() {
        return Optional.ofNullable(this.resourcePoolLeaderId);
    }

    /**
     * (Updatable) The configuration details for resource pool
     * 
     */
    @Import(name="resourcePoolSummary")
    private @Nullable Output<AutonomousDatabaseResourcePoolSummaryArgs> resourcePoolSummary;

    /**
     * @return (Updatable) The configuration details for resource pool
     * 
     */
    public Optional<Output<AutonomousDatabaseResourcePoolSummaryArgs>> resourcePoolSummary() {
        return Optional.ofNullable(this.resourcePoolSummary);
    }

    /**
     * The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * (Updatable) An optional property when flipped triggers rotation of KMS key. It is only applicable on dedicated databases i.e. where `is_dedicated` is true.
     * 
     */
    @Import(name="rotateKeyTrigger")
    private @Nullable Output<Boolean> rotateKeyTrigger;

    /**
     * @return (Updatable) An optional property when flipped triggers rotation of KMS key. It is only applicable on dedicated databases i.e. where `is_dedicated` is true.
     * 
     */
    public Optional<Output<Boolean>> rotateKeyTrigger() {
        return Optional.ofNullable(this.rotateKeyTrigger);
    }

    /**
     * (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    @Import(name="scheduledOperations")
    private @Nullable Output<List<AutonomousDatabaseScheduledOperationArgs>> scheduledOperations;

    /**
     * @return (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseScheduledOperationArgs>>> scheduledOperations() {
        return Optional.ofNullable(this.scheduledOperations);
    }

    /**
     * (Updatable) The Oracle Cloud Infrastructure vault secret [/Content/General/Concepts/identifiers.htm]OCID.
     * 
     * This cannot be used in conjunction with adminPassword.
     * 
     */
    @Import(name="secretId")
    private @Nullable Output<String> secretId;

    /**
     * @return (Updatable) The Oracle Cloud Infrastructure vault secret [/Content/General/Concepts/identifiers.htm]OCID.
     * 
     * This cannot be used in conjunction with adminPassword.
     * 
     */
    public Optional<Output<String>> secretId() {
        return Optional.ofNullable(this.secretId);
    }

    /**
     * (Updatable) The version of the vault secret. If no version is specified, the latest version will be used.
     * 
     */
    @Import(name="secretVersionNumber")
    private @Nullable Output<Integer> secretVersionNumber;

    /**
     * @return (Updatable) The version of the vault secret. If no version is specified, the latest version will be used.
     * 
     */
    public Optional<Output<Integer>> secretVersionNumber() {
        return Optional.ofNullable(this.secretVersionNumber);
    }

    /**
     * (Updatable) Security Attributes for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Oracle-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;: &#34;42&#34;, &#34;mode&#34;: &#34;audit&#34;}}}`
     * 
     */
    @Import(name="securityAttributes")
    private @Nullable Output<Map<String,String>> securityAttributes;

    /**
     * @return (Updatable) Security Attributes for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Oracle-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;: &#34;42&#34;, &#34;mode&#34;: &#34;audit&#34;}}}`
     * 
     */
    public Optional<Output<Map<String,String>>> securityAttributes() {
        return Optional.ofNullable(this.securityAttributes);
    }

    /**
     * The URL of the Service Console for the Autonomous Database.
     * 
     */
    @Import(name="serviceConsoleUrl")
    private @Nullable Output<String> serviceConsoleUrl;

    /**
     * @return The URL of the Service Console for the Autonomous Database.
     * 
     */
    public Optional<Output<String>> serviceConsoleUrl() {
        return Optional.ofNullable(this.serviceConsoleUrl);
    }

    @Import(name="shrinkAdbTrigger")
    private @Nullable Output<Integer> shrinkAdbTrigger;

    public Optional<Output<Integer>> shrinkAdbTrigger() {
        return Optional.ofNullable(this.shrinkAdbTrigger);
    }

    /**
     * The source of the database:
     * * Use `NONE` for creating a new Autonomous Database.
     * * Use `DATABASE` for creating a new Autonomous Database by cloning an existing running Autonomous Database from the latest timestamp, also provide the source database OCID in the `source_id` parameter.
     * * Use `CROSS_REGION_DATAGUARD` to create a standby Data Guard database in another region, also provide the remote primary database OCID in the `source_id` parameter.
     * * Use `CLONE_TO_REFRESHABLE` for creating a refreshable clone.
     * 
     * For [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) instances, the following cloning options are available:
     * * Use `BACKUP_FROM_ID` for creating a new Autonomous Database by cloning from a specified backup. Also provide the backup OCID in the `autonomous_database_backup_id` parameter.
     * * Use `BACKUP_FROM_TIMESTAMP` for creating a point-in-time Autonomous Database clone using backups. Also provide the backup timestamp in the `timestamp` parameter. For more information, see [Cloning and Moving an Autonomous Database](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/clone-autonomous-database.html#GUID-D771796F-5081-4CFB-A7FF-0F893EABD7BC).
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return The source of the database:
     * * Use `NONE` for creating a new Autonomous Database.
     * * Use `DATABASE` for creating a new Autonomous Database by cloning an existing running Autonomous Database from the latest timestamp, also provide the source database OCID in the `source_id` parameter.
     * * Use `CROSS_REGION_DATAGUARD` to create a standby Data Guard database in another region, also provide the remote primary database OCID in the `source_id` parameter.
     * * Use `CLONE_TO_REFRESHABLE` for creating a refreshable clone.
     * 
     * For [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) instances, the following cloning options are available:
     * * Use `BACKUP_FROM_ID` for creating a new Autonomous Database by cloning from a specified backup. Also provide the backup OCID in the `autonomous_database_backup_id` parameter.
     * * Use `BACKUP_FROM_TIMESTAMP` for creating a point-in-time Autonomous Database clone using backups. Also provide the backup timestamp in the `timestamp` parameter. For more information, see [Cloning and Moving an Autonomous Database](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/clone-autonomous-database.html#GUID-D771796F-5081-4CFB-A7FF-0F893EABD7BC).
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that will be used to create a new standby database for the Data Guard association.
     * 
     */
    @Import(name="sourceId")
    private @Nullable Output<String> sourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that will be used to create a new standby database for the Data Guard association.
     * 
     */
    public Optional<Output<String>> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }

    /**
     * **Deprecated** Autonomous Data Guard standby database details.
     * 
     */
    @Import(name="standbyDbs")
    private @Nullable Output<List<AutonomousDatabaseStandbyDbArgs>> standbyDbs;

    /**
     * @return **Deprecated** Autonomous Data Guard standby database details.
     * 
     */
    public Optional<Output<List<AutonomousDatabaseStandbyDbArgs>>> standbyDbs() {
        return Optional.ofNullable(this.standbyDbs);
    }

    /**
     * (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses this primary&#39;s IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
     * 
     * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
     * 
     * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
     * 
     * If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses `whitelisted_ips` primary&#39;s IP access control list (ACL) as `standbywhitelistedips` for the disaster recovery peer.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    @Import(name="standbyWhitelistedIps")
    private @Nullable Output<List<String>> standbyWhitelistedIps;

    /**
     * @return (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses this primary&#39;s IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
     * 
     * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
     * 
     * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
     * 
     * If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses `whitelisted_ips` primary&#39;s IP access control list (ACL) as `standbywhitelistedips` for the disaster recovery peer.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
     * 
     */
    public Optional<Output<List<String>>> standbyWhitelistedIps() {
        return Optional.ofNullable(this.standbyWhitelistedIps);
    }

    /**
     * The current state of the Autonomous Database.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Autonomous Database.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. This the only parameter to configure private endpoint, VCN details are obtained from the `subnet_id`.
     * 
     * **Subnet Restrictions:**
     * * For bare metal DB systems and for single node virtual machine DB systems, do not use a subnet that overlaps with 192.168.16.16/28.
     * * For Exadata and virtual machine 2-node RAC systems, do not use a subnet that overlaps with 192.168.128.0/20.
     * * For Autonomous Database, setting this will disable public secure access to the database.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. This the only parameter to configure private endpoint, VCN details are obtained from the `subnet_id`.
     * 
     * **Subnet Restrictions:**
     * * For bare metal DB systems and for single node virtual machine DB systems, do not use a subnet that overlaps with 192.168.16.16/28.
     * * For Exadata and virtual machine 2-node RAC systems, do not use a subnet that overlaps with 192.168.128.0/20.
     * * For Autonomous Database, setting this will disable public secure access to the database.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
     * These subnets are used by the Oracle Clusterware private interconnect on the database instance. Specifying an overlapping subnet will cause the private interconnect to malfunction. This restriction applies to both the client subnet and the backup subnet.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
     * These subnets are used by the Oracle Clusterware private interconnect on the database instance. Specifying an overlapping subnet will cause the private interconnect to malfunction. This restriction applies to both the client subnet and the backup subnet.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
     * 
     */
    @Import(name="supportedRegionsToCloneTos")
    private @Nullable Output<List<String>> supportedRegionsToCloneTos;

    /**
     * @return The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
     * 
     */
    public Optional<Output<List<String>>> supportedRegionsToCloneTos() {
        return Optional.ofNullable(this.supportedRegionsToCloneTos);
    }

    /**
     * It is applicable only when `is_local_data_guard_enabled` is true. Could be set to `PRIMARY` or `STANDBY`. Default value is `PRIMARY`.
     * 
     */
    @Import(name="switchoverTo")
    private @Nullable Output<String> switchoverTo;

    /**
     * @return It is applicable only when `is_local_data_guard_enabled` is true. Could be set to `PRIMARY` or `STANDBY`. Default value is `PRIMARY`.
     * 
     */
    public Optional<Output<String>> switchoverTo() {
        return Optional.ofNullable(this.switchoverTo);
    }

    /**
     * (Updatable) It is applicable only when `dataguard_region_type` and `role` are set, and `is_dedicated` is false. For Autonomous Database Serverless instances, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. It takes the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the remote peer to switchover to and the API is called from the remote region.
     * 
     */
    @Import(name="switchoverToRemotePeerId")
    private @Nullable Output<String> switchoverToRemotePeerId;

    /**
     * @return (Updatable) It is applicable only when `dataguard_region_type` and `role` are set, and `is_dedicated` is false. For Autonomous Database Serverless instances, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. It takes the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the remote peer to switchover to and the API is called from the remote region.
     * 
     */
    public Optional<Output<String>> switchoverToRemotePeerId() {
        return Optional.ofNullable(this.switchoverToRemotePeerId);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time the Autonomous Database was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the Autonomous Database was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
     * 
     */
    @Import(name="timeDataGuardRoleChanged")
    private @Nullable Output<String> timeDataGuardRoleChanged;

    /**
     * @return The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
     * 
     */
    public Optional<Output<String>> timeDataGuardRoleChanged() {
        return Optional.ofNullable(this.timeDataGuardRoleChanged);
    }

    /**
     * The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
     * 
     */
    @Import(name="timeDeletionOfFreeAutonomousDatabase")
    private @Nullable Output<String> timeDeletionOfFreeAutonomousDatabase;

    /**
     * @return The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
     * 
     */
    public Optional<Output<String>> timeDeletionOfFreeAutonomousDatabase() {
        return Optional.ofNullable(this.timeDeletionOfFreeAutonomousDatabase);
    }

    /**
     * The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
     * 
     */
    @Import(name="timeDisasterRecoveryRoleChanged")
    private @Nullable Output<String> timeDisasterRecoveryRoleChanged;

    /**
     * @return The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
     * 
     */
    public Optional<Output<String>> timeDisasterRecoveryRoleChanged() {
        return Optional.ofNullable(this.timeDisasterRecoveryRoleChanged);
    }

    /**
     * The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
     * 
     */
    @Import(name="timeLocalDataGuardEnabled")
    private @Nullable Output<String> timeLocalDataGuardEnabled;

    /**
     * @return The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
     * 
     */
    public Optional<Output<String>> timeLocalDataGuardEnabled() {
        return Optional.ofNullable(this.timeLocalDataGuardEnabled);
    }

    /**
     * The date and time when maintenance will begin.
     * 
     */
    @Import(name="timeMaintenanceBegin")
    private @Nullable Output<String> timeMaintenanceBegin;

    /**
     * @return The date and time when maintenance will begin.
     * 
     */
    public Optional<Output<String>> timeMaintenanceBegin() {
        return Optional.ofNullable(this.timeMaintenanceBegin);
    }

    /**
     * The date and time when maintenance will end.
     * 
     */
    @Import(name="timeMaintenanceEnd")
    private @Nullable Output<String> timeMaintenanceEnd;

    /**
     * @return The date and time when maintenance will end.
     * 
     */
    public Optional<Output<String>> timeMaintenanceEnd() {
        return Optional.ofNullable(this.timeMaintenanceEnd);
    }

    /**
     * The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the `autoRefreshFrequencyInSeconds` parameter.
     * 
     */
    @Import(name="timeOfAutoRefreshStart")
    private @Nullable Output<String> timeOfAutoRefreshStart;

    /**
     * @return The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the `autoRefreshFrequencyInSeconds` parameter.
     * 
     */
    public Optional<Output<String>> timeOfAutoRefreshStart() {
        return Optional.ofNullable(this.timeOfAutoRefreshStart);
    }

    @Import(name="timeOfJoiningResourcePool")
    private @Nullable Output<String> timeOfJoiningResourcePool;

    public Optional<Output<String>> timeOfJoiningResourcePool() {
        return Optional.ofNullable(this.timeOfJoiningResourcePool);
    }

    /**
     * The timestamp of the last failover operation.
     * 
     */
    @Import(name="timeOfLastFailover")
    private @Nullable Output<String> timeOfLastFailover;

    /**
     * @return The timestamp of the last failover operation.
     * 
     */
    public Optional<Output<String>> timeOfLastFailover() {
        return Optional.ofNullable(this.timeOfLastFailover);
    }

    /**
     * The date and time when last refresh happened.
     * 
     */
    @Import(name="timeOfLastRefresh")
    private @Nullable Output<String> timeOfLastRefresh;

    /**
     * @return The date and time when last refresh happened.
     * 
     */
    public Optional<Output<String>> timeOfLastRefresh() {
        return Optional.ofNullable(this.timeOfLastRefresh);
    }

    /**
     * The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
     * 
     */
    @Import(name="timeOfLastRefreshPoint")
    private @Nullable Output<String> timeOfLastRefreshPoint;

    /**
     * @return The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
     * 
     */
    public Optional<Output<String>> timeOfLastRefreshPoint() {
        return Optional.ofNullable(this.timeOfLastRefreshPoint);
    }

    /**
     * The timestamp of the last switchover operation for the Autonomous Database.
     * 
     */
    @Import(name="timeOfLastSwitchover")
    private @Nullable Output<String> timeOfLastSwitchover;

    /**
     * @return The timestamp of the last switchover operation for the Autonomous Database.
     * 
     */
    public Optional<Output<String>> timeOfLastSwitchover() {
        return Optional.ofNullable(this.timeOfLastSwitchover);
    }

    /**
     * The date and time of next refresh.
     * 
     */
    @Import(name="timeOfNextRefresh")
    private @Nullable Output<String> timeOfNextRefresh;

    /**
     * @return The date and time of next refresh.
     * 
     */
    public Optional<Output<String>> timeOfNextRefresh() {
        return Optional.ofNullable(this.timeOfNextRefresh);
    }

    /**
     * The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
     * 
     */
    @Import(name="timeReclamationOfFreeAutonomousDatabase")
    private @Nullable Output<String> timeReclamationOfFreeAutonomousDatabase;

    /**
     * @return The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
     * 
     */
    public Optional<Output<String>> timeReclamationOfFreeAutonomousDatabase() {
        return Optional.ofNullable(this.timeReclamationOfFreeAutonomousDatabase);
    }

    @Import(name="timeUndeleted")
    private @Nullable Output<String> timeUndeleted;

    public Optional<Output<String>> timeUndeleted() {
        return Optional.ofNullable(this.timeUndeleted);
    }

    /**
     * The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
     * 
     */
    @Import(name="timeUntilReconnectCloneEnabled")
    private @Nullable Output<String> timeUntilReconnectCloneEnabled;

    /**
     * @return The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
     * 
     */
    public Optional<Output<String>> timeUntilReconnectCloneEnabled() {
        return Optional.ofNullable(this.timeUntilReconnectCloneEnabled);
    }

    /**
     * The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past.
     * 
     */
    @Import(name="timestamp")
    private @Nullable Output<String> timestamp;

    /**
     * @return The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past.
     * 
     */
    public Optional<Output<String>> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }

    /**
     * The backup storage to the database.
     * 
     */
    @Import(name="totalBackupStorageSizeInGbs")
    private @Nullable Output<Double> totalBackupStorageSizeInGbs;

    /**
     * @return The backup storage to the database.
     * 
     */
    public Optional<Output<Double>> totalBackupStorageSizeInGbs() {
        return Optional.ofNullable(this.totalBackupStorageSizeInGbs);
    }

    /**
     * Clone from latest available backup timestamp.
     * 
     */
    @Import(name="useLatestAvailableBackupTimeStamp")
    private @Nullable Output<Boolean> useLatestAvailableBackupTimeStamp;

    /**
     * @return Clone from latest available backup timestamp.
     * 
     */
    public Optional<Output<Boolean>> useLatestAvailableBackupTimeStamp() {
        return Optional.ofNullable(this.useLatestAvailableBackupTimeStamp);
    }

    /**
     * The storage space consumed by Autonomous Database in GBs.
     * 
     */
    @Import(name="usedDataStorageSizeInGbs")
    private @Nullable Output<Integer> usedDataStorageSizeInGbs;

    /**
     * @return The storage space consumed by Autonomous Database in GBs.
     * 
     */
    public Optional<Output<Integer>> usedDataStorageSizeInGbs() {
        return Optional.ofNullable(this.usedDataStorageSizeInGbs);
    }

    /**
     * The amount of storage that has been used for Autonomous Databases in dedicated infrastructure, in terabytes.
     * 
     */
    @Import(name="usedDataStorageSizeInTbs")
    private @Nullable Output<Integer> usedDataStorageSizeInTbs;

    /**
     * @return The amount of storage that has been used for Autonomous Databases in dedicated infrastructure, in terabytes.
     * 
     */
    public Optional<Output<Integer>> usedDataStorageSizeInTbs() {
        return Optional.ofNullable(this.usedDataStorageSizeInTbs);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    @Import(name="vaultId")
    private @Nullable Output<String> vaultId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Optional<Output<String>> vaultId() {
        return Optional.ofNullable(this.vaultId);
    }

    /**
     * (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
     * 
     * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
     * 
     * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. To remove all whitelisted IPs, set the field to a list with an empty string `[&#34;&#34;]`.
     * 
     */
    @Import(name="whitelistedIps")
    private @Nullable Output<List<String>> whitelistedIps;

    /**
     * @return (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
     * 
     * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
     * 
     * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
     * 
     * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. To remove all whitelisted IPs, set the field to a list with an empty string `[&#34;&#34;]`.
     * 
     */
    public Optional<Output<List<String>>> whitelistedIps() {
        return Optional.ofNullable(this.whitelistedIps);
    }

    private AutonomousDatabaseState() {}

    private AutonomousDatabaseState(AutonomousDatabaseState $) {
        this.actualUsedDataStorageSizeInTbs = $.actualUsedDataStorageSizeInTbs;
        this.adminPassword = $.adminPassword;
        this.allocatedStorageSizeInTbs = $.allocatedStorageSizeInTbs;
        this.apexDetails = $.apexDetails;
        this.arePrimaryWhitelistedIpsUsed = $.arePrimaryWhitelistedIpsUsed;
        this.autoRefreshFrequencyInSeconds = $.autoRefreshFrequencyInSeconds;
        this.autoRefreshPointLagInSeconds = $.autoRefreshPointLagInSeconds;
        this.autonomousContainerDatabaseId = $.autonomousContainerDatabaseId;
        this.autonomousDatabaseBackupId = $.autonomousDatabaseBackupId;
        this.autonomousDatabaseId = $.autonomousDatabaseId;
        this.autonomousMaintenanceScheduleType = $.autonomousMaintenanceScheduleType;
        this.availabilityDomain = $.availabilityDomain;
        this.availableUpgradeVersions = $.availableUpgradeVersions;
        this.backupConfigs = $.backupConfigs;
        this.backupRetentionPeriodInDays = $.backupRetentionPeriodInDays;
        this.byolComputeCountLimit = $.byolComputeCountLimit;
        this.characterSet = $.characterSet;
        this.cloneType = $.cloneType;
        this.clusterPlacementGroupId = $.clusterPlacementGroupId;
        this.compartmentId = $.compartmentId;
        this.computeCount = $.computeCount;
        this.computeModel = $.computeModel;
        this.connectionStrings = $.connectionStrings;
        this.connectionUrls = $.connectionUrls;
        this.cpuCoreCount = $.cpuCoreCount;
        this.customerContacts = $.customerContacts;
        this.dataSafeStatus = $.dataSafeStatus;
        this.dataStorageSizeInGb = $.dataStorageSizeInGb;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.databaseEdition = $.databaseEdition;
        this.databaseManagementStatus = $.databaseManagementStatus;
        this.dataguardRegionType = $.dataguardRegionType;
        this.dbName = $.dbName;
        this.dbToolsDetails = $.dbToolsDetails;
        this.dbVersion = $.dbVersion;
        this.dbWorkload = $.dbWorkload;
        this.definedTags = $.definedTags;
        this.disasterRecoveryRegionType = $.disasterRecoveryRegionType;
        this.disasterRecoveryType = $.disasterRecoveryType;
        this.displayName = $.displayName;
        this.encryptionKey = $.encryptionKey;
        this.encryptionKeyHistoryEntries = $.encryptionKeyHistoryEntries;
        this.failedDataRecoveryInSeconds = $.failedDataRecoveryInSeconds;
        this.freeformTags = $.freeformTags;
        this.inMemoryAreaInGbs = $.inMemoryAreaInGbs;
        this.inMemoryPercentage = $.inMemoryPercentage;
        this.infrastructureType = $.infrastructureType;
        this.isAccessControlEnabled = $.isAccessControlEnabled;
        this.isAutoScalingEnabled = $.isAutoScalingEnabled;
        this.isAutoScalingForStorageEnabled = $.isAutoScalingForStorageEnabled;
        this.isBackupRetentionLocked = $.isBackupRetentionLocked;
        this.isDataGuardEnabled = $.isDataGuardEnabled;
        this.isDedicated = $.isDedicated;
        this.isDevTier = $.isDevTier;
        this.isDisconnectPeer = $.isDisconnectPeer;
        this.isFreeTier = $.isFreeTier;
        this.isLocalDataGuardEnabled = $.isLocalDataGuardEnabled;
        this.isMtlsConnectionRequired = $.isMtlsConnectionRequired;
        this.isPreview = $.isPreview;
        this.isPreviewVersionWithServiceTermsAccepted = $.isPreviewVersionWithServiceTermsAccepted;
        this.isReconnectCloneEnabled = $.isReconnectCloneEnabled;
        this.isRefreshableClone = $.isRefreshableClone;
        this.isRemoteDataGuardEnabled = $.isRemoteDataGuardEnabled;
        this.isReplicateAutomaticBackups = $.isReplicateAutomaticBackups;
        this.isShrinkOnly = $.isShrinkOnly;
        this.keyHistoryEntries = $.keyHistoryEntries;
        this.keyStoreId = $.keyStoreId;
        this.keyStoreWalletName = $.keyStoreWalletName;
        this.keyVersionId = $.keyVersionId;
        this.kmsKeyId = $.kmsKeyId;
        this.kmsKeyLifecycleDetails = $.kmsKeyLifecycleDetails;
        this.kmsKeyVersionId = $.kmsKeyVersionId;
        this.licenseModel = $.licenseModel;
        this.lifecycleDetails = $.lifecycleDetails;
        this.localAdgAutoFailoverMaxDataLossLimit = $.localAdgAutoFailoverMaxDataLossLimit;
        this.localDisasterRecoveryType = $.localDisasterRecoveryType;
        this.localStandbyDbs = $.localStandbyDbs;
        this.longTermBackupSchedules = $.longTermBackupSchedules;
        this.maxCpuCoreCount = $.maxCpuCoreCount;
        this.memoryPerOracleComputeUnitInGbs = $.memoryPerOracleComputeUnitInGbs;
        this.ncharacterSet = $.ncharacterSet;
        this.netServicesArchitecture = $.netServicesArchitecture;
        this.nextLongTermBackupTimeStamp = $.nextLongTermBackupTimeStamp;
        this.nsgIds = $.nsgIds;
        this.ocpuCount = $.ocpuCount;
        this.openMode = $.openMode;
        this.operationsInsightsStatus = $.operationsInsightsStatus;
        this.peerDbId = $.peerDbId;
        this.peerDbIds = $.peerDbIds;
        this.permissionLevel = $.permissionLevel;
        this.privateEndpoint = $.privateEndpoint;
        this.privateEndpointIp = $.privateEndpointIp;
        this.privateEndpointLabel = $.privateEndpointLabel;
        this.provisionableCpuses = $.provisionableCpuses;
        this.publicConnectionUrls = $.publicConnectionUrls;
        this.publicEndpoint = $.publicEndpoint;
        this.refreshableMode = $.refreshableMode;
        this.refreshableStatus = $.refreshableStatus;
        this.remoteDisasterRecoveryConfigurations = $.remoteDisasterRecoveryConfigurations;
        this.remoteDisasterRecoveryType = $.remoteDisasterRecoveryType;
        this.resourcePoolLeaderId = $.resourcePoolLeaderId;
        this.resourcePoolSummary = $.resourcePoolSummary;
        this.role = $.role;
        this.rotateKeyTrigger = $.rotateKeyTrigger;
        this.scheduledOperations = $.scheduledOperations;
        this.secretId = $.secretId;
        this.secretVersionNumber = $.secretVersionNumber;
        this.securityAttributes = $.securityAttributes;
        this.serviceConsoleUrl = $.serviceConsoleUrl;
        this.shrinkAdbTrigger = $.shrinkAdbTrigger;
        this.source = $.source;
        this.sourceId = $.sourceId;
        this.standbyDbs = $.standbyDbs;
        this.standbyWhitelistedIps = $.standbyWhitelistedIps;
        this.state = $.state;
        this.subnetId = $.subnetId;
        this.subscriptionId = $.subscriptionId;
        this.supportedRegionsToCloneTos = $.supportedRegionsToCloneTos;
        this.switchoverTo = $.switchoverTo;
        this.switchoverToRemotePeerId = $.switchoverToRemotePeerId;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeDataGuardRoleChanged = $.timeDataGuardRoleChanged;
        this.timeDeletionOfFreeAutonomousDatabase = $.timeDeletionOfFreeAutonomousDatabase;
        this.timeDisasterRecoveryRoleChanged = $.timeDisasterRecoveryRoleChanged;
        this.timeLocalDataGuardEnabled = $.timeLocalDataGuardEnabled;
        this.timeMaintenanceBegin = $.timeMaintenanceBegin;
        this.timeMaintenanceEnd = $.timeMaintenanceEnd;
        this.timeOfAutoRefreshStart = $.timeOfAutoRefreshStart;
        this.timeOfJoiningResourcePool = $.timeOfJoiningResourcePool;
        this.timeOfLastFailover = $.timeOfLastFailover;
        this.timeOfLastRefresh = $.timeOfLastRefresh;
        this.timeOfLastRefreshPoint = $.timeOfLastRefreshPoint;
        this.timeOfLastSwitchover = $.timeOfLastSwitchover;
        this.timeOfNextRefresh = $.timeOfNextRefresh;
        this.timeReclamationOfFreeAutonomousDatabase = $.timeReclamationOfFreeAutonomousDatabase;
        this.timeUndeleted = $.timeUndeleted;
        this.timeUntilReconnectCloneEnabled = $.timeUntilReconnectCloneEnabled;
        this.timestamp = $.timestamp;
        this.totalBackupStorageSizeInGbs = $.totalBackupStorageSizeInGbs;
        this.useLatestAvailableBackupTimeStamp = $.useLatestAvailableBackupTimeStamp;
        this.usedDataStorageSizeInGbs = $.usedDataStorageSizeInGbs;
        this.usedDataStorageSizeInTbs = $.usedDataStorageSizeInTbs;
        this.vaultId = $.vaultId;
        this.whitelistedIps = $.whitelistedIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseState $;

        public Builder() {
            $ = new AutonomousDatabaseState();
        }

        public Builder(AutonomousDatabaseState defaults) {
            $ = new AutonomousDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actualUsedDataStorageSizeInTbs The current amount of storage in use for user and system data, in terabytes (TB).
         * 
         * @return builder
         * 
         */
        public Builder actualUsedDataStorageSizeInTbs(@Nullable Output<Double> actualUsedDataStorageSizeInTbs) {
            $.actualUsedDataStorageSizeInTbs = actualUsedDataStorageSizeInTbs;
            return this;
        }

        /**
         * @param actualUsedDataStorageSizeInTbs The current amount of storage in use for user and system data, in terabytes (TB).
         * 
         * @return builder
         * 
         */
        public Builder actualUsedDataStorageSizeInTbs(Double actualUsedDataStorageSizeInTbs) {
            return actualUsedDataStorageSizeInTbs(Output.of(actualUsedDataStorageSizeInTbs));
        }

        /**
         * @param adminPassword (Updatable) The password must be between 12 and 30 characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. The password is mandatory if source value is &#34;BACKUP_FROM_ID&#34;, &#34;BACKUP_FROM_TIMESTAMP&#34;, &#34;DATABASE&#34; or &#34;NONE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            $.adminPassword = adminPassword;
            return this;
        }

        /**
         * @param adminPassword (Updatable) The password must be between 12 and 30 characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. The password is mandatory if source value is &#34;BACKUP_FROM_ID&#34;, &#34;BACKUP_FROM_TIMESTAMP&#34;, &#34;DATABASE&#34; or &#34;NONE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(String adminPassword) {
            return adminPassword(Output.of(adminPassword));
        }

        /**
         * @param allocatedStorageSizeInTbs The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
         * 
         * @return builder
         * 
         */
        public Builder allocatedStorageSizeInTbs(@Nullable Output<Double> allocatedStorageSizeInTbs) {
            $.allocatedStorageSizeInTbs = allocatedStorageSizeInTbs;
            return this;
        }

        /**
         * @param allocatedStorageSizeInTbs The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
         * 
         * @return builder
         * 
         */
        public Builder allocatedStorageSizeInTbs(Double allocatedStorageSizeInTbs) {
            return allocatedStorageSizeInTbs(Output.of(allocatedStorageSizeInTbs));
        }

        /**
         * @param apexDetails Information about Oracle APEX Application Development.
         * 
         * @return builder
         * 
         */
        public Builder apexDetails(@Nullable Output<List<AutonomousDatabaseApexDetailArgs>> apexDetails) {
            $.apexDetails = apexDetails;
            return this;
        }

        /**
         * @param apexDetails Information about Oracle APEX Application Development.
         * 
         * @return builder
         * 
         */
        public Builder apexDetails(List<AutonomousDatabaseApexDetailArgs> apexDetails) {
            return apexDetails(Output.of(apexDetails));
        }

        /**
         * @param apexDetails Information about Oracle APEX Application Development.
         * 
         * @return builder
         * 
         */
        public Builder apexDetails(AutonomousDatabaseApexDetailArgs... apexDetails) {
            return apexDetails(List.of(apexDetails));
        }

        /**
         * @param arePrimaryWhitelistedIpsUsed (Updatable) This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It&#39;s value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It&#39;s value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
         * 
         * @return builder
         * 
         */
        public Builder arePrimaryWhitelistedIpsUsed(@Nullable Output<Boolean> arePrimaryWhitelistedIpsUsed) {
            $.arePrimaryWhitelistedIpsUsed = arePrimaryWhitelistedIpsUsed;
            return this;
        }

        /**
         * @param arePrimaryWhitelistedIpsUsed (Updatable) This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It&#39;s value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It&#39;s value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
         * 
         * @return builder
         * 
         */
        public Builder arePrimaryWhitelistedIpsUsed(Boolean arePrimaryWhitelistedIpsUsed) {
            return arePrimaryWhitelistedIpsUsed(Output.of(arePrimaryWhitelistedIpsUsed));
        }

        /**
         * @param autoRefreshFrequencyInSeconds (Updatable) The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the `timeOfAutoRefreshStart` parameter.
         * 
         * @return builder
         * 
         */
        public Builder autoRefreshFrequencyInSeconds(@Nullable Output<Integer> autoRefreshFrequencyInSeconds) {
            $.autoRefreshFrequencyInSeconds = autoRefreshFrequencyInSeconds;
            return this;
        }

        /**
         * @param autoRefreshFrequencyInSeconds (Updatable) The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the `timeOfAutoRefreshStart` parameter.
         * 
         * @return builder
         * 
         */
        public Builder autoRefreshFrequencyInSeconds(Integer autoRefreshFrequencyInSeconds) {
            return autoRefreshFrequencyInSeconds(Output.of(autoRefreshFrequencyInSeconds));
        }

        /**
         * @param autoRefreshPointLagInSeconds (Updatable) The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
         * 
         * @return builder
         * 
         */
        public Builder autoRefreshPointLagInSeconds(@Nullable Output<Integer> autoRefreshPointLagInSeconds) {
            $.autoRefreshPointLagInSeconds = autoRefreshPointLagInSeconds;
            return this;
        }

        /**
         * @param autoRefreshPointLagInSeconds (Updatable) The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
         * 
         * @return builder
         * 
         */
        public Builder autoRefreshPointLagInSeconds(Integer autoRefreshPointLagInSeconds) {
            return autoRefreshPointLagInSeconds(Output.of(autoRefreshPointLagInSeconds));
        }

        /**
         * @param autonomousContainerDatabaseId The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder autonomousContainerDatabaseId(@Nullable Output<String> autonomousContainerDatabaseId) {
            $.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }

        /**
         * @param autonomousContainerDatabaseId The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder autonomousContainerDatabaseId(String autonomousContainerDatabaseId) {
            return autonomousContainerDatabaseId(Output.of(autonomousContainerDatabaseId));
        }

        /**
         * @param autonomousDatabaseBackupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database Backup that you will clone to create a new Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseBackupId(@Nullable Output<String> autonomousDatabaseBackupId) {
            $.autonomousDatabaseBackupId = autonomousDatabaseBackupId;
            return this;
        }

        /**
         * @param autonomousDatabaseBackupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database Backup that you will clone to create a new Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseBackupId(String autonomousDatabaseBackupId) {
            return autonomousDatabaseBackupId(Output.of(autonomousDatabaseBackupId));
        }

        /**
         * @param autonomousDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that you will clone to create a new Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(@Nullable Output<String> autonomousDatabaseId) {
            $.autonomousDatabaseId = autonomousDatabaseId;
            return this;
        }

        /**
         * @param autonomousDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that you will clone to create a new Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(String autonomousDatabaseId) {
            return autonomousDatabaseId(Output.of(autonomousDatabaseId));
        }

        /**
         * @param autonomousMaintenanceScheduleType The maintenance schedule type of the Autonomous Database Serverless instances. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
         * 
         * @return builder
         * 
         */
        public Builder autonomousMaintenanceScheduleType(@Nullable Output<String> autonomousMaintenanceScheduleType) {
            $.autonomousMaintenanceScheduleType = autonomousMaintenanceScheduleType;
            return this;
        }

        /**
         * @param autonomousMaintenanceScheduleType The maintenance schedule type of the Autonomous Database Serverless instances. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
         * 
         * @return builder
         * 
         */
        public Builder autonomousMaintenanceScheduleType(String autonomousMaintenanceScheduleType) {
            return autonomousMaintenanceScheduleType(Output.of(autonomousMaintenanceScheduleType));
        }

        /**
         * @param availabilityDomain The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain of a local Autonomous Data Guard standby database of an Autonomous Database Serverless instance.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param availableUpgradeVersions List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
         * 
         * @return builder
         * 
         */
        public Builder availableUpgradeVersions(@Nullable Output<List<String>> availableUpgradeVersions) {
            $.availableUpgradeVersions = availableUpgradeVersions;
            return this;
        }

        /**
         * @param availableUpgradeVersions List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
         * 
         * @return builder
         * 
         */
        public Builder availableUpgradeVersions(List<String> availableUpgradeVersions) {
            return availableUpgradeVersions(Output.of(availableUpgradeVersions));
        }

        /**
         * @param availableUpgradeVersions List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
         * 
         * @return builder
         * 
         */
        public Builder availableUpgradeVersions(String... availableUpgradeVersions) {
            return availableUpgradeVersions(List.of(availableUpgradeVersions));
        }

        /**
         * @param backupConfigs Autonomous Database configuration details for storing [manual backups](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/backup-restore.html#GUID-9035DFB8-4702-4CEB-8281-C2A303820809) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
         * 
         * @return builder
         * 
         */
        public Builder backupConfigs(@Nullable Output<List<AutonomousDatabaseBackupConfigArgs>> backupConfigs) {
            $.backupConfigs = backupConfigs;
            return this;
        }

        /**
         * @param backupConfigs Autonomous Database configuration details for storing [manual backups](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/backup-restore.html#GUID-9035DFB8-4702-4CEB-8281-C2A303820809) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
         * 
         * @return builder
         * 
         */
        public Builder backupConfigs(List<AutonomousDatabaseBackupConfigArgs> backupConfigs) {
            return backupConfigs(Output.of(backupConfigs));
        }

        /**
         * @param backupConfigs Autonomous Database configuration details for storing [manual backups](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/backup-restore.html#GUID-9035DFB8-4702-4CEB-8281-C2A303820809) in the [Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm) service.
         * 
         * @return builder
         * 
         */
        public Builder backupConfigs(AutonomousDatabaseBackupConfigArgs... backupConfigs) {
            return backupConfigs(List.of(backupConfigs));
        }

        /**
         * @param backupRetentionPeriodInDays (Updatable) Retention period, in days, for backups.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriodInDays(@Nullable Output<Integer> backupRetentionPeriodInDays) {
            $.backupRetentionPeriodInDays = backupRetentionPeriodInDays;
            return this;
        }

        /**
         * @param backupRetentionPeriodInDays (Updatable) Retention period, in days, for backups.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriodInDays(Integer backupRetentionPeriodInDays) {
            return backupRetentionPeriodInDays(Output.of(backupRetentionPeriodInDays));
        }

        public Builder byolComputeCountLimit(@Nullable Output<Double> byolComputeCountLimit) {
            $.byolComputeCountLimit = byolComputeCountLimit;
            return this;
        }

        public Builder byolComputeCountLimit(Double byolComputeCountLimit) {
            return byolComputeCountLimit(Output.of(byolComputeCountLimit));
        }

        /**
         * @param characterSet The character set for the autonomous database.  The default is AL32UTF8. Allowed values for an Autonomous Database on Serverless infrastructure as returned by [List Autonomous Database Character Sets](https://www.terraform.io/autonomousDatabaseCharacterSets)
         * 
         * For an Autonomous Database on dedicated infrastructure, the allowed values are:
         * 
         * AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
         * 
         * @return builder
         * 
         */
        public Builder characterSet(@Nullable Output<String> characterSet) {
            $.characterSet = characterSet;
            return this;
        }

        /**
         * @param characterSet The character set for the autonomous database.  The default is AL32UTF8. Allowed values for an Autonomous Database on Serverless infrastructure as returned by [List Autonomous Database Character Sets](https://www.terraform.io/autonomousDatabaseCharacterSets)
         * 
         * For an Autonomous Database on dedicated infrastructure, the allowed values are:
         * 
         * AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
         * 
         * @return builder
         * 
         */
        public Builder characterSet(String characterSet) {
            return characterSet(Output.of(characterSet));
        }

        /**
         * @param cloneType The Autonomous Database clone type. This parameter is not used to create a refreshable clone type, and for refreshable clones one must use the (source=CLONE_TO_REFRESHABLE) parameter.
         * * `FULL` - This option creates a new database that includes all source database data.
         * * `METADATA` - This option creates a new database that includes the source database schema and select metadata, but not the source database data.
         * 
         * @return builder
         * 
         */
        public Builder cloneType(@Nullable Output<String> cloneType) {
            $.cloneType = cloneType;
            return this;
        }

        /**
         * @param cloneType The Autonomous Database clone type. This parameter is not used to create a refreshable clone type, and for refreshable clones one must use the (source=CLONE_TO_REFRESHABLE) parameter.
         * * `FULL` - This option creates a new database that includes all source database data.
         * * `METADATA` - This option creates a new database that includes the source database schema and select metadata, but not the source database data.
         * 
         * @return builder
         * 
         */
        public Builder cloneType(String cloneType) {
            return cloneType(Output.of(cloneType));
        }

        /**
         * @param clusterPlacementGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Autonomous Serverless Database.
         * 
         * @return builder
         * 
         */
        public Builder clusterPlacementGroupId(@Nullable Output<String> clusterPlacementGroupId) {
            $.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }

        /**
         * @param clusterPlacementGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Autonomous Serverless Database.
         * 
         * @return builder
         * 
         */
        public Builder clusterPlacementGroupId(String clusterPlacementGroupId) {
            return clusterPlacementGroupId(Output.of(clusterPlacementGroupId));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param computeCount (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the &#39;ECPU&#39; compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(@Nullable Output<Double> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the &#39;ECPU&#39; compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Double computeCount) {
            return computeCount(Output.of(computeCount));
        }

        /**
         * @param computeModel (Updatable) The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(@Nullable Output<String> computeModel) {
            $.computeModel = computeModel;
            return this;
        }

        /**
         * @param computeModel (Updatable) The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(String computeModel) {
            return computeModel(Output.of(computeModel));
        }

        /**
         * @param connectionStrings The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(@Nullable Output<List<AutonomousDatabaseConnectionStringArgs>> connectionStrings) {
            $.connectionStrings = connectionStrings;
            return this;
        }

        /**
         * @param connectionStrings The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(List<AutonomousDatabaseConnectionStringArgs> connectionStrings) {
            return connectionStrings(Output.of(connectionStrings));
        }

        /**
         * @param connectionStrings The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(AutonomousDatabaseConnectionStringArgs... connectionStrings) {
            return connectionStrings(List.of(connectionStrings));
        }

        /**
         * @param connectionUrls The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).  Example: `{&#34;sqlDevWebUrl&#34;: &#34;https://&lt;hostname&gt;/ords...&#34;, &#34;apexUrl&#34;, &#34;https://&lt;hostname&gt;/ords...&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder connectionUrls(@Nullable Output<List<AutonomousDatabaseConnectionUrlArgs>> connectionUrls) {
            $.connectionUrls = connectionUrls;
            return this;
        }

        /**
         * @param connectionUrls The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).  Example: `{&#34;sqlDevWebUrl&#34;: &#34;https://&lt;hostname&gt;/ords...&#34;, &#34;apexUrl&#34;, &#34;https://&lt;hostname&gt;/ords...&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder connectionUrls(List<AutonomousDatabaseConnectionUrlArgs> connectionUrls) {
            return connectionUrls(Output.of(connectionUrls));
        }

        /**
         * @param connectionUrls The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).  Example: `{&#34;sqlDevWebUrl&#34;: &#34;https://&lt;hostname&gt;/ords...&#34;, &#34;apexUrl&#34;, &#34;https://&lt;hostname&gt;/ords...&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder connectionUrls(AutonomousDatabaseConnectionUrlArgs... connectionUrls) {
            return connectionUrls(List.of(connectionUrls));
        }

        /**
         * @param cpuCoreCount (Updatable) The number of CPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * **Note:** This parameter cannot be used with the `ocpuCount` parameter. This input is ignored for Always Free resources.
         * * The data type must be an *integer*.
         * * The minimum number of cores for all types of autonomous database is *1*
         * * The maximum number of cores is as follows:
         * * Autonomous Database Serverless instances: The maximum number of cores is *128*.
         * * Autonomous Databases on dedicated Exadata infrastructure: The maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(@Nullable Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        /**
         * @param cpuCoreCount (Updatable) The number of CPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * **Note:** This parameter cannot be used with the `ocpuCount` parameter. This input is ignored for Always Free resources.
         * * The data type must be an *integer*.
         * * The minimum number of cores for all types of autonomous database is *1*
         * * The maximum number of cores is as follows:
         * * Autonomous Database Serverless instances: The maximum number of cores is *128*.
         * * Autonomous Databases on dedicated Exadata infrastructure: The maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        /**
         * @param customerContacts (Updatable) Customer Contacts.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(@Nullable Output<List<AutonomousDatabaseCustomerContactArgs>> customerContacts) {
            $.customerContacts = customerContacts;
            return this;
        }

        /**
         * @param customerContacts (Updatable) Customer Contacts.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(List<AutonomousDatabaseCustomerContactArgs> customerContacts) {
            return customerContacts(Output.of(customerContacts));
        }

        /**
         * @param customerContacts (Updatable) Customer Contacts.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(AutonomousDatabaseCustomerContactArgs... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }

        /**
         * @param dataSafeStatus (Updatable) Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
         * 
         * @return builder
         * 
         */
        public Builder dataSafeStatus(@Nullable Output<String> dataSafeStatus) {
            $.dataSafeStatus = dataSafeStatus;
            return this;
        }

        /**
         * @param dataSafeStatus (Updatable) Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
         * 
         * @return builder
         * 
         */
        public Builder dataSafeStatus(String dataSafeStatus) {
            return dataSafeStatus(Output.of(dataSafeStatus));
        }

        /**
         * @param dataStorageSizeInGb (Updatable) The size, in gigabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. The maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * 
         * **Notes**
         * * This parameter is only supported for dedicated Exadata infrastructure.
         * * This parameter cannot be used with the `dataStorageSizeInTBs` parameter.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInGb(@Nullable Output<Integer> dataStorageSizeInGb) {
            $.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }

        /**
         * @param dataStorageSizeInGb (Updatable) The size, in gigabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. The maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * 
         * **Notes**
         * * This parameter is only supported for dedicated Exadata infrastructure.
         * * This parameter cannot be used with the `dataStorageSizeInTBs` parameter.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInGb(Integer dataStorageSizeInGb) {
            return dataStorageSizeInGb(Output.of(dataStorageSizeInGb));
        }

        /**
         * @param dataStorageSizeInTbs (Updatable) The size, in terabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. For Autonomous Databases on dedicated Exadata infrastructure, the maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.  A full Exadata service is allocated when the Autonomous Database size is set to the upper limit (384 TB).
         * 
         * **Note:** This parameter cannot be used with the `dataStorageSizeInGBs` parameter. This input is ignored for Always Free resources.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(@Nullable Output<Integer> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs (Updatable) The size, in terabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. For Autonomous Databases on dedicated Exadata infrastructure, the maximum storage value is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.  A full Exadata service is allocated when the Autonomous Database size is set to the upper limit (384 TB).
         * 
         * **Note:** This parameter cannot be used with the `dataStorageSizeInGBs` parameter. This input is ignored for Always Free resources.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Integer dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        /**
         * @param databaseEdition (Updatable) The Oracle Database Edition that applies to the Autonomous databases. It can be set to `ENTERPRISE_EDITION` or `STANDARD_EDITION`.
         * 
         * @return builder
         * 
         */
        public Builder databaseEdition(@Nullable Output<String> databaseEdition) {
            $.databaseEdition = databaseEdition;
            return this;
        }

        /**
         * @param databaseEdition (Updatable) The Oracle Database Edition that applies to the Autonomous databases. It can be set to `ENTERPRISE_EDITION` or `STANDARD_EDITION`.
         * 
         * @return builder
         * 
         */
        public Builder databaseEdition(String databaseEdition) {
            return databaseEdition(Output.of(databaseEdition));
        }

        /**
         * @param databaseManagementStatus Status of Database Management for this Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder databaseManagementStatus(@Nullable Output<String> databaseManagementStatus) {
            $.databaseManagementStatus = databaseManagementStatus;
            return this;
        }

        /**
         * @param databaseManagementStatus Status of Database Management for this Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder databaseManagementStatus(String databaseManagementStatus) {
            return databaseManagementStatus(Output.of(databaseManagementStatus));
        }

        /**
         * @param dataguardRegionType **Deprecated** (Optional) The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Database Serverless instances, Data Guard associations have designated primary (`PRIMARY_DG_REGION`) and standby (`REMOTE_STANDBY_DG_REGION`) regions, and these region types do not change when the database changes roles. The standby regions in Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Data Guard association, and cannot be performed when the database using the &#34;primary&#34; role is operating in a remote Data Guard standby region.
         * 
         * @return builder
         * 
         */
        public Builder dataguardRegionType(@Nullable Output<String> dataguardRegionType) {
            $.dataguardRegionType = dataguardRegionType;
            return this;
        }

        /**
         * @param dataguardRegionType **Deprecated** (Optional) The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Database Serverless instances, Data Guard associations have designated primary (`PRIMARY_DG_REGION`) and standby (`REMOTE_STANDBY_DG_REGION`) regions, and these region types do not change when the database changes roles. The standby regions in Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Data Guard association, and cannot be performed when the database using the &#34;primary&#34; role is operating in a remote Data Guard standby region.
         * 
         * @return builder
         * 
         */
        public Builder dataguardRegionType(String dataguardRegionType) {
            return dataguardRegionType(Output.of(dataguardRegionType));
        }

        /**
         * @param dbName The database name. The name must begin with an alphabetic character and can contain a maximum of 14 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy. It is required in all cases except when creating a cross-region Autonomous Data Guard standby instance or a cross-region disaster recovery standby instance.
         * 
         * @return builder
         * 
         */
        public Builder dbName(@Nullable Output<String> dbName) {
            $.dbName = dbName;
            return this;
        }

        /**
         * @param dbName The database name. The name must begin with an alphabetic character and can contain a maximum of 14 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy. It is required in all cases except when creating a cross-region Autonomous Data Guard standby instance or a cross-region disaster recovery standby instance.
         * 
         * @return builder
         * 
         */
        public Builder dbName(String dbName) {
            return dbName(Output.of(dbName));
        }

        /**
         * @param dbToolsDetails (Updatable) The list of database tools details.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder dbToolsDetails(@Nullable Output<List<AutonomousDatabaseDbToolsDetailArgs>> dbToolsDetails) {
            $.dbToolsDetails = dbToolsDetails;
            return this;
        }

        /**
         * @param dbToolsDetails (Updatable) The list of database tools details.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder dbToolsDetails(List<AutonomousDatabaseDbToolsDetailArgs> dbToolsDetails) {
            return dbToolsDetails(Output.of(dbToolsDetails));
        }

        /**
         * @param dbToolsDetails (Updatable) The list of database tools details.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder dbToolsDetails(AutonomousDatabaseDbToolsDetailArgs... dbToolsDetails) {
            return dbToolsDetails(List.of(dbToolsDetails));
        }

        /**
         * @param dbVersion (Updatable) A valid Oracle Database version for Autonomous Database.`db_workload` AJD and APEX are only supported for `db_version` `19c` and above.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(@Nullable Output<String> dbVersion) {
            $.dbVersion = dbVersion;
            return this;
        }

        /**
         * @param dbVersion (Updatable) A valid Oracle Database version for Autonomous Database.`db_workload` AJD and APEX are only supported for `db_version` `19c` and above.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(String dbVersion) {
            return dbVersion(Output.of(dbVersion));
        }

        /**
         * @param dbWorkload (Updatable) The Autonomous Database workload type. The following values are valid:
         * * OLTP - indicates an Autonomous Transaction Processing database
         * * DW - indicates an Autonomous Data Warehouse database
         * * AJD - indicates an Autonomous JSON Database
         * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. *Note: `db_workload` can only be updated from AJD to OLTP or from a free OLTP to AJD.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(@Nullable Output<String> dbWorkload) {
            $.dbWorkload = dbWorkload;
            return this;
        }

        /**
         * @param dbWorkload (Updatable) The Autonomous Database workload type. The following values are valid:
         * * OLTP - indicates an Autonomous Transaction Processing database
         * * DW - indicates an Autonomous Data Warehouse database
         * * AJD - indicates an Autonomous JSON Database
         * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. *Note: `db_workload` can only be updated from AJD to OLTP or from a free OLTP to AJD.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(String dbWorkload) {
            return dbWorkload(Output.of(dbWorkload));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param disasterRecoveryRegionType **Deprecated** The disaster recovery (DR) region type of the Autonomous Database. For Serverless Autonomous Databases, DR associations have designated primary (`PRIMARY`) and standby (`REMOTE`) regions. These region types do not change when the database changes roles. The standby region in DR associations can be the same region as the primary region, or they can be in a remote regions. Some database administration operations may be available only in the primary region of the DR association, and cannot be performed when the database using the primary role is operating in a remote region.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryRegionType(@Nullable Output<String> disasterRecoveryRegionType) {
            $.disasterRecoveryRegionType = disasterRecoveryRegionType;
            return this;
        }

        /**
         * @param disasterRecoveryRegionType **Deprecated** The disaster recovery (DR) region type of the Autonomous Database. For Serverless Autonomous Databases, DR associations have designated primary (`PRIMARY`) and standby (`REMOTE`) regions. These region types do not change when the database changes roles. The standby region in DR associations can be the same region as the primary region, or they can be in a remote regions. Some database administration operations may be available only in the primary region of the DR association, and cannot be performed when the database using the primary role is operating in a remote region.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryRegionType(String disasterRecoveryRegionType) {
            return disasterRecoveryRegionType(Output.of(disasterRecoveryRegionType));
        }

        /**
         * @param disasterRecoveryType Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryType(@Nullable Output<String> disasterRecoveryType) {
            $.disasterRecoveryType = disasterRecoveryType;
            return this;
        }

        /**
         * @param disasterRecoveryType Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryType(String disasterRecoveryType) {
            return disasterRecoveryType(Output.of(disasterRecoveryType));
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param encryptionKey (Updatable) Details of the Autonomous Database encryption key.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(@Nullable Output<AutonomousDatabaseEncryptionKeyArgs> encryptionKey) {
            $.encryptionKey = encryptionKey;
            return this;
        }

        /**
         * @param encryptionKey (Updatable) Details of the Autonomous Database encryption key.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(AutonomousDatabaseEncryptionKeyArgs encryptionKey) {
            return encryptionKey(Output.of(encryptionKey));
        }

        /**
         * @param encryptionKeyHistoryEntries Key History Entry.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyHistoryEntries(@Nullable Output<List<AutonomousDatabaseEncryptionKeyHistoryEntryArgs>> encryptionKeyHistoryEntries) {
            $.encryptionKeyHistoryEntries = encryptionKeyHistoryEntries;
            return this;
        }

        /**
         * @param encryptionKeyHistoryEntries Key History Entry.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyHistoryEntries(List<AutonomousDatabaseEncryptionKeyHistoryEntryArgs> encryptionKeyHistoryEntries) {
            return encryptionKeyHistoryEntries(Output.of(encryptionKeyHistoryEntries));
        }

        /**
         * @param encryptionKeyHistoryEntries Key History Entry.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyHistoryEntries(AutonomousDatabaseEncryptionKeyHistoryEntryArgs... encryptionKeyHistoryEntries) {
            return encryptionKeyHistoryEntries(List.of(encryptionKeyHistoryEntries));
        }

        /**
         * @param failedDataRecoveryInSeconds Indicates the number of seconds of data loss for a Data Guard failover.
         * 
         * @return builder
         * 
         */
        public Builder failedDataRecoveryInSeconds(@Nullable Output<Integer> failedDataRecoveryInSeconds) {
            $.failedDataRecoveryInSeconds = failedDataRecoveryInSeconds;
            return this;
        }

        /**
         * @param failedDataRecoveryInSeconds Indicates the number of seconds of data loss for a Data Guard failover.
         * 
         * @return builder
         * 
         */
        public Builder failedDataRecoveryInSeconds(Integer failedDataRecoveryInSeconds) {
            return failedDataRecoveryInSeconds(Output.of(failedDataRecoveryInSeconds));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param inMemoryAreaInGbs The area assigned to In-Memory tables in Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder inMemoryAreaInGbs(@Nullable Output<Integer> inMemoryAreaInGbs) {
            $.inMemoryAreaInGbs = inMemoryAreaInGbs;
            return this;
        }

        /**
         * @param inMemoryAreaInGbs The area assigned to In-Memory tables in Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder inMemoryAreaInGbs(Integer inMemoryAreaInGbs) {
            return inMemoryAreaInGbs(Output.of(inMemoryAreaInGbs));
        }

        /**
         * @param inMemoryPercentage (Updatable) The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform.
         * 
         * @return builder
         * 
         */
        public Builder inMemoryPercentage(@Nullable Output<Integer> inMemoryPercentage) {
            $.inMemoryPercentage = inMemoryPercentage;
            return this;
        }

        /**
         * @param inMemoryPercentage (Updatable) The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform.
         * 
         * @return builder
         * 
         */
        public Builder inMemoryPercentage(Integer inMemoryPercentage) {
            return inMemoryPercentage(Output.of(inMemoryPercentage));
        }

        /**
         * @param infrastructureType The infrastructure type this resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureType(@Nullable Output<String> infrastructureType) {
            $.infrastructureType = infrastructureType;
            return this;
        }

        /**
         * @param infrastructureType The infrastructure type this resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureType(String infrastructureType) {
            return infrastructureType(Output.of(infrastructureType));
        }

        /**
         * @param isAccessControlEnabled (Updatable) Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
         * 
         * This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform. For Autonomous Database Serverless instances, `whitelistedIps` is used.
         * 
         * @return builder
         * 
         */
        public Builder isAccessControlEnabled(@Nullable Output<Boolean> isAccessControlEnabled) {
            $.isAccessControlEnabled = isAccessControlEnabled;
            return this;
        }

        /**
         * @param isAccessControlEnabled (Updatable) Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
         * 
         * This property is applicable only to Autonomous Databases on the Exadata Cloud{@literal @}Customer platform. For Autonomous Database Serverless instances, `whitelistedIps` is used.
         * 
         * @return builder
         * 
         */
        public Builder isAccessControlEnabled(Boolean isAccessControlEnabled) {
            return isAccessControlEnabled(Output.of(isAccessControlEnabled));
        }

        /**
         * @param isAutoScalingEnabled (Updatable) Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `TRUE`.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingEnabled(@Nullable Output<Boolean> isAutoScalingEnabled) {
            $.isAutoScalingEnabled = isAutoScalingEnabled;
            return this;
        }

        /**
         * @param isAutoScalingEnabled (Updatable) Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `TRUE`.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            return isAutoScalingEnabled(Output.of(isAutoScalingEnabled));
        }

        /**
         * @param isAutoScalingForStorageEnabled (Updatable) Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `FALSE`.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingForStorageEnabled(@Nullable Output<Boolean> isAutoScalingForStorageEnabled) {
            $.isAutoScalingForStorageEnabled = isAutoScalingForStorageEnabled;
            return this;
        }

        /**
         * @param isAutoScalingForStorageEnabled (Updatable) Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `FALSE`.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingForStorageEnabled(Boolean isAutoScalingForStorageEnabled) {
            return isAutoScalingForStorageEnabled(Output.of(isAutoScalingForStorageEnabled));
        }

        /**
         * @param isBackupRetentionLocked (Updatable) True if the Autonomous Database is backup retention locked.
         * 
         * @return builder
         * 
         */
        public Builder isBackupRetentionLocked(@Nullable Output<Boolean> isBackupRetentionLocked) {
            $.isBackupRetentionLocked = isBackupRetentionLocked;
            return this;
        }

        /**
         * @param isBackupRetentionLocked (Updatable) True if the Autonomous Database is backup retention locked.
         * 
         * @return builder
         * 
         */
        public Builder isBackupRetentionLocked(Boolean isBackupRetentionLocked) {
            return isBackupRetentionLocked(Output.of(isBackupRetentionLocked));
        }

        /**
         * @param isDataGuardEnabled (Updatable) **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder isDataGuardEnabled(@Nullable Output<Boolean> isDataGuardEnabled) {
            $.isDataGuardEnabled = isDataGuardEnabled;
            return this;
        }

        /**
         * @param isDataGuardEnabled (Updatable) **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder isDataGuardEnabled(Boolean isDataGuardEnabled) {
            return isDataGuardEnabled(Output.of(isDataGuardEnabled));
        }

        /**
         * @param isDedicated True if the database is on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).
         * 
         * @return builder
         * 
         */
        public Builder isDedicated(@Nullable Output<Boolean> isDedicated) {
            $.isDedicated = isDedicated;
            return this;
        }

        /**
         * @param isDedicated True if the database is on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm).
         * 
         * @return builder
         * 
         */
        public Builder isDedicated(Boolean isDedicated) {
            return isDedicated(Output.of(isDedicated));
        }

        /**
         * @param isDevTier (Updatable) Autonomous Database for Developers are free Autonomous Databases that developers can use to build and test new applications.With Autonomous these database instancess instances, you can try new Autonomous Database features for free and apply them to ongoing or new development projects. Developer database comes with limited resources and is, therefore, not suitable for large-scale testing and production deployments. When you need more compute or storage resources, you can transition to a paid database licensing by cloning your developer database into a regular Autonomous Database. See [Autonomous Database documentation](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/eddjo/index.html) for more details.
         * 
         * @return builder
         * 
         */
        public Builder isDevTier(@Nullable Output<Boolean> isDevTier) {
            $.isDevTier = isDevTier;
            return this;
        }

        /**
         * @param isDevTier (Updatable) Autonomous Database for Developers are free Autonomous Databases that developers can use to build and test new applications.With Autonomous these database instancess instances, you can try new Autonomous Database features for free and apply them to ongoing or new development projects. Developer database comes with limited resources and is, therefore, not suitable for large-scale testing and production deployments. When you need more compute or storage resources, you can transition to a paid database licensing by cloning your developer database into a regular Autonomous Database. See [Autonomous Database documentation](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/eddjo/index.html) for more details.
         * 
         * @return builder
         * 
         */
        public Builder isDevTier(Boolean isDevTier) {
            return isDevTier(Output.of(isDevTier));
        }

        /**
         * @param isDisconnectPeer If true, this will disconnect the Autonomous Database from its peer and the Autonomous Database can work permanently as a standalone database. To disconnect a cross region standby, please also provide the OCID of the standby database in the `peerDbId` parameter.
         * 
         * @return builder
         * 
         */
        public Builder isDisconnectPeer(@Nullable Output<Boolean> isDisconnectPeer) {
            $.isDisconnectPeer = isDisconnectPeer;
            return this;
        }

        /**
         * @param isDisconnectPeer If true, this will disconnect the Autonomous Database from its peer and the Autonomous Database can work permanently as a standalone database. To disconnect a cross region standby, please also provide the OCID of the standby database in the `peerDbId` parameter.
         * 
         * @return builder
         * 
         */
        public Builder isDisconnectPeer(Boolean isDisconnectPeer) {
            return isDisconnectPeer(Output.of(isDisconnectPeer));
        }

        /**
         * @param isFreeTier (Updatable) Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled. When `db_workload` is `AJD` or `APEX` it cannot be `true`.
         * 
         * @return builder
         * 
         */
        public Builder isFreeTier(@Nullable Output<Boolean> isFreeTier) {
            $.isFreeTier = isFreeTier;
            return this;
        }

        /**
         * @param isFreeTier (Updatable) Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled. When `db_workload` is `AJD` or `APEX` it cannot be `true`.
         * 
         * @return builder
         * 
         */
        public Builder isFreeTier(Boolean isFreeTier) {
            return isFreeTier(Output.of(isFreeTier));
        }

        /**
         * @param isLocalDataGuardEnabled (Updatable) Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. It takes boolean values. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder isLocalDataGuardEnabled(@Nullable Output<Boolean> isLocalDataGuardEnabled) {
            $.isLocalDataGuardEnabled = isLocalDataGuardEnabled;
            return this;
        }

        /**
         * @param isLocalDataGuardEnabled (Updatable) Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. It takes boolean values. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder isLocalDataGuardEnabled(Boolean isLocalDataGuardEnabled) {
            return isLocalDataGuardEnabled(Output.of(isLocalDataGuardEnabled));
        }

        /**
         * @param isMtlsConnectionRequired (Updatable) Indicates whether the Autonomous Database requires mTLS connections.
         * 
         * @return builder
         * 
         */
        public Builder isMtlsConnectionRequired(@Nullable Output<Boolean> isMtlsConnectionRequired) {
            $.isMtlsConnectionRequired = isMtlsConnectionRequired;
            return this;
        }

        /**
         * @param isMtlsConnectionRequired (Updatable) Indicates whether the Autonomous Database requires mTLS connections.
         * 
         * @return builder
         * 
         */
        public Builder isMtlsConnectionRequired(Boolean isMtlsConnectionRequired) {
            return isMtlsConnectionRequired(Output.of(isMtlsConnectionRequired));
        }

        /**
         * @param isPreview Indicates if the Autonomous Database version is a preview version.
         * 
         * @return builder
         * 
         */
        public Builder isPreview(@Nullable Output<Boolean> isPreview) {
            $.isPreview = isPreview;
            return this;
        }

        /**
         * @param isPreview Indicates if the Autonomous Database version is a preview version.
         * 
         * @return builder
         * 
         */
        public Builder isPreview(Boolean isPreview) {
            return isPreview(Output.of(isPreview));
        }

        /**
         * @param isPreviewVersionWithServiceTermsAccepted If set to `TRUE`, indicates that an Autonomous Database preview version is being provisioned, and that the preview version&#39;s terms of service have been accepted. Note that preview version software is only available for databases on [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
         * 
         * @return builder
         * 
         */
        public Builder isPreviewVersionWithServiceTermsAccepted(@Nullable Output<Boolean> isPreviewVersionWithServiceTermsAccepted) {
            $.isPreviewVersionWithServiceTermsAccepted = isPreviewVersionWithServiceTermsAccepted;
            return this;
        }

        /**
         * @param isPreviewVersionWithServiceTermsAccepted If set to `TRUE`, indicates that an Autonomous Database preview version is being provisioned, and that the preview version&#39;s terms of service have been accepted. Note that preview version software is only available for databases on [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
         * 
         * @return builder
         * 
         */
        public Builder isPreviewVersionWithServiceTermsAccepted(Boolean isPreviewVersionWithServiceTermsAccepted) {
            return isPreviewVersionWithServiceTermsAccepted(Output.of(isPreviewVersionWithServiceTermsAccepted));
        }

        /**
         * @param isReconnectCloneEnabled Indicates if the refreshable clone can be reconnected to its source database.
         * 
         * @return builder
         * 
         */
        public Builder isReconnectCloneEnabled(@Nullable Output<Boolean> isReconnectCloneEnabled) {
            $.isReconnectCloneEnabled = isReconnectCloneEnabled;
            return this;
        }

        /**
         * @param isReconnectCloneEnabled Indicates if the refreshable clone can be reconnected to its source database.
         * 
         * @return builder
         * 
         */
        public Builder isReconnectCloneEnabled(Boolean isReconnectCloneEnabled) {
            return isReconnectCloneEnabled(Output.of(isReconnectCloneEnabled));
        }

        /**
         * @param isRefreshableClone (Updatable) True for creating a refreshable clone and False for detaching the clone from source Autonomous Database. Detaching is one time operation and clone becomes a regular Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder isRefreshableClone(@Nullable Output<Boolean> isRefreshableClone) {
            $.isRefreshableClone = isRefreshableClone;
            return this;
        }

        /**
         * @param isRefreshableClone (Updatable) True for creating a refreshable clone and False for detaching the clone from source Autonomous Database. Detaching is one time operation and clone becomes a regular Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder isRefreshableClone(Boolean isRefreshableClone) {
            return isRefreshableClone(Output.of(isRefreshableClone));
        }

        /**
         * @param isRemoteDataGuardEnabled Indicates whether the Autonomous Database has Cross Region Data Guard enabled. It takes boolean values. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder isRemoteDataGuardEnabled(@Nullable Output<Boolean> isRemoteDataGuardEnabled) {
            $.isRemoteDataGuardEnabled = isRemoteDataGuardEnabled;
            return this;
        }

        /**
         * @param isRemoteDataGuardEnabled Indicates whether the Autonomous Database has Cross Region Data Guard enabled. It takes boolean values. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder isRemoteDataGuardEnabled(Boolean isRemoteDataGuardEnabled) {
            return isRemoteDataGuardEnabled(Output.of(isRemoteDataGuardEnabled));
        }

        /**
         * @param isReplicateAutomaticBackups If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
         * 
         * @return builder
         * 
         */
        public Builder isReplicateAutomaticBackups(@Nullable Output<Boolean> isReplicateAutomaticBackups) {
            $.isReplicateAutomaticBackups = isReplicateAutomaticBackups;
            return this;
        }

        /**
         * @param isReplicateAutomaticBackups If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
         * 
         * @return builder
         * 
         */
        public Builder isReplicateAutomaticBackups(Boolean isReplicateAutomaticBackups) {
            return isReplicateAutomaticBackups(Output.of(isReplicateAutomaticBackups));
        }

        /**
         * @param isShrinkOnly (Updatable) An optional property when enabled triggers the Shrinking of Autonomous Database once. To trigger Shrinking of ADB once again, this flag needs to be disabled and re-enabled again. It should not be passed during create database operation. It is only applicable on Serverless databases i.e. where `is_dedicated` is false.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         * @deprecated
         * The &#39;is_shrink_only&#39; field has been deprecated. Please use &#39;shrink_adb_trigger&#39; instead.
         * 
         */
        @Deprecated /* The 'is_shrink_only' field has been deprecated. Please use 'shrink_adb_trigger' instead. */
        public Builder isShrinkOnly(@Nullable Output<Boolean> isShrinkOnly) {
            $.isShrinkOnly = isShrinkOnly;
            return this;
        }

        /**
         * @param isShrinkOnly (Updatable) An optional property when enabled triggers the Shrinking of Autonomous Database once. To trigger Shrinking of ADB once again, this flag needs to be disabled and re-enabled again. It should not be passed during create database operation. It is only applicable on Serverless databases i.e. where `is_dedicated` is false.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         * @deprecated
         * The &#39;is_shrink_only&#39; field has been deprecated. Please use &#39;shrink_adb_trigger&#39; instead.
         * 
         */
        @Deprecated /* The 'is_shrink_only' field has been deprecated. Please use 'shrink_adb_trigger' instead. */
        public Builder isShrinkOnly(Boolean isShrinkOnly) {
            return isShrinkOnly(Output.of(isShrinkOnly));
        }

        /**
         * @param keyHistoryEntries Key History Entry.
         * 
         * @return builder
         * 
         */
        public Builder keyHistoryEntries(@Nullable Output<List<AutonomousDatabaseKeyHistoryEntryArgs>> keyHistoryEntries) {
            $.keyHistoryEntries = keyHistoryEntries;
            return this;
        }

        /**
         * @param keyHistoryEntries Key History Entry.
         * 
         * @return builder
         * 
         */
        public Builder keyHistoryEntries(List<AutonomousDatabaseKeyHistoryEntryArgs> keyHistoryEntries) {
            return keyHistoryEntries(Output.of(keyHistoryEntries));
        }

        /**
         * @param keyHistoryEntries Key History Entry.
         * 
         * @return builder
         * 
         */
        public Builder keyHistoryEntries(AutonomousDatabaseKeyHistoryEntryArgs... keyHistoryEntries) {
            return keyHistoryEntries(List.of(keyHistoryEntries));
        }

        /**
         * @param keyStoreId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault. This is used in Autonomous Databases on Serverless instances and dedicated Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreId(@Nullable Output<String> keyStoreId) {
            $.keyStoreId = keyStoreId;
            return this;
        }

        /**
         * @param keyStoreId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault. This is used in Autonomous Databases on Serverless instances and dedicated Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreId(String keyStoreId) {
            return keyStoreId(Output.of(keyStoreId));
        }

        /**
         * @param keyStoreWalletName The wallet name for Oracle Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreWalletName(@Nullable Output<String> keyStoreWalletName) {
            $.keyStoreWalletName = keyStoreWalletName;
            return this;
        }

        /**
         * @param keyStoreWalletName The wallet name for Oracle Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreWalletName(String keyStoreWalletName) {
            return keyStoreWalletName(Output.of(keyStoreWalletName));
        }

        /**
         * @param keyVersionId The OCID of the key version that is used in rotate key operations.
         * 
         * @return builder
         * 
         */
        public Builder keyVersionId(@Nullable Output<String> keyVersionId) {
            $.keyVersionId = keyVersionId;
            return this;
        }

        /**
         * @param keyVersionId The OCID of the key version that is used in rotate key operations.
         * 
         * @return builder
         * 
         */
        public Builder keyVersionId(String keyVersionId) {
            return keyVersionId(Output.of(keyVersionId));
        }

        /**
         * @param kmsKeyId The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param kmsKeyLifecycleDetails KMS key lifecycle details.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyLifecycleDetails(@Nullable Output<String> kmsKeyLifecycleDetails) {
            $.kmsKeyLifecycleDetails = kmsKeyLifecycleDetails;
            return this;
        }

        /**
         * @param kmsKeyLifecycleDetails KMS key lifecycle details.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyLifecycleDetails(String kmsKeyLifecycleDetails) {
            return kmsKeyLifecycleDetails(Output.of(kmsKeyLifecycleDetails));
        }

        /**
         * @param kmsKeyVersionId The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyVersionId(@Nullable Output<String> kmsKeyVersionId) {
            $.kmsKeyVersionId = kmsKeyVersionId;
            return this;
        }

        /**
         * @param kmsKeyVersionId The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyVersionId(String kmsKeyVersionId) {
            return kmsKeyVersionId(Output.of(kmsKeyVersionId));
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`. It is a required field when `db_workload` is AJD and needs to be set to `LICENSE_INCLUDED` as AJD does not support default `license_model` value `BRING_YOUR_OWN_LICENSE`.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(@Nullable Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle PaaS and IaaS services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Database service. Note that when provisioning an Autonomous Database on [dedicated Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adbddoverview.htm), this attribute must be null because the attribute is already set at the Autonomous Exadata Infrastructure level. When using [shared Exadata infrastructure](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/adboverview.htm#AEI), if a value is not specified, the system will supply the value of `BRING_YOUR_OWN_LICENSE`. It is a required field when `db_workload` is AJD and needs to be set to `LICENSE_INCLUDED` as AJD does not support default `license_model` value `BRING_YOUR_OWN_LICENSE`.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param localAdgAutoFailoverMaxDataLossLimit Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
         * 
         * @return builder
         * 
         */
        public Builder localAdgAutoFailoverMaxDataLossLimit(@Nullable Output<Integer> localAdgAutoFailoverMaxDataLossLimit) {
            $.localAdgAutoFailoverMaxDataLossLimit = localAdgAutoFailoverMaxDataLossLimit;
            return this;
        }

        /**
         * @param localAdgAutoFailoverMaxDataLossLimit Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
         * 
         * @return builder
         * 
         */
        public Builder localAdgAutoFailoverMaxDataLossLimit(Integer localAdgAutoFailoverMaxDataLossLimit) {
            return localAdgAutoFailoverMaxDataLossLimit(Output.of(localAdgAutoFailoverMaxDataLossLimit));
        }

        /**
         * @param localDisasterRecoveryType Indicates the local disaster recovery (DR) type of the Serverless Autonomous Database. Autonomous Data Guard (`ADG`) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based (`BACKUP_BASED`) DR type provides lower cost DR with a slower RTO during failover or switchover.
         * 
         * @return builder
         * 
         */
        public Builder localDisasterRecoveryType(@Nullable Output<String> localDisasterRecoveryType) {
            $.localDisasterRecoveryType = localDisasterRecoveryType;
            return this;
        }

        /**
         * @param localDisasterRecoveryType Indicates the local disaster recovery (DR) type of the Serverless Autonomous Database. Autonomous Data Guard (`ADG`) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based (`BACKUP_BASED`) DR type provides lower cost DR with a slower RTO during failover or switchover.
         * 
         * @return builder
         * 
         */
        public Builder localDisasterRecoveryType(String localDisasterRecoveryType) {
            return localDisasterRecoveryType(Output.of(localDisasterRecoveryType));
        }

        /**
         * @param localStandbyDbs Autonomous Data Guard local (same region) standby database details.
         * 
         * @return builder
         * 
         */
        public Builder localStandbyDbs(@Nullable Output<List<AutonomousDatabaseLocalStandbyDbArgs>> localStandbyDbs) {
            $.localStandbyDbs = localStandbyDbs;
            return this;
        }

        /**
         * @param localStandbyDbs Autonomous Data Guard local (same region) standby database details.
         * 
         * @return builder
         * 
         */
        public Builder localStandbyDbs(List<AutonomousDatabaseLocalStandbyDbArgs> localStandbyDbs) {
            return localStandbyDbs(Output.of(localStandbyDbs));
        }

        /**
         * @param localStandbyDbs Autonomous Data Guard local (same region) standby database details.
         * 
         * @return builder
         * 
         */
        public Builder localStandbyDbs(AutonomousDatabaseLocalStandbyDbArgs... localStandbyDbs) {
            return localStandbyDbs(List.of(localStandbyDbs));
        }

        /**
         * @param longTermBackupSchedules Details for the long-term backup schedule.
         * 
         * @return builder
         * 
         */
        public Builder longTermBackupSchedules(@Nullable Output<List<AutonomousDatabaseLongTermBackupScheduleArgs>> longTermBackupSchedules) {
            $.longTermBackupSchedules = longTermBackupSchedules;
            return this;
        }

        /**
         * @param longTermBackupSchedules Details for the long-term backup schedule.
         * 
         * @return builder
         * 
         */
        public Builder longTermBackupSchedules(List<AutonomousDatabaseLongTermBackupScheduleArgs> longTermBackupSchedules) {
            return longTermBackupSchedules(Output.of(longTermBackupSchedules));
        }

        /**
         * @param longTermBackupSchedules Details for the long-term backup schedule.
         * 
         * @return builder
         * 
         */
        public Builder longTermBackupSchedules(AutonomousDatabaseLongTermBackupScheduleArgs... longTermBackupSchedules) {
            return longTermBackupSchedules(List.of(longTermBackupSchedules));
        }

        /**
         * @param maxCpuCoreCount (Updatable) **Deprecated.** The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCoreCount(@Nullable Output<Integer> maxCpuCoreCount) {
            $.maxCpuCoreCount = maxCpuCoreCount;
            return this;
        }

        /**
         * @param maxCpuCoreCount (Updatable) **Deprecated.** The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCoreCount(Integer maxCpuCoreCount) {
            return maxCpuCoreCount(Output.of(maxCpuCoreCount));
        }

        /**
         * @param memoryPerOracleComputeUnitInGbs The amount of memory (in GBs) enabled per OCPU or ECPU. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details. This parameter is not used for Autonomous database Serverless.
         * 
         * @return builder
         * 
         */
        public Builder memoryPerOracleComputeUnitInGbs(@Nullable Output<Integer> memoryPerOracleComputeUnitInGbs) {
            $.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            return this;
        }

        /**
         * @param memoryPerOracleComputeUnitInGbs The amount of memory (in GBs) enabled per OCPU or ECPU. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details. This parameter is not used for Autonomous database Serverless.
         * 
         * @return builder
         * 
         */
        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            return memoryPerOracleComputeUnitInGbs(Output.of(memoryPerOracleComputeUnitInGbs));
        }

        /**
         * @param ncharacterSet The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         * 
         * @return builder
         * 
         */
        public Builder ncharacterSet(@Nullable Output<String> ncharacterSet) {
            $.ncharacterSet = ncharacterSet;
            return this;
        }

        /**
         * @param ncharacterSet The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         * 
         * @return builder
         * 
         */
        public Builder ncharacterSet(String ncharacterSet) {
            return ncharacterSet(Output.of(ncharacterSet));
        }

        /**
         * @param netServicesArchitecture Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
         * 
         * @return builder
         * 
         */
        public Builder netServicesArchitecture(@Nullable Output<String> netServicesArchitecture) {
            $.netServicesArchitecture = netServicesArchitecture;
            return this;
        }

        /**
         * @param netServicesArchitecture Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
         * 
         * @return builder
         * 
         */
        public Builder netServicesArchitecture(String netServicesArchitecture) {
            return netServicesArchitecture(Output.of(netServicesArchitecture));
        }

        /**
         * @param nextLongTermBackupTimeStamp The date and time when the next long-term backup would be created.
         * 
         * @return builder
         * 
         */
        public Builder nextLongTermBackupTimeStamp(@Nullable Output<String> nextLongTermBackupTimeStamp) {
            $.nextLongTermBackupTimeStamp = nextLongTermBackupTimeStamp;
            return this;
        }

        /**
         * @param nextLongTermBackupTimeStamp The date and time when the next long-term backup would be created.
         * 
         * @return builder
         * 
         */
        public Builder nextLongTermBackupTimeStamp(String nextLongTermBackupTimeStamp) {
            return nextLongTermBackupTimeStamp(Output.of(nextLongTermBackupTimeStamp));
        }

        /**
         * @param nsgIds (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(@Nullable Output<List<String>> nsgIds) {
            $.nsgIds = nsgIds;
            return this;
        }

        /**
         * @param nsgIds (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(List<String> nsgIds) {
            return nsgIds(Output.of(nsgIds));
        }

        /**
         * @param nsgIds (Updatable) The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
         * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }

        /**
         * @param ocpuCount (Updatable) The number of OCPU cores to be made available to the database.
         * 
         * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
         *   The following points apply:
         * * For Autonomous Databases on dedicated Exadata infrastructure, to provision less than 1 core, enter a fractional value in an increment of 0.1. For example, you can provision 0.3 or 0.4 cores, but not 0.35 cores. (Note that fractional OCPU values are not supported for Autonomous Databasese on shared Exadata infrastructure.)
         * * To provision 1 or more cores, you must enter an integer between 1 and the maximum number of cores available for the infrastructure shape. For example, you can provision 2 cores or 3 cores, but not 2.5 cores. This applies to Autonomous Databases on both shared and dedicated Exadata infrastructure.
         * 
         * For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * 
         * **Note:** This parameter cannot be used with the `cpuCoreCount` parameter.
         * 
         * @return builder
         * 
         */
        public Builder ocpuCount(@Nullable Output<Double> ocpuCount) {
            $.ocpuCount = ocpuCount;
            return this;
        }

        /**
         * @param ocpuCount (Updatable) The number of OCPU cores to be made available to the database.
         * 
         * * Providing `computeModel` and `computeCount` is the preferred method for setting CPUs for both OCPU and ECPU.
         *   The following points apply:
         * * For Autonomous Databases on dedicated Exadata infrastructure, to provision less than 1 core, enter a fractional value in an increment of 0.1. For example, you can provision 0.3 or 0.4 cores, but not 0.35 cores. (Note that fractional OCPU values are not supported for Autonomous Databasese on shared Exadata infrastructure.)
         * * To provision 1 or more cores, you must enter an integer between 1 and the maximum number of cores available for the infrastructure shape. For example, you can provision 2 cores or 3 cores, but not 2.5 cores. This applies to Autonomous Databases on both shared and dedicated Exadata infrastructure.
         * 
         * For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
         * 
         * **Note:** This parameter cannot be used with the `cpuCoreCount` parameter.
         * 
         * @return builder
         * 
         */
        public Builder ocpuCount(Double ocpuCount) {
            return ocpuCount(Output.of(ocpuCount));
        }

        /**
         * @param openMode Indicates the Autonomous Database mode. The database can be opened in `READ_ONLY` or `READ_WRITE` mode.
         * 
         * @return builder
         * 
         */
        public Builder openMode(@Nullable Output<String> openMode) {
            $.openMode = openMode;
            return this;
        }

        /**
         * @param openMode Indicates the Autonomous Database mode. The database can be opened in `READ_ONLY` or `READ_WRITE` mode.
         * 
         * @return builder
         * 
         */
        public Builder openMode(String openMode) {
            return openMode(Output.of(openMode));
        }

        /**
         * @param operationsInsightsStatus (Updatable) Status of Operations Insights for this Autonomous Database. Values supported are `ENABLED` and `NOT_ENABLED`
         * 
         * @return builder
         * 
         */
        public Builder operationsInsightsStatus(@Nullable Output<String> operationsInsightsStatus) {
            $.operationsInsightsStatus = operationsInsightsStatus;
            return this;
        }

        /**
         * @param operationsInsightsStatus (Updatable) Status of Operations Insights for this Autonomous Database. Values supported are `ENABLED` and `NOT_ENABLED`
         * 
         * @return builder
         * 
         */
        public Builder operationsInsightsStatus(String operationsInsightsStatus) {
            return operationsInsightsStatus(Output.of(operationsInsightsStatus));
        }

        /**
         * @param peerDbId The database [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Disaster Recovery peer (source Primary) database, which is located in a different (remote) region from the current peer database.
         * 
         * @return builder
         * 
         */
        public Builder peerDbId(@Nullable Output<String> peerDbId) {
            $.peerDbId = peerDbId;
            return this;
        }

        /**
         * @param peerDbId The database [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Disaster Recovery peer (source Primary) database, which is located in a different (remote) region from the current peer database.
         * 
         * @return builder
         * 
         */
        public Builder peerDbId(String peerDbId) {
            return peerDbId(Output.of(peerDbId));
        }

        /**
         * @param peerDbIds The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
         * 
         * @return builder
         * 
         */
        public Builder peerDbIds(@Nullable Output<List<String>> peerDbIds) {
            $.peerDbIds = peerDbIds;
            return this;
        }

        /**
         * @param peerDbIds The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
         * 
         * @return builder
         * 
         */
        public Builder peerDbIds(List<String> peerDbIds) {
            return peerDbIds(Output.of(peerDbIds));
        }

        /**
         * @param peerDbIds The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
         * 
         * @return builder
         * 
         */
        public Builder peerDbIds(String... peerDbIds) {
            return peerDbIds(List.of(peerDbIds));
        }

        /**
         * @param permissionLevel The Autonomous Database permission level. Restricted mode allows access only by admin users.
         * 
         * @return builder
         * 
         */
        public Builder permissionLevel(@Nullable Output<String> permissionLevel) {
            $.permissionLevel = permissionLevel;
            return this;
        }

        /**
         * @param permissionLevel The Autonomous Database permission level. Restricted mode allows access only by admin users.
         * 
         * @return builder
         * 
         */
        public Builder permissionLevel(String permissionLevel) {
            return permissionLevel(Output.of(permissionLevel));
        }

        /**
         * @param privateEndpoint The private endpoint for the resource. This parameter is not used in Autonomous Databases using Serverless infrastructure and Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoint(@Nullable Output<String> privateEndpoint) {
            $.privateEndpoint = privateEndpoint;
            return this;
        }

        /**
         * @param privateEndpoint The private endpoint for the resource. This parameter is not used in Autonomous Databases using Serverless infrastructure and Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoint(String privateEndpoint) {
            return privateEndpoint(Output.of(privateEndpoint));
        }

        /**
         * @param privateEndpointIp The private endpoint Ip address for the resource.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointIp(@Nullable Output<String> privateEndpointIp) {
            $.privateEndpointIp = privateEndpointIp;
            return this;
        }

        /**
         * @param privateEndpointIp The private endpoint Ip address for the resource.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointIp(String privateEndpointIp) {
            return privateEndpointIp(Output.of(privateEndpointIp));
        }

        /**
         * @param privateEndpointLabel (Updatable) (Optional) (Updatable) The resource&#39;s private endpoint label.
         * * Setting the endpoint label to a non-empty string creates a private endpoint database.
         * * Resetting the endpoint label to an empty string, after the creation of the private endpoint database, changes the private endpoint database to a public endpoint database.
         * * Setting the endpoint label to a non-empty string value, updates to a new private endpoint database, when the database is disabled and re-enabled.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointLabel(@Nullable Output<String> privateEndpointLabel) {
            $.privateEndpointLabel = privateEndpointLabel;
            return this;
        }

        /**
         * @param privateEndpointLabel (Updatable) (Optional) (Updatable) The resource&#39;s private endpoint label.
         * * Setting the endpoint label to a non-empty string creates a private endpoint database.
         * * Resetting the endpoint label to an empty string, after the creation of the private endpoint database, changes the private endpoint database to a public endpoint database.
         * * Setting the endpoint label to a non-empty string value, updates to a new private endpoint database, when the database is disabled and re-enabled.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointLabel(String privateEndpointLabel) {
            return privateEndpointLabel(Output.of(privateEndpointLabel));
        }

        /**
         * @param provisionableCpuses An array of CPU values that an Autonomous Database can be scaled to.
         * 
         * @return builder
         * 
         */
        public Builder provisionableCpuses(@Nullable Output<List<Double>> provisionableCpuses) {
            $.provisionableCpuses = provisionableCpuses;
            return this;
        }

        /**
         * @param provisionableCpuses An array of CPU values that an Autonomous Database can be scaled to.
         * 
         * @return builder
         * 
         */
        public Builder provisionableCpuses(List<Double> provisionableCpuses) {
            return provisionableCpuses(Output.of(provisionableCpuses));
        }

        /**
         * @param provisionableCpuses An array of CPU values that an Autonomous Database can be scaled to.
         * 
         * @return builder
         * 
         */
        public Builder provisionableCpuses(Double... provisionableCpuses) {
            return provisionableCpuses(List.of(provisionableCpuses));
        }

        /**
         * @param publicConnectionUrls The Public URLs of Private Endpoint database for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
         * 
         * @return builder
         * 
         */
        public Builder publicConnectionUrls(@Nullable Output<List<AutonomousDatabasePublicConnectionUrlArgs>> publicConnectionUrls) {
            $.publicConnectionUrls = publicConnectionUrls;
            return this;
        }

        /**
         * @param publicConnectionUrls The Public URLs of Private Endpoint database for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
         * 
         * @return builder
         * 
         */
        public Builder publicConnectionUrls(List<AutonomousDatabasePublicConnectionUrlArgs> publicConnectionUrls) {
            return publicConnectionUrls(Output.of(publicConnectionUrls));
        }

        /**
         * @param publicConnectionUrls The Public URLs of Private Endpoint database for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
         * 
         * @return builder
         * 
         */
        public Builder publicConnectionUrls(AutonomousDatabasePublicConnectionUrlArgs... publicConnectionUrls) {
            return publicConnectionUrls(List.of(publicConnectionUrls));
        }

        /**
         * @param publicEndpoint The public endpoint for the private endpoint enabled resource.
         * 
         * @return builder
         * 
         */
        public Builder publicEndpoint(@Nullable Output<String> publicEndpoint) {
            $.publicEndpoint = publicEndpoint;
            return this;
        }

        /**
         * @param publicEndpoint The public endpoint for the private endpoint enabled resource.
         * 
         * @return builder
         * 
         */
        public Builder publicEndpoint(String publicEndpoint) {
            return publicEndpoint(Output.of(publicEndpoint));
        }

        /**
         * @param refreshableMode (Updatable) The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder refreshableMode(@Nullable Output<String> refreshableMode) {
            $.refreshableMode = refreshableMode;
            return this;
        }

        /**
         * @param refreshableMode (Updatable) The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder refreshableMode(String refreshableMode) {
            return refreshableMode(Output.of(refreshableMode));
        }

        /**
         * @param refreshableStatus The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder refreshableStatus(@Nullable Output<String> refreshableStatus) {
            $.refreshableStatus = refreshableStatus;
            return this;
        }

        /**
         * @param refreshableStatus The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder refreshableStatus(String refreshableStatus) {
            return refreshableStatus(Output.of(refreshableStatus));
        }

        /**
         * @param remoteDisasterRecoveryConfigurations Configurations of a Disaster Recovery.
         * 
         * @return builder
         * 
         */
        public Builder remoteDisasterRecoveryConfigurations(@Nullable Output<List<AutonomousDatabaseRemoteDisasterRecoveryConfigurationArgs>> remoteDisasterRecoveryConfigurations) {
            $.remoteDisasterRecoveryConfigurations = remoteDisasterRecoveryConfigurations;
            return this;
        }

        /**
         * @param remoteDisasterRecoveryConfigurations Configurations of a Disaster Recovery.
         * 
         * @return builder
         * 
         */
        public Builder remoteDisasterRecoveryConfigurations(List<AutonomousDatabaseRemoteDisasterRecoveryConfigurationArgs> remoteDisasterRecoveryConfigurations) {
            return remoteDisasterRecoveryConfigurations(Output.of(remoteDisasterRecoveryConfigurations));
        }

        /**
         * @param remoteDisasterRecoveryConfigurations Configurations of a Disaster Recovery.
         * 
         * @return builder
         * 
         */
        public Builder remoteDisasterRecoveryConfigurations(AutonomousDatabaseRemoteDisasterRecoveryConfigurationArgs... remoteDisasterRecoveryConfigurations) {
            return remoteDisasterRecoveryConfigurations(List.of(remoteDisasterRecoveryConfigurations));
        }

        /**
         * @param remoteDisasterRecoveryType Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
         * 
         * @return builder
         * 
         */
        public Builder remoteDisasterRecoveryType(@Nullable Output<String> remoteDisasterRecoveryType) {
            $.remoteDisasterRecoveryType = remoteDisasterRecoveryType;
            return this;
        }

        /**
         * @param remoteDisasterRecoveryType Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
         * 
         * @return builder
         * 
         */
        public Builder remoteDisasterRecoveryType(String remoteDisasterRecoveryType) {
            return remoteDisasterRecoveryType(Output.of(remoteDisasterRecoveryType));
        }

        /**
         * @param resourcePoolLeaderId (Updatable) The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder resourcePoolLeaderId(@Nullable Output<String> resourcePoolLeaderId) {
            $.resourcePoolLeaderId = resourcePoolLeaderId;
            return this;
        }

        /**
         * @param resourcePoolLeaderId (Updatable) The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder resourcePoolLeaderId(String resourcePoolLeaderId) {
            return resourcePoolLeaderId(Output.of(resourcePoolLeaderId));
        }

        /**
         * @param resourcePoolSummary (Updatable) The configuration details for resource pool
         * 
         * @return builder
         * 
         */
        public Builder resourcePoolSummary(@Nullable Output<AutonomousDatabaseResourcePoolSummaryArgs> resourcePoolSummary) {
            $.resourcePoolSummary = resourcePoolSummary;
            return this;
        }

        /**
         * @param resourcePoolSummary (Updatable) The configuration details for resource pool
         * 
         * @return builder
         * 
         */
        public Builder resourcePoolSummary(AutonomousDatabaseResourcePoolSummaryArgs resourcePoolSummary) {
            return resourcePoolSummary(Output.of(resourcePoolSummary));
        }

        /**
         * @param role The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param rotateKeyTrigger (Updatable) An optional property when flipped triggers rotation of KMS key. It is only applicable on dedicated databases i.e. where `is_dedicated` is true.
         * 
         * @return builder
         * 
         */
        public Builder rotateKeyTrigger(@Nullable Output<Boolean> rotateKeyTrigger) {
            $.rotateKeyTrigger = rotateKeyTrigger;
            return this;
        }

        /**
         * @param rotateKeyTrigger (Updatable) An optional property when flipped triggers rotation of KMS key. It is only applicable on dedicated databases i.e. where `is_dedicated` is true.
         * 
         * @return builder
         * 
         */
        public Builder rotateKeyTrigger(Boolean rotateKeyTrigger) {
            return rotateKeyTrigger(Output.of(rotateKeyTrigger));
        }

        /**
         * @param scheduledOperations (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder scheduledOperations(@Nullable Output<List<AutonomousDatabaseScheduledOperationArgs>> scheduledOperations) {
            $.scheduledOperations = scheduledOperations;
            return this;
        }

        /**
         * @param scheduledOperations (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder scheduledOperations(List<AutonomousDatabaseScheduledOperationArgs> scheduledOperations) {
            return scheduledOperations(Output.of(scheduledOperations));
        }

        /**
         * @param scheduledOperations (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder scheduledOperations(AutonomousDatabaseScheduledOperationArgs... scheduledOperations) {
            return scheduledOperations(List.of(scheduledOperations));
        }

        /**
         * @param secretId (Updatable) The Oracle Cloud Infrastructure vault secret [/Content/General/Concepts/identifiers.htm]OCID.
         * 
         * This cannot be used in conjunction with adminPassword.
         * 
         * @return builder
         * 
         */
        public Builder secretId(@Nullable Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        /**
         * @param secretId (Updatable) The Oracle Cloud Infrastructure vault secret [/Content/General/Concepts/identifiers.htm]OCID.
         * 
         * This cannot be used in conjunction with adminPassword.
         * 
         * @return builder
         * 
         */
        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        /**
         * @param secretVersionNumber (Updatable) The version of the vault secret. If no version is specified, the latest version will be used.
         * 
         * @return builder
         * 
         */
        public Builder secretVersionNumber(@Nullable Output<Integer> secretVersionNumber) {
            $.secretVersionNumber = secretVersionNumber;
            return this;
        }

        /**
         * @param secretVersionNumber (Updatable) The version of the vault secret. If no version is specified, the latest version will be used.
         * 
         * @return builder
         * 
         */
        public Builder secretVersionNumber(Integer secretVersionNumber) {
            return secretVersionNumber(Output.of(secretVersionNumber));
        }

        /**
         * @param securityAttributes (Updatable) Security Attributes for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Oracle-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;: &#34;42&#34;, &#34;mode&#34;: &#34;audit&#34;}}}`
         * 
         * @return builder
         * 
         */
        public Builder securityAttributes(@Nullable Output<Map<String,String>> securityAttributes) {
            $.securityAttributes = securityAttributes;
            return this;
        }

        /**
         * @param securityAttributes (Updatable) Security Attributes for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Oracle-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;: &#34;42&#34;, &#34;mode&#34;: &#34;audit&#34;}}}`
         * 
         * @return builder
         * 
         */
        public Builder securityAttributes(Map<String,String> securityAttributes) {
            return securityAttributes(Output.of(securityAttributes));
        }

        /**
         * @param serviceConsoleUrl The URL of the Service Console for the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder serviceConsoleUrl(@Nullable Output<String> serviceConsoleUrl) {
            $.serviceConsoleUrl = serviceConsoleUrl;
            return this;
        }

        /**
         * @param serviceConsoleUrl The URL of the Service Console for the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder serviceConsoleUrl(String serviceConsoleUrl) {
            return serviceConsoleUrl(Output.of(serviceConsoleUrl));
        }

        public Builder shrinkAdbTrigger(@Nullable Output<Integer> shrinkAdbTrigger) {
            $.shrinkAdbTrigger = shrinkAdbTrigger;
            return this;
        }

        public Builder shrinkAdbTrigger(Integer shrinkAdbTrigger) {
            return shrinkAdbTrigger(Output.of(shrinkAdbTrigger));
        }

        /**
         * @param source The source of the database:
         * * Use `NONE` for creating a new Autonomous Database.
         * * Use `DATABASE` for creating a new Autonomous Database by cloning an existing running Autonomous Database from the latest timestamp, also provide the source database OCID in the `source_id` parameter.
         * * Use `CROSS_REGION_DATAGUARD` to create a standby Data Guard database in another region, also provide the remote primary database OCID in the `source_id` parameter.
         * * Use `CLONE_TO_REFRESHABLE` for creating a refreshable clone.
         * 
         * For [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) instances, the following cloning options are available:
         * * Use `BACKUP_FROM_ID` for creating a new Autonomous Database by cloning from a specified backup. Also provide the backup OCID in the `autonomous_database_backup_id` parameter.
         * * Use `BACKUP_FROM_TIMESTAMP` for creating a point-in-time Autonomous Database clone using backups. Also provide the backup timestamp in the `timestamp` parameter. For more information, see [Cloning and Moving an Autonomous Database](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/clone-autonomous-database.html#GUID-D771796F-5081-4CFB-A7FF-0F893EABD7BC).
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The source of the database:
         * * Use `NONE` for creating a new Autonomous Database.
         * * Use `DATABASE` for creating a new Autonomous Database by cloning an existing running Autonomous Database from the latest timestamp, also provide the source database OCID in the `source_id` parameter.
         * * Use `CROSS_REGION_DATAGUARD` to create a standby Data Guard database in another region, also provide the remote primary database OCID in the `source_id` parameter.
         * * Use `CLONE_TO_REFRESHABLE` for creating a refreshable clone.
         * 
         * For [Autonomous Database Serverless](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) instances, the following cloning options are available:
         * * Use `BACKUP_FROM_ID` for creating a new Autonomous Database by cloning from a specified backup. Also provide the backup OCID in the `autonomous_database_backup_id` parameter.
         * * Use `BACKUP_FROM_TIMESTAMP` for creating a point-in-time Autonomous Database clone using backups. Also provide the backup timestamp in the `timestamp` parameter. For more information, see [Cloning and Moving an Autonomous Database](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/clone-autonomous-database.html#GUID-D771796F-5081-4CFB-A7FF-0F893EABD7BC).
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param sourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that will be used to create a new standby database for the Data Guard association.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(@Nullable Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        /**
         * @param sourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that will be used to create a new standby database for the Data Guard association.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        /**
         * @param standbyDbs **Deprecated** Autonomous Data Guard standby database details.
         * 
         * @return builder
         * 
         */
        public Builder standbyDbs(@Nullable Output<List<AutonomousDatabaseStandbyDbArgs>> standbyDbs) {
            $.standbyDbs = standbyDbs;
            return this;
        }

        /**
         * @param standbyDbs **Deprecated** Autonomous Data Guard standby database details.
         * 
         * @return builder
         * 
         */
        public Builder standbyDbs(List<AutonomousDatabaseStandbyDbArgs> standbyDbs) {
            return standbyDbs(Output.of(standbyDbs));
        }

        /**
         * @param standbyDbs **Deprecated** Autonomous Data Guard standby database details.
         * 
         * @return builder
         * 
         */
        public Builder standbyDbs(AutonomousDatabaseStandbyDbArgs... standbyDbs) {
            return standbyDbs(List.of(standbyDbs));
        }

        /**
         * @param standbyWhitelistedIps (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses this primary&#39;s IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
         * 
         * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
         * 
         * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
         * 
         * If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses `whitelisted_ips` primary&#39;s IP access control list (ACL) as `standbywhitelistedips` for the disaster recovery peer.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder standbyWhitelistedIps(@Nullable Output<List<String>> standbyWhitelistedIps) {
            $.standbyWhitelistedIps = standbyWhitelistedIps;
            return this;
        }

        /**
         * @param standbyWhitelistedIps (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses this primary&#39;s IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
         * 
         * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
         * 
         * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
         * 
         * If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses `whitelisted_ips` primary&#39;s IP access control list (ACL) as `standbywhitelistedips` for the disaster recovery peer.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder standbyWhitelistedIps(List<String> standbyWhitelistedIps) {
            return standbyWhitelistedIps(Output.of(standbyWhitelistedIps));
        }

        /**
         * @param standbyWhitelistedIps (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses this primary&#39;s IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
         * 
         * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
         * 
         * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
         * 
         * If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses `whitelisted_ips` primary&#39;s IP access control list (ACL) as `standbywhitelistedips` for the disaster recovery peer.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
         * 
         * @return builder
         * 
         */
        public Builder standbyWhitelistedIps(String... standbyWhitelistedIps) {
            return standbyWhitelistedIps(List.of(standbyWhitelistedIps));
        }

        /**
         * @param state The current state of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param subnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. This the only parameter to configure private endpoint, VCN details are obtained from the `subnet_id`.
         * 
         * **Subnet Restrictions:**
         * * For bare metal DB systems and for single node virtual machine DB systems, do not use a subnet that overlaps with 192.168.16.16/28.
         * * For Exadata and virtual machine 2-node RAC systems, do not use a subnet that overlaps with 192.168.128.0/20.
         * * For Autonomous Database, setting this will disable public secure access to the database.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. This the only parameter to configure private endpoint, VCN details are obtained from the `subnet_id`.
         * 
         * **Subnet Restrictions:**
         * * For bare metal DB systems and for single node virtual machine DB systems, do not use a subnet that overlaps with 192.168.16.16/28.
         * * For Exadata and virtual machine 2-node RAC systems, do not use a subnet that overlaps with 192.168.128.0/20.
         * * For Autonomous Database, setting this will disable public secure access to the database.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param subscriptionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
         * These subnets are used by the Oracle Clusterware private interconnect on the database instance. Specifying an overlapping subnet will cause the private interconnect to malfunction. This restriction applies to both the client subnet and the backup subnet.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
         * These subnets are used by the Oracle Clusterware private interconnect on the database instance. Specifying an overlapping subnet will cause the private interconnect to malfunction. This restriction applies to both the client subnet and the backup subnet.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param supportedRegionsToCloneTos The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
         * 
         * @return builder
         * 
         */
        public Builder supportedRegionsToCloneTos(@Nullable Output<List<String>> supportedRegionsToCloneTos) {
            $.supportedRegionsToCloneTos = supportedRegionsToCloneTos;
            return this;
        }

        /**
         * @param supportedRegionsToCloneTos The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
         * 
         * @return builder
         * 
         */
        public Builder supportedRegionsToCloneTos(List<String> supportedRegionsToCloneTos) {
            return supportedRegionsToCloneTos(Output.of(supportedRegionsToCloneTos));
        }

        /**
         * @param supportedRegionsToCloneTos The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
         * 
         * @return builder
         * 
         */
        public Builder supportedRegionsToCloneTos(String... supportedRegionsToCloneTos) {
            return supportedRegionsToCloneTos(List.of(supportedRegionsToCloneTos));
        }

        /**
         * @param switchoverTo It is applicable only when `is_local_data_guard_enabled` is true. Could be set to `PRIMARY` or `STANDBY`. Default value is `PRIMARY`.
         * 
         * @return builder
         * 
         */
        public Builder switchoverTo(@Nullable Output<String> switchoverTo) {
            $.switchoverTo = switchoverTo;
            return this;
        }

        /**
         * @param switchoverTo It is applicable only when `is_local_data_guard_enabled` is true. Could be set to `PRIMARY` or `STANDBY`. Default value is `PRIMARY`.
         * 
         * @return builder
         * 
         */
        public Builder switchoverTo(String switchoverTo) {
            return switchoverTo(Output.of(switchoverTo));
        }

        /**
         * @param switchoverToRemotePeerId (Updatable) It is applicable only when `dataguard_region_type` and `role` are set, and `is_dedicated` is false. For Autonomous Database Serverless instances, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. It takes the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the remote peer to switchover to and the API is called from the remote region.
         * 
         * @return builder
         * 
         */
        public Builder switchoverToRemotePeerId(@Nullable Output<String> switchoverToRemotePeerId) {
            $.switchoverToRemotePeerId = switchoverToRemotePeerId;
            return this;
        }

        /**
         * @param switchoverToRemotePeerId (Updatable) It is applicable only when `dataguard_region_type` and `role` are set, and `is_dedicated` is false. For Autonomous Database Serverless instances, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. It takes the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the remote peer to switchover to and the API is called from the remote region.
         * 
         * @return builder
         * 
         */
        public Builder switchoverToRemotePeerId(String switchoverToRemotePeerId) {
            return switchoverToRemotePeerId(Output.of(switchoverToRemotePeerId));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time the Autonomous Database was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the Autonomous Database was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeDataGuardRoleChanged The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         * 
         * @return builder
         * 
         */
        public Builder timeDataGuardRoleChanged(@Nullable Output<String> timeDataGuardRoleChanged) {
            $.timeDataGuardRoleChanged = timeDataGuardRoleChanged;
            return this;
        }

        /**
         * @param timeDataGuardRoleChanged The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
         * 
         * @return builder
         * 
         */
        public Builder timeDataGuardRoleChanged(String timeDataGuardRoleChanged) {
            return timeDataGuardRoleChanged(Output.of(timeDataGuardRoleChanged));
        }

        /**
         * @param timeDeletionOfFreeAutonomousDatabase The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
         * 
         * @return builder
         * 
         */
        public Builder timeDeletionOfFreeAutonomousDatabase(@Nullable Output<String> timeDeletionOfFreeAutonomousDatabase) {
            $.timeDeletionOfFreeAutonomousDatabase = timeDeletionOfFreeAutonomousDatabase;
            return this;
        }

        /**
         * @param timeDeletionOfFreeAutonomousDatabase The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
         * 
         * @return builder
         * 
         */
        public Builder timeDeletionOfFreeAutonomousDatabase(String timeDeletionOfFreeAutonomousDatabase) {
            return timeDeletionOfFreeAutonomousDatabase(Output.of(timeDeletionOfFreeAutonomousDatabase));
        }

        /**
         * @param timeDisasterRecoveryRoleChanged The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder timeDisasterRecoveryRoleChanged(@Nullable Output<String> timeDisasterRecoveryRoleChanged) {
            $.timeDisasterRecoveryRoleChanged = timeDisasterRecoveryRoleChanged;
            return this;
        }

        /**
         * @param timeDisasterRecoveryRoleChanged The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder timeDisasterRecoveryRoleChanged(String timeDisasterRecoveryRoleChanged) {
            return timeDisasterRecoveryRoleChanged(Output.of(timeDisasterRecoveryRoleChanged));
        }

        /**
         * @param timeLocalDataGuardEnabled The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
         * 
         * @return builder
         * 
         */
        public Builder timeLocalDataGuardEnabled(@Nullable Output<String> timeLocalDataGuardEnabled) {
            $.timeLocalDataGuardEnabled = timeLocalDataGuardEnabled;
            return this;
        }

        /**
         * @param timeLocalDataGuardEnabled The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
         * 
         * @return builder
         * 
         */
        public Builder timeLocalDataGuardEnabled(String timeLocalDataGuardEnabled) {
            return timeLocalDataGuardEnabled(Output.of(timeLocalDataGuardEnabled));
        }

        /**
         * @param timeMaintenanceBegin The date and time when maintenance will begin.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceBegin(@Nullable Output<String> timeMaintenanceBegin) {
            $.timeMaintenanceBegin = timeMaintenanceBegin;
            return this;
        }

        /**
         * @param timeMaintenanceBegin The date and time when maintenance will begin.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceBegin(String timeMaintenanceBegin) {
            return timeMaintenanceBegin(Output.of(timeMaintenanceBegin));
        }

        /**
         * @param timeMaintenanceEnd The date and time when maintenance will end.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceEnd(@Nullable Output<String> timeMaintenanceEnd) {
            $.timeMaintenanceEnd = timeMaintenanceEnd;
            return this;
        }

        /**
         * @param timeMaintenanceEnd The date and time when maintenance will end.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceEnd(String timeMaintenanceEnd) {
            return timeMaintenanceEnd(Output.of(timeMaintenanceEnd));
        }

        /**
         * @param timeOfAutoRefreshStart The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the `autoRefreshFrequencyInSeconds` parameter.
         * 
         * @return builder
         * 
         */
        public Builder timeOfAutoRefreshStart(@Nullable Output<String> timeOfAutoRefreshStart) {
            $.timeOfAutoRefreshStart = timeOfAutoRefreshStart;
            return this;
        }

        /**
         * @param timeOfAutoRefreshStart The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the `autoRefreshFrequencyInSeconds` parameter.
         * 
         * @return builder
         * 
         */
        public Builder timeOfAutoRefreshStart(String timeOfAutoRefreshStart) {
            return timeOfAutoRefreshStart(Output.of(timeOfAutoRefreshStart));
        }

        public Builder timeOfJoiningResourcePool(@Nullable Output<String> timeOfJoiningResourcePool) {
            $.timeOfJoiningResourcePool = timeOfJoiningResourcePool;
            return this;
        }

        public Builder timeOfJoiningResourcePool(String timeOfJoiningResourcePool) {
            return timeOfJoiningResourcePool(Output.of(timeOfJoiningResourcePool));
        }

        /**
         * @param timeOfLastFailover The timestamp of the last failover operation.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastFailover(@Nullable Output<String> timeOfLastFailover) {
            $.timeOfLastFailover = timeOfLastFailover;
            return this;
        }

        /**
         * @param timeOfLastFailover The timestamp of the last failover operation.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastFailover(String timeOfLastFailover) {
            return timeOfLastFailover(Output.of(timeOfLastFailover));
        }

        /**
         * @param timeOfLastRefresh The date and time when last refresh happened.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastRefresh(@Nullable Output<String> timeOfLastRefresh) {
            $.timeOfLastRefresh = timeOfLastRefresh;
            return this;
        }

        /**
         * @param timeOfLastRefresh The date and time when last refresh happened.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastRefresh(String timeOfLastRefresh) {
            return timeOfLastRefresh(Output.of(timeOfLastRefresh));
        }

        /**
         * @param timeOfLastRefreshPoint The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastRefreshPoint(@Nullable Output<String> timeOfLastRefreshPoint) {
            $.timeOfLastRefreshPoint = timeOfLastRefreshPoint;
            return this;
        }

        /**
         * @param timeOfLastRefreshPoint The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastRefreshPoint(String timeOfLastRefreshPoint) {
            return timeOfLastRefreshPoint(Output.of(timeOfLastRefreshPoint));
        }

        /**
         * @param timeOfLastSwitchover The timestamp of the last switchover operation for the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastSwitchover(@Nullable Output<String> timeOfLastSwitchover) {
            $.timeOfLastSwitchover = timeOfLastSwitchover;
            return this;
        }

        /**
         * @param timeOfLastSwitchover The timestamp of the last switchover operation for the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastSwitchover(String timeOfLastSwitchover) {
            return timeOfLastSwitchover(Output.of(timeOfLastSwitchover));
        }

        /**
         * @param timeOfNextRefresh The date and time of next refresh.
         * 
         * @return builder
         * 
         */
        public Builder timeOfNextRefresh(@Nullable Output<String> timeOfNextRefresh) {
            $.timeOfNextRefresh = timeOfNextRefresh;
            return this;
        }

        /**
         * @param timeOfNextRefresh The date and time of next refresh.
         * 
         * @return builder
         * 
         */
        public Builder timeOfNextRefresh(String timeOfNextRefresh) {
            return timeOfNextRefresh(Output.of(timeOfNextRefresh));
        }

        /**
         * @param timeReclamationOfFreeAutonomousDatabase The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
         * 
         * @return builder
         * 
         */
        public Builder timeReclamationOfFreeAutonomousDatabase(@Nullable Output<String> timeReclamationOfFreeAutonomousDatabase) {
            $.timeReclamationOfFreeAutonomousDatabase = timeReclamationOfFreeAutonomousDatabase;
            return this;
        }

        /**
         * @param timeReclamationOfFreeAutonomousDatabase The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
         * 
         * @return builder
         * 
         */
        public Builder timeReclamationOfFreeAutonomousDatabase(String timeReclamationOfFreeAutonomousDatabase) {
            return timeReclamationOfFreeAutonomousDatabase(Output.of(timeReclamationOfFreeAutonomousDatabase));
        }

        public Builder timeUndeleted(@Nullable Output<String> timeUndeleted) {
            $.timeUndeleted = timeUndeleted;
            return this;
        }

        public Builder timeUndeleted(String timeUndeleted) {
            return timeUndeleted(Output.of(timeUndeleted));
        }

        /**
         * @param timeUntilReconnectCloneEnabled The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
         * 
         * @return builder
         * 
         */
        public Builder timeUntilReconnectCloneEnabled(@Nullable Output<String> timeUntilReconnectCloneEnabled) {
            $.timeUntilReconnectCloneEnabled = timeUntilReconnectCloneEnabled;
            return this;
        }

        /**
         * @param timeUntilReconnectCloneEnabled The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
         * 
         * @return builder
         * 
         */
        public Builder timeUntilReconnectCloneEnabled(String timeUntilReconnectCloneEnabled) {
            return timeUntilReconnectCloneEnabled(Output.of(timeUntilReconnectCloneEnabled));
        }

        /**
         * @param timestamp The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past.
         * 
         * @return builder
         * 
         */
        public Builder timestamp(@Nullable Output<String> timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        /**
         * @param timestamp The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past.
         * 
         * @return builder
         * 
         */
        public Builder timestamp(String timestamp) {
            return timestamp(Output.of(timestamp));
        }

        /**
         * @param totalBackupStorageSizeInGbs The backup storage to the database.
         * 
         * @return builder
         * 
         */
        public Builder totalBackupStorageSizeInGbs(@Nullable Output<Double> totalBackupStorageSizeInGbs) {
            $.totalBackupStorageSizeInGbs = totalBackupStorageSizeInGbs;
            return this;
        }

        /**
         * @param totalBackupStorageSizeInGbs The backup storage to the database.
         * 
         * @return builder
         * 
         */
        public Builder totalBackupStorageSizeInGbs(Double totalBackupStorageSizeInGbs) {
            return totalBackupStorageSizeInGbs(Output.of(totalBackupStorageSizeInGbs));
        }

        /**
         * @param useLatestAvailableBackupTimeStamp Clone from latest available backup timestamp.
         * 
         * @return builder
         * 
         */
        public Builder useLatestAvailableBackupTimeStamp(@Nullable Output<Boolean> useLatestAvailableBackupTimeStamp) {
            $.useLatestAvailableBackupTimeStamp = useLatestAvailableBackupTimeStamp;
            return this;
        }

        /**
         * @param useLatestAvailableBackupTimeStamp Clone from latest available backup timestamp.
         * 
         * @return builder
         * 
         */
        public Builder useLatestAvailableBackupTimeStamp(Boolean useLatestAvailableBackupTimeStamp) {
            return useLatestAvailableBackupTimeStamp(Output.of(useLatestAvailableBackupTimeStamp));
        }

        /**
         * @param usedDataStorageSizeInGbs The storage space consumed by Autonomous Database in GBs.
         * 
         * @return builder
         * 
         */
        public Builder usedDataStorageSizeInGbs(@Nullable Output<Integer> usedDataStorageSizeInGbs) {
            $.usedDataStorageSizeInGbs = usedDataStorageSizeInGbs;
            return this;
        }

        /**
         * @param usedDataStorageSizeInGbs The storage space consumed by Autonomous Database in GBs.
         * 
         * @return builder
         * 
         */
        public Builder usedDataStorageSizeInGbs(Integer usedDataStorageSizeInGbs) {
            return usedDataStorageSizeInGbs(Output.of(usedDataStorageSizeInGbs));
        }

        /**
         * @param usedDataStorageSizeInTbs The amount of storage that has been used for Autonomous Databases in dedicated infrastructure, in terabytes.
         * 
         * @return builder
         * 
         */
        public Builder usedDataStorageSizeInTbs(@Nullable Output<Integer> usedDataStorageSizeInTbs) {
            $.usedDataStorageSizeInTbs = usedDataStorageSizeInTbs;
            return this;
        }

        /**
         * @param usedDataStorageSizeInTbs The amount of storage that has been used for Autonomous Databases in dedicated infrastructure, in terabytes.
         * 
         * @return builder
         * 
         */
        public Builder usedDataStorageSizeInTbs(Integer usedDataStorageSizeInTbs) {
            return usedDataStorageSizeInTbs(Output.of(usedDataStorageSizeInTbs));
        }

        /**
         * @param vaultId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder vaultId(@Nullable Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        /**
         * @param whitelistedIps (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
         * 
         * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
         * 
         * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. To remove all whitelisted IPs, set the field to a list with an empty string `[&#34;&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedIps(@Nullable Output<List<String>> whitelistedIps) {
            $.whitelistedIps = whitelistedIps;
            return this;
        }

        /**
         * @param whitelistedIps (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
         * 
         * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
         * 
         * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. To remove all whitelisted IPs, set the field to a list with an empty string `[&#34;&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedIps(List<String> whitelistedIps) {
            return whitelistedIps(Output.of(whitelistedIps));
        }

        /**
         * @param whitelistedIps (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on [shared Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
         * 
         * For Autonomous Database Serverless instances, this is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet or VCN OCID. Use a semicolon (;) as a deliminator between the VCN-specific subnets or IPs. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id&gt;&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id1&gt;;1.1.1.1&#34;,&#34;ocid1.vcn.oc1.sea.&lt;unique_id2&gt;;1.1.0.0/16&#34;]` For Exadata Cloud{@literal @}Customer, this is an array of IP addresses or CIDR (Classless Inter-Domain Routing) notations. Example: `[&#34;1.1.1.1&#34;,&#34;1.1.1.0/24&#34;,&#34;1.1.2.25&#34;]`
         * 
         * For an update operation, if you want to delete all the IPs in the ACL, use an array with a single empty string entry.
         * 
         * This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier. To remove all whitelisted IPs, set the field to a list with an empty string `[&#34;&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder whitelistedIps(String... whitelistedIps) {
            return whitelistedIps(List.of(whitelistedIps));
        }

        public AutonomousDatabaseState build() {
            return $;
        }
    }

}
