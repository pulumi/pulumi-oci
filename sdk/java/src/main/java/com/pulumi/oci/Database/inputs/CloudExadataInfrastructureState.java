// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.CloudExadataInfrastructureCustomerContactArgs;
import com.pulumi.oci.Database.inputs.CloudExadataInfrastructureMaintenanceWindowArgs;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudExadataInfrastructureState extends com.pulumi.resources.ResourceArgs {

    public static final CloudExadataInfrastructureState Empty = new CloudExadataInfrastructureState();

    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    @Import(name="activatedStorageCount")
    private @Nullable Output<Integer> activatedStorageCount;

    /**
     * @return The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> activatedStorageCount() {
        return Optional.ofNullable(this.activatedStorageCount);
    }

    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    @Import(name="additionalStorageCount")
    private @Nullable Output<Integer> additionalStorageCount;

    /**
     * @return The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> additionalStorageCount() {
        return Optional.ofNullable(this.additionalStorageCount);
    }

    /**
     * The availability domain where the cloud Exadata infrastructure is located.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain where the cloud Exadata infrastructure is located.
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    @Import(name="availableStorageSizeInGbs")
    private @Nullable Output<Integer> availableStorageSizeInGbs;

    /**
     * @return The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    public Optional<Output<Integer>> availableStorageSizeInGbs() {
        return Optional.ofNullable(this.availableStorageSizeInGbs);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) The number of compute servers for the cloud Exadata infrastructure.
     * 
     */
    @Import(name="computeCount")
    private @Nullable Output<Integer> computeCount;

    /**
     * @return (Updatable) The number of compute servers for the cloud Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> computeCount() {
        return Optional.ofNullable(this.computeCount);
    }

    /**
     * The total number of CPU cores allocated.
     * 
     */
    @Import(name="cpuCount")
    private @Nullable Output<Integer> cpuCount;

    /**
     * @return The total number of CPU cores allocated.
     * 
     */
    public Optional<Output<Integer>> cpuCount() {
        return Optional.ofNullable(this.cpuCount);
    }

    /**
     * (Updatable) Customer contacts.
     * 
     */
    @Import(name="customerContacts")
    private @Nullable Output<List<CloudExadataInfrastructureCustomerContactArgs>> customerContacts;

    /**
     * @return (Updatable) Customer contacts.
     * 
     */
    public Optional<Output<List<CloudExadataInfrastructureCustomerContactArgs>>> customerContacts() {
        return Optional.ofNullable(this.customerContacts);
    }

    /**
     * Size, in terabytes, of the DATA disk group.
     * 
     */
    @Import(name="dataStorageSizeInTbs")
    private @Nullable Output<Double> dataStorageSizeInTbs;

    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    public Optional<Output<Double>> dataStorageSizeInTbs() {
        return Optional.ofNullable(this.dataStorageSizeInTbs);
    }

    /**
     * The local node storage allocated in GBs.
     * 
     */
    @Import(name="dbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> dbNodeStorageSizeInGbs;

    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Optional<Output<Integer>> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }

    /**
     * The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    @Import(name="dbServerVersion")
    private @Nullable Output<String> dbServerVersion;

    /**
     * @return The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public Optional<Output<String>> dbServerVersion() {
        return Optional.ofNullable(this.dbServerVersion);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    @Import(name="lastMaintenanceRunId")
    private @Nullable Output<String> lastMaintenanceRunId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public Optional<Output<String>> lastMaintenanceRunId() {
        return Optional.ofNullable(this.lastMaintenanceRunId);
    }

    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<CloudExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public Optional<Output<CloudExadataInfrastructureMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * The total number of CPU cores available.
     * 
     */
    @Import(name="maxCpuCount")
    private @Nullable Output<Integer> maxCpuCount;

    /**
     * @return The total number of CPU cores available.
     * 
     */
    public Optional<Output<Integer>> maxCpuCount() {
        return Optional.ofNullable(this.maxCpuCount);
    }

    /**
     * The total available DATA disk group size.
     * 
     */
    @Import(name="maxDataStorageInTbs")
    private @Nullable Output<Double> maxDataStorageInTbs;

    /**
     * @return The total available DATA disk group size.
     * 
     */
    public Optional<Output<Double>> maxDataStorageInTbs() {
        return Optional.ofNullable(this.maxDataStorageInTbs);
    }

    /**
     * The total local node storage available in GBs.
     * 
     */
    @Import(name="maxDbNodeStorageInGbs")
    private @Nullable Output<Integer> maxDbNodeStorageInGbs;

    /**
     * @return The total local node storage available in GBs.
     * 
     */
    public Optional<Output<Integer>> maxDbNodeStorageInGbs() {
        return Optional.ofNullable(this.maxDbNodeStorageInGbs);
    }

    /**
     * The total memory available in GBs.
     * 
     */
    @Import(name="maxMemoryInGbs")
    private @Nullable Output<Integer> maxMemoryInGbs;

    /**
     * @return The total memory available in GBs.
     * 
     */
    public Optional<Output<Integer>> maxMemoryInGbs() {
        return Optional.ofNullable(this.maxMemoryInGbs);
    }

    /**
     * The memory allocated in GBs.
     * 
     */
    @Import(name="memorySizeInGbs")
    private @Nullable Output<Integer> memorySizeInGbs;

    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Optional<Output<Integer>> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }

    /**
     * The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    @Import(name="monthlyDbServerVersion")
    private @Nullable Output<String> monthlyDbServerVersion;

    /**
     * @return The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public Optional<Output<String>> monthlyDbServerVersion() {
        return Optional.ofNullable(this.monthlyDbServerVersion);
    }

    /**
     * The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    @Import(name="monthlyStorageServerVersion")
    private @Nullable Output<String> monthlyStorageServerVersion;

    /**
     * @return The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public Optional<Output<String>> monthlyStorageServerVersion() {
        return Optional.ofNullable(this.monthlyStorageServerVersion);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    @Import(name="nextMaintenanceRunId")
    private @Nullable Output<String> nextMaintenanceRunId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public Optional<Output<String>> nextMaintenanceRunId() {
        return Optional.ofNullable(this.nextMaintenanceRunId);
    }

    /**
     * The shape of the cloud Exadata infrastructure resource.
     * 
     */
    @Import(name="shape")
    private @Nullable Output<String> shape;

    /**
     * @return The shape of the cloud Exadata infrastructure resource.
     * 
     */
    public Optional<Output<String>> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * The current lifecycle state of the cloud Exadata infrastructure resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the cloud Exadata infrastructure resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) The number of storage servers for the cloud Exadata infrastructure.
     * 
     */
    @Import(name="storageCount")
    private @Nullable Output<Integer> storageCount;

    /**
     * @return (Updatable) The number of storage servers for the cloud Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> storageCount() {
        return Optional.ofNullable(this.storageCount);
    }

    /**
     * The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    @Import(name="storageServerVersion")
    private @Nullable Output<String> storageServerVersion;

    /**
     * @return The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public Optional<Output<String>> storageServerVersion() {
        return Optional.ofNullable(this.storageServerVersion);
    }

    /**
     * The date and time the cloud Exadata infrastructure resource was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the cloud Exadata infrastructure resource was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    @Import(name="totalStorageSizeInGbs")
    private @Nullable Output<Integer> totalStorageSizeInGbs;

    /**
     * @return The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    public Optional<Output<Integer>> totalStorageSizeInGbs() {
        return Optional.ofNullable(this.totalStorageSizeInGbs);
    }

    private CloudExadataInfrastructureState() {}

    private CloudExadataInfrastructureState(CloudExadataInfrastructureState $) {
        this.activatedStorageCount = $.activatedStorageCount;
        this.additionalStorageCount = $.additionalStorageCount;
        this.availabilityDomain = $.availabilityDomain;
        this.availableStorageSizeInGbs = $.availableStorageSizeInGbs;
        this.compartmentId = $.compartmentId;
        this.computeCount = $.computeCount;
        this.cpuCount = $.cpuCount;
        this.customerContacts = $.customerContacts;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.dbNodeStorageSizeInGbs = $.dbNodeStorageSizeInGbs;
        this.dbServerVersion = $.dbServerVersion;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lastMaintenanceRunId = $.lastMaintenanceRunId;
        this.lifecycleDetails = $.lifecycleDetails;
        this.maintenanceWindow = $.maintenanceWindow;
        this.maxCpuCount = $.maxCpuCount;
        this.maxDataStorageInTbs = $.maxDataStorageInTbs;
        this.maxDbNodeStorageInGbs = $.maxDbNodeStorageInGbs;
        this.maxMemoryInGbs = $.maxMemoryInGbs;
        this.memorySizeInGbs = $.memorySizeInGbs;
        this.monthlyDbServerVersion = $.monthlyDbServerVersion;
        this.monthlyStorageServerVersion = $.monthlyStorageServerVersion;
        this.nextMaintenanceRunId = $.nextMaintenanceRunId;
        this.shape = $.shape;
        this.state = $.state;
        this.storageCount = $.storageCount;
        this.storageServerVersion = $.storageServerVersion;
        this.timeCreated = $.timeCreated;
        this.totalStorageSizeInGbs = $.totalStorageSizeInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudExadataInfrastructureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudExadataInfrastructureState $;

        public Builder() {
            $ = new CloudExadataInfrastructureState();
        }

        public Builder(CloudExadataInfrastructureState defaults) {
            $ = new CloudExadataInfrastructureState(Objects.requireNonNull(defaults));
        }

        /**
         * @param activatedStorageCount The requested number of additional storage servers activated for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activatedStorageCount(@Nullable Output<Integer> activatedStorageCount) {
            $.activatedStorageCount = activatedStorageCount;
            return this;
        }

        /**
         * @param activatedStorageCount The requested number of additional storage servers activated for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activatedStorageCount(Integer activatedStorageCount) {
            return activatedStorageCount(Output.of(activatedStorageCount));
        }

        /**
         * @param additionalStorageCount The requested number of additional storage servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder additionalStorageCount(@Nullable Output<Integer> additionalStorageCount) {
            $.additionalStorageCount = additionalStorageCount;
            return this;
        }

        /**
         * @param additionalStorageCount The requested number of additional storage servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder additionalStorageCount(Integer additionalStorageCount) {
            return additionalStorageCount(Output.of(additionalStorageCount));
        }

        /**
         * @param availabilityDomain The availability domain where the cloud Exadata infrastructure is located.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain where the cloud Exadata infrastructure is located.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param availableStorageSizeInGbs The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder availableStorageSizeInGbs(@Nullable Output<Integer> availableStorageSizeInGbs) {
            $.availableStorageSizeInGbs = availableStorageSizeInGbs;
            return this;
        }

        /**
         * @param availableStorageSizeInGbs The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder availableStorageSizeInGbs(Integer availableStorageSizeInGbs) {
            return availableStorageSizeInGbs(Output.of(availableStorageSizeInGbs));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param computeCount (Updatable) The number of compute servers for the cloud Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(@Nullable Output<Integer> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount (Updatable) The number of compute servers for the cloud Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Integer computeCount) {
            return computeCount(Output.of(computeCount));
        }

        /**
         * @param cpuCount The total number of CPU cores allocated.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(@Nullable Output<Integer> cpuCount) {
            $.cpuCount = cpuCount;
            return this;
        }

        /**
         * @param cpuCount The total number of CPU cores allocated.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(Integer cpuCount) {
            return cpuCount(Output.of(cpuCount));
        }

        /**
         * @param customerContacts (Updatable) Customer contacts.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(@Nullable Output<List<CloudExadataInfrastructureCustomerContactArgs>> customerContacts) {
            $.customerContacts = customerContacts;
            return this;
        }

        /**
         * @param customerContacts (Updatable) Customer contacts.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(List<CloudExadataInfrastructureCustomerContactArgs> customerContacts) {
            return customerContacts(Output.of(customerContacts));
        }

        /**
         * @param customerContacts (Updatable) Customer contacts.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(CloudExadataInfrastructureCustomerContactArgs... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }

        /**
         * @param dataStorageSizeInTbs Size, in terabytes, of the DATA disk group.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(@Nullable Output<Double> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs Size, in terabytes, of the DATA disk group.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        /**
         * @param dbNodeStorageSizeInGbs The local node storage allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(@Nullable Output<Integer> dbNodeStorageSizeInGbs) {
            $.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param dbNodeStorageSizeInGbs The local node storage allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            return dbNodeStorageSizeInGbs(Output.of(dbNodeStorageSizeInGbs));
        }

        /**
         * @param dbServerVersion The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder dbServerVersion(@Nullable Output<String> dbServerVersion) {
            $.dbServerVersion = dbServerVersion;
            return this;
        }

        /**
         * @param dbServerVersion The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder dbServerVersion(String dbServerVersion) {
            return dbServerVersion(Output.of(dbServerVersion));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lastMaintenanceRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         * 
         * @return builder
         * 
         */
        public Builder lastMaintenanceRunId(@Nullable Output<String> lastMaintenanceRunId) {
            $.lastMaintenanceRunId = lastMaintenanceRunId;
            return this;
        }

        /**
         * @param lastMaintenanceRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
         * 
         * @return builder
         * 
         */
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            return lastMaintenanceRunId(Output.of(lastMaintenanceRunId));
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param maintenanceWindow (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<CloudExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(CloudExadataInfrastructureMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param maxCpuCount The total number of CPU cores available.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCount(@Nullable Output<Integer> maxCpuCount) {
            $.maxCpuCount = maxCpuCount;
            return this;
        }

        /**
         * @param maxCpuCount The total number of CPU cores available.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCount(Integer maxCpuCount) {
            return maxCpuCount(Output.of(maxCpuCount));
        }

        /**
         * @param maxDataStorageInTbs The total available DATA disk group size.
         * 
         * @return builder
         * 
         */
        public Builder maxDataStorageInTbs(@Nullable Output<Double> maxDataStorageInTbs) {
            $.maxDataStorageInTbs = maxDataStorageInTbs;
            return this;
        }

        /**
         * @param maxDataStorageInTbs The total available DATA disk group size.
         * 
         * @return builder
         * 
         */
        public Builder maxDataStorageInTbs(Double maxDataStorageInTbs) {
            return maxDataStorageInTbs(Output.of(maxDataStorageInTbs));
        }

        /**
         * @param maxDbNodeStorageInGbs The total local node storage available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxDbNodeStorageInGbs(@Nullable Output<Integer> maxDbNodeStorageInGbs) {
            $.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            return this;
        }

        /**
         * @param maxDbNodeStorageInGbs The total local node storage available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxDbNodeStorageInGbs(Integer maxDbNodeStorageInGbs) {
            return maxDbNodeStorageInGbs(Output.of(maxDbNodeStorageInGbs));
        }

        /**
         * @param maxMemoryInGbs The total memory available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInGbs(@Nullable Output<Integer> maxMemoryInGbs) {
            $.maxMemoryInGbs = maxMemoryInGbs;
            return this;
        }

        /**
         * @param maxMemoryInGbs The total memory available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInGbs(Integer maxMemoryInGbs) {
            return maxMemoryInGbs(Output.of(maxMemoryInGbs));
        }

        /**
         * @param memorySizeInGbs The memory allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(@Nullable Output<Integer> memorySizeInGbs) {
            $.memorySizeInGbs = memorySizeInGbs;
            return this;
        }

        /**
         * @param memorySizeInGbs The memory allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            return memorySizeInGbs(Output.of(memorySizeInGbs));
        }

        /**
         * @param monthlyDbServerVersion The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder monthlyDbServerVersion(@Nullable Output<String> monthlyDbServerVersion) {
            $.monthlyDbServerVersion = monthlyDbServerVersion;
            return this;
        }

        /**
         * @param monthlyDbServerVersion The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder monthlyDbServerVersion(String monthlyDbServerVersion) {
            return monthlyDbServerVersion(Output.of(monthlyDbServerVersion));
        }

        /**
         * @param monthlyStorageServerVersion The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder monthlyStorageServerVersion(@Nullable Output<String> monthlyStorageServerVersion) {
            $.monthlyStorageServerVersion = monthlyStorageServerVersion;
            return this;
        }

        /**
         * @param monthlyStorageServerVersion The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder monthlyStorageServerVersion(String monthlyStorageServerVersion) {
            return monthlyStorageServerVersion(Output.of(monthlyStorageServerVersion));
        }

        /**
         * @param nextMaintenanceRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         * 
         * @return builder
         * 
         */
        public Builder nextMaintenanceRunId(@Nullable Output<String> nextMaintenanceRunId) {
            $.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }

        /**
         * @param nextMaintenanceRunId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
         * 
         * @return builder
         * 
         */
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            return nextMaintenanceRunId(Output.of(nextMaintenanceRunId));
        }

        /**
         * @param shape The shape of the cloud Exadata infrastructure resource.
         * 
         * @return builder
         * 
         */
        public Builder shape(@Nullable Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape The shape of the cloud Exadata infrastructure resource.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param state The current lifecycle state of the cloud Exadata infrastructure resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the cloud Exadata infrastructure resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param storageCount (Updatable) The number of storage servers for the cloud Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageCount(@Nullable Output<Integer> storageCount) {
            $.storageCount = storageCount;
            return this;
        }

        /**
         * @param storageCount (Updatable) The number of storage servers for the cloud Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageCount(Integer storageCount) {
            return storageCount(Output.of(storageCount));
        }

        /**
         * @param storageServerVersion The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder storageServerVersion(@Nullable Output<String> storageServerVersion) {
            $.storageServerVersion = storageServerVersion;
            return this;
        }

        /**
         * @param storageServerVersion The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
         * 
         * @return builder
         * 
         */
        public Builder storageServerVersion(String storageServerVersion) {
            return storageServerVersion(Output.of(storageServerVersion));
        }

        /**
         * @param timeCreated The date and time the cloud Exadata infrastructure resource was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the cloud Exadata infrastructure resource was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param totalStorageSizeInGbs The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder totalStorageSizeInGbs(@Nullable Output<Integer> totalStorageSizeInGbs) {
            $.totalStorageSizeInGbs = totalStorageSizeInGbs;
            return this;
        }

        /**
         * @param totalStorageSizeInGbs The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder totalStorageSizeInGbs(Integer totalStorageSizeInGbs) {
            return totalStorageSizeInGbs(Output.of(totalStorageSizeInGbs));
        }

        public CloudExadataInfrastructureState build() {
            return $;
        }
    }

}
