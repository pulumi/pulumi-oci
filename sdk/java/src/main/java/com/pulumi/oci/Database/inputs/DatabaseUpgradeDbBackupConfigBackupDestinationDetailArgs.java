// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs Empty = new DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    @Import(name="dbrsPolicyId")
    private @Nullable Output<String> dbrsPolicyId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    public Optional<Output<String>> dbrsPolicyId() {
        return Optional.ofNullable(this.dbrsPolicyId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Proxy URL to connect to object store.
     * 
     */
    @Import(name="internetProxy")
    private @Nullable Output<String> internetProxy;

    /**
     * @return Proxy URL to connect to object store.
     * 
     */
    public Optional<Output<String>> internetProxy() {
        return Optional.ofNullable(this.internetProxy);
    }

    /**
     * Indicates whether the backup destination is cross-region or local region.
     * 
     */
    @Import(name="isRemote")
    private @Nullable Output<Boolean> isRemote;

    /**
     * @return Indicates whether the backup destination is cross-region or local region.
     * 
     */
    public Optional<Output<Boolean>> isRemote() {
        return Optional.ofNullable(this.isRemote);
    }

    /**
     * The name of the remote region where the remote automatic incremental backups will be stored.
     * 
     */
    @Import(name="remoteRegion")
    private @Nullable Output<String> remoteRegion;

    /**
     * @return The name of the remote region where the remote automatic incremental backups will be stored.
     * 
     */
    public Optional<Output<String>> remoteRegion() {
        return Optional.ofNullable(this.remoteRegion);
    }

    /**
     * Type of the database backup destination.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the database backup destination.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    @Import(name="vpcPassword")
    private @Nullable Output<String> vpcPassword;

    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    public Optional<Output<String>> vpcPassword() {
        return Optional.ofNullable(this.vpcPassword);
    }

    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    @Import(name="vpcUser")
    private @Nullable Output<String> vpcUser;

    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    public Optional<Output<String>> vpcUser() {
        return Optional.ofNullable(this.vpcUser);
    }

    private DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs() {}

    private DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs(DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs $) {
        this.dbrsPolicyId = $.dbrsPolicyId;
        this.id = $.id;
        this.internetProxy = $.internetProxy;
        this.isRemote = $.isRemote;
        this.remoteRegion = $.remoteRegion;
        this.type = $.type;
        this.vpcPassword = $.vpcPassword;
        this.vpcUser = $.vpcUser;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs $;

        public Builder() {
            $ = new DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs();
        }

        public Builder(DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs defaults) {
            $ = new DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbrsPolicyId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
         * 
         * @return builder
         * 
         */
        public Builder dbrsPolicyId(@Nullable Output<String> dbrsPolicyId) {
            $.dbrsPolicyId = dbrsPolicyId;
            return this;
        }

        /**
         * @param dbrsPolicyId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
         * 
         * @return builder
         * 
         */
        public Builder dbrsPolicyId(String dbrsPolicyId) {
            return dbrsPolicyId(Output.of(dbrsPolicyId));
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param internetProxy Proxy URL to connect to object store.
         * 
         * @return builder
         * 
         */
        public Builder internetProxy(@Nullable Output<String> internetProxy) {
            $.internetProxy = internetProxy;
            return this;
        }

        /**
         * @param internetProxy Proxy URL to connect to object store.
         * 
         * @return builder
         * 
         */
        public Builder internetProxy(String internetProxy) {
            return internetProxy(Output.of(internetProxy));
        }

        /**
         * @param isRemote Indicates whether the backup destination is cross-region or local region.
         * 
         * @return builder
         * 
         */
        public Builder isRemote(@Nullable Output<Boolean> isRemote) {
            $.isRemote = isRemote;
            return this;
        }

        /**
         * @param isRemote Indicates whether the backup destination is cross-region or local region.
         * 
         * @return builder
         * 
         */
        public Builder isRemote(Boolean isRemote) {
            return isRemote(Output.of(isRemote));
        }

        /**
         * @param remoteRegion The name of the remote region where the remote automatic incremental backups will be stored.
         * 
         * @return builder
         * 
         */
        public Builder remoteRegion(@Nullable Output<String> remoteRegion) {
            $.remoteRegion = remoteRegion;
            return this;
        }

        /**
         * @param remoteRegion The name of the remote region where the remote automatic incremental backups will be stored.
         * 
         * @return builder
         * 
         */
        public Builder remoteRegion(String remoteRegion) {
            return remoteRegion(Output.of(remoteRegion));
        }

        /**
         * @param type Type of the database backup destination.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the database backup destination.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vpcPassword For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcPassword(@Nullable Output<String> vpcPassword) {
            $.vpcPassword = vpcPassword;
            return this;
        }

        /**
         * @param vpcPassword For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcPassword(String vpcPassword) {
            return vpcPassword(Output.of(vpcPassword));
        }

        /**
         * @param vpcUser For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcUser(@Nullable Output<String> vpcUser) {
            $.vpcUser = vpcUser;
            return this;
        }

        /**
         * @param vpcUser For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
         * 
         * @return builder
         * 
         */
        public Builder vpcUser(String vpcUser) {
            return vpcUser(Output.of(vpcUser));
        }

        public DatabaseUpgradeDbBackupConfigBackupDestinationDetailArgs build() {
            return $;
        }
    }

}
