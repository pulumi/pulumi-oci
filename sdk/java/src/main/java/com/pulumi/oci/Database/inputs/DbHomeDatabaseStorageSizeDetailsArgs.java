// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbHomeDatabaseStorageSizeDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbHomeDatabaseStorageSizeDetailsArgs Empty = new DbHomeDatabaseStorageSizeDetailsArgs();

    /**
     * The DATA storage size, in gigabytes, that is applicable for the database.
     * 
     */
    @Import(name="dataStorageSizeInGb", required=true)
    private Output<Integer> dataStorageSizeInGb;

    /**
     * @return The DATA storage size, in gigabytes, that is applicable for the database.
     * 
     */
    public Output<Integer> dataStorageSizeInGb() {
        return this.dataStorageSizeInGb;
    }

    /**
     * The RECO storage size, in gigabytes, that is applicable for the database.
     * 
     */
    @Import(name="recoStorageSizeInGbs", required=true)
    private Output<Integer> recoStorageSizeInGbs;

    /**
     * @return The RECO storage size, in gigabytes, that is applicable for the database.
     * 
     */
    public Output<Integer> recoStorageSizeInGbs() {
        return this.recoStorageSizeInGbs;
    }

    @Import(name="redoLogStorageSizeInGbs")
    private @Nullable Output<Integer> redoLogStorageSizeInGbs;

    public Optional<Output<Integer>> redoLogStorageSizeInGbs() {
        return Optional.ofNullable(this.redoLogStorageSizeInGbs);
    }

    private DbHomeDatabaseStorageSizeDetailsArgs() {}

    private DbHomeDatabaseStorageSizeDetailsArgs(DbHomeDatabaseStorageSizeDetailsArgs $) {
        this.dataStorageSizeInGb = $.dataStorageSizeInGb;
        this.recoStorageSizeInGbs = $.recoStorageSizeInGbs;
        this.redoLogStorageSizeInGbs = $.redoLogStorageSizeInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbHomeDatabaseStorageSizeDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbHomeDatabaseStorageSizeDetailsArgs $;

        public Builder() {
            $ = new DbHomeDatabaseStorageSizeDetailsArgs();
        }

        public Builder(DbHomeDatabaseStorageSizeDetailsArgs defaults) {
            $ = new DbHomeDatabaseStorageSizeDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataStorageSizeInGb The DATA storage size, in gigabytes, that is applicable for the database.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInGb(Output<Integer> dataStorageSizeInGb) {
            $.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }

        /**
         * @param dataStorageSizeInGb The DATA storage size, in gigabytes, that is applicable for the database.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInGb(Integer dataStorageSizeInGb) {
            return dataStorageSizeInGb(Output.of(dataStorageSizeInGb));
        }

        /**
         * @param recoStorageSizeInGbs The RECO storage size, in gigabytes, that is applicable for the database.
         * 
         * @return builder
         * 
         */
        public Builder recoStorageSizeInGbs(Output<Integer> recoStorageSizeInGbs) {
            $.recoStorageSizeInGbs = recoStorageSizeInGbs;
            return this;
        }

        /**
         * @param recoStorageSizeInGbs The RECO storage size, in gigabytes, that is applicable for the database.
         * 
         * @return builder
         * 
         */
        public Builder recoStorageSizeInGbs(Integer recoStorageSizeInGbs) {
            return recoStorageSizeInGbs(Output.of(recoStorageSizeInGbs));
        }

        public Builder redoLogStorageSizeInGbs(@Nullable Output<Integer> redoLogStorageSizeInGbs) {
            $.redoLogStorageSizeInGbs = redoLogStorageSizeInGbs;
            return this;
        }

        public Builder redoLogStorageSizeInGbs(Integer redoLogStorageSizeInGbs) {
            return redoLogStorageSizeInGbs(Output.of(redoLogStorageSizeInGbs));
        }

        public DbHomeDatabaseStorageSizeDetailsArgs build() {
            if ($.dataStorageSizeInGb == null) {
                throw new MissingRequiredPropertyException("DbHomeDatabaseStorageSizeDetailsArgs", "dataStorageSizeInGb");
            }
            if ($.recoStorageSizeInGbs == null) {
                throw new MissingRequiredPropertyException("DbHomeDatabaseStorageSizeDetailsArgs", "recoStorageSizeInGbs");
            }
            return $;
        }
    }

}
