// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbNodeState extends com.pulumi.resources.ResourceArgs {

    public static final DbNodeState Empty = new DbNodeState();

    /**
     * Additional information about the planned maintenance.
     * 
     */
    @Import(name="additionalDetails")
    private @Nullable Output<String> additionalDetails;

    /**
     * @return Additional information about the planned maintenance.
     * 
     */
    public Optional<Output<String>> additionalDetails() {
        return Optional.ofNullable(this.additionalDetails);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
     * 
     */
    @Import(name="backupIpId")
    private @Nullable Output<String> backupIpId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
     * 
     */
    public Optional<Output<String>> backupIpId() {
        return Optional.ofNullable(this.backupIpId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
     * 
     */
    @Import(name="backupIpv6id")
    private @Nullable Output<String> backupIpv6id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
     * 
     */
    public Optional<Output<String>> backupIpv6id() {
        return Optional.ofNullable(this.backupIpv6id);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
     * 
     */
    @Import(name="backupVnic2id")
    private @Nullable Output<String> backupVnic2id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
     * 
     */
    public Optional<Output<String>> backupVnic2id() {
        return Optional.ofNullable(this.backupVnic2id);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
     * 
     */
    @Import(name="backupVnicId")
    private @Nullable Output<String> backupVnicId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
     * 
     */
    public Optional<Output<String>> backupVnicId() {
        return Optional.ofNullable(this.backupVnicId);
    }

    /**
     * The number of compute servers for the DB system.
     * 
     */
    @Import(name="computeCount")
    private @Nullable Output<Integer> computeCount;

    /**
     * @return The number of compute servers for the DB system.
     * 
     */
    public Optional<Output<Integer>> computeCount() {
        return Optional.ofNullable(this.computeCount);
    }

    /**
     * The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy.
     * 
     */
    @Import(name="computeModel")
    private @Nullable Output<String> computeModel;

    /**
     * @return The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy.
     * 
     */
    public Optional<Output<String>> computeModel() {
        return Optional.ofNullable(this.computeModel);
    }

    /**
     * The number of CPU cores enabled on the Db node.
     * 
     */
    @Import(name="cpuCoreCount")
    private @Nullable Output<Integer> cpuCoreCount;

    /**
     * @return The number of CPU cores enabled on the Db node.
     * 
     */
    public Optional<Output<Integer>> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }

    /**
     * The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="dbNodeId")
    private @Nullable Output<String> dbNodeId;

    /**
     * @return The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<Output<String>> dbNodeId() {
        return Optional.ofNullable(this.dbNodeId);
    }

    /**
     * The allocated local node storage in GBs on the Db node.
     * 
     */
    @Import(name="dbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> dbNodeStorageSizeInGbs;

    /**
     * @return The allocated local node storage in GBs on the Db node.
     * 
     */
    public Optional<Output<Integer>> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
     * 
     */
    @Import(name="dbServerId")
    private @Nullable Output<String> dbServerId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
     * 
     */
    public Optional<Output<String>> dbServerId() {
        return Optional.ofNullable(this.dbServerId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    @Import(name="dbSystemId")
    private @Nullable Output<String> dbSystemId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public Optional<Output<String>> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The name of the Fault Domain the instance is contained in.
     * 
     */
    @Import(name="faultDomain")
    private @Nullable Output<String> faultDomain;

    /**
     * @return The name of the Fault Domain the instance is contained in.
     * 
     */
    public Optional<Output<String>> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
     * 
     */
    @Import(name="hostIpId")
    private @Nullable Output<String> hostIpId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
     * 
     */
    public Optional<Output<String>> hostIpId() {
        return Optional.ofNullable(this.hostIpId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
     * 
     */
    @Import(name="hostIpv6id")
    private @Nullable Output<String> hostIpv6id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
     * 
     */
    public Optional<Output<String>> hostIpv6id() {
        return Optional.ofNullable(this.hostIpv6id);
    }

    /**
     * The host name for the database node.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The host name for the database node.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Information about the current lifecycle state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Information about the current lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The type of database node maintenance.
     * 
     */
    @Import(name="maintenanceType")
    private @Nullable Output<String> maintenanceType;

    /**
     * @return The type of database node maintenance.
     * 
     */
    public Optional<Output<String>> maintenanceType() {
        return Optional.ofNullable(this.maintenanceType);
    }

    /**
     * The allocated memory in GBs on the Db node.
     * 
     */
    @Import(name="memorySizeInGbs")
    private @Nullable Output<Integer> memorySizeInGbs;

    /**
     * @return The allocated memory in GBs on the Db node.
     * 
     */
    public Optional<Output<Integer>> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }

    /**
     * The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     * 
     */
    @Import(name="softwareStorageSizeInGb")
    private @Nullable Output<Integer> softwareStorageSizeInGb;

    /**
     * @return The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     * 
     */
    public Optional<Output<Integer>> softwareStorageSizeInGb() {
        return Optional.ofNullable(this.softwareStorageSizeInGb);
    }

    /**
     * The current state of the database node.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the database node.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time that the database node was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time that the database node was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * End date and time of maintenance window.
     * 
     */
    @Import(name="timeMaintenanceWindowEnd")
    private @Nullable Output<String> timeMaintenanceWindowEnd;

    /**
     * @return End date and time of maintenance window.
     * 
     */
    public Optional<Output<String>> timeMaintenanceWindowEnd() {
        return Optional.ofNullable(this.timeMaintenanceWindowEnd);
    }

    /**
     * Start date and time of maintenance window.
     * 
     */
    @Import(name="timeMaintenanceWindowStart")
    private @Nullable Output<String> timeMaintenanceWindowStart;

    /**
     * @return Start date and time of maintenance window.
     * 
     */
    public Optional<Output<String>> timeMaintenanceWindowStart() {
        return Optional.ofNullable(this.timeMaintenanceWindowStart);
    }

    /**
     * The total number of CPU cores reserved on the Db node.
     * 
     */
    @Import(name="totalCpuCoreCount")
    private @Nullable Output<Integer> totalCpuCoreCount;

    /**
     * @return The total number of CPU cores reserved on the Db node.
     * 
     */
    public Optional<Output<Integer>> totalCpuCoreCount() {
        return Optional.ofNullable(this.totalCpuCoreCount);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
     * 
     */
    @Import(name="vnic2id")
    private @Nullable Output<String> vnic2id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
     * 
     */
    public Optional<Output<String>> vnic2id() {
        return Optional.ofNullable(this.vnic2id);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     * 
     */
    @Import(name="vnicId")
    private @Nullable Output<String> vnicId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     * 
     */
    public Optional<Output<String>> vnicId() {
        return Optional.ofNullable(this.vnicId);
    }

    private DbNodeState() {}

    private DbNodeState(DbNodeState $) {
        this.additionalDetails = $.additionalDetails;
        this.backupIpId = $.backupIpId;
        this.backupIpv6id = $.backupIpv6id;
        this.backupVnic2id = $.backupVnic2id;
        this.backupVnicId = $.backupVnicId;
        this.computeCount = $.computeCount;
        this.computeModel = $.computeModel;
        this.cpuCoreCount = $.cpuCoreCount;
        this.dbNodeId = $.dbNodeId;
        this.dbNodeStorageSizeInGbs = $.dbNodeStorageSizeInGbs;
        this.dbServerId = $.dbServerId;
        this.dbSystemId = $.dbSystemId;
        this.definedTags = $.definedTags;
        this.faultDomain = $.faultDomain;
        this.freeformTags = $.freeformTags;
        this.hostIpId = $.hostIpId;
        this.hostIpv6id = $.hostIpv6id;
        this.hostname = $.hostname;
        this.lifecycleDetails = $.lifecycleDetails;
        this.maintenanceType = $.maintenanceType;
        this.memorySizeInGbs = $.memorySizeInGbs;
        this.softwareStorageSizeInGb = $.softwareStorageSizeInGb;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeMaintenanceWindowEnd = $.timeMaintenanceWindowEnd;
        this.timeMaintenanceWindowStart = $.timeMaintenanceWindowStart;
        this.totalCpuCoreCount = $.totalCpuCoreCount;
        this.vnic2id = $.vnic2id;
        this.vnicId = $.vnicId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbNodeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbNodeState $;

        public Builder() {
            $ = new DbNodeState();
        }

        public Builder(DbNodeState defaults) {
            $ = new DbNodeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalDetails Additional information about the planned maintenance.
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(@Nullable Output<String> additionalDetails) {
            $.additionalDetails = additionalDetails;
            return this;
        }

        /**
         * @param additionalDetails Additional information about the planned maintenance.
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(String additionalDetails) {
            return additionalDetails(Output.of(additionalDetails));
        }

        /**
         * @param backupIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder backupIpId(@Nullable Output<String> backupIpId) {
            $.backupIpId = backupIpId;
            return this;
        }

        /**
         * @param backupIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder backupIpId(String backupIpId) {
            return backupIpId(Output.of(backupIpId));
        }

        /**
         * @param backupIpv6id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder backupIpv6id(@Nullable Output<String> backupIpv6id) {
            $.backupIpv6id = backupIpv6id;
            return this;
        }

        /**
         * @param backupIpv6id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder backupIpv6id(String backupIpv6id) {
            return backupIpv6id(Output.of(backupIpv6id));
        }

        /**
         * @param backupVnic2id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
         * 
         * @return builder
         * 
         */
        public Builder backupVnic2id(@Nullable Output<String> backupVnic2id) {
            $.backupVnic2id = backupVnic2id;
            return this;
        }

        /**
         * @param backupVnic2id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
         * 
         * @return builder
         * 
         */
        public Builder backupVnic2id(String backupVnic2id) {
            return backupVnic2id(Output.of(backupVnic2id));
        }

        /**
         * @param backupVnicId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
         * 
         * @return builder
         * 
         */
        public Builder backupVnicId(@Nullable Output<String> backupVnicId) {
            $.backupVnicId = backupVnicId;
            return this;
        }

        /**
         * @param backupVnicId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
         * 
         * @return builder
         * 
         */
        public Builder backupVnicId(String backupVnicId) {
            return backupVnicId(Output.of(backupVnicId));
        }

        /**
         * @param computeCount The number of compute servers for the DB system.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(@Nullable Output<Integer> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount The number of compute servers for the DB system.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Integer computeCount) {
            return computeCount(Output.of(computeCount));
        }

        /**
         * @param computeModel The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(@Nullable Output<String> computeModel) {
            $.computeModel = computeModel;
            return this;
        }

        /**
         * @param computeModel The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(String computeModel) {
            return computeModel(Output.of(computeModel));
        }

        /**
         * @param cpuCoreCount The number of CPU cores enabled on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(@Nullable Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        /**
         * @param cpuCoreCount The number of CPU cores enabled on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        /**
         * @param dbNodeId The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder dbNodeId(@Nullable Output<String> dbNodeId) {
            $.dbNodeId = dbNodeId;
            return this;
        }

        /**
         * @param dbNodeId The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder dbNodeId(String dbNodeId) {
            return dbNodeId(Output.of(dbNodeId));
        }

        /**
         * @param dbNodeStorageSizeInGbs The allocated local node storage in GBs on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(@Nullable Output<Integer> dbNodeStorageSizeInGbs) {
            $.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param dbNodeStorageSizeInGbs The allocated local node storage in GBs on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            return dbNodeStorageSizeInGbs(Output.of(dbNodeStorageSizeInGbs));
        }

        /**
         * @param dbServerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
         * 
         * @return builder
         * 
         */
        public Builder dbServerId(@Nullable Output<String> dbServerId) {
            $.dbServerId = dbServerId;
            return this;
        }

        /**
         * @param dbServerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
         * 
         * @return builder
         * 
         */
        public Builder dbServerId(String dbServerId) {
            return dbServerId(Output.of(dbServerId));
        }

        /**
         * @param dbSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(@Nullable Output<String> dbSystemId) {
            $.dbSystemId = dbSystemId;
            return this;
        }

        /**
         * @param dbSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(String dbSystemId) {
            return dbSystemId(Output.of(dbSystemId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param faultDomain The name of the Fault Domain the instance is contained in.
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(@Nullable Output<String> faultDomain) {
            $.faultDomain = faultDomain;
            return this;
        }

        /**
         * @param faultDomain The name of the Fault Domain the instance is contained in.
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(String faultDomain) {
            return faultDomain(Output.of(faultDomain));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param hostIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder hostIpId(@Nullable Output<String> hostIpId) {
            $.hostIpId = hostIpId;
            return this;
        }

        /**
         * @param hostIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv4 address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IPv4 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder hostIpId(String hostIpId) {
            return hostIpId(Output.of(hostIpId));
        }

        /**
         * @param hostIpv6id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder hostIpv6id(@Nullable Output<String> hostIpv6id) {
            $.hostIpv6id = hostIpv6id;
            return this;
        }

        /**
         * @param hostIpv6id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IPv6 address associated with the database node. Use this OCID with the [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Ipv6/GetIpv6) API to get the IPv6 address needed to make a database connection.
         * 
         * @return builder
         * 
         */
        public Builder hostIpv6id(String hostIpv6id) {
            return hostIpv6id(Output.of(hostIpv6id));
        }

        /**
         * @param hostname The host name for the database node.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The host name for the database node.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param lifecycleDetails Information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param maintenanceType The type of database node maintenance.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceType(@Nullable Output<String> maintenanceType) {
            $.maintenanceType = maintenanceType;
            return this;
        }

        /**
         * @param maintenanceType The type of database node maintenance.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceType(String maintenanceType) {
            return maintenanceType(Output.of(maintenanceType));
        }

        /**
         * @param memorySizeInGbs The allocated memory in GBs on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(@Nullable Output<Integer> memorySizeInGbs) {
            $.memorySizeInGbs = memorySizeInGbs;
            return this;
        }

        /**
         * @param memorySizeInGbs The allocated memory in GBs on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            return memorySizeInGbs(Output.of(memorySizeInGbs));
        }

        /**
         * @param softwareStorageSizeInGb The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
         * 
         * @return builder
         * 
         */
        public Builder softwareStorageSizeInGb(@Nullable Output<Integer> softwareStorageSizeInGb) {
            $.softwareStorageSizeInGb = softwareStorageSizeInGb;
            return this;
        }

        /**
         * @param softwareStorageSizeInGb The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
         * 
         * @return builder
         * 
         */
        public Builder softwareStorageSizeInGb(Integer softwareStorageSizeInGb) {
            return softwareStorageSizeInGb(Output.of(softwareStorageSizeInGb));
        }

        /**
         * @param state The current state of the database node.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the database node.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time that the database node was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time that the database node was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeMaintenanceWindowEnd End date and time of maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowEnd(@Nullable Output<String> timeMaintenanceWindowEnd) {
            $.timeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            return this;
        }

        /**
         * @param timeMaintenanceWindowEnd End date and time of maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowEnd(String timeMaintenanceWindowEnd) {
            return timeMaintenanceWindowEnd(Output.of(timeMaintenanceWindowEnd));
        }

        /**
         * @param timeMaintenanceWindowStart Start date and time of maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowStart(@Nullable Output<String> timeMaintenanceWindowStart) {
            $.timeMaintenanceWindowStart = timeMaintenanceWindowStart;
            return this;
        }

        /**
         * @param timeMaintenanceWindowStart Start date and time of maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowStart(String timeMaintenanceWindowStart) {
            return timeMaintenanceWindowStart(Output.of(timeMaintenanceWindowStart));
        }

        /**
         * @param totalCpuCoreCount The total number of CPU cores reserved on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder totalCpuCoreCount(@Nullable Output<Integer> totalCpuCoreCount) {
            $.totalCpuCoreCount = totalCpuCoreCount;
            return this;
        }

        /**
         * @param totalCpuCoreCount The total number of CPU cores reserved on the Db node.
         * 
         * @return builder
         * 
         */
        public Builder totalCpuCoreCount(Integer totalCpuCoreCount) {
            return totalCpuCoreCount(Output.of(totalCpuCoreCount));
        }

        /**
         * @param vnic2id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
         * 
         * @return builder
         * 
         */
        public Builder vnic2id(@Nullable Output<String> vnic2id) {
            $.vnic2id = vnic2id;
            return this;
        }

        /**
         * @param vnic2id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
         * 
         * @return builder
         * 
         */
        public Builder vnic2id(String vnic2id) {
            return vnic2id(Output.of(vnic2id));
        }

        /**
         * @param vnicId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
         * 
         * @return builder
         * 
         */
        public Builder vnicId(@Nullable Output<String> vnicId) {
            $.vnicId = vnicId;
            return this;
        }

        /**
         * @param vnicId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
         * 
         * @return builder
         * 
         */
        public Builder vnicId(String vnicId) {
            return vnicId(Output.of(vnicId));
        }

        public DbNodeState build() {
            return $;
        }
    }

}
