// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.inputs.GetApplicationVipsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApplicationVipsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationVipsPlainArgs Empty = new GetApplicationVipsPlainArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
     * 
     */
    @Import(name="cloudVmClusterId", required=true)
    private String cloudVmClusterId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
     * 
     */
    public String cloudVmClusterId() {
        return this.cloudVmClusterId;
    }

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetApplicationVipsFilter> filters;

    public Optional<List<GetApplicationVipsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetApplicationVipsPlainArgs() {}

    private GetApplicationVipsPlainArgs(GetApplicationVipsPlainArgs $) {
        this.cloudVmClusterId = $.cloudVmClusterId;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationVipsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationVipsPlainArgs $;

        public Builder() {
            $ = new GetApplicationVipsPlainArgs();
        }

        public Builder(GetApplicationVipsPlainArgs defaults) {
            $ = new GetApplicationVipsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudVmClusterId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
         * 
         * @return builder
         * 
         */
        public Builder cloudVmClusterId(String cloudVmClusterId) {
            $.cloudVmClusterId = cloudVmClusterId;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetApplicationVipsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetApplicationVipsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetApplicationVipsPlainArgs build() {
            if ($.cloudVmClusterId == null) {
                throw new MissingRequiredPropertyException("GetApplicationVipsPlainArgs", "cloudVmClusterId");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetApplicationVipsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
