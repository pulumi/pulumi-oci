// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.inputs.GetAutonomousDatabasesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAutonomousDatabasesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAutonomousDatabasesPlainArgs Empty = new GetAutonomousDatabasesPlainArgs();

    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="autonomousContainerDatabaseId")
    private @Nullable String autonomousContainerDatabaseId;

    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> autonomousContainerDatabaseId() {
        return Optional.ofNullable(this.autonomousContainerDatabaseId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A valid Oracle Database version for Autonomous Database.
     * 
     */
    @Import(name="dbVersion")
    private @Nullable String dbVersion;

    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    public Optional<String> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }

    /**
     * The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    @Import(name="dbWorkload")
    private @Nullable String dbWorkload;

    /**
     * @return The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    public Optional<String> dbWorkload() {
        return Optional.ofNullable(this.dbWorkload);
    }

    /**
     * The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetAutonomousDatabasesFilter> filters;

    public Optional<List<GetAutonomousDatabasesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The infrastructure type this resource belongs to.
     * 
     */
    @Import(name="infrastructureType")
    private @Nullable String infrastructureType;

    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    public Optional<String> infrastructureType() {
        return Optional.ofNullable(this.infrastructureType);
    }

    /**
     * **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    @Import(name="isDataGuardEnabled")
    private @Nullable Boolean isDataGuardEnabled;

    /**
     * @return **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Optional<Boolean> isDataGuardEnabled() {
        return Optional.ofNullable(this.isDataGuardEnabled);
    }

    /**
     * Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
     * 
     */
    @Import(name="isFreeTier")
    private @Nullable Boolean isFreeTier;

    /**
     * @return Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
     * 
     */
    public Optional<Boolean> isFreeTier() {
        return Optional.ofNullable(this.isFreeTier);
    }

    /**
     * Indicates if the Autonomous Database is a refreshable clone.
     * 
     */
    @Import(name="isRefreshableClone")
    private @Nullable Boolean isRefreshableClone;

    /**
     * @return Indicates if the Autonomous Database is a refreshable clone.
     * 
     */
    public Optional<Boolean> isRefreshableClone() {
        return Optional.ofNullable(this.isRefreshableClone);
    }

    @Import(name="isResourcePoolLeader")
    private @Nullable Boolean isResourcePoolLeader;

    public Optional<Boolean> isResourcePoolLeader() {
        return Optional.ofNullable(this.isResourcePoolLeader);
    }

    @Import(name="lifecycleStateNotEqualTo")
    private @Nullable String lifecycleStateNotEqualTo;

    public Optional<String> lifecycleStateNotEqualTo() {
        return Optional.ofNullable(this.lifecycleStateNotEqualTo);
    }

    /**
     * The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="resourcePoolLeaderId")
    private @Nullable String resourcePoolLeaderId;

    /**
     * @return The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> resourcePoolLeaderId() {
        return Optional.ofNullable(this.resourcePoolLeaderId);
    }

    /**
     * The current state of the Autonomous Database.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The current state of the Autonomous Database.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAutonomousDatabasesPlainArgs() {}

    private GetAutonomousDatabasesPlainArgs(GetAutonomousDatabasesPlainArgs $) {
        this.autonomousContainerDatabaseId = $.autonomousContainerDatabaseId;
        this.compartmentId = $.compartmentId;
        this.dbVersion = $.dbVersion;
        this.dbWorkload = $.dbWorkload;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.infrastructureType = $.infrastructureType;
        this.isDataGuardEnabled = $.isDataGuardEnabled;
        this.isFreeTier = $.isFreeTier;
        this.isRefreshableClone = $.isRefreshableClone;
        this.isResourcePoolLeader = $.isResourcePoolLeader;
        this.lifecycleStateNotEqualTo = $.lifecycleStateNotEqualTo;
        this.resourcePoolLeaderId = $.resourcePoolLeaderId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAutonomousDatabasesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAutonomousDatabasesPlainArgs $;

        public Builder() {
            $ = new GetAutonomousDatabasesPlainArgs();
        }

        public Builder(GetAutonomousDatabasesPlainArgs defaults) {
            $ = new GetAutonomousDatabasesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autonomousContainerDatabaseId The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder autonomousContainerDatabaseId(@Nullable String autonomousContainerDatabaseId) {
            $.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param dbVersion A valid Oracle Database version for Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(@Nullable String dbVersion) {
            $.dbVersion = dbVersion;
            return this;
        }

        /**
         * @param dbWorkload The Autonomous Database workload type. The following values are valid:
         * * OLTP - indicates an Autonomous Transaction Processing database
         * * DW - indicates an Autonomous Data Warehouse database
         * * AJD - indicates an Autonomous JSON Database
         * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(@Nullable String dbWorkload) {
            $.dbWorkload = dbWorkload;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the Autonomous Database. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetAutonomousDatabasesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAutonomousDatabasesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param infrastructureType The infrastructure type this resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureType(@Nullable String infrastructureType) {
            $.infrastructureType = infrastructureType;
            return this;
        }

        /**
         * @param isDataGuardEnabled **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder isDataGuardEnabled(@Nullable Boolean isDataGuardEnabled) {
            $.isDataGuardEnabled = isDataGuardEnabled;
            return this;
        }

        /**
         * @param isFreeTier Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
         * 
         * @return builder
         * 
         */
        public Builder isFreeTier(@Nullable Boolean isFreeTier) {
            $.isFreeTier = isFreeTier;
            return this;
        }

        /**
         * @param isRefreshableClone Indicates if the Autonomous Database is a refreshable clone.
         * 
         * @return builder
         * 
         */
        public Builder isRefreshableClone(@Nullable Boolean isRefreshableClone) {
            $.isRefreshableClone = isRefreshableClone;
            return this;
        }

        public Builder isResourcePoolLeader(@Nullable Boolean isResourcePoolLeader) {
            $.isResourcePoolLeader = isResourcePoolLeader;
            return this;
        }

        public Builder lifecycleStateNotEqualTo(@Nullable String lifecycleStateNotEqualTo) {
            $.lifecycleStateNotEqualTo = lifecycleStateNotEqualTo;
            return this;
        }

        /**
         * @param resourcePoolLeaderId The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder resourcePoolLeaderId(@Nullable String resourcePoolLeaderId) {
            $.resourcePoolLeaderId = resourcePoolLeaderId;
            return this;
        }

        /**
         * @param state The current state of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetAutonomousDatabasesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetAutonomousDatabasesPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
