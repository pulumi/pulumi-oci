// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.inputs.GetDbNodeConsoleHistoriesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDbNodeConsoleHistoriesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDbNodeConsoleHistoriesPlainArgs Empty = new GetDbNodeConsoleHistoriesPlainArgs();

    /**
     * The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="dbNodeId", required=true)
    private String dbNodeId;

    /**
     * @return The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String dbNodeId() {
        return this.dbNodeId;
    }

    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetDbNodeConsoleHistoriesFilter> filters;

    public Optional<List<GetDbNodeConsoleHistoriesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetDbNodeConsoleHistoriesPlainArgs() {}

    private GetDbNodeConsoleHistoriesPlainArgs(GetDbNodeConsoleHistoriesPlainArgs $) {
        this.dbNodeId = $.dbNodeId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDbNodeConsoleHistoriesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDbNodeConsoleHistoriesPlainArgs $;

        public Builder() {
            $ = new GetDbNodeConsoleHistoriesPlainArgs();
        }

        public Builder(GetDbNodeConsoleHistoriesPlainArgs defaults) {
            $ = new GetDbNodeConsoleHistoriesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbNodeId The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder dbNodeId(String dbNodeId) {
            $.dbNodeId = dbNodeId;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetDbNodeConsoleHistoriesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDbNodeConsoleHistoriesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetDbNodeConsoleHistoriesPlainArgs build() {
            if ($.dbNodeId == null) {
                throw new MissingRequiredPropertyException("GetDbNodeConsoleHistoriesPlainArgs", "dbNodeId");
            }
            return $;
        }
    }

}
