// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.GetDbSystemsUpgradeHistoryEntriesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDbSystemsUpgradeHistoryEntriesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDbSystemsUpgradeHistoryEntriesArgs Empty = new GetDbSystemsUpgradeHistoryEntriesArgs();

    /**
     * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="dbSystemId", required=true)
    private Output<String> dbSystemId;

    /**
     * @return The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> dbSystemId() {
        return this.dbSystemId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetDbSystemsUpgradeHistoryEntriesFilterArgs>> filters;

    public Optional<Output<List<GetDbSystemsUpgradeHistoryEntriesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only upgrade history entries that match the given lifecycle state exactly.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only upgrade history entries that match the given lifecycle state exactly.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
     * 
     */
    @Import(name="upgradeAction")
    private @Nullable Output<String> upgradeAction;

    /**
     * @return A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
     * 
     */
    public Optional<Output<String>> upgradeAction() {
        return Optional.ofNullable(this.upgradeAction);
    }

    private GetDbSystemsUpgradeHistoryEntriesArgs() {}

    private GetDbSystemsUpgradeHistoryEntriesArgs(GetDbSystemsUpgradeHistoryEntriesArgs $) {
        this.dbSystemId = $.dbSystemId;
        this.filters = $.filters;
        this.state = $.state;
        this.upgradeAction = $.upgradeAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDbSystemsUpgradeHistoryEntriesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDbSystemsUpgradeHistoryEntriesArgs $;

        public Builder() {
            $ = new GetDbSystemsUpgradeHistoryEntriesArgs();
        }

        public Builder(GetDbSystemsUpgradeHistoryEntriesArgs defaults) {
            $ = new GetDbSystemsUpgradeHistoryEntriesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbSystemId The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(Output<String> dbSystemId) {
            $.dbSystemId = dbSystemId;
            return this;
        }

        /**
         * @param dbSystemId The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(String dbSystemId) {
            return dbSystemId(Output.of(dbSystemId));
        }

        public Builder filters(@Nullable Output<List<GetDbSystemsUpgradeHistoryEntriesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetDbSystemsUpgradeHistoryEntriesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetDbSystemsUpgradeHistoryEntriesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state A filter to return only upgrade history entries that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only upgrade history entries that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param upgradeAction A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
         * 
         * @return builder
         * 
         */
        public Builder upgradeAction(@Nullable Output<String> upgradeAction) {
            $.upgradeAction = upgradeAction;
            return this;
        }

        /**
         * @param upgradeAction A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
         * 
         * @return builder
         * 
         */
        public Builder upgradeAction(String upgradeAction) {
            return upgradeAction(Output.of(upgradeAction));
        }

        public GetDbSystemsUpgradeHistoryEntriesArgs build() {
            $.dbSystemId = Objects.requireNonNull($.dbSystemId, "expected parameter 'dbSystemId' to be non-null");
            return $;
        }
    }

}
