// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.inputs.GetGiVersionMinorVersionsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGiVersionMinorVersionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGiVersionMinorVersionsPlainArgs Empty = new GetGiVersionMinorVersionsPlainArgs();

    /**
     * The target availability domain. Only passed if the limit is AD-specific.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable String availabilityDomain;

    /**
     * @return The target availability domain. Only passed if the limit is AD-specific.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetGiVersionMinorVersionsFilter> filters;

    public Optional<List<GetGiVersionMinorVersionsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * If true, returns the Grid Infrastructure versions that can be used for provisioning a cluster
     * 
     */
    @Import(name="isGiVersionForProvisioning")
    private @Nullable Boolean isGiVersionForProvisioning;

    /**
     * @return If true, returns the Grid Infrastructure versions that can be used for provisioning a cluster
     * 
     */
    public Optional<Boolean> isGiVersionForProvisioning() {
        return Optional.ofNullable(this.isGiVersionForProvisioning);
    }

    /**
     * If provided, filters the results for the given shape.
     * 
     */
    @Import(name="shape")
    private @Nullable String shape;

    /**
     * @return If provided, filters the results for the given shape.
     * 
     */
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * If provided, filters the results to the set of database versions which are supported for the given shape family.
     * 
     */
    @Import(name="shapeFamily")
    private @Nullable String shapeFamily;

    /**
     * @return If provided, filters the results to the set of database versions which are supported for the given shape family.
     * 
     */
    public Optional<String> shapeFamily() {
        return Optional.ofNullable(this.shapeFamily);
    }

    /**
     * The Oracle Grid Infrastructure major version.
     * 
     */
    @Import(name="version", required=true)
    private String version;

    /**
     * @return The Oracle Grid Infrastructure major version.
     * 
     */
    public String version() {
        return this.version;
    }

    private GetGiVersionMinorVersionsPlainArgs() {}

    private GetGiVersionMinorVersionsPlainArgs(GetGiVersionMinorVersionsPlainArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.isGiVersionForProvisioning = $.isGiVersionForProvisioning;
        this.shape = $.shape;
        this.shapeFamily = $.shapeFamily;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGiVersionMinorVersionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGiVersionMinorVersionsPlainArgs $;

        public Builder() {
            $ = new GetGiVersionMinorVersionsPlainArgs();
        }

        public Builder(GetGiVersionMinorVersionsPlainArgs defaults) {
            $ = new GetGiVersionMinorVersionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The target availability domain. Only passed if the limit is AD-specific.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetGiVersionMinorVersionsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetGiVersionMinorVersionsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isGiVersionForProvisioning If true, returns the Grid Infrastructure versions that can be used for provisioning a cluster
         * 
         * @return builder
         * 
         */
        public Builder isGiVersionForProvisioning(@Nullable Boolean isGiVersionForProvisioning) {
            $.isGiVersionForProvisioning = isGiVersionForProvisioning;
            return this;
        }

        /**
         * @param shape If provided, filters the results for the given shape.
         * 
         * @return builder
         * 
         */
        public Builder shape(@Nullable String shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shapeFamily If provided, filters the results to the set of database versions which are supported for the given shape family.
         * 
         * @return builder
         * 
         */
        public Builder shapeFamily(@Nullable String shapeFamily) {
            $.shapeFamily = shapeFamily;
            return this;
        }

        /**
         * @param version The Oracle Grid Infrastructure major version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            $.version = version;
            return this;
        }

        public GetGiVersionMinorVersionsPlainArgs build() {
            if ($.version == null) {
                throw new MissingRequiredPropertyException("GetGiVersionMinorVersionsPlainArgs", "version");
            }
            return $;
        }
    }

}
