// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedPreferredCredentialPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedPreferredCredentialPlainArgs Empty = new GetManagedPreferredCredentialPlainArgs();

    /**
     * The name of the preferred credential.
     * 
     */
    @Import(name="credentialName", required=true)
    private String credentialName;

    /**
     * @return The name of the preferred credential.
     * 
     */
    public String credentialName() {
        return this.credentialName;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private String managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Named Credential that contains the database user password metadata.
     * 
     */
    @Import(name="namedCredentialId")
    private @Nullable String namedCredentialId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Named Credential that contains the database user password metadata.
     * 
     */
    public Optional<String> namedCredentialId() {
        return Optional.ofNullable(this.namedCredentialId);
    }

    private GetManagedPreferredCredentialPlainArgs() {}

    private GetManagedPreferredCredentialPlainArgs(GetManagedPreferredCredentialPlainArgs $) {
        this.credentialName = $.credentialName;
        this.managedDatabaseId = $.managedDatabaseId;
        this.namedCredentialId = $.namedCredentialId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedPreferredCredentialPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedPreferredCredentialPlainArgs $;

        public Builder() {
            $ = new GetManagedPreferredCredentialPlainArgs();
        }

        public Builder(GetManagedPreferredCredentialPlainArgs defaults) {
            $ = new GetManagedPreferredCredentialPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentialName The name of the preferred credential.
         * 
         * @return builder
         * 
         */
        public Builder credentialName(String credentialName) {
            $.credentialName = credentialName;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param namedCredentialId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Named Credential that contains the database user password metadata.
         * 
         * @return builder
         * 
         */
        public Builder namedCredentialId(@Nullable String namedCredentialId) {
            $.namedCredentialId = namedCredentialId;
            return this;
        }

        public GetManagedPreferredCredentialPlainArgs build() {
            if ($.credentialName == null) {
                throw new MissingRequiredPropertyException("GetManagedPreferredCredentialPlainArgs", "credentialName");
            }
            if ($.managedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetManagedPreferredCredentialPlainArgs", "managedDatabaseId");
            }
            return $;
        }
    }

}
