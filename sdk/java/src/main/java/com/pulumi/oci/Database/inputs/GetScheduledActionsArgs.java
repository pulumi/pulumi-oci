// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.inputs.GetScheduledActionsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetScheduledActionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetScheduledActionsArgs Empty = new GetScheduledActionsArgs();

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetScheduledActionsFilterArgs>> filters;

    public Optional<Output<List<GetScheduledActionsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the given Scheduled Action id exactly.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A filter to return only resources that match the given Scheduled Action id exactly.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A filter to return only resources that match the given scheduling policy id exactly.
     * 
     */
    @Import(name="schedulingPlanId")
    private @Nullable Output<String> schedulingPlanId;

    /**
     * @return A filter to return only resources that match the given scheduling policy id exactly.
     * 
     */
    public Optional<Output<String>> schedulingPlanId() {
        return Optional.ofNullable(this.schedulingPlanId);
    }

    /**
     * A filter to return only resources that match the given service type exactly.
     * 
     */
    @Import(name="serviceType")
    private @Nullable Output<String> serviceType;

    /**
     * @return A filter to return only resources that match the given service type exactly.
     * 
     */
    public Optional<Output<String>> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetScheduledActionsArgs() {}

    private GetScheduledActionsArgs(GetScheduledActionsArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.schedulingPlanId = $.schedulingPlanId;
        this.serviceType = $.serviceType;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetScheduledActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetScheduledActionsArgs $;

        public Builder() {
            $ = new GetScheduledActionsArgs();
        }

        public Builder(GetScheduledActionsArgs defaults) {
            $ = new GetScheduledActionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetScheduledActionsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetScheduledActionsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetScheduledActionsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id A filter to return only resources that match the given Scheduled Action id exactly.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A filter to return only resources that match the given Scheduled Action id exactly.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param schedulingPlanId A filter to return only resources that match the given scheduling policy id exactly.
         * 
         * @return builder
         * 
         */
        public Builder schedulingPlanId(@Nullable Output<String> schedulingPlanId) {
            $.schedulingPlanId = schedulingPlanId;
            return this;
        }

        /**
         * @param schedulingPlanId A filter to return only resources that match the given scheduling policy id exactly.
         * 
         * @return builder
         * 
         */
        public Builder schedulingPlanId(String schedulingPlanId) {
            return schedulingPlanId(Output.of(schedulingPlanId));
        }

        /**
         * @param serviceType A filter to return only resources that match the given service type exactly.
         * 
         * @return builder
         * 
         */
        public Builder serviceType(@Nullable Output<String> serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        /**
         * @param serviceType A filter to return only resources that match the given service type exactly.
         * 
         * @return builder
         * 
         */
        public Builder serviceType(String serviceType) {
            return serviceType(Output.of(serviceType));
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetScheduledActionsArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetScheduledActionsArgs", "compartmentId");
            }
            return $;
        }
    }

}
