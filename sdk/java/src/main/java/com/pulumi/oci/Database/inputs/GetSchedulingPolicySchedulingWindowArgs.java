// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetSchedulingPolicySchedulingWindowArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchedulingPolicySchedulingWindowArgs Empty = new GetSchedulingPolicySchedulingWindowArgs();

    /**
     * The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="schedulingPolicyId", required=true)
    private Output<String> schedulingPolicyId;

    /**
     * @return The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> schedulingPolicyId() {
        return this.schedulingPolicyId;
    }

    /**
     * The Scheduling Window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="schedulingWindowId", required=true)
    private Output<String> schedulingWindowId;

    /**
     * @return The Scheduling Window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> schedulingWindowId() {
        return this.schedulingWindowId;
    }

    private GetSchedulingPolicySchedulingWindowArgs() {}

    private GetSchedulingPolicySchedulingWindowArgs(GetSchedulingPolicySchedulingWindowArgs $) {
        this.schedulingPolicyId = $.schedulingPolicyId;
        this.schedulingWindowId = $.schedulingWindowId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchedulingPolicySchedulingWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchedulingPolicySchedulingWindowArgs $;

        public Builder() {
            $ = new GetSchedulingPolicySchedulingWindowArgs();
        }

        public Builder(GetSchedulingPolicySchedulingWindowArgs defaults) {
            $ = new GetSchedulingPolicySchedulingWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param schedulingPolicyId The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder schedulingPolicyId(Output<String> schedulingPolicyId) {
            $.schedulingPolicyId = schedulingPolicyId;
            return this;
        }

        /**
         * @param schedulingPolicyId The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder schedulingPolicyId(String schedulingPolicyId) {
            return schedulingPolicyId(Output.of(schedulingPolicyId));
        }

        /**
         * @param schedulingWindowId The Scheduling Window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder schedulingWindowId(Output<String> schedulingWindowId) {
            $.schedulingWindowId = schedulingWindowId;
            return this;
        }

        /**
         * @param schedulingWindowId The Scheduling Window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder schedulingWindowId(String schedulingWindowId) {
            return schedulingWindowId(Output.of(schedulingWindowId));
        }

        public GetSchedulingPolicySchedulingWindowArgs build() {
            if ($.schedulingPolicyId == null) {
                throw new MissingRequiredPropertyException("GetSchedulingPolicySchedulingWindowArgs", "schedulingPolicyId");
            }
            if ($.schedulingWindowId == null) {
                throw new MissingRequiredPropertyException("GetSchedulingPolicySchedulingWindowArgs", "schedulingWindowId");
            }
            return $;
        }
    }

}
