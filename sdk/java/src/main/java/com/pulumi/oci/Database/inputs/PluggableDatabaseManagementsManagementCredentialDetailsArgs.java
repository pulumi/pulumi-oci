// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PluggableDatabaseManagementsManagementCredentialDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluggableDatabaseManagementsManagementCredentialDetailsArgs Empty = new PluggableDatabaseManagementsManagementCredentialDetailsArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    @Import(name="passwordSecretId", required=true)
    private Output<String> passwordSecretId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Output<String> passwordSecretId() {
        return this.passwordSecretId;
    }

    /**
     * The name of the Oracle Database user that will be used to connect to the database.
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return The name of the Oracle Database user that will be used to connect to the database.
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private PluggableDatabaseManagementsManagementCredentialDetailsArgs() {}

    private PluggableDatabaseManagementsManagementCredentialDetailsArgs(PluggableDatabaseManagementsManagementCredentialDetailsArgs $) {
        this.passwordSecretId = $.passwordSecretId;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluggableDatabaseManagementsManagementCredentialDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluggableDatabaseManagementsManagementCredentialDetailsArgs $;

        public Builder() {
            $ = new PluggableDatabaseManagementsManagementCredentialDetailsArgs();
        }

        public Builder(PluggableDatabaseManagementsManagementCredentialDetailsArgs defaults) {
            $ = new PluggableDatabaseManagementsManagementCredentialDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param passwordSecretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder passwordSecretId(Output<String> passwordSecretId) {
            $.passwordSecretId = passwordSecretId;
            return this;
        }

        /**
         * @param passwordSecretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder passwordSecretId(String passwordSecretId) {
            return passwordSecretId(Output.of(passwordSecretId));
        }

        /**
         * @param userName The name of the Oracle Database user that will be used to connect to the database.
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName The name of the Oracle Database user that will be used to connect to the database.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public PluggableDatabaseManagementsManagementCredentialDetailsArgs build() {
            if ($.passwordSecretId == null) {
                throw new MissingRequiredPropertyException("PluggableDatabaseManagementsManagementCredentialDetailsArgs", "passwordSecretId");
            }
            if ($.userName == null) {
                throw new MissingRequiredPropertyException("PluggableDatabaseManagementsManagementCredentialDetailsArgs", "userName");
            }
            return $;
        }
    }

}
