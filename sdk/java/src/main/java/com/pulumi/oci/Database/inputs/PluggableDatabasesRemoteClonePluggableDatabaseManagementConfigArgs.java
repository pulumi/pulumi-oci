// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs Empty = new PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs();

    /**
     * The status of the Pluggable Database Management service.
     * 
     */
    @Import(name="managementStatus")
    private @Nullable Output<String> managementStatus;

    /**
     * @return The status of the Pluggable Database Management service.
     * 
     */
    public Optional<Output<String>> managementStatus() {
        return Optional.ofNullable(this.managementStatus);
    }

    private PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs() {}

    private PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs(PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs $) {
        this.managementStatus = $.managementStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs $;

        public Builder() {
            $ = new PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs();
        }

        public Builder(PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs defaults) {
            $ = new PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managementStatus The status of the Pluggable Database Management service.
         * 
         * @return builder
         * 
         */
        public Builder managementStatus(@Nullable Output<String> managementStatus) {
            $.managementStatus = managementStatus;
            return this;
        }

        /**
         * @param managementStatus The status of the Pluggable Database Management service.
         * 
         * @return builder
         * 
         */
        public Builder managementStatus(String managementStatus) {
            return managementStatus(Output.of(managementStatus));
        }

        public PluggableDatabasesRemoteClonePluggableDatabaseManagementConfigArgs build() {
            return $;
        }
    }

}
