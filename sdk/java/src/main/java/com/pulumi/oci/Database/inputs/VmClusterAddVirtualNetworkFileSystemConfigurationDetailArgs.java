// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs Empty = new VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs();

    /**
     * The file system size to be allocated in GBs.
     * 
     */
    @Import(name="fileSystemSizeGb")
    private @Nullable Output<Integer> fileSystemSizeGb;

    /**
     * @return The file system size to be allocated in GBs.
     * 
     */
    public Optional<Output<Integer>> fileSystemSizeGb() {
        return Optional.ofNullable(this.fileSystemSizeGb);
    }

    /**
     * The mount point of file system.
     * 
     */
    @Import(name="mountPoint")
    private @Nullable Output<String> mountPoint;

    /**
     * @return The mount point of file system.
     * 
     */
    public Optional<Output<String>> mountPoint() {
        return Optional.ofNullable(this.mountPoint);
    }

    private VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs() {}

    private VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs(VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs $) {
        this.fileSystemSizeGb = $.fileSystemSizeGb;
        this.mountPoint = $.mountPoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs $;

        public Builder() {
            $ = new VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs();
        }

        public Builder(VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs defaults) {
            $ = new VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileSystemSizeGb The file system size to be allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemSizeGb(@Nullable Output<Integer> fileSystemSizeGb) {
            $.fileSystemSizeGb = fileSystemSizeGb;
            return this;
        }

        /**
         * @param fileSystemSizeGb The file system size to be allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemSizeGb(Integer fileSystemSizeGb) {
            return fileSystemSizeGb(Output.of(fileSystemSizeGb));
        }

        /**
         * @param mountPoint The mount point of file system.
         * 
         * @return builder
         * 
         */
        public Builder mountPoint(@Nullable Output<String> mountPoint) {
            $.mountPoint = mountPoint;
            return this;
        }

        /**
         * @param mountPoint The mount point of file system.
         * 
         * @return builder
         * 
         */
        public Builder mountPoint(String mountPoint) {
            return mountPoint(Output.of(mountPoint));
        }

        public VmClusterAddVirtualNetworkFileSystemConfigurationDetailArgs build() {
            return $;
        }
    }

}
