// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VmClusterNetworkVmNetworkNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VmClusterNetworkVmNetworkNodeArgs Empty = new VmClusterNetworkVmNetworkNodeArgs();

    /**
     * (Updatable) The Db server associated with the node.
     * 
     */
    @Import(name="dbServerId")
    private @Nullable Output<String> dbServerId;

    /**
     * @return (Updatable) The Db server associated with the node.
     * 
     */
    public Optional<Output<String>> dbServerId() {
        return Optional.ofNullable(this.dbServerId);
    }

    /**
     * (Updatable) The node host name.
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    /**
     * @return (Updatable) The node host name.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * (Updatable) The node IP address.
     * 
     */
    @Import(name="ip", required=true)
    private Output<String> ip;

    /**
     * @return (Updatable) The node IP address.
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }

    /**
     * (Updatable) The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) The node virtual IP (VIP) address.
     * 
     */
    @Import(name="vip")
    private @Nullable Output<String> vip;

    /**
     * @return (Updatable) The node virtual IP (VIP) address.
     * 
     */
    public Optional<Output<String>> vip() {
        return Optional.ofNullable(this.vip);
    }

    /**
     * (Updatable) The node virtual IP (VIP) host name.
     * 
     */
    @Import(name="vipHostname")
    private @Nullable Output<String> vipHostname;

    /**
     * @return (Updatable) The node virtual IP (VIP) host name.
     * 
     */
    public Optional<Output<String>> vipHostname() {
        return Optional.ofNullable(this.vipHostname);
    }

    private VmClusterNetworkVmNetworkNodeArgs() {}

    private VmClusterNetworkVmNetworkNodeArgs(VmClusterNetworkVmNetworkNodeArgs $) {
        this.dbServerId = $.dbServerId;
        this.hostname = $.hostname;
        this.ip = $.ip;
        this.state = $.state;
        this.vip = $.vip;
        this.vipHostname = $.vipHostname;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmClusterNetworkVmNetworkNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmClusterNetworkVmNetworkNodeArgs $;

        public Builder() {
            $ = new VmClusterNetworkVmNetworkNodeArgs();
        }

        public Builder(VmClusterNetworkVmNetworkNodeArgs defaults) {
            $ = new VmClusterNetworkVmNetworkNodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbServerId (Updatable) The Db server associated with the node.
         * 
         * @return builder
         * 
         */
        public Builder dbServerId(@Nullable Output<String> dbServerId) {
            $.dbServerId = dbServerId;
            return this;
        }

        /**
         * @param dbServerId (Updatable) The Db server associated with the node.
         * 
         * @return builder
         * 
         */
        public Builder dbServerId(String dbServerId) {
            return dbServerId(Output.of(dbServerId));
        }

        /**
         * @param hostname (Updatable) The node host name.
         * 
         * @return builder
         * 
         */
        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname (Updatable) The node host name.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param ip (Updatable) The node IP address.
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip (Updatable) The node IP address.
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param state (Updatable) The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param vip (Updatable) The node virtual IP (VIP) address.
         * 
         * @return builder
         * 
         */
        public Builder vip(@Nullable Output<String> vip) {
            $.vip = vip;
            return this;
        }

        /**
         * @param vip (Updatable) The node virtual IP (VIP) address.
         * 
         * @return builder
         * 
         */
        public Builder vip(String vip) {
            return vip(Output.of(vip));
        }

        /**
         * @param vipHostname (Updatable) The node virtual IP (VIP) host name.
         * 
         * @return builder
         * 
         */
        public Builder vipHostname(@Nullable Output<String> vipHostname) {
            $.vipHostname = vipHostname;
            return this;
        }

        /**
         * @param vipHostname (Updatable) The node virtual IP (VIP) host name.
         * 
         * @return builder
         * 
         */
        public Builder vipHostname(String vipHostname) {
            return vipHostname(Output.of(vipHostname));
        }

        public VmClusterNetworkVmNetworkNodeArgs build() {
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("VmClusterNetworkVmNetworkNodeArgs", "hostname");
            }
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("VmClusterNetworkVmNetworkNodeArgs", "ip");
            }
            return $;
        }
    }

}
