// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
    /**
     * @return Backup destination details.
     * 
     */
    private @Nullable List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails;
    /**
     * @return Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups. If the number of specified days is 0 then there will be no backups.
     * 
     */
    private @Nullable Integer recoveryWindowInDays;

    private AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig() {}
    /**
     * @return Backup destination details.
     * 
     */
    public List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails() {
        return this.backupDestinationDetails == null ? List.of() : this.backupDestinationDetails;
    }
    /**
     * @return Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups. If the number of specified days is 0 then there will be no backups.
     * 
     */
    public Optional<Integer> recoveryWindowInDays() {
        return Optional.ofNullable(this.recoveryWindowInDays);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails;
        private @Nullable Integer recoveryWindowInDays;
        public Builder() {}
        public Builder(AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupDestinationDetails = defaults.backupDestinationDetails;
    	      this.recoveryWindowInDays = defaults.recoveryWindowInDays;
        }

        @CustomType.Setter
        public Builder backupDestinationDetails(@Nullable List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails) {

            this.backupDestinationDetails = backupDestinationDetails;
            return this;
        }
        public Builder backupDestinationDetails(AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail... backupDestinationDetails) {
            return backupDestinationDetails(List.of(backupDestinationDetails));
        }
        @CustomType.Setter
        public Builder recoveryWindowInDays(@Nullable Integer recoveryWindowInDays) {

            this.recoveryWindowInDays = recoveryWindowInDays;
            return this;
        }
        public AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig build() {
            final var _resultValue = new AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig();
            _resultValue.backupDestinationDetails = backupDestinationDetails;
            _resultValue.recoveryWindowInDays = recoveryWindowInDays;
            return _resultValue;
        }
    }
}
