// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutonomousDatabaseDbToolsDetail {
    /**
     * @return (Updatable) Compute used by database tools.
     * 
     */
    private @Nullable Double computeCount;
    /**
     * @return (Updatable) Indicates whether tool is enabled.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return (Updatable) The max idle time, in minutes, after which the VM used by database tools will be terminated.
     * 
     */
    private @Nullable Integer maxIdleTimeInMinutes;
    /**
     * @return (Updatable) Name of database tool.
     * 
     */
    private String name;

    private AutonomousDatabaseDbToolsDetail() {}
    /**
     * @return (Updatable) Compute used by database tools.
     * 
     */
    public Optional<Double> computeCount() {
        return Optional.ofNullable(this.computeCount);
    }
    /**
     * @return (Updatable) Indicates whether tool is enabled.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return (Updatable) The max idle time, in minutes, after which the VM used by database tools will be terminated.
     * 
     */
    public Optional<Integer> maxIdleTimeInMinutes() {
        return Optional.ofNullable(this.maxIdleTimeInMinutes);
    }
    /**
     * @return (Updatable) Name of database tool.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutonomousDatabaseDbToolsDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double computeCount;
        private @Nullable Boolean isEnabled;
        private @Nullable Integer maxIdleTimeInMinutes;
        private String name;
        public Builder() {}
        public Builder(AutonomousDatabaseDbToolsDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeCount = defaults.computeCount;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxIdleTimeInMinutes = defaults.maxIdleTimeInMinutes;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder computeCount(@Nullable Double computeCount) {

            this.computeCount = computeCount;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxIdleTimeInMinutes(@Nullable Integer maxIdleTimeInMinutes) {

            this.maxIdleTimeInMinutes = maxIdleTimeInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("AutonomousDatabaseDbToolsDetail", "name");
            }
            this.name = name;
            return this;
        }
        public AutonomousDatabaseDbToolsDetail build() {
            final var _resultValue = new AutonomousDatabaseDbToolsDetail();
            _resultValue.computeCount = computeCount;
            _resultValue.isEnabled = isEnabled;
            _resultValue.maxIdleTimeInMinutes = maxIdleTimeInMinutes;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
