// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutonomousDatabaseLongTermBackupSchedule {
    /**
     * @return Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`.
     * 
     */
    private @Nullable Boolean isDisabled;
    /**
     * @return The frequency of the long-term backup schedule
     * 
     */
    private @Nullable String repeatCadence;
    /**
     * @return Retention period, in days, for long-term backups
     * 
     */
    private @Nullable Integer retentionPeriodInDays;
    /**
     * @return The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month.
     * 
     */
    private @Nullable String timeOfBackup;

    private AutonomousDatabaseLongTermBackupSchedule() {}
    /**
     * @return Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`.
     * 
     */
    public Optional<Boolean> isDisabled() {
        return Optional.ofNullable(this.isDisabled);
    }
    /**
     * @return The frequency of the long-term backup schedule
     * 
     */
    public Optional<String> repeatCadence() {
        return Optional.ofNullable(this.repeatCadence);
    }
    /**
     * @return Retention period, in days, for long-term backups
     * 
     */
    public Optional<Integer> retentionPeriodInDays() {
        return Optional.ofNullable(this.retentionPeriodInDays);
    }
    /**
     * @return The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month.
     * 
     */
    public Optional<String> timeOfBackup() {
        return Optional.ofNullable(this.timeOfBackup);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutonomousDatabaseLongTermBackupSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isDisabled;
        private @Nullable String repeatCadence;
        private @Nullable Integer retentionPeriodInDays;
        private @Nullable String timeOfBackup;
        public Builder() {}
        public Builder(AutonomousDatabaseLongTermBackupSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isDisabled = defaults.isDisabled;
    	      this.repeatCadence = defaults.repeatCadence;
    	      this.retentionPeriodInDays = defaults.retentionPeriodInDays;
    	      this.timeOfBackup = defaults.timeOfBackup;
        }

        @CustomType.Setter
        public Builder isDisabled(@Nullable Boolean isDisabled) {

            this.isDisabled = isDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder repeatCadence(@Nullable String repeatCadence) {

            this.repeatCadence = repeatCadence;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriodInDays(@Nullable Integer retentionPeriodInDays) {

            this.retentionPeriodInDays = retentionPeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfBackup(@Nullable String timeOfBackup) {

            this.timeOfBackup = timeOfBackup;
            return this;
        }
        public AutonomousDatabaseLongTermBackupSchedule build() {
            final var _resultValue = new AutonomousDatabaseLongTermBackupSchedule();
            _resultValue.isDisabled = isDisabled;
            _resultValue.repeatCadence = repeatCadence;
            _resultValue.retentionPeriodInDays = retentionPeriodInDays;
            _resultValue.timeOfBackup = timeOfBackup;
            return _resultValue;
        }
    }
}
