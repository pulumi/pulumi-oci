// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseDatabaseStorageSizeDetails {
    /**
     * @return (Updatable) The DATA storage size, in gigabytes, that is applicable for the database.
     * 
     */
    private Integer dataStorageSizeInGb;
    /**
     * @return (Updatable) The RECO storage size, in gigabytes, that is applicable for the database.
     * 
     */
    private Integer recoStorageSizeInGbs;
    /**
     * @return The REDO Log storage size, in gigabytes, that is applicable for the database.
     * 
     */
    private @Nullable Integer redoLogStorageSizeInGbs;

    private DatabaseDatabaseStorageSizeDetails() {}
    /**
     * @return (Updatable) The DATA storage size, in gigabytes, that is applicable for the database.
     * 
     */
    public Integer dataStorageSizeInGb() {
        return this.dataStorageSizeInGb;
    }
    /**
     * @return (Updatable) The RECO storage size, in gigabytes, that is applicable for the database.
     * 
     */
    public Integer recoStorageSizeInGbs() {
        return this.recoStorageSizeInGbs;
    }
    /**
     * @return The REDO Log storage size, in gigabytes, that is applicable for the database.
     * 
     */
    public Optional<Integer> redoLogStorageSizeInGbs() {
        return Optional.ofNullable(this.redoLogStorageSizeInGbs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseDatabaseStorageSizeDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer dataStorageSizeInGb;
        private Integer recoStorageSizeInGbs;
        private @Nullable Integer redoLogStorageSizeInGbs;
        public Builder() {}
        public Builder(DatabaseDatabaseStorageSizeDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataStorageSizeInGb = defaults.dataStorageSizeInGb;
    	      this.recoStorageSizeInGbs = defaults.recoStorageSizeInGbs;
    	      this.redoLogStorageSizeInGbs = defaults.redoLogStorageSizeInGbs;
        }

        @CustomType.Setter
        public Builder dataStorageSizeInGb(Integer dataStorageSizeInGb) {
            if (dataStorageSizeInGb == null) {
              throw new MissingRequiredPropertyException("DatabaseDatabaseStorageSizeDetails", "dataStorageSizeInGb");
            }
            this.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder recoStorageSizeInGbs(Integer recoStorageSizeInGbs) {
            if (recoStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("DatabaseDatabaseStorageSizeDetails", "recoStorageSizeInGbs");
            }
            this.recoStorageSizeInGbs = recoStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder redoLogStorageSizeInGbs(@Nullable Integer redoLogStorageSizeInGbs) {

            this.redoLogStorageSizeInGbs = redoLogStorageSizeInGbs;
            return this;
        }
        public DatabaseDatabaseStorageSizeDetails build() {
            final var _resultValue = new DatabaseDatabaseStorageSizeDetails();
            _resultValue.dataStorageSizeInGb = dataStorageSizeInGb;
            _resultValue.recoStorageSizeInGbs = recoStorageSizeInGbs;
            _resultValue.redoLogStorageSizeInGbs = redoLogStorageSizeInGbs;
            return _resultValue;
        }
    }
}
