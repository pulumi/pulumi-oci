// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseUpgradeDbBackupConfigBackupDestinationDetail {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    private @Nullable String dbrsPolicyId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    private @Nullable String id;
    /**
     * @return Proxy URL to connect to object store.
     * 
     */
    private @Nullable String internetProxy;
    /**
     * @return Indicates whether the backup destination is cross-region or local region.
     * 
     */
    private @Nullable Boolean isRemote;
    /**
     * @return The name of the remote region where the remote automatic incremental backups will be stored.
     * 
     */
    private @Nullable String remoteRegion;
    /**
     * @return Type of the database backup destination.
     * 
     */
    private @Nullable String type;
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    private @Nullable String vpcPassword;
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    private @Nullable String vpcUser;

    private DatabaseUpgradeDbBackupConfigBackupDestinationDetail() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    public Optional<String> dbrsPolicyId() {
        return Optional.ofNullable(this.dbrsPolicyId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Proxy URL to connect to object store.
     * 
     */
    public Optional<String> internetProxy() {
        return Optional.ofNullable(this.internetProxy);
    }
    /**
     * @return Indicates whether the backup destination is cross-region or local region.
     * 
     */
    public Optional<Boolean> isRemote() {
        return Optional.ofNullable(this.isRemote);
    }
    /**
     * @return The name of the remote region where the remote automatic incremental backups will be stored.
     * 
     */
    public Optional<String> remoteRegion() {
        return Optional.ofNullable(this.remoteRegion);
    }
    /**
     * @return Type of the database backup destination.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    public Optional<String> vpcPassword() {
        return Optional.ofNullable(this.vpcPassword);
    }
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    public Optional<String> vpcUser() {
        return Optional.ofNullable(this.vpcUser);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseUpgradeDbBackupConfigBackupDestinationDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dbrsPolicyId;
        private @Nullable String id;
        private @Nullable String internetProxy;
        private @Nullable Boolean isRemote;
        private @Nullable String remoteRegion;
        private @Nullable String type;
        private @Nullable String vpcPassword;
        private @Nullable String vpcUser;
        public Builder() {}
        public Builder(DatabaseUpgradeDbBackupConfigBackupDestinationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbrsPolicyId = defaults.dbrsPolicyId;
    	      this.id = defaults.id;
    	      this.internetProxy = defaults.internetProxy;
    	      this.isRemote = defaults.isRemote;
    	      this.remoteRegion = defaults.remoteRegion;
    	      this.type = defaults.type;
    	      this.vpcPassword = defaults.vpcPassword;
    	      this.vpcUser = defaults.vpcUser;
        }

        @CustomType.Setter
        public Builder dbrsPolicyId(@Nullable String dbrsPolicyId) {

            this.dbrsPolicyId = dbrsPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internetProxy(@Nullable String internetProxy) {

            this.internetProxy = internetProxy;
            return this;
        }
        @CustomType.Setter
        public Builder isRemote(@Nullable Boolean isRemote) {

            this.isRemote = isRemote;
            return this;
        }
        @CustomType.Setter
        public Builder remoteRegion(@Nullable String remoteRegion) {

            this.remoteRegion = remoteRegion;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcPassword(@Nullable String vpcPassword) {

            this.vpcPassword = vpcPassword;
            return this;
        }
        @CustomType.Setter
        public Builder vpcUser(@Nullable String vpcUser) {

            this.vpcUser = vpcUser;
            return this;
        }
        public DatabaseUpgradeDbBackupConfigBackupDestinationDetail build() {
            final var _resultValue = new DatabaseUpgradeDbBackupConfigBackupDestinationDetail();
            _resultValue.dbrsPolicyId = dbrsPolicyId;
            _resultValue.id = id;
            _resultValue.internetProxy = internetProxy;
            _resultValue.isRemote = isRemote;
            _resultValue.remoteRegion = remoteRegion;
            _resultValue.type = type;
            _resultValue.vpcPassword = vpcPassword;
            _resultValue.vpcUser = vpcUser;
            return _resultValue;
        }
    }
}
