// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DbHomeDatabaseEncryptionKeyLocationDetails {
    /**
     * @return Provide the key OCID of a registered Azure key.
     * 
     */
    private @Nullable String azureEncryptionKeyId;
    /**
     * @return Provide the HSM password as you would in RDBMS for External HSM.
     * 
     */
    private @Nullable String hsmPassword;
    /**
     * @return Use &#39;EXTERNAL&#39; for creating a new database or migrating a database key to an External HSM. Use &#39;AZURE&#39; for creating a new database or migrating a database key to Azure.
     * 
     */
    private String providerType;

    private DbHomeDatabaseEncryptionKeyLocationDetails() {}
    /**
     * @return Provide the key OCID of a registered Azure key.
     * 
     */
    public Optional<String> azureEncryptionKeyId() {
        return Optional.ofNullable(this.azureEncryptionKeyId);
    }
    /**
     * @return Provide the HSM password as you would in RDBMS for External HSM.
     * 
     */
    public Optional<String> hsmPassword() {
        return Optional.ofNullable(this.hsmPassword);
    }
    /**
     * @return Use &#39;EXTERNAL&#39; for creating a new database or migrating a database key to an External HSM. Use &#39;AZURE&#39; for creating a new database or migrating a database key to Azure.
     * 
     */
    public String providerType() {
        return this.providerType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DbHomeDatabaseEncryptionKeyLocationDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String azureEncryptionKeyId;
        private @Nullable String hsmPassword;
        private String providerType;
        public Builder() {}
        public Builder(DbHomeDatabaseEncryptionKeyLocationDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureEncryptionKeyId = defaults.azureEncryptionKeyId;
    	      this.hsmPassword = defaults.hsmPassword;
    	      this.providerType = defaults.providerType;
        }

        @CustomType.Setter
        public Builder azureEncryptionKeyId(@Nullable String azureEncryptionKeyId) {

            this.azureEncryptionKeyId = azureEncryptionKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder hsmPassword(@Nullable String hsmPassword) {

            this.hsmPassword = hsmPassword;
            return this;
        }
        @CustomType.Setter
        public Builder providerType(String providerType) {
            if (providerType == null) {
              throw new MissingRequiredPropertyException("DbHomeDatabaseEncryptionKeyLocationDetails", "providerType");
            }
            this.providerType = providerType;
            return this;
        }
        public DbHomeDatabaseEncryptionKeyLocationDetails build() {
            final var _resultValue = new DbHomeDatabaseEncryptionKeyLocationDetails();
            _resultValue.azureEncryptionKeyId = azureEncryptionKeyId;
            _resultValue.hsmPassword = hsmPassword;
            _resultValue.providerType = providerType;
            return _resultValue;
        }
    }
}
