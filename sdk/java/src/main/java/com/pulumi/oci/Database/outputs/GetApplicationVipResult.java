// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApplicationVipResult {
    private String applicationVipId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
     * 
     */
    private String cloudVmClusterId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    private String dbNodeId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The hostname of the application virtual IP (VIP) address.
     * 
     */
    private String hostnameLabel;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application virtual IP (VIP) address.
     * 
     */
    private String id;
    /**
     * @return The application virtual IP (VIP) IPv4 address.
     * 
     */
    private String ipAddress;
    /**
     * @return The application virtual IP (VIP) IPv6 address.
     * 
     */
    private String ipv6address;
    /**
     * @return Additional information about the current lifecycle state of the application virtual IP (VIP) address.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The current lifecycle state of the application virtual IP (VIP) address.
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
     * 
     */
    private String subnetId;
    /**
     * @return The date and time when the create operation for the application virtual IP (VIP) address completed.
     * 
     */
    private String timeAssigned;

    private GetApplicationVipResult() {}
    public String applicationVipId() {
        return this.applicationVipId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
     * 
     */
    public String cloudVmClusterId() {
        return this.cloudVmClusterId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String dbNodeId() {
        return this.dbNodeId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The hostname of the application virtual IP (VIP) address.
     * 
     */
    public String hostnameLabel() {
        return this.hostnameLabel;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application virtual IP (VIP) address.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The application virtual IP (VIP) IPv4 address.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The application virtual IP (VIP) IPv6 address.
     * 
     */
    public String ipv6address() {
        return this.ipv6address;
    }
    /**
     * @return Additional information about the current lifecycle state of the application virtual IP (VIP) address.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The current lifecycle state of the application virtual IP (VIP) address.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The date and time when the create operation for the application virtual IP (VIP) address completed.
     * 
     */
    public String timeAssigned() {
        return this.timeAssigned;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationVipResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationVipId;
        private String cloudVmClusterId;
        private String compartmentId;
        private String dbNodeId;
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private String hostnameLabel;
        private String id;
        private String ipAddress;
        private String ipv6address;
        private String lifecycleDetails;
        private String state;
        private String subnetId;
        private String timeAssigned;
        public Builder() {}
        public Builder(GetApplicationVipResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationVipId = defaults.applicationVipId;
    	      this.cloudVmClusterId = defaults.cloudVmClusterId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbNodeId = defaults.dbNodeId;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostnameLabel = defaults.hostnameLabel;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipv6address = defaults.ipv6address;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.timeAssigned = defaults.timeAssigned;
        }

        @CustomType.Setter
        public Builder applicationVipId(String applicationVipId) {
            if (applicationVipId == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "applicationVipId");
            }
            this.applicationVipId = applicationVipId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudVmClusterId(String cloudVmClusterId) {
            if (cloudVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "cloudVmClusterId");
            }
            this.cloudVmClusterId = cloudVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeId(String dbNodeId) {
            if (dbNodeId == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "dbNodeId");
            }
            this.dbNodeId = dbNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameLabel(String hostnameLabel) {
            if (hostnameLabel == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "hostnameLabel");
            }
            this.hostnameLabel = hostnameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6address(String ipv6address) {
            if (ipv6address == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "ipv6address");
            }
            this.ipv6address = ipv6address;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeAssigned(String timeAssigned) {
            if (timeAssigned == null) {
              throw new MissingRequiredPropertyException("GetApplicationVipResult", "timeAssigned");
            }
            this.timeAssigned = timeAssigned;
            return this;
        }
        public GetApplicationVipResult build() {
            final var _resultValue = new GetApplicationVipResult();
            _resultValue.applicationVipId = applicationVipId;
            _resultValue.cloudVmClusterId = cloudVmClusterId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbNodeId = dbNodeId;
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostnameLabel = hostnameLabel;
            _resultValue.id = id;
            _resultValue.ipAddress = ipAddress;
            _resultValue.ipv6address = ipv6address;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.timeAssigned = timeAssigned;
            return _resultValue;
        }
    }
}
