// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetAutonomousCharacterSetsAutonomousDatabaseCharacterSet;
import com.pulumi.oci.Database.outputs.GetAutonomousCharacterSetsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousCharacterSetsResult {
    /**
     * @return The list of autonomous_database_character_sets.
     * 
     */
    private @Nullable List<GetAutonomousCharacterSetsAutonomousDatabaseCharacterSet> autonomousDatabaseCharacterSets;
    private @Nullable String characterSetType;
    private @Nullable List<GetAutonomousCharacterSetsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable Boolean isDedicated;
    private @Nullable Boolean isShared;

    private GetAutonomousCharacterSetsResult() {}
    /**
     * @return The list of autonomous_database_character_sets.
     * 
     */
    public List<GetAutonomousCharacterSetsAutonomousDatabaseCharacterSet> autonomousDatabaseCharacterSets() {
        return this.autonomousDatabaseCharacterSets == null ? List.of() : this.autonomousDatabaseCharacterSets;
    }
    public Optional<String> characterSetType() {
        return Optional.ofNullable(this.characterSetType);
    }
    public List<GetAutonomousCharacterSetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Boolean> isDedicated() {
        return Optional.ofNullable(this.isDedicated);
    }
    public Optional<Boolean> isShared() {
        return Optional.ofNullable(this.isShared);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousCharacterSetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetAutonomousCharacterSetsAutonomousDatabaseCharacterSet> autonomousDatabaseCharacterSets;
        private @Nullable String characterSetType;
        private @Nullable List<GetAutonomousCharacterSetsFilter> filters;
        private @Nullable String id;
        private @Nullable Boolean isDedicated;
        private @Nullable Boolean isShared;
        public Builder() {}
        public Builder(GetAutonomousCharacterSetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDatabaseCharacterSets = defaults.autonomousDatabaseCharacterSets;
    	      this.characterSetType = defaults.characterSetType;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isDedicated = defaults.isDedicated;
    	      this.isShared = defaults.isShared;
        }

        @CustomType.Setter
        public Builder autonomousDatabaseCharacterSets(@Nullable List<GetAutonomousCharacterSetsAutonomousDatabaseCharacterSet> autonomousDatabaseCharacterSets) {
            this.autonomousDatabaseCharacterSets = autonomousDatabaseCharacterSets;
            return this;
        }
        public Builder autonomousDatabaseCharacterSets(GetAutonomousCharacterSetsAutonomousDatabaseCharacterSet... autonomousDatabaseCharacterSets) {
            return autonomousDatabaseCharacterSets(List.of(autonomousDatabaseCharacterSets));
        }
        @CustomType.Setter
        public Builder characterSetType(@Nullable String characterSetType) {
            this.characterSetType = characterSetType;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAutonomousCharacterSetsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAutonomousCharacterSetsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDedicated(@Nullable Boolean isDedicated) {
            this.isDedicated = isDedicated;
            return this;
        }
        @CustomType.Setter
        public Builder isShared(@Nullable Boolean isShared) {
            this.isShared = isShared;
            return this;
        }
        public GetAutonomousCharacterSetsResult build() {
            final var o = new GetAutonomousCharacterSetsResult();
            o.autonomousDatabaseCharacterSets = autonomousDatabaseCharacterSets;
            o.characterSetType = characterSetType;
            o.filters = filters;
            o.id = id;
            o.isDedicated = isDedicated;
            o.isShared = isShared;
            return o;
        }
    }
}
