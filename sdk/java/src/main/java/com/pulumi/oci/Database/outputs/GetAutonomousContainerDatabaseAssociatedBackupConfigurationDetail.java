// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail {
    /**
     * @return The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
     * 
     */
    private List<String> backupDestinationAttachHistories;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    private String dbrsPolicyId;
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    private String id;
    /**
     * @return Proxy URL to connect to object store.
     * 
     */
    private String internetProxy;
    /**
     * @return Number of days between the current and earliest point of recoverability covered by automatic backups.
     * 
     */
    private Integer recoveryWindowInDays;
    /**
     * @return The total space utilized (in GBs) by this Autonomous Container Database on this backup destination, rounded to the nearest integer.
     * 
     */
    private Integer spaceUtilizedInGbs;
    /**
     * @return The latest timestamp when the backup destination details, such as &#39;spaceUtilized,&#39; are updated.
     * 
     */
    private String timeAtWhichStorageDetailsAreUpdated;
    /**
     * @return Type of the database backup destination.
     * 
     */
    private String type;
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    private String vpcPassword;
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    private String vpcUser;

    private GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail() {}
    /**
     * @return The timestamps at which this backup destination is used as the preferred destination to host the Autonomous Container Database backups.
     * 
     */
    public List<String> backupDestinationAttachHistories() {
        return this.backupDestinationAttachHistories;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     * 
     */
    public String dbrsPolicyId() {
        return this.dbrsPolicyId;
    }
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Proxy URL to connect to object store.
     * 
     */
    public String internetProxy() {
        return this.internetProxy;
    }
    /**
     * @return Number of days between the current and earliest point of recoverability covered by automatic backups.
     * 
     */
    public Integer recoveryWindowInDays() {
        return this.recoveryWindowInDays;
    }
    /**
     * @return The total space utilized (in GBs) by this Autonomous Container Database on this backup destination, rounded to the nearest integer.
     * 
     */
    public Integer spaceUtilizedInGbs() {
        return this.spaceUtilizedInGbs;
    }
    /**
     * @return The latest timestamp when the backup destination details, such as &#39;spaceUtilized,&#39; are updated.
     * 
     */
    public String timeAtWhichStorageDetailsAreUpdated() {
        return this.timeAtWhichStorageDetailsAreUpdated;
    }
    /**
     * @return Type of the database backup destination.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     * 
     */
    public String vpcPassword() {
        return this.vpcPassword;
    }
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     * 
     */
    public String vpcUser() {
        return this.vpcUser;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> backupDestinationAttachHistories;
        private String dbrsPolicyId;
        private String id;
        private String internetProxy;
        private Integer recoveryWindowInDays;
        private Integer spaceUtilizedInGbs;
        private String timeAtWhichStorageDetailsAreUpdated;
        private String type;
        private String vpcPassword;
        private String vpcUser;
        public Builder() {}
        public Builder(GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupDestinationAttachHistories = defaults.backupDestinationAttachHistories;
    	      this.dbrsPolicyId = defaults.dbrsPolicyId;
    	      this.id = defaults.id;
    	      this.internetProxy = defaults.internetProxy;
    	      this.recoveryWindowInDays = defaults.recoveryWindowInDays;
    	      this.spaceUtilizedInGbs = defaults.spaceUtilizedInGbs;
    	      this.timeAtWhichStorageDetailsAreUpdated = defaults.timeAtWhichStorageDetailsAreUpdated;
    	      this.type = defaults.type;
    	      this.vpcPassword = defaults.vpcPassword;
    	      this.vpcUser = defaults.vpcUser;
        }

        @CustomType.Setter
        public Builder backupDestinationAttachHistories(List<String> backupDestinationAttachHistories) {
            if (backupDestinationAttachHistories == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "backupDestinationAttachHistories");
            }
            this.backupDestinationAttachHistories = backupDestinationAttachHistories;
            return this;
        }
        public Builder backupDestinationAttachHistories(String... backupDestinationAttachHistories) {
            return backupDestinationAttachHistories(List.of(backupDestinationAttachHistories));
        }
        @CustomType.Setter
        public Builder dbrsPolicyId(String dbrsPolicyId) {
            if (dbrsPolicyId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "dbrsPolicyId");
            }
            this.dbrsPolicyId = dbrsPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internetProxy(String internetProxy) {
            if (internetProxy == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "internetProxy");
            }
            this.internetProxy = internetProxy;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryWindowInDays(Integer recoveryWindowInDays) {
            if (recoveryWindowInDays == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "recoveryWindowInDays");
            }
            this.recoveryWindowInDays = recoveryWindowInDays;
            return this;
        }
        @CustomType.Setter
        public Builder spaceUtilizedInGbs(Integer spaceUtilizedInGbs) {
            if (spaceUtilizedInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "spaceUtilizedInGbs");
            }
            this.spaceUtilizedInGbs = spaceUtilizedInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder timeAtWhichStorageDetailsAreUpdated(String timeAtWhichStorageDetailsAreUpdated) {
            if (timeAtWhichStorageDetailsAreUpdated == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "timeAtWhichStorageDetailsAreUpdated");
            }
            this.timeAtWhichStorageDetailsAreUpdated = timeAtWhichStorageDetailsAreUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcPassword(String vpcPassword) {
            if (vpcPassword == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "vpcPassword");
            }
            this.vpcPassword = vpcPassword;
            return this;
        }
        @CustomType.Setter
        public Builder vpcUser(String vpcUser) {
            if (vpcUser == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail", "vpcUser");
            }
            this.vpcUser = vpcUser;
            return this;
        }
        public GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail build() {
            final var _resultValue = new GetAutonomousContainerDatabaseAssociatedBackupConfigurationDetail();
            _resultValue.backupDestinationAttachHistories = backupDestinationAttachHistories;
            _resultValue.dbrsPolicyId = dbrsPolicyId;
            _resultValue.id = id;
            _resultValue.internetProxy = internetProxy;
            _resultValue.recoveryWindowInDays = recoveryWindowInDays;
            _resultValue.spaceUtilizedInGbs = spaceUtilizedInGbs;
            _resultValue.timeAtWhichStorageDetailsAreUpdated = timeAtWhichStorageDetailsAreUpdated;
            _resultValue.type = type;
            _resultValue.vpcPassword = vpcPassword;
            _resultValue.vpcUser = vpcUser;
            return _resultValue;
        }
    }
}
