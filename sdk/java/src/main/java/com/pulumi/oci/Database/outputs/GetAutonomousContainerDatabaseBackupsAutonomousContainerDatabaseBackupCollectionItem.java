// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItemAutonomousDatabase;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem {
    /**
     * @return The user-friendly name for the Autonomous Container Database when the Backup was initiated. This name need not be unique. This field captures the name at the time of backup creation, accounting for possible later updates to the display name.
     * 
     */
    private String acdDisplayName;
    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String autonomousContainerDatabaseId;
    /**
     * @return List of Autonomous Databases that is part of this Autonomous Container Database Backup
     * 
     */
    private List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItemAutonomousDatabase> autonomousDatabases;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
     * 
     */
    private String id;
    /**
     * @return A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    private String infrastructureType;
    /**
     * @return Indicates whether the backup is user-initiated or automatic.
     * 
     */
    private Boolean isAutomatic;
    /**
     * @return Whether backup is for remote-region or local region
     * 
     */
    private Boolean isRemoteBackup;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Retention period, in days, for long-term backups
     * 
     */
    private Integer retentionPeriodInDays;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the backup completed.
     * 
     */
    private String timeEnded;
    /**
     * @return The date and time the backup started.
     * 
     */
    private String timeStarted;
    /**
     * @return The type of backup.
     * 
     */
    private String type;

    private GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem() {}
    /**
     * @return The user-friendly name for the Autonomous Container Database when the Backup was initiated. This name need not be unique. This field captures the name at the time of backup creation, accounting for possible later updates to the display name.
     * 
     */
    public String acdDisplayName() {
        return this.acdDisplayName;
    }
    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String autonomousContainerDatabaseId() {
        return this.autonomousContainerDatabaseId;
    }
    /**
     * @return List of Autonomous Databases that is part of this Autonomous Container Database Backup
     * 
     */
    public List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItemAutonomousDatabase> autonomousDatabases() {
        return this.autonomousDatabases;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    public String infrastructureType() {
        return this.infrastructureType;
    }
    /**
     * @return Indicates whether the backup is user-initiated or automatic.
     * 
     */
    public Boolean isAutomatic() {
        return this.isAutomatic;
    }
    /**
     * @return Whether backup is for remote-region or local region
     * 
     */
    public Boolean isRemoteBackup() {
        return this.isRemoteBackup;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Retention period, in days, for long-term backups
     * 
     */
    public Integer retentionPeriodInDays() {
        return this.retentionPeriodInDays;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the backup completed.
     * 
     */
    public String timeEnded() {
        return this.timeEnded;
    }
    /**
     * @return The date and time the backup started.
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }
    /**
     * @return The type of backup.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String acdDisplayName;
        private String autonomousContainerDatabaseId;
        private List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItemAutonomousDatabase> autonomousDatabases;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String infrastructureType;
        private Boolean isAutomatic;
        private Boolean isRemoteBackup;
        private String lifecycleDetails;
        private Integer retentionPeriodInDays;
        private String state;
        private Map<String,String> systemTags;
        private String timeEnded;
        private String timeStarted;
        private String type;
        public Builder() {}
        public Builder(GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acdDisplayName = defaults.acdDisplayName;
    	      this.autonomousContainerDatabaseId = defaults.autonomousContainerDatabaseId;
    	      this.autonomousDatabases = defaults.autonomousDatabases;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.isAutomatic = defaults.isAutomatic;
    	      this.isRemoteBackup = defaults.isRemoteBackup;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.retentionPeriodInDays = defaults.retentionPeriodInDays;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder acdDisplayName(String acdDisplayName) {
            if (acdDisplayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "acdDisplayName");
            }
            this.acdDisplayName = acdDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousContainerDatabaseId(String autonomousContainerDatabaseId) {
            if (autonomousContainerDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "autonomousContainerDatabaseId");
            }
            this.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousDatabases(List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItemAutonomousDatabase> autonomousDatabases) {
            if (autonomousDatabases == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "autonomousDatabases");
            }
            this.autonomousDatabases = autonomousDatabases;
            return this;
        }
        public Builder autonomousDatabases(GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItemAutonomousDatabase... autonomousDatabases) {
            return autonomousDatabases(List.of(autonomousDatabases));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureType(String infrastructureType) {
            if (infrastructureType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "infrastructureType");
            }
            this.infrastructureType = infrastructureType;
            return this;
        }
        @CustomType.Setter
        public Builder isAutomatic(Boolean isAutomatic) {
            if (isAutomatic == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "isAutomatic");
            }
            this.isAutomatic = isAutomatic;
            return this;
        }
        @CustomType.Setter
        public Builder isRemoteBackup(Boolean isRemoteBackup) {
            if (isRemoteBackup == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "isRemoteBackup");
            }
            this.isRemoteBackup = isRemoteBackup;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriodInDays(Integer retentionPeriodInDays) {
            if (retentionPeriodInDays == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "retentionPeriodInDays");
            }
            this.retentionPeriodInDays = retentionPeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnded(String timeEnded) {
            if (timeEnded == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "timeEnded");
            }
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            if (timeStarted == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "timeStarted");
            }
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem build() {
            final var _resultValue = new GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollectionItem();
            _resultValue.acdDisplayName = acdDisplayName;
            _resultValue.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            _resultValue.autonomousDatabases = autonomousDatabases;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.infrastructureType = infrastructureType;
            _resultValue.isAutomatic = isAutomatic;
            _resultValue.isRemoteBackup = isRemoteBackup;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.retentionPeriodInDays = retentionPeriodInDays;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeEnded = timeEnded;
            _resultValue.timeStarted = timeStarted;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
