// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollection;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabaseBackupsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousContainerDatabaseBackupsResult {
    /**
     * @return The list of autonomous_container_database_backup_collection.
     * 
     */
    private List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollection> autonomousContainerDatabaseBackupCollections;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Container Database.
     * 
     */
    private @Nullable String autonomousContainerDatabaseId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A user-friendly name for the backup. This name need not be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetAutonomousContainerDatabaseBackupsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    private @Nullable String infrastructureType;
    private @Nullable Boolean isRemote;
    /**
     * @return The current state of the backup.
     * 
     */
    private @Nullable String state;

    private GetAutonomousContainerDatabaseBackupsResult() {}
    /**
     * @return The list of autonomous_container_database_backup_collection.
     * 
     */
    public List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollection> autonomousContainerDatabaseBackupCollections() {
        return this.autonomousContainerDatabaseBackupCollections;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Container Database.
     * 
     */
    public Optional<String> autonomousContainerDatabaseId() {
        return Optional.ofNullable(this.autonomousContainerDatabaseId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A user-friendly name for the backup. This name need not be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetAutonomousContainerDatabaseBackupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    public Optional<String> infrastructureType() {
        return Optional.ofNullable(this.infrastructureType);
    }
    public Optional<Boolean> isRemote() {
        return Optional.ofNullable(this.isRemote);
    }
    /**
     * @return The current state of the backup.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousContainerDatabaseBackupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollection> autonomousContainerDatabaseBackupCollections;
        private @Nullable String autonomousContainerDatabaseId;
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetAutonomousContainerDatabaseBackupsFilter> filters;
        private String id;
        private @Nullable String infrastructureType;
        private @Nullable Boolean isRemote;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetAutonomousContainerDatabaseBackupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousContainerDatabaseBackupCollections = defaults.autonomousContainerDatabaseBackupCollections;
    	      this.autonomousContainerDatabaseId = defaults.autonomousContainerDatabaseId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.isRemote = defaults.isRemote;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder autonomousContainerDatabaseBackupCollections(List<GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollection> autonomousContainerDatabaseBackupCollections) {
            if (autonomousContainerDatabaseBackupCollections == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsResult", "autonomousContainerDatabaseBackupCollections");
            }
            this.autonomousContainerDatabaseBackupCollections = autonomousContainerDatabaseBackupCollections;
            return this;
        }
        public Builder autonomousContainerDatabaseBackupCollections(GetAutonomousContainerDatabaseBackupsAutonomousContainerDatabaseBackupCollection... autonomousContainerDatabaseBackupCollections) {
            return autonomousContainerDatabaseBackupCollections(List.of(autonomousContainerDatabaseBackupCollections));
        }
        @CustomType.Setter
        public Builder autonomousContainerDatabaseId(@Nullable String autonomousContainerDatabaseId) {

            this.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAutonomousContainerDatabaseBackupsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetAutonomousContainerDatabaseBackupsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabaseBackupsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureType(@Nullable String infrastructureType) {

            this.infrastructureType = infrastructureType;
            return this;
        }
        @CustomType.Setter
        public Builder isRemote(@Nullable Boolean isRemote) {

            this.isRemote = isRemote;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetAutonomousContainerDatabaseBackupsResult build() {
            final var _resultValue = new GetAutonomousContainerDatabaseBackupsResult();
            _resultValue.autonomousContainerDatabaseBackupCollections = autonomousContainerDatabaseBackupCollections;
            _resultValue.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.infrastructureType = infrastructureType;
            _resultValue.isRemote = isRemote;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
