// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
    /**
     * @return Backup destination details.
     * 
     */
    private List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails;
    /**
     * @return Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups. If the number of specified days is 0 then there will be no backups.
     * 
     */
    private Integer recoveryWindowInDays;

    private GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig() {}
    /**
     * @return Backup destination details.
     * 
     */
    public List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails() {
        return this.backupDestinationDetails;
    }
    /**
     * @return Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups. If the number of specified days is 0 then there will be no backups.
     * 
     */
    public Integer recoveryWindowInDays() {
        return this.recoveryWindowInDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails;
        private Integer recoveryWindowInDays;
        public Builder() {}
        public Builder(GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupDestinationDetails = defaults.backupDestinationDetails;
    	      this.recoveryWindowInDays = defaults.recoveryWindowInDays;
        }

        @CustomType.Setter
        public Builder backupDestinationDetails(List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail> backupDestinationDetails) {
            if (backupDestinationDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig", "backupDestinationDetails");
            }
            this.backupDestinationDetails = backupDestinationDetails;
            return this;
        }
        public Builder backupDestinationDetails(GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail... backupDestinationDetails) {
            return backupDestinationDetails(List.of(backupDestinationDetails));
        }
        @CustomType.Setter
        public Builder recoveryWindowInDays(Integer recoveryWindowInDays) {
            if (recoveryWindowInDays == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig", "recoveryWindowInDays");
            }
            this.recoveryWindowInDays = recoveryWindowInDays;
            return this;
        }
        public GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig build() {
            final var _resultValue = new GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig();
            _resultValue.backupDestinationDetails = backupDestinationDetails;
            _resultValue.recoveryWindowInDays = recoveryWindowInDays;
            return _resultValue;
        }
    }
}
