// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabaseBackupConfig;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabaseKeyHistoryEntry;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabaseMaintenanceWindow;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabaseMaintenanceWindowDetail;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousContainerDatabaseResult {
    private String autonomousContainerDatabaseId;
    /**
     * @return **No longer used.** For Autonomous Database on dedicated Exadata infrastructure, the container database is created within a specified `cloudAutonomousVmCluster`.
     * 
     */
    private String autonomousExadataInfrastructureId;
    /**
     * @return The OCID of the Autonomous VM Cluster.
     * 
     */
    private String autonomousVmClusterId;
    /**
     * @return The availability domain of the Autonomous Container Database.
     * 
     */
    private String availabilityDomain;
    /**
     * @return Sum of OCPUs available on the Autonomous VM Cluster + Sum of reclaimable OCPUs available in the Autonomous Container Database.
     * 
     */
    private Double availableCpus;
    /**
     * @return Backup options for the Autonomous Container Database.
     * 
     */
    private List<GetAutonomousContainerDatabaseBackupConfig> backupConfigs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
     * 
     */
    private String cloudAutonomousVmClusterId;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The compute model of the Autonomous VM Cluster. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    private String computeModel;
    /**
     * @return The database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, must start with an alphabetic character and followed by 1 to 7 alphanumeric characters.
     * 
     */
    private String dbName;
    private String dbUniqueName;
    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    private String dbVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-provided name for the Autonomous Container Database.
     * 
     */
    private String displayName;
    private Integer fastStartFailOverLagLimitInSeconds;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    private String id;
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    private String infrastructureType;
    private Boolean isAutomaticFailoverEnabled;
    /**
     * @return Key History Entry.
     * 
     */
    private List<GetAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    private String keyStoreId;
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    private String keyStoreWalletName;
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    private String kmsKeyId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private String lastMaintenanceRunId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    private List<GetAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private List<GetAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows;
    /**
     * @return The amount of memory (in GBs) enabled per each OCPU core in Autonomous VM Cluster.
     * 
     */
    private Integer memoryPerOracleComputeUnitInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private String nextMaintenanceRunId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     * 
     */
    private String patchId;
    /**
     * @return Database patch model preference.
     * 
     */
    private String patchModel;
    private List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs;
    private String peerAutonomousContainerDatabaseCompartmentId;
    private String peerAutonomousContainerDatabaseDisplayName;
    private String peerAutonomousExadataInfrastructureId;
    private String peerAutonomousVmClusterId;
    private String peerCloudAutonomousVmClusterId;
    private String peerDbUniqueName;
    private String protectionMode;
    /**
     * @return An array of CPU values that can be used to successfully provision a single Autonomous Database.
     * 
     */
    private List<Double> provisionableCpuses;
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    private Double reclaimableCpus;
    /**
     * @return The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    private String role;
    private Boolean rotateKeyTrigger;
    /**
     * @return The service level agreement type of the container database. The default is STANDARD.
     * 
     */
    private String serviceLevelAgreementType;
    /**
     * @return The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     * 
     */
    private Integer standbyMaintenanceBufferInDays;
    /**
     * @return The current state of the Autonomous Container Database.
     * 
     */
    private String state;
    /**
     * @return The date and time the Autonomous Container Database was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
     * 
     */
    private String timeSnapshotStandbyRevert;
    /**
     * @return The number of CPU cores allocated to the Autonomous VM cluster.
     * 
     */
    private Integer totalCpus;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    private String vaultId;
    /**
     * @return The next maintenance version preference.
     * 
     */
    private String versionPreference;

    private GetAutonomousContainerDatabaseResult() {}
    public String autonomousContainerDatabaseId() {
        return this.autonomousContainerDatabaseId;
    }
    /**
     * @return **No longer used.** For Autonomous Database on dedicated Exadata infrastructure, the container database is created within a specified `cloudAutonomousVmCluster`.
     * 
     */
    public String autonomousExadataInfrastructureId() {
        return this.autonomousExadataInfrastructureId;
    }
    /**
     * @return The OCID of the Autonomous VM Cluster.
     * 
     */
    public String autonomousVmClusterId() {
        return this.autonomousVmClusterId;
    }
    /**
     * @return The availability domain of the Autonomous Container Database.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Sum of OCPUs available on the Autonomous VM Cluster + Sum of reclaimable OCPUs available in the Autonomous Container Database.
     * 
     */
    public Double availableCpus() {
        return this.availableCpus;
    }
    /**
     * @return Backup options for the Autonomous Container Database.
     * 
     */
    public List<GetAutonomousContainerDatabaseBackupConfig> backupConfigs() {
        return this.backupConfigs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
     * 
     */
    public String cloudAutonomousVmClusterId() {
        return this.cloudAutonomousVmClusterId;
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The compute model of the Autonomous VM Cluster. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    public String computeModel() {
        return this.computeModel;
    }
    /**
     * @return The database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, must start with an alphabetic character and followed by 1 to 7 alphanumeric characters.
     * 
     */
    public String dbName() {
        return this.dbName;
    }
    public String dbUniqueName() {
        return this.dbUniqueName;
    }
    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-provided name for the Autonomous Container Database.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public Integer fastStartFailOverLagLimitInSeconds() {
        return this.fastStartFailOverLagLimitInSeconds;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    public String infrastructureType() {
        return this.infrastructureType;
    }
    public Boolean isAutomaticFailoverEnabled() {
        return this.isAutomaticFailoverEnabled;
    }
    /**
     * @return Key History Entry.
     * 
     */
    public List<GetAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries() {
        return this.keyHistoryEntries;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    public String keyStoreId() {
        return this.keyStoreId;
    }
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    public String keyStoreWalletName() {
        return this.keyStoreWalletName;
    }
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public String lastMaintenanceRunId() {
        return this.lastMaintenanceRunId;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public List<GetAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails() {
        return this.maintenanceWindowDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The amount of memory (in GBs) enabled per each OCPU core in Autonomous VM Cluster.
     * 
     */
    public Integer memoryPerOracleComputeUnitInGbs() {
        return this.memoryPerOracleComputeUnitInGbs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     * 
     */
    public String patchId() {
        return this.patchId;
    }
    /**
     * @return Database patch model preference.
     * 
     */
    public String patchModel() {
        return this.patchModel;
    }
    public List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs() {
        return this.peerAutonomousContainerDatabaseBackupConfigs;
    }
    public String peerAutonomousContainerDatabaseCompartmentId() {
        return this.peerAutonomousContainerDatabaseCompartmentId;
    }
    public String peerAutonomousContainerDatabaseDisplayName() {
        return this.peerAutonomousContainerDatabaseDisplayName;
    }
    public String peerAutonomousExadataInfrastructureId() {
        return this.peerAutonomousExadataInfrastructureId;
    }
    public String peerAutonomousVmClusterId() {
        return this.peerAutonomousVmClusterId;
    }
    public String peerCloudAutonomousVmClusterId() {
        return this.peerCloudAutonomousVmClusterId;
    }
    public String peerDbUniqueName() {
        return this.peerDbUniqueName;
    }
    public String protectionMode() {
        return this.protectionMode;
    }
    /**
     * @return An array of CPU values that can be used to successfully provision a single Autonomous Database.
     * 
     */
    public List<Double> provisionableCpuses() {
        return this.provisionableCpuses;
    }
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    public Double reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    public String role() {
        return this.role;
    }
    public Boolean rotateKeyTrigger() {
        return this.rotateKeyTrigger;
    }
    /**
     * @return The service level agreement type of the container database. The default is STANDARD.
     * 
     */
    public String serviceLevelAgreementType() {
        return this.serviceLevelAgreementType;
    }
    /**
     * @return The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     * 
     */
    public Integer standbyMaintenanceBufferInDays() {
        return this.standbyMaintenanceBufferInDays;
    }
    /**
     * @return The current state of the Autonomous Container Database.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the Autonomous Container Database was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
     * 
     */
    public String timeSnapshotStandbyRevert() {
        return this.timeSnapshotStandbyRevert;
    }
    /**
     * @return The number of CPU cores allocated to the Autonomous VM cluster.
     * 
     */
    public Integer totalCpus() {
        return this.totalCpus;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }
    /**
     * @return The next maintenance version preference.
     * 
     */
    public String versionPreference() {
        return this.versionPreference;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousContainerDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autonomousContainerDatabaseId;
        private String autonomousExadataInfrastructureId;
        private String autonomousVmClusterId;
        private String availabilityDomain;
        private Double availableCpus;
        private List<GetAutonomousContainerDatabaseBackupConfig> backupConfigs;
        private String cloudAutonomousVmClusterId;
        private String compartmentId;
        private String computeModel;
        private String dbName;
        private String dbUniqueName;
        private String dbVersion;
        private Map<String,Object> definedTags;
        private String displayName;
        private Integer fastStartFailOverLagLimitInSeconds;
        private Map<String,Object> freeformTags;
        private String id;
        private String infrastructureType;
        private Boolean isAutomaticFailoverEnabled;
        private List<GetAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries;
        private String keyStoreId;
        private String keyStoreWalletName;
        private String kmsKeyId;
        private String lastMaintenanceRunId;
        private String lifecycleDetails;
        private List<GetAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails;
        private List<GetAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows;
        private Integer memoryPerOracleComputeUnitInGbs;
        private String nextMaintenanceRunId;
        private String patchId;
        private String patchModel;
        private List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs;
        private String peerAutonomousContainerDatabaseCompartmentId;
        private String peerAutonomousContainerDatabaseDisplayName;
        private String peerAutonomousExadataInfrastructureId;
        private String peerAutonomousVmClusterId;
        private String peerCloudAutonomousVmClusterId;
        private String peerDbUniqueName;
        private String protectionMode;
        private List<Double> provisionableCpuses;
        private Double reclaimableCpus;
        private String role;
        private Boolean rotateKeyTrigger;
        private String serviceLevelAgreementType;
        private Integer standbyMaintenanceBufferInDays;
        private String state;
        private String timeCreated;
        private String timeSnapshotStandbyRevert;
        private Integer totalCpus;
        private String vaultId;
        private String versionPreference;
        public Builder() {}
        public Builder(GetAutonomousContainerDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousContainerDatabaseId = defaults.autonomousContainerDatabaseId;
    	      this.autonomousExadataInfrastructureId = defaults.autonomousExadataInfrastructureId;
    	      this.autonomousVmClusterId = defaults.autonomousVmClusterId;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.availableCpus = defaults.availableCpus;
    	      this.backupConfigs = defaults.backupConfigs;
    	      this.cloudAutonomousVmClusterId = defaults.cloudAutonomousVmClusterId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeModel = defaults.computeModel;
    	      this.dbName = defaults.dbName;
    	      this.dbUniqueName = defaults.dbUniqueName;
    	      this.dbVersion = defaults.dbVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.fastStartFailOverLagLimitInSeconds = defaults.fastStartFailOverLagLimitInSeconds;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.isAutomaticFailoverEnabled = defaults.isAutomaticFailoverEnabled;
    	      this.keyHistoryEntries = defaults.keyHistoryEntries;
    	      this.keyStoreId = defaults.keyStoreId;
    	      this.keyStoreWalletName = defaults.keyStoreWalletName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maintenanceWindowDetails = defaults.maintenanceWindowDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.memoryPerOracleComputeUnitInGbs = defaults.memoryPerOracleComputeUnitInGbs;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.patchId = defaults.patchId;
    	      this.patchModel = defaults.patchModel;
    	      this.peerAutonomousContainerDatabaseBackupConfigs = defaults.peerAutonomousContainerDatabaseBackupConfigs;
    	      this.peerAutonomousContainerDatabaseCompartmentId = defaults.peerAutonomousContainerDatabaseCompartmentId;
    	      this.peerAutonomousContainerDatabaseDisplayName = defaults.peerAutonomousContainerDatabaseDisplayName;
    	      this.peerAutonomousExadataInfrastructureId = defaults.peerAutonomousExadataInfrastructureId;
    	      this.peerAutonomousVmClusterId = defaults.peerAutonomousVmClusterId;
    	      this.peerCloudAutonomousVmClusterId = defaults.peerCloudAutonomousVmClusterId;
    	      this.peerDbUniqueName = defaults.peerDbUniqueName;
    	      this.protectionMode = defaults.protectionMode;
    	      this.provisionableCpuses = defaults.provisionableCpuses;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.role = defaults.role;
    	      this.rotateKeyTrigger = defaults.rotateKeyTrigger;
    	      this.serviceLevelAgreementType = defaults.serviceLevelAgreementType;
    	      this.standbyMaintenanceBufferInDays = defaults.standbyMaintenanceBufferInDays;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeSnapshotStandbyRevert = defaults.timeSnapshotStandbyRevert;
    	      this.totalCpus = defaults.totalCpus;
    	      this.vaultId = defaults.vaultId;
    	      this.versionPreference = defaults.versionPreference;
        }

        @CustomType.Setter
        public Builder autonomousContainerDatabaseId(String autonomousContainerDatabaseId) {
            this.autonomousContainerDatabaseId = Objects.requireNonNull(autonomousContainerDatabaseId);
            return this;
        }
        @CustomType.Setter
        public Builder autonomousExadataInfrastructureId(String autonomousExadataInfrastructureId) {
            this.autonomousExadataInfrastructureId = Objects.requireNonNull(autonomousExadataInfrastructureId);
            return this;
        }
        @CustomType.Setter
        public Builder autonomousVmClusterId(String autonomousVmClusterId) {
            this.autonomousVmClusterId = Objects.requireNonNull(autonomousVmClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder availableCpus(Double availableCpus) {
            this.availableCpus = Objects.requireNonNull(availableCpus);
            return this;
        }
        @CustomType.Setter
        public Builder backupConfigs(List<GetAutonomousContainerDatabaseBackupConfig> backupConfigs) {
            this.backupConfigs = Objects.requireNonNull(backupConfigs);
            return this;
        }
        public Builder backupConfigs(GetAutonomousContainerDatabaseBackupConfig... backupConfigs) {
            return backupConfigs(List.of(backupConfigs));
        }
        @CustomType.Setter
        public Builder cloudAutonomousVmClusterId(String cloudAutonomousVmClusterId) {
            this.cloudAutonomousVmClusterId = Objects.requireNonNull(cloudAutonomousVmClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder computeModel(String computeModel) {
            this.computeModel = Objects.requireNonNull(computeModel);
            return this;
        }
        @CustomType.Setter
        public Builder dbName(String dbName) {
            this.dbName = Objects.requireNonNull(dbName);
            return this;
        }
        @CustomType.Setter
        public Builder dbUniqueName(String dbUniqueName) {
            this.dbUniqueName = Objects.requireNonNull(dbUniqueName);
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            this.dbVersion = Objects.requireNonNull(dbVersion);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder fastStartFailOverLagLimitInSeconds(Integer fastStartFailOverLagLimitInSeconds) {
            this.fastStartFailOverLagLimitInSeconds = Objects.requireNonNull(fastStartFailOverLagLimitInSeconds);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureType(String infrastructureType) {
            this.infrastructureType = Objects.requireNonNull(infrastructureType);
            return this;
        }
        @CustomType.Setter
        public Builder isAutomaticFailoverEnabled(Boolean isAutomaticFailoverEnabled) {
            this.isAutomaticFailoverEnabled = Objects.requireNonNull(isAutomaticFailoverEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder keyHistoryEntries(List<GetAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries) {
            this.keyHistoryEntries = Objects.requireNonNull(keyHistoryEntries);
            return this;
        }
        public Builder keyHistoryEntries(GetAutonomousContainerDatabaseKeyHistoryEntry... keyHistoryEntries) {
            return keyHistoryEntries(List.of(keyHistoryEntries));
        }
        @CustomType.Setter
        public Builder keyStoreId(String keyStoreId) {
            this.keyStoreId = Objects.requireNonNull(keyStoreId);
            return this;
        }
        @CustomType.Setter
        public Builder keyStoreWalletName(String keyStoreWalletName) {
            this.keyStoreWalletName = Objects.requireNonNull(keyStoreWalletName);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            this.lastMaintenanceRunId = Objects.requireNonNull(lastMaintenanceRunId);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindowDetails(List<GetAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails) {
            this.maintenanceWindowDetails = Objects.requireNonNull(maintenanceWindowDetails);
            return this;
        }
        public Builder maintenanceWindowDetails(GetAutonomousContainerDatabaseMaintenanceWindowDetail... maintenanceWindowDetails) {
            return maintenanceWindowDetails(List.of(maintenanceWindowDetails));
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows) {
            this.maintenanceWindows = Objects.requireNonNull(maintenanceWindows);
            return this;
        }
        public Builder maintenanceWindows(GetAutonomousContainerDatabaseMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            this.memoryPerOracleComputeUnitInGbs = Objects.requireNonNull(memoryPerOracleComputeUnitInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            this.nextMaintenanceRunId = Objects.requireNonNull(nextMaintenanceRunId);
            return this;
        }
        @CustomType.Setter
        public Builder patchId(String patchId) {
            this.patchId = Objects.requireNonNull(patchId);
            return this;
        }
        @CustomType.Setter
        public Builder patchModel(String patchModel) {
            this.patchModel = Objects.requireNonNull(patchModel);
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseBackupConfigs(List<GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs) {
            this.peerAutonomousContainerDatabaseBackupConfigs = Objects.requireNonNull(peerAutonomousContainerDatabaseBackupConfigs);
            return this;
        }
        public Builder peerAutonomousContainerDatabaseBackupConfigs(GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig... peerAutonomousContainerDatabaseBackupConfigs) {
            return peerAutonomousContainerDatabaseBackupConfigs(List.of(peerAutonomousContainerDatabaseBackupConfigs));
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseCompartmentId(String peerAutonomousContainerDatabaseCompartmentId) {
            this.peerAutonomousContainerDatabaseCompartmentId = Objects.requireNonNull(peerAutonomousContainerDatabaseCompartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseDisplayName(String peerAutonomousContainerDatabaseDisplayName) {
            this.peerAutonomousContainerDatabaseDisplayName = Objects.requireNonNull(peerAutonomousContainerDatabaseDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousExadataInfrastructureId(String peerAutonomousExadataInfrastructureId) {
            this.peerAutonomousExadataInfrastructureId = Objects.requireNonNull(peerAutonomousExadataInfrastructureId);
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousVmClusterId(String peerAutonomousVmClusterId) {
            this.peerAutonomousVmClusterId = Objects.requireNonNull(peerAutonomousVmClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder peerCloudAutonomousVmClusterId(String peerCloudAutonomousVmClusterId) {
            this.peerCloudAutonomousVmClusterId = Objects.requireNonNull(peerCloudAutonomousVmClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder peerDbUniqueName(String peerDbUniqueName) {
            this.peerDbUniqueName = Objects.requireNonNull(peerDbUniqueName);
            return this;
        }
        @CustomType.Setter
        public Builder protectionMode(String protectionMode) {
            this.protectionMode = Objects.requireNonNull(protectionMode);
            return this;
        }
        @CustomType.Setter
        public Builder provisionableCpuses(List<Double> provisionableCpuses) {
            this.provisionableCpuses = Objects.requireNonNull(provisionableCpuses);
            return this;
        }
        public Builder provisionableCpuses(Double... provisionableCpuses) {
            return provisionableCpuses(List.of(provisionableCpuses));
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Double reclaimableCpus) {
            this.reclaimableCpus = Objects.requireNonNull(reclaimableCpus);
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        @CustomType.Setter
        public Builder rotateKeyTrigger(Boolean rotateKeyTrigger) {
            this.rotateKeyTrigger = Objects.requireNonNull(rotateKeyTrigger);
            return this;
        }
        @CustomType.Setter
        public Builder serviceLevelAgreementType(String serviceLevelAgreementType) {
            this.serviceLevelAgreementType = Objects.requireNonNull(serviceLevelAgreementType);
            return this;
        }
        @CustomType.Setter
        public Builder standbyMaintenanceBufferInDays(Integer standbyMaintenanceBufferInDays) {
            this.standbyMaintenanceBufferInDays = Objects.requireNonNull(standbyMaintenanceBufferInDays);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeSnapshotStandbyRevert(String timeSnapshotStandbyRevert) {
            this.timeSnapshotStandbyRevert = Objects.requireNonNull(timeSnapshotStandbyRevert);
            return this;
        }
        @CustomType.Setter
        public Builder totalCpus(Integer totalCpus) {
            this.totalCpus = Objects.requireNonNull(totalCpus);
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            this.vaultId = Objects.requireNonNull(vaultId);
            return this;
        }
        @CustomType.Setter
        public Builder versionPreference(String versionPreference) {
            this.versionPreference = Objects.requireNonNull(versionPreference);
            return this;
        }
        public GetAutonomousContainerDatabaseResult build() {
            final var o = new GetAutonomousContainerDatabaseResult();
            o.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            o.autonomousExadataInfrastructureId = autonomousExadataInfrastructureId;
            o.autonomousVmClusterId = autonomousVmClusterId;
            o.availabilityDomain = availabilityDomain;
            o.availableCpus = availableCpus;
            o.backupConfigs = backupConfigs;
            o.cloudAutonomousVmClusterId = cloudAutonomousVmClusterId;
            o.compartmentId = compartmentId;
            o.computeModel = computeModel;
            o.dbName = dbName;
            o.dbUniqueName = dbUniqueName;
            o.dbVersion = dbVersion;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.fastStartFailOverLagLimitInSeconds = fastStartFailOverLagLimitInSeconds;
            o.freeformTags = freeformTags;
            o.id = id;
            o.infrastructureType = infrastructureType;
            o.isAutomaticFailoverEnabled = isAutomaticFailoverEnabled;
            o.keyHistoryEntries = keyHistoryEntries;
            o.keyStoreId = keyStoreId;
            o.keyStoreWalletName = keyStoreWalletName;
            o.kmsKeyId = kmsKeyId;
            o.lastMaintenanceRunId = lastMaintenanceRunId;
            o.lifecycleDetails = lifecycleDetails;
            o.maintenanceWindowDetails = maintenanceWindowDetails;
            o.maintenanceWindows = maintenanceWindows;
            o.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            o.nextMaintenanceRunId = nextMaintenanceRunId;
            o.patchId = patchId;
            o.patchModel = patchModel;
            o.peerAutonomousContainerDatabaseBackupConfigs = peerAutonomousContainerDatabaseBackupConfigs;
            o.peerAutonomousContainerDatabaseCompartmentId = peerAutonomousContainerDatabaseCompartmentId;
            o.peerAutonomousContainerDatabaseDisplayName = peerAutonomousContainerDatabaseDisplayName;
            o.peerAutonomousExadataInfrastructureId = peerAutonomousExadataInfrastructureId;
            o.peerAutonomousVmClusterId = peerAutonomousVmClusterId;
            o.peerCloudAutonomousVmClusterId = peerCloudAutonomousVmClusterId;
            o.peerDbUniqueName = peerDbUniqueName;
            o.protectionMode = protectionMode;
            o.provisionableCpuses = provisionableCpuses;
            o.reclaimableCpus = reclaimableCpus;
            o.role = role;
            o.rotateKeyTrigger = rotateKeyTrigger;
            o.serviceLevelAgreementType = serviceLevelAgreementType;
            o.standbyMaintenanceBufferInDays = standbyMaintenanceBufferInDays;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeSnapshotStandbyRevert = timeSnapshotStandbyRevert;
            o.totalCpus = totalCpus;
            o.vaultId = vaultId;
            o.versionPreference = versionPreference;
            return o;
        }
    }
}
