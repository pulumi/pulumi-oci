// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousContainerDatabasesAutonomousContainerDatabase {
    /**
     * @return The Autonomous Exadata Infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String autonomousExadataInfrastructureId;
    /**
     * @return The Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String autonomousVmClusterId;
    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    private String availabilityDomain;
    /**
     * @return Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    private Double availableCpus;
    /**
     * @return Backup options for the Autonomous Container Database.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs;
    /**
     * @return The cloud Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String cloudAutonomousVmClusterId;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    private String computeModel;
    private String databaseSoftwareImageId;
    /**
     * @return The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
     * 
     */
    private String dbName;
    /**
     * @return The value above which an Autonomous Database will be split across multiple nodes. This value defaults to 16 when the &#34;CPU per VM&#34; value on the Autonomous VM Cluster is greater than 16. Otherwise, it defaults to the &#34;CPU per VM&#34; value.
     * 
     */
    private Integer dbSplitThreshold;
    private String dbUniqueName;
    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    private String dbVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return This option determines whether to open an Autonomous Database across the maximum number of nodes or the least number of nodes. The default will be for the minimum number of VMs.
     * 
     */
    private String distributionAffinity;
    /**
     * @return DST Time-zone File version of the Autonomous Container Database.
     * 
     */
    private String dstFileVersion;
    private Integer fastStartFailOverLagLimitInSeconds;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    private String id;
    /**
     * @return A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    private String infrastructureType;
    private Boolean isAutomaticFailoverEnabled;
    /**
     * @return Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
     * 
     */
    private Boolean isDstFileUpdateEnabled;
    /**
     * @return Key History Entry.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    private String keyStoreId;
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    private String keyStoreWalletName;
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    private String kmsKeyId;
    /**
     * @return The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
     * 
     */
    private Double largestProvisionableAutonomousDatabaseInCpus;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private String lastMaintenanceRunId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return List of One-Off patches that has been successfully applied to Autonomous Container Database
     * 
     */
    private List<String> listOneOffPatches;
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows;
    /**
     * @return The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
     * &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
     * 
     */
    private Integer memoryPerOracleComputeUnitInGbs;
    /**
     * @return Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
     * ===
     * &gt; &gt; &gt; &gt; &gt; &gt; &gt; 22609d6059 (Added - Support for Oracle Home Version Control - Phase 2 | ADB-D and ADB-C@C)
     * 
     */
    private String netServicesArchitecture;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private String nextMaintenanceRunId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     * 
     */
    private String patchId;
    /**
     * @return Database patch model preference.
     * 
     */
    private String patchModel;
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs;
    private String peerAutonomousContainerDatabaseCompartmentId;
    private String peerAutonomousContainerDatabaseDisplayName;
    private String peerAutonomousExadataInfrastructureId;
    private String peerAutonomousVmClusterId;
    private String peerCloudAutonomousVmClusterId;
    private String peerDbUniqueName;
    private String protectionMode;
    /**
     * @return An array of CPU values that can be used to successfully provision a single Autonomous Database.
     * 
     */
    private List<Double> provisionableCpuses;
    /**
     * @return The number of CPUs provisioned in an Autonomous Container Database.
     * 
     */
    private Double provisionedCpus;
    /**
     * @return CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
     * 
     */
    private Double reclaimableCpus;
    /**
     * @return The number of CPUs reserved in an Autonomous Container Database.
     * 
     */
    private Double reservedCpus;
    /**
     * @return The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    private String role;
    private Boolean rotateKeyTrigger;
    /**
     * @return A filter to return only resources that match the given service level agreement type exactly.
     * 
     */
    private String serviceLevelAgreementType;
    /**
     * @return The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     * 
     */
    private Integer standbyMaintenanceBufferInDays;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private String state;
    /**
     * @return The date and time the Autonomous Container Database was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
     * 
     */
    private String timeOfLastBackup;
    /**
     * @return The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
     * 
     */
    private String timeSnapshotStandbyRevert;
    /**
     * @return The number of CPUs allocated to the Autonomous VM cluster.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model.
     * 
     */
    private Integer totalCpus;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    private String vaultId;
    /**
     * @return The next maintenance version preference.
     * 
     */
    private String versionPreference;
    /**
     * @return The percentage of CPUs to reserve for a single node Autonomous Database, in increments of 25.
     * 
     */
    private Integer vmFailoverReservation;

    private GetAutonomousContainerDatabasesAutonomousContainerDatabase() {}
    /**
     * @return The Autonomous Exadata Infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String autonomousExadataInfrastructureId() {
        return this.autonomousExadataInfrastructureId;
    }
    /**
     * @return The Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String autonomousVmClusterId() {
        return this.autonomousVmClusterId;
    }
    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    public Double availableCpus() {
        return this.availableCpus;
    }
    /**
     * @return Backup options for the Autonomous Container Database.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs() {
        return this.backupConfigs;
    }
    /**
     * @return The cloud Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String cloudAutonomousVmClusterId() {
        return this.cloudAutonomousVmClusterId;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    public String computeModel() {
        return this.computeModel;
    }
    public String databaseSoftwareImageId() {
        return this.databaseSoftwareImageId;
    }
    /**
     * @return The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
     * 
     */
    public String dbName() {
        return this.dbName;
    }
    /**
     * @return The value above which an Autonomous Database will be split across multiple nodes. This value defaults to 16 when the &#34;CPU per VM&#34; value on the Autonomous VM Cluster is greater than 16. Otherwise, it defaults to the &#34;CPU per VM&#34; value.
     * 
     */
    public Integer dbSplitThreshold() {
        return this.dbSplitThreshold;
    }
    public String dbUniqueName() {
        return this.dbUniqueName;
    }
    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return This option determines whether to open an Autonomous Database across the maximum number of nodes or the least number of nodes. The default will be for the minimum number of VMs.
     * 
     */
    public String distributionAffinity() {
        return this.distributionAffinity;
    }
    /**
     * @return DST Time-zone File version of the Autonomous Container Database.
     * 
     */
    public String dstFileVersion() {
        return this.dstFileVersion;
    }
    public Integer fastStartFailOverLagLimitInSeconds() {
        return this.fastStartFailOverLagLimitInSeconds;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    public String infrastructureType() {
        return this.infrastructureType;
    }
    public Boolean isAutomaticFailoverEnabled() {
        return this.isAutomaticFailoverEnabled;
    }
    /**
     * @return Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
     * 
     */
    public Boolean isDstFileUpdateEnabled() {
        return this.isDstFileUpdateEnabled;
    }
    /**
     * @return Key History Entry.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries() {
        return this.keyHistoryEntries;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    public String keyStoreId() {
        return this.keyStoreId;
    }
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    public String keyStoreWalletName() {
        return this.keyStoreWalletName;
    }
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
     * 
     */
    public Double largestProvisionableAutonomousDatabaseInCpus() {
        return this.largestProvisionableAutonomousDatabaseInCpus;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public String lastMaintenanceRunId() {
        return this.lastMaintenanceRunId;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return List of One-Off patches that has been successfully applied to Autonomous Container Database
     * 
     */
    public List<String> listOneOffPatches() {
        return this.listOneOffPatches;
    }
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails() {
        return this.maintenanceWindowDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
     * &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
     * 
     */
    public Integer memoryPerOracleComputeUnitInGbs() {
        return this.memoryPerOracleComputeUnitInGbs;
    }
    /**
     * @return Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
     * ===
     * &gt; &gt; &gt; &gt; &gt; &gt; &gt; 22609d6059 (Added - Support for Oracle Home Version Control - Phase 2 | ADB-D and ADB-C@C)
     * 
     */
    public String netServicesArchitecture() {
        return this.netServicesArchitecture;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     * 
     */
    public String patchId() {
        return this.patchId;
    }
    /**
     * @return Database patch model preference.
     * 
     */
    public String patchModel() {
        return this.patchModel;
    }
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs() {
        return this.peerAutonomousContainerDatabaseBackupConfigs;
    }
    public String peerAutonomousContainerDatabaseCompartmentId() {
        return this.peerAutonomousContainerDatabaseCompartmentId;
    }
    public String peerAutonomousContainerDatabaseDisplayName() {
        return this.peerAutonomousContainerDatabaseDisplayName;
    }
    public String peerAutonomousExadataInfrastructureId() {
        return this.peerAutonomousExadataInfrastructureId;
    }
    public String peerAutonomousVmClusterId() {
        return this.peerAutonomousVmClusterId;
    }
    public String peerCloudAutonomousVmClusterId() {
        return this.peerCloudAutonomousVmClusterId;
    }
    public String peerDbUniqueName() {
        return this.peerDbUniqueName;
    }
    public String protectionMode() {
        return this.protectionMode;
    }
    /**
     * @return An array of CPU values that can be used to successfully provision a single Autonomous Database.
     * 
     */
    public List<Double> provisionableCpuses() {
        return this.provisionableCpuses;
    }
    /**
     * @return The number of CPUs provisioned in an Autonomous Container Database.
     * 
     */
    public Double provisionedCpus() {
        return this.provisionedCpus;
    }
    /**
     * @return CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
     * 
     */
    public Double reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return The number of CPUs reserved in an Autonomous Container Database.
     * 
     */
    public Double reservedCpus() {
        return this.reservedCpus;
    }
    /**
     * @return The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    public String role() {
        return this.role;
    }
    public Boolean rotateKeyTrigger() {
        return this.rotateKeyTrigger;
    }
    /**
     * @return A filter to return only resources that match the given service level agreement type exactly.
     * 
     */
    public String serviceLevelAgreementType() {
        return this.serviceLevelAgreementType;
    }
    /**
     * @return The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     * 
     */
    public Integer standbyMaintenanceBufferInDays() {
        return this.standbyMaintenanceBufferInDays;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the Autonomous Container Database was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
     * 
     */
    public String timeOfLastBackup() {
        return this.timeOfLastBackup;
    }
    /**
     * @return The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
     * 
     */
    public String timeSnapshotStandbyRevert() {
        return this.timeSnapshotStandbyRevert;
    }
    /**
     * @return The number of CPUs allocated to the Autonomous VM cluster.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model.
     * 
     */
    public Integer totalCpus() {
        return this.totalCpus;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }
    /**
     * @return The next maintenance version preference.
     * 
     */
    public String versionPreference() {
        return this.versionPreference;
    }
    /**
     * @return The percentage of CPUs to reserve for a single node Autonomous Database, in increments of 25.
     * 
     */
    public Integer vmFailoverReservation() {
        return this.vmFailoverReservation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousContainerDatabasesAutonomousContainerDatabase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autonomousExadataInfrastructureId;
        private String autonomousVmClusterId;
        private String availabilityDomain;
        private Double availableCpus;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs;
        private String cloudAutonomousVmClusterId;
        private String compartmentId;
        private String computeModel;
        private String databaseSoftwareImageId;
        private String dbName;
        private Integer dbSplitThreshold;
        private String dbUniqueName;
        private String dbVersion;
        private Map<String,Object> definedTags;
        private String displayName;
        private String distributionAffinity;
        private String dstFileVersion;
        private Integer fastStartFailOverLagLimitInSeconds;
        private Map<String,Object> freeformTags;
        private String id;
        private String infrastructureType;
        private Boolean isAutomaticFailoverEnabled;
        private Boolean isDstFileUpdateEnabled;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries;
        private String keyStoreId;
        private String keyStoreWalletName;
        private String kmsKeyId;
        private Double largestProvisionableAutonomousDatabaseInCpus;
        private String lastMaintenanceRunId;
        private String lifecycleDetails;
        private List<String> listOneOffPatches;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows;
        private Integer memoryPerOracleComputeUnitInGbs;
        private String netServicesArchitecture;
        private String nextMaintenanceRunId;
        private String patchId;
        private String patchModel;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs;
        private String peerAutonomousContainerDatabaseCompartmentId;
        private String peerAutonomousContainerDatabaseDisplayName;
        private String peerAutonomousExadataInfrastructureId;
        private String peerAutonomousVmClusterId;
        private String peerCloudAutonomousVmClusterId;
        private String peerDbUniqueName;
        private String protectionMode;
        private List<Double> provisionableCpuses;
        private Double provisionedCpus;
        private Double reclaimableCpus;
        private Double reservedCpus;
        private String role;
        private Boolean rotateKeyTrigger;
        private String serviceLevelAgreementType;
        private Integer standbyMaintenanceBufferInDays;
        private String state;
        private String timeCreated;
        private String timeOfLastBackup;
        private String timeSnapshotStandbyRevert;
        private Integer totalCpus;
        private String vaultId;
        private String versionPreference;
        private Integer vmFailoverReservation;
        public Builder() {}
        public Builder(GetAutonomousContainerDatabasesAutonomousContainerDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousExadataInfrastructureId = defaults.autonomousExadataInfrastructureId;
    	      this.autonomousVmClusterId = defaults.autonomousVmClusterId;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.availableCpus = defaults.availableCpus;
    	      this.backupConfigs = defaults.backupConfigs;
    	      this.cloudAutonomousVmClusterId = defaults.cloudAutonomousVmClusterId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeModel = defaults.computeModel;
    	      this.databaseSoftwareImageId = defaults.databaseSoftwareImageId;
    	      this.dbName = defaults.dbName;
    	      this.dbSplitThreshold = defaults.dbSplitThreshold;
    	      this.dbUniqueName = defaults.dbUniqueName;
    	      this.dbVersion = defaults.dbVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.distributionAffinity = defaults.distributionAffinity;
    	      this.dstFileVersion = defaults.dstFileVersion;
    	      this.fastStartFailOverLagLimitInSeconds = defaults.fastStartFailOverLagLimitInSeconds;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.isAutomaticFailoverEnabled = defaults.isAutomaticFailoverEnabled;
    	      this.isDstFileUpdateEnabled = defaults.isDstFileUpdateEnabled;
    	      this.keyHistoryEntries = defaults.keyHistoryEntries;
    	      this.keyStoreId = defaults.keyStoreId;
    	      this.keyStoreWalletName = defaults.keyStoreWalletName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.largestProvisionableAutonomousDatabaseInCpus = defaults.largestProvisionableAutonomousDatabaseInCpus;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listOneOffPatches = defaults.listOneOffPatches;
    	      this.maintenanceWindowDetails = defaults.maintenanceWindowDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.memoryPerOracleComputeUnitInGbs = defaults.memoryPerOracleComputeUnitInGbs;
    	      this.netServicesArchitecture = defaults.netServicesArchitecture;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.patchId = defaults.patchId;
    	      this.patchModel = defaults.patchModel;
    	      this.peerAutonomousContainerDatabaseBackupConfigs = defaults.peerAutonomousContainerDatabaseBackupConfigs;
    	      this.peerAutonomousContainerDatabaseCompartmentId = defaults.peerAutonomousContainerDatabaseCompartmentId;
    	      this.peerAutonomousContainerDatabaseDisplayName = defaults.peerAutonomousContainerDatabaseDisplayName;
    	      this.peerAutonomousExadataInfrastructureId = defaults.peerAutonomousExadataInfrastructureId;
    	      this.peerAutonomousVmClusterId = defaults.peerAutonomousVmClusterId;
    	      this.peerCloudAutonomousVmClusterId = defaults.peerCloudAutonomousVmClusterId;
    	      this.peerDbUniqueName = defaults.peerDbUniqueName;
    	      this.protectionMode = defaults.protectionMode;
    	      this.provisionableCpuses = defaults.provisionableCpuses;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.role = defaults.role;
    	      this.rotateKeyTrigger = defaults.rotateKeyTrigger;
    	      this.serviceLevelAgreementType = defaults.serviceLevelAgreementType;
    	      this.standbyMaintenanceBufferInDays = defaults.standbyMaintenanceBufferInDays;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfLastBackup = defaults.timeOfLastBackup;
    	      this.timeSnapshotStandbyRevert = defaults.timeSnapshotStandbyRevert;
    	      this.totalCpus = defaults.totalCpus;
    	      this.vaultId = defaults.vaultId;
    	      this.versionPreference = defaults.versionPreference;
    	      this.vmFailoverReservation = defaults.vmFailoverReservation;
        }

        @CustomType.Setter
        public Builder autonomousExadataInfrastructureId(String autonomousExadataInfrastructureId) {
            if (autonomousExadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "autonomousExadataInfrastructureId");
            }
            this.autonomousExadataInfrastructureId = autonomousExadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousVmClusterId(String autonomousVmClusterId) {
            if (autonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "autonomousVmClusterId");
            }
            this.autonomousVmClusterId = autonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder availableCpus(Double availableCpus) {
            if (availableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "availableCpus");
            }
            this.availableCpus = availableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder backupConfigs(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs) {
            if (backupConfigs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "backupConfigs");
            }
            this.backupConfigs = backupConfigs;
            return this;
        }
        public Builder backupConfigs(GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig... backupConfigs) {
            return backupConfigs(List.of(backupConfigs));
        }
        @CustomType.Setter
        public Builder cloudAutonomousVmClusterId(String cloudAutonomousVmClusterId) {
            if (cloudAutonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "cloudAutonomousVmClusterId");
            }
            this.cloudAutonomousVmClusterId = cloudAutonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeModel(String computeModel) {
            if (computeModel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "computeModel");
            }
            this.computeModel = computeModel;
            return this;
        }
        @CustomType.Setter
        public Builder databaseSoftwareImageId(String databaseSoftwareImageId) {
            if (databaseSoftwareImageId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "databaseSoftwareImageId");
            }
            this.databaseSoftwareImageId = databaseSoftwareImageId;
            return this;
        }
        @CustomType.Setter
        public Builder dbName(String dbName) {
            if (dbName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbName");
            }
            this.dbName = dbName;
            return this;
        }
        @CustomType.Setter
        public Builder dbSplitThreshold(Integer dbSplitThreshold) {
            if (dbSplitThreshold == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbSplitThreshold");
            }
            this.dbSplitThreshold = dbSplitThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder dbUniqueName(String dbUniqueName) {
            if (dbUniqueName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbUniqueName");
            }
            this.dbUniqueName = dbUniqueName;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            if (dbVersion == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbVersion");
            }
            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder distributionAffinity(String distributionAffinity) {
            if (distributionAffinity == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "distributionAffinity");
            }
            this.distributionAffinity = distributionAffinity;
            return this;
        }
        @CustomType.Setter
        public Builder dstFileVersion(String dstFileVersion) {
            if (dstFileVersion == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dstFileVersion");
            }
            this.dstFileVersion = dstFileVersion;
            return this;
        }
        @CustomType.Setter
        public Builder fastStartFailOverLagLimitInSeconds(Integer fastStartFailOverLagLimitInSeconds) {
            if (fastStartFailOverLagLimitInSeconds == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "fastStartFailOverLagLimitInSeconds");
            }
            this.fastStartFailOverLagLimitInSeconds = fastStartFailOverLagLimitInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureType(String infrastructureType) {
            if (infrastructureType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "infrastructureType");
            }
            this.infrastructureType = infrastructureType;
            return this;
        }
        @CustomType.Setter
        public Builder isAutomaticFailoverEnabled(Boolean isAutomaticFailoverEnabled) {
            if (isAutomaticFailoverEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "isAutomaticFailoverEnabled");
            }
            this.isAutomaticFailoverEnabled = isAutomaticFailoverEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isDstFileUpdateEnabled(Boolean isDstFileUpdateEnabled) {
            if (isDstFileUpdateEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "isDstFileUpdateEnabled");
            }
            this.isDstFileUpdateEnabled = isDstFileUpdateEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder keyHistoryEntries(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries) {
            if (keyHistoryEntries == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "keyHistoryEntries");
            }
            this.keyHistoryEntries = keyHistoryEntries;
            return this;
        }
        public Builder keyHistoryEntries(GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry... keyHistoryEntries) {
            return keyHistoryEntries(List.of(keyHistoryEntries));
        }
        @CustomType.Setter
        public Builder keyStoreId(String keyStoreId) {
            if (keyStoreId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "keyStoreId");
            }
            this.keyStoreId = keyStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder keyStoreWalletName(String keyStoreWalletName) {
            if (keyStoreWalletName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "keyStoreWalletName");
            }
            this.keyStoreWalletName = keyStoreWalletName;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder largestProvisionableAutonomousDatabaseInCpus(Double largestProvisionableAutonomousDatabaseInCpus) {
            if (largestProvisionableAutonomousDatabaseInCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "largestProvisionableAutonomousDatabaseInCpus");
            }
            this.largestProvisionableAutonomousDatabaseInCpus = largestProvisionableAutonomousDatabaseInCpus;
            return this;
        }
        @CustomType.Setter
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            if (lastMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "lastMaintenanceRunId");
            }
            this.lastMaintenanceRunId = lastMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder listOneOffPatches(List<String> listOneOffPatches) {
            if (listOneOffPatches == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "listOneOffPatches");
            }
            this.listOneOffPatches = listOneOffPatches;
            return this;
        }
        public Builder listOneOffPatches(String... listOneOffPatches) {
            return listOneOffPatches(List.of(listOneOffPatches));
        }
        @CustomType.Setter
        public Builder maintenanceWindowDetails(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails) {
            if (maintenanceWindowDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "maintenanceWindowDetails");
            }
            this.maintenanceWindowDetails = maintenanceWindowDetails;
            return this;
        }
        public Builder maintenanceWindowDetails(GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail... maintenanceWindowDetails) {
            return maintenanceWindowDetails(List.of(maintenanceWindowDetails));
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            if (memoryPerOracleComputeUnitInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "memoryPerOracleComputeUnitInGbs");
            }
            this.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder netServicesArchitecture(String netServicesArchitecture) {
            if (netServicesArchitecture == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "netServicesArchitecture");
            }
            this.netServicesArchitecture = netServicesArchitecture;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            if (nextMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "nextMaintenanceRunId");
            }
            this.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder patchId(String patchId) {
            if (patchId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "patchId");
            }
            this.patchId = patchId;
            return this;
        }
        @CustomType.Setter
        public Builder patchModel(String patchModel) {
            if (patchModel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "patchModel");
            }
            this.patchModel = patchModel;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseBackupConfigs(List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs) {
            if (peerAutonomousContainerDatabaseBackupConfigs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousContainerDatabaseBackupConfigs");
            }
            this.peerAutonomousContainerDatabaseBackupConfigs = peerAutonomousContainerDatabaseBackupConfigs;
            return this;
        }
        public Builder peerAutonomousContainerDatabaseBackupConfigs(GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig... peerAutonomousContainerDatabaseBackupConfigs) {
            return peerAutonomousContainerDatabaseBackupConfigs(List.of(peerAutonomousContainerDatabaseBackupConfigs));
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseCompartmentId(String peerAutonomousContainerDatabaseCompartmentId) {
            if (peerAutonomousContainerDatabaseCompartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousContainerDatabaseCompartmentId");
            }
            this.peerAutonomousContainerDatabaseCompartmentId = peerAutonomousContainerDatabaseCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseDisplayName(String peerAutonomousContainerDatabaseDisplayName) {
            if (peerAutonomousContainerDatabaseDisplayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousContainerDatabaseDisplayName");
            }
            this.peerAutonomousContainerDatabaseDisplayName = peerAutonomousContainerDatabaseDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousExadataInfrastructureId(String peerAutonomousExadataInfrastructureId) {
            if (peerAutonomousExadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousExadataInfrastructureId");
            }
            this.peerAutonomousExadataInfrastructureId = peerAutonomousExadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousVmClusterId(String peerAutonomousVmClusterId) {
            if (peerAutonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousVmClusterId");
            }
            this.peerAutonomousVmClusterId = peerAutonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder peerCloudAutonomousVmClusterId(String peerCloudAutonomousVmClusterId) {
            if (peerCloudAutonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerCloudAutonomousVmClusterId");
            }
            this.peerCloudAutonomousVmClusterId = peerCloudAutonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder peerDbUniqueName(String peerDbUniqueName) {
            if (peerDbUniqueName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerDbUniqueName");
            }
            this.peerDbUniqueName = peerDbUniqueName;
            return this;
        }
        @CustomType.Setter
        public Builder protectionMode(String protectionMode) {
            if (protectionMode == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "protectionMode");
            }
            this.protectionMode = protectionMode;
            return this;
        }
        @CustomType.Setter
        public Builder provisionableCpuses(List<Double> provisionableCpuses) {
            if (provisionableCpuses == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "provisionableCpuses");
            }
            this.provisionableCpuses = provisionableCpuses;
            return this;
        }
        public Builder provisionableCpuses(Double... provisionableCpuses) {
            return provisionableCpuses(List.of(provisionableCpuses));
        }
        @CustomType.Setter
        public Builder provisionedCpus(Double provisionedCpus) {
            if (provisionedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "provisionedCpus");
            }
            this.provisionedCpus = provisionedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Double reclaimableCpus) {
            if (reclaimableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "reclaimableCpus");
            }
            this.reclaimableCpus = reclaimableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(Double reservedCpus) {
            if (reservedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "reservedCpus");
            }
            this.reservedCpus = reservedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "role");
            }
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder rotateKeyTrigger(Boolean rotateKeyTrigger) {
            if (rotateKeyTrigger == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "rotateKeyTrigger");
            }
            this.rotateKeyTrigger = rotateKeyTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLevelAgreementType(String serviceLevelAgreementType) {
            if (serviceLevelAgreementType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "serviceLevelAgreementType");
            }
            this.serviceLevelAgreementType = serviceLevelAgreementType;
            return this;
        }
        @CustomType.Setter
        public Builder standbyMaintenanceBufferInDays(Integer standbyMaintenanceBufferInDays) {
            if (standbyMaintenanceBufferInDays == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "standbyMaintenanceBufferInDays");
            }
            this.standbyMaintenanceBufferInDays = standbyMaintenanceBufferInDays;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfLastBackup(String timeOfLastBackup) {
            if (timeOfLastBackup == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "timeOfLastBackup");
            }
            this.timeOfLastBackup = timeOfLastBackup;
            return this;
        }
        @CustomType.Setter
        public Builder timeSnapshotStandbyRevert(String timeSnapshotStandbyRevert) {
            if (timeSnapshotStandbyRevert == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "timeSnapshotStandbyRevert");
            }
            this.timeSnapshotStandbyRevert = timeSnapshotStandbyRevert;
            return this;
        }
        @CustomType.Setter
        public Builder totalCpus(Integer totalCpus) {
            if (totalCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "totalCpus");
            }
            this.totalCpus = totalCpus;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        @CustomType.Setter
        public Builder versionPreference(String versionPreference) {
            if (versionPreference == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "versionPreference");
            }
            this.versionPreference = versionPreference;
            return this;
        }
        @CustomType.Setter
        public Builder vmFailoverReservation(Integer vmFailoverReservation) {
            if (vmFailoverReservation == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "vmFailoverReservation");
            }
            this.vmFailoverReservation = vmFailoverReservation;
            return this;
        }
        public GetAutonomousContainerDatabasesAutonomousContainerDatabase build() {
            final var _resultValue = new GetAutonomousContainerDatabasesAutonomousContainerDatabase();
            _resultValue.autonomousExadataInfrastructureId = autonomousExadataInfrastructureId;
            _resultValue.autonomousVmClusterId = autonomousVmClusterId;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.availableCpus = availableCpus;
            _resultValue.backupConfigs = backupConfigs;
            _resultValue.cloudAutonomousVmClusterId = cloudAutonomousVmClusterId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeModel = computeModel;
            _resultValue.databaseSoftwareImageId = databaseSoftwareImageId;
            _resultValue.dbName = dbName;
            _resultValue.dbSplitThreshold = dbSplitThreshold;
            _resultValue.dbUniqueName = dbUniqueName;
            _resultValue.dbVersion = dbVersion;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.distributionAffinity = distributionAffinity;
            _resultValue.dstFileVersion = dstFileVersion;
            _resultValue.fastStartFailOverLagLimitInSeconds = fastStartFailOverLagLimitInSeconds;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.infrastructureType = infrastructureType;
            _resultValue.isAutomaticFailoverEnabled = isAutomaticFailoverEnabled;
            _resultValue.isDstFileUpdateEnabled = isDstFileUpdateEnabled;
            _resultValue.keyHistoryEntries = keyHistoryEntries;
            _resultValue.keyStoreId = keyStoreId;
            _resultValue.keyStoreWalletName = keyStoreWalletName;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.largestProvisionableAutonomousDatabaseInCpus = largestProvisionableAutonomousDatabaseInCpus;
            _resultValue.lastMaintenanceRunId = lastMaintenanceRunId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.listOneOffPatches = listOneOffPatches;
            _resultValue.maintenanceWindowDetails = maintenanceWindowDetails;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            _resultValue.netServicesArchitecture = netServicesArchitecture;
            _resultValue.nextMaintenanceRunId = nextMaintenanceRunId;
            _resultValue.patchId = patchId;
            _resultValue.patchModel = patchModel;
            _resultValue.peerAutonomousContainerDatabaseBackupConfigs = peerAutonomousContainerDatabaseBackupConfigs;
            _resultValue.peerAutonomousContainerDatabaseCompartmentId = peerAutonomousContainerDatabaseCompartmentId;
            _resultValue.peerAutonomousContainerDatabaseDisplayName = peerAutonomousContainerDatabaseDisplayName;
            _resultValue.peerAutonomousExadataInfrastructureId = peerAutonomousExadataInfrastructureId;
            _resultValue.peerAutonomousVmClusterId = peerAutonomousVmClusterId;
            _resultValue.peerCloudAutonomousVmClusterId = peerCloudAutonomousVmClusterId;
            _resultValue.peerDbUniqueName = peerDbUniqueName;
            _resultValue.protectionMode = protectionMode;
            _resultValue.provisionableCpuses = provisionableCpuses;
            _resultValue.provisionedCpus = provisionedCpus;
            _resultValue.reclaimableCpus = reclaimableCpus;
            _resultValue.reservedCpus = reservedCpus;
            _resultValue.role = role;
            _resultValue.rotateKeyTrigger = rotateKeyTrigger;
            _resultValue.serviceLevelAgreementType = serviceLevelAgreementType;
            _resultValue.standbyMaintenanceBufferInDays = standbyMaintenanceBufferInDays;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeOfLastBackup = timeOfLastBackup;
            _resultValue.timeSnapshotStandbyRevert = timeSnapshotStandbyRevert;
            _resultValue.totalCpus = totalCpus;
            _resultValue.vaultId = vaultId;
            _resultValue.versionPreference = versionPreference;
            _resultValue.vmFailoverReservation = vmFailoverReservation;
            return _resultValue;
        }
    }
}
