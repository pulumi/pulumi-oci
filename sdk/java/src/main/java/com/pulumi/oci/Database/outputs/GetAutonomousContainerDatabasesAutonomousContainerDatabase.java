// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseAssociatedBackupConfigurationDetail;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupDestinationPropertiesList;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseCustomerContact;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguard;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguardGroupMember;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig;
import com.pulumi.oci.Database.outputs.GetAutonomousContainerDatabasesAutonomousContainerDatabaseRecoveryApplianceDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousContainerDatabasesAutonomousContainerDatabase {
    /**
     * @return A backup config object holds information about preferred backup destinations only. This object holds information about the associated backup destinations, such as secondary backup destinations created for local backups or remote replicated backups.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseAssociatedBackupConfigurationDetail> associatedBackupConfigurationDetails;
    private String autonomousContainerDatabaseBackupId;
    /**
     * @return The Autonomous Exadata Infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String autonomousExadataInfrastructureId;
    /**
     * @return The Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String autonomousVmClusterId;
    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    private String availabilityDomain;
    /**
     * @return Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    private Double availableCpus;
    /**
     * @return Backup options for the Autonomous Container Database.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs;
    /**
     * @return This list describes the backup destination properties associated with the Autonomous Container Database (ACD) &#39;s preferred backup destination. The object at a given index is associated with the destination present at the same index in the backup destination details list of the ACD Backup Configuration.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupDestinationPropertiesList> backupDestinationPropertiesLists;
    /**
     * @return The cloud Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String cloudAutonomousVmClusterId;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    private String computeModel;
    /**
     * @return Customer Contacts. Setting this to an empty list removes all customer contacts.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseCustomerContact> customerContacts;
    private String databaseSoftwareImageId;
    /**
     * @return Array of Dg associations.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguardGroupMember> dataguardGroupMembers;
    /**
     * @return The properties that define Autonomous Container Databases Dataguard.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguard> dataguards;
    /**
     * @return The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
     * 
     */
    private String dbName;
    /**
     * @return The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
     * 
     */
    private Integer dbSplitThreshold;
    private String dbUniqueName;
    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    private String dbVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return Determines whether an Autonomous Database must be opened across the maximum number of nodes or the least number of nodes. By default, Minimum nodes is selected.
     * 
     */
    private String distributionAffinity;
    /**
     * @return DST Time-zone File version of the Autonomous Container Database.
     * 
     */
    private String dstFileVersion;
    private Integer failoverTrigger;
    /**
     * @return The lag time for my preference based on data loss tolerance in seconds.
     * 
     */
    private Integer fastStartFailOverLagLimitInSeconds;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    private String id;
    /**
     * @return A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    private String infrastructureType;
    /**
     * @return Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
     * 
     */
    private Boolean isAutomaticFailoverEnabled;
    /**
     * @return **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    private Boolean isDataGuardEnabled;
    /**
     * @return Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
     * 
     */
    private Boolean isDstFileUpdateEnabled;
    /**
     * @return Indicates if it is multiple standby Autonomous Dataguard
     * 
     */
    private Boolean isMultipleStandby;
    /**
     * @return Key History Entry.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
     * 
     */
    private String keyStoreId;
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    private String keyStoreWalletName;
    private String keyVersionId;
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    private String kmsKeyId;
    /**
     * @return The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     * 
     */
    private String kmsKeyVersionId;
    /**
     * @return The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
     * 
     */
    private Double largestProvisionableAutonomousDatabaseInCpus;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private String lastMaintenanceRunId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return List of One-Off patches that has been successfully applied to Autonomous Container Database
     * 
     */
    private List<String> listOneOffPatches;
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows;
    /**
     * @return The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
     * 
     */
    private Integer memoryPerOracleComputeUnitInGbs;
    /**
     * @return Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
     * 
     */
    private String netServicesArchitecture;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private String nextMaintenanceRunId;
    /**
     * @return The OKV End Point Group name for the Autonomous Container Database.
     * 
     */
    private String okvEndPointGroupName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     * 
     */
    private String patchId;
    /**
     * @return Database patch model preference.
     * 
     */
    private String patchModel;
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs;
    private String peerAutonomousContainerDatabaseCompartmentId;
    private String peerAutonomousContainerDatabaseDisplayName;
    private String peerAutonomousExadataInfrastructureId;
    private String peerAutonomousVmClusterId;
    private String peerCloudAutonomousVmClusterId;
    private String peerDbUniqueName;
    /**
     * @return The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
     * 
     */
    private String protectionMode;
    /**
     * @return An array of CPU values that can be used to successfully provision a single Autonomous Database.
     * 
     */
    private List<Double> provisionableCpuses;
    /**
     * @return The number of CPUs provisioned in an Autonomous Container Database.
     * 
     */
    private Double provisionedCpus;
    /**
     * @return CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
     * 
     */
    private Double reclaimableCpus;
    /**
     * @return Information about the recovery appliance configuration associated with the Autonomous Container Database.
     * 
     */
    private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseRecoveryApplianceDetail> recoveryApplianceDetails;
    private Integer reinstateTrigger;
    /**
     * @return The number of CPUs reserved in an Autonomous Container Database.
     * 
     */
    private Double reservedCpus;
    /**
     * @return The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    private String role;
    private Boolean rotateKeyTrigger;
    /**
     * @return A filter to return only resources that match the given service level agreement type exactly.
     * 
     */
    private String serviceLevelAgreementType;
    private String source;
    /**
     * @return The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     * 
     */
    private Integer standbyMaintenanceBufferInDays;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private String state;
    private Integer switchoverTrigger;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the Autonomous Container Database was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
     * 
     */
    private String timeOfLastBackup;
    /**
     * @return The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
     * 
     */
    private String timeSnapshotStandbyRevert;
    /**
     * @return The number of CPUs allocated to the Autonomous VM cluster.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model.
     * 
     */
    private Integer totalCpus;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    private String vaultId;
    /**
     * @return The next maintenance version preference.
     * 
     */
    private String versionPreference;
    /**
     * @return The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
     * 
     */
    private Integer vmFailoverReservation;

    private GetAutonomousContainerDatabasesAutonomousContainerDatabase() {}
    /**
     * @return A backup config object holds information about preferred backup destinations only. This object holds information about the associated backup destinations, such as secondary backup destinations created for local backups or remote replicated backups.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseAssociatedBackupConfigurationDetail> associatedBackupConfigurationDetails() {
        return this.associatedBackupConfigurationDetails;
    }
    public String autonomousContainerDatabaseBackupId() {
        return this.autonomousContainerDatabaseBackupId;
    }
    /**
     * @return The Autonomous Exadata Infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String autonomousExadataInfrastructureId() {
        return this.autonomousExadataInfrastructureId;
    }
    /**
     * @return The Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String autonomousVmClusterId() {
        return this.autonomousVmClusterId;
    }
    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    public Double availableCpus() {
        return this.availableCpus;
    }
    /**
     * @return Backup options for the Autonomous Container Database.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs() {
        return this.backupConfigs;
    }
    /**
     * @return This list describes the backup destination properties associated with the Autonomous Container Database (ACD) &#39;s preferred backup destination. The object at a given index is associated with the destination present at the same index in the backup destination details list of the ACD Backup Configuration.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupDestinationPropertiesList> backupDestinationPropertiesLists() {
        return this.backupDestinationPropertiesLists;
    }
    /**
     * @return The cloud Autonomous VM Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String cloudAutonomousVmClusterId() {
        return this.cloudAutonomousVmClusterId;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    public String computeModel() {
        return this.computeModel;
    }
    /**
     * @return Customer Contacts. Setting this to an empty list removes all customer contacts.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseCustomerContact> customerContacts() {
        return this.customerContacts;
    }
    public String databaseSoftwareImageId() {
        return this.databaseSoftwareImageId;
    }
    /**
     * @return Array of Dg associations.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguardGroupMember> dataguardGroupMembers() {
        return this.dataguardGroupMembers;
    }
    /**
     * @return The properties that define Autonomous Container Databases Dataguard.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguard> dataguards() {
        return this.dataguards;
    }
    /**
     * @return The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
     * 
     */
    public String dbName() {
        return this.dbName;
    }
    /**
     * @return The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
     * 
     */
    public Integer dbSplitThreshold() {
        return this.dbSplitThreshold;
    }
    public String dbUniqueName() {
        return this.dbUniqueName;
    }
    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Determines whether an Autonomous Database must be opened across the maximum number of nodes or the least number of nodes. By default, Minimum nodes is selected.
     * 
     */
    public String distributionAffinity() {
        return this.distributionAffinity;
    }
    /**
     * @return DST Time-zone File version of the Autonomous Container Database.
     * 
     */
    public String dstFileVersion() {
        return this.dstFileVersion;
    }
    public Integer failoverTrigger() {
        return this.failoverTrigger;
    }
    /**
     * @return The lag time for my preference based on data loss tolerance in seconds.
     * 
     */
    public Integer fastStartFailOverLagLimitInSeconds() {
        return this.fastStartFailOverLagLimitInSeconds;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    public String infrastructureType() {
        return this.infrastructureType;
    }
    /**
     * @return Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
     * 
     */
    public Boolean isAutomaticFailoverEnabled() {
        return this.isAutomaticFailoverEnabled;
    }
    /**
     * @return **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Boolean isDataGuardEnabled() {
        return this.isDataGuardEnabled;
    }
    /**
     * @return Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
     * 
     */
    public Boolean isDstFileUpdateEnabled() {
        return this.isDstFileUpdateEnabled;
    }
    /**
     * @return Indicates if it is multiple standby Autonomous Dataguard
     * 
     */
    public Boolean isMultipleStandby() {
        return this.isMultipleStandby;
    }
    /**
     * @return Key History Entry.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries() {
        return this.keyHistoryEntries;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
     * 
     */
    public String keyStoreId() {
        return this.keyStoreId;
    }
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    public String keyStoreWalletName() {
        return this.keyStoreWalletName;
    }
    public String keyVersionId() {
        return this.keyVersionId;
    }
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     * 
     */
    public String kmsKeyVersionId() {
        return this.kmsKeyVersionId;
    }
    /**
     * @return The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
     * 
     */
    public Double largestProvisionableAutonomousDatabaseInCpus() {
        return this.largestProvisionableAutonomousDatabaseInCpus;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public String lastMaintenanceRunId() {
        return this.lastMaintenanceRunId;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return List of One-Off patches that has been successfully applied to Autonomous Container Database
     * 
     */
    public List<String> listOneOffPatches() {
        return this.listOneOffPatches;
    }
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails() {
        return this.maintenanceWindowDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
     * 
     */
    public Integer memoryPerOracleComputeUnitInGbs() {
        return this.memoryPerOracleComputeUnitInGbs;
    }
    /**
     * @return Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
     * 
     */
    public String netServicesArchitecture() {
        return this.netServicesArchitecture;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The OKV End Point Group name for the Autonomous Container Database.
     * 
     */
    public String okvEndPointGroupName() {
        return this.okvEndPointGroupName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     * 
     */
    public String patchId() {
        return this.patchId;
    }
    /**
     * @return Database patch model preference.
     * 
     */
    public String patchModel() {
        return this.patchModel;
    }
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs() {
        return this.peerAutonomousContainerDatabaseBackupConfigs;
    }
    public String peerAutonomousContainerDatabaseCompartmentId() {
        return this.peerAutonomousContainerDatabaseCompartmentId;
    }
    public String peerAutonomousContainerDatabaseDisplayName() {
        return this.peerAutonomousContainerDatabaseDisplayName;
    }
    public String peerAutonomousExadataInfrastructureId() {
        return this.peerAutonomousExadataInfrastructureId;
    }
    public String peerAutonomousVmClusterId() {
        return this.peerAutonomousVmClusterId;
    }
    public String peerCloudAutonomousVmClusterId() {
        return this.peerCloudAutonomousVmClusterId;
    }
    public String peerDbUniqueName() {
        return this.peerDbUniqueName;
    }
    /**
     * @return The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
     * 
     */
    public String protectionMode() {
        return this.protectionMode;
    }
    /**
     * @return An array of CPU values that can be used to successfully provision a single Autonomous Database.
     * 
     */
    public List<Double> provisionableCpuses() {
        return this.provisionableCpuses;
    }
    /**
     * @return The number of CPUs provisioned in an Autonomous Container Database.
     * 
     */
    public Double provisionedCpus() {
        return this.provisionedCpus;
    }
    /**
     * @return CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
     * 
     */
    public Double reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return Information about the recovery appliance configuration associated with the Autonomous Container Database.
     * 
     */
    public List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseRecoveryApplianceDetail> recoveryApplianceDetails() {
        return this.recoveryApplianceDetails;
    }
    public Integer reinstateTrigger() {
        return this.reinstateTrigger;
    }
    /**
     * @return The number of CPUs reserved in an Autonomous Container Database.
     * 
     */
    public Double reservedCpus() {
        return this.reservedCpus;
    }
    /**
     * @return The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
     * 
     */
    public String role() {
        return this.role;
    }
    public Boolean rotateKeyTrigger() {
        return this.rotateKeyTrigger;
    }
    /**
     * @return A filter to return only resources that match the given service level agreement type exactly.
     * 
     */
    public String serviceLevelAgreementType() {
        return this.serviceLevelAgreementType;
    }
    public String source() {
        return this.source;
    }
    /**
     * @return The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     * 
     */
    public Integer standbyMaintenanceBufferInDays() {
        return this.standbyMaintenanceBufferInDays;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    public Integer switchoverTrigger() {
        return this.switchoverTrigger;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the Autonomous Container Database was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
     * 
     */
    public String timeOfLastBackup() {
        return this.timeOfLastBackup;
    }
    /**
     * @return The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
     * 
     */
    public String timeSnapshotStandbyRevert() {
        return this.timeSnapshotStandbyRevert;
    }
    /**
     * @return The number of CPUs allocated to the Autonomous VM cluster.&lt;br&gt; For Autonomous Databases on Dedicated Exadata Infrastructure, the CPU type (OCPUs or ECPUs) is determined by the parent Autonomous Exadata VM Cluster&#39;s compute model.
     * 
     */
    public Integer totalCpus() {
        return this.totalCpus;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }
    /**
     * @return The next maintenance version preference.
     * 
     */
    public String versionPreference() {
        return this.versionPreference;
    }
    /**
     * @return The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
     * 
     */
    public Integer vmFailoverReservation() {
        return this.vmFailoverReservation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousContainerDatabasesAutonomousContainerDatabase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseAssociatedBackupConfigurationDetail> associatedBackupConfigurationDetails;
        private String autonomousContainerDatabaseBackupId;
        private String autonomousExadataInfrastructureId;
        private String autonomousVmClusterId;
        private String availabilityDomain;
        private Double availableCpus;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupDestinationPropertiesList> backupDestinationPropertiesLists;
        private String cloudAutonomousVmClusterId;
        private String compartmentId;
        private String computeModel;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseCustomerContact> customerContacts;
        private String databaseSoftwareImageId;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguardGroupMember> dataguardGroupMembers;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguard> dataguards;
        private String dbName;
        private Integer dbSplitThreshold;
        private String dbUniqueName;
        private String dbVersion;
        private Map<String,String> definedTags;
        private String displayName;
        private String distributionAffinity;
        private String dstFileVersion;
        private Integer failoverTrigger;
        private Integer fastStartFailOverLagLimitInSeconds;
        private Map<String,String> freeformTags;
        private String id;
        private String infrastructureType;
        private Boolean isAutomaticFailoverEnabled;
        private Boolean isDataGuardEnabled;
        private Boolean isDstFileUpdateEnabled;
        private Boolean isMultipleStandby;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries;
        private String keyStoreId;
        private String keyStoreWalletName;
        private String keyVersionId;
        private String kmsKeyId;
        private String kmsKeyVersionId;
        private Double largestProvisionableAutonomousDatabaseInCpus;
        private String lastMaintenanceRunId;
        private String lifecycleDetails;
        private List<String> listOneOffPatches;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows;
        private Integer memoryPerOracleComputeUnitInGbs;
        private String netServicesArchitecture;
        private String nextMaintenanceRunId;
        private String okvEndPointGroupName;
        private String patchId;
        private String patchModel;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs;
        private String peerAutonomousContainerDatabaseCompartmentId;
        private String peerAutonomousContainerDatabaseDisplayName;
        private String peerAutonomousExadataInfrastructureId;
        private String peerAutonomousVmClusterId;
        private String peerCloudAutonomousVmClusterId;
        private String peerDbUniqueName;
        private String protectionMode;
        private List<Double> provisionableCpuses;
        private Double provisionedCpus;
        private Double reclaimableCpus;
        private List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseRecoveryApplianceDetail> recoveryApplianceDetails;
        private Integer reinstateTrigger;
        private Double reservedCpus;
        private String role;
        private Boolean rotateKeyTrigger;
        private String serviceLevelAgreementType;
        private String source;
        private Integer standbyMaintenanceBufferInDays;
        private String state;
        private Integer switchoverTrigger;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeOfLastBackup;
        private String timeSnapshotStandbyRevert;
        private Integer totalCpus;
        private String vaultId;
        private String versionPreference;
        private Integer vmFailoverReservation;
        public Builder() {}
        public Builder(GetAutonomousContainerDatabasesAutonomousContainerDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedBackupConfigurationDetails = defaults.associatedBackupConfigurationDetails;
    	      this.autonomousContainerDatabaseBackupId = defaults.autonomousContainerDatabaseBackupId;
    	      this.autonomousExadataInfrastructureId = defaults.autonomousExadataInfrastructureId;
    	      this.autonomousVmClusterId = defaults.autonomousVmClusterId;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.availableCpus = defaults.availableCpus;
    	      this.backupConfigs = defaults.backupConfigs;
    	      this.backupDestinationPropertiesLists = defaults.backupDestinationPropertiesLists;
    	      this.cloudAutonomousVmClusterId = defaults.cloudAutonomousVmClusterId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeModel = defaults.computeModel;
    	      this.customerContacts = defaults.customerContacts;
    	      this.databaseSoftwareImageId = defaults.databaseSoftwareImageId;
    	      this.dataguardGroupMembers = defaults.dataguardGroupMembers;
    	      this.dataguards = defaults.dataguards;
    	      this.dbName = defaults.dbName;
    	      this.dbSplitThreshold = defaults.dbSplitThreshold;
    	      this.dbUniqueName = defaults.dbUniqueName;
    	      this.dbVersion = defaults.dbVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.distributionAffinity = defaults.distributionAffinity;
    	      this.dstFileVersion = defaults.dstFileVersion;
    	      this.failoverTrigger = defaults.failoverTrigger;
    	      this.fastStartFailOverLagLimitInSeconds = defaults.fastStartFailOverLagLimitInSeconds;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.isAutomaticFailoverEnabled = defaults.isAutomaticFailoverEnabled;
    	      this.isDataGuardEnabled = defaults.isDataGuardEnabled;
    	      this.isDstFileUpdateEnabled = defaults.isDstFileUpdateEnabled;
    	      this.isMultipleStandby = defaults.isMultipleStandby;
    	      this.keyHistoryEntries = defaults.keyHistoryEntries;
    	      this.keyStoreId = defaults.keyStoreId;
    	      this.keyStoreWalletName = defaults.keyStoreWalletName;
    	      this.keyVersionId = defaults.keyVersionId;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kmsKeyVersionId = defaults.kmsKeyVersionId;
    	      this.largestProvisionableAutonomousDatabaseInCpus = defaults.largestProvisionableAutonomousDatabaseInCpus;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listOneOffPatches = defaults.listOneOffPatches;
    	      this.maintenanceWindowDetails = defaults.maintenanceWindowDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.memoryPerOracleComputeUnitInGbs = defaults.memoryPerOracleComputeUnitInGbs;
    	      this.netServicesArchitecture = defaults.netServicesArchitecture;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.okvEndPointGroupName = defaults.okvEndPointGroupName;
    	      this.patchId = defaults.patchId;
    	      this.patchModel = defaults.patchModel;
    	      this.peerAutonomousContainerDatabaseBackupConfigs = defaults.peerAutonomousContainerDatabaseBackupConfigs;
    	      this.peerAutonomousContainerDatabaseCompartmentId = defaults.peerAutonomousContainerDatabaseCompartmentId;
    	      this.peerAutonomousContainerDatabaseDisplayName = defaults.peerAutonomousContainerDatabaseDisplayName;
    	      this.peerAutonomousExadataInfrastructureId = defaults.peerAutonomousExadataInfrastructureId;
    	      this.peerAutonomousVmClusterId = defaults.peerAutonomousVmClusterId;
    	      this.peerCloudAutonomousVmClusterId = defaults.peerCloudAutonomousVmClusterId;
    	      this.peerDbUniqueName = defaults.peerDbUniqueName;
    	      this.protectionMode = defaults.protectionMode;
    	      this.provisionableCpuses = defaults.provisionableCpuses;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.recoveryApplianceDetails = defaults.recoveryApplianceDetails;
    	      this.reinstateTrigger = defaults.reinstateTrigger;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.role = defaults.role;
    	      this.rotateKeyTrigger = defaults.rotateKeyTrigger;
    	      this.serviceLevelAgreementType = defaults.serviceLevelAgreementType;
    	      this.source = defaults.source;
    	      this.standbyMaintenanceBufferInDays = defaults.standbyMaintenanceBufferInDays;
    	      this.state = defaults.state;
    	      this.switchoverTrigger = defaults.switchoverTrigger;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfLastBackup = defaults.timeOfLastBackup;
    	      this.timeSnapshotStandbyRevert = defaults.timeSnapshotStandbyRevert;
    	      this.totalCpus = defaults.totalCpus;
    	      this.vaultId = defaults.vaultId;
    	      this.versionPreference = defaults.versionPreference;
    	      this.vmFailoverReservation = defaults.vmFailoverReservation;
        }

        @CustomType.Setter
        public Builder associatedBackupConfigurationDetails(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseAssociatedBackupConfigurationDetail> associatedBackupConfigurationDetails) {
            if (associatedBackupConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "associatedBackupConfigurationDetails");
            }
            this.associatedBackupConfigurationDetails = associatedBackupConfigurationDetails;
            return this;
        }
        public Builder associatedBackupConfigurationDetails(GetAutonomousContainerDatabasesAutonomousContainerDatabaseAssociatedBackupConfigurationDetail... associatedBackupConfigurationDetails) {
            return associatedBackupConfigurationDetails(List.of(associatedBackupConfigurationDetails));
        }
        @CustomType.Setter
        public Builder autonomousContainerDatabaseBackupId(String autonomousContainerDatabaseBackupId) {
            if (autonomousContainerDatabaseBackupId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "autonomousContainerDatabaseBackupId");
            }
            this.autonomousContainerDatabaseBackupId = autonomousContainerDatabaseBackupId;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousExadataInfrastructureId(String autonomousExadataInfrastructureId) {
            if (autonomousExadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "autonomousExadataInfrastructureId");
            }
            this.autonomousExadataInfrastructureId = autonomousExadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousVmClusterId(String autonomousVmClusterId) {
            if (autonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "autonomousVmClusterId");
            }
            this.autonomousVmClusterId = autonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder availableCpus(Double availableCpus) {
            if (availableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "availableCpus");
            }
            this.availableCpus = availableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder backupConfigs(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig> backupConfigs) {
            if (backupConfigs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "backupConfigs");
            }
            this.backupConfigs = backupConfigs;
            return this;
        }
        public Builder backupConfigs(GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupConfig... backupConfigs) {
            return backupConfigs(List.of(backupConfigs));
        }
        @CustomType.Setter
        public Builder backupDestinationPropertiesLists(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupDestinationPropertiesList> backupDestinationPropertiesLists) {
            if (backupDestinationPropertiesLists == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "backupDestinationPropertiesLists");
            }
            this.backupDestinationPropertiesLists = backupDestinationPropertiesLists;
            return this;
        }
        public Builder backupDestinationPropertiesLists(GetAutonomousContainerDatabasesAutonomousContainerDatabaseBackupDestinationPropertiesList... backupDestinationPropertiesLists) {
            return backupDestinationPropertiesLists(List.of(backupDestinationPropertiesLists));
        }
        @CustomType.Setter
        public Builder cloudAutonomousVmClusterId(String cloudAutonomousVmClusterId) {
            if (cloudAutonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "cloudAutonomousVmClusterId");
            }
            this.cloudAutonomousVmClusterId = cloudAutonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeModel(String computeModel) {
            if (computeModel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "computeModel");
            }
            this.computeModel = computeModel;
            return this;
        }
        @CustomType.Setter
        public Builder customerContacts(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseCustomerContact> customerContacts) {
            if (customerContacts == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "customerContacts");
            }
            this.customerContacts = customerContacts;
            return this;
        }
        public Builder customerContacts(GetAutonomousContainerDatabasesAutonomousContainerDatabaseCustomerContact... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }
        @CustomType.Setter
        public Builder databaseSoftwareImageId(String databaseSoftwareImageId) {
            if (databaseSoftwareImageId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "databaseSoftwareImageId");
            }
            this.databaseSoftwareImageId = databaseSoftwareImageId;
            return this;
        }
        @CustomType.Setter
        public Builder dataguardGroupMembers(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguardGroupMember> dataguardGroupMembers) {
            if (dataguardGroupMembers == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dataguardGroupMembers");
            }
            this.dataguardGroupMembers = dataguardGroupMembers;
            return this;
        }
        public Builder dataguardGroupMembers(GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguardGroupMember... dataguardGroupMembers) {
            return dataguardGroupMembers(List.of(dataguardGroupMembers));
        }
        @CustomType.Setter
        public Builder dataguards(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguard> dataguards) {
            if (dataguards == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dataguards");
            }
            this.dataguards = dataguards;
            return this;
        }
        public Builder dataguards(GetAutonomousContainerDatabasesAutonomousContainerDatabaseDataguard... dataguards) {
            return dataguards(List.of(dataguards));
        }
        @CustomType.Setter
        public Builder dbName(String dbName) {
            if (dbName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbName");
            }
            this.dbName = dbName;
            return this;
        }
        @CustomType.Setter
        public Builder dbSplitThreshold(Integer dbSplitThreshold) {
            if (dbSplitThreshold == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbSplitThreshold");
            }
            this.dbSplitThreshold = dbSplitThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder dbUniqueName(String dbUniqueName) {
            if (dbUniqueName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbUniqueName");
            }
            this.dbUniqueName = dbUniqueName;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            if (dbVersion == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dbVersion");
            }
            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder distributionAffinity(String distributionAffinity) {
            if (distributionAffinity == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "distributionAffinity");
            }
            this.distributionAffinity = distributionAffinity;
            return this;
        }
        @CustomType.Setter
        public Builder dstFileVersion(String dstFileVersion) {
            if (dstFileVersion == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "dstFileVersion");
            }
            this.dstFileVersion = dstFileVersion;
            return this;
        }
        @CustomType.Setter
        public Builder failoverTrigger(Integer failoverTrigger) {
            if (failoverTrigger == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "failoverTrigger");
            }
            this.failoverTrigger = failoverTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder fastStartFailOverLagLimitInSeconds(Integer fastStartFailOverLagLimitInSeconds) {
            if (fastStartFailOverLagLimitInSeconds == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "fastStartFailOverLagLimitInSeconds");
            }
            this.fastStartFailOverLagLimitInSeconds = fastStartFailOverLagLimitInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureType(String infrastructureType) {
            if (infrastructureType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "infrastructureType");
            }
            this.infrastructureType = infrastructureType;
            return this;
        }
        @CustomType.Setter
        public Builder isAutomaticFailoverEnabled(Boolean isAutomaticFailoverEnabled) {
            if (isAutomaticFailoverEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "isAutomaticFailoverEnabled");
            }
            this.isAutomaticFailoverEnabled = isAutomaticFailoverEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isDataGuardEnabled(Boolean isDataGuardEnabled) {
            if (isDataGuardEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "isDataGuardEnabled");
            }
            this.isDataGuardEnabled = isDataGuardEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isDstFileUpdateEnabled(Boolean isDstFileUpdateEnabled) {
            if (isDstFileUpdateEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "isDstFileUpdateEnabled");
            }
            this.isDstFileUpdateEnabled = isDstFileUpdateEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isMultipleStandby(Boolean isMultipleStandby) {
            if (isMultipleStandby == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "isMultipleStandby");
            }
            this.isMultipleStandby = isMultipleStandby;
            return this;
        }
        @CustomType.Setter
        public Builder keyHistoryEntries(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry> keyHistoryEntries) {
            if (keyHistoryEntries == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "keyHistoryEntries");
            }
            this.keyHistoryEntries = keyHistoryEntries;
            return this;
        }
        public Builder keyHistoryEntries(GetAutonomousContainerDatabasesAutonomousContainerDatabaseKeyHistoryEntry... keyHistoryEntries) {
            return keyHistoryEntries(List.of(keyHistoryEntries));
        }
        @CustomType.Setter
        public Builder keyStoreId(String keyStoreId) {
            if (keyStoreId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "keyStoreId");
            }
            this.keyStoreId = keyStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder keyStoreWalletName(String keyStoreWalletName) {
            if (keyStoreWalletName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "keyStoreWalletName");
            }
            this.keyStoreWalletName = keyStoreWalletName;
            return this;
        }
        @CustomType.Setter
        public Builder keyVersionId(String keyVersionId) {
            if (keyVersionId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "keyVersionId");
            }
            this.keyVersionId = keyVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyVersionId(String kmsKeyVersionId) {
            if (kmsKeyVersionId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "kmsKeyVersionId");
            }
            this.kmsKeyVersionId = kmsKeyVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder largestProvisionableAutonomousDatabaseInCpus(Double largestProvisionableAutonomousDatabaseInCpus) {
            if (largestProvisionableAutonomousDatabaseInCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "largestProvisionableAutonomousDatabaseInCpus");
            }
            this.largestProvisionableAutonomousDatabaseInCpus = largestProvisionableAutonomousDatabaseInCpus;
            return this;
        }
        @CustomType.Setter
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            if (lastMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "lastMaintenanceRunId");
            }
            this.lastMaintenanceRunId = lastMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder listOneOffPatches(List<String> listOneOffPatches) {
            if (listOneOffPatches == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "listOneOffPatches");
            }
            this.listOneOffPatches = listOneOffPatches;
            return this;
        }
        public Builder listOneOffPatches(String... listOneOffPatches) {
            return listOneOffPatches(List.of(listOneOffPatches));
        }
        @CustomType.Setter
        public Builder maintenanceWindowDetails(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail> maintenanceWindowDetails) {
            if (maintenanceWindowDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "maintenanceWindowDetails");
            }
            this.maintenanceWindowDetails = maintenanceWindowDetails;
            return this;
        }
        public Builder maintenanceWindowDetails(GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindowDetail... maintenanceWindowDetails) {
            return maintenanceWindowDetails(List.of(maintenanceWindowDetails));
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetAutonomousContainerDatabasesAutonomousContainerDatabaseMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            if (memoryPerOracleComputeUnitInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "memoryPerOracleComputeUnitInGbs");
            }
            this.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder netServicesArchitecture(String netServicesArchitecture) {
            if (netServicesArchitecture == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "netServicesArchitecture");
            }
            this.netServicesArchitecture = netServicesArchitecture;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            if (nextMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "nextMaintenanceRunId");
            }
            this.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder okvEndPointGroupName(String okvEndPointGroupName) {
            if (okvEndPointGroupName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "okvEndPointGroupName");
            }
            this.okvEndPointGroupName = okvEndPointGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder patchId(String patchId) {
            if (patchId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "patchId");
            }
            this.patchId = patchId;
            return this;
        }
        @CustomType.Setter
        public Builder patchModel(String patchModel) {
            if (patchModel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "patchModel");
            }
            this.patchModel = patchModel;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseBackupConfigs(List<GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig> peerAutonomousContainerDatabaseBackupConfigs) {
            if (peerAutonomousContainerDatabaseBackupConfigs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousContainerDatabaseBackupConfigs");
            }
            this.peerAutonomousContainerDatabaseBackupConfigs = peerAutonomousContainerDatabaseBackupConfigs;
            return this;
        }
        public Builder peerAutonomousContainerDatabaseBackupConfigs(GetAutonomousContainerDatabasesAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig... peerAutonomousContainerDatabaseBackupConfigs) {
            return peerAutonomousContainerDatabaseBackupConfigs(List.of(peerAutonomousContainerDatabaseBackupConfigs));
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseCompartmentId(String peerAutonomousContainerDatabaseCompartmentId) {
            if (peerAutonomousContainerDatabaseCompartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousContainerDatabaseCompartmentId");
            }
            this.peerAutonomousContainerDatabaseCompartmentId = peerAutonomousContainerDatabaseCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousContainerDatabaseDisplayName(String peerAutonomousContainerDatabaseDisplayName) {
            if (peerAutonomousContainerDatabaseDisplayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousContainerDatabaseDisplayName");
            }
            this.peerAutonomousContainerDatabaseDisplayName = peerAutonomousContainerDatabaseDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousExadataInfrastructureId(String peerAutonomousExadataInfrastructureId) {
            if (peerAutonomousExadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousExadataInfrastructureId");
            }
            this.peerAutonomousExadataInfrastructureId = peerAutonomousExadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder peerAutonomousVmClusterId(String peerAutonomousVmClusterId) {
            if (peerAutonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerAutonomousVmClusterId");
            }
            this.peerAutonomousVmClusterId = peerAutonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder peerCloudAutonomousVmClusterId(String peerCloudAutonomousVmClusterId) {
            if (peerCloudAutonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerCloudAutonomousVmClusterId");
            }
            this.peerCloudAutonomousVmClusterId = peerCloudAutonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder peerDbUniqueName(String peerDbUniqueName) {
            if (peerDbUniqueName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "peerDbUniqueName");
            }
            this.peerDbUniqueName = peerDbUniqueName;
            return this;
        }
        @CustomType.Setter
        public Builder protectionMode(String protectionMode) {
            if (protectionMode == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "protectionMode");
            }
            this.protectionMode = protectionMode;
            return this;
        }
        @CustomType.Setter
        public Builder provisionableCpuses(List<Double> provisionableCpuses) {
            if (provisionableCpuses == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "provisionableCpuses");
            }
            this.provisionableCpuses = provisionableCpuses;
            return this;
        }
        public Builder provisionableCpuses(Double... provisionableCpuses) {
            return provisionableCpuses(List.of(provisionableCpuses));
        }
        @CustomType.Setter
        public Builder provisionedCpus(Double provisionedCpus) {
            if (provisionedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "provisionedCpus");
            }
            this.provisionedCpus = provisionedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Double reclaimableCpus) {
            if (reclaimableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "reclaimableCpus");
            }
            this.reclaimableCpus = reclaimableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryApplianceDetails(List<GetAutonomousContainerDatabasesAutonomousContainerDatabaseRecoveryApplianceDetail> recoveryApplianceDetails) {
            if (recoveryApplianceDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "recoveryApplianceDetails");
            }
            this.recoveryApplianceDetails = recoveryApplianceDetails;
            return this;
        }
        public Builder recoveryApplianceDetails(GetAutonomousContainerDatabasesAutonomousContainerDatabaseRecoveryApplianceDetail... recoveryApplianceDetails) {
            return recoveryApplianceDetails(List.of(recoveryApplianceDetails));
        }
        @CustomType.Setter
        public Builder reinstateTrigger(Integer reinstateTrigger) {
            if (reinstateTrigger == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "reinstateTrigger");
            }
            this.reinstateTrigger = reinstateTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(Double reservedCpus) {
            if (reservedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "reservedCpus");
            }
            this.reservedCpus = reservedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "role");
            }
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder rotateKeyTrigger(Boolean rotateKeyTrigger) {
            if (rotateKeyTrigger == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "rotateKeyTrigger");
            }
            this.rotateKeyTrigger = rotateKeyTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLevelAgreementType(String serviceLevelAgreementType) {
            if (serviceLevelAgreementType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "serviceLevelAgreementType");
            }
            this.serviceLevelAgreementType = serviceLevelAgreementType;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "source");
            }
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder standbyMaintenanceBufferInDays(Integer standbyMaintenanceBufferInDays) {
            if (standbyMaintenanceBufferInDays == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "standbyMaintenanceBufferInDays");
            }
            this.standbyMaintenanceBufferInDays = standbyMaintenanceBufferInDays;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder switchoverTrigger(Integer switchoverTrigger) {
            if (switchoverTrigger == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "switchoverTrigger");
            }
            this.switchoverTrigger = switchoverTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfLastBackup(String timeOfLastBackup) {
            if (timeOfLastBackup == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "timeOfLastBackup");
            }
            this.timeOfLastBackup = timeOfLastBackup;
            return this;
        }
        @CustomType.Setter
        public Builder timeSnapshotStandbyRevert(String timeSnapshotStandbyRevert) {
            if (timeSnapshotStandbyRevert == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "timeSnapshotStandbyRevert");
            }
            this.timeSnapshotStandbyRevert = timeSnapshotStandbyRevert;
            return this;
        }
        @CustomType.Setter
        public Builder totalCpus(Integer totalCpus) {
            if (totalCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "totalCpus");
            }
            this.totalCpus = totalCpus;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        @CustomType.Setter
        public Builder versionPreference(String versionPreference) {
            if (versionPreference == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "versionPreference");
            }
            this.versionPreference = versionPreference;
            return this;
        }
        @CustomType.Setter
        public Builder vmFailoverReservation(Integer vmFailoverReservation) {
            if (vmFailoverReservation == null) {
              throw new MissingRequiredPropertyException("GetAutonomousContainerDatabasesAutonomousContainerDatabase", "vmFailoverReservation");
            }
            this.vmFailoverReservation = vmFailoverReservation;
            return this;
        }
        public GetAutonomousContainerDatabasesAutonomousContainerDatabase build() {
            final var _resultValue = new GetAutonomousContainerDatabasesAutonomousContainerDatabase();
            _resultValue.associatedBackupConfigurationDetails = associatedBackupConfigurationDetails;
            _resultValue.autonomousContainerDatabaseBackupId = autonomousContainerDatabaseBackupId;
            _resultValue.autonomousExadataInfrastructureId = autonomousExadataInfrastructureId;
            _resultValue.autonomousVmClusterId = autonomousVmClusterId;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.availableCpus = availableCpus;
            _resultValue.backupConfigs = backupConfigs;
            _resultValue.backupDestinationPropertiesLists = backupDestinationPropertiesLists;
            _resultValue.cloudAutonomousVmClusterId = cloudAutonomousVmClusterId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeModel = computeModel;
            _resultValue.customerContacts = customerContacts;
            _resultValue.databaseSoftwareImageId = databaseSoftwareImageId;
            _resultValue.dataguardGroupMembers = dataguardGroupMembers;
            _resultValue.dataguards = dataguards;
            _resultValue.dbName = dbName;
            _resultValue.dbSplitThreshold = dbSplitThreshold;
            _resultValue.dbUniqueName = dbUniqueName;
            _resultValue.dbVersion = dbVersion;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.distributionAffinity = distributionAffinity;
            _resultValue.dstFileVersion = dstFileVersion;
            _resultValue.failoverTrigger = failoverTrigger;
            _resultValue.fastStartFailOverLagLimitInSeconds = fastStartFailOverLagLimitInSeconds;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.infrastructureType = infrastructureType;
            _resultValue.isAutomaticFailoverEnabled = isAutomaticFailoverEnabled;
            _resultValue.isDataGuardEnabled = isDataGuardEnabled;
            _resultValue.isDstFileUpdateEnabled = isDstFileUpdateEnabled;
            _resultValue.isMultipleStandby = isMultipleStandby;
            _resultValue.keyHistoryEntries = keyHistoryEntries;
            _resultValue.keyStoreId = keyStoreId;
            _resultValue.keyStoreWalletName = keyStoreWalletName;
            _resultValue.keyVersionId = keyVersionId;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.kmsKeyVersionId = kmsKeyVersionId;
            _resultValue.largestProvisionableAutonomousDatabaseInCpus = largestProvisionableAutonomousDatabaseInCpus;
            _resultValue.lastMaintenanceRunId = lastMaintenanceRunId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.listOneOffPatches = listOneOffPatches;
            _resultValue.maintenanceWindowDetails = maintenanceWindowDetails;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            _resultValue.netServicesArchitecture = netServicesArchitecture;
            _resultValue.nextMaintenanceRunId = nextMaintenanceRunId;
            _resultValue.okvEndPointGroupName = okvEndPointGroupName;
            _resultValue.patchId = patchId;
            _resultValue.patchModel = patchModel;
            _resultValue.peerAutonomousContainerDatabaseBackupConfigs = peerAutonomousContainerDatabaseBackupConfigs;
            _resultValue.peerAutonomousContainerDatabaseCompartmentId = peerAutonomousContainerDatabaseCompartmentId;
            _resultValue.peerAutonomousContainerDatabaseDisplayName = peerAutonomousContainerDatabaseDisplayName;
            _resultValue.peerAutonomousExadataInfrastructureId = peerAutonomousExadataInfrastructureId;
            _resultValue.peerAutonomousVmClusterId = peerAutonomousVmClusterId;
            _resultValue.peerCloudAutonomousVmClusterId = peerCloudAutonomousVmClusterId;
            _resultValue.peerDbUniqueName = peerDbUniqueName;
            _resultValue.protectionMode = protectionMode;
            _resultValue.provisionableCpuses = provisionableCpuses;
            _resultValue.provisionedCpus = provisionedCpus;
            _resultValue.reclaimableCpus = reclaimableCpus;
            _resultValue.recoveryApplianceDetails = recoveryApplianceDetails;
            _resultValue.reinstateTrigger = reinstateTrigger;
            _resultValue.reservedCpus = reservedCpus;
            _resultValue.role = role;
            _resultValue.rotateKeyTrigger = rotateKeyTrigger;
            _resultValue.serviceLevelAgreementType = serviceLevelAgreementType;
            _resultValue.source = source;
            _resultValue.standbyMaintenanceBufferInDays = standbyMaintenanceBufferInDays;
            _resultValue.state = state;
            _resultValue.switchoverTrigger = switchoverTrigger;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeOfLastBackup = timeOfLastBackup;
            _resultValue.timeSnapshotStandbyRevert = timeSnapshotStandbyRevert;
            _resultValue.totalCpus = totalCpus;
            _resultValue.vaultId = vaultId;
            _resultValue.versionPreference = versionPreference;
            _resultValue.vmFailoverReservation = vmFailoverReservation;
            return _resultValue;
        }
    }
}
