// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetAutonomousDatabaseBackupsAutonomousDatabaseBackupBackupDestinationDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousDatabaseBackupsAutonomousDatabaseBackup {
    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String autonomousDatabaseId;
    /**
     * @return Backup destination details
     * 
     */
    private @Nullable List<GetAutonomousDatabaseBackupsAutonomousDatabaseBackupBackupDestinationDetail> backupDestinationDetails;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The size of the database in terabytes at the time the backup was taken.
     * 
     */
    private @Nullable Double databaseSizeInTbs;
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    private @Nullable String dbVersion;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether the backup is user-initiated or automatic.
     * 
     */
    private @Nullable Boolean isAutomatic;
    private @Nullable Boolean isLongTermBackup;
    /**
     * @return Indicates whether the backup can be used to restore the associated Autonomous Database.
     * 
     */
    private @Nullable Boolean isRestorable;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    private @Nullable String keyStoreId;
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    private @Nullable String keyStoreWalletName;
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
     * 
     */
    private @Nullable String kmsKeyVersionId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Retention period, in days, for long-term backups
     * 
     */
    private @Nullable Integer retentionPeriodInDays;
    /**
     * @return The backup size in terrabytes (TB).
     * 
     */
    private @Nullable Double sizeInTbs;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private @Nullable String state;
    /**
     * @return Timestamp until when the backup will be available
     * 
     */
    private @Nullable String timeAvailableTill;
    /**
     * @return The date and time the backup completed.
     * 
     */
    private @Nullable String timeEnded;
    /**
     * @return The date and time the backup started.
     * 
     */
    private @Nullable String timeStarted;
    /**
     * @return A filter to return only backups that matches with the given type of Backup.
     * 
     */
    private @Nullable String type;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    private @Nullable String vaultId;

    private GetAutonomousDatabaseBackupsAutonomousDatabaseBackup() {}
    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> autonomousDatabaseId() {
        return Optional.ofNullable(this.autonomousDatabaseId);
    }
    /**
     * @return Backup destination details
     * 
     */
    public List<GetAutonomousDatabaseBackupsAutonomousDatabaseBackupBackupDestinationDetail> backupDestinationDetails() {
        return this.backupDestinationDetails == null ? List.of() : this.backupDestinationDetails;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The size of the database in terabytes at the time the backup was taken.
     * 
     */
    public Optional<Double> databaseSizeInTbs() {
        return Optional.ofNullable(this.databaseSizeInTbs);
    }
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    public Optional<String> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether the backup is user-initiated or automatic.
     * 
     */
    public Optional<Boolean> isAutomatic() {
        return Optional.ofNullable(this.isAutomatic);
    }
    public Optional<Boolean> isLongTermBackup() {
        return Optional.ofNullable(this.isLongTermBackup);
    }
    /**
     * @return Indicates whether the backup can be used to restore the associated Autonomous Database.
     * 
     */
    public Optional<Boolean> isRestorable() {
        return Optional.ofNullable(this.isRestorable);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    public Optional<String> keyStoreId() {
        return Optional.ofNullable(this.keyStoreId);
    }
    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    public Optional<String> keyStoreWalletName() {
        return Optional.ofNullable(this.keyStoreWalletName);
    }
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
     * 
     */
    public Optional<String> kmsKeyVersionId() {
        return Optional.ofNullable(this.kmsKeyVersionId);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Retention period, in days, for long-term backups
     * 
     */
    public Optional<Integer> retentionPeriodInDays() {
        return Optional.ofNullable(this.retentionPeriodInDays);
    }
    /**
     * @return The backup size in terrabytes (TB).
     * 
     */
    public Optional<Double> sizeInTbs() {
        return Optional.ofNullable(this.sizeInTbs);
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Timestamp until when the backup will be available
     * 
     */
    public Optional<String> timeAvailableTill() {
        return Optional.ofNullable(this.timeAvailableTill);
    }
    /**
     * @return The date and time the backup completed.
     * 
     */
    public Optional<String> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }
    /**
     * @return The date and time the backup started.
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }
    /**
     * @return A filter to return only backups that matches with the given type of Backup.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Optional<String> vaultId() {
        return Optional.ofNullable(this.vaultId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabaseBackupsAutonomousDatabaseBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String autonomousDatabaseId;
        private @Nullable List<GetAutonomousDatabaseBackupsAutonomousDatabaseBackupBackupDestinationDetail> backupDestinationDetails;
        private @Nullable String compartmentId;
        private @Nullable Double databaseSizeInTbs;
        private @Nullable String dbVersion;
        private @Nullable String displayName;
        private @Nullable String id;
        private @Nullable Boolean isAutomatic;
        private @Nullable Boolean isLongTermBackup;
        private @Nullable Boolean isRestorable;
        private @Nullable String keyStoreId;
        private @Nullable String keyStoreWalletName;
        private @Nullable String kmsKeyId;
        private @Nullable String kmsKeyVersionId;
        private @Nullable String lifecycleDetails;
        private @Nullable Integer retentionPeriodInDays;
        private @Nullable Double sizeInTbs;
        private @Nullable String state;
        private @Nullable String timeAvailableTill;
        private @Nullable String timeEnded;
        private @Nullable String timeStarted;
        private @Nullable String type;
        private @Nullable String vaultId;
        public Builder() {}
        public Builder(GetAutonomousDatabaseBackupsAutonomousDatabaseBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDatabaseId = defaults.autonomousDatabaseId;
    	      this.backupDestinationDetails = defaults.backupDestinationDetails;
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseSizeInTbs = defaults.databaseSizeInTbs;
    	      this.dbVersion = defaults.dbVersion;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.isAutomatic = defaults.isAutomatic;
    	      this.isLongTermBackup = defaults.isLongTermBackup;
    	      this.isRestorable = defaults.isRestorable;
    	      this.keyStoreId = defaults.keyStoreId;
    	      this.keyStoreWalletName = defaults.keyStoreWalletName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kmsKeyVersionId = defaults.kmsKeyVersionId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.retentionPeriodInDays = defaults.retentionPeriodInDays;
    	      this.sizeInTbs = defaults.sizeInTbs;
    	      this.state = defaults.state;
    	      this.timeAvailableTill = defaults.timeAvailableTill;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
    	      this.type = defaults.type;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder autonomousDatabaseId(@Nullable String autonomousDatabaseId) {
            this.autonomousDatabaseId = autonomousDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder backupDestinationDetails(@Nullable List<GetAutonomousDatabaseBackupsAutonomousDatabaseBackupBackupDestinationDetail> backupDestinationDetails) {
            this.backupDestinationDetails = backupDestinationDetails;
            return this;
        }
        public Builder backupDestinationDetails(GetAutonomousDatabaseBackupsAutonomousDatabaseBackupBackupDestinationDetail... backupDestinationDetails) {
            return backupDestinationDetails(List.of(backupDestinationDetails));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseSizeInTbs(@Nullable Double databaseSizeInTbs) {
            this.databaseSizeInTbs = databaseSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(@Nullable String dbVersion) {
            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutomatic(@Nullable Boolean isAutomatic) {
            this.isAutomatic = isAutomatic;
            return this;
        }
        @CustomType.Setter
        public Builder isLongTermBackup(@Nullable Boolean isLongTermBackup) {
            this.isLongTermBackup = isLongTermBackup;
            return this;
        }
        @CustomType.Setter
        public Builder isRestorable(@Nullable Boolean isRestorable) {
            this.isRestorable = isRestorable;
            return this;
        }
        @CustomType.Setter
        public Builder keyStoreId(@Nullable String keyStoreId) {
            this.keyStoreId = keyStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder keyStoreWalletName(@Nullable String keyStoreWalletName) {
            this.keyStoreWalletName = keyStoreWalletName;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyVersionId(@Nullable String kmsKeyVersionId) {
            this.kmsKeyVersionId = kmsKeyVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriodInDays(@Nullable Integer retentionPeriodInDays) {
            this.retentionPeriodInDays = retentionPeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInTbs(@Nullable Double sizeInTbs) {
            this.sizeInTbs = sizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeAvailableTill(@Nullable String timeAvailableTill) {
            this.timeAvailableTill = timeAvailableTill;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnded(@Nullable String timeEnded) {
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(@Nullable String vaultId) {
            this.vaultId = vaultId;
            return this;
        }
        public GetAutonomousDatabaseBackupsAutonomousDatabaseBackup build() {
            final var o = new GetAutonomousDatabaseBackupsAutonomousDatabaseBackup();
            o.autonomousDatabaseId = autonomousDatabaseId;
            o.backupDestinationDetails = backupDestinationDetails;
            o.compartmentId = compartmentId;
            o.databaseSizeInTbs = databaseSizeInTbs;
            o.dbVersion = dbVersion;
            o.displayName = displayName;
            o.id = id;
            o.isAutomatic = isAutomatic;
            o.isLongTermBackup = isLongTermBackup;
            o.isRestorable = isRestorable;
            o.keyStoreId = keyStoreId;
            o.keyStoreWalletName = keyStoreWalletName;
            o.kmsKeyId = kmsKeyId;
            o.kmsKeyVersionId = kmsKeyVersionId;
            o.lifecycleDetails = lifecycleDetails;
            o.retentionPeriodInDays = retentionPeriodInDays;
            o.sizeInTbs = sizeInTbs;
            o.state = state;
            o.timeAvailableTill = timeAvailableTill;
            o.timeEnded = timeEnded;
            o.timeStarted = timeStarted;
            o.type = type;
            o.vaultId = vaultId;
            return o;
        }
    }
}
