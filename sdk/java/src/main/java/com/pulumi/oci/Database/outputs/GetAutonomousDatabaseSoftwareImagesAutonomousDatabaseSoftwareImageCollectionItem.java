// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem {
    /**
     * @return One-off patches included in the Autonomous Database Software Image
     * 
     */
    private List<String> autonomousDsiOneOffPatches;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return The database version with which the Autonomous Database Software Image is to be built.
     * 
     */
    private String databaseVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database Software Image.
     * 
     */
    private String id;
    /**
     * @return A filter to return only resources that match the given image shape family exactly.
     * 
     */
    private String imageShapeFamily;
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The Release Updates.
     * 
     */
    private String releaseUpdate;
    private String sourceCdbId;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the Autonomous Database Software Image was created.
     * 
     */
    private String timeCreated;

    private GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem() {}
    /**
     * @return One-off patches included in the Autonomous Database Software Image
     * 
     */
    public List<String> autonomousDsiOneOffPatches() {
        return this.autonomousDsiOneOffPatches;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The database version with which the Autonomous Database Software Image is to be built.
     * 
     */
    public String databaseVersion() {
        return this.databaseVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database Software Image.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A filter to return only resources that match the given image shape family exactly.
     * 
     */
    public String imageShapeFamily() {
        return this.imageShapeFamily;
    }
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The Release Updates.
     * 
     */
    public String releaseUpdate() {
        return this.releaseUpdate;
    }
    public String sourceCdbId() {
        return this.sourceCdbId;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the Autonomous Database Software Image was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> autonomousDsiOneOffPatches;
        private String compartmentId;
        private String databaseVersion;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String imageShapeFamily;
        private String lifecycleDetails;
        private String releaseUpdate;
        private String sourceCdbId;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        public Builder() {}
        public Builder(GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDsiOneOffPatches = defaults.autonomousDsiOneOffPatches;
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseVersion = defaults.databaseVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imageShapeFamily = defaults.imageShapeFamily;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.releaseUpdate = defaults.releaseUpdate;
    	      this.sourceCdbId = defaults.sourceCdbId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder autonomousDsiOneOffPatches(List<String> autonomousDsiOneOffPatches) {
            if (autonomousDsiOneOffPatches == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "autonomousDsiOneOffPatches");
            }
            this.autonomousDsiOneOffPatches = autonomousDsiOneOffPatches;
            return this;
        }
        public Builder autonomousDsiOneOffPatches(String... autonomousDsiOneOffPatches) {
            return autonomousDsiOneOffPatches(List.of(autonomousDsiOneOffPatches));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseVersion(String databaseVersion) {
            if (databaseVersion == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "databaseVersion");
            }
            this.databaseVersion = databaseVersion;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageShapeFamily(String imageShapeFamily) {
            if (imageShapeFamily == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "imageShapeFamily");
            }
            this.imageShapeFamily = imageShapeFamily;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder releaseUpdate(String releaseUpdate) {
            if (releaseUpdate == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "releaseUpdate");
            }
            this.releaseUpdate = releaseUpdate;
            return this;
        }
        @CustomType.Setter
        public Builder sourceCdbId(String sourceCdbId) {
            if (sourceCdbId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "sourceCdbId");
            }
            this.sourceCdbId = sourceCdbId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem build() {
            final var _resultValue = new GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollectionItem();
            _resultValue.autonomousDsiOneOffPatches = autonomousDsiOneOffPatches;
            _resultValue.compartmentId = compartmentId;
            _resultValue.databaseVersion = databaseVersion;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.imageShapeFamily = imageShapeFamily;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.releaseUpdate = releaseUpdate;
            _resultValue.sourceCdbId = sourceCdbId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
