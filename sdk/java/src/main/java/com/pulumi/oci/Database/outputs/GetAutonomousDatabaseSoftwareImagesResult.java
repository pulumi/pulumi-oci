// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollection;
import com.pulumi.oci.Database.outputs.GetAutonomousDatabaseSoftwareImagesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousDatabaseSoftwareImagesResult {
    /**
     * @return The list of autonomous_database_software_image_collection.
     * 
     */
    private List<GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollection> autonomousDatabaseSoftwareImageCollections;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The user-friendly name for the Autonomous Database Software Image. The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetAutonomousDatabaseSoftwareImagesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return To what shape the image is meant for.
     * 
     */
    private String imageShapeFamily;
    /**
     * @return The current state of the Autonomous Database Software Image.
     * 
     */
    private @Nullable String state;

    private GetAutonomousDatabaseSoftwareImagesResult() {}
    /**
     * @return The list of autonomous_database_software_image_collection.
     * 
     */
    public List<GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollection> autonomousDatabaseSoftwareImageCollections() {
        return this.autonomousDatabaseSoftwareImageCollections;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The user-friendly name for the Autonomous Database Software Image. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetAutonomousDatabaseSoftwareImagesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return To what shape the image is meant for.
     * 
     */
    public String imageShapeFamily() {
        return this.imageShapeFamily;
    }
    /**
     * @return The current state of the Autonomous Database Software Image.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabaseSoftwareImagesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollection> autonomousDatabaseSoftwareImageCollections;
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetAutonomousDatabaseSoftwareImagesFilter> filters;
        private String id;
        private String imageShapeFamily;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetAutonomousDatabaseSoftwareImagesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDatabaseSoftwareImageCollections = defaults.autonomousDatabaseSoftwareImageCollections;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.imageShapeFamily = defaults.imageShapeFamily;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder autonomousDatabaseSoftwareImageCollections(List<GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollection> autonomousDatabaseSoftwareImageCollections) {
            if (autonomousDatabaseSoftwareImageCollections == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesResult", "autonomousDatabaseSoftwareImageCollections");
            }
            this.autonomousDatabaseSoftwareImageCollections = autonomousDatabaseSoftwareImageCollections;
            return this;
        }
        public Builder autonomousDatabaseSoftwareImageCollections(GetAutonomousDatabaseSoftwareImagesAutonomousDatabaseSoftwareImageCollection... autonomousDatabaseSoftwareImageCollections) {
            return autonomousDatabaseSoftwareImageCollections(List.of(autonomousDatabaseSoftwareImageCollections));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAutonomousDatabaseSoftwareImagesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetAutonomousDatabaseSoftwareImagesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageShapeFamily(String imageShapeFamily) {
            if (imageShapeFamily == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseSoftwareImagesResult", "imageShapeFamily");
            }
            this.imageShapeFamily = imageShapeFamily;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetAutonomousDatabaseSoftwareImagesResult build() {
            final var _resultValue = new GetAutonomousDatabaseSoftwareImagesResult();
            _resultValue.autonomousDatabaseSoftwareImageCollections = autonomousDatabaseSoftwareImageCollections;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.imageShapeFamily = imageShapeFamily;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
