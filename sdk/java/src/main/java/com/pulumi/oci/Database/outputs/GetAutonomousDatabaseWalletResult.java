// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousDatabaseWalletResult {
    /**
     * @deprecated
     * The &#39;data.oci_database_autonomous_database_wallet&#39; resource has been deprecated. Please use &#39;oci_database_autonomous_database_wallet&#39; instead.
     * 
     */
    @Deprecated /* The 'data.oci_database_autonomous_database_wallet' resource has been deprecated. Please use 'oci_database_autonomous_database_wallet' instead. */
    private String autonomousDatabaseId;
    private @Nullable Boolean base64EncodeContent;
    /**
     * @return content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
     * 
     */
    private String content;
    private @Nullable String generateType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String password;

    private GetAutonomousDatabaseWalletResult() {}
    /**
     * @deprecated
     * The &#39;data.oci_database_autonomous_database_wallet&#39; resource has been deprecated. Please use &#39;oci_database_autonomous_database_wallet&#39; instead.
     * 
     */
    @Deprecated /* The 'data.oci_database_autonomous_database_wallet' resource has been deprecated. Please use 'oci_database_autonomous_database_wallet' instead. */
    public String autonomousDatabaseId() {
        return this.autonomousDatabaseId;
    }
    public Optional<Boolean> base64EncodeContent() {
        return Optional.ofNullable(this.base64EncodeContent);
    }
    /**
     * @return content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
     * 
     */
    public String content() {
        return this.content;
    }
    public Optional<String> generateType() {
        return Optional.ofNullable(this.generateType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String password() {
        return this.password;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabaseWalletResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autonomousDatabaseId;
        private @Nullable Boolean base64EncodeContent;
        private String content;
        private @Nullable String generateType;
        private String id;
        private String password;
        public Builder() {}
        public Builder(GetAutonomousDatabaseWalletResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDatabaseId = defaults.autonomousDatabaseId;
    	      this.base64EncodeContent = defaults.base64EncodeContent;
    	      this.content = defaults.content;
    	      this.generateType = defaults.generateType;
    	      this.id = defaults.id;
    	      this.password = defaults.password;
        }

        @CustomType.Setter
        public Builder autonomousDatabaseId(String autonomousDatabaseId) {
            if (autonomousDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseWalletResult", "autonomousDatabaseId");
            }
            this.autonomousDatabaseId = autonomousDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder base64EncodeContent(@Nullable Boolean base64EncodeContent) {

            this.base64EncodeContent = base64EncodeContent;
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseWalletResult", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder generateType(@Nullable String generateType) {

            this.generateType = generateType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseWalletResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseWalletResult", "password");
            }
            this.password = password;
            return this;
        }
        public GetAutonomousDatabaseWalletResult build() {
            final var _resultValue = new GetAutonomousDatabaseWalletResult();
            _resultValue.autonomousDatabaseId = autonomousDatabaseId;
            _resultValue.base64EncodeContent = base64EncodeContent;
            _resultValue.content = content;
            _resultValue.generateType = generateType;
            _resultValue.id = id;
            _resultValue.password = password;
            return _resultValue;
        }
    }
}
