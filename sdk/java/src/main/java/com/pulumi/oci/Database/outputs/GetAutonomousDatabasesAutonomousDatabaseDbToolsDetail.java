// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail {
    /**
     * @return Compute used by database tools.
     * 
     */
    private Double computeCount;
    /**
     * @return Indicates whether tool is enabled.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The max idle time, in minutes, after which the VM used by database tools will be terminated.
     * 
     */
    private Integer maxIdleTimeInMinutes;
    /**
     * @return Name of the day of the week.
     * 
     */
    private String name;

    private GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail() {}
    /**
     * @return Compute used by database tools.
     * 
     */
    public Double computeCount() {
        return this.computeCount;
    }
    /**
     * @return Indicates whether tool is enabled.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The max idle time, in minutes, after which the VM used by database tools will be terminated.
     * 
     */
    public Integer maxIdleTimeInMinutes() {
        return this.maxIdleTimeInMinutes;
    }
    /**
     * @return Name of the day of the week.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double computeCount;
        private Boolean isEnabled;
        private Integer maxIdleTimeInMinutes;
        private String name;
        public Builder() {}
        public Builder(GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeCount = defaults.computeCount;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxIdleTimeInMinutes = defaults.maxIdleTimeInMinutes;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder computeCount(Double computeCount) {
            if (computeCount == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail", "computeCount");
            }
            this.computeCount = computeCount;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxIdleTimeInMinutes(Integer maxIdleTimeInMinutes) {
            if (maxIdleTimeInMinutes == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail", "maxIdleTimeInMinutes");
            }
            this.maxIdleTimeInMinutes = maxIdleTimeInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail", "name");
            }
            this.name = name;
            return this;
        }
        public GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail build() {
            final var _resultValue = new GetAutonomousDatabasesAutonomousDatabaseDbToolsDetail();
            _resultValue.computeCount = computeCount;
            _resultValue.isEnabled = isEnabled;
            _resultValue.maxIdleTimeInMinutes = maxIdleTimeInMinutes;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
