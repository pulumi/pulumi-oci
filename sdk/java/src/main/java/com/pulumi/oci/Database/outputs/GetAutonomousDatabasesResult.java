// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousDatabasesAutonomousDatabase;
import com.pulumi.oci.Database.outputs.GetAutonomousDatabasesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousDatabasesResult {
    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Used only by Autonomous Database on Dedicated Exadata Infrastructure.
     * 
     */
    private @Nullable String autonomousContainerDatabaseId;
    /**
     * @return The list of autonomous_databases.
     * 
     */
    private List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    private @Nullable String dbVersion;
    /**
     * @return The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    private @Nullable String dbWorkload;
    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetAutonomousDatabasesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    private @Nullable String infrastructureType;
    /**
     * @return **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    private @Nullable Boolean isDataGuardEnabled;
    /**
     * @return Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
     * 
     */
    private @Nullable Boolean isFreeTier;
    /**
     * @return Indicates if the Autonomous Database is a refreshable clone.
     * 
     */
    private @Nullable Boolean isRefreshableClone;
    private @Nullable Boolean isResourcePoolLeader;
    private @Nullable String lifecycleStateNotEqualTo;
    /**
     * @return The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String resourcePoolLeaderId;
    /**
     * @return The current state of the Autonomous Database.
     * 
     */
    private @Nullable String state;

    private GetAutonomousDatabasesResult() {}
    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Used only by Autonomous Database on Dedicated Exadata Infrastructure.
     * 
     */
    public Optional<String> autonomousContainerDatabaseId() {
        return Optional.ofNullable(this.autonomousContainerDatabaseId);
    }
    /**
     * @return The list of autonomous_databases.
     * 
     */
    public List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases() {
        return this.autonomousDatabases;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    public Optional<String> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }
    /**
     * @return The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    public Optional<String> dbWorkload() {
        return Optional.ofNullable(this.dbWorkload);
    }
    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetAutonomousDatabasesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    public Optional<String> infrastructureType() {
        return Optional.ofNullable(this.infrastructureType);
    }
    /**
     * @return **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Optional<Boolean> isDataGuardEnabled() {
        return Optional.ofNullable(this.isDataGuardEnabled);
    }
    /**
     * @return Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
     * 
     */
    public Optional<Boolean> isFreeTier() {
        return Optional.ofNullable(this.isFreeTier);
    }
    /**
     * @return Indicates if the Autonomous Database is a refreshable clone.
     * 
     */
    public Optional<Boolean> isRefreshableClone() {
        return Optional.ofNullable(this.isRefreshableClone);
    }
    public Optional<Boolean> isResourcePoolLeader() {
        return Optional.ofNullable(this.isResourcePoolLeader);
    }
    public Optional<String> lifecycleStateNotEqualTo() {
        return Optional.ofNullable(this.lifecycleStateNotEqualTo);
    }
    /**
     * @return The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> resourcePoolLeaderId() {
        return Optional.ofNullable(this.resourcePoolLeaderId);
    }
    /**
     * @return The current state of the Autonomous Database.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabasesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String autonomousContainerDatabaseId;
        private List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases;
        private String compartmentId;
        private @Nullable String dbVersion;
        private @Nullable String dbWorkload;
        private @Nullable String displayName;
        private @Nullable List<GetAutonomousDatabasesFilter> filters;
        private String id;
        private @Nullable String infrastructureType;
        private @Nullable Boolean isDataGuardEnabled;
        private @Nullable Boolean isFreeTier;
        private @Nullable Boolean isRefreshableClone;
        private @Nullable Boolean isResourcePoolLeader;
        private @Nullable String lifecycleStateNotEqualTo;
        private @Nullable String resourcePoolLeaderId;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetAutonomousDatabasesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousContainerDatabaseId = defaults.autonomousContainerDatabaseId;
    	      this.autonomousDatabases = defaults.autonomousDatabases;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbVersion = defaults.dbVersion;
    	      this.dbWorkload = defaults.dbWorkload;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.isDataGuardEnabled = defaults.isDataGuardEnabled;
    	      this.isFreeTier = defaults.isFreeTier;
    	      this.isRefreshableClone = defaults.isRefreshableClone;
    	      this.isResourcePoolLeader = defaults.isResourcePoolLeader;
    	      this.lifecycleStateNotEqualTo = defaults.lifecycleStateNotEqualTo;
    	      this.resourcePoolLeaderId = defaults.resourcePoolLeaderId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder autonomousContainerDatabaseId(@Nullable String autonomousContainerDatabaseId) {

            this.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousDatabases(List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases) {
            if (autonomousDatabases == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabasesResult", "autonomousDatabases");
            }
            this.autonomousDatabases = autonomousDatabases;
            return this;
        }
        public Builder autonomousDatabases(GetAutonomousDatabasesAutonomousDatabase... autonomousDatabases) {
            return autonomousDatabases(List.of(autonomousDatabases));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabasesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(@Nullable String dbVersion) {

            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dbWorkload(@Nullable String dbWorkload) {

            this.dbWorkload = dbWorkload;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAutonomousDatabasesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetAutonomousDatabasesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabasesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureType(@Nullable String infrastructureType) {

            this.infrastructureType = infrastructureType;
            return this;
        }
        @CustomType.Setter
        public Builder isDataGuardEnabled(@Nullable Boolean isDataGuardEnabled) {

            this.isDataGuardEnabled = isDataGuardEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isFreeTier(@Nullable Boolean isFreeTier) {

            this.isFreeTier = isFreeTier;
            return this;
        }
        @CustomType.Setter
        public Builder isRefreshableClone(@Nullable Boolean isRefreshableClone) {

            this.isRefreshableClone = isRefreshableClone;
            return this;
        }
        @CustomType.Setter
        public Builder isResourcePoolLeader(@Nullable Boolean isResourcePoolLeader) {

            this.isResourcePoolLeader = isResourcePoolLeader;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStateNotEqualTo(@Nullable String lifecycleStateNotEqualTo) {

            this.lifecycleStateNotEqualTo = lifecycleStateNotEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder resourcePoolLeaderId(@Nullable String resourcePoolLeaderId) {

            this.resourcePoolLeaderId = resourcePoolLeaderId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetAutonomousDatabasesResult build() {
            final var _resultValue = new GetAutonomousDatabasesResult();
            _resultValue.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            _resultValue.autonomousDatabases = autonomousDatabases;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbVersion = dbVersion;
            _resultValue.dbWorkload = dbWorkload;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.infrastructureType = infrastructureType;
            _resultValue.isDataGuardEnabled = isDataGuardEnabled;
            _resultValue.isFreeTier = isFreeTier;
            _resultValue.isRefreshableClone = isRefreshableClone;
            _resultValue.isResourcePoolLeader = isResourcePoolLeader;
            _resultValue.lifecycleStateNotEqualTo = lifecycleStateNotEqualTo;
            _resultValue.resourcePoolLeaderId = resourcePoolLeaderId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
