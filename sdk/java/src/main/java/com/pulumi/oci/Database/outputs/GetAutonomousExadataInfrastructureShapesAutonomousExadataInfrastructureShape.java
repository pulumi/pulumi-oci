// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape {
    /**
     * @return The maximum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
     * 
     */
    private Integer availableCoreCount;
    /**
     * @return The increment in which core count can be increased or decreased.
     * 
     */
    private Integer coreCountIncrement;
    /**
     * @return The maximum number of nodes available for the shape.
     * 
     */
    private Integer maximumNodeCount;
    /**
     * @return The minimum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
     * 
     */
    private Integer minimumCoreCount;
    /**
     * @return The minimum number of nodes available for the shape.
     * 
     */
    private Integer minimumNodeCount;
    /**
     * @return The name of the shape used for the Autonomous Exadata Infrastructure.
     * 
     */
    private String name;

    private GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape() {}
    /**
     * @return The maximum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
     * 
     */
    public Integer availableCoreCount() {
        return this.availableCoreCount;
    }
    /**
     * @return The increment in which core count can be increased or decreased.
     * 
     */
    public Integer coreCountIncrement() {
        return this.coreCountIncrement;
    }
    /**
     * @return The maximum number of nodes available for the shape.
     * 
     */
    public Integer maximumNodeCount() {
        return this.maximumNodeCount;
    }
    /**
     * @return The minimum number of CPU cores that can be enabled on the Autonomous Exadata Infrastructure.
     * 
     */
    public Integer minimumCoreCount() {
        return this.minimumCoreCount;
    }
    /**
     * @return The minimum number of nodes available for the shape.
     * 
     */
    public Integer minimumNodeCount() {
        return this.minimumNodeCount;
    }
    /**
     * @return The name of the shape used for the Autonomous Exadata Infrastructure.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer availableCoreCount;
        private Integer coreCountIncrement;
        private Integer maximumNodeCount;
        private Integer minimumCoreCount;
        private Integer minimumNodeCount;
        private String name;
        public Builder() {}
        public Builder(GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableCoreCount = defaults.availableCoreCount;
    	      this.coreCountIncrement = defaults.coreCountIncrement;
    	      this.maximumNodeCount = defaults.maximumNodeCount;
    	      this.minimumCoreCount = defaults.minimumCoreCount;
    	      this.minimumNodeCount = defaults.minimumNodeCount;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder availableCoreCount(Integer availableCoreCount) {
            this.availableCoreCount = Objects.requireNonNull(availableCoreCount);
            return this;
        }
        @CustomType.Setter
        public Builder coreCountIncrement(Integer coreCountIncrement) {
            this.coreCountIncrement = Objects.requireNonNull(coreCountIncrement);
            return this;
        }
        @CustomType.Setter
        public Builder maximumNodeCount(Integer maximumNodeCount) {
            this.maximumNodeCount = Objects.requireNonNull(maximumNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder minimumCoreCount(Integer minimumCoreCount) {
            this.minimumCoreCount = Objects.requireNonNull(minimumCoreCount);
            return this;
        }
        @CustomType.Setter
        public Builder minimumNodeCount(Integer minimumNodeCount) {
            this.minimumNodeCount = Objects.requireNonNull(minimumNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape build() {
            final var _resultValue = new GetAutonomousExadataInfrastructureShapesAutonomousExadataInfrastructureShape();
            _resultValue.availableCoreCount = availableCoreCount;
            _resultValue.coreCountIncrement = coreCountIncrement;
            _resultValue.maximumNodeCount = maximumNodeCount;
            _resultValue.minimumCoreCount = minimumCoreCount;
            _resultValue.minimumNodeCount = minimumNodeCount;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
