// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage {
    /**
     * @return list of autonomous container database resource usage per autonomous virtual machine.
     * 
     */
    private List<GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage> autonomousContainerDatabaseVmUsages;
    /**
     * @return CPUs available for provisioning or scaling an Autonomous Database in the Autonomous Container Database.
     * 
     */
    private Double availableCpus;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the Autonomous Container Database. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Container Database.
     * 
     */
    private String id;
    /**
     * @return Largest provisionable ADB in the Autonomous Container Database.
     * 
     */
    private Double largestProvisionableAutonomousDatabaseInCpus;
    /**
     * @return Valid list of provisionable CPUs for Autonomous Database.
     * 
     */
    private List<Double> provisionableCpuses;
    /**
     * @return CPUs / cores assigned to ADBs in the Autonomous Container Database.
     * 
     */
    private Double provisionedCpus;
    /**
     * @return Number of CPUs that are reclaimable or released to the AVMC on Autonomous Container Database restart.
     * 
     */
    private Double reclaimableCpus;
    /**
     * @return CPUs / cores reserved for scalability, resilliency and other overheads. This includes failover, autoscaling and idle instance overhead.
     * 
     */
    private Double reservedCpus;
    /**
     * @return CPUs / cores assigned to the Autonomous Container Database. Sum of provisioned, reserved and reclaimable CPUs/ cores.
     * 
     */
    private Double usedCpus;

    private GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage() {}
    /**
     * @return list of autonomous container database resource usage per autonomous virtual machine.
     * 
     */
    public List<GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage> autonomousContainerDatabaseVmUsages() {
        return this.autonomousContainerDatabaseVmUsages;
    }
    /**
     * @return CPUs available for provisioning or scaling an Autonomous Database in the Autonomous Container Database.
     * 
     */
    public Double availableCpus() {
        return this.availableCpus;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the Autonomous Container Database. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Container Database.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Largest provisionable ADB in the Autonomous Container Database.
     * 
     */
    public Double largestProvisionableAutonomousDatabaseInCpus() {
        return this.largestProvisionableAutonomousDatabaseInCpus;
    }
    /**
     * @return Valid list of provisionable CPUs for Autonomous Database.
     * 
     */
    public List<Double> provisionableCpuses() {
        return this.provisionableCpuses;
    }
    /**
     * @return CPUs / cores assigned to ADBs in the Autonomous Container Database.
     * 
     */
    public Double provisionedCpus() {
        return this.provisionedCpus;
    }
    /**
     * @return Number of CPUs that are reclaimable or released to the AVMC on Autonomous Container Database restart.
     * 
     */
    public Double reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return CPUs / cores reserved for scalability, resilliency and other overheads. This includes failover, autoscaling and idle instance overhead.
     * 
     */
    public Double reservedCpus() {
        return this.reservedCpus;
    }
    /**
     * @return CPUs / cores assigned to the Autonomous Container Database. Sum of provisioned, reserved and reclaimable CPUs/ cores.
     * 
     */
    public Double usedCpus() {
        return this.usedCpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage> autonomousContainerDatabaseVmUsages;
        private Double availableCpus;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Double largestProvisionableAutonomousDatabaseInCpus;
        private List<Double> provisionableCpuses;
        private Double provisionedCpus;
        private Double reclaimableCpus;
        private Double reservedCpus;
        private Double usedCpus;
        public Builder() {}
        public Builder(GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousContainerDatabaseVmUsages = defaults.autonomousContainerDatabaseVmUsages;
    	      this.availableCpus = defaults.availableCpus;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.largestProvisionableAutonomousDatabaseInCpus = defaults.largestProvisionableAutonomousDatabaseInCpus;
    	      this.provisionableCpuses = defaults.provisionableCpuses;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.usedCpus = defaults.usedCpus;
        }

        @CustomType.Setter
        public Builder autonomousContainerDatabaseVmUsages(List<GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage> autonomousContainerDatabaseVmUsages) {
            if (autonomousContainerDatabaseVmUsages == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "autonomousContainerDatabaseVmUsages");
            }
            this.autonomousContainerDatabaseVmUsages = autonomousContainerDatabaseVmUsages;
            return this;
        }
        public Builder autonomousContainerDatabaseVmUsages(GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage... autonomousContainerDatabaseVmUsages) {
            return autonomousContainerDatabaseVmUsages(List.of(autonomousContainerDatabaseVmUsages));
        }
        @CustomType.Setter
        public Builder availableCpus(Double availableCpus) {
            if (availableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "availableCpus");
            }
            this.availableCpus = availableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder largestProvisionableAutonomousDatabaseInCpus(Double largestProvisionableAutonomousDatabaseInCpus) {
            if (largestProvisionableAutonomousDatabaseInCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "largestProvisionableAutonomousDatabaseInCpus");
            }
            this.largestProvisionableAutonomousDatabaseInCpus = largestProvisionableAutonomousDatabaseInCpus;
            return this;
        }
        @CustomType.Setter
        public Builder provisionableCpuses(List<Double> provisionableCpuses) {
            if (provisionableCpuses == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "provisionableCpuses");
            }
            this.provisionableCpuses = provisionableCpuses;
            return this;
        }
        public Builder provisionableCpuses(Double... provisionableCpuses) {
            return provisionableCpuses(List.of(provisionableCpuses));
        }
        @CustomType.Setter
        public Builder provisionedCpus(Double provisionedCpus) {
            if (provisionedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "provisionedCpus");
            }
            this.provisionedCpus = provisionedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Double reclaimableCpus) {
            if (reclaimableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "reclaimableCpus");
            }
            this.reclaimableCpus = reclaimableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(Double reservedCpus) {
            if (reservedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "reservedCpus");
            }
            this.reservedCpus = reservedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder usedCpus(Double usedCpus) {
            if (usedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage", "usedCpus");
            }
            this.usedCpus = usedCpus;
            return this;
        }
        public GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage build() {
            final var _resultValue = new GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsage();
            _resultValue.autonomousContainerDatabaseVmUsages = autonomousContainerDatabaseVmUsages;
            _resultValue.availableCpus = availableCpus;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.largestProvisionableAutonomousDatabaseInCpus = largestProvisionableAutonomousDatabaseInCpus;
            _resultValue.provisionableCpuses = provisionableCpuses;
            _resultValue.provisionedCpus = provisionedCpus;
            _resultValue.reclaimableCpus = reclaimableCpus;
            _resultValue.reservedCpus = reservedCpus;
            _resultValue.usedCpus = usedCpus;
            return _resultValue;
        }
    }
}
